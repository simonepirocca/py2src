{"total_count": 160, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/820", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/820/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/820/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/820", "id": 645078244, "node_id": "MDU6SXNzdWU2NDUwNzgyNDQ=", "number": 820, "title": "AttributeError: 'NoneType' object has no attribute 'access_key'", "user": {"login": "stepango", "id": 1287797, "node_id": "MDQ6VXNlcjEyODc3OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1287797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepango", "html_url": "https://github.com/stepango", "followers_url": "https://api.github.com/users/stepango/followers", "following_url": "https://api.github.com/users/stepango/following{/other_user}", "gists_url": "https://api.github.com/users/stepango/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepango/subscriptions", "organizations_url": "https://api.github.com/users/stepango/orgs", "repos_url": "https://api.github.com/users/stepango/repos", "events_url": "https://api.github.com/users/stepango/events{/privacy}", "received_events_url": "https://api.github.com/users/stepango/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-25T01:29:13Z", "updated_at": "2020-07-22T04:46:32Z", "closed_at": "2020-07-21T18:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nOnce in ~500k requests I randomly got an error \r\n\r\n```\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]: Traceback (most recent call last):\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/aiohttp/web_protocol.py\", line 418, in start\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     resp = await task\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/aiohttp/web_app.py\", line 458, in _handle\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     resp = await handler(request)\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"s3redirect.py\", line 33, in get_presigned_post\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     return web.json_response({'presigned_post': await presigned_post})\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/aiobotocore/signers.py\", line 335, in generate_presigned_post\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     return await post_presigner.generate_presigned_post(\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/aiobotocore/signers.py\", line 277, in generate_presigned_post\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     await self._request_signer.sign(\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/aiobotocore/signers.py\", line 61, in sign\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     auth.add_auth(request)\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:   File \"/home/ubuntu/app/.venv/lib/python3.8/site-packages/botocore/auth.py\", line 828, in add_auth\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]:     fields['AWSAccessKeyId'] = self.credentials.access_key\r\nJun 24 01:23:20 ip-10-162-174-178 pipenv[1483]: AttributeError: 'NoneType' object has no attribute 'access_key'\r\n```\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [x] I have provided `pip freeze` results\r\n- [x] I have provided sample code or detailed way to reproduce\r\n- [ ] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n- [ ] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n- [x] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n\r\n**pip freeze results**\r\naiobotocore==1.0.7\r\naiohttp==3.6.2\r\naioitertools==0.7.0\r\nasync-timeout==3.0.1\r\nattrs==19.3.0\r\nbotocore==1.15.32\r\nchardet==3.0.4\r\ndocutils==0.15.2\r\nflake8==3.8.3\r\nidna==2.9\r\njmespath==0.10.0\r\nmccabe==0.6.1\r\nmore-itertools==8.4.0\r\nmultidict==4.7.6\r\npackaging==20.4\r\npluggy==0.13.1\r\npy==1.8.2\r\npycodestyle==2.6.0\r\npyflakes==2.2.0\r\npyparsing==2.4.7\r\npytest==5.4.3\r\npytest-aiohttp==0.3.0\r\npython-dateutil==2.8.1\r\nsix==1.15.0\r\ntyping-extensions==3.7.4.2\r\nurllib3==1.25.9\r\nwcwidth==0.2.4\r\nwrapt==1.12.1\r\nyarl==1.4.2\r\n**Environment:**\r\n - Python Version: 3.8.3\r\n - OS name and version: Ubuntu 18.04\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\n```\r\nasync def get_presigned_post(request):\r\n    session = aiobotocore.get_session()\r\n    async with session.create_client('s3') as client:\r\n        presigned_post = await client.generate_presigned_post(\r\n                  Bucket=request.match_info['bucket'],\r\n                  Key=request.match_info['key'],\r\n                  ExpiresIn=20*60\r\n                )\r\n        return web.json_response({'presigned_post': presigned_post})\r\n\r\n\r\ndef make_app():\r\n    app = web.Application()\r\n    app.router.add_route('GET', '/presigned_post/{bucket}/{key:.*}', get_presigned_post)\r\n    return app\r\n\r\n\r\nif __name__ == '__main__':\r\n    access_log = logging.getLogger('aiohttp.access')\r\n    access_log.setLevel(logging.DEBUG)\r\n    access_log.addHandler(logging.StreamHandler())\r\n    web.run_app(make_app())\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/818", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/818/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/818/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/818", "id": 640742604, "node_id": "MDU6SXNzdWU2NDA3NDI2MDQ=", "number": 818, "title": "Bump botocore requirement", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-17T21:07:10Z", "updated_at": "2020-08-18T10:28:59Z", "closed_at": "2020-08-18T09:59:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/817", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/817/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/817/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/817/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/817", "id": 640060372, "node_id": "MDU6SXNzdWU2NDAwNjAzNzI=", "number": 817, "title": "get_credentials() raises exception \"object NoneType can't be used in 'await' expression\"", "user": {"login": "igorsobreira", "id": 81175, "node_id": "MDQ6VXNlcjgxMTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/81175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorsobreira", "html_url": "https://github.com/igorsobreira", "followers_url": "https://api.github.com/users/igorsobreira/followers", "following_url": "https://api.github.com/users/igorsobreira/following{/other_user}", "gists_url": "https://api.github.com/users/igorsobreira/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorsobreira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorsobreira/subscriptions", "organizations_url": "https://api.github.com/users/igorsobreira/orgs", "repos_url": "https://api.github.com/users/igorsobreira/repos", "events_url": "https://api.github.com/users/igorsobreira/events{/privacy}", "received_events_url": "https://api.github.com/users/igorsobreira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-17T00:50:06Z", "updated_at": "2020-06-18T01:47:35Z", "closed_at": "2020-06-17T21:05:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`get_credentials` raises an exception:\r\n\r\n    object NoneType can't be used in 'await' expression\r\n\r\n```\r\nTypeError: object NoneType can't be used in 'await' expression\r\n  File \"clips/transfer.py\", line 73, in perform_transfer\r\n    clip_url = coroutines.run(coroutine, timeout=TIMEOUT)\r\n  File \"clips/coroutines.py\", line 28, in run\r\n    return loop.run_until_complete(_run_with_timeout(coro, timeout))\r\n  File \"asyncio/base_events.py\", line 612, in run_until_complete\r\n    return future.result()\r\n  File \"clips/coroutines.py\", line 35, in _run_with_timeout\r\n    return await asyncio.wait_for(coro, timeout)\r\n  File \"asyncio/tasks.py\", line 483, in wait_for\r\n    return fut.result()\r\n  File \"clips/transfer.py\", line 127, in start_transfers\r\n    container_url = await get_container_url(container_name)\r\n  File \"clips/containers.py\", line 14, in get_container_url\r\n    async with aioboto3.client('mediastore') as ms:\r\n  File \"aiobotocore/session.py\", line 19, in __aenter__\r\n    self._client = await self._coro\r\n  File \"aiobotocore/session.py\", line 93, in _create_client\r\n    credentials = await self.get_credentials()\r\n  File \"aiobotocore/session.py\", line 117, in get_credentials\r\n    self._credentials = await (self._components.get_component(\r\n  File \"aiobotocore/credentials.py\", line 787, in load_credentials\r\n    creds = await provider.load()\r\n```\r\n\r\ninspecting the exception above, provider instance on `provider.load()` is [SSOProvider, a recent addition in botocore](https://github.com/boto/botocore/commit/50e684025f0a7691eaa538a4c7bd55c50e56403c)\r\n\r\nThis happens with botocore 1.17.4. Downgrading to aiobotocore 1.16.26 works as usual.\r\n\r\nIt can be an issue with this new provider from botocore, but it could also indicate we can improve error handling when trying multiple providers:\r\nhttps://github.com/aio-libs/aiobotocore/blob/ec0b676eeaa76ce9e181f3327058b0019bf0073b/aiobotocore/credentials.py#L787-L789\r\n\r\n**Environment:**\r\n - Python Version: 3.8.1\r\n - aiobotocore 1.0.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/815", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/815/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/815/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/815", "id": 631190648, "node_id": "MDU6SXNzdWU2MzExOTA2NDg=", "number": 815, "title": "generate_db_auth_token TypeError: 'coroutine' object is not subscriptable", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-04T22:39:34Z", "updated_at": "2020-06-05T05:33:34Z", "closed_at": "2020-06-05T05:33:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nFreeze output is below.\r\n\r\nThis used to work with:\r\n\r\naiobotocore[boto3]<0.12\r\n\r\n```\r\nimport aiobotocore\r\n\r\nsession = aiobotocore.get_session()\r\nasync with session.create_client('rds', region_name='us-west-2') as client:\r\n  token = client.generate_db_auth_token('hostname', 3306, 'admin')\r\n```\r\n\r\n```\r\n  File \"/.venv/lib64/python3.6/dist-packages/botocore/signers.py\", line 455, in generate_db_auth_token\r\n    return presigned_url[len(scheme):]\r\nTypeError: 'coroutine' object is not subscriptable\r\n```\r\n\r\n**Checklist**\r\n- [X] I have reproduced in environment where `pip check` passes without errors\r\n- [X] I have provided `pip freeze` results\r\n- [X] I have provided sample code or detailed way to reproduce\r\n- [ ] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n- [X] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n- [X] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n\r\n**pip freeze results**\r\n\r\n**Environment:**\r\n - Python Version: 3.6.5\r\n - OS name and version: darwin Mojave\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\n```\r\naiobotocore==1.0.6 \\\r\n    --hash=sha256:3a56a8b11992162f3560e8fc4d7ef2427c00999b23a26d3a484046a801236f40 \\\r\n    --hash=sha256:544b92825f0c4b8d1a16b0183fc1105a1575372c58180711f8b4f6f05bde44f2\r\naiohttp==3.6.2 \\\r\n    --hash=sha256:1e984191d1ec186881ffaed4581092ba04f7c61582a177b187d3a2f07ed9719e \\\r\n    --hash=sha256:259ab809ff0727d0e834ac5e8a283dc5e3e0ecc30c4d80b3cd17a4139ce1f326 \\\r\n    --hash=sha256:2f4d1a4fdce595c947162333353d4a44952a724fba9ca3205a3df99a33d1307a \\\r\n    --hash=sha256:32e5f3b7e511aa850829fbe5aa32eb455e5534eaa4b1ce93231d00e2f76e5654 \\\r\n    --hash=sha256:344c780466b73095a72c616fac5ea9c4665add7fc129f285fbdbca3cccf4612a \\\r\n    --hash=sha256:460bd4237d2dbecc3b5ed57e122992f60188afe46e7319116da5eb8a9dfedba4 \\\r\n    --hash=sha256:4c6efd824d44ae697814a2a85604d8e992b875462c6655da161ff18fd4f29f17 \\\r\n    --hash=sha256:50aaad128e6ac62e7bf7bd1f0c0a24bc968a0c0590a726d5a955af193544bcec \\\r\n    --hash=sha256:6206a135d072f88da3e71cc501c59d5abffa9d0bb43269a6dcd28d66bfafdbdd \\\r\n    --hash=sha256:65f31b622af739a802ca6fd1a3076fd0ae523f8485c52924a89561ba10c49b48 \\\r\n    --hash=sha256:ae55bac364c405caa23a4f2d6cfecc6a0daada500274ffca4a9230e7129eac59 \\\r\n    --hash=sha256:b778ce0c909a2653741cb4b1ac7015b5c130ab9c897611df43ae6a58523cb965\r\naiohttp-debugtoolbar==0.6.0 \\\r\n    --hash=sha256:e94c3fff7a49eb33d32c7b5b2e268fbd97c5bfca40128965f839c4815359c05a \\\r\n    --hash=sha256:ec231661133b40136608d39dfb688e7ea0c3d47b6ae6dee52d5bf24ceb9e4d45\r\naiohttp-jinja2==1.2.0 \\\r\n    --hash=sha256:2dfe29cfd278d07cd0a851afb98471bc8ce2a830968443e40d67636f3c035d79 \\\r\n    --hash=sha256:3b4dfe1bfd5542e254a769c18cb58d62f7f92755fec127e38d0da3436900b240\r\naiohttp_security==0.4.0 \\\r\n    --hash=sha256:0bd0ffbe2195c6f79378f24fb89fa19de62c747ab8f1c4df690fada7f8b45834 \\\r\n    --hash=sha256:40d4bb150454e392c2dfa3620f6eab28e140e94cf0c2d3b4bf43aef653ec9405\r\naiohttp-swagger==1.0.14 \\\r\n    --hash=sha256:c8dcee52e1fdcd788492466553e5b8b7d35ddfc28aae0eecc212de2ff48688f9\r\naioitertools==0.7.0 \\\r\n    --hash=sha256:341cb05a0903177ef1b73d4cc12c92aee18e81c364e0138f4efc7ec3c47b8177 \\\r\n    --hash=sha256:e931a2f0dcabd4a8446b5cc2fc71b8bb14716e6adf37728a70869213f1f741cd\r\naiomysql==0.0.20 \\\r\n    --hash=sha256:5fd798481f16625b424eec765c56d712ac78a51f3bd0175a3de94107aae43307 \\\r\n    --hash=sha256:d89ce25d44dadb43cf2d9e4603bd67b7a0ad12d5e67208de013629ba648df2ba\r\nasync-timeout==3.0.1 \\\r\n    --hash=sha256:0c3c816a028d47f659d6ff5c745cb2acf1f966da1fe5c19c77a70282b25f4c5f \\\r\n    --hash=sha256:4291ca197d287d274d0b6cb5d6f8f8f82d434ed288f962539ff18cc9012f9ea3\r\nattrs==19.3.0 \\\r\n    --hash=sha256:08a96c641c3a74e44eb59afb61a24f2cb9f4d7188748e76ba4bb5edfa3cb7d1c \\\r\n    --hash=sha256:f7b7ce16570fe9965acd6d30101a28f62fb4a7f9e926b3bbc9b61f8b04247e72\r\nbackoff==1.10.0 \\\r\n    --hash=sha256:5e73e2cbe780e1915a204799dba0a01896f45f4385e636bcca7a0614d879d0cd \\\r\n    --hash=sha256:b8fba021fac74055ac05eb7c7bfce4723aedde6cd0a504e5326bcb0bdd6d19a4\r\nboto3==1.12.32 \\\r\n    --hash=sha256:57398de1b5e074e715c866441e69f90c9468959d5743a021d8aeed04fbaa1078 \\\r\n    --hash=sha256:60ac1124597231ed36a7320547cd0d16a001bb92333ab30ad20514f77e585225\r\nbotocore==1.15.32 \\\r\n    --hash=sha256:3ea89601ee452b65084005278bd832be854cfde5166685dcb14b6c8f19d3fc6d \\\r\n    --hash=sha256:a963af564d94107787ff3d2c534e8b7aed7f12e014cdd609f8fcb17bf9d9b19a\r\ncchardet==2.1.6 \\\r\n    --hash=sha256:0f6e4e464e332da776b9c1a34e4e83b6301d38c2724efc93848c46ade66d02bb \\\r\n    --hash=sha256:217a7008bd399bdb61f6a0a2570acc5c3a9f96140e0a0d089b9e748c4d4e4c4e \\\r\n    --hash=sha256:27b0f23088873d1dd36d2c8a2e45c9167e312e1aac7e4baeb47f7428a2669638 \\\r\n    --hash=sha256:2a958fb093f69ee5f16be7a1aee5122e07aff4350fa4dc9b953b87c34468e605 \\\r\n    --hash=sha256:2aa1b008965c703ad6597361b0f6d427c8971fe94a2c99ec3724c228ae50d6a6 \\\r\n    --hash=sha256:2c05b66b12f9ab0493c5ffb666036fd8c9004a9cc9d5a9264dc24738b50ab8c3 \\\r\n    --hash=sha256:4096759825a130cb27a58ddf6d58e10abdd0127d29fbf53fde26df7ad879737b \\\r\n    --hash=sha256:40c199f9c0569ac479fae7c4e12d2e16fc1e8237836b928474fdd228b8d11477 \\\r\n    --hash=sha256:4486f6e5bdf06f0081d13832f2a061d9e90597eb02093fda9d37e3985e3b2ef2 \\\r\n    --hash=sha256:54d2653520237ebbd2928f2c0f2eb7c616ee2b5194d73d945060cd54a7846b64 \\\r\n    --hash=sha256:5e38cfad9d3ca0f571c4352e9ca0f5ab718508f492a37d3236ae70810140e250 \\\r\n    --hash=sha256:68409e00d75ff13dd7a192ec49559f5527ee8959a51a9f4dd7b168df972b4d44 \\\r\n    --hash=sha256:79b0e113144c2ef0050bc9fe647c7657c5298f3012ecd8937d930b24ddd61404 \\\r\n    --hash=sha256:7a2d98df461d3f36b403fdd8d7890c823ed05bd98eb074412ed56fbfedb94751 \\\r\n    --hash=sha256:7bba1cbb4358dc9a2d2da00f4b38b159a5483d2f3b1d698a7c2cae518f955170 \\\r\n    --hash=sha256:84d2ce838cf3c2fe7f0517941702d42f7e598e5173632ec47a113cd521669b98 \\\r\n    --hash=sha256:8b1d02c99f6444c63336a76638741eaf4ac4005b454e3b8252a40074bf0d84a1 \\\r\n    --hash=sha256:8f7ade2578b2326a0a554c03f60c8d079331220179a592e83e143c9556b7f5b2 \\\r\n    --hash=sha256:953fe382304b19f5aa8fc2da4b092a3bb58a477d33af4def4b81abdce4c9288c \\\r\n    --hash=sha256:acc96b4a8f756af289fa90ffa67ddef57401d99131e51e71872e3609483941ce \\\r\n    --hash=sha256:af284494ea6c40f9613b4d939abe585eb9290cb92037eab66122c93190fcb338 \\\r\n    --hash=sha256:b76afb2059ad69eab576949980a17413c1e9e5a5624abf9e43542d8853f146b3 \\\r\n    --hash=sha256:ccb9f6f06265382028468b47e726f2d42539256fb498d1b0e473c39037b42b8a \\\r\n    --hash=sha256:cf134e1cfb0c53f08abb1ab9158a7e7f859c3ddb451d5fe535a2cc5f2958a688 \\\r\n    --hash=sha256:dff9480d9b6260f59ad10e1cec5be13905be5da88a4a2bd5a5bd4d49c49c4a05 \\\r\n    --hash=sha256:e27771798c8ad50df1375e762d59369354af94eb8ac21eca5bfd1eeef589f545 \\\r\n    --hash=sha256:f245f045054e8d6dab2a0e366d3c74f3a47fb7dec2595ae2035b234b1a829c7a \\\r\n    --hash=sha256:f5c94994d876d8709847c3a92643309d716f43716580a2e5831262366a9ee8b6 \\\r\n    --hash=sha256:fd16f57ce42a72397cd9fe38977fc809eb02172731cb354572f28a6d8e4cf322\r\ncertifi==2020.4.5.1 \\\r\n    --hash=sha256:1d987a998c75633c40847cc966fcf5904906c920a7f17ef374f5aa4282abd304 \\\r\n    --hash=sha256:51fcb31174be6e6664c5f69e3e1691a2d72a1a12e90f872cbdb1567eb47b6519\r\ncffi==1.14.0 \\\r\n    --hash=sha256:001bf3242a1bb04d985d63e138230802c6c8d4db3668fb545fb5005ddf5bb5ff \\\r\n    --hash=sha256:00789914be39dffba161cfc5be31b55775de5ba2235fe49aa28c148236c4e06b \\\r\n    --hash=sha256:028a579fc9aed3af38f4892bdcc7390508adabc30c6af4a6e4f611b0c680e6ac \\\r\n    --hash=sha256:14491a910663bf9f13ddf2bc8f60562d6bc5315c1f09c704937ef17293fb85b0 \\\r\n    --hash=sha256:1cae98a7054b5c9391eb3249b86e0e99ab1e02bb0cc0575da191aedadbdf4384 \\\r\n    --hash=sha256:2089ed025da3919d2e75a4d963d008330c96751127dd6f73c8dc0c65041b4c26 \\\r\n    --hash=sha256:2d384f4a127a15ba701207f7639d94106693b6cd64173d6c8988e2c25f3ac2b6 \\\r\n    --hash=sha256:337d448e5a725bba2d8293c48d9353fc68d0e9e4088d62a9571def317797522b \\\r\n    --hash=sha256:399aed636c7d3749bbed55bc907c3288cb43c65c4389964ad5ff849b6370603e \\\r\n    --hash=sha256:3b911c2dbd4f423b4c4fcca138cadde747abdb20d196c4a48708b8a2d32b16dd \\\r\n    --hash=sha256:3d311bcc4a41408cf5854f06ef2c5cab88f9fded37a3b95936c9879c1640d4c2 \\\r\n    --hash=sha256:62ae9af2d069ea2698bf536dcfe1e4eed9090211dbaafeeedf5cb6c41b352f66 \\\r\n    --hash=sha256:66e41db66b47d0d8672d8ed2708ba91b2f2524ece3dee48b5dfb36be8c2f21dc \\\r\n    --hash=sha256:675686925a9fb403edba0114db74e741d8181683dcf216be697d208857e04ca8 \\\r\n    --hash=sha256:7e63cbcf2429a8dbfe48dcc2322d5f2220b77b2e17b7ba023d6166d84655da55 \\\r\n    --hash=sha256:8a6c688fefb4e1cd56feb6c511984a6c4f7ec7d2a1ff31a10254f3c817054ae4 \\\r\n    --hash=sha256:8c0ffc886aea5df6a1762d0019e9cb05f825d0eec1f520c51be9d198701daee5 \\\r\n    --hash=sha256:95cd16d3dee553f882540c1ffe331d085c9e629499ceadfbda4d4fde635f4b7d \\\r\n    --hash=sha256:99f748a7e71ff382613b4e1acc0ac83bf7ad167fb3802e35e90d9763daba4d78 \\\r\n    --hash=sha256:b8c78301cefcf5fd914aad35d3c04c2b21ce8629b5e4f4e45ae6812e461910fa \\\r\n    --hash=sha256:c420917b188a5582a56d8b93bdd8e0f6eca08c84ff623a4c16e809152cd35793 \\\r\n    --hash=sha256:c43866529f2f06fe0edc6246eb4faa34f03fe88b64a0a9a942561c8e22f4b71f \\\r\n    --hash=sha256:cab50b8c2250b46fe738c77dbd25ce017d5e6fb35d3407606e7a4180656a5a6a \\\r\n    --hash=sha256:cef128cb4d5e0b3493f058f10ce32365972c554572ff821e175dbc6f8ff6924f \\\r\n    --hash=sha256:cf16e3cf6c0a5fdd9bc10c21687e19d29ad1fe863372b5543deaec1039581a30 \\\r\n    --hash=sha256:e56c744aa6ff427a607763346e4170629caf7e48ead6921745986db3692f987f \\\r\n    --hash=sha256:e577934fc5f8779c554639376beeaa5657d54349096ef24abe8c74c5d9c117c3 \\\r\n    --hash=sha256:f2b0fa0c01d8a0c7483afd9f31d7ecf2d71760ca24499c8697aeb5ca37dc090c\r\nchardet==3.0.4 \\\r\n    --hash=sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae \\\r\n    --hash=sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\r\nclick==7.1.2 \\\r\n    --hash=sha256:d2b5255c7c6349bc1bd1e59e08cd12acbbd63ce649f2588755783aa94dfb6b1a \\\r\n    --hash=sha256:dacca89f4bfadd5de3d7489b7c8a566eee0d3676333fbb50030263894c38c0dc\r\ncryptography==2.9.2 \\\r\n    --hash=sha256:091d31c42f444c6f519485ed528d8b451d1a0c7bf30e8ca583a0cac44b8a0df6 \\\r\n    --hash=sha256:18452582a3c85b96014b45686af264563e3e5d99d226589f057ace56196ec78b \\\r\n    --hash=sha256:1dfa985f62b137909496e7fc182dac687206d8d089dd03eaeb28ae16eec8e7d5 \\\r\n    --hash=sha256:1e4014639d3d73fbc5ceff206049c5a9a849cefd106a49fa7aaaa25cc0ce35cf \\\r\n    --hash=sha256:22e91636a51170df0ae4dcbd250d318fd28c9f491c4e50b625a49964b24fe46e \\\r\n    --hash=sha256:3b3eba865ea2754738616f87292b7f29448aec342a7c720956f8083d252bf28b \\\r\n    --hash=sha256:651448cd2e3a6bc2bb76c3663785133c40d5e1a8c1a9c5429e4354201c6024ae \\\r\n    --hash=sha256:726086c17f94747cedbee6efa77e99ae170caebeb1116353c6cf0ab67ea6829b \\\r\n    --hash=sha256:844a76bc04472e5135b909da6aed84360f522ff5dfa47f93e3dd2a0b84a89fa0 \\\r\n    --hash=sha256:88c881dd5a147e08d1bdcf2315c04972381d026cdb803325c03fe2b4a8ed858b \\\r\n    --hash=sha256:96c080ae7118c10fcbe6229ab43eb8b090fccd31a09ef55f83f690d1ef619a1d \\\r\n    --hash=sha256:a0c30272fb4ddda5f5ffc1089d7405b7a71b0b0f51993cb4e5dbb4590b2fc229 \\\r\n    --hash=sha256:bb1f0281887d89617b4c68e8db9a2c42b9efebf2702a3c5bf70599421a8623e3 \\\r\n    --hash=sha256:c447cf087cf2dbddc1add6987bbe2f767ed5317adb2d08af940db517dd704365 \\\r\n    --hash=sha256:c4fd17d92e9d55b84707f4fd09992081ba872d1a0c610c109c18e062e06a2e55 \\\r\n    --hash=sha256:d0d5aeaedd29be304848f1c5059074a740fa9f6f26b84c5b63e8b29e73dfc270 \\\r\n    --hash=sha256:daf54a4b07d67ad437ff239c8a4080cfd1cc7213df57d33c97de7b4738048d5e \\\r\n    --hash=sha256:e993468c859d084d5579e2ebee101de8f5a27ce8e2159959b6673b418fd8c785 \\\r\n    --hash=sha256:f118a95c7480f5be0df8afeb9a11bd199aa20afab7a96bcf20409b411a3a85f0\r\ndocutils==0.15.2 \\\r\n    --hash=sha256:6c4f696463b79f1fb8ba0c594b63840ebd41f059e92b31957c46b74a4599b6d0 \\\r\n    --hash=sha256:9e4d7ecfc600058e07ba661411a2b7de2fd0fafa17d1a7f7361cd47b1175c827 \\\r\n    --hash=sha256:a2aeea129088da402665e92e0b25b04b073c04b2dce4ab65caaa38b7ce2e1a99\r\nFaker==4.1.0 \\\r\n    --hash=sha256:103c46b9701a151299c5bffe6fefcd4fb5fb04c3b5d06bee4952d36255d44ea2 \\\r\n    --hash=sha256:34ae397aef03a0a17910452f1e8430d57fa59e2d67b20e9b637218e8f7dd22b3\r\nidna==2.9 \\\r\n    --hash=sha256:7588d1c14ae4c77d74036e8c22ff447b26d0fde8f007354fd48a7814db15b7cb \\\r\n    --hash=sha256:a068a21ceac8a4d63dbfd964670474107f541babbd2250d61922f029858365fa\r\nidna_ssl==1.1.0 \\\r\n    --hash=sha256:a933e3bb13da54383f9e8f35dc4f9cb9eb9b3b78c6b36f311254d6d0d92c6c7c\r\nimportlib-metadata==1.6.0 \\\r\n    --hash=sha256:2a688cbaa90e0cc587f1df48bdc97a6eadccdcd9c35fb3f976a09e3b5016d90f \\\r\n    --hash=sha256:34513a8a0c4962bc66d35b359558fd8a5e10cd472d37aec5f66858addef32c1e\r\nJinja2==2.11.2 \\\r\n    --hash=sha256:89aab215427ef59c34ad58735269eb58b1a5808103067f7bb9d5836c651b3bb0 \\\r\n    --hash=sha256:f0a4641d3cf955324a89c04f3d94663aa4d638abe8f733ecd3582848e1c37035\r\njmespath==0.10.0 \\\r\n    --hash=sha256:b85d0567b8666149a93172712e68920734333c0ce7e89b78b3e987f71e5ed4f9 \\\r\n    --hash=sha256:cdf6525904cc597730141d61b36f2e4b8ecc257c420fa2f4549bac2c2d0cb72f\r\njsonmerge==1.7.0 \\\r\n    --hash=sha256:2004a421890311176136fb911c339c4bab45984808814feaed6a328c6e211ba2\r\njsonschema==3.2.0 \\\r\n    --hash=sha256:4e5b3cf8216f577bee9ce139cbe72eca3ea4f292ec60928ff24758ce626cd163 \\\r\n    --hash=sha256:c8a85b28d377cc7737e46e2d9f2b4f44ee3c0e1deac6bf46ddefc7187d30797a\r\nlockfile==0.12.2 \\\r\n    --hash=sha256:6aed02de03cba24efabcd600b30540140634fc06cfa603822d508d5361e9f799 \\\r\n    --hash=sha256:6c3cb24f344923d30b2785d5ad75182c8ea7ac1b6171b08657258ec7429d50fa\r\nlxml==4.5.1 \\\r\n    --hash=sha256:06748c7192eab0f48e3d35a7adae609a329c6257495d5e53878003660dc0fec6 \\\r\n    --hash=sha256:0790ddca3f825dd914978c94c2545dbea5f56f008b050e835403714babe62a5f \\\r\n    --hash=sha256:1aa7a6197c1cdd65d974f3e4953764eee3d9c7b67e3966616b41fab7f8f516b7 \\\r\n    --hash=sha256:22c6d34fdb0e65d5f782a4d1a1edb52e0a8365858dafb1c08cb1d16546cf0786 \\\r\n    --hash=sha256:2754d4406438c83144f9ffd3628bbe2dcc6d62b20dbc5c1ec4bc4385e5d44b42 \\\r\n    --hash=sha256:27ee0faf8077c7c1a589573b1450743011117f1aa1a91d5ae776bbc5ca6070f2 \\\r\n    --hash=sha256:2b02c106709466a93ed424454ce4c970791c486d5fcdf52b0d822a7e29789626 \\\r\n    --hash=sha256:2d1ddce96cf15f1254a68dba6935e6e0f1fe39247de631c115e84dd404a6f031 \\\r\n    --hash=sha256:4f282737d187ae723b2633856085c31ae5d4d432968b7f3f478a48a54835f5c4 \\\r\n    --hash=sha256:51bb4edeb36d24ec97eb3e6a6007be128b720114f9a875d6b370317d62ac80b9 \\\r\n    --hash=sha256:7eee37c1b9815e6505847aa5e68f192e8a1b730c5c7ead39ff317fde9ce29448 \\\r\n    --hash=sha256:7fd88cb91a470b383aafad554c3fe1ccf6dfb2456ff0e84b95335d582a799804 \\\r\n    --hash=sha256:9144ce36ca0824b29ebc2e02ca186e54040ebb224292072250467190fb613b96 \\\r\n    --hash=sha256:925baf6ff1ef2c45169f548cc85204433e061360bfa7d01e1be7ae38bef73194 \\\r\n    --hash=sha256:a636346c6c0e1092ffc202d97ec1843a75937d8c98aaf6771348ad6422e44bb0 \\\r\n    --hash=sha256:a87dbee7ad9dce3aaefada2081843caf08a44a8f52e03e0a4cc5819f8398f2f4 \\\r\n    --hash=sha256:a9e3b8011388e7e373565daa5e92f6c9cb844790dc18e43073212bb3e76f7007 \\\r\n    --hash=sha256:afb53edf1046599991fb4a7d03e601ab5f5422a5435c47ee6ba91ec3b61416a6 \\\r\n    --hash=sha256:b26719890c79a1dae7d53acac5f089d66fd8cc68a81f4e4bd355e45470dc25e1 \\\r\n    --hash=sha256:b7462cdab6fffcda853338e1741ce99706cdf880d921b5a769202ea7b94e8528 \\\r\n    --hash=sha256:b77975465234ff49fdad871c08aa747aae06f5e5be62866595057c43f8d2f62c \\\r\n    --hash=sha256:c47a8a5d00060122ca5908909478abce7bbf62d812e3fc35c6c802df8fb01fe7 \\\r\n    --hash=sha256:c79e5debbe092e3c93ca4aee44c9a7631bdd407b2871cb541b979fd350bbbc29 \\\r\n    --hash=sha256:d8d40e0121ca1606aa9e78c28a3a7d88a05c06b3ca61630242cded87d8ce55fa \\\r\n    --hash=sha256:ee2be8b8f72a2772e72ab926a3bccebf47bb727bda41ae070dc91d1fb759b726 \\\r\n    --hash=sha256:f95d28193c3863132b1f55c1056036bf580b5a488d908f7d22a04ace8935a3a9 \\\r\n    --hash=sha256:fadd2a63a2bfd7fb604508e553d1cf68eca250b2fbdbd81213b5f6f2fbf23529\r\nMarkupSafe==1.1.1 \\\r\n    --hash=sha256:00bc623926325b26bb9605ae9eae8a215691f33cae5df11ca5424f06f2d1f473 \\\r\n    --hash=sha256:09027a7803a62ca78792ad89403b1b7a73a01c8cb65909cd876f7fcebd79b161 \\\r\n    --hash=sha256:09c4b7f37d6c648cb13f9230d847adf22f8171b1ccc4d5682398e77f40309235 \\\r\n    --hash=sha256:1027c282dad077d0bae18be6794e6b6b8c91d58ed8a8d89a89d59693b9131db5 \\\r\n    --hash=sha256:13d3144e1e340870b25e7b10b98d779608c02016d5184cfb9927a9f10c689f42 \\\r\n    --hash=sha256:24982cc2533820871eba85ba648cd53d8623687ff11cbb805be4ff7b4c971aff \\\r\n    --hash=sha256:29872e92839765e546828bb7754a68c418d927cd064fd4708fab9fe9c8bb116b \\\r\n    --hash=sha256:43a55c2930bbc139570ac2452adf3d70cdbb3cfe5912c71cdce1c2c6bbd9c5d1 \\\r\n    --hash=sha256:46c99d2de99945ec5cb54f23c8cd5689f6d7177305ebff350a58ce5f8de1669e \\\r\n    --hash=sha256:500d4957e52ddc3351cabf489e79c91c17f6e0899158447047588650b5e69183 \\\r\n    --hash=sha256:535f6fc4d397c1563d08b88e485c3496cf5784e927af890fb3c3aac7f933ec66 \\\r\n    --hash=sha256:596510de112c685489095da617b5bcbbac7dd6384aeebeda4df6025d0256a81b \\\r\n    --hash=sha256:62fe6c95e3ec8a7fad637b7f3d372c15ec1caa01ab47926cfdf7a75b40e0eac1 \\\r\n    --hash=sha256:6788b695d50a51edb699cb55e35487e430fa21f1ed838122d722e0ff0ac5ba15 \\\r\n    --hash=sha256:6dd73240d2af64df90aa7c4e7481e23825ea70af4b4922f8ede5b9e35f78a3b1 \\\r\n    --hash=sha256:717ba8fe3ae9cc0006d7c451f0bb265ee07739daf76355d06366154ee68d221e \\\r\n    --hash=sha256:79855e1c5b8da654cf486b830bd42c06e8780cea587384cf6545b7d9ac013a0b \\\r\n    --hash=sha256:7c1699dfe0cf8ff607dbdcc1e9b9af1755371f92a68f706051cc8c37d447c905 \\\r\n    --hash=sha256:88e5fcfb52ee7b911e8bb6d6aa2fd21fbecc674eadd44118a9cc3863f938e735 \\\r\n    --hash=sha256:8defac2f2ccd6805ebf65f5eeb132adcf2ab57aa11fdf4c0dd5169a004710e7d \\\r\n    --hash=sha256:98c7086708b163d425c67c7a91bad6e466bb99d797aa64f965e9d25c12111a5e \\\r\n    --hash=sha256:9add70b36c5666a2ed02b43b335fe19002ee5235efd4b8a89bfcf9005bebac0d \\\r\n    --hash=sha256:9bf40443012702a1d2070043cb6291650a0841ece432556f784f004937f0f32c \\\r\n    --hash=sha256:ade5e387d2ad0d7ebf59146cc00c8044acbd863725f887353a10df825fc8ae21 \\\r\n    --hash=sha256:b00c1de48212e4cc9603895652c5c410df699856a2853135b3967591e4beebc2 \\\r\n    --hash=sha256:b1282f8c00509d99fef04d8ba936b156d419be841854fe901d8ae224c59f0be5 \\\r\n    --hash=sha256:b2051432115498d3562c084a49bba65d97cf251f5a331c64a12ee7e04dacc51b \\\r\n    --hash=sha256:ba59edeaa2fc6114428f1637ffff42da1e311e29382d81b339c1817d37ec93c6 \\\r\n    --hash=sha256:c8716a48d94b06bb3b2524c2b77e055fb313aeb4ea620c8dd03a105574ba704f \\\r\n    --hash=sha256:cd5df75523866410809ca100dc9681e301e3c27567cf498077e8551b6d20e42f \\\r\n    --hash=sha256:cdb132fc825c38e1aeec2c8aa9338310d29d337bebbd7baa06889d09a60a1fa2 \\\r\n    --hash=sha256:e249096428b3ae81b08327a63a485ad0878de3fb939049038579ac0ef61e17e7 \\\r\n    --hash=sha256:e8313f01ba26fbbe36c7be1966a7b7424942f670f38e666995b88d012765b9be\r\nmultidict==4.7.6 \\\r\n    --hash=sha256:1ece5a3369835c20ed57adadc663400b5525904e53bae59ec854a5d36b39b21a \\\r\n    --hash=sha256:275ca32383bc5d1894b6975bb4ca6a7ff16ab76fa622967625baeebcf8079000 \\\r\n    --hash=sha256:3750f2205b800aac4bb03b5ae48025a64e474d2c6cc79547988ba1d4122a09e2 \\\r\n    --hash=sha256:4538273208e7294b2659b1602490f4ed3ab1c8cf9dbdd817e0e9db8e64be2507 \\\r\n    --hash=sha256:5141c13374e6b25fe6bf092052ab55c0c03d21bd66c94a0e3ae371d3e4d865a5 \\\r\n    --hash=sha256:51a4d210404ac61d32dada00a50ea7ba412e6ea945bbe992e4d7a595276d2ec7 \\\r\n    --hash=sha256:5cf311a0f5ef80fe73e4f4c0f0998ec08f954a6ec72b746f3c179e37de1d210d \\\r\n    --hash=sha256:6513728873f4326999429a8b00fc7ceddb2509b01d5fd3f3be7881a257b8d463 \\\r\n    --hash=sha256:7388d2ef3c55a8ba80da62ecfafa06a1c097c18032a501ffd4cabbc52d7f2b19 \\\r\n    --hash=sha256:9456e90649005ad40558f4cf51dbb842e32807df75146c6d940b6f5abb4a78f3 \\\r\n    --hash=sha256:c026fe9a05130e44157b98fea3ab12969e5b60691a276150db9eda71710cd10b \\\r\n    --hash=sha256:d14842362ed4cf63751648e7672f7174c9818459d169231d03c56e84daf90b7c \\\r\n    --hash=sha256:e0d072ae0f2a179c375f67e3da300b47e1a83293c554450b29c900e50afaae87 \\\r\n    --hash=sha256:f07acae137b71af3bb548bd8da720956a3bc9f9a0b87733e0899226a2317aeb7 \\\r\n    --hash=sha256:fbb77a75e529021e7c4a8d4e823d88ef4d23674a202be4f5addffc72cbb91430 \\\r\n    --hash=sha256:fcfbb44c59af3f8ea984de67ec7c306f618a3ec771c2843804069917a8f2e255 \\\r\n    --hash=sha256:feed85993dbdb1dbc29102f50bca65bdc68f2c0c8d352468c25b54874f23c39d\r\npid==2.2.5 \\\r\n    --hash=sha256:96eb7dba326b88f5164bc1afdc986c7793e0d32d7f62366256a3903c7b0614ef \\\r\n    --hash=sha256:fe1ac2fd0617b091e7afd7b90f7af65ffb2339b57586215500e965462bb3cf0b\r\npycparser==2.20 \\\r\n    --hash=sha256:2d475327684562c3a96cc71adf7dc8c4f0565175cf86b6d7a404ff4c771f15f0 \\\r\n    --hash=sha256:7582ad22678f0fcd81102833f60ef8d0e57288b6b5fb00323d101be910e35705\r\nPyJWT==1.7.1 \\\r\n    --hash=sha256:5c6eca3c2940464d106b99ba83b00c6add741c9becaec087fb7ccdefea71350e \\\r\n    --hash=sha256:8d59a976fb773f3e6a39c85636357c4f0e242707394cadadd9814f5cbaa20e96\r\nPyMySQL==0.9.2 \\\r\n    --hash=sha256:95f057328357e0e13a30e67857a8c694878b0175797a9a203ee7adbfb9b1ec5f \\\r\n    --hash=sha256:9ec760cbb251c158c19d6c88c17ca00a8632bac713890e465b2be01fdc30713f\r\npyrsistent==0.16.0 \\\r\n    --hash=sha256:28669905fe725965daa16184933676547c5bb40a5153055a8dee2a4bd7933ad3\r\npython-daemon-3K==1.5.8 \\\r\n    --hash=sha256:887bfdf1104168f145fd922bdc4ca9e6fe681cbee50f95a2774f1d6e36b20806\r\npython-dateutil==2.8.1 \\\r\n    --hash=sha256:73ebfe9dbf22e832286dafa60473e4cd239f8592f699aa5adaf10050e6e1823c \\\r\n    --hash=sha256:75bb3f31ea686f1197762692a9ee6a7550b59fc6ca3a1f4b5d7e32fb98e2da2a\r\nPyYAML==5.3.1 \\\r\n    --hash=sha256:06a0d7ba600ce0b2d2fe2e78453a470b5a6e000a985dd4a4e54e436cc36b0e97 \\\r\n    --hash=sha256:240097ff019d7c70a4922b6869d8a86407758333f02203e0fc6ff79c5dcede76 \\\r\n    --hash=sha256:4f4b913ca1a7319b33cfb1369e91e50354d6f07a135f3b901aca02aa95940bd2 \\\r\n    --hash=sha256:69f00dca373f240f842b2931fb2c7e14ddbacd1397d57157a9b005a6a9942648 \\\r\n    --hash=sha256:73f099454b799e05e5ab51423c7bcf361c58d3206fa7b0d555426b1f4d9a3eaf \\\r\n    --hash=sha256:74809a57b329d6cc0fdccee6318f44b9b8649961fa73144a98735b0aaf029f1f \\\r\n    --hash=sha256:7739fc0fa8205b3ee8808aea45e968bc90082c10aef6ea95e855e10abf4a37b2 \\\r\n    --hash=sha256:95f71d2af0ff4227885f7a6605c37fd53d3a106fcab511b8860ecca9fcf400ee \\\r\n    --hash=sha256:b8eac752c5e14d3eca0e6dd9199cd627518cb5ec06add0de9d32baeee6fe645d \\\r\n    --hash=sha256:cc8955cfbfc7a115fa81d85284ee61147059a753344bc51098f3ccd69b0d7e0c \\\r\n    --hash=sha256:d13155f591e6fcc1ec3b30685d50bf0711574e2c0dfffd7644babf8b5102ca1a\r\nrequests==2.23.0 \\\r\n    --hash=sha256:43999036bfa82904b6af1d99e4882b560e5e2c68e5c4b0aa03b655f3d7d73fee \\\r\n    --hash=sha256:b3f43d496c6daba4493e7c431722aeb7dbc6288f52a6e04e7b6023b0247817e6\r\nrequests-mock==1.8.0 \\\r\n    --hash=sha256:11215c6f4df72702aa357f205cf1e537cffd7392b3e787b58239bde5fb3db53b \\\r\n    --hash=sha256:e68f46844e4cee9d447150343c9ae875f99fa8037c6dcf5f15bf1fe9ab43d226\r\nrwslib==1.2.4 \\\r\n    --hash=sha256:4f4c6e21dbc9931bdb3e58886d22c034b5c92167b5e8701ec78c7db2afa26b51 \\\r\n    --hash=sha256:f20d07d26ff2285bdaa2e10a7bed94a611ce444f5cec6b4ffe63d8c9435e40cc\r\ns3transfer==0.3.3 \\\r\n    --hash=sha256:2482b4259524933a022d59da830f51bd746db62f047d6eb213f2f8855dcb8a13 \\\r\n    --hash=sha256:921a37e2aefc64145e7b73d50c71bb4f26f46e4c9f414dc648c6245ff92cf7db\r\nsix==1.15.0 \\\r\n    --hash=sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259 \\\r\n    --hash=sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced\r\ntext-unidecode==1.3 \\\r\n    --hash=sha256:1311f10e8b895935241623731c2ba64f4c455287888b18189350b67134a822e8 \\\r\n    --hash=sha256:bad6603bb14d279193107714b288be206cac565dfa49aa5b105294dd5c4aab93\r\ntyping-extensions==3.7.4.2 \\\r\n    --hash=sha256:6e95524d8a547a91e08f404ae485bbb71962de46967e1b71a0cb89af24e761c5 \\\r\n    --hash=sha256:79ee589a3caca649a9bfd2a8de4709837400dfa00b6cc81962a1e6a1815969ae \\\r\n    --hash=sha256:f8d2bd89d25bc39dabe7d23df520442fa1d8969b82544370e03d88b5a591c392\r\nujson==3.0.0 \\\r\n    --hash=sha256:019a17e7162f26e264f1645bb41630f7103d178c092ea4bb8f3b16126c3ea210 \\\r\n    --hash=sha256:0379ffc7484b862a292e924c15ad5f1c5306d4271e2efd162144812afb08ff97 \\\r\n    --hash=sha256:0959a5b569e192459b492b007e3fd63d8f4b4bcb4f69dcddca850a9b9dfe3e7a \\\r\n    --hash=sha256:0e2352b60c4ac4fc75b723435faf36ef5e7f3bfb988adb4d589b5e0e6e1d90aa \\\r\n    --hash=sha256:0f33359908df32033195bfdd59ba2bfb90a23cb280ef9a0ba11e5013a53d7fd9 \\\r\n    --hash=sha256:154f778f0b028390067aaedce8399730d4f528a16a1c214fe4eeb9c4e4f51810 \\\r\n    --hash=sha256:3bd791d17a175c1c6566aeaec1755b58e3f021fe9bb62f10f02b656b299199f5 \\\r\n    --hash=sha256:634c206f4fb3be7e4523768c636d2dd41cb9c7130e2d219ef8305b8fb6f4838e \\\r\n    --hash=sha256:670018d4ab4b0755a7234a9f4791723abcd0506c0eed33b2ed50579c4aff31f2 \\\r\n    --hash=sha256:9c68557da3e3ad57e0105aceba0cce5f8f7cd07d207c3860e59c0b3044532830 \\\r\n    --hash=sha256:a32f2def62b10e8a19084d17d40363c4da1ac5f52d300a9e99d7efb49fe5f34a \\\r\n    --hash=sha256:bea2958c7b5bf4f191f0def751b6f7c8b208edb5f7277e21776329f2ca042385 \\\r\n    --hash=sha256:c04d253fec814657fd9f150ef2333dbd0bc6f46208355aa753a29e0696b7fa7e \\\r\n    --hash=sha256:c841a6450d64c24c64cbcca429bab22cdb6daef5eaddfdfebe798a5e9e5aff4c \\\r\n    --hash=sha256:e0199849d61cc6418f94d52a314c6a27524d65e82174d2a043fb718f73d1520d \\\r\n    --hash=sha256:f40bb0d0cb534aad3e24884cf864bda7a71eb5984bd1da61d1711bbfb3be2c38 \\\r\n    --hash=sha256:f854702a9aff3a445f4a0b715d240f2a3d84014d8ae8aad05a982c7ffab12525\r\nurllib3==1.25.9 \\\r\n    --hash=sha256:3018294ebefce6572a474f0604c2021e33b3fd8006ecd11d62107a5d2a963527 \\\r\n    --hash=sha256:88206b0eb87e6d677d424843ac5209e3fb9d0190d0ee169599165ec25e9d9115\r\nwatchtower==0.7.3 \\\r\n    --hash=sha256:715e2480633490719280a89bfec60fb383510fe577644418ccb6b980e55f9826 \\\r\n    --hash=sha256:82eee8350999825c84bbfc305406a483304d4a6c848a53ec84b151e95364f8d2\r\nwrapt==1.12.1 \\\r\n    --hash=sha256:b62ffa81fb85f4332a4f609cab4ac40709470da05643a082ec1eb88e6d9b97d7\r\nyarl==1.4.2 \\\r\n    --hash=sha256:0c2ab325d33f1b824734b3ef51d4d54a54e0e7a23d13b86974507602334c2cce \\\r\n    --hash=sha256:0ca2f395591bbd85ddd50a82eb1fde9c1066fafe888c5c7cc1d810cf03fd3cc6 \\\r\n    --hash=sha256:2098a4b4b9d75ee352807a95cdf5f10180db903bc5b7270715c6bbe2551f64ce \\\r\n    --hash=sha256:25e66e5e2007c7a39541ca13b559cd8ebc2ad8fe00ea94a2aad28a9b1e44e5ae \\\r\n    --hash=sha256:26d7c90cb04dee1665282a5d1a998defc1a9e012fdca0f33396f81508f49696d \\\r\n    --hash=sha256:308b98b0c8cd1dfef1a0311dc5e38ae8f9b58349226aa0533f15a16717ad702f \\\r\n    --hash=sha256:3ce3d4f7c6b69c4e4f0704b32eca8123b9c58ae91af740481aa57d7857b5e41b \\\r\n    --hash=sha256:58cd9c469eced558cd81aa3f484b2924e8897049e06889e8ff2510435b7ef74b \\\r\n    --hash=sha256:5b10eb0e7f044cf0b035112446b26a3a2946bca9d7d7edb5e54a2ad2f6652abb \\\r\n    --hash=sha256:6faa19d3824c21bcbfdfce5171e193c8b4ddafdf0ac3f129ccf0cdfcb083e462 \\\r\n    --hash=sha256:944494be42fa630134bf907714d40207e646fd5a94423c90d5b514f7b0713fea \\\r\n    --hash=sha256:a161de7e50224e8e3de6e184707476b5a989037dcb24292b391a3d66ff158e70 \\\r\n    --hash=sha256:a4844ebb2be14768f7994f2017f70aca39d658a96c786211be5ddbe1c68794c1 \\\r\n    --hash=sha256:c2b509ac3d4b988ae8769901c66345425e361d518aecbe4acbfc2567e416626a \\\r\n    --hash=sha256:c9959d49a77b0e07559e579f38b2f3711c2b8716b8410b320bf9713013215a1b \\\r\n    --hash=sha256:d8cdee92bc930d8b09d8bd2043cedd544d9c8bd7436a77678dd602467a993080 \\\r\n    --hash=sha256:e15199cdb423316e15f108f51249e44eb156ae5dba232cb73be555324a1d49c2\r\nzipp==3.1.0 \\\r\n    --hash=sha256:aa36550ff0c0b7ef7fa639055d797116ee891440eac1a56f378e2d3179e0320b \\\r\n    --hash=sha256:c599e4d75c98f6798c509911d08a22e6c021d074469042177c8c86fb92eefd96\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/811", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/811/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/811/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/811", "id": 629835269, "node_id": "MDU6SXNzdWU2Mjk4MzUyNjk=", "number": 811, "title": "AioSession.get_service_data() should await self._events.emit()", "user": {"login": "quonb", "id": 881040, "node_id": "MDQ6VXNlcjg4MTA0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/881040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quonb", "html_url": "https://github.com/quonb", "followers_url": "https://api.github.com/users/quonb/followers", "following_url": "https://api.github.com/users/quonb/following{/other_user}", "gists_url": "https://api.github.com/users/quonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/quonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quonb/subscriptions", "organizations_url": "https://api.github.com/users/quonb/orgs", "repos_url": "https://api.github.com/users/quonb/repos", "events_url": "https://api.github.com/users/quonb/events{/privacy}", "received_events_url": "https://api.github.com/users/quonb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T09:18:01Z", "updated_at": "2020-06-04T01:11:00Z", "closed_at": "2020-06-04T01:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/aio-libs/aiobotocore/blob/012a573c57d32345c65b117e6fe162fc0606e06d/aiobotocore/session.py#L139\r\n`self._events` is `AioHierarchicalEmitter` by default and its `_emit` method is async", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/808", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/808/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/808/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/808", "id": 611253019, "node_id": "MDU6SXNzdWU2MTEyNTMwMTk=", "number": 808, "title": "Unable to locate credentials", "user": {"login": "potatochip", "id": 10922120, "node_id": "MDQ6VXNlcjEwOTIyMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10922120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/potatochip", "html_url": "https://github.com/potatochip", "followers_url": "https://api.github.com/users/potatochip/followers", "following_url": "https://api.github.com/users/potatochip/following{/other_user}", "gists_url": "https://api.github.com/users/potatochip/gists{/gist_id}", "starred_url": "https://api.github.com/users/potatochip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/potatochip/subscriptions", "organizations_url": "https://api.github.com/users/potatochip/orgs", "repos_url": "https://api.github.com/users/potatochip/repos", "events_url": "https://api.github.com/users/potatochip/events{/privacy}", "received_events_url": "https://api.github.com/users/potatochip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-02T18:58:38Z", "updated_at": "2020-05-05T06:29:44Z", "closed_at": "2020-05-05T06:26:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI get the following exception when awaiting the `s3_put` coro below. This only happens intermittently when creating a k8s pod running the app. Credentials come from an iam role assigned to the pod. The pod will restart a couple times and eventually the error will not raise. The error did no raise in the same environment when using version 0 of aiobotocore (with a persistent client rather than context managed client). Maybe this is related to a change in pinned botocore version?\r\n\r\n```python\r\n_REGION = None\r\n_SESSION = None\r\n\r\n\r\ndef get_aws_region() -> str:\r\n    \"\"\"Get the aws region of the current ec2 machine.\"\"\"\r\n    global _REGION\r\n    if _REGION is None:\r\n        try:\r\n            _REGION = ec2_metadata.region\r\n        except (ConnectionError, ConnectTimeout):\r\n            _REGION = 'us-east-1'\r\n    return _REGION\r\n\r\n\r\ndef get_s3_client() -> aiobotocore.client.AioBaseClient:\r\n    \"\"\"Get async context client for s3.\"\"\"\r\n    global _SESSION\r\n    if _SESSION is None:\r\n        _SESSION = aiobotocore.get_session()\r\n    return _SESSION.create_client(\r\n        's3',\r\n        region_name=get_aws_region(),\r\n        config=Config(signature_version='s3v4'))\r\n\r\n\r\nasync def s3_put(bucket: str, key: str, body: str) -> None:\r\n    \"\"\"Async put body into key on s3.\r\n\r\n    This is just a wrapper around put_object enforcing encryption.\r\n    \"\"\"\r\n    async with get_s3_client() as client:\r\n        await client.put_object(Bucket=bucket,\r\n                                Key=key,\r\n                                Body=body,\r\n                                ServerSideEncryption='AES256') \r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"x\", line 45, in s3_put\r\n    await client.put_object(Bucket=bucket,\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/client.py\", line 111, in _make_api_call\r\n    http, parsed_response = await self._make_request(\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/client.py\", line 131, in _make_request\r\n    return await self._endpoint.make_request(operation_model, request_dict)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/endpoint.py\", line 84, in _send_request\r\n    request = await self.create_request(request_dict, operation_model)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/endpoint.py\", line 77, in create_request\r\n    await self._event_emitter.emit(event_name, request=request,\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/hooks.py\", line 27, in _emit\r\n    response = await handler(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/signers.py\", line 16, in handler\r\n    return await self.sign(operation_name, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/signers.py\", line 61, in sign\r\n    auth.add_auth(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/botocore/auth.py\", line 357, in add_auth\r\n    raise NoCredentialsError\r\nbotocore.exceptions.NoCredentialsError: Unable to locate credentials\r\n```\r\n\r\n**pip freeze results**\r\n\r\n```\r\naiobotocore==1.0.4\r\naiohttp==3.6.2\r\naioitertools==0.6.1\r\naioredis==1.3.1\r\nasync-timeout==3.0.1\r\nasyncssh==2.1.0\r\nattrs==19.3.0\r\nboto3==1.12.32\r\nbotocore==1.15.32\r\ncached-property==1.5.1\r\ncertifi==2020.4.5.1\r\ncffi==1.14.0\r\nchardet==3.0.4\r\ncryptography==2.9.2\r\ndatadog==0.35.0\r\ndecorator==4.4.2\r\ndocutils==0.15.2\r\nec2-metadata==2.1.0\r\nhiredis==1.0.1\r\nidna==2.9\r\njmespath==0.9.5\r\nmultidict==4.7.5\r\nplac==1.1.3\r\npsycopg2-binary==2.8.5\r\npycparser==2.20\r\npython-dateutil==2.8.1\r\npython-json-logger==0.1.11\r\nrequests==2.23.0\r\ns3transfer==0.3.3\r\nsix==1.14.0\r\nSQLAlchemy==1.3.16\r\nstreet-cred==0.0.2\r\nurllib3==1.25.9\r\nwrapt==1.12.1\r\nyarl==1.4.2\r\n```\r\n\r\n**Environment:**\r\n - Python Version: 3.8.2\r\n - OS name and version: Debian GNU/Linux 10 (buster)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/807", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/807/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/807/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/807", "id": 611250617, "node_id": "MDU6SXNzdWU2MTEyNTA2MTc=", "number": 807, "title": "got Future <Future pending> attached to a different loop", "user": {"login": "potatochip", "id": 10922120, "node_id": "MDQ6VXNlcjEwOTIyMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10922120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/potatochip", "html_url": "https://github.com/potatochip", "followers_url": "https://api.github.com/users/potatochip/followers", "following_url": "https://api.github.com/users/potatochip/following{/other_user}", "gists_url": "https://api.github.com/users/potatochip/gists{/gist_id}", "starred_url": "https://api.github.com/users/potatochip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/potatochip/subscriptions", "organizations_url": "https://api.github.com/users/potatochip/orgs", "repos_url": "https://api.github.com/users/potatochip/repos", "events_url": "https://api.github.com/users/potatochip/events{/privacy}", "received_events_url": "https://api.github.com/users/potatochip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T18:44:57Z", "updated_at": "2020-05-02T21:40:59Z", "closed_at": "2020-05-02T21:40:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI get the following exception when awaiting the `s3_put` coro below. This works fine on the first run of a process using something akin to asyncio.run, but fails on a subsequent run when the original loop has been closed and a new one created. Maybe this is related to the session object not taking a loop param anymore? I assume it would go away if I recreate a new session object each call, but is that intended?\r\n\r\n```python\r\n_REGION = None\r\n_SESSION = None\r\n\r\n\r\ndef get_aws_region() -> str:\r\n    \"\"\"Get the aws region of the current ec2 machine.\"\"\"\r\n    global _REGION\r\n    if _REGION is None:\r\n        try:\r\n            _REGION = ec2_metadata.region\r\n        except (ConnectionError, ConnectTimeout):\r\n            _REGION = 'us-east-1'\r\n    return _REGION\r\n\r\n\r\ndef get_s3_client() -> aiobotocore.client.AioBaseClient:\r\n    \"\"\"Get async context client for s3.\"\"\"\r\n    global _SESSION\r\n    if _SESSION is None:\r\n        _SESSION = aiobotocore.get_session()\r\n    return _SESSION.create_client(\r\n        's3',\r\n        region_name=get_aws_region(),\r\n        config=Config(signature_version='s3v4'))\r\n\r\n\r\nasync def s3_put(bucket: str, key: str, body: str) -> None:\r\n    \"\"\"Async put body into key on s3.\r\n\r\n    This is just a wrapper around put_object enforcing encryption.\r\n    \"\"\"\r\n    async with get_s3_client() as client:\r\n        await client.put_object(Bucket=bucket,\r\n                                Key=key,\r\n                                Body=body,\r\n                                ServerSideEncryption='AES256') \r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/client.py\", line 111, in _make_api_call\r\n    http, parsed_response = await self._make_request(\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/client.py\", line 131, in _make_request\r\n    return await self._endpoint.make_request(operation_model, request_dict)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/endpoint.py\", line 84, in _send_request\r\n    request = await self.create_request(request_dict, operation_model)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/endpoint.py\", line 77, in create_request\r\n    await self._event_emitter.emit(event_name, request=request,\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/hooks.py\", line 27, in _emit\r\n    response = await handler(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/signers.py\", line 16, in handler\r\n    return await self.sign(operation_name, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/signers.py\", line 53, in sign\r\n    auth = await self.get_auth_instance(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/signers.py\", line 75, in get_auth_instance\r\n    frozen_credentials = await self._credentials.get_frozen_credentials()\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/credentials.py\", line 290, in get_frozen_credentials\r\n    await self._refresh()\r\n  File \"/usr/local/lib/python3.8/site-packages/aiobotocore/credentials.py\", line 257, in _refresh\r\n    async with self._refresh_lock:\r\n  File \"/usr/local/lib/python3.8/asyncio/locks.py\", line 97, in __aenter__\r\n    await self.acquire()\r\n  File \"/usr/local/lib/python3.8/asyncio/locks.py\", line 203, in acquire\r\n    await fut\r\nRuntimeError: Task <Task pending name='Task-59191' coro=<App._process_file() running at x> cb=[gather.<locals>._done_callback() at /usr/local/lib/python3.8/asyncio/tasks.py:751]> got Future <Future pending> attached to a different loop\r\n```\r\n\r\n**pip freeze results**\r\n\r\n```\r\naiobotocore==1.0.4\r\naiohttp==3.6.2\r\naioitertools==0.6.1\r\naioredis==1.3.1\r\nasync-timeout==3.0.1\r\nasyncssh==2.1.0\r\nattrs==19.3.0\r\nboto3==1.12.32\r\nbotocore==1.15.32\r\ncached-property==1.5.1\r\ncertifi==2020.4.5.1\r\ncffi==1.14.0\r\nchardet==3.0.4\r\ncryptography==2.9.2\r\ndatadog==0.35.0\r\ndecorator==4.4.2\r\ndocutils==0.15.2\r\nec2-metadata==2.1.0\r\nhiredis==1.0.1\r\nidna==2.9\r\njmespath==0.9.5\r\nmultidict==4.7.5\r\nplac==1.1.3\r\npsycopg2-binary==2.8.5\r\npycparser==2.20\r\npython-dateutil==2.8.1\r\npython-json-logger==0.1.11\r\nrequests==2.23.0\r\ns3transfer==0.3.3\r\nsix==1.14.0\r\nSQLAlchemy==1.3.16\r\nstreet-cred==0.0.2\r\nurllib3==1.25.9\r\nwrapt==1.12.1\r\nyarl==1.4.2\r\n```\r\n\r\n**Environment:**\r\n - Python Version: 3.8.2\r\n - OS name and version: Debian GNU/Linux 10 (buster)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/806", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/806/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/806/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/806", "id": 610908770, "node_id": "MDU6SXNzdWU2MTA5MDg3NzA=", "number": 806, "title": "persistent client", "user": {"login": "potatochip", "id": 10922120, "node_id": "MDQ6VXNlcjEwOTIyMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10922120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/potatochip", "html_url": "https://github.com/potatochip", "followers_url": "https://api.github.com/users/potatochip/followers", "following_url": "https://api.github.com/users/potatochip/following{/other_user}", "gists_url": "https://api.github.com/users/potatochip/gists{/gist_id}", "starred_url": "https://api.github.com/users/potatochip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/potatochip/subscriptions", "organizations_url": "https://api.github.com/users/potatochip/orgs", "repos_url": "https://api.github.com/users/potatochip/repos", "events_url": "https://api.github.com/users/potatochip/events{/privacy}", "received_events_url": "https://api.github.com/users/potatochip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-01T18:52:10Z", "updated_at": "2020-05-14T22:17:41Z", "closed_at": "2020-05-14T22:17:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand you changed the api to make a client accessible only from a context manager, but is it still safe to persist the client anyway?\r\n\r\nI am using the following to persist it.\r\n```python\r\n_SESSION = aiobotocore.get_session()\r\nclient_context = _SESSION.create_client('s3')\r\nself._client = await client_context.__aenter__()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/802", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/802/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/802/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/802", "id": 602095019, "node_id": "MDU6SXNzdWU2MDIwOTUwMTk=", "number": 802, "title": "use automatic tagged versioning", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T16:29:07Z", "updated_at": "2020-06-05T04:49:23Z", "closed_at": "2020-06-05T04:49:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "see https://medium.com/@Hironsan/automatically-releasing-your-python-package-to-pypi-using-travis-on-tagged-commits-64423e692440", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/799", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/799/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/799/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/799", "id": 599753491, "node_id": "MDU6SXNzdWU1OTk3NTM0OTE=", "number": 799, "title": "generate_presigned_post doesn't await sign", "user": {"login": "szelenka", "id": 6808929, "node_id": "MDQ6VXNlcjY4MDg5Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6808929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szelenka", "html_url": "https://github.com/szelenka", "followers_url": "https://api.github.com/users/szelenka/followers", "following_url": "https://api.github.com/users/szelenka/following{/other_user}", "gists_url": "https://api.github.com/users/szelenka/gists{/gist_id}", "starred_url": "https://api.github.com/users/szelenka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szelenka/subscriptions", "organizations_url": "https://api.github.com/users/szelenka/orgs", "repos_url": "https://api.github.com/users/szelenka/repos", "events_url": "https://api.github.com/users/szelenka/events{/privacy}", "received_events_url": "https://api.github.com/users/szelenka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648070, "node_id": "MDU6TGFiZWwyMTg2NDgwNzA=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1369284696, "node_id": "MDU6TGFiZWwxMzY5Mjg0Njk2", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-04-14T17:54:08Z", "updated_at": "2020-04-15T23:46:22Z", "closed_at": "2020-04-15T23:46:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn 1.0.3, when using `generate_presigned_post` method from aiobotocore, it will run the function, but fail to provide the appripriate `x-aws-*` fields, which will cause the downstream client attempting to issue a POST directly to the Object Store, which will result in an HTTP 400 error \"Missing fields\".\r\n\r\nAdditionally, there is a warning printed to the console:\r\n```bash\r\n  .../lib/python3.7/site-packages/botocore/signers.py:529: RuntimeWarning: coroutine 'AioRequestSigner.sign' was never awaited\r\n    'PutObject', request, region_name, 'presign-post')\r\n```\r\n\r\nThis worked fine in version 0.10.4, but it looks like with the re-write to version 1.0.0, the aiobotocore context was never updated to work with `generate_presigned_post` like it was for `generate_presigned_url`\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [x] I have provided `pip freeze` results\r\n- [x] I have provided sample code or detailed way to reproduce\r\n- [x] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n- [x] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n- [x] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n\r\n**pip freeze results**\r\n```\r\naiobotocore==1.0.3\r\naiofiles==0.4.0\r\naiohttp==3.6.2\r\naioitertools==0.6.0\r\naioodbc==0.3.3\r\nalembic==1.4.2\r\naredis==1.1.7\r\nasn1crypto==1.3.0\r\nastroid==2.3.3\r\nasync-generator==1.10\r\nasync-s3==0.0.2\r\nasync-sql==0.0.5\r\nasync-timeout==3.0.1\r\nasyncpg==0.20.1\r\nattrs==19.3.0\r\nazure-common==1.1.25\r\nazure-storage-blob==2.1.0\r\nazure-storage-common==2.1.0\r\nboto3==1.12.32\r\nbotocore==1.15.32\r\ncertifi==2019.11.28\r\ncffi==1.13.2\r\nchardet==3.0.4\r\nclick==7.1.1\r\ncoverage==5.0.3\r\ncryptography==2.9\r\nCython==0.29.14\r\ndatabases==0.2.6\r\ndnspython==1.16.0\r\ndocutils==0.15.2\r\nemail-validator==1.0.2\r\nfastapi==0.48.0\r\nfastapi-cae-auth==0.0.3\r\ngunicorn==20.0.4\r\nh11==0.9.0\r\nh2==3.2.0\r\nhpack==3.0.0\r\nhstspreload==2020.4.7\r\nhttptools==0.0.13\r\nhttpx==0.11.1\r\nhvac==0.9.6\r\nhyperframe==5.2.0\r\nidna==2.9\r\nijson==2.6.1\r\nimportlib-metadata==1.6.0\r\nisort==4.3.21\r\nitsdangerous==1.1.0\r\nJinja2==2.11.1\r\njmespath==0.9.5\r\nlazy-object-proxy==1.4.3\r\nMako==1.1.2\r\nMarkupSafe==1.1.1\r\nmccabe==0.6.1\r\nmore-itertools==8.2.0\r\nmultidict==4.7.5\r\nmypy==0.770\r\nmypy-extensions==0.4.3\r\noscrypto==1.2.0\r\npackaging==20.3\r\npendulum==2.1.0\r\npluggy==0.13.1\r\npsutil==5.7.0\r\npsycopg2-binary==2.8.4\r\npy==1.8.1\r\npycparser==2.20\r\npycryptodomex==3.9.7\r\npydantic==1.4\r\nPyJWT==1.7.1\r\npylint==2.4.4\r\npyodbc==4.0.30\r\npyOpenSSL==19.1.0\r\npyparsing==2.4.7\r\npytest==5.3.5\r\npytest-async==0.1.1\r\npytest-asyncio==0.10.0\r\npytest-cov==2.8.1\r\npytest-docker==0.7.2\r\npython-dateutil==2.8.0\r\npython-editor==1.0.4\r\npython-multipart==0.0.5\r\npytz==2019.3\r\npytzdata==2019.3\r\nPyYAML==5.3\r\nrfc3986==1.3.2\r\nrope==0.16.0\r\ns3transfer==0.3.3\r\nsix==1.14.0\r\nsniffio==1.1.0\r\nSQLAlchemy==1.3.16\r\nstarlette==0.12.9\r\ntyped-ast==1.4.1\r\ntyping-extensions==3.7.4.2\r\nujson==1.35\r\nunicodecsv==0.14.1\r\nurllib3==1.25.8\r\nuvicorn==0.11.2\r\nuvloop==0.14.0\r\nwcwidth==0.1.9\r\nwebsockets==8.1\r\nWerkzeug==0.16.1\r\nwrapt==1.11.2\r\nyarl==1.4.2\r\nzipp==3.1.0\r\n```\r\n**Environment:**\r\n - Python Version: 3.7.6\r\n - OS name and version: Mac 10.15.4 (19E266)\r\n\r\n**Additional context**\r\nHere's a test case to reproduce the error and warning messages:\r\n```python\r\nimport asyncio\r\nimport aiobotocore\r\n\r\nAWS_ACCESS_KEY_ID = \"xxx\"\r\nAWS_SECRET_ACCESS_KEY = \"xxx\"\r\n\r\n\r\nasync def go():\r\n    bucket = 'dataintake'\r\n    filename = 'dummy.bin'\r\n    folder = 'aiobotocore'\r\n    key = '{}/{}'.format(folder, filename)\r\n\r\n    session = aiobotocore.get_session()\r\n    async with session.create_client(\r\n            's3',\r\n            region_name='us-west-2',\r\n            aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n            aws_access_key_id=AWS_ACCESS_KEY_ID\r\n    ) as client:\r\n        response = client.generate_presigned_post(\r\n            Bucket=bucket,\r\n            Key=key,\r\n            Fields=None,\r\n            Conditions=None,\r\n            ExpiresIn=60\r\n        )\r\n\r\n        # validate we have the keys we need for the web-client to successfully post directly to the ObjectStore\r\n        for k in [\r\n            'x-amz-algorithm',\r\n            'x-amz-credential',\r\n            'x-amz-date',\r\n            'x-amz-signature',\r\n            'policy',\r\n            'key'\r\n        ]:\r\n            assert k in response, 'Missing \"{k}\" field from ObjectStore generate_presigned_post'\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(go())\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/794", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/794/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/794/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/794", "id": 597228691, "node_id": "MDU6SXNzdWU1OTcyMjg2OTE=", "number": 794, "title": "Issue with handling credentials with credentials.process", "user": {"login": "mvalkon", "id": 4346211, "node_id": "MDQ6VXNlcjQzNDYyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4346211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvalkon", "html_url": "https://github.com/mvalkon", "followers_url": "https://api.github.com/users/mvalkon/followers", "following_url": "https://api.github.com/users/mvalkon/following{/other_user}", "gists_url": "https://api.github.com/users/mvalkon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvalkon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvalkon/subscriptions", "organizations_url": "https://api.github.com/users/mvalkon/orgs", "repos_url": "https://api.github.com/users/mvalkon/repos", "events_url": "https://api.github.com/users/mvalkon/events{/privacy}", "received_events_url": "https://api.github.com/users/mvalkon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648070, "node_id": "MDU6TGFiZWwyMTg2NDgwNzA=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1369284696, "node_id": "MDU6TGFiZWwxMzY5Mjg0Njk2", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-04-09T11:52:51Z", "updated_at": "2020-04-10T20:47:49Z", "closed_at": "2020-04-10T10:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nCredential loading fails when using [credential_process](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sourcing-external.html) with the following exception. I am not sure if this is a bug asyncio?\r\n\r\n```\r\n  File \"/usr/local/lib/python3.7/contextlib.py\", line 570, in enter_async_context\r\n    result = await _cm_type.__aenter__(cm)\r\n  File \"/app/.venv/lib/python3.7/site-packages/aioboto3/session.py\", line 195, in __aenter__\r\n    client = await self.client.__aenter__()\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/session.py\", line 19, in __aenter__\r\n    self._client = await self._coro\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/session.py\", line 92, in _create_client\r\n    credentials = await self.get_credentials()\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/session.py\", line 117, in get_credentials\r\n    'credential_provider').load_credentials())\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/credentials.py\", line 787, in load_credentials\r\n    creds = await provider.load()\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/credentials.py\", line 409, in load\r\n    creds_dict = await self._retrieve_credentials_using(credential_process)\r\n  File \"/app/.venv/lib/python3.7/site-packages/aiobotocore/credentials.py\", line 430, in _retrieve_credentials_using\r\n    stderr=subprocess.PIPE)\r\n  File \"/usr/local/lib/python3.7/asyncio/subprocess.py\", line 217, in create_subprocess_exec\r\n    stderr=stderr, **kwds)\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 1529, in subprocess_exec\r\n    f\"program arguments must be a bytes or text string, \"\r\nTypeError: program arguments must be a bytes or text string, not list\r\n```\r\n\r\nThe exception occurs when a dynamodb client is being created, and credentials are loaded. I have the following two files\r\n\r\n```\r\n$ ll test                                                                                                                                     \r\ntotal 16\r\n-rw-r--r--  1 mvalkonen  xxx   573B Apr  8 18:40 credentials.json\r\n-rw-r--r--  1 mvalkonen  xxx    66B Apr  8 18:29 credentials.process\r\n```\r\n\r\nThe `credentials.process`-file contains just the following\r\n\r\n```\r\n$ cat test/credentials.process                                                                                                                \r\n[default]\r\ncredential_process = cat /meta/aws-iam/credentials.json\r\n```\r\n\r\nThe contents of `credentials.json` are valid, they work in my production environment with aiobotocore 0.11.1\r\n\r\nI am using `aioboto3` and `aiohttp`. Running in a container environment, with a base ubuntu image and python 3.7.6. Will try to provide an isolated example of the issue. \r\n\r\nUPDATE:\r\nSeems like unpacking `args` to `self._popen` in https://github.com/aio-libs/aiobotocore/blob/master/aiobotocore/credentials.py#L428 will fix this.  \r\n\r\n```python\r\np = await self._popen(*process_list,\r\n                      stdout=subprocess.PIPE,\r\n                      stderr=subprocess.PIPE)\r\n```\r\n\r\nNot sure if this change should be done?\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [ ] I have provided `pip freeze` results\r\n- [ ] I have provided sample code or detailed way to reproduce\r\n- [x] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n- [x] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n- [x] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/793", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/793/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/793/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/793", "id": 596249776, "node_id": "MDU6SXNzdWU1OTYyNDk3NzY=", "number": 793, "title": "JSONDecodeError for moto response content stream", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-08T01:38:42Z", "updated_at": "2020-04-15T01:33:10Z", "closed_at": "2020-04-10T12:02:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\naiobotocore@0.12.x works fine with actual AWS lambda response data, but unit tests with moto are returning something that the stream reader can read but it borks decoding the data with json.  (I'm hoping something like this looks familiar and there's a simple fix to handle the moto lambda response with the stream reader.  Maybe this is a bug on moto if it has a significantly different response from the actual AWS response.  Also, this should be different from https://github.com/aio-libs/aiobotocore/issues/710 because the response is read in the context of an active client.)\r\n\r\n```\r\n(Pdb) self.response\r\n{'ResponseMetadata': {'RequestId': 'OP99TJZK54T3JE8TIZ9XPJ1VKPBJRA8X1GL1NQF8XH9XSLZNH3MR', 'HTTPStatusCode': 202, 'HTTPHeaders': {'x-amz-log-result': 'G1szMm1TVEFSVCBSZXF1ZXN0SWQ6IGM1YWU4NGY4LThhMDUtMWEwNC05ZDNjLWMyOWVlZmVkZDMxZSBWZXJzaW9uOiAxG1swbQp7J2knOiAxfQowLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5ChtbMzJtRU5EIFJlcXVlc3RJZDogYzVhZTg0ZjgtOGEwNS0xYTA0LTlkM2MtYzI5ZWVmZWRkMzFlG1swbQobWzMybVJFUE9SVCBSZXF1ZXN0SWQ6IGM1YWU4NGY4LThhMDUtMWEwNC05ZDNjLWMyOWVlZmVkZDMxZQlJbml0IER1cmF0aW9uOiAzMzYuMjMgbXMJRHVyYXRpb246IDMuMjggbXMJQmlsbGVkIER1cmF0aW9uOiAxMDAgbXMJTWVtb3J5IFNpemU6IDEyOCBNQglNYXggTWVtb3J5IFVzZWQ6IDI2IE1CCRtbMG0KCnsic3RhdHVzQ29kZSI6MjAwLCJib2R5IjoiXCIwLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5XCIifQ==', 'content-length': '409', 'x-amzn-requestid': 'OP99TJZK54T3JE8TIZ9XPJ1VKPBJRA8X1GL1NQF8XH9XSLZNH3MR', 'x-amz-crc32': '773298142', 'content-type': 'text/html; charset=utf-8', 'server': 'Werkzeug/1.0.1 Python/3.6.10', 'date': 'Wed, 08 Apr 2020 01:22:27 GMT'}, 'RetryAttempts': 0}, 'StatusCode': 202, 'LogResult': 'G1szMm1TVEFSVCBSZXF1ZXN0SWQ6IGM1YWU4NGY4LThhMDUtMWEwNC05ZDNjLWMyOWVlZmVkZDMxZSBWZXJzaW9uOiAxG1swbQp7J2knOiAxfQowLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5ChtbMzJtRU5EIFJlcXVlc3RJZDogYzVhZTg0ZjgtOGEwNS0xYTA0LTlkM2MtYzI5ZWVmZWRkMzFlG1swbQobWzMybVJFUE9SVCBSZXF1ZXN0SWQ6IGM1YWU4NGY4LThhMDUtMWEwNC05ZDNjLWMyOWVlZmVkZDMxZQlJbml0IER1cmF0aW9uOiAzMzYuMjMgbXMJRHVyYXRpb246IDMuMjggbXMJQmlsbGVkIER1cmF0aW9uOiAxMDAgbXMJTWVtb3J5IFNpemU6IDEyOCBNQglNYXggTWVtb3J5IFVzZWQ6IDI2IE1CCRtbMG0KCnsic3RhdHVzQ29kZSI6MjAwLCJib2R5IjoiXCIwLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5XCIifQ==', 'Payload': <StreamingBody at 0x7f9c50c64b48 for ClientResponseContentProxy at 0x7f9c50c53908>}\r\n\r\n(Pdb) data  # this from response.get(\"Payload\").read()\r\nb'\\x1b[32mSTART RequestId: c5ae84f8-8a05-1a04-9d3c-c29eefedd31e Version: 1\\x1b[0m\\n{\\'i\\': 1}\\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\n\\x1b[32mEND RequestId: c5ae84f8-8a05-1a04-9d3c-c29eefedd31e\\x1b[0m\\n\\x1b[32mREPORT RequestId: c5ae84f8-8a05-1a04-9d3c-c29eefedd31e\\tInit Duration: 336.23 ms\\tDuration: 3.28 ms\\tBilled Duration: 100 ms\\tMemory Size: 128 MB\\tMax Memory Used: 26 MB\\t\\x1b[0m\\n\\n{\"statusCode\":200,\"body\":\"\\\\\"0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\\\\"\"}'\r\n\r\n(Pdb) json.loads(data)\r\n*** json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n(Pdb) json.loads(data.decode())\r\n*** json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\nThis can be reproduced using\r\n- https://gitlab.com/dazza-codes/aio-aws/-/blob/lambda-responses/tests/test_aio_aws_lambda.py\r\n\r\n```\r\ngit clone https://gitlab.com/dazza-codes/aio-aws\r\ncd aio-aws\r\nconda create -n aio-aws python=3.6\r\nconda activate aio-aws\r\nmake init  # calls poetry install\r\npytest --pdb tests/test_aio_aws_lambda.py\r\n```\r\n\r\n### versions\r\n\r\n```\r\n$ cat /etc/lsb-release \r\nDISTRIB_ID=Ubuntu\r\nDISTRIB_RELEASE=18.04\r\nDISTRIB_CODENAME=bionic\r\nDISTRIB_DESCRIPTION=\"Ubuntu 18.04.4 LTS\"\r\n\r\n$ python --version\r\nPython 3.6.10\r\n\r\n$ pip freeze | grep oto\r\naiobotocore==0.12.0\r\nboto==2.49.0\r\nboto3==1.12.3\r\nbotocore==1.15.3\r\nmoto==1.3.14\r\n\r\n$ pip freeze | grep aio\r\naiobotocore==0.12.0\r\naiocontextvars==0.2.2\r\naiofiles==0.4.0\r\naiohttp==3.6.2\r\n```\r\n\r\n### AWS lambda works OK\r\n\r\n```\r\n$ ./aio_aws/aio_aws_lambda.py \r\n\r\nTest async lambda functions\r\n[INFO]  2020-04-08T01:40:43.619Z  aio-aws:invoke:163  AWS Lambda (lambda_dev) invoked OK\r\n{'ResponseMetadata': {'RequestId': 'aab74e21-0b85-479b-aee7-bfd69bf7d80f', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Apr 2020 01:40:43 GMT', 'content-type': 'application/json', 'content-length': '63', 'connection': 'keep-alive', 'x-amzn-requestid': 'aab74e21-0b85-479b-aee7-bfd69bf7d80f', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'root=1-5e8d2b9b-de096df0f01d5b5a5cd0e280;sampled=0'}, 'RetryAttempts': 0}, 'StatusCode': 200, 'ExecutedVersion': '$LATEST', 'Payload': <StreamingBody at 0x7f28cb42f9c8 for ClientResponseContentProxy at 0x7f28cb42f988>}\r\n{'statusCode': 200, 'body': '\"0, 1, 2, 3, 4, 5, 6, 7, 8, 9\"'}\r\n1 lambdas finished in 0.66 seconds.\r\n```\r\n\r\n### moto test code\r\n\r\n- https://github.com/spulec/moto/blob/master/tests/test_awslambda/test_lambda.py#L124-L125\r\n\r\nThe moto test code doesn't need an aiohttp stream reader and it seems to work fine.  Something happens when the stream reader is involved.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/789", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/789/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/789/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/789", "id": 594338122, "node_id": "MDU6SXNzdWU1OTQzMzgxMjI=", "number": 789, "title": "BaseClient.__getattr__ broken after emit_until_response switched to async", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-05T08:49:45Z", "updated_at": "2020-06-04T23:11:34Z", "closed_at": "2020-06-04T01:22:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@terrycain any ideas?  `__getattr__` on this class calls `emit_unti_response` and that method is now async.  I'm hitting the warning that the method is not being awaited all the time in the debugger because it's trying to figure out what attributes are available", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/788", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/788/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/788/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/788", "id": 593716181, "node_id": "MDU6SXNzdWU1OTM3MTYxODE=", "number": 788, "title": "python 3.6 support for access to the event loop on a session", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T01:37:27Z", "updated_at": "2020-04-10T12:10:13Z", "closed_at": "2020-04-10T12:10:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/aio-libs/aiobotocore/commit/01269ab8c5e886546d3d32991772cfefa0eebfd2 removed the option to manage an event loop, which seems to make things harder on python 3.6.  It seems to be essential to have some way to access to the aiohttp event loop for some operations where the current event loop is modified without it becoming the default event loop (e.g. pytest-asyncio) or when a new event loop is created but it cannot run any new coroutines using an existing aio-session that was created with a different loop.\r\n\r\nUntil there is some kind of backport for `asyncio.run` to python 3.6, it would be useful to have something like `session.get_loop()` maybe so that the aiohttp loop can be surfaced.  I'm looking for some kind of backport of `asyncio.run` but all I've found so far is a gist at\r\nhttps://gist.github.com/nickdavies/4a37c6cd9dcc7041fddd2d2a81cee383", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/787", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/787/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/787/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/787", "id": 593685778, "node_id": "MDU6SXNzdWU1OTM2ODU3Nzg=", "number": 787, "title": "Why create_client returns context manager? ", "user": {"login": "kkopachev", "id": 2279051, "node_id": "MDQ6VXNlcjIyNzkwNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2279051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkopachev", "html_url": "https://github.com/kkopachev", "followers_url": "https://api.github.com/users/kkopachev/followers", "following_url": "https://api.github.com/users/kkopachev/following{/other_user}", "gists_url": "https://api.github.com/users/kkopachev/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkopachev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkopachev/subscriptions", "organizations_url": "https://api.github.com/users/kkopachev/orgs", "repos_url": "https://api.github.com/users/kkopachev/repos", "events_url": "https://api.github.com/users/kkopachev/events{/privacy}", "received_events_url": "https://api.github.com/users/kkopachev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1369284696, "node_id": "MDU6TGFiZWwxMzY5Mjg0Njk2", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-03T23:11:42Z", "updated_at": "2020-04-07T22:14:44Z", "closed_at": "2020-04-07T00:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mostly just curious, since 1.0 release, `create_client` method now required to be used as context manager with `async with`. \r\nExamples in docs were not updated, so that's a bit confusing. \r\n\r\nWhat I am trying to do is that I have Tornado app, which as part of it's bootstrap creates an instance of \"s3_loader\". I hope to use the same loader across multiple incoming requests, since configuration persists. \r\nWith changes in 1.0 I have to use context manager for each attempt to use loader. Which is unfortunate, it would have to create new client every time and after each load request would have to spin it down, close http pool, etc. Seems inefficient? \r\n\r\nI looked at how you do it in tests, and it looks ugly. \r\nhttps://github.com/aio-libs/aiobotocore/blob/d7ca7ea7f0458bb60fc994304892da15a8edd885/tests/conftest.py#L204-L214\r\n\r\nI'd hope to create client asynchronously first time my loader is used, store it in instance property and reuse on subsequent calls.\r\n\r\nI probably can call `__aenter__` on first use, store result in a property and then be sure to call `__aexit__` in destructor. Seems too magic.\r\n\r\nIs this by design and I am missing something very conceptual here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/785", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/785/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/785/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/785/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/785", "id": 590654257, "node_id": "MDU6SXNzdWU1OTA2NTQyNTc=", "number": 785, "title": "Can botocore 1.13 support be re-enabled?", "user": {"login": "matt2000", "id": 154011, "node_id": "MDQ6VXNlcjE1NDAxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/154011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matt2000", "html_url": "https://github.com/matt2000", "followers_url": "https://api.github.com/users/matt2000/followers", "following_url": "https://api.github.com/users/matt2000/following{/other_user}", "gists_url": "https://api.github.com/users/matt2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/matt2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matt2000/subscriptions", "organizations_url": "https://api.github.com/users/matt2000/orgs", "repos_url": "https://api.github.com/users/matt2000/repos", "events_url": "https://api.github.com/users/matt2000/events{/privacy}", "received_events_url": "https://api.github.com/users/matt2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-30T22:57:34Z", "updated_at": "2020-03-31T08:20:16Z", "closed_at": "2020-03-31T08:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "This commit added support for botocore 1.15 while disabling it for 1.13:\r\n\r\nhttps://github.com/aio-libs/aiobotocore/commit/9f004bd534abc43c81b08630fb32352c245364cc#diff-2eeaed663bd0d25b7e608891384b7298L11\r\n\r\nI use another package that does not yet support 1.15. Does aiobotocore now depend on some 1.15 specific functionality, or could the minimum version be reduced back to 1.13 for improved compatibility?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/783", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/783/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/783/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/783", "id": 587018764, "node_id": "MDU6SXNzdWU1ODcwMTg3NjQ=", "number": 783, "title": "Need info: Ceph support", "user": {"login": "poul1x", "id": 31695750, "node_id": "MDQ6VXNlcjMxNjk1NzUw", "avatar_url": "https://avatars1.githubusercontent.com/u/31695750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poul1x", "html_url": "https://github.com/poul1x", "followers_url": "https://api.github.com/users/poul1x/followers", "following_url": "https://api.github.com/users/poul1x/following{/other_user}", "gists_url": "https://api.github.com/users/poul1x/gists{/gist_id}", "starred_url": "https://api.github.com/users/poul1x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poul1x/subscriptions", "organizations_url": "https://api.github.com/users/poul1x/orgs", "repos_url": "https://api.github.com/users/poul1x/repos", "events_url": "https://api.github.com/users/poul1x/events{/privacy}", "received_events_url": "https://api.github.com/users/poul1x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-24T14:52:18Z", "updated_at": "2020-03-31T08:24:04Z", "closed_at": "2020-03-31T08:24:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is *aiobotocore* able to interact with [Ceph](https://ceph.io/)? I've found s3 examples [here](https://docs.ceph.com/docs/mimic/radosgw/s3/python/). But I need async.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/781", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/781/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/781/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/781", "id": 585557352, "node_id": "MDU6SXNzdWU1ODU1NTczNTI=", "number": 781, "title": "stubber for async HTTP mocking", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-21T18:51:30Z", "updated_at": "2020-07-16T17:46:13Z", "closed_at": "2020-04-10T12:12:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "RE https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html\r\n- https://github.com/boto/botocore/blob/develop/botocore/stub.py\r\n\r\nIs there a similar async HTTP stubber available?  How could a unit test mock a client error?\r\n\r\nFor example, the following unit test runs OK and hits a 403-Forbidden client error (because this test hits real AWS services with fake credentials).  The intention is to use an HTTP stubber to return various kinds of client error responses so that unit tests can check handlers for many types of client error.\r\n\r\n```python\r\nimport aiobotocore\r\nimport aiobotocore.config\r\nimport botocore.exceptions\r\n\r\n@pytest.mark.asyncio\r\nasync def test_aio_s3_bucket_head_too_many_requests():\r\n\r\n    session = aiobotocore.get_session()\r\n    aioconfig = aiobotocore.config.AioConfig(max_pool_connections=1)\r\n    session.set_default_client_config(aioconfig)\r\n    session.set_credentials(\"fake_AWS_ACCESS_KEY_ID\", \"fake_AWS_SECRET_ACCESS_KEY\")\r\n\r\n    async with session.create_client(\"s3\") as client:\r\n\r\n        # TODO: HOW TO ADD HTTP STUBBER HERE, similar to:\r\n        #   https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html\r\n\r\n        with pytest.raises(botocore.exceptions.ClientError) as err:\r\n            await client.head_bucket(Bucket=\"missing-bucket\")\r\n\r\n        msg = err.value.args[0]\r\n        assert \"HeadBucket operation\" in msg\r\n        assert \"403\" in msg\r\n        assert \"Forbidden\" in msg\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/779", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/779/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/779/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/779", "id": 579578475, "node_id": "MDU6SXNzdWU1Nzk1Nzg0NzU=", "number": 779, "title": "web credentials not supported", "user": {"login": "snstanton", "id": 209370, "node_id": "MDQ6VXNlcjIwOTM3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/209370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snstanton", "html_url": "https://github.com/snstanton", "followers_url": "https://api.github.com/users/snstanton/followers", "following_url": "https://api.github.com/users/snstanton/following{/other_user}", "gists_url": "https://api.github.com/users/snstanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/snstanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snstanton/subscriptions", "organizations_url": "https://api.github.com/users/snstanton/orgs", "repos_url": "https://api.github.com/users/snstanton/repos", "events_url": "https://api.github.com/users/snstanton/events{/privacy}", "received_events_url": "https://api.github.com/users/snstanton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-11T22:21:17Z", "updated_at": "2020-03-31T16:57:13Z", "closed_at": "2020-03-31T16:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI am attempting to connect in a context with web credentials by setting `AWS_WEB_IDENTITY_TOKEN_FILE`.  This works with botocore.  When I try the same code in aiobotocore, it fails.\r\n\r\nHere is a sample script that demonstrates the failure:\r\n```\r\nimport asyncio\r\nimport aiobotocore\r\nimport botocore.session\r\n\r\n# SETUP:\r\n#\r\n# export AWS_DEFAULT_REGION=us-west-2\r\n# export AWS_ROLE_ARN=arn:aws:iam::<projectId>:role/<role>\r\n# export AWS_WEB_IDENTITY_TOKEN_FILE=/path/to/web/token/file\r\n\r\nasync def good():\r\n    client = botocore.session.get_session().create_client('s3')\r\n    print(client.list_buckets())\r\n\r\nasync def bad():\r\n    async with aiobotocore.get_session().create_client('s3') as client:\r\n        print(await client.list_buckets())\r\n\r\nasync def test():\r\n    await good()\r\n    await bad()\r\n\r\nasyncio.get_event_loop().run_until_complete(test())\r\n```\r\n\r\nThis results in the following stack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"bug.py\", line 28, in <module>\r\n    asyncio.get_event_loop().run_until_complete(test())\r\n  File \"/Users/scotts/.pyenv/versions/3.8.0/lib/python3.8/asyncio/base_events.py\", line 608, in run_until_complete\r\n    return future.result()\r\n  File \"bug.py\", line 25, in test\r\n    await bad()\r\n  File \"bug.py\", line 20, in bad\r\n    print(await client.list_buckets())\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/aiobotocore/client.py\", line 76, in _make_api_call\r\n    http, parsed_response = await self._make_request(\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/aiobotocore/client.py\", line 96, in _make_request\r\n    return await self._endpoint.make_request(operation_model, request_dict)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/aiobotocore/endpoint.py\", line 68, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/endpoint.py\", line 115, in create_request\r\n    self._event_emitter.emit(event_name, request=request,\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/hooks.py\", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/hooks.py\", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/hooks.py\", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/signers.py\", line 152, in sign\r\n    auth = self.get_auth_instance(**kwargs)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/signers.py\", line 232, in get_auth_instance\r\n    frozen_credentials = self._credentials.get_frozen_credentials()\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 591, in get_frozen_credentials\r\n    self._refresh()\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 486, in _refresh\r\n    self._protected_refresh(is_mandatory=is_mandatory_refresh)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 502, in _protected_refresh\r\n    metadata = self._refresh_using()\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 643, in fetch_credentials\r\n    return self._get_cached_credentials()\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 654, in _get_cached_credentials\r\n    self._write_to_cache(response)\r\n  File \"/Users/scotts/.pyenv/versions/test38/lib/python3.8/site-packages/botocore/credentials.py\", line 679, in _write_to_cache\r\n    self._cache[self._cache_key] = deepcopy(response)\r\n  File \"/Users/scotts/.pyenv/versions/3.8.0/lib/python3.8/copy.py\", line 161, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: cannot pickle 'coroutine' object\r\n```\r\n**pip freeze results**\r\naiobotocore==0.12.0\r\naiohttp==3.6.2\r\naioitertools==0.5.1\r\nasync-timeout==3.0.1\r\nattrs==19.3.0\r\nbotocore==1.15.15\r\nchardet==3.0.4\r\ndocutils==0.15.2\r\nidna==2.9\r\njmespath==0.9.5\r\nmultidict==4.7.5\r\npython-dateutil==2.8.1\r\nsix==1.14.0\r\nurllib3==1.25.8\r\nwrapt==1.12.1\r\nyarl==1.4.2\r\n\r\n**Environment:**\r\n - Python Version: 3.8.0\r\n - OS name and version: Darwin Kernel Version 18.7.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/777", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/777/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/777/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/777", "id": 575953054, "node_id": "MDU6SXNzdWU1NzU5NTMwNTQ=", "number": 777, "title": "advice/docs on best practices for client configuration when using aiobotocore", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-05T02:38:53Z", "updated_at": "2020-05-02T19:39:17Z", "closed_at": "2020-03-31T08:23:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue centers around a question about whether or not to use client connection pools with aiobotocore.   e.g. is it better to use a single client with a connection pool > 1 connection or is it better to use many clients and each one has only 1 connection?  To illustrate with some code options...\r\n\r\nWhen using botocore, the session can provide default config for clients and it comes with some default values for client connection pools.  These can be plugged in for aiobotocore, e.g.\r\n\r\n```python\r\nimport asyncio\r\n\r\nimport aiobotocore.client  # type: ignore\r\nimport aiobotocore.config  # type: ignore\r\nimport aiobotocore.session  # type: ignore\r\nimport botocore.endpoint  # type: ignore\r\nimport botocore.session  # type: ignore\r\n\r\n#: max_pool_connections for AWS clients (10 by default)\r\nMAX_POOL_CONNECTIONS = botocore.endpoint.MAX_POOL_CONNECTIONS\r\n#: AWS asyncio session config\r\n#: ..seealso:: https://github.com/boto/botocore/blob/develop/botocore/config.py\r\nAIO_AWS_CONFIG = aiobotocore.config.AioConfig(max_pool_connections=MAX_POOL_CONNECTIONS)\r\n\r\n#: a semaphore to limit requests to the max client connections\r\nCLIENT_SEMAPHORE = asyncio.Semaphore(MAX_POOL_CONNECTIONS)\r\n\r\nAIO_SESSION = aiobotocore.get_session()\r\nAIO_SESSION.set_default_client_config(AIO_AWS_CONFIG)\r\n\r\nasync def get_stuff():\r\n    async with CLIENT_SEMAPHORE:  # maybe this helps avoid DNS attacks\r\n        async with AIO_SESSION.create_client(\"s3\") as s3_client:\r\n            # assumptions:\r\n            # - it creates a new client with default config\r\n            # - the `s3_client` has a connection pool of 10 connections\r\n            resp = await s3_client.list_buckets()    # how many connections are used?\r\n            return resp\r\n```\r\n(BTW, this is quick snippet, please excuse use of globals for this example.)\r\n\r\nThe `get_stuff` coroutine creates a new client context-manager that will clean up after itself.  Would it be better if the client created only 1 connection?\r\n\r\nAnother option is to create a client with a connection pool and pass it around, e.g. building on the above:\r\n```python\r\n\r\nAIO_S3_CLIENT = AIO_SESSION.create_client(\"s3\")\r\n# assume it has a connection pool of 10 connections, by default\r\n\r\nasync def get_stuff(s3_client: aiobotocore.client.AioBaseClient):\r\n    async with CLIENT_SEMAPHORE:  # maybe this helps avoid DNS attacks\r\n        resp = await s3_client.list_buckets()  # how many connections are used?\r\n        return resp\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\ntry:\r\n    loop.run(get_stuff(AIO_S3_CLIENT))\r\nfinally:\r\n    loop.run(AIO_S3_CLIENT.close())  # need to close connection(s)\r\n    loop.stop()\r\n    loop.close()\r\n```\r\n\r\nHope this question makes some sense.  I'm not totally familiar with aiohttp sessions and clients and how aiobotocore manages any connection pools, if any.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/765", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/765/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/765/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/765", "id": 566424130, "node_id": "MDU6SXNzdWU1NjY0MjQxMzA=", "number": 765, "title": "Botocore 1.15.0 compatibility", "user": {"login": "JucianoC", "id": 13921363, "node_id": "MDQ6VXNlcjEzOTIxMzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13921363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JucianoC", "html_url": "https://github.com/JucianoC", "followers_url": "https://api.github.com/users/JucianoC/followers", "following_url": "https://api.github.com/users/JucianoC/following{/other_user}", "gists_url": "https://api.github.com/users/JucianoC/gists{/gist_id}", "starred_url": "https://api.github.com/users/JucianoC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JucianoC/subscriptions", "organizations_url": "https://api.github.com/users/JucianoC/orgs", "repos_url": "https://api.github.com/users/JucianoC/repos", "events_url": "https://api.github.com/users/JucianoC/events{/privacy}", "received_events_url": "https://api.github.com/users/JucianoC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-17T17:02:14Z", "updated_at": "2020-02-20T16:48:25Z", "closed_at": "2020-02-20T16:48:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has some reason to limit the `botocore` version to be <1.13.15?\r\nhttps://github.com/aio-libs/aiobotocore/blob/master/setup.py#L11\r\n\r\nHas some perspective when the current version (1.15.0) is going to be supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/762", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/762/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/762/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/762", "id": 565998326, "node_id": "MDU6SXNzdWU1NjU5OTgzMjY=", "number": 762, "title": "yield_fixture is deprecated", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1369284696, "node_id": "MDU6TGFiZWwxMzY5Mjg0Njk2", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-17T00:29:45Z", "updated_at": "2020-02-17T06:40:29Z", "closed_at": "2020-02-17T06:40:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://docs.pytest.org/en/latest/yieldfixture.html\r\n- deprecated since pytest 3.x\r\n\r\n```\r\n$ git grep 'yield_fixture'\r\ntests/conftest.py:@pytest.yield_fixture\r\ntests/conftest.py:@pytest.yield_fixture\r\ntests/conftest.py:@pytest.yield_fixture\r\ntests/conftest.py:@pytest.yield_fixture\r\ntests/conftest.py:@pytest.yield_fixture\r\ntests/mock_server.py:@pytest.yield_fixture\r\ntests/mock_server.py:@pytest.yield_fixture\r\ntests/mock_server.py:@pytest.yield_fixture\r\ntests/mock_server.py:@pytest.yield_fixture\r\ntests/mock_server.py:@pytest.yield_fixture\r\n```\r\n\r\n```\r\n$ pytest --version\r\nThis is pytest version 5.3.5, imported from /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/pytest/__init__.py\r\nsetuptools registered plugins:\r\n  pytest-cov-2.8.1 at /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/pytest_cov/plugin.py\r\n  pytest-asyncio-0.10.0 at /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/pytest_asyncio/plugin.py\r\n  pytest-forked-1.1.3 at /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/pytest_forked/__init__.py\r\n  pytest-xdist-1.31.0 at /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/xdist/plugin.py\r\n  pytest-xdist-1.31.0 at /opt/conda/envs/aiobotocore/lib/python3.6/site-packages/xdist/looponfail.py\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/761", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/761/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/761/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/761", "id": 565794378, "node_id": "MDU6SXNzdWU1NjU3OTQzNzg=", "number": 761, "title": "Design - register aio handlers for events", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-15T19:01:57Z", "updated_at": "2020-02-15T21:48:57Z", "closed_at": "2020-02-15T21:48:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Botocore issues many event triggers - could aiobotocore operate like a plugin to register handlers with a botocore session?\r\n\r\n- https://botocore.amazonaws.com/v1/documentation/api/latest/topics/events.html\r\n  - `before-call` might substitute an aiohttp client\r\n\r\nIt might be better if the botocore session could register a component for a client creator or the client creator could register a client component or the `BaseClient` could register a component to make-request that supports asyncio coroutines.  This is not yet possible without a PR on botocore that might or might not be reviewed and merged.\r\n\r\nCould a simple PR on botocore try to add a `botocore.config.Config` option for something like `use_aiohttp` that might switch things up when it creates a client to return aio-clients?  Could this add a new base-class that could be used instead of the `BaseClient`, it seems like this is what aiobotocore is doing with `AioBaseClient`, but it has to copy/maintain a ton of botocore apparatus.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/757", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/757/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/757/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/757", "id": 564870174, "node_id": "MDU6SXNzdWU1NjQ4NzAxNzQ=", "number": 757, "title": "pytest should hit mock server, not live aws resources", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-13T18:27:22Z", "updated_at": "2020-02-15T13:59:15Z", "closed_at": "2020-02-15T13:59:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen running `pytest` with no internet connection, various tests are failing because they try to hit actual AWS services.   The test infrastructure should be using `moto` mocks (server proxy) for all request/response processing.  If any tests are designed to hit actual aws services, ensure they are tagged with a pytest marker and skipped by default.\r\n\r\nhttps://github.com/spulec/moto#stand-alone-server-mode\r\n- pytest-moto seems to already enable this\r\n- but why would aiobotocore need anything more than moto decorators and recommended credential hacks to create an `AioSession` with all the necessary mocks setup?\r\n\r\nApply a `proxies` config setting to hit a moto server for all client connections, i.e.\r\n- https://github.com/boto/botocore/blob/develop/botocore/config.py#L59\r\n- or `AioConfig` equivalent\r\n- https://github.com/boto/botocore/blob/develop/botocore/session.py#L386\r\n  - apply it with `session.set_default_client_config(mock_config)`\r\n\r\nOr tests might register a custom endpoint resolver:\r\n- https://github.com/boto/botocore/blob/develop/botocore/session.py#L157", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/756", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/756/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/756/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/756", "id": 564850804, "node_id": "MDU6SXNzdWU1NjQ4NTA4MDQ=", "number": 756, "title": "pytest failing s3 tests - fails to create bucket", "user": {"login": "dazza-codes", "id": 240623, "node_id": "MDQ6VXNlcjI0MDYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazza-codes", "html_url": "https://github.com/dazza-codes", "followers_url": "https://api.github.com/users/dazza-codes/followers", "following_url": "https://api.github.com/users/dazza-codes/following{/other_user}", "gists_url": "https://api.github.com/users/dazza-codes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazza-codes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazza-codes/subscriptions", "organizations_url": "https://api.github.com/users/dazza-codes/orgs", "repos_url": "https://api.github.com/users/dazza-codes/repos", "events_url": "https://api.github.com/users/dazza-codes/events{/privacy}", "received_events_url": "https://api.github.com/users/dazza-codes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T17:49:19Z", "updated_at": "2020-02-15T13:56:56Z", "closed_at": "2020-02-15T13:56:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n- `master` is expected to pass all unit tests on a clean git clone\r\n- pytest is failing s3 tests - fails to create bucket\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [x] I have provided `pip freeze` results\r\n- [x] I have provided sample code or detailed way to reproduce\r\n- this is purely unit tests on aiobotocore, so the following do not apply because `master` is expected to pass all unit tests on a clean git clone:\r\n  - [-] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n  - [-] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n  - [-] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n\r\n**pip freeze results**\r\n\r\n```\r\n$ pip freeze\r\n-e git+git@github.com:dazza-codes/aiobotocore.git@dd860aa8c0ce43e551c00a48de03d361cf964a8a#egg=aiobotocore\r\naiohttp==3.3.2\r\nalabaster==0.7.12\r\nasync-generator==1.10\r\nasync-timeout==3.0.1\r\natomicwrites==1.3.0\r\nattrs==19.3.0\r\naws-sam-translator==1.20.1\r\naws-xray-sdk==2.4.3\r\nawscli==1.16.278\r\nBabel==2.8.0\r\nboto==2.49.0\r\nboto3==1.10.14\r\nbotocore==1.13.14\r\ncertifi==2019.11.28\r\ncffi==1.14.0\r\ncfn-lint==0.27.5\r\nchardet==3.0.4\r\nClick==7.0\r\ncolorama==0.4.1\r\ncoverage==4.5.4\r\ncryptography==2.8\r\ndill==0.3.1.1\r\ndocker==4.2.0\r\ndocutils==0.15.2\r\necdsa==0.15\r\nentrypoints==0.3\r\nflake8==3.7.8\r\nFlask==1.1.1\r\nfuture==0.18.2\r\nidna==2.8\r\nidna-ssl==1.1.0\r\nimagesize==1.2.0\r\nimportlib-metadata==1.5.0\r\nimportlib-resources==1.0.2\r\nitsdangerous==1.1.0\r\nJinja2==2.11.1\r\njmespath==0.9.4\r\njsondiff==1.1.2\r\njsonpatch==1.25\r\njsonpickle==1.2\r\njsonpointer==2.0\r\njsonschema==3.2.0\r\nMarkupSafe==1.1.1\r\nmccabe==0.6.1\r\nmock==4.0.1\r\nmore-itertools==8.2.0\r\nmoto==1.3.14.dev326\r\nmultidict==4.5.2\r\npackaging==20.1\r\npluggy==0.13.1\r\npy==1.8.1\r\npyasn1==0.4.8\r\npycodestyle==2.5.0\r\npycparser==2.19\r\npyflakes==2.1.1\r\nPygments==2.5.2\r\npyparsing==2.4.6\r\npyrsistent==0.15.7\r\npytest==5.2.1\r\npytest-asyncio==0.10.0\r\npytest-cov==2.8.1\r\npython-dateutil==2.8.0\r\npython-jose==3.1.0\r\npytz==2019.3\r\nPyYAML==5.1.2\r\nrequests==2.22.0\r\nresponses==0.10.9\r\nrsa==3.4.2\r\ns3transfer==0.2.1\r\nsix==1.14.0\r\nsnowballstemmer==2.0.0\r\nSphinx==2.2.0\r\nsphinxcontrib-applehelp==1.0.1\r\nsphinxcontrib-devhelp==1.0.1\r\nsphinxcontrib-htmlhelp==1.0.2\r\nsphinxcontrib-jsmath==1.0.1\r\nsphinxcontrib-qthelp==1.0.2\r\nsphinxcontrib-serializinghtml==1.1.3\r\nsshpubkeys==3.1.0\r\nurllib3==1.25.8\r\nwcwidth==0.1.8\r\nwebsocket-client==0.57.0\r\nWerkzeug==1.0.0\r\nwrapt==1.11.2\r\nxmltodict==0.12.0\r\nyarl==1.3.0\r\nzipp==2.2.0\r\n```\r\n\r\n**Environment:**\r\n\r\n```\r\n$ python --version\r\nPython 3.6.7\r\n$ cat /etc/lsb-release \r\nDISTRIB_ID=Ubuntu\r\nDISTRIB_RELEASE=18.04\r\nDISTRIB_CODENAME=bionic\r\nDISTRIB_DESCRIPTION=\"Ubuntu 18.04.4 LTS\"\r\n```\r\n\r\n**git details**\r\n\r\nA test branch off recent `master` that has no additional changes yet.\r\n```\r\n$ git status\r\nOn branch no-raw-headers\r\nnothing to commit, working tree clean\r\n\r\n$ git ll\r\n* dd860aa - (HEAD -> no-raw-headers, tag: 0.11.1, origin/master, origin/HEAD, master) bump to release version and add version test (6 weeks ago) <Alexander Mohr>\r\n* a8127f8 - Event streams (#747) (6 weeks ago) <Terry Cain>\r\n* 65320c3 - (tag: 0.11.0) aiobotocore bump + fixes (#744) (3 months ago) <Alexander Mohr>\r\n* adfdbe2 - Update bug_report.md (4 months ago) <Alexander Mohr>\r\n* 8539431 - Update bug_report.md (4 months ago) <Alexander Mohr>\r\n* 957c91b - (tag: 0.10.4) bump deps (#736) (4 months ago) <Alexander Mohr>\r\n* 2a9426c - Closing aiohttp session should be awaited (#724) (4 months ago) <Benjamin Sitruk>\r\n```\r\n\r\n**Additional context**\r\n\r\nClone and create new virtualenv off `master`:\r\n```\r\ncd aiobotocore/\r\nconda create -n aiobotocore python=3.6\r\nconda activate aiobotocore\r\npython --version\r\ngit checkout master\r\npython -m pip install -e .[boto3,awscli]\r\npython -m pip install -U -r requirements-dev.txt \r\npip check\r\n```\r\n\r\nRun pytest:\r\n```\r\n$ which pytest\r\n/opt/conda/envs/aiobotocore/bin/pytest\r\n\r\n$ pytest\r\n================================================================================ test session starts ================================================================================\r\nplatform linux -- Python 3.6.7, pytest-5.2.1, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/dlweber/src/aiobotocore\r\nplugins: cov-2.8.1, asyncio-0.10.0\r\ncollected 68 items                                                                                                                                                                  \r\n\r\ntests/test_basic_s3.py ..............E..s.....FEE..                                                                                                                           [ 41%]\r\ntests/test_config.py ...                                                                                                                                                      [ 45%]\r\ntests/test_dynamodb.py ......                                                                                                                                                 [ 54%]\r\ntests/test_eventstreams.py ..                                                                                                                                                 [ 57%]\r\ntests/test_monitor.py .                                                                                                                                                       [ 58%]\r\ntests/test_patches.py ...                                                                                                                                                     [ 63%]\r\ntests/test_response.py ...............                                                                                                                                        [ 85%]\r\ntests/test_sns.py .....                                                                                                                                                       [ 92%]\r\ntests/test_sqs.py ....                                                                                                                                                        [ 98%]\r\ntests/test_waiter.py .                                                                                                                                                        [100%]\r\n\r\n________________________________________________________________ ERROR at setup of test_unicode_key_put_list[False] _________________________________________________________________\r\n\r\nregion = 'us-east-1', create_bucket = <function create_bucket.<locals>._f at 0x7f05ca2f1400>, s3_client = <aiobotocore.client.S3 object at 0x7f05cb886c18>\r\nevent_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n\r\n    @pytest.fixture\r\n    def bucket_name(region, create_bucket, s3_client, event_loop):\r\n>       name = event_loop.run_until_complete(create_bucket(region))\r\n\r\ntests/conftest.py:230: \r\n\r\n        if http.status_code >= 300:\r\n            error_code = parsed_response.get(\"Error\", {}).get(\"Code\")\r\n            error_class = self.exceptions.from_code(error_code)\r\n>           raise error_class(parsed_response, operation_name)\r\nE           botocore.errorfactory.NoSuchBucket: An error occurred (NoSuchBucket) when calling the PutBucketVersioning operation: The specified bucket does not exist\r\n\r\naiobotocore/client.py:102: NoSuchBucket\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/752", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/752/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/752/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/752", "id": 559144062, "node_id": "MDU6SXNzdWU1NTkxNDQwNjI=", "number": 752, "title": "Pinned Botocore version makes it difficult to install beside other packages", "user": {"login": "jasonamyers", "id": 1222137, "node_id": "MDQ6VXNlcjEyMjIxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1222137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonamyers", "html_url": "https://github.com/jasonamyers", "followers_url": "https://api.github.com/users/jasonamyers/followers", "following_url": "https://api.github.com/users/jasonamyers/following{/other_user}", "gists_url": "https://api.github.com/users/jasonamyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonamyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonamyers/subscriptions", "organizations_url": "https://api.github.com/users/jasonamyers/orgs", "repos_url": "https://api.github.com/users/jasonamyers/repos", "events_url": "https://api.github.com/users/jasonamyers/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonamyers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T15:08:27Z", "updated_at": "2020-02-05T05:56:04Z", "closed_at": "2020-02-05T05:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm having a hard time installing aiobotocore beside many of our common tools due to older botocore requirements.  \r\n`Could not find a version that matches botocore<1.13.15,<1.15.0,>=1.13.14,>=1.14.9`\r\n\r\n**Checklist**\r\n- [X] I have reproduced in environment where `pip check` passes without errors\r\n- [X] I have provided `pip freeze` results\r\n- [X] I have provided sample code or detailed way to reproduce\r\n- [X] I have tried the same code in botocore to ensure this is an aiobotocore specific issue\r\n- [X] I have tried similar code in aiohttp to ensure this is is an aiobotocore specific issue\r\n- [X] I have checked the latest and older versions of aiobotocore/aiohttp/python to see if this is a regression / injection\r\n\r\n**pip freeze results**\r\naiobotocore==0.11.1\r\naiohttp==3.6.2\r\nalembic==1.3.3\r\nasync-generator==1.10\r\nasync-timeout==3.0.1\r\nattrs==19.3.0\r\nboto3==1.11.9\r\nbotocore==1.14.9\r\ncffi==1.13.2\r\nchardet==3.0.4\r\ncredstash==1.16.1\r\ncryptography==2.8\r\ndnspython==1.16.0\r\ndocutils==0.15.2\r\nidna==2.8\r\njmespath==0.9.4\r\nMako==1.1.1\r\nMarkupSafe==1.1.1\r\nmixpanel==4.5.0\r\nmultidict==4.7.4\r\nmysql-connector-python==8.0.19\r\nprotobuf==3.6.1\r\npycparser==2.19\r\npython-dateutil==2.8.0\r\npython-editor==1.0.4\r\npython-json-logger==0.1.11\r\nPyYAML==5.3\r\ns3transfer==0.3.2\r\nsix==1.14.0\r\nSQLAlchemy==1.3.13\r\nurllib3==1.25.8\r\nwrapt==1.11.2\r\nyarl==1.4.2\r\n\r\n**Environment:**\r\n - Python Version: 3.7.6\r\n - OS name and version: Mac OS Catalina\r\n\r\n**Additional context**\r\nHere is a Pipenv graph.  You can see that aiobotocore and credstash for example can not live together peacefully, nor can current boto3 and several other AWS libs we use that rely on a higher version of botocore.\r\n```\r\naiobotocore==0.11.1\r\n  - aiohttp [required: >=3.3.1, installed: 3.6.2]\r\n    - async-timeout [required: >=3.0,<4.0, installed: 3.0.1]\r\n    - attrs [required: >=17.3.0, installed: 19.3.0]\r\n    - chardet [required: >=2.0,<4.0, installed: 3.0.4]\r\n    - multidict [required: >=4.5,<5.0, installed: 4.7.4]\r\n    - yarl [required: >=1.0,<2.0, installed: 1.4.2]\r\n      - idna [required: >=2.0, installed: 2.8]\r\n      - multidict [required: >=4.0, installed: 4.7.4]\r\n  - async-generator [required: >=1.10, installed: 1.10]\r\n  - botocore [required: >=1.13.14,<1.13.15, installed: 1.14.9]\r\n    - docutils [required: >=0.10,<0.16, installed: 0.15.2]\r\n    - jmespath [required: >=0.7.1,<1.0.0, installed: 0.9.4]\r\n    - python-dateutil [required: >=2.1,<3.0.0, installed: 2.8.0]\r\n      - six [required: >=1.5, installed: 1.14.0]\r\n    - urllib3 [required: >=1.20,<1.26, installed: 1.25.8]\r\n  - wrapt [required: >=1.10.10, installed: 1.11.2]\r\nalembic==1.3.3\r\n  - Mako [required: Any, installed: 1.1.1]\r\n    - MarkupSafe [required: >=0.9.2, installed: 1.1.1]\r\n  - python-dateutil [required: Any, installed: 2.8.0]\r\n    - six [required: >=1.5, installed: 1.14.0]\r\n  - python-editor [required: >=0.3, installed: 1.0.4]\r\n  - SQLAlchemy [required: >=1.1.0, installed: 1.3.13]\r\ncredstash==1.16.1\r\n  - boto3 [required: >=1.1.1, installed: 1.11.9]\r\n    - botocore [required: >=1.14.9,<1.15.0, installed: 1.14.9]\r\n      - docutils [required: >=0.10,<0.16, installed: 0.15.2]\r\n      - jmespath [required: >=0.7.1,<1.0.0, installed: 0.9.4]\r\n      - python-dateutil [required: >=2.1,<3.0.0, installed: 2.8.0]\r\n        - six [required: >=1.5, installed: 1.14.0]\r\n      - urllib3 [required: >=1.20,<1.26, installed: 1.25.8]\r\n    - jmespath [required: >=0.7.1,<1.0.0, installed: 0.9.4]\r\n    - s3transfer [required: >=0.3.0,<0.4.0, installed: 0.3.2]\r\n      - botocore [required: >=1.12.36,<2.0.0, installed: 1.14.9]\r\n        - docutils [required: >=0.10,<0.16, installed: 0.15.2]\r\n        - jmespath [required: >=0.7.1,<1.0.0, installed: 0.9.4]\r\n        - python-dateutil [required: >=2.1,<3.0.0, installed: 2.8.0]\r\n          - six [required: >=1.5, installed: 1.14.0]\r\n        - urllib3 [required: >=1.20,<1.26, installed: 1.25.8]\r\n  - cryptography [required: >=2.1, installed: 2.8]\r\n    - cffi [required: >=1.8,!=1.11.3, installed: 1.13.2]\r\n      - pycparser [required: Any, installed: 2.19]\r\n    - six [required: >=1.4.1, installed: 1.14.0]\r\nmixpanel==4.5.0\r\n  - six [required: >=1.9.0, installed: 1.14.0]\r\nmysql-connector-python==8.0.19\r\n  - dnspython [required: ==1.16.0, installed: 1.16.0]\r\n  - protobuf [required: ==3.6.1, installed: 3.6.1]\r\n    - setuptools [required: Any, installed: 45.1.0]\r\n    - six [required: >=1.9, installed: 1.14.0]\r\npython-json-logger==0.1.11\r\nPyYAML==5.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/750", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/750/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/750/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/750", "id": 555907966, "node_id": "MDU6SXNzdWU1NTU5MDc5NjY=", "number": 750, "title": "'async for' requires an object with __aiter__ method, got s3.Bucket.objectsCollection", "user": {"login": "parinmaru2", "id": 4692235, "node_id": "MDQ6VXNlcjQ2OTIyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4692235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parinmaru2", "html_url": "https://github.com/parinmaru2", "followers_url": "https://api.github.com/users/parinmaru2/followers", "following_url": "https://api.github.com/users/parinmaru2/following{/other_user}", "gists_url": "https://api.github.com/users/parinmaru2/gists{/gist_id}", "starred_url": "https://api.github.com/users/parinmaru2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parinmaru2/subscriptions", "organizations_url": "https://api.github.com/users/parinmaru2/orgs", "repos_url": "https://api.github.com/users/parinmaru2/repos", "events_url": "https://api.github.com/users/parinmaru2/events{/privacy}", "received_events_url": "https://api.github.com/users/parinmaru2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T00:06:40Z", "updated_at": "2020-02-15T14:00:54Z", "closed_at": "2020-02-15T14:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem:**\r\n\r\nI am using aioboto3 to create s3 resource.\r\nAnd then I call s3 objects filter method:\r\n\r\n```\r\nmy_bucket = self.s3_resource.Bucket(bucket_name)\r\nresponse = my_bucket.objects.filter(Prefix=remote_directory_prefix)\r\n```\r\n\r\nI can't loop/iterate over this response:\r\n\r\n```\r\nasync for r in response:\r\n```\r\nAbove async for throws this exception:\r\n**'async for' requires an object with aiter method, got s3.Bucket.objectsCollection**\r\n\r\n**Analysis**\r\nIt seems s3.Bucket.objectsCollection doesn't implement aiter() method", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/741", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/741/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/741/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/741", "id": 514654179, "node_id": "MDU6SXNzdWU1MTQ2NTQxNzk=", "number": 741, "title": "Early Warning: aiohttp v4.0.0a1 has a breaking change in TCPConnector", "user": {"login": "erikistre", "id": 53830221, "node_id": "MDQ6VXNlcjUzODMwMjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/53830221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikistre", "html_url": "https://github.com/erikistre", "followers_url": "https://api.github.com/users/erikistre/followers", "following_url": "https://api.github.com/users/erikistre/following{/other_user}", "gists_url": "https://api.github.com/users/erikistre/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikistre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikistre/subscriptions", "organizations_url": "https://api.github.com/users/erikistre/orgs", "repos_url": "https://api.github.com/users/erikistre/repos", "events_url": "https://api.github.com/users/erikistre/events{/privacy}", "received_events_url": "https://api.github.com/users/erikistre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T13:06:00Z", "updated_at": "2019-10-30T23:56:44Z", "closed_at": "2019-10-30T23:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nMy virtual environment was overzealous and picked up prerelease aiohttp v4.0.0a1. In that version, the `TCPConnector.__init__` no longer accepts a loop argument and the attempted construction of that object in aiobotocore/endpoint.py fails.\r\n\r\nI've fixed my environment but I wanted to quickly notify maintainers here in case that change becomes permanent. I know nothing about the release trajectory/plans of aiohttp and this could be transient.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/732", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/732/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/732/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/732", "id": 502903582, "node_id": "MDU6SXNzdWU1MDI5MDM1ODI=", "number": 732, "title": "bump botocore version", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-05T02:12:31Z", "updated_at": "2019-11-12T10:57:29Z", "closed_at": "2019-11-12T10:57:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "we're triggering some incompatibilities: https://github.com/aio-libs/aiobotocore/issues/729", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/730", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/730/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/730/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/730", "id": 499053830, "node_id": "MDU6SXNzdWU0OTkwNTM4MzA=", "number": 730, "title": "Delete all objects from a bucket", "user": {"login": "Gloix", "id": 5000394, "node_id": "MDQ6VXNlcjUwMDAzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5000394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gloix", "html_url": "https://github.com/Gloix", "followers_url": "https://api.github.com/users/Gloix/followers", "following_url": "https://api.github.com/users/Gloix/following{/other_user}", "gists_url": "https://api.github.com/users/Gloix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gloix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gloix/subscriptions", "organizations_url": "https://api.github.com/users/Gloix/orgs", "repos_url": "https://api.github.com/users/Gloix/repos", "events_url": "https://api.github.com/users/Gloix/events{/privacy}", "received_events_url": "https://api.github.com/users/Gloix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T18:45:17Z", "updated_at": "2019-10-03T09:45:05Z", "closed_at": "2019-10-03T09:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to delete all objects in a bucket using the resource API:\r\n\r\n    aioboto3.resource(\"s3\").Bucket(\"my-bucket\").objects.all().delete()\r\n\r\nI get the following error:\r\n\r\n    NotImplementedError: <aiobotocore.paginate.AioPageIterator object at 0x7f775d3900f0> is an AsyncIterable: use `async for`\r\n\r\nIn line 14 of the paginate.py file.\r\n\r\nThe error originates from [dist-packages/boto3/resources/collection.py, line 166](https://github.com/boto/boto3/blob/develop/boto3/resources/collection.py#L166)\r\n\r\nFrom my understanding the resource API has some logic that iterates over a collection (in this case, a paginated one) and tries to do it in a synchronous way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/729", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/729/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/729/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/729", "id": 498985298, "node_id": "MDU6SXNzdWU0OTg5ODUyOTg=", "number": 729, "title": "Update requirements", "user": {"login": "mivade", "id": 2805515, "node_id": "MDQ6VXNlcjI4MDU1MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2805515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mivade", "html_url": "https://github.com/mivade", "followers_url": "https://api.github.com/users/mivade/followers", "following_url": "https://api.github.com/users/mivade/following{/other_user}", "gists_url": "https://api.github.com/users/mivade/gists{/gist_id}", "starred_url": "https://api.github.com/users/mivade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mivade/subscriptions", "organizations_url": "https://api.github.com/users/mivade/orgs", "repos_url": "https://api.github.com/users/mivade/repos", "events_url": "https://api.github.com/users/mivade/events{/privacy}", "received_events_url": "https://api.github.com/users/mivade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-26T16:15:18Z", "updated_at": "2019-10-05T02:12:43Z", "closed_at": "2019-10-03T09:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the required version of `botocore` is out of date. When trying to install other tools in the same environment that require newer versions I get messages from pip like this:\r\n\r\n```\r\naiobotocore 0.10.3 has requirement botocore<1.12.190,>=1.12.189, but you'll have botocore 1.12.236 which is incompatible.\r\n```\r\n\r\nIn order to keep using `aiobotocore` these requirements should be relaxed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/721", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/721/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/721/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/721", "id": 480266593, "node_id": "MDU6SXNzdWU0ODAyNjY1OTM=", "number": 721, "title": "API documentation is empty", "user": {"login": "mivade", "id": 2805515, "node_id": "MDQ6VXNlcjI4MDU1MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2805515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mivade", "html_url": "https://github.com/mivade", "followers_url": "https://api.github.com/users/mivade/followers", "following_url": "https://api.github.com/users/mivade/following{/other_user}", "gists_url": "https://api.github.com/users/mivade/gists{/gist_id}", "starred_url": "https://api.github.com/users/mivade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mivade/subscriptions", "organizations_url": "https://api.github.com/users/mivade/orgs", "repos_url": "https://api.github.com/users/mivade/repos", "events_url": "https://api.github.com/users/mivade/events{/privacy}", "received_events_url": "https://api.github.com/users/mivade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648070, "node_id": "MDU6TGFiZWwyMTg2NDgwNzA=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-13T17:05:58Z", "updated_at": "2020-02-22T05:25:29Z", "closed_at": "2020-02-22T05:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, navigating to https://aiobotocore.readthedocs.io/en/latest/api.html shows a page that simply has a title \"API\" and no content.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/718", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/718/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/718/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/718", "id": 474869628, "node_id": "MDU6SXNzdWU0NzQ4Njk2Mjg=", "number": 718, "title": "Why is boto3 being pinned to a specific version?", "user": {"login": "rahul003", "id": 3457240, "node_id": "MDQ6VXNlcjM0NTcyNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3457240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahul003", "html_url": "https://github.com/rahul003", "followers_url": "https://api.github.com/users/rahul003/followers", "following_url": "https://api.github.com/users/rahul003/following{/other_user}", "gists_url": "https://api.github.com/users/rahul003/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahul003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahul003/subscriptions", "organizations_url": "https://api.github.com/users/rahul003/orgs", "repos_url": "https://api.github.com/users/rahul003/repos", "events_url": "https://api.github.com/users/rahul003/events{/privacy}", "received_events_url": "https://api.github.com/users/rahul003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-30T23:42:42Z", "updated_at": "2019-08-10T06:29:32Z", "closed_at": "2019-08-09T19:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nLooks like boto3 is now pinned to a specific version. Why was this done?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/717", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/717/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/717/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/717", "id": 474861830, "node_id": "MDU6SXNzdWU0NzQ4NjE4MzA=", "number": 717, "title": "aiobotocore get_paginator overrides PAGE_ITERATOR_CLS in botocore", "user": {"login": "iechevarria", "id": 19667089, "node_id": "MDQ6VXNlcjE5NjY3MDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/19667089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iechevarria", "html_url": "https://github.com/iechevarria", "followers_url": "https://api.github.com/users/iechevarria/followers", "following_url": "https://api.github.com/users/iechevarria/following{/other_user}", "gists_url": "https://api.github.com/users/iechevarria/gists{/gist_id}", "starred_url": "https://api.github.com/users/iechevarria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iechevarria/subscriptions", "organizations_url": "https://api.github.com/users/iechevarria/orgs", "repos_url": "https://api.github.com/users/iechevarria/repos", "events_url": "https://api.github.com/users/iechevarria/events{/privacy}", "received_events_url": "https://api.github.com/users/iechevarria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T23:09:53Z", "updated_at": "2019-08-15T07:19:34Z", "closed_at": "2019-08-15T07:19:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently moving from botocore to aiobotocore, and there are pieces of the application that are dependent on botocore working correctly. aiobotocore [overrides](https://github.com/aio-libs/aiobotocore/blob/b0b63d3eaa74caf6c3fa0482cb55153a117a0fcd/aiobotocore/client.py#L147) PAGE_ITERATOR_CLS in botocore when get_paginator is called, and this breaks functions where botocore's [Paginator.paginate](https://github.com/boto/botocore/blob/develop/botocore/paginate.py#L609) are called because the functions must now be async'ed. \r\n\r\nIs there a way to prevent this change to botocore? Is it perhaps possible to create an AioPaginator class that wraps botocore's Paginator and updates PAGE_ITERATOR_CLS without affecting botocore? Thanks for your time!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/714", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/714/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/714/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/714", "id": 471271675, "node_id": "MDU6SXNzdWU0NzEyNzE2NzU=", "number": 714, "title": "How to set aiohttp \"TCPConnector\" \"limit\" and \"limit_per_host\" parameters?", "user": {"login": "mojimi", "id": 10172340, "node_id": "MDQ6VXNlcjEwMTcyMzQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10172340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojimi", "html_url": "https://github.com/mojimi", "followers_url": "https://api.github.com/users/mojimi/followers", "following_url": "https://api.github.com/users/mojimi/following{/other_user}", "gists_url": "https://api.github.com/users/mojimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojimi/subscriptions", "organizations_url": "https://api.github.com/users/mojimi/orgs", "repos_url": "https://api.github.com/users/mojimi/repos", "events_url": "https://api.github.com/users/mojimi/events{/privacy}", "received_events_url": "https://api.github.com/users/mojimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-22T19:27:44Z", "updated_at": "2019-08-15T07:05:49Z", "closed_at": "2019-08-15T07:05:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find where I can set these two parameters from aiohttp TCPConnector, I would like to set a limit to rate limit some asynchronous lambda calls.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/710", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/710/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/710/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/710", "id": 466572042, "node_id": "MDU6SXNzdWU0NjY1NzIwNDI=", "number": 710, "title": "Reading from response body outside of client context can hang without warning", "user": {"login": "mpacer", "id": 2482408, "node_id": "MDQ6VXNlcjI0ODI0MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2482408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpacer", "html_url": "https://github.com/mpacer", "followers_url": "https://api.github.com/users/mpacer/followers", "following_url": "https://api.github.com/users/mpacer/following{/other_user}", "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions", "organizations_url": "https://api.github.com/users/mpacer/orgs", "repos_url": "https://api.github.com/users/mpacer/repos", "events_url": "https://api.github.com/users/mpacer/events{/privacy}", "received_events_url": "https://api.github.com/users/mpacer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-07-10T23:22:37Z", "updated_at": "2019-08-15T07:21:17Z", "closed_at": "2019-08-15T07:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nReading `aiobotocore.response.StreamingBody` outside of the s3.client context manager sometimes hangs forever and does not raise a warning.\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [x] I have provided `pip freeze` results\r\n- [x] I have provided sample code or detailed way to reproduce\r\n-  I have tried the same code in botocore to ensure this is a aiobotocore specific issue\r\n(I did not reproduce in botocore because there are no APIs in botocore that use asyncio's async/await syntax for coroutines.) \r\n\r\n\r\n**pip freeze results**\r\nadal==1.2.0\r\naioboto3==6.1.0\r\naiobotocore==0.10.2\r\naiohttp==3.5.4\r\nalabaster==0.7.10\r\nalembic==1.0.10\r\n-e git+https://github.com/mpacer/allofplos.git@031b02c75e150ce3150130d3545250b62461a60c#egg=allofplos\r\nansiwrap==0.8.3\r\nappdirs==1.4.3\r\nappnope==0.1.0\r\narrow==0.12.1\r\nasn1crypto==0.24.0\r\nastcheck==0.2.5\r\nasync-generator==1.10\r\nasync-timeout==3.0.1\r\nasyncio==3.4.3\r\natomicwrites==1.3.0\r\nattrs==17.4.0\r\naws-xray-sdk==0.95\r\nazure-datalake-store==0.0.36\r\nazure-nspkg==3.0.2\r\nBabel==2.6.0\r\nbackcall==0.1.0\r\nbackoff==1.7.1\r\nbcrypt==3.1.4\r\nbdp-boto==0.0.24\r\nbinaryornot==0.4.4\r\nblack==18.9b0\r\nbleach==2.1.3\r\n-e git+https://github.com/mpacer/bookstore.git@5937d0f9bdf17fe61d215af05a216d608e4545ab#egg=bookstore\r\nboto==2.48.0\r\nboto3==1.9.91\r\nbotocore==1.12.91\r\ncachetools==3.0.0\r\ncairocffi==0.9.0\r\nCairoSVG==2.2.1\r\ncertifi==2019.3.9\r\ncertipy==0.1.3\r\ncffi==1.11.5\r\nchardet==3.0.4\r\ncheck-manifest==0.37\r\nclick==6.7\r\ncodecov==2.0.15\r\ncommonmark==0.9.0\r\ncookiecutter==1.6.0\r\ncookies==2.2.1\r\ncoverage==4.5.1\r\ncryptography==2.4.2\r\ncssselect2==0.2.1\r\ncycler==0.10.0\r\ndamnpth==0.1\r\ndatashape==0.5.2\r\ndecorator==4.3.0\r\ndefusedxml==0.5.0\r\n-e git+https://github.com/mpacer/disp.git@2b604763ccacac0c1e3fcaa1b8c43cf10fec577c#egg=disp\r\n-e git+https://github.com/mpacer/display_xml.git@62457642760b8c749d2f9416f5754c26b0d80ee8#egg=display_xml\r\ndnspython==1.16.0\r\ndocker==3.3.0\r\ndocker-pycreds==0.2.3\r\ndocutils==0.14\r\nentrypoints==0.2.3\r\nflake8==3.6.0\r\nflit==1.0\r\nfuture==0.16.0\r\ngcsfs==0.1.2\r\ngdata==2.0.18\r\n-e git+https://github.com/mpacer/ghpro.git@c39b03f1300d0fe18e7cd1a8bf1566973708b37c#egg=ghpro\r\ngitdb2==2.0.3\r\nGitPython==2.1.10\r\ngoogle-api-python-client==1.7.6\r\ngoogle-auth==1.6.1\r\ngoogle-auth-httplib2==0.0.3\r\ngoogle-auth-oauthlib==0.2.0\r\ngrave==0.0.3\r\ngrpcio==1.17.0\r\ngspread==3.1.0\r\nhtml5lib==1.0.1\r\nhttplib2==0.12.0\r\nidna==2.6\r\nidna-ssl==1.1.0\r\nimagesize==1.0.0\r\nimportlib-metadata==0.18\r\nipaddress==1.0.22\r\nipdb==0.12\r\nipykernel==5.1.0\r\nipython==7.6.1\r\nipython-genutils==0.3.0.dev0\r\nipywidgets==7.2.1\r\njedi==0.12.0\r\nJinja2==2.10\r\njinja2-time==0.2.0\r\njmespath==0.9.3\r\njprops==2.0.2\r\njsondiff==1.1.1\r\njsonpickle==0.9.6\r\njsonschema==2.6.0\r\njupyter-client==5.2.4\r\njupyter-conf-search==0.4.4\r\n-e git+https://github.com/mpacer/jupyter_config.git@281d6cf26905e52ec657085c9c1b3591de1d1bab#egg=jupyter_config\r\njupyter-console==6.0.0\r\njupyter-contrib-core==0.3.3\r\n-e git+https://github.com/mpacer/jupyter_contrib_nbextensions.git@640a7d56699c5197f7090fe90de446d0440a1cc5#egg=jupyter_contrib_nbextensions\r\njupyter-core==4.4.0\r\njupyter-highlight-selected-word==0.2.0\r\n-e git+https://github.com/mpacer/jupyter_kernel_mgmt.git@3feffc9bc6950d0ec85ae983d7caeb93ebe76459#egg=jupyter_kernel_mgmt\r\njupyter-kernel-test==0.3\r\n-e git+https://github.com/mpacer/jupyter_latex_envs.git@28b78d76b6c7057c794bfbaa7f86a95b2439d0fe#egg=jupyter_latex_envs\r\n-e git+https://github.com/mpacer/jupyter_nbextensions_configurator.git@4196509100010a65ed4591624d557c4f99302a9f#egg=jupyter_nbextensions_configurator\r\n-e git+https://github.com/mpacer/jupyter_protocol.git@2f91291a92ff097fe292f69b812702e2fe6950af#egg=jupyter_protocol\r\njupyter-server-proxy==1.0.1\r\njupyter-ssh-kernels==0.1\r\njupyterhub==1.0.0\r\n-e git+https://github.com/mpacer/jupyterlab.git@c7720675caa37b68dae42539d80f0fccda01392b#egg=jupyterlab\r\njupyterlab-launcher==0.11.0\r\nkeyring==12.2.1\r\nkiwisolver==1.0.1\r\nlxml==4.2.4\r\nm2r==0.2.1\r\nMako==1.0.7\r\nMarkupSafe==1.0\r\nmatplotlib==2.2.2\r\nmccabe==0.6.1\r\nmistune==0.8.3\r\nmock==2.0.0\r\nmore-itertools==4.1.0\r\nmoto==1.2.0\r\nmpacer-hello-pypi==1.2.3\r\nmpmath==1.0.0\r\nmultidict==4.5.2\r\nmultipledispatch==0.6.0\r\nmusic21==5.3.0\r\nmypy==0.660\r\nmypy-extensions==0.4.1\r\n-e git+https://github.com/mpacer/nbconvert.git@48015d036da9bc2b09eb6bcd45d28b1262c8e6a7#egg=nbconvert\r\nnbformat==4.4.0\r\nnetworkx==2.3\r\nnltk==3.4.1\r\nnose==1.3.7\r\n-e git+https://github.com/mpacer/notebook.git@eea37a6b2110e0b8a5491f17e241fa3c8aecb5f7#egg=notebook\r\n-e git+https://github.com/mpacer/nteract.git@d79aa32a6da0b437afb230fe69068ab49b017389#egg=nteract_on_jupyter&subdirectory=applications/jupyter-extension\r\n-e git+https://github.com/mpacer/scrapbook.git@89efee8ff39eb46f8c4fa2c15b79e6f1e7d19a1d#egg=nteract_scrapbook\r\nnumpy==1.14.3\r\noauth2client==4.1.3\r\noauthlib==3.0.1\r\nodo==0.3.1\r\npackaging==17.1\r\npamela==1.0.0\r\npandas==0.22.0\r\npandocfilters==1.4.2\r\n-e git+https://github.com/mpacer/papermill.git@59641ed4dc45a883ff21692fd2781d8d628ce1dd#egg=papermill\r\nparamiko==2.4.1\r\nparso==0.2.0\r\npbr==4.0.4\r\npeewee==3.6.4\r\npexpect==4.5.0\r\npickleshare==0.7.4\r\nPillow==5.2.0\r\npkginfo==1.4.2\r\nplotly==3.8.1\r\npluggy==0.12.0\r\npockets==0.7.2\r\npoyo==0.4.1\r\nprometheus-client==0.2.0\r\nprompt-toolkit==2.0.4\r\nprotobuf==3.6.1\r\nptyprocess==0.5.2\r\npy==1.5.3\r\npy4j==0.10.6\r\npyaml==17.12.1\r\npyarrow==0.11.1\r\npyasn1==0.4.4\r\npyasn1-modules==0.2.2\r\npycodestyle==2.4.0\r\npyconfigurator==0.4.14\r\npycparser==2.18\r\npycrypto==2.6.1\r\npyflakes==2.0.0\r\nPygments==2.2.0\r\nPyJWT==1.6.4\r\nPyNaCl==1.2.1\r\npyOpenSSL==18.0.0\r\npyparsing==2.2.0\r\npyspark==2.3.0\r\npystache==0.5.4\r\npytest==4.6.3\r\npytest-asyncio==0.10.0\r\npytest-cov==2.5.1\r\npytest-mock==1.10.0\r\npython-dateutil==2.7.2\r\npython-editor==1.0.4\r\npython-language-server==0.18.0\r\npython-Levenshtein==0.12.0\r\npython-utils==2.3.0\r\npytoml==0.1.14\r\npytz==2018.4\r\nPyYAML==3.12\r\npyzmq==17.0.0\r\nreadme-renderer==24.0\r\nrecommonmark==0.5.0\r\nregex==2018.7.11\r\nreportlab==3.5.9\r\nrequests==2.20.0\r\nrequests-cache==0.4.13\r\nrequests-download==0.1.2\r\nrequests-oauthlib==1.0.0\r\nrequests-toolbelt==0.8.0\r\nresponses==0.9.0\r\nretry==0.9.2\r\nretrying==1.3.3\r\nrise==5.5.0\r\nrope==0.12.0\r\nrsa==4.0\r\ns3fs==0.1.5\r\ns3transfer==0.2.1\r\nscipy==1.1.0\r\nseaborn==0.9.0\r\nselenium==3.13.0\r\nSend2Trash==1.5.0\r\nsimpervisor==0.3\r\nsimple-crypt==4.1.7\r\nsimplegeneric==0.8.1\r\nsix==1.11.0\r\nsmmap2==2.0.3\r\nsnowballstemmer==1.2.1\r\n-e git+https://github.com/mpacer/sphinx.git@bce956d357b7cf988c8ed42b7d82ff6f80b115ab#egg=Sphinx\r\nsphinx-rtd-theme==0.4.1\r\nsphinxcontrib-github-alt==1.0\r\nsphinxcontrib-httpdomain==1.7.0\r\nsphinxcontrib-napoleon==0.7\r\nsphinxcontrib-openapi==0.4.0\r\nsphinxcontrib-websupport==1.1.0\r\nSQLAlchemy==1.2.15\r\nsqlparse==0.2.4\r\nsvglib==0.8.1\r\n-e git+https://github.com/mpacer/sympy.git@2961d8f076b742919d4a6fbe99a94d3cf5e46f9c#egg=sympy\r\ntabulate==0.8.2\r\nterminado==0.8.1\r\ntestpath==0.3.1\r\ntextwrap3==0.9.1\r\ntinycss2==0.6.1\r\ntoml==0.10.0\r\ntoolz==0.9.0\r\ntoree==0.2.0\r\ntornado==5.1.1\r\ntox==3.0.0\r\ntqdm==4.31.1\r\ntraitlets==4.3.2\r\ntwine==1.13.0\r\ntyped-ast==1.2.0\r\ntyping-extensions==3.7.2\r\nUnidecode==1.0.22\r\nuritemplate==3.0.0\r\nurllib3==1.24.1\r\n-e git+https://github.com/mpacer/vdom.git@eb246ea306956cfc11315d3f42da54c5f6abc4ab#egg=vdom\r\nvirtualenv==16.0.0\r\nWand==0.4.4\r\nwcwidth==0.1.7\r\nwebencodings==0.5.1\r\nwebsocket-client==0.48.0\r\nWerkzeug==0.14.1\r\nwhichcraft==0.4.1\r\nwidgetsnbextension==3.2.1\r\nwordcloud==1.5.0\r\nwrapt==1.10.11\r\nxmltodict==0.11.0\r\nyarl==1.3.0\r\nzipp==0.5.1\r\n\r\n**Environment:**\r\n - Python Version: 3.6\r\n - OS name and version: macOS 10.13.6\r\n\r\n**Additional context**\r\n\r\nIn bookstore (a extension to the Jupyter server that allows more easily interacting with S3), we currently get the response back and assign it to a response object that we then pass around to use in other methods. In one of those other methods, we then read the content of the response body with [`await obj['Body'].read()`](https://github.com/nteract/bookstore/blob/19f0f78d6b9aa2356e5a98bed5bcf3ed73c8e00f/bookstore/clone.py#L271).\r\n\r\nIn our integration tests, we use a local minio container to mock an s3 server. In that context, this calling `await obj['Body'].read()` outside of the client context (i.e., from other methods) works without issue. \r\n\r\nHowever, when we communicate with the non-local AWS S3 endpoint, the operation hangs indefinitely. It also raises no warning to indicate that it has been called in a context where it never will complete.\r\n\r\nThe only thing I've been able to diagnose as being different, would be the speed of communication (i.e., a local vs. a remote endpoint).\r\n\r\nI can refactor the code, but it is much cleaner for unit-testing the different pieces of functionality if we can isolate these concerns. So I'd like to understand more about this functionality.\r\n\r\nIn the response `read` method itself, it calls `await self.__wrapped__.read()`, where `self.__wrapped__`  is an instance of [`ClientResponseContentProxy`](https://github.com/aio-libs/aiobotocore/blob/9413052ced97c62dda7757b617c81ea55b8262d1/aiobotocore/endpoint.py#L83-L86). I am inferring from the `ClientResponseContentProxy` docstring that this passing around behaviour is supported, but I recognize that I may be misinterpreting what is intended by the idea of passing around the response \"Body\":\r\n```python\r\nclass ClientResponseContentProxy(wrapt.ObjectProxy):\r\n    \"\"\"Proxy object for content stream of http response.  This is here in case\r\n    you want to pass around the \"Body\" of the response without closing the\r\n    response itself.\"\"\"\r\n```\r\n\r\nDo you have any guidance on these issues?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/707", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/707/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/707/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/707", "id": 457038395, "node_id": "MDU6SXNzdWU0NTcwMzgzOTU=", "number": 707, "title": "botocore attempting to automatically get region calls itself: `coroutine object is not subscritable`", "user": {"login": "waprin", "id": 1075173, "node_id": "MDQ6VXNlcjEwNzUxNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648070, "node_id": "MDU6TGFiZWwyMTg2NDgwNzA=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 218648072, "node_id": "MDU6TGFiZWwyMTg2NDgwNzI=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T16:51:22Z", "updated_at": "2020-03-31T16:57:13Z", "closed_at": "2020-03-31T16:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running into this issue on my PWS (Pivotal Web Services) deploy, but I still can't figure out how to reproduce locally. I think it has something to do with my AWS region configuration, however I deleted my default region from `~/.aws/credentials` and it still works locally but fails on PWS.\r\n\r\nBasically it looks like the issue to me is that when botocore isn't provided the region of a bucket, it tries to figure out the correct region by calling its own API, however with aiobotocore some of that API has been monkeypatched with coroutines, which botocore is not expecting so it fails with the `'coroutine' object is not subscriptable.` exception.\r\n\r\n`aiobotocore ==0.10.2` is the version.\r\n\r\nThe simple workaround is just to provide a region explicitly but I thought I would file an issue as a heads up.\r\n\r\nHere is the code that produces the error:\r\n\r\n```\r\n        async with session.create_client(\r\n            \"s3\", aws_access_key_id=app.bn_config.AWS_ACCESS_KEY, aws_secret_access_key=app.bn_config.AWS_SECRET_KEY\r\n        ) as client:\r\n            s3_head = await client.head_object(Bucket=BUCKET_NAME Key=KEY_NAME)\r\n```\r\n\r\nAs mentioned adding `region=us-west1` to the `create_client` call fixes the issue.\r\n\r\nHere is a stack trace of the issue:\r\n\r\n```\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/app/orbit/app.py\", line 83, in upgrade_action\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     s3_head = await client.head_object(Bucket=app.bn_config.S3_UPGRADES_BUCKET, Key=f\"uberpackage/{version}\")\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/aiobotocore/client.py\", line 93, in _make_api_call\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     operation_model, request_dict, request_context)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/aiobotocore/client.py\", line 114, in _make_request\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     request_dict)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 232, in _send_request\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     exception)):\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 263, in _needs_retry\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     caught_exception=caught_exception, request_dict=request_dict)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/botocore/hooks.py\", line 356, in emit\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     return self._emitter.emit(aliased_event_name, **kwargs)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/botocore/hooks.py\", line 228, in emit\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     return self._emit(event_name, kwargs)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/botocore/hooks.py\", line 211, in _emit\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     response = handler(**kwargs)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/botocore/utils.py\", line 1146, in redirect_from_error\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     new_region = self.get_bucket_region(bucket, response)\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT   File \"/home/vcap/deps/0/python/lib/python3.6/site-packages/botocore/utils.py\", line 1204, in get_bucket_region\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT     headers = response['ResponseMetadata']['HTTPHeaders']\r\n   2019-06-17T09:43:54.80-0700 [APP/PROC/WEB/0] OUT TypeError: 'coroutine' object is not subscriptable\r\n```\r\n\r\n**Environment:**\r\n - Python Version: 3.6\r\n - OS name and version: Pivotal web services\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/700", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/700/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/700/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/700", "id": 441889104, "node_id": "MDU6SXNzdWU0NDE4ODkxMDQ=", "number": 700, "title": "Support virtual-hosted style for s3 presigned URLs", "user": {"login": "austinbarkley", "id": 20832967, "node_id": "MDQ6VXNlcjIwODMyOTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/20832967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinbarkley", "html_url": "https://github.com/austinbarkley", "followers_url": "https://api.github.com/users/austinbarkley/followers", "following_url": "https://api.github.com/users/austinbarkley/following{/other_user}", "gists_url": "https://api.github.com/users/austinbarkley/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinbarkley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinbarkley/subscriptions", "organizations_url": "https://api.github.com/users/austinbarkley/orgs", "repos_url": "https://api.github.com/users/austinbarkley/repos", "events_url": "https://api.github.com/users/austinbarkley/events{/privacy}", "received_events_url": "https://api.github.com/users/austinbarkley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T19:16:17Z", "updated_at": "2019-05-13T19:30:27Z", "closed_at": "2019-05-13T19:30:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the new AWS forum post: https://forums.aws.amazon.com/ann.jspa?annID=6776\r\nannouncing no longer supporting path-style API requests.\r\n\r\nUsing:\r\n`async with aws.create_s3_client() as client:\r\n            return client.generate_presigned_url('put_object', Params={\r\n                'Bucket': Bucket, 'Key': Key}, ExpiresIn=3600, HttpMethod='PUT')`\r\n\r\nreturns a path-style presigned url:\r\n`http://aws_address/test/TestImage.jpeg?AWSAccessKeyId=test&Signature=blah&Expires=1557345465`\r\n\r\nI am curious if there is a way already supported that returns virtual-hosted style presigned URLs? If not a new improvement would be required to be able to support this  \r\n\r\n\r\n**Environment:**\r\n - Python Version: python:3.7\r\n - OS name and version: alpine3.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/698", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/698/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/698/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/698", "id": 440504933, "node_id": "MDU6SXNzdWU0NDA1MDQ5MzM=", "number": 698, "title": "v0.10.0 onwards breaks rate limiting retries", "user": {"login": "durkode", "id": 456176, "node_id": "MDQ6VXNlcjQ1NjE3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/456176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durkode", "html_url": "https://github.com/durkode", "followers_url": "https://api.github.com/users/durkode/followers", "following_url": "https://api.github.com/users/durkode/following{/other_user}", "gists_url": "https://api.github.com/users/durkode/gists{/gist_id}", "starred_url": "https://api.github.com/users/durkode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durkode/subscriptions", "organizations_url": "https://api.github.com/users/durkode/orgs", "repos_url": "https://api.github.com/users/durkode/repos", "events_url": "https://api.github.com/users/durkode/events{/privacy}", "received_events_url": "https://api.github.com/users/durkode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-05T23:55:27Z", "updated_at": "2019-05-13T19:30:45Z", "closed_at": "2019-05-13T19:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWith v0.9.4, when a rate limiting error is received it backs off and retries again later. In v0.10.0 (and also observed with v0.10.2) this rate limiting error is thrown without retrying.\r\n\r\n**Checklist**\r\n- [x] I have reproduced in environment where `pip check` passes without errors\r\n- [x] I have provided `pip freeze` results\r\n- [x] I have provided sample code or detailed way to reproduce\r\n\r\n**pip freeze results**\r\n\r\nFor v0.10.0 where broken:\r\n\r\n```\r\naiobotocore==0.10.0\r\naiohttp==3.5.4\r\nasync-timeout==3.0.1\r\nattrs==19.1.0\r\nbotocore==1.12.49\r\nchardet==3.0.4\r\ndocutils==0.14\r\nidna==2.8\r\njmespath==0.9.4\r\nmultidict==4.5.2\r\npython-dateutil==2.8.0\r\nsix==1.12.0\r\nurllib3==1.24.3\r\nwrapt==1.11.1\r\nyarl==1.3.0\r\n```\r\n\r\nFor v0.9.4 where it works:\r\n\r\n```\r\naiobotocore==0.9.4\r\naiohttp==3.5.4\r\nasync-timeout==3.0.1\r\nattrs==19.1.0\r\nbotocore==1.10.58\r\nchardet==3.0.4\r\ndocutils==0.14\r\nidna==2.8\r\njmespath==0.9.4\r\nmultidict==4.5.2\r\npython-dateutil==2.8.0\r\nsix==1.12.0\r\nwrapt==1.11.1\r\nyarl==1.3.0\r\n```\r\n\r\n**Environment:**\r\n - Python Version: 3.7.3\r\n - OS name and version: Ubuntu 16.04 (default Ubuntu provided AMI on AWS)\r\n\r\n**Additional context**\r\n\r\nTo reproduce the issue I have the following script:\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport aiobotocore\r\nimport asyncio\r\nimport datetime\r\nimport logging\r\nimport sys\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\n\r\nasync def get_target_groups(session: aiobotocore.session.AioSession, alb_arn: str):\r\n\r\n  async with session.create_client('elbv2') as elbv2_client:\r\n    result = await elbv2_client.describe_target_groups(LoadBalancerArn=alb_arn)\r\n    return result\r\n\r\nasync def main():\r\n  \r\n  session = aiobotocore.get_session(loop=loop)\r\n  role_arn = \"arn:aws:iam::xxxxxxxxxxxx:role/admin\"\r\n\r\n  alb_arn = \"arn:aws:elasticloadbalancing:us-east-1:xxxxxxxxxxxx:loadbalancer/app/dev-api/47ffab81ba732952\"\r\n\r\n  logging.info(\"Starting attempts\")\r\n  prev_time = datetime.datetime.now()\r\n  for x in range(100):\r\n    result = await get_target_groups(session=session, alb_arn=alb_arn)\r\n    curr_time = datetime.datetime.now()\r\n    logging.info(f\"Attempt {x:03d} ran in {curr_time - prev_time}\")\r\n    prev_time = curr_time\r\n\r\n\r\nif __name__ == \"__main__\":\r\n  try:\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n  except Exception as e:\r\n    logging.critical(e)\r\n    raise\r\n\r\n```\r\n\r\nWhen running with 0.9.4 I get an output similar to the following\r\n\r\n```\r\n(testingold) ubuntu@ip-10-0-2-161:~$ ./tester.py\r\nINFO:botocore.vendored.requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 169.254.169.254\r\nINFO:botocore.vendored.requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 169.254.169.254\r\nINFO:root:Starting attempts\r\nINFO:root:Attempt 000 ran in 0:00:00.047349\r\nINFO:root:Attempt 001 ran in 0:00:00.038979\r\nINFO:root:Attempt 002 ran in 0:00:00.039862\r\n...\r\nINFO:root:Attempt 068 ran in 0:00:00.032086\r\nINFO:root:Attempt 069 ran in 0:00:00.027376\r\nINFO:root:Attempt 070 ran in 0:00:02.677946\r\nINFO:root:Attempt 071 ran in 0:00:00.026220\r\nINFO:root:Attempt 072 ran in 0:00:00.023132\r\n...\r\nINFO:root:Attempt 098 ran in 0:00:00.517366\r\nINFO:root:Attempt 099 ran in 0:00:00.028416\r\n```\r\n\r\nNote attempt 70 hit the rate limit and hence backed off. I previously checked this actually was a retry to rate limiting by setting `boto3.set_stream_logger('botocore.retryhandler', logging.DEBUG)` however removed the boto3 dependency to simplify this bug report.\r\n\r\nThen when running the same code with 0.10.0 I get\r\n\r\n```\r\n(testing) ubuntu@ip-10-0-2-161:~$ ./tester.py\r\nINFO:root:Starting attempts\r\nINFO:root:Attempt 000 ran in 0:00:00.050868\r\nINFO:root:Attempt 001 ran in 0:00:00.040029\r\n...\r\nINFO:root:Attempt 085 ran in 0:00:00.029554\r\nINFO:root:Attempt 086 ran in 0:00:00.029750\r\nCRITICAL:root:An error occurred (Throttling) when calling the DescribeTargetGroups operation: Rate exceeded\r\nTraceback (most recent call last):\r\n  File \"./tester.py\", line 69, in <module>\r\n    loop.run_until_complete(main())\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"./tester.py\", line 60, in main\r\n    result = await get_target_groups(session=session, alb_arn=alb_arn)\r\n  File \"./tester.py\", line 39, in get_target_groups\r\n    result = await elbv2_client.describe_target_groups(LoadBalancerArn=alb_arn)\r\n  File \"/home/ubuntu/.virtualenvs/testing/lib/python3.7/site-packages/aiobotocore/client.py\", line 105, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (Throttling) when calling the DescribeTargetGroups operation: Rate exceeded\r\n```\r\n\r\nSetting max_attempts in client_config explicitly does not fix the issue.\r\n\r\nThis is a blocker for us to upgrade to v0.10.2 (which has some new enpoints in botocore we want to use). Hopefully someone with more expertise in this library has some clue as to why this error might be occurring. Let me know if there is any missing info that might be needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/695", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/695/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/695/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/695", "id": 435480688, "node_id": "MDU6SXNzdWU0MzU0ODA2ODg=", "number": 695, "title": "Switch paginator to use newly added async_generator", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-21T06:37:41Z", "updated_at": "2019-11-12T10:57:54Z", "closed_at": "2019-11-12T10:57:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "will help with future merges", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/694", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/694/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/694/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/694", "id": 435254890, "node_id": "MDU6SXNzdWU0MzUyNTQ4OTA=", "number": 694, "title": "Reading multiple bulked jsons from s3 asynchronously, is there a better way?", "user": {"login": "LeonardAukea", "id": 7058308, "node_id": "MDQ6VXNlcjcwNTgzMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7058308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeonardAukea", "html_url": "https://github.com/LeonardAukea", "followers_url": "https://api.github.com/users/LeonardAukea/followers", "following_url": "https://api.github.com/users/LeonardAukea/following{/other_user}", "gists_url": "https://api.github.com/users/LeonardAukea/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeonardAukea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeonardAukea/subscriptions", "organizations_url": "https://api.github.com/users/LeonardAukea/orgs", "repos_url": "https://api.github.com/users/LeonardAukea/repos", "events_url": "https://api.github.com/users/LeonardAukea/events{/privacy}", "received_events_url": "https://api.github.com/users/LeonardAukea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-04-19T17:51:30Z", "updated_at": "2019-05-14T11:23:35Z", "closed_at": "2019-05-13T19:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, I asked this question on stackoverflow https://stackoverflow.com/questions/55765219/reading-multiple-bulked-jsons-from-s3-asynchronously-is-there-a-better-way. \r\n\r\nUnfortunately, I could not tag `aiobotocore`.\r\nI'm very unfamiliar with `asyncio`. But I decided it would be fun to try out your library. Since I may possibly have a use case for it. If any of you maintainers have any suggestions or improvements on the code. It would be much appreciated. \r\n\r\n* Basically, I think of two things. Is it really good practice to create a client in each  async function? Maybe it should be lifted out.\r\n* Could I possibly start getting the object as soon as a key is loaded insted of `await`until all keys are loaded `async generator`?\r\n\r\nIf you have time, your help would be much appreciated. I have a huge amount of jsons in an s3 bucket which I need to load efficiently.\r\n\r\nHere is the code:\r\n\r\nImports:\r\n\r\n```python\r\nimport os \r\nimport asyncio\r\nimport aiobotocore\r\nfrom itertools import chain\r\nimport json\r\nfrom json.decoder import WHITESPACE\r\n```\r\n\r\nSome helper generator I found somewhere to return decoded jsons from string with multiple jsons.\r\n\r\n```python\r\ndef iterload(string_or_fp, cls=json.JSONDecoder, **kwargs):\r\n    '''helper for parsing individual jsons from string of jsons (stolen from somewhere)'''\r\n    string = str(string_or_fp)\r\n\r\n    decoder = cls(**kwargs)\r\n    idx = WHITESPACE.match(string, 0).end()\r\n    while idx < len(string):\r\n        obj, end = decoder.raw_decode(string, idx)\r\n        yield obj\r\n        idx = WHITESPACE.match(string, end).end()\r\n```\r\nThis function gets keys from an s3 bucket with a given prefix:\r\n```python\r\n# Async stuff starts here\r\nasync def get_keys(loop, bucket, prefix):\r\n    '''Get keys in bucket based on prefix'''\r\n\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('s3', region_name='us-west-2',\r\n                                   aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                   aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\r\n        keys = []\r\n        # list s3 objects using paginator\r\n        paginator = client.get_paginator('list_objects')\r\n        async for result in paginator.paginate(Bucket=bucket, Prefix=prefix):\r\n            for c in result.get('Contents', []):\r\n                keys.append(c['Key'])\r\n        return keys\r\n```\r\nThis function gets the content for a provided key. Untop of that it flattens the list of decoded content:\r\n\r\n```python\r\nasync def get_object(loop,bucket, key):\r\n    '''Get json content from s3 object'''\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('s3', region_name='us-west-2',\r\n                                   aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                   aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\r\n\r\n\r\n        # get object from s3\r\n        response = await client.get_object(Bucket=bucket, Key=key)\r\n        async with response['Body'] as stream:\r\n            content = await stream.read()    \r\n\r\n    return list(iterload(content.decode()))\r\n```       \r\nHere is the main function which gathers the contents for all the found keys and flattens the list of contents.\r\n```python\r\nasync def go(loop, bucket, prefix):\r\n    '''Returns list of dicts of object contents'''\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('s3', region_name='us-west-2',\r\n                                   aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                   aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\r\n\r\n        keys = await get_keys(loop, bucket, prefix)\r\n\r\n        contents = await asyncio.gather(*[get_object(loop, bucket, k) for k in keys])     \r\n\r\n        return list(chain.from_iterable(contents))\r\n```\r\nFinally, I run this and the result list of dicts ends up nicely in result\r\n```python\r\nloop = asyncio.get_event_loop()\r\nresult = loop.run_until_complete(go(loop, 'some-bucket', 'some-prefix'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/687", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/687/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/687/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/687", "id": 418694290, "node_id": "MDU6SXNzdWU0MTg2OTQyOTA=", "number": 687, "title": "Athena queries don't run asynchronously when using aiobotocore and asyncio", "user": {"login": "brentEich", "id": 48347923, "node_id": "MDQ6VXNlcjQ4MzQ3OTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/48347923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brentEich", "html_url": "https://github.com/brentEich", "followers_url": "https://api.github.com/users/brentEich/followers", "following_url": "https://api.github.com/users/brentEich/following{/other_user}", "gists_url": "https://api.github.com/users/brentEich/gists{/gist_id}", "starred_url": "https://api.github.com/users/brentEich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brentEich/subscriptions", "organizations_url": "https://api.github.com/users/brentEich/orgs", "repos_url": "https://api.github.com/users/brentEich/repos", "events_url": "https://api.github.com/users/brentEich/events{/privacy}", "received_events_url": "https://api.github.com/users/brentEich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-08T09:01:25Z", "updated_at": "2019-03-08T13:40:49Z", "closed_at": "2019-03-08T13:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Bug Description**\r\nI receive no error when running the code below, however the code does not run asynchronously as the timings of the queries do not occur altogether. Am I missing some code or am I including code which should not be present.\r\n\r\n**Checklist**\r\n- [ X ] I have reproduced in environment where `pip check` passes without errors\r\n- [ X ] I have provided `pip freeze` results\r\n- [ X ] I have provided sample code or detailed way to reproduce\r\n\r\n**pip freeze results**\r\n```\r\naiobotocore==0.10.2\r\nbotocore==1.12.91\r\nawscli==1.16.101\r\n```\r\n\r\n**Environment:**\r\n - Python Version: 3.6.7\r\n - OS name and version: Ubuntu 18.04, Bionic Beaver\r\n\r\n**Additional context**\r\nThe aim of this code is to fire 10 or more queries off asynchronously using AWS athena's _start_query_execution_.\r\n\r\n```\r\nimport aiobotocore\r\nimport botocore\r\n\r\nquery_list = [\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;',\r\n    'SELECT * FROM table LIMIT 1;'\r\n]\r\n```\r\n\r\n```\r\nasync def go(loop):\r\n    Database =  db\r\n    OutputLocation =  outputlocation\r\n    QueryString = query_list\r\n\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('athena') as client:\r\n        \r\n        #run athena query\r\n        for query in query_list:\r\n            response = await client.start_query_execution(\r\n                QueryString = query,\r\n                QueryExecutionContext = {\r\n                    'Database': Database\r\n                },\r\n                ResultConfiguration = {\r\n                    'OutputLocation': OutputLocation\r\n                }\r\n            )\r\n            print(response)\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(go(loop))\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/682", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/682/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/682/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/682", "id": 409091072, "node_id": "MDU6SXNzdWU0MDkwOTEwNzI=", "number": 682, "title": "'convert_to_response_dict' was never awaited in aiobotocore/endpoint.py:293", "user": {"login": "stupoid", "id": 2649507, "node_id": "MDQ6VXNlcjI2NDk1MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2649507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stupoid", "html_url": "https://github.com/stupoid", "followers_url": "https://api.github.com/users/stupoid/followers", "following_url": "https://api.github.com/users/stupoid/following{/other_user}", "gists_url": "https://api.github.com/users/stupoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/stupoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stupoid/subscriptions", "organizations_url": "https://api.github.com/users/stupoid/orgs", "repos_url": "https://api.github.com/users/stupoid/repos", "events_url": "https://api.github.com/users/stupoid/events{/privacy}", "received_events_url": "https://api.github.com/users/stupoid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-12T02:45:17Z", "updated_at": "2019-02-12T05:01:06Z", "closed_at": "2019-02-12T05:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n'convert_to_response_dict' was never awaited in aiobotocore/endpoint.py:293\r\n\r\nI get this warning:\r\nRuntimeWarning: coroutine 'convert_to_response_dict' was never awaited\r\n\r\n**Additional context**\r\nAssuming it is just a typo. Warning goes away when I added await.\r\n\r\naiobotocore/endpoint.py:293\r\n```py\r\nkwargs_to_emit['response_dict'] = await convert_to_response_dict(http_response, operation_model)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/676", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/676/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/676/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/676", "id": 406110971, "node_id": "MDU6SXNzdWU0MDYxMTA5NzE=", "number": 676, "title": "Supports the concept of sessions profiles", "user": {"login": "ikhlestov", "id": 9900548, "node_id": "MDQ6VXNlcjk5MDA1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9900548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhlestov", "html_url": "https://github.com/ikhlestov", "followers_url": "https://api.github.com/users/ikhlestov/followers", "following_url": "https://api.github.com/users/ikhlestov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhlestov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhlestov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhlestov/subscriptions", "organizations_url": "https://api.github.com/users/ikhlestov/orgs", "repos_url": "https://api.github.com/users/ikhlestov/repos", "events_url": "https://api.github.com/users/ikhlestov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhlestov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-03T17:35:48Z", "updated_at": "2019-02-04T19:40:13Z", "closed_at": "2019-02-04T19:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nbotocore now supports parameter `profile_name` during[ session initialization](https://github.com/boto/botocore/blob/21ad34d727a301dbfc3bb47159a41cbd64e3bff2/botocore/session.py#L94). From my point of view, this is a very useful feature. Can we add it to aiobotocore as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/674", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/674/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/674/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/674", "id": 404262906, "node_id": "MDU6SXNzdWU0MDQyNjI5MDY=", "number": 674, "title": "AttributeError: 'str' object has no attribute 'hyphenize'", "user": {"login": "oba11", "id": 2796222, "node_id": "MDQ6VXNlcjI3OTYyMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2796222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oba11", "html_url": "https://github.com/oba11", "followers_url": "https://api.github.com/users/oba11/followers", "following_url": "https://api.github.com/users/oba11/following{/other_user}", "gists_url": "https://api.github.com/users/oba11/gists{/gist_id}", "starred_url": "https://api.github.com/users/oba11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oba11/subscriptions", "organizations_url": "https://api.github.com/users/oba11/orgs", "repos_url": "https://api.github.com/users/oba11/repos", "events_url": "https://api.github.com/users/oba11/events{/privacy}", "received_events_url": "https://api.github.com/users/oba11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-29T12:14:54Z", "updated_at": "2019-02-11T11:44:28Z", "closed_at": "2019-02-11T11:44:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On update of aiobotocore to 0.10.0, started getting below error\r\n\r\n```\r\n'str' object has no attribute 'hyphenize': AttributeError\r\nTraceback (most recent call last):\r\nFile \"/var/task/s3_event_watcher.py\", line 72, in handler\r\ndb = DynamoDB(loop, table_name)\r\nFile \"/var/task/chalicelib/dynamodb.py\", line 50, in __init__\r\n'dynamodb', region_name=region, **dynamo_kwargs)\r\nFile \"/var/task/aiobotocore/session.py\", line 76, in create_client\r\nclient_config=config, api_version=api_version)\r\nFile \"/var/runtime/botocore/client.py\", line 70, in create_client\r\ncls = self._create_client_class(service_name, service_model)\r\nFile \"/var/task/aiobotocore/client.py\", line 49, in _create_client_class\r\nservice_id = service_model.service_id.hyphenize()\r\nAttributeError: 'str' object has no attribute 'hyphenize'\r\n```\r\n\r\nRolling back to 0.9.4 resolves this error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/668", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/668/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/668/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/668", "id": 402487523, "node_id": "MDU6SXNzdWU0MDI0ODc1MjM=", "number": 668, "title": "Consider integration tests using minio", "user": {"login": "rgbkrk", "id": 836375, "node_id": "MDQ6VXNlcjgzNjM3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgbkrk", "html_url": "https://github.com/rgbkrk", "followers_url": "https://api.github.com/users/rgbkrk/followers", "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}", "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions", "organizations_url": "https://api.github.com/users/rgbkrk/orgs", "repos_url": "https://api.github.com/users/rgbkrk/repos", "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}", "received_events_url": "https://api.github.com/users/rgbkrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-24T00:17:27Z", "updated_at": "2019-01-24T17:23:11Z", "closed_at": "2019-01-24T17:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've had some good success in [`bookstore`](https://github.com/nteract/bookstore) using an [extra container with minio running for integration testing on CircleCI](https://github.com/nteract/bookstore/blob/196d7c06555a2194008c094d0365b4c0832662e8/.circleci/config.yml#L11-L16). Would you all be interested in using CircleCI + a minio server? I'm happy to contribute something now that we're planning to switch off of `s3fs` to `aiobotocore` https://github.com/nteract/bookstore/issues/32.\r\n\r\nThat is, unless you have integration tests you're running against S3 I'm unaware of.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/664", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/664/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/664/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/664", "id": 401236250, "node_id": "MDU6SXNzdWU0MDEyMzYyNTA=", "number": 664, "title": "Getting ready for Python 3.8", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-21T08:09:43Z", "updated_at": "2020-02-22T05:25:29Z", "closed_at": "2020-02-22T05:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  /.../python3.7/site-packages/botocore/vendored/requests/packages/urllib3/_collections.py:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping, MutableMapping\r\n```\r\n\r\nIt seems to be a matter of upgrading to new[er] `botocore`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/663", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/663/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/663/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/663", "id": 400489336, "node_id": "MDU6SXNzdWU0MDA0ODkzMzY=", "number": 663, "title": "AWS_PROFILE: TypeError: can't pickle coroutine objects", "user": {"login": "spg", "id": 892367, "node_id": "MDQ6VXNlcjg5MjM2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/892367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spg", "html_url": "https://github.com/spg", "followers_url": "https://api.github.com/users/spg/followers", "following_url": "https://api.github.com/users/spg/following{/other_user}", "gists_url": "https://api.github.com/users/spg/gists{/gist_id}", "starred_url": "https://api.github.com/users/spg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spg/subscriptions", "organizations_url": "https://api.github.com/users/spg/orgs", "repos_url": "https://api.github.com/users/spg/repos", "events_url": "https://api.github.com/users/spg/events{/privacy}", "received_events_url": "https://api.github.com/users/spg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-17T22:24:23Z", "updated_at": "2019-04-21T06:34:50Z", "closed_at": "2019-04-21T06:34:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! I get the following error:\r\n\r\n```bash\r\n(instance-service366) ~/instance-service - [master\u25cf\u25cf] \u00bb python test_aiobotocore.py\r\nEnter MFA code for arn:aws:iam::[redacted]:mfa/spgingras:\r\nTraceback (most recent call last):\r\n  File \"test_aiobotocore.py\", line 12, in <module>\r\n    loop.run_until_complete(go(loop))\r\n  File \"/Users/spgingras/.pyenv/versions/3.6.6/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"test_aiobotocore.py\", line 8, in go\r\n    resp = await client.list_buckets()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/aiobotocore/client.py\", line 92, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 226, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/endpoint.py\", line 116, in create_request\r\n    operation_name=operation_model.name)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/hooks.py\", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/hooks.py\", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/hooks.py\", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/signers.py\", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/signers.py\", line 149, in sign\r\n    auth = self.get_auth_instance(**kwargs)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/signers.py\", line 229, in get_auth_instance\r\n    frozen_credentials = self._credentials.get_frozen_credentials()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 518, in get_frozen_credentials\r\n    self._refresh()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 413, in _refresh\r\n    self._protected_refresh(is_mandatory=is_mandatory_refresh)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 429, in _protected_refresh\r\n    metadata = self._refresh_using()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 177, in __call__\r\n    return self._refresh()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 566, in fetch_credentials\r\n    return self._get_cached_credentials()\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 577, in _get_cached_credentials\r\n    self._write_to_cache(response)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/site-packages/botocore/credentials.py\", line 602, in _write_to_cache\r\n    self._cache[self._cache_key] = deepcopy(response)\r\n  File \"/Users/spgingras/.virtualenvs/instance-service366/lib/python3.6/copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle coroutine objects\r\nsys:1: RuntimeWarning: coroutine 'AioBaseClient._make_api_call' was never awaited\r\nUnclosed client session\r\nclient_session: <aiohttp.client.ClientSession object at 0x107a81518>\r\n```\r\n\r\nWhen setting the `AWS_PROFILE` environment variable, and running the following script:\r\n\r\n```python\r\nimport asyncio\r\nimport aiobotocore\r\n\r\n\r\nasync def go(loop):\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('s3') as client:\r\n        resp = await client.list_buckets()\r\n        print(resp)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(go(loop))\r\n```\r\n\r\nProbably related to https://github.com/aio-libs/aiobotocore/issues/619 but not sure.\r\n\r\nRunning on python 3.6.6 in OS X Mojave. \r\nUsing a fresh virtualenv, with only `aiobotocore==0.10.0` installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/662", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/662/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/662/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/662", "id": 399668943, "node_id": "MDU6SXNzdWUzOTk2Njg5NDM=", "number": 662, "title": "`InvalidSignatureException` occurs when a client is used for more than 5 mins", "user": {"login": "brownbro", "id": 2845539, "node_id": "MDQ6VXNlcjI4NDU1Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2845539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brownbro", "html_url": "https://github.com/brownbro", "followers_url": "https://api.github.com/users/brownbro/followers", "following_url": "https://api.github.com/users/brownbro/following{/other_user}", "gists_url": "https://api.github.com/users/brownbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/brownbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brownbro/subscriptions", "organizations_url": "https://api.github.com/users/brownbro/orgs", "repos_url": "https://api.github.com/users/brownbro/repos", "events_url": "https://api.github.com/users/brownbro/events{/privacy}", "received_events_url": "https://api.github.com/users/brownbro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-16T06:43:35Z", "updated_at": "2019-01-17T06:07:23Z", "closed_at": "2019-01-17T01:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I want to do: I want to invoke SageMaker endpoint asynchronously to inference jpeg images (like the codes below).\r\n\r\n```python\r\nasync def invoke_endpoint(client, body):\r\n    response = await client.invoke_endpoint(\r\n        EndpointName=SAGEMAKER_ENDPOINT,\r\n        Body=body,\r\n        ContentType='image/jpeg',\r\n        Accept='application/json'\r\n    )\r\n    return response\r\n\r\nasync def inference_using_gather(loop, image_bytes):\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client(\r\n            'sagemaker-runtime',\r\n        ) as sagemaker_client:\r\n\r\n        cors = [invoke_endpoint(sagemaker_client, b) for b in image_bytes]\r\n        responses = await asyncio.gather(*cors)\r\n        prediction_dict = {}\r\n        for idx, r in enumerate(responses):            \r\n            body = await r['Body'].read()\r\n            predictions = json.loads(body.decode('utf8'))['prediction']\r\n            prediction_dict[idx] = predictions\r\n        return prediction_dict\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    image_bytes = [...] # Thousands of image bytes\r\n    prediction_dict = loop.run_until_complete(inference_using_gather(loop, image_bytes))\r\n```\r\n\r\nProblem: If the number of images is more than hundreds or thousands, `InvalidSignatureException` occurs.\r\n\r\n```\r\nAn error occurred (InvalidSignatureException) when calling the InvokeEndpoint operation: Signature expired: 20181225T071102Z is now earlier than 20181225T071102Z (20181225T071602Z - 5 min.)\r\n```\r\n\r\nQuestion: Is there any way to avoid this error (e.g., to set longer expiration date or to refresh signature automatically)?\r\n\r\n---\r\n\r\n- Versions\r\n    - aiobotocore: 0.10.0\r\n    - python: 3.7.1\r\n    - botocore: 1.12.49\r\n- Platform you're running on (OS X, Linux).\r\n    - macOS 10.14.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/658", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/658/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/658/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/658", "id": 395849100, "node_id": "MDU6SXNzdWUzOTU4NDkxMDA=", "number": 658, "title": "Is it possible to upload to s3 asynchronously by chunks?", "user": {"login": "py-radicz", "id": 20091579, "node_id": "MDQ6VXNlcjIwMDkxNTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/20091579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/py-radicz", "html_url": "https://github.com/py-radicz", "followers_url": "https://api.github.com/users/py-radicz/followers", "following_url": "https://api.github.com/users/py-radicz/following{/other_user}", "gists_url": "https://api.github.com/users/py-radicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/py-radicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/py-radicz/subscriptions", "organizations_url": "https://api.github.com/users/py-radicz/orgs", "repos_url": "https://api.github.com/users/py-radicz/repos", "events_url": "https://api.github.com/users/py-radicz/events{/privacy}", "received_events_url": "https://api.github.com/users/py-radicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-01-04T08:43:11Z", "updated_at": "2020-04-11T07:50:33Z", "closed_at": "2019-01-21T10:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I am trying to do: I want to download file from remote source and upload it directly to s3 without storing the bytes on the localhost. (Stream the data from remote machine through my machine to s3). There are tens of files in remote location, thats why I want to use async lib, to stream all files simultaneously to save time.\r\n\r\nIs it possible with current version of lib to do something like following?\r\n\r\n```python\r\nasync with aioboto3.client('s3', loop=loop) as client:\r\n    async for chunk in response.content.iter_chunked(1024):\r\n        if chunk:\r\n            # await put chunk into appropriate file handle on s3\r\n```\r\n\r\nThanks for some pointers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/652", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/652/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/652/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/652", "id": 389004423, "node_id": "MDU6SXNzdWUzODkwMDQ0MjM=", "number": 652, "title": "Status of aiobotocore", "user": {"login": "gricey432", "id": 1611345, "node_id": "MDQ6VXNlcjE2MTEzNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1611345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gricey432", "html_url": "https://github.com/gricey432", "followers_url": "https://api.github.com/users/gricey432/followers", "following_url": "https://api.github.com/users/gricey432/following{/other_user}", "gists_url": "https://api.github.com/users/gricey432/gists{/gist_id}", "starred_url": "https://api.github.com/users/gricey432/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gricey432/subscriptions", "organizations_url": "https://api.github.com/users/gricey432/orgs", "repos_url": "https://api.github.com/users/gricey432/repos", "events_url": "https://api.github.com/users/gricey432/events{/privacy}", "received_events_url": "https://api.github.com/users/gricey432/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-09T09:45:18Z", "updated_at": "2018-12-16T18:06:17Z", "closed_at": "2018-12-09T23:38:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just found this and it looks like exactly what I need, but it looks like it's unmaintained / approaching being unmaintained.\r\n\r\nI'm basing this off PR #639 and the fact there's been one commit in the last 4 months. Is aibotocore still an active project which will continue to track botocore into the future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/651", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/651/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/651/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/651", "id": 386995090, "node_id": "MDU6SXNzdWUzODY5OTUwOTA=", "number": 651, "title": "Q: S3 get object parallel call seems not really parallel?", "user": {"login": "ottokruse", "id": 6275520, "node_id": "MDQ6VXNlcjYyNzU1MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6275520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ottokruse", "html_url": "https://github.com/ottokruse", "followers_url": "https://api.github.com/users/ottokruse/followers", "following_url": "https://api.github.com/users/ottokruse/following{/other_user}", "gists_url": "https://api.github.com/users/ottokruse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ottokruse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ottokruse/subscriptions", "organizations_url": "https://api.github.com/users/ottokruse/orgs", "repos_url": "https://api.github.com/users/ottokruse/repos", "events_url": "https://api.github.com/users/ottokruse/events{/privacy}", "received_events_url": "https://api.github.com/users/ottokruse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-03T20:38:26Z", "updated_at": "2018-12-05T10:54:57Z", "closed_at": "2018-12-05T10:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hope you can enlighten me. I wrote a little Lambda to test out aiobotocore, but I don't understand the behavior I see.\r\n\r\nThe Lambda fetches 5 files from s3, and runs in around 150ms consistently (besides the cold start run).\r\nWhen I make it 10 files, I see it takes around 300ms consistently.\r\n\r\nWhy is the time doubled? Since the fetches are async, I would not expect to see any (significant) increase in time.\r\n\r\n\timport asyncio\r\n\timport aiobotocore\r\n\r\n\tloop = asyncio.get_event_loop()\r\n\tsession = aiobotocore.get_session(loop=loop)\r\n\ts3 = session.create_client('s3')\r\n\t    \r\n\tasync def main():\r\n\t    coros = [s3.get_object(Bucket='mybucket', Key=f'{i}.txt') for i in range(5)]\r\n\t    await asyncio.gather(*coros)\r\n\r\n\tdef lambda_handler(event, context):\r\n\t    loop.run_until_complete(main())\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/645", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/645/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/645/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/645", "id": 379589866, "node_id": "MDU6SXNzdWUzNzk1ODk4NjY=", "number": 645, "title": "Upload to non-existing bucket appears to hang", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-12T01:37:47Z", "updated_at": "2019-01-21T10:41:33Z", "closed_at": "2019-01-21T10:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment:\r\n* Docker based off python:3.7.1-alpine3.8\r\n* with hypercorn, quart, uvloop\r\n* aiobotocore==0.9.4\r\n* against minio:edge\r\n\r\nDifferential diagnosis:\r\n* upload to existing bucket, with good key and small data works ok\r\n* upload to non-existing bucket, with same key and data appears to hang indefinitely\r\n\r\nApologies that I'm not yet able to test against real S3 and cannot exclude minio as culprit.\r\n\r\nCode snippet:\r\n```\r\ndef client():\r\n    return aiobotocore.get_session().create_client(\r\n        \"s3\",\r\n        endpoint_url=f\"http://{os.environ.get('STORAGE_HOST', '???')}:9000\",\r\n        aws_access_key_id=os.environ.get(\"STORAGE_ACCESS_KEY\", \"???\"),\r\n        aws_secret_access_key=os.environ.get(\"STORAGE_SECRET_KEY\", \"???\"),\r\n    )\r\n\r\nasync def some_endpoint():\r\n    some_bucket = \"images\"  # bucket must exist, else we hang...\r\n    key = secrets.token_hex(8)\r\n\r\n    async with client() as c:\r\n        await c.put_object(Bucket=some_bucket, Key=key, Body=upload.read())\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/642", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/642/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/642/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/642", "id": 374447104, "node_id": "MDU6SXNzdWUzNzQ0NDcxMDQ=", "number": 642, "title": "unexpected argument", "user": {"login": "demmsnt", "id": 5433156, "node_id": "MDQ6VXNlcjU0MzMxNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5433156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demmsnt", "html_url": "https://github.com/demmsnt", "followers_url": "https://api.github.com/users/demmsnt/followers", "following_url": "https://api.github.com/users/demmsnt/following{/other_user}", "gists_url": "https://api.github.com/users/demmsnt/gists{/gist_id}", "starred_url": "https://api.github.com/users/demmsnt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demmsnt/subscriptions", "organizations_url": "https://api.github.com/users/demmsnt/orgs", "repos_url": "https://api.github.com/users/demmsnt/repos", "events_url": "https://api.github.com/users/demmsnt/events{/privacy}", "received_events_url": "https://api.github.com/users/demmsnt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-26T15:59:01Z", "updated_at": "2018-10-29T16:42:45Z", "closed_at": "2018-10-29T09:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use script\r\n`import asyncio\r\nimport aiobotocore\r\n\r\nAWS_ACCESS_KEY_ID = \"XXX\"\r\nAWS_SECRET_ACCESS_KEY = \"XXX\"\r\nAWS_SESSION_TOKEN = \"XXX\"\r\n\r\n\r\nasync def go(loop):\r\n\r\n    bucket = 'my_bucket'\r\n\r\n    session = aiobotocore.get_session(loop=loop)\r\n    async with session.create_client('s3', region_name='us-east-1',\r\n                                     aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                     aws_access_key_id=AWS_ACCESS_KEY_ID,\r\n                                     aws_session_token=AWS_SESSION_TOKEN) as client:\r\n        paginator = client.get_paginator('list_objects')\r\n        folder = ''\r\n        async for result in paginator.paginate(Bucket=bucket, prefix=folder):\r\n            for c in result.get('Contents', []):\r\n                    print(\">>>\", c)\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(go(loop))`\r\n\r\nAnd when i run this code i got error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"issue.py\", line 26, in <module>\r\n    loop.run_until_complete(go(loop))\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"issue.py\", line 17, in go\r\n    aws_session_token=AWS_SESSION_TOKEN) as client:\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/aiobotocore/session.py\", line 76, in create_client\r\n    client_config=config, api_version=api_version)\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/botocore/client.py\", line 76, in create_client\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/aiobotocore/client.py\", line 42, in _get_client_args\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/aiobotocore/args.py\", line 67, in get_client_args\r\n    connector_args=new_config.connector_args)\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 363, in create_endpoint\r\n    loop=self._loop, connector_args=connector_args)\r\n  File \"/home/dshamov/projects/patch_admin/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 154, in __init__\r\n    max_pool_connections=max_pool_connections)\r\nTypeError: __init__() got an unexpected keyword argument 'proxies'\r\n`\r\n\r\nPython 3.6.6\r\n\r\naiobotocore==0.9.4\r\naiohttp==3.4.4\r\nboto3==1.9.32\r\nbotocore==1.12.32\r\nasyncio==3.4.3\r\n\r\nMaybe version inconsistence?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/641", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/641/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/641/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/641", "id": 373019383, "node_id": "MDU6SXNzdWUzNzMwMTkzODM=", "number": 641, "title": "Sync readthedocs page", "user": {"login": "and800", "id": 9919211, "node_id": "MDQ6VXNlcjk5MTkyMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9919211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/and800", "html_url": "https://github.com/and800", "followers_url": "https://api.github.com/users/and800/followers", "following_url": "https://api.github.com/users/and800/following{/other_user}", "gists_url": "https://api.github.com/users/and800/gists{/gist_id}", "starred_url": "https://api.github.com/users/and800/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/and800/subscriptions", "organizations_url": "https://api.github.com/users/and800/orgs", "repos_url": "https://api.github.com/users/and800/repos", "events_url": "https://api.github.com/users/and800/events{/privacy}", "received_events_url": "https://api.github.com/users/and800/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-23T14:06:31Z", "updated_at": "2019-01-27T00:09:18Z", "closed_at": "2019-01-27T00:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that [the docs build](https://aiobotocore.readthedocs.io/en/latest/index.html) is out of sync. It doesn't include the latest changes in docs code, for example, native coroutines in examples page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/630", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/630/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/630/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/630", "id": 356826810, "node_id": "MDU6SXNzdWUzNTY4MjY4MTA=", "number": 630, "title": "unable to create session", "user": {"login": "oba11", "id": 2796222, "node_id": "MDQ6VXNlcjI3OTYyMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2796222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oba11", "html_url": "https://github.com/oba11", "followers_url": "https://api.github.com/users/oba11/followers", "following_url": "https://api.github.com/users/oba11/following{/other_user}", "gists_url": "https://api.github.com/users/oba11/gists{/gist_id}", "starred_url": "https://api.github.com/users/oba11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oba11/subscriptions", "organizations_url": "https://api.github.com/users/oba11/orgs", "repos_url": "https://api.github.com/users/oba11/repos", "events_url": "https://api.github.com/users/oba11/events{/privacy}", "received_events_url": "https://api.github.com/users/oba11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-04T14:06:58Z", "updated_at": "2018-09-05T20:35:08Z", "closed_at": "2018-09-04T14:45:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if I'm doing something wrong but tried to execute the [example script](https://raw.githubusercontent.com/aio-libs/aiobotocore/master/examples/simple.py) but the below error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"chalicelib/s3.py\", line 36, in <module>\r\n    loop.run_until_complete(go(loop))\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"chalicelib/s3.py\", line 18, in go\r\n    aws_access_key_id=AWS_ACCESS_KEY_ID)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/session.py\", line 76, in create_client\r\n    client_config=config, api_version=api_version)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/client.py\", line 76, in create_client\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/client.py\", line 42, in _get_client_args\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/args.py\", line 67, in get_client_args\r\n    connector_args=new_config.connector_args)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 363, in create_endpoint\r\n    loop=self._loop, connector_args=connector_args)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 154, in __init__\r\n    max_pool_connections=max_pool_connections)\r\nTypeError: __init__() got an unexpected keyword argument 'proxies'\r\n```\r\n\r\n```\r\npython --version\r\nPython 3.6.6\r\n\r\naiobotocore     0.9.4\r\nbotocore        1.11.6\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/629", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/629/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/629/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/629", "id": 356721690, "node_id": "MDU6SXNzdWUzNTY3MjE2OTA=", "number": 629, "title": "Botocore version bump to 1.11", "user": {"login": "evemorgen", "id": 7932772, "node_id": "MDQ6VXNlcjc5MzI3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7932772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evemorgen", "html_url": "https://github.com/evemorgen", "followers_url": "https://api.github.com/users/evemorgen/followers", "following_url": "https://api.github.com/users/evemorgen/following{/other_user}", "gists_url": "https://api.github.com/users/evemorgen/gists{/gist_id}", "starred_url": "https://api.github.com/users/evemorgen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evemorgen/subscriptions", "organizations_url": "https://api.github.com/users/evemorgen/orgs", "repos_url": "https://api.github.com/users/evemorgen/repos", "events_url": "https://api.github.com/users/evemorgen/events{/privacy}", "received_events_url": "https://api.github.com/users/evemorgen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-04T09:16:38Z", "updated_at": "2019-01-21T10:33:18Z", "closed_at": "2019-01-21T10:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, since newer version of `botocore` lib (1.11.x) is available (it provides some api changes which I'm personally interested in), I'm wondering what would it take to make use of it in `aiobotocore`. I assume that shift might be problematic due to changes related to `urllib3` and `requests`. \r\n\r\nIf anyone could point me in right direction, I'm volunteering to help :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/626", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/626/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/626/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/626", "id": 353520232, "node_id": "MDU6SXNzdWUzNTM1MjAyMzI=", "number": 626, "title": "Suggestion to vendor botocore", "user": {"login": "rmariano", "id": 1331988, "node_id": "MDQ6VXNlcjEzMzE5ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmariano", "html_url": "https://github.com/rmariano", "followers_url": "https://api.github.com/users/rmariano/followers", "following_url": "https://api.github.com/users/rmariano/following{/other_user}", "gists_url": "https://api.github.com/users/rmariano/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmariano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmariano/subscriptions", "organizations_url": "https://api.github.com/users/rmariano/orgs", "repos_url": "https://api.github.com/users/rmariano/repos", "events_url": "https://api.github.com/users/rmariano/events{/privacy}", "received_events_url": "https://api.github.com/users/rmariano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-08-23T19:25:55Z", "updated_at": "2018-12-16T15:28:49Z", "closed_at": "2018-12-16T15:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "As other users (https://github.com/aio-libs/aiobotocore/issues/624) we also faced issues with transitive dependencies (the constraints put on ``botocore`` collide with other dependencies in our projects).\r\n\r\nIf instead of depending on a narrow range of versions of ``botocore`` this one is included inside this repository (via a git sub-module, or similar approaches), it will be much simpler to handle.\r\n\r\nWould you consider this suggestion? I volunteer to contribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/624", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/624/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/624/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/624", "id": 350428868, "node_id": "MDU6SXNzdWUzNTA0Mjg4Njg=", "number": 624, "title": "Broader version requirements for botocore", "user": {"login": "mmslindner", "id": 19577585, "node_id": "MDQ6VXNlcjE5NTc3NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/19577585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmslindner", "html_url": "https://github.com/mmslindner", "followers_url": "https://api.github.com/users/mmslindner/followers", "following_url": "https://api.github.com/users/mmslindner/following{/other_user}", "gists_url": "https://api.github.com/users/mmslindner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmslindner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmslindner/subscriptions", "organizations_url": "https://api.github.com/users/mmslindner/orgs", "repos_url": "https://api.github.com/users/mmslindner/repos", "events_url": "https://api.github.com/users/mmslindner/events{/privacy}", "received_events_url": "https://api.github.com/users/mmslindner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T13:30:16Z", "updated_at": "2019-01-21T10:34:50Z", "closed_at": "2019-01-21T10:34:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py specifies a very small range of versions for botocore:\r\n\r\n    botocore<1.10.59,>=1.10.58\r\n\r\nWhen using aiobotocore as a library, this easily leads unsolvable dependency conflicts. It would be great to allow a broader version range.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/619", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/619/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/619/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/619", "id": 347207389, "node_id": "MDU6SXNzdWUzNDcyMDczODk=", "number": 619, "title": "[infra] async'ify Credentials class", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648073, "node_id": "MDU6TGFiZWwyMTg2NDgwNzM=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-02T23:21:05Z", "updated_at": "2020-03-31T16:57:13Z", "closed_at": "2020-03-31T16:57:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are at least a couple underlying issues related to this class:\r\n\r\n1. IAM credential refresh using requests: https://github.com/aio-libs/aiobotocore/issues/2\r\n2. AssumeRoleProvider uses client call: https://github.com/aio-libs/aiobotocore/issues/553 + https://github.com/aio-libs/aiobotocore/issues/663\r\n\r\nFirst one results in possible hangs of the main thread, while second one is broken because it's not await'ing the request of the client request.\r\n\r\nThe issue is that these are low-level in classes used by the Credential helper, and ultimately triggered by high level properties like `secret_key`, `access_key` and `token`.  We need to find all the calls that will end up needing to be changed to async, and then figure a strategy of how to battle this.  I'm afraid this is going to touch a LOT of botocore and greatly increase our footprint and amount of maintenance required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/618", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/618/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/618/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/618", "id": 347086432, "node_id": "MDU6SXNzdWUzNDcwODY0MzI=", "number": 618, "title": "Streaming file to S3", "user": {"login": "Tinche", "id": 1909233, "node_id": "MDQ6VXNlcjE5MDkyMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1909233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tinche", "html_url": "https://github.com/Tinche", "followers_url": "https://api.github.com/users/Tinche/followers", "following_url": "https://api.github.com/users/Tinche/following{/other_user}", "gists_url": "https://api.github.com/users/Tinche/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tinche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tinche/subscriptions", "organizations_url": "https://api.github.com/users/Tinche/orgs", "repos_url": "https://api.github.com/users/Tinche/repos", "events_url": "https://api.github.com/users/Tinche/events{/privacy}", "received_events_url": "https://api.github.com/users/Tinche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-02T16:30:18Z", "updated_at": "2019-01-21T10:30:19Z", "closed_at": "2019-01-21T10:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting a large video file streamed to me. I'm using aiohttp, and I'd like to read the file from the web request in chunks and upload it to S3 in chunks. Is this possible with aiobotocore?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/615", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/615/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/615/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/615", "id": 343299379, "node_id": "MDU6SXNzdWUzNDMyOTkzNzk=", "number": 615, "title": "aiobotocore (0.9.3) released just a few days ago is already behind the latest botocore release", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-21T05:27:38Z", "updated_at": "2018-07-26T23:29:01Z", "closed_at": "2018-07-24T06:39:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "> aiobotocore 0.9.3 has requirement botocore<1.10.59,>=1.10.58, but you'll have botocore 1.10.62 which is incompatible\r\n\r\nAWS is releasing botocore almost every 3 days. There is no way for you to keep up with it.\r\n\r\nI think the dependency should be something like < 1.11.0 instead of specifying a specific version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/612", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/612/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/612/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/612", "id": 342502190, "node_id": "MDU6SXNzdWUzNDI1MDIxOTA=", "number": 612, "title": "generate_db_auth_token() returns a string instead of an awaitable", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-18T21:41:14Z", "updated_at": "2018-07-19T05:22:52Z", "closed_at": "2018-07-19T05:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This sets a string into the variable 'token', which does in fact work for me, but shouldn't it contain an awaitable?\r\n\r\nsession = aiobotocore.get_session()\r\nasync with session.create_client('rds', region_name=region) as client:\r\n    token = client.generate_db_auth_token(hostname, port, username)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/611", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/611/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/611/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/611", "id": 341692737, "node_id": "MDU6SXNzdWUzNDE2OTI3Mzc=", "number": 611, "title": "switch to python 3.6+", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-07-16T21:55:52Z", "updated_at": "2019-02-11T18:34:24Z", "closed_at": "2019-02-11T17:18:32Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "given 3.7 is already out, this would allow us to use async generators and make the code a lot easier to match to botocore\r\n\r\n@aio-libs/aiobotocore-admins what do you guys think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/607", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/607/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/607/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/607", "id": 337600441, "node_id": "MDU6SXNzdWUzMzc2MDA0NDE=", "number": 607, "title": "Consistent read timeout errors for Lambda payload read", "user": {"login": "mannickutd", "id": 1556623, "node_id": "MDQ6VXNlcjE1NTY2MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1556623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mannickutd", "html_url": "https://github.com/mannickutd", "followers_url": "https://api.github.com/users/mannickutd/followers", "following_url": "https://api.github.com/users/mannickutd/following{/other_user}", "gists_url": "https://api.github.com/users/mannickutd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mannickutd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mannickutd/subscriptions", "organizations_url": "https://api.github.com/users/mannickutd/orgs", "repos_url": "https://api.github.com/users/mannickutd/repos", "events_url": "https://api.github.com/users/mannickutd/events{/privacy}", "received_events_url": "https://api.github.com/users/mannickutd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-07-02T17:21:03Z", "updated_at": "2019-04-01T16:52:06Z", "closed_at": "2018-07-06T20:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error occurs when trying to read the data for a payload of a lambda function response. The response data size is not larger than 1KB. The error is intermittent.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \\\"/usr/lib/python3.6/site-packages/aiobotocore/endpoint.py\\\", line 157, in _wrapped_wait\r\n    result = yield from wrapped(*args, **kwargs)\r\n  File \\\"/usr/lib/python3.6/site-packages/aiohttp/streams.py\\\", line 259, in _wait\r\n    yield from waiter\r\nconcurrent.futures._base.CancelledError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \\\"execution_rest.py\\\", line 169, in post\r\n    payload = await resp['Payload'].read()\r\n  File \\\"/usr/lib/python3.6/site-packages/aiohttp/streams.py\\\", line 607, in read\r\n    return (yield from super().read(n))\r\n  File \\\"/usr/lib/python3.6/site-packages/aiohttp/streams.py\\\", line 323, in read\r\n    block = yield from self.readany()\r\n  File \\\"/usr/lib/python3.6/site-packages/aiohttp/streams.py\\\", line 623, in readany\r\n    return (yield from super().readany())\r\n  File \\\"/usr/lib/python3.6/site-packages/aiohttp/streams.py\\\", line 340, in readany\r\n    yield from self._wait('readany')\r\n  File \\\"/usr/lib/python3.6/site-packages/aiobotocore/endpoint.py\\\", line 158, in _wrapped_wait\r\n    return result\r\n  File \\\"/usr/lib/python3.6/site-packages/async_timeout/__init__.py\\\", line 45, in __exit__\r\n    self._do_exit(exc_type)\r\n  File \\\"/usr/lib/python3.6/site-packages/async_timeout/__init__.py\\\", line 92, in _do_exit\r\n    raise asyncio.TimeoutError\r\nconcurrent.futures._base.TimeoutError\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/605", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/605/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/605/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/605", "id": 337235182, "node_id": "MDU6SXNzdWUzMzcyMzUxODI=", "number": 605, "title": "Increase supported botocore version", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-30T18:48:04Z", "updated_at": "2018-07-19T19:40:17Z", "closed_at": "2018-07-19T19:24:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "aiobotocore is working fine with botocore 1.10.48. Can you remove this warning?\r\n\r\naiobotocore 0.9.2 has requirement botocore<1.10.13,>=1.10.12, but you'll have botocore 1.10.48 which is incompatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/603", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/603/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/603/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/603", "id": 333620926, "node_id": "MDU6SXNzdWUzMzM2MjA5MjY=", "number": 603, "title": "'OperationModel' object has no attribute 'has_event_stream_output'", "user": {"login": "dabata", "id": 7337456, "node_id": "MDQ6VXNlcjczMzc0NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7337456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dabata", "html_url": "https://github.com/dabata", "followers_url": "https://api.github.com/users/dabata/followers", "following_url": "https://api.github.com/users/dabata/following{/other_user}", "gists_url": "https://api.github.com/users/dabata/gists{/gist_id}", "starred_url": "https://api.github.com/users/dabata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dabata/subscriptions", "organizations_url": "https://api.github.com/users/dabata/orgs", "repos_url": "https://api.github.com/users/dabata/repos", "events_url": "https://api.github.com/users/dabata/events{/privacy}", "received_events_url": "https://api.github.com/users/dabata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-19T10:57:43Z", "updated_at": "2018-06-25T08:39:19Z", "closed_at": "2018-06-25T08:39:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "all calls with dynamodb as a client fail with the following error:\r\n```\r\n/opt/anaconda/envs/jupyter/lib/python3.6/site-packages/aiobotocore/endpoint.py in _get_response(self, request, operation_model, attempts)\r\n    330             # body.\r\n    331             request.reset_stream()\r\n--> 332             # Create a new request when retried (including a new signature).\r\n    333             request = self.create_request(\r\n    334                 request_dict, operation_model)\r\n\r\nAttributeError: 'OperationModel' object has no attribute 'has_event_stream_output'\r\n```\r\nhere is a sample code,\r\nthe non async equivalent for the following code works fine\r\n\r\n```python\r\nimport asyncio\r\nimport aiobotocore\r\n\r\nasync def main(loop):\r\n    session = aiobotocore.get_session(loop=loop)\r\n    table_name = 'testTable'\r\n    async with session.create_client('dynamodb') as client:\r\n        response = await client.describe_table(TableName=table_name)\r\n        print(response)\r\n\r\nasyncio.set_event_loop(asyncio.new_event_loop())\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main(loop))\r\n```\r\naiobotocore 0.9.2\r\n\r\nEdit: I temporarily reverted back to 0.8.0 with which there is no such issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/599", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/599/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/599/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/599", "id": 332981853, "node_id": "MDU6SXNzdWUzMzI5ODE4NTM=", "number": 599, "title": "How to batch write data to SQS", "user": {"login": "abuadan", "id": 9219195, "node_id": "MDQ6VXNlcjkyMTkxOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9219195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abuadan", "html_url": "https://github.com/abuadan", "followers_url": "https://api.github.com/users/abuadan/followers", "following_url": "https://api.github.com/users/abuadan/following{/other_user}", "gists_url": "https://api.github.com/users/abuadan/gists{/gist_id}", "starred_url": "https://api.github.com/users/abuadan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abuadan/subscriptions", "organizations_url": "https://api.github.com/users/abuadan/orgs", "repos_url": "https://api.github.com/users/abuadan/repos", "events_url": "https://api.github.com/users/abuadan/events{/privacy}", "received_events_url": "https://api.github.com/users/abuadan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-16T11:45:44Z", "updated_at": "2018-08-02T21:25:50Z", "closed_at": "2018-08-02T21:25:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi is there a way to write a list of messages to sqs? there is a method for dynamodb but I don't know if that option is available for sqs  do I just use the example with a a for loop?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/594", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/594/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/594/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/594", "id": 329195998, "node_id": "MDU6SXNzdWUzMjkxOTU5OTg=", "number": 594, "title": "socket read timeouts broken in latest release", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-04T20:01:25Z", "updated_at": "2018-06-05T23:36:09Z", "closed_at": "2018-06-05T23:36:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "see https://github.com/aio-libs/aiohttp/issues/3053.   Once fixed bump minimum aiohttp required and enable unittest in test_config.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/591", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/591/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/591/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/591", "id": 328879135, "node_id": "MDU6SXNzdWUzMjg4NzkxMzU=", "number": 591, "title": "Update error message for Python 3.5.3 requirement", "user": {"login": "aflury", "id": 5658567, "node_id": "MDQ6VXNlcjU2NTg1Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5658567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aflury", "html_url": "https://github.com/aflury", "followers_url": "https://api.github.com/users/aflury/followers", "following_url": "https://api.github.com/users/aflury/following{/other_user}", "gists_url": "https://api.github.com/users/aflury/gists{/gist_id}", "starred_url": "https://api.github.com/users/aflury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aflury/subscriptions", "organizations_url": "https://api.github.com/users/aflury/orgs", "repos_url": "https://api.github.com/users/aflury/repos", "events_url": "https://api.github.com/users/aflury/events{/privacy}", "received_events_url": "https://api.github.com/users/aflury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-04T00:59:19Z", "updated_at": "2018-07-06T20:50:28Z", "closed_at": "2018-07-06T20:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py now requires Python 3.5.3, but systems running earlier 3.5.x versions (in my case 3.5.2 on Ubuntu 16.04) get an error message of `aiobotocore doesn't support Python earlier than 3.5`. A more precise log message would be helpful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/590", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/590/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/590/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/590", "id": 328661377, "node_id": "MDU6SXNzdWUzMjg2NjEzNzc=", "number": 590, "title": "PyPI upload failing", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-06-01T21:07:54Z", "updated_at": "2018-08-02T21:24:37Z", "closed_at": "2018-08-02T21:24:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "see: https://travis-ci.com/aio-libs/aiobotocore/jobs/127196570", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/584", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/584/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/584/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/584", "id": 324713938, "node_id": "MDU6SXNzdWUzMjQ3MTM5Mzg=", "number": 584, "title": "Is is possible to have callbacks when uploading objects?", "user": {"login": "treuille", "id": 1673013, "node_id": "MDQ6VXNlcjE2NzMwMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1673013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treuille", "html_url": "https://github.com/treuille", "followers_url": "https://api.github.com/users/treuille/followers", "following_url": "https://api.github.com/users/treuille/following{/other_user}", "gists_url": "https://api.github.com/users/treuille/gists{/gist_id}", "starred_url": "https://api.github.com/users/treuille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treuille/subscriptions", "organizations_url": "https://api.github.com/users/treuille/orgs", "repos_url": "https://api.github.com/users/treuille/repos", "events_url": "https://api.github.com/users/treuille/events{/privacy}", "received_events_url": "https://api.github.com/users/treuille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-20T14:34:16Z", "updated_at": "2018-05-21T00:59:36Z", "closed_at": "2018-05-21T00:59:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it currently possible to get progress callbacks when doing a `client.put_object`?\r\n\r\nFor example, I know that `boto3` has `upload_file` and `upload_fileobj` methods which have a `Callback` keyword argument. Is there any equivalent in `aiobotocore`?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/583", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/583/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/583/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/583", "id": 323491165, "node_id": "MDU6SXNzdWUzMjM0OTExNjU=", "number": 583, "title": "pytest fixtures available for external projects", "user": {"login": "mkurek", "id": 107437, "node_id": "MDQ6VXNlcjEwNzQzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/107437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkurek", "html_url": "https://github.com/mkurek", "followers_url": "https://api.github.com/users/mkurek/followers", "following_url": "https://api.github.com/users/mkurek/following{/other_user}", "gists_url": "https://api.github.com/users/mkurek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkurek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkurek/subscriptions", "organizations_url": "https://api.github.com/users/mkurek/orgs", "repos_url": "https://api.github.com/users/mkurek/repos", "events_url": "https://api.github.com/users/mkurek/events{/privacy}", "received_events_url": "https://api.github.com/users/mkurek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1369284683, "node_id": "MDU6TGFiZWwxMzY5Mjg0Njgz", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/pr-available", "name": "pr-available", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-16T06:58:41Z", "updated_at": "2020-02-23T21:02:44Z", "closed_at": "2019-01-21T10:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to have access to pytest fixtures defined in [conftest.py](https://github.com/aio-libs/aiobotocore/blob/master/tests/conftest.py) or [mock_server.py](https://github.com/aio-libs/aiobotocore/blob/master/tests/mock_server.py) in external projects which depend on aiobotocore. \r\n\r\nSimilar setup is done for example in [aiohttp's pytest_plugin](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/pytest_plugin.py)\r\n\r\nWhat do you think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/580", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/580/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/580/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/580", "id": 320938165, "node_id": "MDU6SXNzdWUzMjA5MzgxNjU=", "number": 580, "title": "mark master as protected github branch?", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-07T20:07:11Z", "updated_at": "2018-05-08T16:15:35Z", "closed_at": "2018-05-08T16:15:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@jettify what do you think?  Sounds like a good idea to me ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/578", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/578/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/578/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/578", "id": 320927692, "node_id": "MDU6SXNzdWUzMjA5Mjc2OTI=", "number": 578, "title": "Documentation formatting broken on pypi.python.org", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-07T19:33:14Z", "updated_at": "2018-05-08T16:28:39Z", "closed_at": "2018-05-08T16:28:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "may be related to new pypi server?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/573", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/573/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/573/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/573", "id": 319730170, "node_id": "MDU6SXNzdWUzMTk3MzAxNzA=", "number": 573, "title": "Pagination is broken", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-02T22:12:43Z", "updated_at": "2018-05-05T18:28:49Z", "closed_at": "2018-05-05T18:28:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Issue\r\n\r\nCommit 42dbd833187ff396e4b0e443eaa5fd0d20b84b66 appears to have broken pagination. The reproducer below works fine using aiobotocore 0.6.0 (with aiohttp 3.0.9), but breaks with aiobotocore 0.7.0 (with aiohttp 3.1.3).\r\n\r\n```python\r\nfrom pprint import pprint\r\n\r\nimport aiobotocore\r\n\r\n\r\nasync def main():\r\n    session = aiobotocore.get_session()\r\n\r\n    async with session.create_client('s3') as s3:\r\n        paginator = s3.get_paginator('list_objects')\r\n        async for page in paginator.paginate(Bucket='some-bucket'):\r\n            for item in page.get('Contents', []):\r\n                pprint(item)\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n```\r\n\r\nAnd the resulting traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 50, in <module>\r\n    loop.run_until_complete(main())\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"test.py\", line 42, in main\r\n    for item in page.get('Contents', []):\r\nAttributeError: 'coroutine' object has no attribute 'get'\r\nsys:1: RuntimeWarning: coroutine 'AioPageIterator.next_page' was never awaited\r\n```\r\n\r\n## Root cause\r\n\r\nThe problem is in `AioPageIterator`'s `__anext__`:\r\nhttps://github.com/aio-libs/aiobotocore/blob/42fc4d9765d84b8d16168b750296859b85ac698e/aiobotocore/paginate.py#L93-L97\r\n\r\nRather than awaiting `self.next_page()`, the coroutine is being returned directly. This is definitely wrong; changing the last line to `return await self.next_page()` fixes the issue (I'll submit a PR).\r\n\r\nWhat I don't understand is how it was working before, and why simply switching from using the `@asyncio.coroutine` decorator to native `async def` functions exposed it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/572", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/572/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/572/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/572", "id": 319299685, "node_id": "MDU6SXNzdWUzMTkyOTk2ODU=", "number": 572, "title": "Having trouble seeing a difference between boto3's batch_writer and this package", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-01T19:29:10Z", "updated_at": "2018-05-08T23:53:59Z", "closed_at": "2018-05-08T19:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a script that uses `boto3`\r\n\r\n        with open(file_name, 'r') as items:\r\n            with table.batch_writer() as batch:\r\n                for idx, item in enumerate(items):\r\n                    item = item.strip()\r\n                    batch.put_item(\r\n                        Item={\r\n                            'item': item,\r\n                        }\r\n                    )\r\n\r\nand another that uses `aiobotocore`\r\n\r\n       with open(file_name, 'r') as items:\r\n            batch = []\r\n            count = 0\r\n            for item in items:\r\n                item = item.strip()\r\n                batch.append(item)\r\n                if len(batch) == size:\r\n                    count += size\r\n                    response = await self.client.batch_write_item(\r\n                         RequestItems={\r\n                             table_name: [\r\n                                 {'PutRequest': {'Item': {\r\n                                     'item': {\r\n                                          'S': item,\r\n                                      }\r\n                                 }}}\r\n                                 for ditem in batch\r\n                             ]\r\n                         }\r\n                    )\r\n                    batch = []\r\n\r\nWhen I run either, I get about 64 to 70 seconds to finish roughly 15k records.\r\n\r\nWhat am I doing wrong? I tried to follow the example [dynamodb_batch_write](https://github.com/aio-libs/aiobotocore/blob/master/examples/dynamodb_batch_write.py) as closely as possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/570", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/570/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/570/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/570", "id": 319149468, "node_id": "MDU6SXNzdWUzMTkxNDk0Njg=", "number": 570, "title": "Next release version 0.7.0", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-01T08:56:32Z", "updated_at": "2018-05-01T16:12:09Z", "closed_at": "2018-05-01T16:12:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have bunch of awesome changes landed in 0.6.1 I think those deserves major version bump :) , so I suggest to have next release 0.7.0 instead of 0.6.2 . One outstanding issue for next release is to handle https://github.com/aio-libs/aiobotocore/pull/560", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/563", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/563/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/563/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/563", "id": 318035549, "node_id": "MDU6SXNzdWUzMTgwMzU1NDk=", "number": 563, "title": "How to batch write data to DynamoDB?", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-26T13:42:38Z", "updated_at": "2018-04-26T13:44:16Z", "closed_at": "2018-04-26T13:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to batch write data multithreaded to dynamodb using this package? I'm trying to write some code to do it but don't see any documentation for it. Anyone done this before?\r\n\r\nThanks!\r\n\r\nEdit: sorry, I found this https://aiobotocore.readthedocs.io/en/latest/examples.html#dynamodb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/562", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/562/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/562/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/562", "id": 317703121, "node_id": "MDU6SXNzdWUzMTc3MDMxMjE=", "number": 562, "title": "0.6.0 fail with DynamoDB", "user": {"login": "mannickutd", "id": 1556623, "node_id": "MDQ6VXNlcjE1NTY2MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1556623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mannickutd", "html_url": "https://github.com/mannickutd", "followers_url": "https://api.github.com/users/mannickutd/followers", "following_url": "https://api.github.com/users/mannickutd/following{/other_user}", "gists_url": "https://api.github.com/users/mannickutd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mannickutd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mannickutd/subscriptions", "organizations_url": "https://api.github.com/users/mannickutd/orgs", "repos_url": "https://api.github.com/users/mannickutd/repos", "events_url": "https://api.github.com/users/mannickutd/events{/privacy}", "received_events_url": "https://api.github.com/users/mannickutd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-25T16:29:21Z", "updated_at": "2018-05-01T08:12:18Z", "closed_at": "2018-05-01T08:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "return await client.get_item(TableName=self.table_name, Key={'org_id': {'S': key}})\r\npython3.6/site-packages/aiobotocore/client.py\", line 80, in _make_api_call\r\n    operation_model, request_dict)\r\npython3.6/site-packages/aiobotocore/endpoint.py\", line 265, in _send_request\r\n    exception)):\r\npython3.6/site-packages/aiobotocore/endpoint.py\", line 297, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\npython3.6/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\npython3.6/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\npython3.6/site-packages/botocore/retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\npython3.6/site-packages/botocore/retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\npython3.6/site-packages/botocore/retryhandler.py\", line 269, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\npython3.6/site-packages/botocore/retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\npython3.6/site-packages/botocore/retryhandler.py\", line 220, in __call__\r\n    return self._check_response(attempt_number, response)\r\npython3.6/site-packages/botocore/retryhandler.py\", line 335, in _check_response\r\n    actual_crc32 = crc32(response[0].content) & 0xffffffff\r\nTypeError: a bytes-like object is required, not 'StreamReader'\r\n\r\nInstalled libraries\r\naiobotocore==0.6.0\r\naiohttp==3.1.3\r\naioresponses==0.4.1\r\nalembic==0.9.7\r\nastroid==1.6.1\r\nasync-timeout==2.0.1\r\nasyncpg==0.15.0\r\nasynctest==0.11.1\r\nattrs==17.4.0\r\nbotocore==1.8.21\r\ncertifi==2018.1.18\r\nchardet==3.0.4\r\ncoverage==4.4.1\r\nCython==0.27.3\r\ndocutils==0.14\r\ngino==0.6.2\r\ngunicorn==19.7.1\r\nidna==2.6\r\nidna-ssl==1.0.1\r\niso8601==0.1.12\r\nisort==4.2.15\r\njmespath==0.9.3\r\njson-logging-py==0.2\r\njsonschema==2.6.0\r\nlazy-object-proxy==1.3.1\r\nMako==1.0.7\r\nMarkupSafe==1.0\r\nmccabe==0.6.1\r\nmultidict==4.2.0\r\npackaging==17.1\r\npsycopg2==2.7.3.2\r\npy==1.5.2\r\npylint==1.8.2\r\npyparsing==2.2.0\r\npystrainer==1.3.1\r\npytest==3.1.3\r\npytest-aiohttp==0.1.3\r\npytest-cov==2.5.1\r\npython-dateutil==2.7.2\r\npython-editor==1.0.3\r\nrequests==2.18.4\r\nrequests-mock==1.4.0\r\nsix==1.11.0\r\nSQLAlchemy==1.2.5\r\nurllib3==1.22\r\nuvloop==0.9.1\r\nwebsockets==4.0.1\r\nwrapt==1.10.11\r\nyarl==1.1.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/559", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/559/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/559/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/559", "id": 315072403, "node_id": "MDU6SXNzdWUzMTUwNzI0MDM=", "number": 559, "title": "Incompatibility aiobotocore 0.6.0 and botocore >=1.10.4", "user": {"login": "mikepashin", "id": 8480816, "node_id": "MDQ6VXNlcjg0ODA4MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8480816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikepashin", "html_url": "https://github.com/mikepashin", "followers_url": "https://api.github.com/users/mikepashin/followers", "following_url": "https://api.github.com/users/mikepashin/following{/other_user}", "gists_url": "https://api.github.com/users/mikepashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikepashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikepashin/subscriptions", "organizations_url": "https://api.github.com/users/mikepashin/orgs", "repos_url": "https://api.github.com/users/mikepashin/repos", "events_url": "https://api.github.com/users/mikepashin/events{/privacy}", "received_events_url": "https://api.github.com/users/mikepashin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-17T13:58:28Z", "updated_at": "2018-04-30T19:46:49Z", "closed_at": "2018-04-30T19:46:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nAfter update all pip package in my project, i see problems Incompatibility aiobotocore 0.6.0 and botocore.\r\n\r\nConsole: **aiobotocore 0.6.0 has requirement botocore<=1.8.21,>=1.8.0, but you'll have botocore 1.10.4 which is incompatible.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/556", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/556/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/556/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/556", "id": 310924293, "node_id": "MDU6SXNzdWUzMTA5MjQyOTM=", "number": 556, "title": "This works with DigitalOcean Spaces also!", "user": {"login": "philgooch", "id": 1210602, "node_id": "MDQ6VXNlcjEyMTA2MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1210602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philgooch", "html_url": "https://github.com/philgooch", "followers_url": "https://api.github.com/users/philgooch/followers", "following_url": "https://api.github.com/users/philgooch/following{/other_user}", "gists_url": "https://api.github.com/users/philgooch/gists{/gist_id}", "starred_url": "https://api.github.com/users/philgooch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philgooch/subscriptions", "organizations_url": "https://api.github.com/users/philgooch/orgs", "repos_url": "https://api.github.com/users/philgooch/repos", "events_url": "https://api.github.com/users/philgooch/events{/privacy}", "received_events_url": "https://api.github.com/users/philgooch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-03T17:17:59Z", "updated_at": "2018-04-05T11:41:44Z", "closed_at": "2018-04-04T07:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was looking for a solution for async uploads to DigitalOcean spaces and aiobotocore fits the bill perfectly.\r\n\r\nThe only changes required to get the Basic Example working with Spaces are as follows:\r\n\r\n`bucket = <your DO Space name>`\r\n\r\nIn `session.create_client`:\r\n\r\n`region_name=<your DO region name, e.g. nyc3>`\r\n`endpoint_url=<your DO endpoint, e.g. https://nyc3.digitaloceanspaces.com>`\r\n\r\ne.g.\r\n\r\n```\r\nasync with session.create_client('s3', region_name='nyc3',\r\n                                   endpoint_url='https://nyc3.digitaloceanspaces.com',\r\n                                   aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n                                   aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/553", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/553/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/553/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/553", "id": 308179810, "node_id": "MDU6SXNzdWUzMDgxNzk4MTA=", "number": 553, "title": "get_credentials() fails on AioSession", "user": {"login": "TimOrme", "id": 1214204, "node_id": "MDQ6VXNlcjEyMTQyMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1214204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimOrme", "html_url": "https://github.com/TimOrme", "followers_url": "https://api.github.com/users/TimOrme/followers", "following_url": "https://api.github.com/users/TimOrme/following{/other_user}", "gists_url": "https://api.github.com/users/TimOrme/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimOrme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimOrme/subscriptions", "organizations_url": "https://api.github.com/users/TimOrme/orgs", "repos_url": "https://api.github.com/users/TimOrme/repos", "events_url": "https://api.github.com/users/TimOrme/events{/privacy}", "received_events_url": "https://api.github.com/users/TimOrme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648073, "node_id": "MDU6TGFiZWwyMTg2NDgwNzM=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-03-23T21:10:13Z", "updated_at": "2019-03-01T21:30:11Z", "closed_at": "2018-08-02T23:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using aiobotocore 0.6.0, python 3.6.3\r\n\r\nExecuting:\r\n\r\n```python\r\naiobotocore.get_session().get_credentials().secret_key\r\n```\r\n\r\nFails with the following error:\r\n\r\n```aiobotocore.get_session().get_credentials().secret_key\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 336, in secret_key\r\n    self._refresh()\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 415, in _refresh\r\n    self._protected_refresh(is_mandatory=is_mandatory_refresh)\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 431, in _protected_refresh\r\n    metadata = self._refresh_using()\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 555, in fetch_credentials\r\n    return self._get_cached_credentials()\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 566, in _get_cached_credentials\r\n    self._write_to_cache(response)\r\n  File \"/venv/lib/python3.6/site-packages/botocore/credentials.py\", line 591, in _write_to_cache\r\n    self._cache[self._cache_key] = deepcopy(response)\r\n  File \"/usr/lib/python3.6/copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle generator objects\r\n```\r\n\r\nWhen hitting the AssumeRoleProvider. It appears that the provider tries to write the client to cache but fails to serialize the Aio client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/552", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/552/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/552/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/552", "id": 307845108, "node_id": "MDU6SXNzdWUzMDc4NDUxMDg=", "number": 552, "title": "[tracking aiohttp] Possible Memory Leak with SSL Sessions", "user": {"login": "TimOrme", "id": 1214204, "node_id": "MDQ6VXNlcjEyMTQyMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1214204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimOrme", "html_url": "https://github.com/TimOrme", "followers_url": "https://api.github.com/users/TimOrme/followers", "following_url": "https://api.github.com/users/TimOrme/following{/other_user}", "gists_url": "https://api.github.com/users/TimOrme/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimOrme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimOrme/subscriptions", "organizations_url": "https://api.github.com/users/TimOrme/orgs", "repos_url": "https://api.github.com/users/TimOrme/repos", "events_url": "https://api.github.com/users/TimOrme/events{/privacy}", "received_events_url": "https://api.github.com/users/TimOrme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2018-03-22T23:03:46Z", "updated_at": "2019-04-21T06:36:11Z", "closed_at": "2019-04-21T06:35:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm calling S3 using:\r\n\r\n-python 3.6.3\r\n-aiobotocore 0.6.0\r\n-Ubuntu 17.10\r\n\r\nI notice that when I have a loop of async calls to retrieve data, my memory usage seems to continually go up, even though I expect it to stay the same.  Here is a test case I could come up with:\r\n\r\n```python\r\nimport asyncio\r\nfrom hashlib import md5\r\nimport aiobotocore\r\nfrom botocore.client import Config\r\nimport boto3\r\nfrom botocore.exceptions import ClientError as BotoClientError\r\nfrom itertools import islice, chain\r\n\r\nclass FileService(object):\r\n    def __init__(self, loop=None):\r\n        config = Config(signature_version='s3v4')\r\n        self._loop = loop or asyncio.get_event_loop()\r\n\r\n        self._session = boto3.Session()\r\n        self._asession = aiobotocore.get_session(loop=self._loop)\r\n        self._config = config\r\n\r\n    def _get_s3_client(self):\r\n        # Use the credentials created by boto3 session.\r\n        creds = self._session.get_credentials()\r\n        client = self._asession.create_client('s3', region_name=\"us-east-1\",\r\n                                              aws_secret_access_key=creds.secret_key,\r\n                                              aws_access_key_id=creds.access_key,\r\n                                              aws_session_token=creds.token,\r\n                                              config=self._config)\r\n        return client\r\n\r\n    def readfiles(self, paths):\r\n        return self._loop.run_until_complete(self.readfiles_async(paths))\r\n\r\n    def readfile(self, path, client=None):\r\n        return self._loop.run_until_complete(self.readfile_async(path, client=client))\r\n\r\n    async def readfiles_async(self, paths):\r\n        async with self._get_s3_client() as client:\r\n            futures = [self.readfile_async(path, client=client) for path in paths]\r\n            return await asyncio.gather(*futures)\r\n\r\n    async def readfile_async(self, path, client=None):\r\n        data = await self._get_object_async(client, path)\r\n        return data\r\n\r\n    async def _get_object_async(self, client, path):\r\n        bucket, key = parse_s3_path(path)\r\n        try:\r\n            response = await client.get_object(Bucket=bucket, Key=key)\r\n            async with response['Body'] as stream:\r\n                return await stream.read()\r\n        except BotoClientError as e:\r\n            if e.response['Error']['Code'] == 'NoSuchKey':\r\n                pass\r\n\r\n\r\ndef parse_s3_path(path):\r\n    s3_tokens = path.split('/', 3)\r\n    try:\r\n        return s3_tokens[2], s3_tokens[3]\r\n    except IndexError:\r\n        return s3_tokens[2], ''\r\n\r\n\r\ndef chunked(iterable, size=None):\r\n    if not size:\r\n        yield iterable\r\n    else:\r\n        it = iter(iterable)\r\n        while True:\r\n            s = islice(it, size)\r\n            yield chain([next(s)], s)\r\n\r\n\r\nservice = FileService()\r\n\r\nids = range(0, 10000)\r\nfor chunk in chunked(ids, 250):\r\n    file_paths = [\"s3://mybucket/%s.file\" % x for x in chunk]\r\n    all_data = service.readfiles(file_paths)\r\n```\r\n\r\nEach chunk increases the memory size my a noticeable margin, and does not seem to release it on subsequent chunks.\r\n\r\nI am not an expert at debugging memory issues in python, but I tried using objgraph to see which objects were getting created on each subsequent loop and found that the majority appear to be SSL contexts.\r\n\r\nThanks,\r\nTim", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/551", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/551/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/551/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/551", "id": 307829467, "node_id": "MDU6SXNzdWUzMDc4Mjk0Njc=", "number": 551, "title": "Crash with aiohttp 3.1.x related to use of StreamReader", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-22T21:57:22Z", "updated_at": "2018-05-01T16:24:52Z", "closed_at": "2018-05-01T08:12:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting a crash using aiobotocore 0.6.0 with aiohttp 3.1.0 (released yesterday 2018-03-21). It appears to be related to botocore's response checking:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 20, in <module>\r\n    loop.run_until_complete(main())\r\n  File \"/usr/local/Cellar/python/3.6.4_4/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"test.py\", line 12, in main\r\n    response = await client.describe_table(TableName='orbit-prod-identities')\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/aiobotocore/client.py\", line 94, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 290, in _send_request\r\n    exception)):\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 322, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 269, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 220, in __call__\r\n    return self._check_response(attempt_number, response)\r\n  File \"/Users/adam/Desktop/aiobotocore-test/venv/lib/python3.6/site-packages/botocore/retryhandler.py\", line 335, in _check_response\r\n    actual_crc32 = crc32(response[0].content) & 0xffffffff\r\nTypeError: a bytes-like object is required, not 'StreamReader'\r\n```\r\n\r\nHere's a minimal reproducer:\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\nimport asyncio\r\nfrom pprint import pprint\r\n\r\nimport aiobotocore\r\n\r\n\r\nasync def main():\r\n    session = aiobotocore.get_session()\r\n    client = session.create_client('dynamodb')\r\n\r\n    response = await client.list_tables()\r\n    pprint(response)\r\n\r\n    await client.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n```\r\n\r\nI've also tried `client.describe_table`, which results in the same error. It seems like the semantics for `StreamReader` have changed such that it can no longer be treated like data.\r\n\r\nThe crash does not occur with aiohttp 3.0.9.\r\n\r\nEnvironment:\r\n* Python 3.6.4\r\n* aiobotocore 0.6.0\r\n* aiohttp 3.1.0\r\n* botocore 1.8.21\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/548", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/548/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/548/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/548", "id": 304030778, "node_id": "MDU6SXNzdWUzMDQwMzA3Nzg=", "number": 548, "title": "SSL connection errors", "user": {"login": "ariwbolton", "id": 12902905, "node_id": "MDQ6VXNlcjEyOTAyOTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/12902905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ariwbolton", "html_url": "https://github.com/ariwbolton", "followers_url": "https://api.github.com/users/ariwbolton/followers", "following_url": "https://api.github.com/users/ariwbolton/following{/other_user}", "gists_url": "https://api.github.com/users/ariwbolton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ariwbolton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ariwbolton/subscriptions", "organizations_url": "https://api.github.com/users/ariwbolton/orgs", "repos_url": "https://api.github.com/users/ariwbolton/repos", "events_url": "https://api.github.com/users/ariwbolton/events{/privacy}", "received_events_url": "https://api.github.com/users/ariwbolton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-03-10T01:52:11Z", "updated_at": "2019-09-05T13:53:33Z", "closed_at": "2018-04-30T19:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Issue\r\n\r\nWhen trying to conduct a simple initial test (essentially adapted from [here](url)) , I'm getting `ssl.SSLError`s.\r\n\r\n# Environment\r\n\r\nOutput from pip: `Successfully installed aiobotocore-0.6.0 aiohttp-3.0.7 botocore-1.8.21 idna-ssl-1.0.1 packaging-17.1 pyparsing-2.2.0 wrapt-1.10.11`\r\n\r\nUsing python 3.6.3 in macOS 10.12.6.\r\n\r\n# Minimal Working Example\r\n\r\n```python\r\n\"\"\"Aiobotocore test.\"\"\"\r\nimport asyncio\r\nimport aiobotocore\r\n\r\nAWS_ACCESS_KEY_ID = '*****'\r\nAWS_SECRET_ACCESS_KEY = '*****'\r\n\r\n\r\nasync def runner():\r\n    session = aiobotocore.get_session()\r\n    async with session.create_client(\r\n        's3', region_name='us-east-1',\r\n        aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n        aws_access_key_id=AWS_ACCESS_KEY_ID\r\n    ) as client:\r\n        # upload object to amazon s3\r\n        resp = await client.get_object(\r\n            Bucket='****',\r\n            Key='***'\r\n        )\r\n\r\n        print(resp)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    response = loop.run_until_complete(runner())\r\n\r\n    print(response)\r\n```\r\n\r\n# Expected output\r\n\r\nResponse object, like normal\r\n\r\n# Actual output\r\n\r\n```Traceback (most recent call last):\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 800, in _wrap_create_connection\r\n    return await self._loop.create_connection(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 803, in create_connection\r\n    sock, protocol_factory, ssl, server_hostname)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 829, in _create_connection_transport\r\n    yield from waiter\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/sslproto.py\", line 503, in data_received\r\n    ssldata, appdata = self._sslpipe.feed_ssldata(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/sslproto.py\", line 201, in feed_ssldata\r\n    self._sslobj.do_handshake()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py\", line 689, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"<project_root>/<file_path>.py\", line 27, in <module>\r\n    response = loop.run_until_complete(runner())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"<project_root>/<file_path>.py\", line 19, in runner\r\n    Key='all/1.wav'\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiobotocore/client.py\", line 94, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 290, in _send_request\r\n    exception)):\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 322, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 277, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 223, in __call__\r\n    attempt_number, caught_exception)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/botocore/retryhandler.py\", line 359, in _check_caught_exception\r\n    raise caught_exception\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 352, in _get_response\r\n    request.method, request.url, request.headers, request.body)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 279, in _request\r\n    timeout=None)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/client.py\", line 319, in _request\r\n    traces=traces\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 418, in connect\r\n    traces=traces\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 223, in coro\r\n    res = yield from await_meth()\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 736, in _create_connection\r\n    traces=None\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 855, in _create_direct_connection\r\n    raise last_exc\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 838, in _create_direct_connection\r\n    req=req, client_error=client_error)\r\n  File \"<project_root>/dev-env/lib/python3.6/site-packages/aiohttp/connector.py\", line 805, in _wrap_create_connection\r\n    raise ClientConnectorSSLError(req.connection_key, exc) from exc\r\naiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host s3.amazonaws.com:443 ssl:True [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)]```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/546", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/546/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/546/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/546", "id": 302102101, "node_id": "MDU6SXNzdWUzMDIxMDIxMDE=", "number": 546, "title": "Move to native coroutines", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 218648072, "node_id": "MDU6TGFiZWwyMTg2NDgwNzI=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 218648073, "node_id": "MDU6TGFiZWwyMTg2NDgwNzM=", "url": "https://api.github.com/repos/aio-libs/aiobotocore/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-04T17:03:27Z", "updated_at": "2018-05-01T08:46:07Z", "closed_at": "2018-05-01T08:46:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since we dropped support for python < 3.5, now we can use `async def` instead of `@asyncio.coroutine`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/519", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/519/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/519/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/519", "id": 297408435, "node_id": "MDU6SXNzdWUyOTc0MDg0MzU=", "number": 519, "title": "Adopt aiohttp 3", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2018-02-15T11:12:44Z", "updated_at": "2018-03-04T11:56:07Z", "closed_at": "2018-03-04T11:55:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently aiobotocore pins aiohttp dependency to 2.x, that's sad.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/503", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/503/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/503/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/503", "id": 292828317, "node_id": "MDU6SXNzdWUyOTI4MjgzMTc=", "number": 503, "title": "aiohttp.client_exceptions.ClientConnectionError: Connection closed", "user": {"login": "jersobh", "id": 4663106, "node_id": "MDQ6VXNlcjQ2NjMxMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4663106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jersobh", "html_url": "https://github.com/jersobh", "followers_url": "https://api.github.com/users/jersobh/followers", "following_url": "https://api.github.com/users/jersobh/following{/other_user}", "gists_url": "https://api.github.com/users/jersobh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jersobh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jersobh/subscriptions", "organizations_url": "https://api.github.com/users/jersobh/orgs", "repos_url": "https://api.github.com/users/jersobh/repos", "events_url": "https://api.github.com/users/jersobh/events{/privacy}", "received_events_url": "https://api.github.com/users/jersobh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-30T15:37:26Z", "updated_at": "2019-07-01T20:06:30Z", "closed_at": "2018-03-10T19:35:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "From some days ago I've started receiving this error\r\n\r\nError handling request\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/web_protocol.py\", line 410, in start\r\n    resp = yield from self._request_handler(request)\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/web.py\", line 325, in _handle\r\n    resp = yield from handler(request)\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/web_middlewares.py\", line 93, in impl\r\n    return (yield from handler(request))\r\n  File \"server.py\", line 32, in middleware\r\n    return await handler(request)\r\n  File \"server.py\", line 39, in middleware_handler\r\n    resp = await handler(request)\r\n  File \"/home/jeff/Projects/api/controllers/media.py\", line 211, in addMedia\r\n    media['thumbnail'] = await uploadThumbnail(data['thumbnail'])\r\n  File \"/home/jeff/Projects/api/controllers/media.py\", line 311, in uploadThumbnail\r\n    s3_upload = await client.put_object(Bucket=THUMBNAIL_BUCKET, Key=filename, Body=file)\r\n  File \"/usr/lib/python3.6/site-packages/aiobotocore/client.py\", line 80, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 262, in _send_request\r\n    request, operation_model, attempts)\r\n  File \"/usr/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 350, in _get_response\r\n    operation_model)\r\n  File \"/usr/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 73, in convert_to_response_dict\r\n    body = yield from http_response.read()\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/client_reqrep.py\", line 746, in read\r\n    self._content = yield from self.content.read()\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/streams.py\", line 607, in read\r\n    return (yield from super().read(n))\r\n  File \"/usr/lib/python3.6/site-packages/aiohttp/streams.py\", line 299, in read\r\n    raise self._exception\r\naiohttp.client_exceptions.ClientConnectionError: Connection closed\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/460", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/460/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/460/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/460", "id": 279711558, "node_id": "MDU6SXNzdWUyNzk3MTE1NTg=", "number": 460, "title": "aiobotocore[awscli] at wrong version", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-06T11:03:10Z", "updated_at": "2017-12-06T15:46:49Z", "closed_at": "2017-12-06T15:46:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/aws/aws-cli/blob/1.11.146/setup.py#L26", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/451", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/451/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/451/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/451", "id": 277837078, "node_id": "MDU6SXNzdWUyNzc4MzcwNzg=", "number": 451, "title": "Timeout on S3 get_object using asyncio.gather", "user": {"login": "alliefitter", "id": 13684558, "node_id": "MDQ6VXNlcjEzNjg0NTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/13684558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alliefitter", "html_url": "https://github.com/alliefitter", "followers_url": "https://api.github.com/users/alliefitter/followers", "following_url": "https://api.github.com/users/alliefitter/following{/other_user}", "gists_url": "https://api.github.com/users/alliefitter/gists{/gist_id}", "starred_url": "https://api.github.com/users/alliefitter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alliefitter/subscriptions", "organizations_url": "https://api.github.com/users/alliefitter/orgs", "repos_url": "https://api.github.com/users/alliefitter/repos", "events_url": "https://api.github.com/users/alliefitter/events{/privacy}", "received_events_url": "https://api.github.com/users/alliefitter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-29T17:15:27Z", "updated_at": "2020-07-08T23:38:05Z", "closed_at": "2018-02-23T18:19:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to download 300 objects from S3 by building a list of futures and waiting on them to finish with `asyncio.gather`. For some reason, only the ten are finishing and the rest are timing out.\r\n\r\n**Code:**\r\n```python\r\nimport asyncio\r\n\r\nimport aiobotocore\r\nfrom pyboto3 import s3 as s3_client\r\n\r\n\r\nasync def get_logs(s3: s3_client, keys: list = [], token: str = None):\r\n    \"\"\"\r\n\r\n    :param token:\r\n    :type token: str\r\n    :param keys:\r\n    :type keys: list\r\n    :param s3:\r\n    :type s3: s3_client\r\n    :return:\r\n    \"\"\"\r\n    r = await s3.list_objects_v2(\r\n        Bucket='bucket',\r\n        MaxKeys=1000,\r\n        Prefix='prefix'\r\n    )\r\n    contents = r['Contents'] if 'Contents' in r else []\r\n    is_truncated = r['IsTruncated'] if 'IsTruncated' in r else False\r\n    token = r['NextContinuationToken'] if 'NextContinuationToken' in r else None\r\n    keys = [c['Key'] for c in contents if 'Key' in c] + keys\r\n    print('IsTruncated: {}'.format(is_truncated))\r\n    return keys if not is_truncated else await get_logs(s3, keys, token)\r\n\r\n\r\nasync def get_object(s3: s3_client, key: str):\r\n    \"\"\"\r\n\r\n    :param s3:\r\n    :type s3: s3_client\r\n    :param key:\r\n    :type key: str\r\n    :return:\r\n    \"\"\"\r\n    print('Downloading {}'.format(key))\r\n    r = await s3.get_object(Bucket='bucket', Key=key)\r\n    print('Finished {}'.format(key))\r\n    return r\r\n\r\n\r\nasync def run(s3: s3_client):\r\n    \"\"\"\r\n\r\n    :param s3:\r\n    :type s3: s3_client\r\n    :return:\r\n    \"\"\"\r\n    keys = await get_logs(s3)\r\n    r = await asyncio.gather(*[get_object(s3, k) for k in keys])\r\n    print(r)\r\n    return s3.close()\r\n\r\n\r\n_loop = asyncio.get_event_loop()\r\n_s3 = aiobotocore.get_session(loop=_loop).create_client(\r\n    's3',\r\n    aws_access_key_id='id',\r\n    aws_secret_access_key='key'\r\n)\r\n_loop.run_until_complete(run(_s3))\r\n```\r\n**Output:**\r\n```\r\nIsTruncated: False\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/013d407166ec4fa56eb1e1f8cbe183b9/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/077e29b11be80ab57e1a2ecabb7da330/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/31fefc0e570cb3860f2a6d4b38c6490d/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/82aa4b0af34c2313a562076992e50aa3/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/f899139df5e1059396431415e770c6dd/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/02522a2b2726fb0a03bb19f2d8d9524d/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/07cdfd23373b17c6b337251c22b7ea57/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/3295c76acbf4caaed33c36b1b5fc2cb1/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/839ab46820b524afda05122893c2fe8e/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/f90f2aca5c640289d0a29417bcb63a37/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/07e1cd7dca89a1678042477183b7ac3f/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/32bb90e8976aab5298d5da10fe66f21d/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/84d9ee44e457ddef7f2c4f25dc8fa865/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/fa7cdfad1a5aaf8370ebeda47a1ff1c3/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/084b6fbb10729ed4da8c3d3f5a3ae7c9/000000.gz\r\nDownloading mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/335f5352088d7d9bf74191e006d8e24c/000000.gz\r\n\r\n...\r\n\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/013d407166ec4fa56eb1e1f8cbe183b9/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/839ab46820b524afda05122893c2fe8e/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/02522a2b2726fb0a03bb19f2d8d9524d/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/f899139df5e1059396431415e770c6dd/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/07cdfd23373b17c6b337251c22b7ea57/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/077e29b11be80ab57e1a2ecabb7da330/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/f90f2aca5c640289d0a29417bcb63a37/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/3295c76acbf4caaed33c36b1b5fc2cb1/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/31fefc0e570cb3860f2a6d4b38c6490d/000000.gz\r\nFinished mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/82aa4b0af34c2313a562076992e50aa3/000000.gz\r\nTraceback (most recent call last):\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiohttp/client.py\", line 267, in _request\r\n    conn = yield from self._connector.connect(req)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiohttp/connector.py\", line 380, in connect\r\n    yield from fut\r\nconcurrent.futures._base.CancelledError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiohttp/client.py\", line 267, in _request\r\n    conn = yield from self._connector.connect(req)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/async_timeout/__init__.py\", line 35, in __exit__\r\n    self._do_exit(exc_type)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/async_timeout/__init__.py\", line 80, in _do_exit\r\n    raise asyncio.TimeoutError\r\nconcurrent.futures._base.TimeoutError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/allie/PycharmProjects/mdm_reference_architecture/server/tests/logs.py\", line 70, in <module>\r\n    _loop.run_until_complete(run(_s3))\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"/home/allie/PycharmProjects/mdm_reference_architecture/server/tests/logs.py\", line 58, in run\r\n    r = await asyncio.gather(*[get_object(s3, k) for k in ])\r\n  File \"/home/allie/PycharmProjects/mdm_reference_architecture/server/tests/logs.py\", line 45, in get_object\r\n    r = await s3.get_object(Bucket='logs.cellcontrol-test.com', Key=key)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiobotocore/client.py\", line 80, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 265, in _send_request\r\n    exception)):\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 297, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 277, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 223, in __call__\r\n    attempt_number, caught_exception)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/botocore/retryhandler.py\", line 359, in _check_caught_exception\r\n    raise caught_exception\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 321, in _get_response\r\n    request.method, request.url, request.headers, request.body)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 254, in _request\r\n    timeout=None)\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiohttp/helpers.py\", line 99, in __iter__\r\n    ret = yield from self._coro\r\n  File \"/home/allie/virtualenvs/mdm_architecture_reference_server/lib/python3.6/site-packages/aiohttp/client.py\", line 271, in _request\r\n    'to host {0}'.format(url)) from exc\r\naiohttp.client_exceptions.ServerTimeoutError: Connection timeout to host https://s3.amazonaws.com/logs.cellcontrol-test.com/mdm-architecture-reference/server/0f199d90-89fc-4fae-a8ab-f91e39ed3857/812b4ba287f5ee0bc9d43bbf5bbe87fb/000000.gz\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/441", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/441/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/441/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/441", "id": 275438702, "node_id": "MDU6SXNzdWUyNzU0Mzg3MDI=", "number": 441, "title": "FYI: Kinesis works (at least basic stuff)", "user": {"login": "butla", "id": 1710591, "node_id": "MDQ6VXNlcjE3MTA1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1710591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/butla", "html_url": "https://github.com/butla", "followers_url": "https://api.github.com/users/butla/followers", "following_url": "https://api.github.com/users/butla/following{/other_user}", "gists_url": "https://api.github.com/users/butla/gists{/gist_id}", "starred_url": "https://api.github.com/users/butla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/butla/subscriptions", "organizations_url": "https://api.github.com/users/butla/orgs", "repos_url": "https://api.github.com/users/butla/repos", "events_url": "https://api.github.com/users/butla/events{/privacy}", "received_events_url": "https://api.github.com/users/butla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-20T17:34:44Z", "updated_at": "2018-02-23T18:33:50Z", "closed_at": "2018-02-23T18:33:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yeah, I should make a PR saying that at probably prepare an example, but I don't have the time right now.\r\nBut that info will be useful for anyone looking at libraries to find something that can work with Kinesis from AsyncIO (like I was yearlier today).\r\n\r\nThe things that I've checked:\r\n- create_stream\r\n- add_tags_to_stream\r\n- put_record\r\n- get_shard_iterator\r\n- get_records\r\n\r\nI'll try to make a nice PR in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/440", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/440/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/440/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/440", "id": 275353931, "node_id": "MDU6SXNzdWUyNzUzNTM5MzE=", "number": 440, "title": "RuntimeError: Timeout context manager should be used inside a task", "user": {"login": "thebenwaters", "id": 696445, "node_id": "MDQ6VXNlcjY5NjQ0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/696445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebenwaters", "html_url": "https://github.com/thebenwaters", "followers_url": "https://api.github.com/users/thebenwaters/followers", "following_url": "https://api.github.com/users/thebenwaters/following{/other_user}", "gists_url": "https://api.github.com/users/thebenwaters/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebenwaters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebenwaters/subscriptions", "organizations_url": "https://api.github.com/users/thebenwaters/orgs", "repos_url": "https://api.github.com/users/thebenwaters/repos", "events_url": "https://api.github.com/users/thebenwaters/events{/privacy}", "received_events_url": "https://api.github.com/users/thebenwaters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-11-20T13:22:47Z", "updated_at": "2018-04-04T07:12:08Z", "closed_at": "2018-04-04T07:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just today I started having this issue when trying (so far just with SQS)\r\nContext i'm calling from inside an aiohttp server request\r\n\r\n```\r\nclass RequestView(web.View):\r\n    async def post(self):\r\n        body = await self.request.json()\r\n        await self.request.app['sqs'].async_send_message(body=body)\r\n        return web.json_response({\r\n            'message': 'SUCCESS'\r\n        })\r\n```\r\nin the async_send_message function\r\n\r\n```\r\n response = await client.send_message(QueueUrl=self.queue_url, MessageBody=body)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/web_protocol.py\", line 416, in start\r\n    resp = yield from self._request_handler(request)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/web.py\", line 323, in _handle\r\n    resp = yield from handler(request)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/web_urldispatcher.py\", line 748, in __iter__\r\n    resp = yield from method()\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/gozer-0.1-py3.6.egg/gozer/gatekeeper/decorators.py\", line 34, in wrapper\r\n    return await func(*args)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/gozer-0.1-py3.6.egg/gozer/gatekeeper/views.py\", line 48, in post\r\n    await self.request.app['sqs'].async_send_message(body=to_send)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/gozer-0.1-py3.6.egg/gozer/apis/sqs.py\", line 53, in async_send_message\r\n    QueueUrl=self.queue_url, MessageBody=body)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiobotocore/client.py\", line 80, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 265, in _send_request\r\n    exception)):\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 297, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/hooks.py\", line 227, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/hooks.py\", line 210, in _emit\r\n    response = handler(**kwargs)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 269, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"/gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 223, in __call__\r\n    attempt_number, caught_exception)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/botocore/retryhandler.py\", line 359, in _check_caught_exception\r\n    raise caught_exception\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 321, in _get_response\r\n    request.method, request.url, request.headers, request.body)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 254, in _request\r\n    timeout=None)\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/helpers.py\", line 99, in __iter__\r\n    ret = yield from self._coro\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/client.py\", line 266, in _request\r\n    with CeilTimeout(self._conn_timeout, loop=self._loop):\r\n  File \"gozer/venvs/dev/lib/python3.6/site-packages/aiohttp/helpers.py\", line 744, in __enter__\r\n    'Timeout context manager should be used inside a task')\r\nRuntimeError: Timeout context manager should be used inside a task\r\n```\r\n\r\n```\r\naiobotocore==0.5.1\r\naiohttp==2.3.3\r\nasn1crypto==0.23.0\r\nasync-timeout==2.0.0\r\nbotocore==1.7.40\r\ncffi==1.11.2\r\nchardet==3.0.4\r\ncryptography==2.1.3\r\ndocutils==0.14\r\ngunicorn==19.7.1\r\nidna==2.6\r\njmespath==0.9.3\r\nLogbook==1.1.0\r\nmarshmallow==2.14.0\r\nmultidict==3.3.2\r\npackaging==16.8\r\npycparser==2.18\r\npyparsing==2.2.0\r\npython-dateutil==2.6.1\r\nriprova==0.2.3\r\nsix==1.10.0\r\nuvloop==0.8.1\r\nwrapt==1.10.11\r\nyarl==0.14.2\r\n```\r\n\r\nI'm I doing something obviously wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/432", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/432/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/432/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/432", "id": 273941193, "node_id": "MDU6SXNzdWUyNzM5NDExOTM=", "number": 432, "title": "UnicodeDecodeError when deserializing DynamoDB response", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-14T21:01:08Z", "updated_at": "2017-11-14T23:21:30Z", "closed_at": "2017-11-14T23:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\r\n\r\nDynamoDB::Query operations fail due to a `UnicodeDecodeError` during response deserialization:\r\n```\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\r\n```\r\n\r\nAn identical query succeeds using regular botocore.\r\n\r\n## Discussion\r\n\r\n0x8b (139) is outside of the ASCII range and based on some cursory Googling, appears to indicate that the response is gzipped:\r\n\r\n* https://stackoverflow.com/questions/11072705/twitter-trends-api-unicodedecodeerror-utf8-codec-cant-decode-byte-0x8b-in-po\r\n* https://github.com/rg3/youtube-dl/issues/366\r\n* https://stackoverflow.com/questions/9445627/urllib2-opener-providing-wrong-charset\r\n\r\nRelated to #258?\r\n\r\n## Minimal reproducer\r\n\r\n```python\r\nimport asyncio\r\nfrom pprint import pprint\r\n\r\nimport aiobotocore\r\nimport botocore.session\r\n\r\n\r\nQUERY_KWARGS = {\r\n    'ExpressionAttributeNames': {\r\n        '#key': 'key',\r\n        '#seq': 'seq',\r\n        '#stream': 'stream',\r\n        '#timestamp': 'timestamp',\r\n        '#value': 'value',\r\n    },\r\n    'ExpressionAttributeValues': {\r\n        ':stream': {'S': 'channel/1139320d29cb42e9813be24d363bc464/content'},\r\n    },\r\n    'IndexName': 'seq',\r\n    'KeyConditionExpression': '#stream = :stream',\r\n    'ProjectionExpression': '#seq, #key, #value, #timestamp',\r\n    'ScanIndexForward': False,\r\n    'TableName': 'flow-orbit-stage-events',\r\n}\r\n\r\n\r\ndef query_botocore():\r\n    session = botocore.session.get_session()\r\n\r\n    ddb = session.create_client('dynamodb')\r\n    paginator = ddb.get_paginator('query')\r\n    page_iterator = paginator.paginate(**QUERY_KWARGS)\r\n\r\n    for page in page_iterator:\r\n        pprint(page)\r\n\r\n\r\nasync def query_aiobotocore():\r\n    session = aiobotocore.get_session()\r\n\r\n    async with session.create_client('dynamodb') as ddb:\r\n        paginator = ddb.get_paginator('query')\r\n        page_iterator = paginator.paginate(**QUERY_KWARGS)\r\n\r\n        async for page in page_iterator:\r\n            pprint(page)\r\n\r\n\r\nif __name__ == '__main__':\r\n    print('Running query with vanilla botocore')\r\n    query_botocore()\r\n\r\n    print()\r\n\r\n    print('Running query with aiobotocore')\r\n    asyncio.get_event_loop().run_until_complete(query_aiobotocore())\r\n```\r\n\r\n### Result\r\n\r\n```\r\n$ python3 repro.py\r\nRunning query with vanilla botocore\r\n{'Count': 6,\r\n 'Items': [{'key': {'S': 'message/2a43dd8b854742bab50699ac6b61a341/reaction/947c284d507443b99802407a56b8e88b'},\r\n            'seq': {'N': '7'},\r\n            'timestamp': {'N': '1505153725.325'},\r\n            'value': {'S': 'blah blah blah'}},\r\n\r\n           ... omitted for brevity ...\r\n\r\n ],\r\n 'ResponseMetadata': {'HTTPHeaders': {'connection': 'keep-alive',\r\n                                      'content-length': '4120',\r\n                                      'content-type': 'application/x-amz-json-1.0',\r\n                                      'date': 'Tue, 14 Nov 2017 20:43:06 GMT',\r\n                                      'server': 'Server',\r\n                                      'x-amz-crc32': '4255221333',\r\n                                      'x-amzn-requestid': 'FCHVU5PNEKM7KL8BO1P444F8R7VV4KQNSO5AEMVJF66Q9ASUAAJG'},\r\n                      'HTTPStatusCode': 200,\r\n                      'RequestId': 'FCHVU5PNEKM7KL8BO1P444F8R7VV4KQNSO5AEMVJF66Q9ASUAAJG',\r\n                      'RetryAttempts': 0},\r\n 'ScannedCount': 6}\r\n\r\nRunning query with aiobotocore\r\nTraceback (most recent call last):\r\n  File \"repro.py\", line 58, in <module>\r\n    loop.run_until_complete(demo_aiobotocore())\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"repro.py\", line 47, in demo_aiobotocore\r\n    async for page in page_iterator:\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 213, in coro\r\n    res = yield from res\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/paginate.py\", line 41, in next_page\r\n    response = yield from self._make_request(self._current_kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/client.py\", line 80, in _make_api_call\r\n    operation_model, request_dict)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 249, in _send_request\r\n    request, operation_model, attempts)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiobotocore/endpoint.py\", line 341, in _get_response\r\n    response_dict, operation_model.output_shape)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/parsers.py\", line 212, in parse\r\n    parsed = self._do_parse(response, shape)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/parsers.py\", line 597, in _do_parse\r\n    original_parsed = self._parse_body_as_json(response['body'])\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/parsers.py\", line 579, in _parse_body_as_json\r\n    body = body_contents.decode(self.DEFAULT_ENCODING)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\r\n```\r\n\r\n## Environment\r\n\r\n* Python 3.6\r\n* aiobotocore 0.5.0\r\n* aiohttp 2.3.2\r\n* botocore 1.7.40", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/429", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/429/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/429/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/429", "id": 272983157, "node_id": "MDU6SXNzdWUyNzI5ODMxNTc=", "number": 429, "title": "Signers are not async", "user": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-10T16:14:19Z", "updated_at": "2017-11-13T08:39:38Z", "closed_at": "2017-11-10T21:11:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "[botocore.signers](https://github.com/boto/botocore/blob/develop/botocore/signers.py) are not asynchronous. Not end of the world but we might as well make them async.\r\n\r\nIf you guys have any opinion on how you want to go about tackling this I'm more than up for giving it a go.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/419", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/419/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/419/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/419", "id": 270763587, "node_id": "MDU6SXNzdWUyNzA3NjM1ODc=", "number": 419, "title": "Support aiohttp 2.3.x+", "user": {"login": "hellysmile", "id": 1834317, "node_id": "MDQ6VXNlcjE4MzQzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1834317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellysmile", "html_url": "https://github.com/hellysmile", "followers_url": "https://api.github.com/users/hellysmile/followers", "following_url": "https://api.github.com/users/hellysmile/following{/other_user}", "gists_url": "https://api.github.com/users/hellysmile/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellysmile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellysmile/subscriptions", "organizations_url": "https://api.github.com/users/hellysmile/orgs", "repos_url": "https://api.github.com/users/hellysmile/repos", "events_url": "https://api.github.com/users/hellysmile/events{/privacy}", "received_events_url": "https://api.github.com/users/hellysmile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-02T18:42:43Z", "updated_at": "2017-11-02T20:39:31Z", "closed_at": "2017-11-02T20:39:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/aio-libs/aiobotocore/pull/415\r\n\r\nfails on `test_patches `\r\n\r\nIs there any plans to support 2.3.x+?\r\n\r\nDo wee need to support 2.2 and 2.3? Myabe next aiobotocore can support only 2.3.x+?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/400", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/400/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/400/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/400", "id": 265588101, "node_id": "MDU6SXNzdWUyNjU1ODgxMDE=", "number": 400, "title": "New aiohttp release will happened in next few days", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-15T17:20:49Z", "updated_at": "2017-11-09T21:54:23Z", "closed_at": "2017-11-09T21:54:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@thehesiod new version of aiohttp will be release soon, I am trying to enumerate thing we need to do:\r\n1) compression issue: https://github.com/aio-libs/aiobotocore/pull/298\r\n2) redirect issue: https://github.com/aio-libs/aiobotocore/blob/097e2a7e57e5eaeda01a6c8cc3ae24ccd08dc90b/aiobotocore/endpoint.py#L292-L301\r\n\r\nam I missing something? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/366", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/366/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/366/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/366", "id": 258897740, "node_id": "MDU6SXNzdWUyNTg4OTc3NDA=", "number": 366, "title": "boto Resources", "user": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-09-19T17:14:27Z", "updated_at": "2017-10-11T22:06:54Z", "closed_at": "2017-10-11T22:06:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "How would we go about patching the boto resources like Table for dynamo? Or am I thinking too much and it already works", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/349", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/349/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/349/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/349", "id": 256713817, "node_id": "MDU6SXNzdWUyNTY3MTM4MTc=", "number": 349, "title": "Not possible to determine profile of boto3 session", "user": {"login": "tomers", "id": 83443, "node_id": "MDQ6VXNlcjgzNDQz", "avatar_url": "https://avatars0.githubusercontent.com/u/83443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomers", "html_url": "https://github.com/tomers", "followers_url": "https://api.github.com/users/tomers/followers", "following_url": "https://api.github.com/users/tomers/following{/other_user}", "gists_url": "https://api.github.com/users/tomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomers/subscriptions", "organizations_url": "https://api.github.com/users/tomers/orgs", "repos_url": "https://api.github.com/users/tomers/repos", "events_url": "https://api.github.com/users/tomers/events{/privacy}", "received_events_url": "https://api.github.com/users/tomers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-11T14:02:28Z", "updated_at": "2017-09-12T19:08:29Z", "closed_at": "2017-09-12T19:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `session.py`'s `get_session` it is not possible to pass arguments such as `profile` to constructor of `AioSession`.\r\n\r\nI would like to get a session of a specific profile, but it is not possible.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/337", "repository_url": "https://api.github.com/repos/aio-libs/aiobotocore", "labels_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/337/comments", "events_url": "https://api.github.com/repos/aio-libs/aiobotocore/issues/337/events", "html_url": "https://github.com/aio-libs/aiobotocore/issues/337", "id": 254998040, "node_id": "MDU6SXNzdWUyNTQ5OTgwNDA=", "number": 337, "title": "Aiobotocore support for botocore blocks custom EMR AMIs", "user": {"login": "georgebihtas", "id": 22296510, "node_id": "MDQ6VXNlcjIyMjk2NTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/22296510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgebihtas", "html_url": "https://github.com/georgebihtas", "followers_url": "https://api.github.com/users/georgebihtas/followers", "following_url": "https://api.github.com/users/georgebihtas/following{/other_user}", "gists_url": "https://api.github.com/users/georgebihtas/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgebihtas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgebihtas/subscriptions", "organizations_url": "https://api.github.com/users/georgebihtas/orgs", "repos_url": "https://api.github.com/users/georgebihtas/repos", "events_url": "https://api.github.com/users/georgebihtas/events{/privacy}", "received_events_url": "https://api.github.com/users/georgebihtas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-09-04T10:19:16Z", "updated_at": "2017-09-13T18:37:13Z", "closed_at": "2017-09-13T18:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "AWS now supports custom EMR AMIs (Amazon EMR version 5.7.0 or later). This functionality is supported by botocore >= 1.6.1\r\n\r\nCurrent version of aiobotocore supports 'botocore>=1.5.71, <=1.5.78'\r\n\r\nCould we please get the aiobotocore updated in order to support botocore >= 1.6.1? It's a very crucial feature and it blocks a number of projects.", "performed_via_github_app": null, "score": 1.0}]}