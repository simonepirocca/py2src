{"total_count": 96, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/290", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/290/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/290/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/290", "id": 676561782, "node_id": "MDU6SXNzdWU2NzY1NjE3ODI=", "number": 290, "title": "Missing `psutil` dependency", "user": {"login": "murdock-grewar", "id": 45347321, "node_id": "MDQ6VXNlcjQ1MzQ3MzIx", "avatar_url": "https://avatars1.githubusercontent.com/u/45347321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murdock-grewar", "html_url": "https://github.com/murdock-grewar", "followers_url": "https://api.github.com/users/murdock-grewar/followers", "following_url": "https://api.github.com/users/murdock-grewar/following{/other_user}", "gists_url": "https://api.github.com/users/murdock-grewar/gists{/gist_id}", "starred_url": "https://api.github.com/users/murdock-grewar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murdock-grewar/subscriptions", "organizations_url": "https://api.github.com/users/murdock-grewar/orgs", "repos_url": "https://api.github.com/users/murdock-grewar/repos", "events_url": "https://api.github.com/users/murdock-grewar/events{/privacy}", "received_events_url": "https://api.github.com/users/murdock-grewar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T04:02:12Z", "updated_at": "2020-08-17T14:41:24Z", "closed_at": "2020-08-17T14:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed this package and the dependency `psutil` was not installed automatically.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/279", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/279/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/279/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/279", "id": 614034537, "node_id": "MDU6SXNzdWU2MTQwMzQ1Mzc=", "number": 279, "title": "memory_usage reruns the function if the function runs faster than time interval", "user": {"login": "akirakotsugai", "id": 24578356, "node_id": "MDQ6VXNlcjI0NTc4MzU2", "avatar_url": "https://avatars3.githubusercontent.com/u/24578356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akirakotsugai", "html_url": "https://github.com/akirakotsugai", "followers_url": "https://api.github.com/users/akirakotsugai/followers", "following_url": "https://api.github.com/users/akirakotsugai/following{/other_user}", "gists_url": "https://api.github.com/users/akirakotsugai/gists{/gist_id}", "starred_url": "https://api.github.com/users/akirakotsugai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akirakotsugai/subscriptions", "organizations_url": "https://api.github.com/users/akirakotsugai/orgs", "repos_url": "https://api.github.com/users/akirakotsugai/repos", "events_url": "https://api.github.com/users/akirakotsugai/events{/privacy}", "received_events_url": "https://api.github.com/users/akirakotsugai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T12:53:38Z", "updated_at": "2020-06-16T13:40:20Z", "closed_at": "2020-06-16T13:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I use the memory_usage function, if the given time interval is smaller than the time the monitored function takes to run, it reruns the function as many time as necessary to meet the time interval. Has anybody had it before? my quick fix was make sure the monitored function is slower than the time interval by using time.sleep. Is there a better solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/275", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/275/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/275/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/275", "id": 597098851, "node_id": "MDU6SXNzdWU1OTcwOTg4NTE=", "number": 275, "title": "Memory_profiler return error \"object is not defined\" in Jupyter notebook", "user": {"login": "ThuyTien1", "id": 36955164, "node_id": "MDQ6VXNlcjM2OTU1MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/36955164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThuyTien1", "html_url": "https://github.com/ThuyTien1", "followers_url": "https://api.github.com/users/ThuyTien1/followers", "following_url": "https://api.github.com/users/ThuyTien1/following{/other_user}", "gists_url": "https://api.github.com/users/ThuyTien1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThuyTien1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThuyTien1/subscriptions", "organizations_url": "https://api.github.com/users/ThuyTien1/orgs", "repos_url": "https://api.github.com/users/ThuyTien1/repos", "events_url": "https://api.github.com/users/ThuyTien1/events{/privacy}", "received_events_url": "https://api.github.com/users/ThuyTien1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T08:03:50Z", "updated_at": "2020-04-09T22:25:54Z", "closed_at": "2020-04-09T22:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, I'm trying to use memory_profiler in Jupiter notebook as the following code:\r\n\r\n```\r\n%load_ext memory_profiler\r\n\r\ndef test1(n):\r\n    return n+1\r\ndef test2(n):\r\n    i = test1(n)\r\n    %memit i\r\n    %memit test1(n)\r\ntest2(10)\r\n```\r\nAnd it return error \"NameError: name 'i' is not defined\"\r\n\r\nBtw, I try again with %memit test1(10) inside function test2() and it works for %memit test1(10). \r\nCan you guys help me to find the right way to use memory_profiler in jupyter notebook.\r\n\r\nMany thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/266", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/266/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/266/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/266", "id": 548575930, "node_id": "MDU6SXNzdWU1NDg1NzU5MzA=", "number": 266, "title": "Missing git tag for 0.57 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-12T14:12:32Z", "updated_at": "2020-01-12T15:41:52Z", "closed_at": "2020-01-12T15:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/258", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/258/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/258/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/258", "id": 519271901, "node_id": "MDU6SXNzdWU1MTkyNzE5MDE=", "number": 258, "title": "Breaking change in `memory_usage` return value in 0.56.0", "user": {"login": "Flid", "id": 1367165, "node_id": "MDQ6VXNlcjEzNjcxNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1367165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flid", "html_url": "https://github.com/Flid", "followers_url": "https://api.github.com/users/Flid/followers", "following_url": "https://api.github.com/users/Flid/following{/other_user}", "gists_url": "https://api.github.com/users/Flid/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flid/subscriptions", "organizations_url": "https://api.github.com/users/Flid/orgs", "repos_url": "https://api.github.com/users/Flid/repos", "events_url": "https://api.github.com/users/Flid/events{/privacy}", "received_events_url": "https://api.github.com/users/Flid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-07T13:38:31Z", "updated_at": "2020-01-11T00:41:56Z", "closed_at": "2020-01-11T00:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some code has stopped working on our side a few days ago, and we tracked it down to:\r\n\r\n```python \r\nfrom memory_profiler import memory_usage\r\nprint(memory_usage(lambda: None, interval=0.1, timeout=1, max_usage=True, retval=1, include_children=True))\r\n```\r\nreturning `([17.82421875], None)` in 0.55.0, but `(18.6640625, None)` in 0.56.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/257", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/257/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/257/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/257", "id": 517589522, "node_id": "MDU6SXNzdWU1MTc1ODk1MjI=", "number": 257, "title": "how to use the flame option for mprof plot?", "user": {"login": "idevz", "id": 2113827, "node_id": "MDQ6VXNlcjIxMTM4Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2113827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idevz", "html_url": "https://github.com/idevz", "followers_url": "https://api.github.com/users/idevz/followers", "following_url": "https://api.github.com/users/idevz/following{/other_user}", "gists_url": "https://api.github.com/users/idevz/gists{/gist_id}", "starred_url": "https://api.github.com/users/idevz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idevz/subscriptions", "organizations_url": "https://api.github.com/users/idevz/orgs", "repos_url": "https://api.github.com/users/idevz/repos", "events_url": "https://api.github.com/users/idevz/events{/privacy}", "received_events_url": "https://api.github.com/users/idevz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-05T07:18:58Z", "updated_at": "2019-11-06T07:55:38Z", "closed_at": "2019-11-05T21:05:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I exec the `mprof plot --flame` command following README, I got this error:\r\n\r\n```bash\r\n(py36) > $ mprof plot --flame   \r\nusage: mprof plot [options] [file.dat]\r\nmprof: error: unrecognized arguments: --flame\r\n```\r\n\r\nthe information about this tool:\r\n```bash\r\n(py36) > $ pip show memory_profiler            \r\nName: memory-profiler\r\nVersion: 0.55.0\r\nSummary: A module for monitoring memory usage of a python program\r\nHome-page: http://pypi.python.org/pypi/memory_profiler\r\nAuthor: Fabian Pedregosa\r\nAuthor-email: f@bianp.net\r\nLicense: BSD\r\nLocation: /.../py36/lib/python3.6/site-packages\r\nRequires: psutil\r\nRequired-by:\r\n```\r\n\r\ndoes the `--flame` option is still alive?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/249", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/249/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/249/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/249", "id": 495573238, "node_id": "MDU6SXNzdWU0OTU1NzMyMzg=", "number": 249, "title": "The first example in readme not working correctly", "user": {"login": "axil", "id": 170910, "node_id": "MDQ6VXNlcjE3MDkxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/170910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axil", "html_url": "https://github.com/axil", "followers_url": "https://api.github.com/users/axil/followers", "following_url": "https://api.github.com/users/axil/following{/other_user}", "gists_url": "https://api.github.com/users/axil/gists{/gist_id}", "starred_url": "https://api.github.com/users/axil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axil/subscriptions", "organizations_url": "https://api.github.com/users/axil/orgs", "repos_url": "https://api.github.com/users/axil/repos", "events_url": "https://api.github.com/users/axil/events{/privacy}", "received_events_url": "https://api.github.com/users/axil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-19T04:57:17Z", "updated_at": "2020-05-14T21:23:39Z", "closed_at": "2020-05-14T21:23:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's what I get on both windows and linux. \r\n```\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n     1   37.754 MiB   37.754 MiB   @profile\r\n     2                             def my_func():\r\n     3   45.195 MiB    7.441 MiB       a = [1] * (10 ** 6)\r\n     4  197.820 MiB  152.625 MiB       b = [2] * (2 * 10 ** 7)\r\n     5   45.449 MiB    0.000 MiB       del b\r\n     6   45.449 MiB    0.000 MiB       return a\r\n```\r\nI would expect it to show released memory after `del b` as it is described in the readme file.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/242", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/242/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/242/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/242", "id": 480499690, "node_id": "MDU6SXNzdWU0ODA0OTk2OTA=", "number": 242, "title": "questions about memory_profiler", "user": {"login": "Niccolum", "id": 32839735, "node_id": "MDQ6VXNlcjMyODM5NzM1", "avatar_url": "https://avatars3.githubusercontent.com/u/32839735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niccolum", "html_url": "https://github.com/Niccolum", "followers_url": "https://api.github.com/users/Niccolum/followers", "following_url": "https://api.github.com/users/Niccolum/following{/other_user}", "gists_url": "https://api.github.com/users/Niccolum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niccolum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niccolum/subscriptions", "organizations_url": "https://api.github.com/users/Niccolum/orgs", "repos_url": "https://api.github.com/users/Niccolum/repos", "events_url": "https://api.github.com/users/Niccolum/events{/privacy}", "received_events_url": "https://api.github.com/users/Niccolum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T06:15:41Z", "updated_at": "2019-08-14T10:59:34Z", "closed_at": "2019-08-14T10:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "according #241 please explain, why in functions definitions, if they used below, memory not changed.\r\nHow calculate in function how each line of code changes memory?\r\naccording to your explaining, if i'm right - it's impossible. But it's weird", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/241", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/241/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/241/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/241", "id": 480044654, "node_id": "MDU6SXNzdWU0ODAwNDQ2NTQ=", "number": 241, "title": "Not see change size", "user": {"login": "Niccolum", "id": 32839735, "node_id": "MDQ6VXNlcjMyODM5NzM1", "avatar_url": "https://avatars3.githubusercontent.com/u/32839735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niccolum", "html_url": "https://github.com/Niccolum", "followers_url": "https://api.github.com/users/Niccolum/followers", "following_url": "https://api.github.com/users/Niccolum/following{/other_user}", "gists_url": "https://api.github.com/users/Niccolum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niccolum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niccolum/subscriptions", "organizations_url": "https://api.github.com/users/Niccolum/orgs", "repos_url": "https://api.github.com/users/Niccolum/repos", "events_url": "https://api.github.com/users/Niccolum/events{/privacy}", "received_events_url": "https://api.github.com/users/Niccolum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-13T09:10:00Z", "updated_at": "2019-08-13T17:30:13Z", "closed_at": "2019-08-13T11:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Niccolum/intrst_algrms/blob/master/unpacking_flatten_lists/funcs.py\r\n```\r\n$ python -m memory_profiler funcs.py\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n     7   39.324 MiB   39.324 MiB   @profile\r\n     8                             def outer_flatten_1(array: Iterable) -> List:\r\n     9   39.324 MiB    0.000 MiB       return list(deepflatten(array))\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    12   39.324 MiB   39.324 MiB   @profile\r\n    13                             def outer_flatten_2(array: Iterable) -> List:\r\n    14   39.324 MiB    0.000 MiB       return list(collapse(array))\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    17   39.324 MiB   39.324 MiB   @profile\r\n    18                             def niccolum_flatten(array: Iterable) -> List:\r\n    19                                 \"\"\"\r\n    20                                 Non recursive algorithm\r\n    21                                 Based on pop/insert elements in current list\r\n    22                                 \"\"\"\r\n    23                             \r\n    24   39.324 MiB    0.000 MiB       new_array = array[:]\r\n    25   39.324 MiB    0.000 MiB       ind = 0\r\n    26   39.324 MiB    0.000 MiB       while True:\r\n    27   39.324 MiB    0.000 MiB           try:\r\n    28   39.324 MiB    0.000 MiB               while isinstance(new_array[ind], list):\r\n    29   39.324 MiB    0.000 MiB                   item = new_array.pop(ind)\r\n    30   39.324 MiB    0.000 MiB                   for inner_item in reversed(item):\r\n    31   39.324 MiB    0.000 MiB                       new_array.insert(ind, inner_item)\r\n    32   39.324 MiB    0.000 MiB               ind += 1\r\n    33   39.324 MiB    0.000 MiB           except IndexError:\r\n    34   39.324 MiB    0.000 MiB               break\r\n    35   39.324 MiB    0.000 MiB       return new_array\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    38   39.324 MiB   39.324 MiB   @profile\r\n    39                             def tishka_flatten(data: Iterable) -> List:\r\n    40                                 \"\"\"\r\n    41                                 Non recursive algorithm\r\n    42                                 Based on append/extend elements to new list\r\n    43                             \r\n    44                                 \"\"\"\r\n    45   39.324 MiB    0.000 MiB       nested = True\r\n    46   39.324 MiB    0.000 MiB       while nested:\r\n    47   39.324 MiB    0.000 MiB           new = []\r\n    48   39.324 MiB    0.000 MiB           nested = False\r\n    49   39.324 MiB    0.000 MiB           for i in data:\r\n    50   39.324 MiB    0.000 MiB               if isinstance(i, list):\r\n    51   39.324 MiB    0.000 MiB                   new.extend(i)\r\n    52   39.324 MiB    0.000 MiB                   nested = True\r\n    53                                         else:\r\n    54   39.324 MiB    0.160 MiB                   new.append(i)\r\n    55   39.324 MiB    0.000 MiB           data = new\r\n    56   39.324 MiB    0.000 MiB       return data\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    59   39.324 MiB   39.324 MiB   @profile\r\n    60                             def zart_flatten(a: Iterable) -> List:\r\n    61                                 \"\"\"\r\n    62                                 Non recursive algorithm\r\n    63                                 Based on pop from old and append elements to new list\r\n    64                                 \"\"\"\r\n    65   39.324 MiB    0.000 MiB       queue, out = [a], []\r\n    66   39.324 MiB    0.000 MiB       while queue:\r\n    67   39.324 MiB    0.000 MiB           elem = queue.pop(-1)\r\n    68   39.324 MiB    0.000 MiB           if isinstance(elem, list):\r\n    69   39.324 MiB    0.000 MiB               queue.extend(elem)\r\n    70                                     else:\r\n    71   39.324 MiB    0.000 MiB               out.append(elem)\r\n    72   39.324 MiB    0.000 MiB       return out[::-1]\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    75   39.582 MiB   39.582 MiB   @profile\r\n    76                             def recursive_flatten_like_tishka(array: Iterable) -> List:\r\n    77                                 \"\"\"\r\n    78                                 Recursive algorithm\r\n    79                                 Based on tishka_flatten algorithm\r\n    80                             \r\n    81                                 \"\"\"\r\n    82   39.582 MiB    0.000 MiB       lst = []\r\n    83   39.582 MiB    0.000 MiB       for i in array:\r\n    84   39.582 MiB    0.000 MiB           if isinstance(i, list):\r\n    85   39.582 MiB    0.000 MiB               lst.extend(recursive_flatten_like_tishka(i))\r\n    86                                     else:\r\n    87   39.582 MiB    0.000 MiB               lst.append(i)\r\n    88   39.582 MiB    0.000 MiB       return lst\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    91   39.582 MiB   39.582 MiB   @profile\r\n    92                             def recursion_flatten(arr: Iterable) -> Iterator:\r\n    93                                 \"\"\"\r\n    94                                 Recursive algorithm based on iterator\r\n    95                                 Usual solution to this problem\r\n    96                             \r\n    97                                 \"\"\"\r\n    98                             \r\n    99   39.582 MiB    0.000 MiB       for i in arr:\r\n   100   39.582 MiB    0.000 MiB           if isinstance(i, list):\r\n   101   39.582 MiB    0.000 MiB               yield from recursion_flatten(i)\r\n   102                                     else:\r\n   103   39.582 MiB    0.000 MiB               yield i\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n   106   39.582 MiB   39.582 MiB   @profile\r\n   107                             def tishka_flatten_with_stack(seq: Iterable) -> List:\r\n   108                                 \"\"\"\r\n   109                                 Non recursive algorithm\r\n   110                                 Based on zart_flatten, but build on try/except pattern\r\n   111                                 \"\"\"\r\n   112   39.582 MiB    0.000 MiB       stack = [iter(seq)]\r\n   113   39.582 MiB    0.000 MiB       new = []\r\n   114   39.582 MiB    0.000 MiB       while stack:\r\n   115   39.582 MiB    0.000 MiB           i = stack.pop()\r\n   116   39.582 MiB    0.000 MiB           try:\r\n   117   39.582 MiB    0.000 MiB               while True:\r\n   118   39.582 MiB    0.000 MiB                   data = next(i)\r\n   119   39.582 MiB    0.000 MiB                   if isinstance(data, list):\r\n   120   39.582 MiB    0.000 MiB                       stack.append(i)\r\n   121   39.582 MiB    0.000 MiB                       i = iter(data)\r\n   122                                             else:\r\n   123   39.582 MiB    0.000 MiB                       new.append(data)\r\n   124   39.582 MiB    0.000 MiB           except StopIteration:\r\n   125   39.582 MiB    0.000 MiB               pass\r\n   126   39.582 MiB    0.000 MiB       return new\r\n\r\n\r\nFilename: funcs.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n   133   39.164 MiB   39.164 MiB       @profile\r\n   134                                 def profile():\r\n   135   39.164 MiB    0.000 MiB           data = generate_data()[14][1]\r\n   136                             \r\n   137   39.164 MiB    0.000 MiB           inc_data = create_data_increasing_depth(**data)\r\n   138                             \r\n   139   39.164 MiB   39.164 MiB           r1 = list(outer_flatten_1(inc_data))\r\n   140   39.164 MiB   39.164 MiB           r2 = list(outer_flatten_2(inc_data))\r\n   141   39.164 MiB   39.164 MiB           r3 = list(niccolum_flatten(inc_data))\r\n   142   39.324 MiB   39.324 MiB           r4 = list(tishka_flatten(inc_data))\r\n   143   39.324 MiB   39.324 MiB           r5 = list(zart_flatten(inc_data))\r\n   144   39.324 MiB   39.324 MiB           r6 = list(recursive_flatten_like_tishka(inc_data))\r\n   145   39.324 MiB   39.324 MiB           r7 = list(recursion_flatten(inc_data))\r\n   146   39.324 MiB   39.324 MiB           r8 = list(tishka_flatten_with_stack(inc_data))\r\n   147                             \r\n   148   39.324 MiB    0.000 MiB           dec_data = create_data_decreasing_depth(**data)\r\n   149                             \r\n   150   39.324 MiB   39.324 MiB           r9 = list(outer_flatten_1(dec_data))\r\n   151   39.324 MiB   39.324 MiB           r10 = list(outer_flatten_2(dec_data))\r\n   152   39.324 MiB   39.324 MiB           r11 = list(niccolum_flatten(dec_data))\r\n   153   39.324 MiB   39.324 MiB           r12 = list(tishka_flatten(dec_data))\r\n   154   39.582 MiB   39.582 MiB           r13 = list(zart_flatten(dec_data))\r\n   155   39.582 MiB   39.582 MiB           r14 = list(recursive_flatten_like_tishka(dec_data))\r\n   156   39.582 MiB   39.582 MiB           r15 = list(recursion_flatten(dec_data))\r\n   157   39.582 MiB   39.582 MiB           r16 = list(tishka_flatten_with_stack(dec_data))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/239", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/239/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/239/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/239", "id": 469430009, "node_id": "MDU6SXNzdWU0Njk0MzAwMDk=", "number": 239, "title": "ERROR: Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-18sj9m6o/psutil/", "user": {"login": "geofflangenderfer", "id": 7274321, "node_id": "MDQ6VXNlcjcyNzQzMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7274321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofflangenderfer", "html_url": "https://github.com/geofflangenderfer", "followers_url": "https://api.github.com/users/geofflangenderfer/followers", "following_url": "https://api.github.com/users/geofflangenderfer/following{/other_user}", "gists_url": "https://api.github.com/users/geofflangenderfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofflangenderfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofflangenderfer/subscriptions", "organizations_url": "https://api.github.com/users/geofflangenderfer/orgs", "repos_url": "https://api.github.com/users/geofflangenderfer/repos", "events_url": "https://api.github.com/users/geofflangenderfer/events{/privacy}", "received_events_url": "https://api.github.com/users/geofflangenderfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T20:31:38Z", "updated_at": "2019-07-17T21:38:57Z", "closed_at": "2019-07-17T21:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unable to install with pip. Here're the results of that command:\r\n\r\n```\r\n                                                                                                                                          \r\ngeoff@ubuntu:~/heapy_tutorial$ pip3 install memory_profiler                                                                                                             \r\nCollecting memory_profiler\r\n  Using cached https://files.pythonhosted.org/packages/9f/fe/1fca7273dd111108f204a686b12a12b6422d405fe4614087aa7d5a66ea87/memory_profiler-0.55.0.tar.gz\r\nCollecting psutil (from memory_profiler)\r\n  Using cached https://files.pythonhosted.org/packages/1c/ca/5b8c1fe032a458c2c4bcbe509d1401dca9dda35c7fc46b36bb81c2834740/psutil-5.6.3.tar.gz\r\n    ERROR: Complete output from command python setup.py egg_info:\r\n    ERROR: Traceback (most recent call last):\r\n      File \"/home/geoff/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2237, in resolve\r\n        return functools.reduce(getattr, self.attrs, module)\r\n    AttributeError: module 'setuptools.dist' has no attribute 'check_specifier'\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module> \r\n      File \"/tmp/pip-install-18sj9m6o/psutil/setup.py\", line 350, in <module>\r\n        main()\r\n      File \"/tmp/pip-install-18sj9m6o/psutil/setup.py\", line 346, in main\r\n        setup(**kwargs)\r\n      File \"/usr/lib/python3.6/distutils/core.py\", line 108, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/home/geoff/.local/lib/python3.6/site-packages/setuptools/dist.py\", line 272, in __init__\r\n        _Distribution.__init__(self,attrs) \r\n      File \"/usr/lib/python3.6/distutils/dist.py\", line 281, in __init__\r\n        self.finalize_options()\r\n      File \"/home/geoff/.local/lib/python3.6/site-packages/setuptools/dist.py\", line 327, in finalize_options\r\n        ep.load()(self, ep.name, value)\r\n      File \"/home/geoff/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2229, in load\r\n        return self.resolve()\r\n      File \"/home/geoff/.local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2239, in resolve\r\n        raise ImportError(str(exc))\r\n    ImportError: module 'setuptools.dist' has no attribute 'check_specifier'\r\n    ----------------------------------------\r\nERROR: Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-18sj9m6o/psutil/\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/227", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/227/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/227/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/227", "id": 411735242, "node_id": "MDU6SXNzdWU0MTE3MzUyNDI=", "number": 227, "title": "profile memory usage based on different funs in different py files", "user": {"login": "jackytu256", "id": 8509844, "node_id": "MDQ6VXNlcjg1MDk4NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8509844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackytu256", "html_url": "https://github.com/jackytu256", "followers_url": "https://api.github.com/users/jackytu256/followers", "following_url": "https://api.github.com/users/jackytu256/following{/other_user}", "gists_url": "https://api.github.com/users/jackytu256/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackytu256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackytu256/subscriptions", "organizations_url": "https://api.github.com/users/jackytu256/orgs", "repos_url": "https://api.github.com/users/jackytu256/repos", "events_url": "https://api.github.com/users/jackytu256/events{/privacy}", "received_events_url": "https://api.github.com/users/jackytu256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-19T04:03:30Z", "updated_at": "2019-07-24T03:56:51Z", "closed_at": "2019-07-24T03:56:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n Is there anyway I can get the time-based memory usage from different funs in different files?\r\n\r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/213", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/213/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/213/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/213", "id": 369544282, "node_id": "MDU6SXNzdWUzNjk1NDQyODI=", "number": 213, "title": "No release or tag for 0.54.0", "user": {"login": "nijave", "id": 384474, "node_id": "MDQ6VXNlcjM4NDQ3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/384474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nijave", "html_url": "https://github.com/nijave", "followers_url": "https://api.github.com/users/nijave/followers", "following_url": "https://api.github.com/users/nijave/following{/other_user}", "gists_url": "https://api.github.com/users/nijave/gists{/gist_id}", "starred_url": "https://api.github.com/users/nijave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nijave/subscriptions", "organizations_url": "https://api.github.com/users/nijave/orgs", "repos_url": "https://api.github.com/users/nijave/repos", "events_url": "https://api.github.com/users/nijave/events{/privacy}", "received_events_url": "https://api.github.com/users/nijave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-12T13:09:07Z", "updated_at": "2018-10-12T16:02:42Z", "closed_at": "2018-10-12T16:02:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see 0.54.0 available on pypi and the version referenced on master branch but not release/tag for this version on the Github side. Is this intended?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/211", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/211/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/211/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/211", "id": 363457954, "node_id": "MDU6SXNzdWUzNjM0NTc5NTQ=", "number": 211, "title": "profile result with unexpected big negative number", "user": {"login": "bingoabs", "id": 15336985, "node_id": "MDQ6VXNlcjE1MzM2OTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/15336985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bingoabs", "html_url": "https://github.com/bingoabs", "followers_url": "https://api.github.com/users/bingoabs/followers", "following_url": "https://api.github.com/users/bingoabs/following{/other_user}", "gists_url": "https://api.github.com/users/bingoabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bingoabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bingoabs/subscriptions", "organizations_url": "https://api.github.com/users/bingoabs/orgs", "repos_url": "https://api.github.com/users/bingoabs/repos", "events_url": "https://api.github.com/users/bingoabs/events{/privacy}", "received_events_url": "https://api.github.com/users/bingoabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-25T08:09:05Z", "updated_at": "2019-01-04T08:28:05Z", "closed_at": "2018-12-26T02:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to profile the  memory usage of `objects` with the codes below:\r\n\r\n```\r\nfrom memory_profiler import profile\r\n\r\nNUM = 100000\r\n\r\nclass Person(object):\r\n  def __init__(self, name):\r\n    self.name = name\r\n\r\n@profile\r\ndef run1():\r\n  ps = []\r\n  for i in range(NUM):\r\n    ps.append(Person(str(i)))\r\n\r\n@profile\r\ndef run2():\r\n  r = []\r\n  for _ in range(NUM):\r\n    r.append({})\r\n\r\nif __name__ == \"__main__\":\r\n  run1()\r\n  run2()\r\n```\r\n\r\nAnd I get the result:\r\n\r\n```\r\n$ python -m memory_profiler demo.py\r\nFilename: demo.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    12     10.8 MiB     10.8 MiB   @profile\r\n    13                             def run1():\r\n    14     10.8 MiB      0.0 MiB       ps = []\r\n    15     53.1 MiB   -744.4 MiB       for i in range(NUM):\r\n    16     53.1 MiB   -711.9 MiB           ps.append(Person(str(i)))\r\n\r\n\r\nFilename: demo.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    18     14.8 MiB     14.8 MiB   @profile\r\n    19                             def run2():\r\n    20     14.8 MiB      0.0 MiB       r = []\r\n    21     42.4 MiB    -47.0 MiB       for _ in range(NUM):\r\n    22     42.4 MiB    -19.5 MiB           r.append({})\r\n```\r\n\r\nThe `run1 line:15 and line:16` have a big negative number.\r\n\r\nBut if I change the `global NUM` to 10000, the result is total different:\r\n\r\n```\r\n$ python -m memory_profiler demo.py\r\nFilename: demo.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    12     10.7 MiB     10.7 MiB   @profile\r\n    13                             def run1():\r\n    14     10.7 MiB      0.0 MiB       ps = []\r\n    15     15.1 MiB      0.3 MiB       for i in range(NUM):\r\n    16     15.1 MiB      4.0 MiB           ps.append(Person(str(i)))\r\n\r\n\r\nFilename: demo.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    18     11.6 MiB     11.6 MiB   @profile\r\n    19                             def run2():\r\n    20     11.6 MiB      0.0 MiB       r = []\r\n    21     14.2 MiB      0.0 MiB       for _ in range(NUM):\r\n    22     14.2 MiB      2.6 MiB           r.append({})\r\n```\r\nHow to explain the different between the two cases?\r\nShould I consider the loop or something else, thanks.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/210", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/210/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/210/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/210", "id": 356236908, "node_id": "MDU6SXNzdWUzNTYyMzY5MDg=", "number": 210, "title": "ValueError: not enough values to unpack (expected 2, got 1)", "user": {"login": "SamuelXJames", "id": 31450279, "node_id": "MDQ6VXNlcjMxNDUwMjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/31450279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamuelXJames", "html_url": "https://github.com/SamuelXJames", "followers_url": "https://api.github.com/users/SamuelXJames/followers", "following_url": "https://api.github.com/users/SamuelXJames/following{/other_user}", "gists_url": "https://api.github.com/users/SamuelXJames/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamuelXJames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamuelXJames/subscriptions", "organizations_url": "https://api.github.com/users/SamuelXJames/orgs", "repos_url": "https://api.github.com/users/SamuelXJames/repos", "events_url": "https://api.github.com/users/SamuelXJames/events{/privacy}", "received_events_url": "https://api.github.com/users/SamuelXJames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-01T22:24:31Z", "updated_at": "2018-09-05T18:13:33Z", "closed_at": "2018-09-05T17:31:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to run mprof plot. I get the above value error instead which is due to line 312 in mprof,py \r\nwhich is: field, value = l.split(' ', 1).\r\n\r\nI am currently running memory_profiler as: python -m memory_profiler mprof plot <filename> in command. Mprof run works as intended.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/206", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/206/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/206/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/206", "id": 341332578, "node_id": "MDU6SXNzdWUzNDEzMzI1Nzg=", "number": 206, "title": "Release 0.53", "user": {"login": "kabouzeid", "id": 7303830, "node_id": "MDQ6VXNlcjczMDM4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7303830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kabouzeid", "html_url": "https://github.com/kabouzeid", "followers_url": "https://api.github.com/users/kabouzeid/followers", "following_url": "https://api.github.com/users/kabouzeid/following{/other_user}", "gists_url": "https://api.github.com/users/kabouzeid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kabouzeid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kabouzeid/subscriptions", "organizations_url": "https://api.github.com/users/kabouzeid/orgs", "repos_url": "https://api.github.com/users/kabouzeid/repos", "events_url": "https://api.github.com/users/kabouzeid/events{/privacy}", "received_events_url": "https://api.github.com/users/kabouzeid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-15T16:12:02Z", "updated_at": "2018-08-16T03:18:21Z", "closed_at": "2018-08-16T03:18:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using pip it still installs 0.52", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/204", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/204/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/204/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/204", "id": 339858927, "node_id": "MDU6SXNzdWUzMzk4NTg5Mjc=", "number": 204, "title": "Windows support", "user": {"login": "majthehero", "id": 7232588, "node_id": "MDQ6VXNlcjcyMzI1ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7232588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majthehero", "html_url": "https://github.com/majthehero", "followers_url": "https://api.github.com/users/majthehero/followers", "following_url": "https://api.github.com/users/majthehero/following{/other_user}", "gists_url": "https://api.github.com/users/majthehero/gists{/gist_id}", "starred_url": "https://api.github.com/users/majthehero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majthehero/subscriptions", "organizations_url": "https://api.github.com/users/majthehero/orgs", "repos_url": "https://api.github.com/users/majthehero/repos", "events_url": "https://api.github.com/users/majthehero/events{/privacy}", "received_events_url": "https://api.github.com/users/majthehero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-10T14:07:17Z", "updated_at": "2018-07-11T06:34:26Z", "closed_at": "2018-07-11T06:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently I can't use the mprof script.\r\nIt fails because there is a space (' ') in the shebang (\"C:\\Program Files\\...\").\r\nI googled what to do in that case, but nothing worked - I tried putting the path in quotes, double quotes, removing it completely, etc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/200", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/200/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/200/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/200", "id": 333857438, "node_id": "MDU6SXNzdWUzMzM4NTc0Mzg=", "number": 200, "title": "Does it monitor memory usage on GPU from TensorFlow python script?", "user": {"login": "tonyreina", "id": 37851530, "node_id": "MDQ6VXNlcjM3ODUxNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/37851530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyreina", "html_url": "https://github.com/tonyreina", "followers_url": "https://api.github.com/users/tonyreina/followers", "following_url": "https://api.github.com/users/tonyreina/following{/other_user}", "gists_url": "https://api.github.com/users/tonyreina/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyreina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyreina/subscriptions", "organizations_url": "https://api.github.com/users/tonyreina/orgs", "repos_url": "https://api.github.com/users/tonyreina/repos", "events_url": "https://api.github.com/users/tonyreina/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyreina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T22:11:20Z", "updated_at": "2018-06-28T13:56:44Z", "closed_at": "2018-06-28T13:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I use mprof to monitor the amount of GPU RAM being used by my TensorFlow python script? Or will it only monitor the CPU RAM?\r\n\r\nThanks.\r\n-Tony\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/199", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/199/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/199/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/199", "id": 326884514, "node_id": "MDU6SXNzdWUzMjY4ODQ1MTQ=", "number": 199, "title": "Not getting function time stamps from profiled script.", "user": {"login": "ivirshup", "id": 8238804, "node_id": "MDQ6VXNlcjgyMzg4MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8238804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivirshup", "html_url": "https://github.com/ivirshup", "followers_url": "https://api.github.com/users/ivirshup/followers", "following_url": "https://api.github.com/users/ivirshup/following{/other_user}", "gists_url": "https://api.github.com/users/ivirshup/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivirshup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivirshup/subscriptions", "organizations_url": "https://api.github.com/users/ivirshup/orgs", "repos_url": "https://api.github.com/users/ivirshup/repos", "events_url": "https://api.github.com/users/ivirshup/events{/privacy}", "received_events_url": "https://api.github.com/users/ivirshup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-28T03:25:40Z", "updated_at": "2018-05-28T03:31:59Z", "closed_at": "2018-05-28T03:31:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #175, and #173.\r\n\r\nRunning the following script (pulled from [this link](http://fa.bianp.net/blog/2014/plot-memory-usage-as-a-function-of-time/) in the readme):\r\n\r\n```python\r\n#!/usr/bin/env python3\r\nimport time\r\nfrom memory_profiler import profile\r\n\r\n@profile\r\ndef test1():\r\n    n = 10000\r\n    a = [1] * n\r\n    time.sleep(1)\r\n    return a\r\n\r\n\r\n@profile\r\ndef test2():\r\n    n = 100000\r\n    b = [1] * n\r\n    time.sleep(1)\r\n    return b\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    test1()\r\n    test2()\r\n```\r\n\r\nwith:\r\n\r\n```bash\r\n$ mprof run --python ./test_profile.py\r\nmprof: Sampling memory every 0.1s\r\nrunning as a Python program...\r\nFilename: ./test_profile.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n     5     30.4 MiB     30.4 MiB   @profile\r\n     6                             def test1():\r\n     7     30.4 MiB      0.0 MiB       n = 10000\r\n     8     30.4 MiB      0.0 MiB       a = [1] * n\r\n     9     30.4 MiB      0.0 MiB       time.sleep(1)\r\n    10     30.4 MiB      0.0 MiB       return a\r\n\r\n\r\nFilename: ./test_profile.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    13     30.4 MiB     30.4 MiB   @profile\r\n    14                             def test2():\r\n    15     30.4 MiB      0.0 MiB       n = 100000\r\n    16     31.2 MiB      0.8 MiB       b = [1] * n\r\n    17     31.2 MiB      0.0 MiB       time.sleep(1)\r\n    18     31.2 MiB      0.0 MiB       return b\r\n\r\n$ mprof plot -o test_profile.png\r\n```\r\n\r\nYield the image:\r\n![test_profile](https://user-images.githubusercontent.com/8238804/40595712-a20fed9a-6279-11e8-90d6-c4ca94826598.png)\r\n\r\nWhich does not have any function time stamps. I'm using `memory_profiler v0.52.0` and `Python v3.6.5`. Any idea what's up with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/196", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/196/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/196/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/196", "id": 322239600, "node_id": "MDU6SXNzdWUzMjIyMzk2MDA=", "number": 196, "title": "mprof disables usage of __file__", "user": {"login": "mgfinch", "id": 6044030, "node_id": "MDQ6VXNlcjYwNDQwMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6044030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgfinch", "html_url": "https://github.com/mgfinch", "followers_url": "https://api.github.com/users/mgfinch/followers", "following_url": "https://api.github.com/users/mgfinch/following{/other_user}", "gists_url": "https://api.github.com/users/mgfinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgfinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgfinch/subscriptions", "organizations_url": "https://api.github.com/users/mgfinch/orgs", "repos_url": "https://api.github.com/users/mgfinch/repos", "events_url": "https://api.github.com/users/mgfinch/events{/privacy}", "received_events_url": "https://api.github.com/users/mgfinch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 936020721, "node_id": "MDU6TGFiZWw5MzYwMjA3MjE=", "url": "https://api.github.com/repos/pythonprofilers/memory_profiler/labels/bug", "name": "bug", "color": "fc2511", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-11T10:00:26Z", "updated_at": "2019-04-16T14:31:52Z", "closed_at": "2019-04-16T14:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running any script with `mprof` the `__file__` in profiled program is always is path to `memory_profiler.py`.\r\n\r\n## Example\r\n\r\nLets say that you profile script that reads some data file from relative location specified using `__file__`\r\n\r\n```\r\n# script_to_profile.py\r\nimport os\r\ndata_path = os.path.join(os.path.dirname(__file__), data.csv)\r\nprint(data_path)\r\n```\r\n\r\nexecuting this as `python <path/to/script/>script_to_profile.py` \r\nprints `<path/to/script/>data.csv`\r\n\r\nhowever, running `mprof run <path/to/script/>script_to_profile.py`\r\nprints `<path/to/site-packages/>data.csv`\r\n\r\nthis makes it impossible to profile scripts that rely on specifying paths to static files using __file__\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/195", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/195/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/195/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/195", "id": 314687882, "node_id": "MDU6SXNzdWUzMTQ2ODc4ODI=", "number": 195, "title": "large negative increment values in line profiler", "user": {"login": "nathantsoi", "id": 399770, "node_id": "MDQ6VXNlcjM5OTc3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/399770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathantsoi", "html_url": "https://github.com/nathantsoi", "followers_url": "https://api.github.com/users/nathantsoi/followers", "following_url": "https://api.github.com/users/nathantsoi/following{/other_user}", "gists_url": "https://api.github.com/users/nathantsoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathantsoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathantsoi/subscriptions", "organizations_url": "https://api.github.com/users/nathantsoi/orgs", "repos_url": "https://api.github.com/users/nathantsoi/repos", "events_url": "https://api.github.com/users/nathantsoi/events{/privacy}", "received_events_url": "https://api.github.com/users/nathantsoi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-16T14:46:15Z", "updated_at": "2018-08-16T13:45:31Z", "closed_at": "2018-08-16T13:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am using memory profile as follows:\r\n```\r\nan_instance = AClass()\r\nprecision=1\r\nbackend='psutil'\r\nwith open(\"mem-profile.txt\", 'w') as stream:\r\n  prof = mp.LineProfiler(backend=backend)\r\n  res = prof(an_instance.window)(template)\r\n  mp.show_results(prof, stream=stream, precision=precision)\r\nreturn res\r\n```\r\n\r\nhowever the results seem strange, I see large negative increments, much larger than any calls with positive increments: \r\n\r\n```\r\nLine #    Mem usage    Increment\r\n================================\r\n    51    192.2 MiB    192.2 MiB\r\n    52                          \r\n    53                          \r\n    54                          \r\n    55                          \r\n    56                          \r\n    57                          \r\n    58    192.2 MiB      0.0 MiB\r\n    59    736.4 MiB     -8.1 MiB\r\n    60    736.4 MiB     -6.8 MiB\r\n    61    736.4 MiB     -7.4 MiB\r\n    62    736.4 MiB     -8.1 MiB\r\n    63                          \r\n    64    736.4 MiB     -7.7 MiB\r\n    65    736.4 MiB     -8.0 MiB\r\n    66    736.4 MiB     -7.9 MiB\r\n    67    736.4 MiB     -8.1 MiB\r\n    68                          \r\n    69    736.4 MiB     -7.9 MiB\r\n    70    736.4 MiB     -8.0 MiB\r\n    71    736.4 MiB     -8.1 MiB\r\n    72    736.4 MiB     -8.1 MiB\r\n    73                          \r\n    74    736.4 MiB     -8.1 MiB\r\n    75    736.4 MiB     -8.1 MiB\r\n    76    736.4 MiB     -8.1 MiB\r\n    77                          \r\n    78                          \r\n    79                          \r\n    80                          \r\n    81    736.4 MiB    -47.7 MiB\r\n    82    736.4 MiB  -1028.5 MiB\r\n    83    736.4 MiB  -5789.3 MiB\r\n    84    736.4 MiB  -4799.5 MiB\r\n    85                          \r\n    86    736.4 MiB  -4796.0 MiB\r\n    87                          \r\n    88                          \r\n    89    736.4 MiB  -4789.0 MiB\r\n    90                          \r\n    91                          \r\n    92                          \r\n    93                          \r\n    94    736.4 MiB  -4790.4 MiB\r\n    95    599.3 MiB      6.2 MiB\r\n    96    599.3 MiB     85.1 MiB\r\n    97    599.3 MiB     48.6 MiB\r\n    98                          \r\n    99    599.3 MiB      0.0 MiB\r\n   100    599.3 MiB     42.1 MiB\r\n   101    599.3 MiB      0.0 MiB\r\n   102    599.3 MiB      2.3 MiB\r\n   103                          \r\n   104    736.4 MiB  -4782.2 MiB\r\n   105    736.4 MiB  -4767.1 MiB\r\n   106    736.4 MiB  -4795.4 MiB\r\n   107    736.4 MiB  -4797.3 MiB\r\n   108                          \r\n   109    736.4 MiB  -4605.9 MiB\r\n   110                          \r\n   111                          \r\n   112                          \r\n   113    736.4 MiB      0.0 MiB\r\n   114    753.1 MiB   -807.8 MiB\r\n   115    753.1 MiB -22614.2 MiB\r\n   116    753.1 MiB -21805.3 MiB\r\n   117    753.1 MiB -21806.2 MiB\r\n   118    753.1 MiB -21806.2 MiB\r\n   119    753.1 MiB -12706.5 MiB\r\n   120                          \r\n   121    753.1 MiB -12691.2 MiB\r\n   122    753.1 MiB -12707.0 MiB\r\n   123                          \r\n   124    753.1 MiB  -9099.8 MiB\r\n   125    753.1 MiB   -807.8 MiB\r\n   126    753.1 MiB   -807.8 MiB\r\n   127                          \r\n   128    753.1 MiB   -807.8 MiB\r\n   129    753.1 MiB   -807.8 MiB\r\n   130    753.1 MiB   -807.8 MiB\r\n   131    753.1 MiB   -807.8 MiB\r\n   132                          \r\n   133    753.1 MiB   -807.8 MiB\r\n   134                          \r\n   135    753.1 MiB   -807.8 MiB\r\n   136    753.1 MiB   -807.8 MiB\r\n   137                          \r\n   138                          \r\n   139    753.1 MiB   -807.7 MiB\r\n   140    753.1 MiB   -807.7 MiB\r\n   141                          \r\n   142    753.1 MiB   -807.8 MiB\r\n   143                          \r\n   144    752.9 MiB     -0.2 MiB\r\n   145                          \r\n   146                          \r\n   147                          \r\n   148                          \r\n   149                          \r\n   150                          \r\n   151                          \r\n   152    752.9 MiB      0.0 MiB\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/193", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/193/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/193/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/193", "id": 306895528, "node_id": "MDU6SXNzdWUzMDY4OTU1Mjg=", "number": 193, "title": "Profiling third-party code (Non-decorator interface)", "user": {"login": "skatenerd", "id": 880217, "node_id": "MDQ6VXNlcjg4MDIxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/880217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skatenerd", "html_url": "https://github.com/skatenerd", "followers_url": "https://api.github.com/users/skatenerd/followers", "following_url": "https://api.github.com/users/skatenerd/following{/other_user}", "gists_url": "https://api.github.com/users/skatenerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/skatenerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skatenerd/subscriptions", "organizations_url": "https://api.github.com/users/skatenerd/orgs", "repos_url": "https://api.github.com/users/skatenerd/repos", "events_url": "https://api.github.com/users/skatenerd/events{/privacy}", "received_events_url": "https://api.github.com/users/skatenerd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-20T14:41:47Z", "updated_at": "2018-03-20T14:45:52Z", "closed_at": "2018-03-20T14:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to profile some third-party code (imported by my own code).\r\n\r\nI'm wondering if there's way to do something like the following, where I get line-by-line analysis of `bar`?\r\n\r\n```\r\nfrom foo import bar\r\nprofile(bar)\r\n\r\ndef my_code():\r\n  do_stuff()\r\n  bar()\r\n```\r\n\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/192", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/192/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/192/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/192", "id": 304003734, "node_id": "MDU6SXNzdWUzMDQwMDM3MzQ=", "number": 192, "title": "Please add license", "user": {"login": "sannykr", "id": 7585761, "node_id": "MDQ6VXNlcjc1ODU3NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7585761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sannykr", "html_url": "https://github.com/sannykr", "followers_url": "https://api.github.com/users/sannykr/followers", "following_url": "https://api.github.com/users/sannykr/following{/other_user}", "gists_url": "https://api.github.com/users/sannykr/gists{/gist_id}", "starred_url": "https://api.github.com/users/sannykr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sannykr/subscriptions", "organizations_url": "https://api.github.com/users/sannykr/orgs", "repos_url": "https://api.github.com/users/sannykr/repos", "events_url": "https://api.github.com/users/sannykr/events{/privacy}", "received_events_url": "https://api.github.com/users/sannykr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-09T22:41:52Z", "updated_at": "2018-03-09T22:42:25Z", "closed_at": "2018-03-09T22:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/186", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/186/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/186/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/186", "id": 287536677, "node_id": "MDU6SXNzdWUyODc1MzY2Nzc=", "number": 186, "title": "@profile decorator does not work on two or more flask routes", "user": {"login": "spacether", "id": 1912028, "node_id": "MDQ6VXNlcjE5MTIwMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1912028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacether", "html_url": "https://github.com/spacether", "followers_url": "https://api.github.com/users/spacether/followers", "following_url": "https://api.github.com/users/spacether/following{/other_user}", "gists_url": "https://api.github.com/users/spacether/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacether/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacether/subscriptions", "organizations_url": "https://api.github.com/users/spacether/orgs", "repos_url": "https://api.github.com/users/spacether/repos", "events_url": "https://api.github.com/users/spacether/events{/privacy}", "received_events_url": "https://api.github.com/users/spacether/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-10T18:41:26Z", "updated_at": "2018-05-22T14:02:47Z", "closed_at": "2018-05-21T19:58:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When one tries to use @profile on two or more flask routes/functions this error is thrown:\r\n\r\n`AssertionError: View function mapping is overwriting an existing endpoint function: wrapper\r\n`\r\nThe solution is to use @wraps in the decorator definition.\r\nCan we add @wraps in the profile decorator definition?\r\nI posted a stack-overflow question and solution here:\r\nhttps://stackoverflow.com/questions/48193461/use-memory-profiler-to-profile-lines-in-a-flask-app/48193527#48193527\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/182", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/182/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/182/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/182", "id": 286060032, "node_id": "MDU6SXNzdWUyODYwNjAwMzI=", "number": 182, "title": "mprof plot -o <image.out> on headless Alpine linux requires a display", "user": {"login": "cequencer", "id": 1093473, "node_id": "MDQ6VXNlcjEwOTM0NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1093473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cequencer", "html_url": "https://github.com/cequencer", "followers_url": "https://api.github.com/users/cequencer/followers", "following_url": "https://api.github.com/users/cequencer/following{/other_user}", "gists_url": "https://api.github.com/users/cequencer/gists{/gist_id}", "starred_url": "https://api.github.com/users/cequencer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cequencer/subscriptions", "organizations_url": "https://api.github.com/users/cequencer/orgs", "repos_url": "https://api.github.com/users/cequencer/repos", "events_url": "https://api.github.com/users/cequencer/events{/privacy}", "received_events_url": "https://api.github.com/users/cequencer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T17:36:19Z", "updated_at": "2018-01-04T18:59:28Z", "closed_at": "2018-01-04T18:58:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the `mprof plot --help`:\r\n\r\n>   --output OUTPUT, -o OUTPUT\r\n>                       Save plot to file instead of displaying it.`\r\n\r\nI want to use this option in a headless Alpine linux environment, as I do not have any X windows setup.  Is it correct to assume that using the `-o` option should bypass the need of X windows?\r\n\r\nIt seems to me that my assumption is incorrect:\r\n\r\n>bash-4.3# mprof plot -o image.out\r\n>Using last profile data.\r\n>Traceback (most recent call last):\r\n>  File \"/usr/local/bin/mprof\", line 551, in <module>\r\n>    actions\\[get_action()\\]()\r\n>  File \"/usr/local/bin/mprof\", line 507, in plot_action\r\n>    fig = pl.figure(figsize=(14, 6), dpi=90)\r\n>  File \"/usr/local/lib/python2.7/site-packages/matplotlib/pyplot.py\", line 539, in figure\r\n>    **kwargs)\r\n>  File \"/usr/local/lib/python2.7/site-packages/matplotlib/backend_bases.py\", line 171, in new_figure_manager\r\n>    return cls.new_figure_manager_given_figure(num, fig)\r\n>  File \"/usr/local/lib/python2.7/site-packages/matplotlib/backends/backend_tkagg.py\", line 1049, in new_figure_manager_given_figure\r\n>    window = Tk.Tk(className=\"matplotlib\")\r\n>  File \"/usr/local/lib/python2.7/lib-tk/Tkinter.py\", line 1819, in __init__\r\n>    self.tk = _tkinter.create(screenName, baseName, className, interactive, wantobjects, useTk, sync, use)\r\n>_tkinter.TclError: no display name and no $DISPLAY environment variable`\r\n\r\nIs it possible to avoid the display requirement so I can successfully output the image to a file?  \r\nI understand there is temporary workaround such as SSH forwarding within a Docker image to satisfy the DISPLAY forwarding.  I would like to address it at the program level so this DISPLAY requirement will not be necessary if possible.  \r\n\r\nIt seems this is a well know issue and there ample ways to resolve it.  Here are some references that are not in any particular order:\r\n\r\nPrimary sources:\r\n1. [matplotlib: backend](https://matplotlib.org/faq/usage_faq.html#what-is-a-backend)\r\n1. [Anti-Grain Geometry project](http://antigrain.com/)\r\n\r\nKnown issues:\r\n1. https://stackoverflow.com/questions/4931376/generating-matplotlib-graphs-without-a-running-x-server\r\n1. https://stackoverflow.com/questions/2801882/generating-a-png-with-matplotlib-when-display-is-undefined\r\n1. https://www.pyimagesearch.com/2015/08/24/resolved-matplotlib-figures-not-showing-up-or-displaying/\r\n\r\n\r\n\r\nFor reference, I am using Alpine linux from Dockerhub:\r\n\r\n>bash-4.3# uname -a\r\n>Linux 1bb6ad374b43 4.10.0-40-generic \\#44~16.04.1-Ubuntu SMP Thu Nov 9 15:37:44 UTC 2017 x86_64 Linux\r\n\r\nInstalling using `pip install memory_profiler`\r\n...\r\n>Collecting memory_profiler\r\n>  Downloading memory_profiler-0.50.0.tar.gz\r\n>Collecting matplotlib\r\n>  Downloading matplotlib-2.1.1.tar.gz (36.1MB)\r\n>Collecting psutil (from memory_profiler)\r\n>  Downloading psutil-5.4.3.tar.gz (412kB)`\r\n...\r\n\r\nThanks for looking into this.  \r\n\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/181", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/181/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/181/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/181", "id": 285426150, "node_id": "MDU6SXNzdWUyODU0MjYxNTA=", "number": 181, "title": "NameError: name 'profile' is not defined: when try to  \"Plot memory usage as a function of time\"", "user": {"login": "scotthuang1989", "id": 5325686, "node_id": "MDQ6VXNlcjUzMjU2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5325686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scotthuang1989", "html_url": "https://github.com/scotthuang1989", "followers_url": "https://api.github.com/users/scotthuang1989/followers", "following_url": "https://api.github.com/users/scotthuang1989/following{/other_user}", "gists_url": "https://api.github.com/users/scotthuang1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/scotthuang1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scotthuang1989/subscriptions", "organizations_url": "https://api.github.com/users/scotthuang1989/orgs", "repos_url": "https://api.github.com/users/scotthuang1989/repos", "events_url": "https://api.github.com/users/scotthuang1989/events{/privacy}", "received_events_url": "https://api.github.com/users/scotthuang1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-02T13:11:30Z", "updated_at": "2018-05-01T05:23:55Z", "closed_at": "2018-01-06T19:34:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "version: 0.50.0\r\nIn the official documentation. there is a link to this [blog](http://fa.bianp.net/blog/2014/plot-memory-usage-as-a-function-of-time/). but when I try to run the exactly code in this post. I get this error:\r\n\r\n> Traceback (most recent call last):\r\n> \r\n>   File \"test.py\", line 3, in <module>\r\n>     @profile\r\n> NameError: name 'profile' is not defined\r\n\r\nthis is very strange, because there is the quotes from official :\r\n\r\n> Warning\r\n> \r\n> If your Python file imports the memory profiler from memory_profiler import profile these timestamps will not be recorded. Comment out the import, leave your functions decorated, and re-run.\r\n\r\nSo if I want to have the per-function memory usage plot, I need comment out  `from memory_profiler import profile`, but when I comment out it, there is a error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/179", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/179/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/179/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/179", "id": 280334732, "node_id": "MDU6SXNzdWUyODAzMzQ3MzI=", "number": 179, "title": "Command line arguments meant for profiled script are being rejected by mprof", "user": {"login": "axlan", "id": 2177458, "node_id": "MDQ6VXNlcjIxNzc0NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2177458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axlan", "html_url": "https://github.com/axlan", "followers_url": "https://api.github.com/users/axlan/followers", "following_url": "https://api.github.com/users/axlan/following{/other_user}", "gists_url": "https://api.github.com/users/axlan/gists{/gist_id}", "starred_url": "https://api.github.com/users/axlan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axlan/subscriptions", "organizations_url": "https://api.github.com/users/axlan/orgs", "repos_url": "https://api.github.com/users/axlan/repos", "events_url": "https://api.github.com/users/axlan/events{/privacy}", "received_events_url": "https://api.github.com/users/axlan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-08T01:06:28Z", "updated_at": "2018-02-17T14:33:30Z", "closed_at": "2018-02-16T00:44:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This seems to be another case like https://github.com/pythonprofilers/memory_profiler/issues/176\r\n\r\nFor example:\r\n`prof run python gnss_analysis/tools/fetch_hitl_metrics.py --build_file tmp/build-list-latest.csv --n_days_master 10`\r\nGives the error:\r\n```\r\nusage: mprof run [options] program\r\nmprof: error: unrecognized arguments: --build_file tmp/build-list-latest.csv --n_days_master 10\r\n```\r\nI'm running memory-profiler==0.50.0 with Python 2.7.14", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/178", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/178/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/178/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/178", "id": 278689679, "node_id": "MDU6SXNzdWUyNzg2ODk2Nzk=", "number": 178, "title": "Unable to install with strange error: file 'C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-build-or8r1snd\\memory-profiler\\mprof.bat' does not exist", "user": {"login": "jcrmatos", "id": 1813375, "node_id": "MDQ6VXNlcjE4MTMzNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1813375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrmatos", "html_url": "https://github.com/jcrmatos", "followers_url": "https://api.github.com/users/jcrmatos/followers", "following_url": "https://api.github.com/users/jcrmatos/following{/other_user}", "gists_url": "https://api.github.com/users/jcrmatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrmatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrmatos/subscriptions", "organizations_url": "https://api.github.com/users/jcrmatos/orgs", "repos_url": "https://api.github.com/users/jcrmatos/repos", "events_url": "https://api.github.com/users/jcrmatos/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrmatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-02T14:53:41Z", "updated_at": "2017-12-02T17:53:06Z", "closed_at": "2017-12-02T17:53:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to install memory_profiler (using pip 9.0.1) under a Python 3.5.4 32b venv (psutil 5.4.1. is already installed) on a Windows 7 Pro SP1 x64, but it returns the following error:\r\n\r\n```\r\n(dexp) C:\\Users\\JMatos\\OneDrive\\Python\\dexp\\dexp>pip install memory_profiler\r\nCollecting memory_profiler\r\n  Using cached memory_profiler-0.48.0.tar.gz\r\nRequirement already satisfied: psutil in c:\\users\\jmatos\\envs\\dexp\\lib\\site-pack\r\nages (from memory_profiler)\r\nBuilding wheels for collected packages: memory-profiler\r\n  Running setup.py bdist_wheel for memory-profiler ... error\r\n  Complete output from command c:\\users\\jmatos\\envs\\dexp\\scripts\\python.exe -u -\r\nc \"import setuptools, tokenize;__file__='C:\\\\Users\\\\JMatos\\\\AppData\\\\Local\\\\Temp\r\n\\\\pip-build-or8r1snd\\\\memory-profiler\\\\setup.py';f=getattr(tokenize, 'open', ope\r\nn)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __\r\nfile__, 'exec'))\" bdist_wheel -d C:\\Users\\JMatos\\AppData\\Local\\Temp\\tmp7ho7msbap\r\nip-wheel- --python-tag cp35:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build\\lib\r\n  copying memory_profiler.py -> build\\lib\r\n  running build_scripts\r\n  creating build\\scripts-3.5\r\n  copying and adjusting mprof -> build\\scripts-3.5\r\n  error: file 'C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-build-or8r1snd\\memory-prof\r\niler\\mprof.bat' does not exist\r\n\r\n  ----------------------------------------\r\n  Failed building wheel for memory-profiler\r\n  Running setup.py clean for memory-profiler\r\nFailed to build memory-profiler\r\nInstalling collected packages: memory-profiler\r\n  Running setup.py install for memory-profiler ... error\r\n    Complete output from command c:\\users\\jmatos\\envs\\dexp\\scripts\\python.exe -u\r\n -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\JMatos\\\\AppData\\\\Local\\\\Te\r\nmp\\\\pip-build-or8r1snd\\\\memory-profiler\\\\setup.py';f=getattr(tokenize, 'open', o\r\npen)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code,\r\n__file__, 'exec'))\" install --record C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-n4n3\r\n4xfy-record\\install-record.txt --single-version-externally-managed --compile --i\r\nnstall-headers c:\\users\\jmatos\\envs\\dexp\\include\\site\\python3.5\\memory-profiler:\r\n\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib\r\n    copying memory_profiler.py -> build\\lib\r\n    running build_scripts\r\n    creating build\\scripts-3.5\r\n    copying and adjusting mprof -> build\\scripts-3.5\r\n    error: file 'C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-build-or8r1snd\\memory-pr\r\nofiler\\mprof.bat' does not exist\r\n\r\n    ----------------------------------------\r\nCommand \"c:\\users\\jmatos\\envs\\dexp\\scripts\\python.exe -u -c \"import setuptools,\r\ntokenize;__file__='C:\\\\Users\\\\JMatos\\\\AppData\\\\Local\\\\Temp\\\\pip-build-or8r1snd\\\\\r\nmemory-profiler\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.re\r\nad().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" inst\r\nall --record C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-n4n34xfy-record\\install-reco\r\nrd.txt --single-version-externally-managed --compile --install-headers c:\\users\\\r\njmatos\\envs\\dexp\\include\\site\\python3.5\\memory-profiler\" failed with error code\r\n1 in C:\\Users\\JMatos\\AppData\\Local\\Temp\\pip-build-or8r1snd\\memory-profiler\\\r\n\r\n(dexp) C:\\Users\\JMatos\\OneDrive\\Python\\dexp\\dexp>\r\n```\r\n\r\nThanks for the help in advance,\r\n\r\nJM\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/176", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/176/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/176/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/176", "id": 276735231, "node_id": "MDU6SXNzdWUyNzY3MzUyMzE=", "number": 176, "title": "mprof run script with command line arguments", "user": {"login": "aleksiy325", "id": 13542696, "node_id": "MDQ6VXNlcjEzNTQyNjk2", "avatar_url": "https://avatars1.githubusercontent.com/u/13542696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksiy325", "html_url": "https://github.com/aleksiy325", "followers_url": "https://api.github.com/users/aleksiy325/followers", "following_url": "https://api.github.com/users/aleksiy325/following{/other_user}", "gists_url": "https://api.github.com/users/aleksiy325/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksiy325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksiy325/subscriptions", "organizations_url": "https://api.github.com/users/aleksiy325/orgs", "repos_url": "https://api.github.com/users/aleksiy325/repos", "events_url": "https://api.github.com/users/aleksiy325/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksiy325/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-25T08:24:41Z", "updated_at": "2017-11-27T17:57:44Z", "closed_at": "2017-11-27T17:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the `mprof run <script>` syntax its not possible to use command line arguments for the process as mprof interprets them instead. My current workaround is to modify `p = subprocess.Popen(program)` to use ` shell=True` and pass the script arg as a string with additional arguments. Maybe adding an command line option for using `shell=True` would be useful? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/173", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/173/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/173/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/173", "id": 275763503, "node_id": "MDU6SXNzdWUyNzU3NjM1MDM=", "number": 173, "title": "recording timestamps in imported file with @profile", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-21T15:55:13Z", "updated_at": "2018-11-06T19:44:21Z", "closed_at": "2018-05-17T09:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It says in the documentation that 'If your Python file imports the memory profiler from memory_profiler import profile these timestamps will not be recorded. Comment out the import, leave your functions decorated, and re-run.' \r\n\r\nI'm profiling a script that imports another file that contains the function to profile and commenting out the `from memory_profiler import profile` line in that file just makes `mprof run` crash with an `ImportError`.\r\n\r\nIs this use case supported? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/171", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/171/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/171/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/171", "id": 273745244, "node_id": "MDU6SXNzdWUyNzM3NDUyNDQ=", "number": 171, "title": "Wrong error string for mprof plot run", "user": {"login": "ShahriyarR", "id": 3852029, "node_id": "MDQ6VXNlcjM4NTIwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3852029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShahriyarR", "html_url": "https://github.com/ShahriyarR", "followers_url": "https://api.github.com/users/ShahriyarR/followers", "following_url": "https://api.github.com/users/ShahriyarR/following{/other_user}", "gists_url": "https://api.github.com/users/ShahriyarR/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShahriyarR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShahriyarR/subscriptions", "organizations_url": "https://api.github.com/users/ShahriyarR/orgs", "repos_url": "https://api.github.com/users/ShahriyarR/repos", "events_url": "https://api.github.com/users/ShahriyarR/events{/privacy}", "received_events_url": "https://api.github.com/users/ShahriyarR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750341659, "node_id": "MDU6TGFiZWw3NTAzNDE2NTk=", "url": "https://api.github.com/repos/pythonprofilers/memory_profiler/labels/help%20wanted", "name": "help wanted", "color": "a0e85c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-14T10:44:36Z", "updated_at": "2018-05-17T12:55:19Z", "closed_at": "2018-05-17T12:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI got the following:\r\n\r\n```\r\n$ mprof plot mprofile_20171114100151.dat\r\nmatplotlib is needed for plotting.\r\n```\r\n\r\nBut in fact matplotlib is satisfied:\r\n\r\n```\r\n$ sudo pip3.5 install -U matplotlib\r\nRequirement already up-to-date: matplotlib in /usr/lib64/python3.5/site-packages\r\nRequirement already up-to-date: pytz in /usr/lib/python3.5/site-packages (from matplotlib)\r\nRequirement already up-to-date: cycler>=0.10 in /usr/lib/python3.5/site-packages (from matplotlib)\r\nRequirement already up-to-date: numpy>=1.7.1 in /usr/lib64/python3.5/site-packages (from matplotlib)\r\nRequirement already up-to-date: python-dateutil>=2.0 in /usr/lib/python3.5/site-packages (from matplotlib)\r\nRequirement already up-to-date: six>=1.10 in /usr/lib/python3.5/site-packages (from matplotlib)\r\nRequirement already up-to-date: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/lib/python3.5/site-packages (from matplotlib)\r\n```\r\n\r\n```\r\n>>> import matplotlib\r\n>>> \r\n```\r\n\r\nFrom https://github.com/pythonprofilers/memory_profiler/blob/master/mprof#L342\r\n\r\n```\r\ndef plot_file(filename, index=0, timestamps=True, children=True, options=None):\r\n    try:\r\n        import pylab as pl\r\n    except ImportError as e:\r\n        print(\"matplotlib is needed for plotting.\")\r\n        print(e)\r\nsys.exit(1)\r\n```\r\n\r\nSo it is printing the string but in fact the mprof failed due to:\r\n\r\n```\r\n>>> import pylab\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib64/python3.5/site-packages/pylab.py\", line 1, in <module>\r\n    from matplotlib.pylab import *\r\n  File \"/usr/lib64/python3.5/site-packages/matplotlib/pylab.py\", line 257, in <module>\r\n    from matplotlib import cbook, mlab, pyplot as plt\r\n  File \"/usr/lib64/python3.5/site-packages/matplotlib/pyplot.py\", line 113, in <module>\r\n    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()\r\n  File \"/usr/lib64/python3.5/site-packages/matplotlib/backends/__init__.py\", line 60, in pylab_setup\r\n    [backend_name], 0)\r\n  File \"/usr/lib64/python3.5/site-packages/matplotlib/backends/backend_tkagg.py\", line 6, in <module>\r\n    from six.moves import tkinter as Tk\r\n  File \"/usr/lib/python3.5/site-packages/six.py\", line 92, in __get__\r\n    result = self._resolve()\r\n  File \"/usr/lib/python3.5/site-packages/six.py\", line 115, in _resolve\r\n    return _import_module(self.mod)\r\n  File \"/usr/lib/python3.5/site-packages/six.py\", line 82, in _import_module\r\n    __import__(name)\r\nImportError: No module named 'tkinter'\r\n```\r\n\r\nBased on this, it will be great to give much more informative error message here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/159", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/159/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/159/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/159", "id": 256137962, "node_id": "MDU6SXNzdWUyNTYxMzc5NjI=", "number": 159, "title": "Segment fault in PyObject_Hash() when using memory_profiler", "user": {"login": "TaoLv", "id": 22437510, "node_id": "MDQ6VXNlcjIyNDM3NTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/22437510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaoLv", "html_url": "https://github.com/TaoLv", "followers_url": "https://api.github.com/users/TaoLv/followers", "following_url": "https://api.github.com/users/TaoLv/following{/other_user}", "gists_url": "https://api.github.com/users/TaoLv/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaoLv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaoLv/subscriptions", "organizations_url": "https://api.github.com/users/TaoLv/orgs", "repos_url": "https://api.github.com/users/TaoLv/repos", "events_url": "https://api.github.com/users/TaoLv/events{/privacy}", "received_events_url": "https://api.github.com/users/TaoLv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-08T04:29:13Z", "updated_at": "2017-09-19T08:49:36Z", "closed_at": "2017-09-12T07:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just write a python object type with those C/C++ extensions of CPython. It's something like a simplefied numpy. But when I try to profile the momery cost of this type and its APIs, there is a segment fault occured in PyObject_Hash(). The hash funtion has already been implemented for the type.\r\n\r\nLogs as below:\r\n```\r\nGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7\r\nCopyright (C) 2013 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>...\r\nReading symbols from /usr/bin/python2.7...Reading symbols from /usr/bin/python2.7...(no debugging symbols found)...done.\r\n(no debugging symbols found)...done.\r\n\r\nwarning: core file may not match specified executable file.\r\n[New LWP 833]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/usr/lib64/libthread_db.so.1\".\r\nCore was generated by `python -m memory_profiler test_mklndarray.py'.\r\nProgram terminated with signal 11, Segmentation fault.\r\n#0  0x00007f47a5cc70e9 in PyObject_Hash () from /usr/lib64/libpython2.7.so.1.0\r\nMissing separate debuginfos, use: debuginfo-install python-2.7.5-48.el7.x86_64\r\n```\r\n\r\nAny idea or suggestion is very appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/156", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/156/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/156/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/156", "id": 254239202, "node_id": "MDU6SXNzdWUyNTQyMzkyMDI=", "number": 156, "title": "unable to use mprof in windows 10, prompts 'How do you want to open this file?'", "user": {"login": "BurakaKrishna", "id": 9737588, "node_id": "MDQ6VXNlcjk3Mzc1ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9737588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurakaKrishna", "html_url": "https://github.com/BurakaKrishna", "followers_url": "https://api.github.com/users/BurakaKrishna/followers", "following_url": "https://api.github.com/users/BurakaKrishna/following{/other_user}", "gists_url": "https://api.github.com/users/BurakaKrishna/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurakaKrishna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurakaKrishna/subscriptions", "organizations_url": "https://api.github.com/users/BurakaKrishna/orgs", "repos_url": "https://api.github.com/users/BurakaKrishna/repos", "events_url": "https://api.github.com/users/BurakaKrishna/events{/privacy}", "received_events_url": "https://api.github.com/users/BurakaKrishna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 935980791, "node_id": "MDU6TGFiZWw5MzU5ODA3OTE=", "url": "https://api.github.com/repos/pythonprofilers/memory_profiler/labels/windows", "name": "windows", "color": "2b6df2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-31T07:19:35Z", "updated_at": "2018-07-11T06:37:20Z", "closed_at": "2018-07-09T19:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried running the mprof command line helper for multiprocessing example, but output given is 'How do you want to open this file'pop up text file,anybody has experienced it before,any help would be great", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/153", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/153/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/153/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/153", "id": 246068401, "node_id": "MDU6SXNzdWUyNDYwNjg0MDE=", "number": 153, "title": "Getting an error when trying to use 'mprof'", "user": {"login": "jashnani", "id": 29433053, "node_id": "MDQ6VXNlcjI5NDMzMDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/29433053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jashnani", "html_url": "https://github.com/jashnani", "followers_url": "https://api.github.com/users/jashnani/followers", "following_url": "https://api.github.com/users/jashnani/following{/other_user}", "gists_url": "https://api.github.com/users/jashnani/gists{/gist_id}", "starred_url": "https://api.github.com/users/jashnani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jashnani/subscriptions", "organizations_url": "https://api.github.com/users/jashnani/orgs", "repos_url": "https://api.github.com/users/jashnani/repos", "events_url": "https://api.github.com/users/jashnani/events{/privacy}", "received_events_url": "https://api.github.com/users/jashnani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-27T14:57:43Z", "updated_at": "2018-05-17T09:02:22Z", "closed_at": "2018-05-17T09:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a runtime error when I try to use 'mprof' in the following way:\r\n>>python mprof run myfile.py\r\n\r\nRuntimeError: There is no access to source file of the profiled function\r\n\r\nBut it continues to run my python script even after mprof has exited.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/152", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/152/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/152/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/152", "id": 245036296, "node_id": "MDU6SXNzdWUyNDUwMzYyOTY=", "number": 152, "title": "memory_usage hangs on exception", "user": {"login": "mhaseebtariq", "id": 7199752, "node_id": "MDQ6VXNlcjcxOTk3NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7199752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhaseebtariq", "html_url": "https://github.com/mhaseebtariq", "followers_url": "https://api.github.com/users/mhaseebtariq/followers", "following_url": "https://api.github.com/users/mhaseebtariq/following{/other_user}", "gists_url": "https://api.github.com/users/mhaseebtariq/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhaseebtariq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhaseebtariq/subscriptions", "organizations_url": "https://api.github.com/users/mhaseebtariq/orgs", "repos_url": "https://api.github.com/users/mhaseebtariq/repos", "events_url": "https://api.github.com/users/mhaseebtariq/events{/privacy}", "received_events_url": "https://api.github.com/users/mhaseebtariq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-24T10:26:02Z", "updated_at": "2017-08-07T13:14:36Z", "closed_at": "2017-08-07T13:14:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While executing a method (decorated with `memory_usage`) if there is an exception - the process just hangs without exiting. The scenario can be reproduced using this script:\r\n\r\n```\r\nimport psutil  # 5.2.0\r\nfrom memory_profiler import memory_usage  # 0.47'\r\n\r\n\r\ndef foo():\r\n    raise Exception('Error')\r\n\r\n\r\nmemory_usage((foo, tuple(), {}), timeout=1)\r\n\r\n```\r\n\r\nOnly when you press ctrl+c - you can exit the process and see where exactly the process is stuck at:\r\n```\r\npython reproduce.py \r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"reproduce.py\", line 9, in <module>\r\n    memory_usage((foo, tuple(), {}), timeout=1)\r\n  File \"/.../python3.5/site-packages/memory_profiler.py\", line 334, in memory_usage\r\n    returned = f(*args, **kw)\r\n  File \"reproduce.py\", line 6, in foo\r\n    raise Exception('Error')\r\nException: Error\r\n\r\n^C\r\n\r\nError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/.../python3.5/multiprocessing/popen_fork.py\", line 29, in poll\r\nProcess MemTimer-1:\r\n    pid, sts = os.waitpid(self.pid, flag)\r\nKeyboardInterrupt\r\nTraceback (most recent call last):\r\n  File \"/.../python3.5/multiprocessing/process.py\", line 249, in _bootstrap\r\n    self.run()\r\n  File \"/.../python3.5/site-packages/memory_profiler.py\", line 235, in run\r\n    stop = self.pipe.poll(self.interval)\r\n  File \"/.../python3.5/multiprocessing/connection.py\", line 257, in poll\r\n    return self._poll(timeout)\r\n  File \"/.../python3.5/multiprocessing/connection.py\", line 414, in _poll\r\n    r = wait([self], timeout)\r\n  File \"/.../python3.5/multiprocessing/connection.py\", line 911, in wait\r\n    ready = selector.select(timeout)\r\n  File \"/.../python3.5/selectors.py\", line 376, in select\r\n    fd_event_list = self._poll.poll(timeout)\r\nKeyboardInterrupt\r\n\r\n```\r\n\r\nTested on macOS 10.12.6 and CentOS - **Python 3.5**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/151", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/151/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/151/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/151", "id": 241084766, "node_id": "MDU6SXNzdWUyNDEwODQ3NjY=", "number": 151, "title": "understanding memory units and --with-children", "user": {"login": "tendres", "id": 3044446, "node_id": "MDQ6VXNlcjMwNDQ0NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3044446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tendres", "html_url": "https://github.com/tendres", "followers_url": "https://api.github.com/users/tendres/followers", "following_url": "https://api.github.com/users/tendres/following{/other_user}", "gists_url": "https://api.github.com/users/tendres/gists{/gist_id}", "starred_url": "https://api.github.com/users/tendres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tendres/subscriptions", "organizations_url": "https://api.github.com/users/tendres/orgs", "repos_url": "https://api.github.com/users/tendres/repos", "events_url": "https://api.github.com/users/tendres/events{/privacy}", "received_events_url": "https://api.github.com/users/tendres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-06T21:01:52Z", "updated_at": "2018-05-17T08:54:01Z", "closed_at": "2018-05-17T08:54:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am working on an ubuntu server with 64GB of RAM.\r\nI have been trying to debug a memory leak by running our problem script on our server and pulling the .dat file to my OS X machine to plot.\r\nWith a straight mprof run the plot does not reflect the slow memory creep I am seeing via htop - so I am assuming the leak is not in the main thread.\r\nWhen I run the same using '--with-children' and plot the results, peak memory usage is labeled at over 200,000 MiB(!) and the plot (more like a square wave) does not reflect the slow climb as witnessed in htop.\r\nSuggestions or help in understanding appreciated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/145", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/145/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/145/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/145", "id": 225357316, "node_id": "MDU6SXNzdWUyMjUzNTczMTY=", "number": 145, "title": "change the default .dat file for generating output", "user": {"login": "bamal", "id": 10996072, "node_id": "MDQ6VXNlcjEwOTk2MDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10996072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamal", "html_url": "https://github.com/bamal", "followers_url": "https://api.github.com/users/bamal/followers", "following_url": "https://api.github.com/users/bamal/following{/other_user}", "gists_url": "https://api.github.com/users/bamal/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamal/subscriptions", "organizations_url": "https://api.github.com/users/bamal/orgs", "repos_url": "https://api.github.com/users/bamal/repos", "events_url": "https://api.github.com/users/bamal/events{/privacy}", "received_events_url": "https://api.github.com/users/bamal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-30T21:57:32Z", "updated_at": "2017-06-05T16:05:56Z", "closed_at": "2017-06-05T16:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I change the default .dat(currently taken as the latest one) file such that I can specify the filename used to generate the output plot ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/144", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/144/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/144/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/144", "id": 224922510, "node_id": "MDU6SXNzdWUyMjQ5MjI1MTA=", "number": 144, "title": "mprof does not work with @profile in python3", "user": {"login": "acs", "id": 209533, "node_id": "MDQ6VXNlcjIwOTUzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/209533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acs", "html_url": "https://github.com/acs", "followers_url": "https://api.github.com/users/acs/followers", "following_url": "https://api.github.com/users/acs/following{/other_user}", "gists_url": "https://api.github.com/users/acs/gists{/gist_id}", "starred_url": "https://api.github.com/users/acs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acs/subscriptions", "organizations_url": "https://api.github.com/users/acs/orgs", "repos_url": "https://api.github.com/users/acs/repos", "events_url": "https://api.github.com/users/acs/events{/privacy}", "received_events_url": "https://api.github.com/users/acs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-27T21:46:37Z", "updated_at": "2017-09-22T14:33:14Z", "closed_at": "2017-06-05T15:00:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to:\r\n\r\nhttps://github.com/fabianp/memory_profiler/blame/master/README.rst#L153\r\n\r\nif you want that the timestamps for function calls are recorded, you don't need to import the profile decorator from memory_profiler, you need to comment out from your script the line:\r\n\r\n`# from memory_profiler import profile\r\n`\r\nBut if I do that following the tutorial at: http://fa.bianp.net/blog/2014/plot-memory-usage-as-a-function-of-time/\r\n\r\n```\r\n(acs@dellx) /tmp $ mprof run test1.py \r\nmprof: Sampling memory every 0.1s\r\nTraceback (most recent call last):\r\n  File \"test1.py\", line 7, in <module>\r\n    @profile\r\nNameError: name 'profile' is not defined\r\n\r\n```\r\n\r\nAnd if I import profile with \"from memory_profiler import profile\" there are no data about functions calls in the plot.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/143", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/143/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/143/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/143", "id": 224863148, "node_id": "MDU6SXNzdWUyMjQ4NjMxNDg=", "number": 143, "title": "ImportError: cannot import name lru_cache", "user": {"login": "acs", "id": 209533, "node_id": "MDQ6VXNlcjIwOTUzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/209533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acs", "html_url": "https://github.com/acs", "followers_url": "https://api.github.com/users/acs/followers", "following_url": "https://api.github.com/users/acs/following{/other_user}", "gists_url": "https://api.github.com/users/acs/gists{/gist_id}", "starred_url": "https://api.github.com/users/acs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acs/subscriptions", "organizations_url": "https://api.github.com/users/acs/orgs", "repos_url": "https://api.github.com/users/acs/repos", "events_url": "https://api.github.com/users/acs/events{/privacy}", "received_events_url": "https://api.github.com/users/acs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-27T17:51:55Z", "updated_at": "2017-06-05T15:00:54Z", "closed_at": "2017-06-05T15:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to profile a python3 application I get the error:\r\n\r\n```\r\nmprof: Sampling memory every 0.1s\r\nTraceback (most recent call last):\r\n  File \"./p2o.py\", line 31, in <module>\r\n....\r\nImportError: cannot import name lru_cache\r\n\r\n```\r\nBut using the application directly it works perfectly.\r\n\r\nmprof has been installed with: \r\n\r\n`sudo pip3  install memory_profiler`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/141", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/141/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/141/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/141", "id": 223961891, "node_id": "MDU6SXNzdWUyMjM5NjE4OTE=", "number": 141, "title": "several UserWarning: psutil module not found.", "user": {"login": "odanoburu", "id": 19347395, "node_id": "MDQ6VXNlcjE5MzQ3Mzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/19347395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odanoburu", "html_url": "https://github.com/odanoburu", "followers_url": "https://api.github.com/users/odanoburu/followers", "following_url": "https://api.github.com/users/odanoburu/following{/other_user}", "gists_url": "https://api.github.com/users/odanoburu/gists{/gist_id}", "starred_url": "https://api.github.com/users/odanoburu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odanoburu/subscriptions", "organizations_url": "https://api.github.com/users/odanoburu/orgs", "repos_url": "https://api.github.com/users/odanoburu/repos", "events_url": "https://api.github.com/users/odanoburu/events{/privacy}", "received_events_url": "https://api.github.com/users/odanoburu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-24T21:51:28Z", "updated_at": "2017-11-29T13:22:00Z", "closed_at": "2017-11-29T13:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey, I've run memory_profiler a few times without having psutil installed and it warns me of this several times instead of one. it's a minor issue and is probably easy to fix.\r\n\r\n```sh\r\nmprof run python3 script.py\r\nmprof: Sampling memory every 0.1s\r\nmprof: Sampling memory every 0.1s\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\ndictionaries from previous hashing found. loading them.\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n1 documents hashed and saved to test_test/public.\r\n/usr/lib64/python3.6/site-packages/memory_profiler.py:163: UserWarning: psutil module not found. memory_profiler will be slow\r\n  warnings.warn(\"psutil module not found. memory_profiler will be slow\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/137", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/137/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/137/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/137", "id": 216966777, "node_id": "MDU6SXNzdWUyMTY5NjY3Nzc=", "number": 137, "title": "Syntax error in memory_profiler 0.45 on Python 2.6", "user": {"login": "jun66j5", "id": 42682, "node_id": "MDQ6VXNlcjQyNjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/42682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jun66j5", "html_url": "https://github.com/jun66j5", "followers_url": "https://api.github.com/users/jun66j5/followers", "following_url": "https://api.github.com/users/jun66j5/following{/other_user}", "gists_url": "https://api.github.com/users/jun66j5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jun66j5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jun66j5/subscriptions", "organizations_url": "https://api.github.com/users/jun66j5/orgs", "repos_url": "https://api.github.com/users/jun66j5/repos", "events_url": "https://api.github.com/users/jun66j5/events{/privacy}", "received_events_url": "https://api.github.com/users/jun66j5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-25T11:00:38Z", "updated_at": "2018-05-17T08:50:36Z", "closed_at": "2018-05-17T08:50:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to classifiers in `setup.py`, it seems memory-profiler still supports Python 2.6 but syntax error actually is raised.\r\n\r\n```\r\n   Using version 0.45 (newest of versions: 0.45, 0.44, 0.43, 0.42, 0.41, 0.40, 0.39, 0.38, 0.37, 0.36, 0.35, 0.34, 0.33, 0.32, 0.31, 0.30, 0.29, 0.28, 0.27, 0.26, 0.25, 0.24, 0.23, 0.22, 0.21, 0.20, 0.19, 0.18, 0.17, 0.16, 0.15, 0.14, 0.13, 0.12, 0.11, 0.10, 0.9, 0.8, 0.7, 0.5, 0.4, 0.3, 0.2, 0.1)\r\n   Using download cache from /arc/pip/https%3A%2F%2Fpypi.python.org%2Fpackages%2Fe9%2F16%2F135a03bb71126cb8f097bb2789fb0c46e297a801995f051318fdd49631e2%2Fmemory_profiler-0.45.tar.gz\r\n   Running setup.py (path:/venv/py26/build/memory-profiler/setup.py) egg_info for package memory-profiler\r\n     Traceback (most recent call last):\r\n       File \"<string>\", line 17, in <module>\r\n       File \"/venv/py26/build/memory-profiler/setup.py\", line 1, in <module>\r\n         import memory_profiler\r\n       File \"memory_profiler.py\", line 1080\r\n         backends_indices = {b[0]: i for i, b in enumerate(all_backends)}\r\n                                       ^\r\n     SyntaxError: invalid syntax\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/136", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/136/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/136/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/136", "id": 216829346, "node_id": "MDU6SXNzdWUyMTY4MjkzNDY=", "number": 136, "title": "mprof plot - IndexError: tuple index out of range", "user": {"login": "oesteban", "id": 598470, "node_id": "MDQ6VXNlcjU5ODQ3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/598470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oesteban", "html_url": "https://github.com/oesteban", "followers_url": "https://api.github.com/users/oesteban/followers", "following_url": "https://api.github.com/users/oesteban/following{/other_user}", "gists_url": "https://api.github.com/users/oesteban/gists{/gist_id}", "starred_url": "https://api.github.com/users/oesteban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oesteban/subscriptions", "organizations_url": "https://api.github.com/users/oesteban/orgs", "repos_url": "https://api.github.com/users/oesteban/repos", "events_url": "https://api.github.com/users/oesteban/events{/privacy}", "received_events_url": "https://api.github.com/users/oesteban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-24T15:57:06Z", "updated_at": "2018-05-17T09:57:27Z", "closed_at": "2018-05-17T09:57:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing this IndexError with python 2.7 and python 3.5 using the pypi latest version.\r\n\r\n\r\n```\r\nUsing last profile data.\r\nTraceback (most recent call last):\r\n  File \"/home/oesteban/miniconda2/envs/nipypedev-3.5/bin/mprof\", line 551, in <module>\r\n    actions[get_action()]()\r\n  File \"/home/oesteban/miniconda2/envs/nipypedev-3.5/bin/mprof\", line 517, in plot_action\r\n    mprofile = plot_file(filename, index=n, timestamps=timestamps, options=options)\r\n  File \"/home/oesteban/miniconda2/envs/nipypedev-3.5/bin/mprof\", line 415, in plot_file\r\n    pl.plot(cts, cmem, \"+-\"  + mem_line_colors[idx+1 % len(mem_line_colors)],\r\nIndexError: tuple index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/135", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/135/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/135/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/135", "id": 216583290, "node_id": "MDU6SXNzdWUyMTY1ODMyOTA=", "number": 135, "title": "Pydev error:", "user": {"login": "katie-simmons", "id": 4392114, "node_id": "MDQ6VXNlcjQzOTIxMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4392114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katie-simmons", "html_url": "https://github.com/katie-simmons", "followers_url": "https://api.github.com/users/katie-simmons/followers", "following_url": "https://api.github.com/users/katie-simmons/following{/other_user}", "gists_url": "https://api.github.com/users/katie-simmons/gists{/gist_id}", "starred_url": "https://api.github.com/users/katie-simmons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katie-simmons/subscriptions", "organizations_url": "https://api.github.com/users/katie-simmons/orgs", "repos_url": "https://api.github.com/users/katie-simmons/repos", "events_url": "https://api.github.com/users/katie-simmons/events{/privacy}", "received_events_url": "https://api.github.com/users/katie-simmons/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-23T21:49:36Z", "updated_at": "2018-05-17T08:50:00Z", "closed_at": "2018-05-17T08:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for building and maintaining memory_builder - it's proving a really useful module for me right now. I just wanted to let you know that I received the following error while debugging my own app that uses memory_profiler in PyCharm 2016.3.3 (Build #PY-163.15188.4):\r\n\r\nPYDEV DEBUGGER WARNING:\r\nsys.settrace() should not be used when the debugger is being used.\r\nThis may cause the debugger to stop working correctly.\r\nIf this is needed, please check: \r\n[http://pydev.blogspot.com/2007/06/why-cant-pydev-debugger-work-with.html](http://pydev.blogspot.com/2007/06/why-cant-pydev-debugger-work-with.html)\r\nto see how to restore the debug tracing back correctly.\r\nCall Location:\r\nFile \"<my_project_path>/venv/lib/python2.7/site-packages/memory_profiler.py, line 729, in enable\r\n    sys.settrace(self.trace_memory_usage)\r\n\r\nThe [blog post](http://pydev.blogspot.com/2007/06/why-cant-pydev-debugger-work-with.html) linked was helpful if you'd like to take a look. Let me know if I can provide any further info - this is more of a heads-up than anything, as I was able to comment out a few lines and still use memory_profiler. Thanks again for the hard work! \ud83d\ude00 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/133", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/133/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/133/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/133", "id": 204495728, "node_id": "MDU6SXNzdWUyMDQ0OTU3Mjg=", "number": 133, "title": "mprof executable doesn't work for me", "user": {"login": "patelamol", "id": 21271154, "node_id": "MDQ6VXNlcjIxMjcxMTU0", "avatar_url": "https://avatars2.githubusercontent.com/u/21271154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patelamol", "html_url": "https://github.com/patelamol", "followers_url": "https://api.github.com/users/patelamol/followers", "following_url": "https://api.github.com/users/patelamol/following{/other_user}", "gists_url": "https://api.github.com/users/patelamol/gists{/gist_id}", "starred_url": "https://api.github.com/users/patelamol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patelamol/subscriptions", "organizations_url": "https://api.github.com/users/patelamol/orgs", "repos_url": "https://api.github.com/users/patelamol/repos", "events_url": "https://api.github.com/users/patelamol/events{/privacy}", "received_events_url": "https://api.github.com/users/patelamol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 935980791, "node_id": "MDU6TGFiZWw5MzU5ODA3OTE=", "url": "https://api.github.com/repos/pythonprofilers/memory_profiler/labels/windows", "name": "windows", "color": "2b6df2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-01T04:37:39Z", "updated_at": "2019-07-01T11:57:49Z", "closed_at": "2018-07-09T19:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Whenever I try to do the 'mprof run <filename.py> ' it says 'mprof is not recognized as an internal or external command'.\r\nBut I am able to use the 'python -m memory_profiler <filename.py> ' but not the executable. Do you know why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/131", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/131/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/131/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/131", "id": 193785477, "node_id": "MDU6SXNzdWUxOTM3ODU0Nzc=", "number": 131, "title": "L115: name get_children remains", "user": {"login": "endrebak", "id": 17778898, "node_id": "MDQ6VXNlcjE3Nzc4ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/17778898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/endrebak", "html_url": "https://github.com/endrebak", "followers_url": "https://api.github.com/users/endrebak/followers", "following_url": "https://api.github.com/users/endrebak/following{/other_user}", "gists_url": "https://api.github.com/users/endrebak/gists{/gist_id}", "starred_url": "https://api.github.com/users/endrebak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/endrebak/subscriptions", "organizations_url": "https://api.github.com/users/endrebak/orgs", "repos_url": "https://api.github.com/users/endrebak/repos", "events_url": "https://api.github.com/users/endrebak/events{/privacy}", "received_events_url": "https://api.github.com/users/endrebak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-06T14:26:36Z", "updated_at": "2017-01-10T13:44:02Z", "closed_at": "2017-01-10T13:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/fabianp/memory_profiler/blob/master/memory_profiler.py#L115", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/130", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/130/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/130/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/130", "id": 193780003, "node_id": "MDU6SXNzdWUxOTM3ODAwMDM=", "number": 130, "title": "Choose filename of output dat file in run command", "user": {"login": "endrebak", "id": 17778898, "node_id": "MDQ6VXNlcjE3Nzc4ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/17778898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/endrebak", "html_url": "https://github.com/endrebak", "followers_url": "https://api.github.com/users/endrebak/followers", "following_url": "https://api.github.com/users/endrebak/following{/other_user}", "gists_url": "https://api.github.com/users/endrebak/gists{/gist_id}", "starred_url": "https://api.github.com/users/endrebak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/endrebak/subscriptions", "organizations_url": "https://api.github.com/users/endrebak/orgs", "repos_url": "https://api.github.com/users/endrebak/repos", "events_url": "https://api.github.com/users/endrebak/events{/privacy}", "received_events_url": "https://api.github.com/users/endrebak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-06T14:03:21Z", "updated_at": "2018-02-28T17:43:42Z", "closed_at": "2018-02-28T17:43:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use `mprof` in a (snake)makefile. Problem is, in makelike workflows you need to know the exact name the output file will have, so `mprof` is a little hard to use in this way.\r\n\r\nThanks for the script btw, seems great!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/129", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/129/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/129/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/129", "id": 192248092, "node_id": "MDU6SXNzdWUxOTIyNDgwOTI=", "number": 129, "title": "Cannot import name array2d", "user": {"login": "gkoundi", "id": 23022703, "node_id": "MDQ6VXNlcjIzMDIyNzAz", "avatar_url": "https://avatars3.githubusercontent.com/u/23022703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoundi", "html_url": "https://github.com/gkoundi", "followers_url": "https://api.github.com/users/gkoundi/followers", "following_url": "https://api.github.com/users/gkoundi/following{/other_user}", "gists_url": "https://api.github.com/users/gkoundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoundi/subscriptions", "organizations_url": "https://api.github.com/users/gkoundi/orgs", "repos_url": "https://api.github.com/users/gkoundi/repos", "events_url": "https://api.github.com/users/gkoundi/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoundi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-29T10:49:14Z", "updated_at": "2016-11-29T14:42:48Z", "closed_at": "2016-11-29T14:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following is the output of pip freeze in virualenv.\r\npip freeze\r\nmemory-profiler==0.41\r\nnumpy==1.11.2\r\npsutil==5.0.0\r\nscikit-learn==0.18.1\r\nscipy==0.18.1\r\n\r\nFollowing is the error.\r\nmprof run --python run_profile_fast_dot.py\r\nmprof: Sampling memory every 0.1s\r\nrunning as a Python program...\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/Users/gkoundi/Documents/venv/lib/python2.7/site-packages/memory_profiler-0.41-py2.7.egg/memory_profiler.py\", line 982, in <module>\r\n    exec_with_profiler(script_filename, prof)\r\n  File \"/Users/gkoundi/Documents/venv/lib/python2.7/site-packages/memory_profiler-0.41-py2.7.egg/memory_profiler.py\", line 917, in exec_with_profiler\r\n    execfile(filename, ns, ns)\r\n  File \"run_profile_fast_dot.py\", line 20, in <module>\r\n    from sklearn.utils.validation import array2d\r\nImportError: cannot import name array2d\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/125", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/125/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/125/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/125", "id": 183254896, "node_id": "MDU6SXNzdWUxODMyNTQ4OTY=", "number": 125, "title": "minor improvements to `mprof run --help`", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-16T08:04:51Z", "updated_at": "2016-10-17T12:56:04Z", "closed_at": "2016-10-17T12:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ mprof run -h\nUsage: mprof [options]\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  --python              Activates extra features when the profiled executable\n                        is                       a Python program (currently:\n                        function timestamping.)\n  --nopython            Disables extra features when the profiled executable\n                        is                       a Python program (currently:\n                        function timestamping.)\n  -T INTERVAL, --interval=INTERVAL\n                        Sampling period (in seconds), defaults to 0.1\n  -C, --include-children\n                        Monitors forked processes as well (sum up all process\n                        memory)\n```\n\nIt may be helpful to have the first line say `Usage: mprof run [options]` (at first I was a bit confused because I thought these were the global options, not the options specific to `mprof run`).\nAlso, note the extra spaces in the help for `--python` and `--nopython`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/122", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/122/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/122/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/122", "id": 180458334, "node_id": "MDU6SXNzdWUxODA0NTgzMzQ=", "number": 122, "title": "memory usage in \"for loop\" is not detailed enough", "user": {"login": "Sovetnikov", "id": 9721773, "node_id": "MDQ6VXNlcjk3MjE3NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9721773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sovetnikov", "html_url": "https://github.com/Sovetnikov", "followers_url": "https://api.github.com/users/Sovetnikov/followers", "following_url": "https://api.github.com/users/Sovetnikov/following{/other_user}", "gists_url": "https://api.github.com/users/Sovetnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sovetnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sovetnikov/subscriptions", "organizations_url": "https://api.github.com/users/Sovetnikov/orgs", "repos_url": "https://api.github.com/users/Sovetnikov/repos", "events_url": "https://api.github.com/users/Sovetnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/Sovetnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-01T14:08:32Z", "updated_at": "2018-01-15T16:41:32Z", "closed_at": "2018-01-15T16:41:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At start, i want to thank you for this tool.\n\nAnd now about the issue.\n\nTest code:\n\n```\nfrom memory_profiler import profile\n\ndef gen(count):\n    r = list(range(0,count))\n    return r\n\n_global_var = None\ndef _gen_cache():\n    global _global_var\n    if not _global_var:\n        _global_var = gen(10*1024*1024)\n\n@profile(precision=4)\ndef test():\n    a = gen(90000)\n    for i in range(0,10):\n        b = i\n        _gen_cache()\n        g = i\n\nif __name__ == \"__main__\":\n    test()\n```\n\nProfiler output:\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n    13  10.4336 MiB   0.0000 MiB   @profile(precision=4)\n    14                             def test():\n    15  12.1445 MiB   1.7109 MiB       a = gen(90000)\n    16 213.4453 MiB 201.3008 MiB       for i in range(0,10):\n    17 213.4453 MiB   0.0000 MiB           b = i\n    18 213.4453 MiB   0.0000 MiB           _gen_cache()\n    19 213.4453 MiB   0.0000 MiB           g = i\n```\n\nYou see the problem - information about memory allocation in _gen_cache() got lost.\nI see in sources that problem is that trace function stores only total memory on every code line executed, but not memory delta between line executions.\n\nIn my opinion resulting output must be something like that:\n\n```\nLine #    Mem usage    Increment   Line Contents\n================================================\n    13  10.4141 MiB  10.4141 MiB   @profile(precision=4)\n    14                             def test():\n    15  12.1328 MiB   1.7188 MiB       a = gen(90000)\n    16 213.4141 MiB   0.0000 MiB       for i in range(0,10):\n    17 213.4141 MiB   0.0000 MiB           b = i\n    18 213.4141 MiB 201.2812 MiB           _gen_cache()\n    19 213.4141 MiB   0.0000 MiB           g = i\n```\n\nIn attachment is my modified version of memory_profiler that works by calculating memory deltas (it's insufficiently tested but works).\n\n[memory_profiler.txt](https://github.com/fabianp/memory_profiler/files/504397/memory_profiler.txt)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/121", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/121/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/121/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/121", "id": 175213242, "node_id": "MDU6SXNzdWUxNzUyMTMyNDI=", "number": 121, "title": "Graph plotting to shell/terminal console", "user": {"login": "drtrigon", "id": 18975831, "node_id": "MDQ6VXNlcjE4OTc1ODMx", "avatar_url": "https://avatars0.githubusercontent.com/u/18975831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drtrigon", "html_url": "https://github.com/drtrigon", "followers_url": "https://api.github.com/users/drtrigon/followers", "following_url": "https://api.github.com/users/drtrigon/following{/other_user}", "gists_url": "https://api.github.com/users/drtrigon/gists{/gist_id}", "starred_url": "https://api.github.com/users/drtrigon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drtrigon/subscriptions", "organizations_url": "https://api.github.com/users/drtrigon/orgs", "repos_url": "https://api.github.com/users/drtrigon/repos", "events_url": "https://api.github.com/users/drtrigon/events{/privacy}", "received_events_url": "https://api.github.com/users/drtrigon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-06T10:29:51Z", "updated_at": "2017-06-13T16:37:43Z", "closed_at": "2017-06-13T16:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using mprof on travis-ci. On travis It's not possible to display graphical output and thus `mprof plot` using matplotlib does not work.\n\nThanks to the simple format used by the `.dat` files, their content can directly be feed to gnuplot (using `set terminal dumb`). This is what I am doing currently and it works well.\n\nTherefore I would like to propose to either implement plotting to shell/terminal console through the `mprof plot` command using gnuplot or any equivalent method (see e.g. http://stackoverflow.com/questions/123378/command-line-unix-ascii-based-charting-plotting-tool, http://stackoverflow.com/questions/20295646/python-ascii-plots-in-terminal) or to make sure not to change the `.dat` file format (for all times) in order to preserve the compatibility to gnuplot, as it is currently.\n\nMay be it would be useful to document how to use gnuplot to plot the `*.dat` files.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/118", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/118/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/118/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/118", "id": 165591027, "node_id": "MDU6SXNzdWUxNjU1OTEwMjc=", "number": 118, "title": "mprof each child process independently ", "user": {"login": "bbengfort", "id": 745966, "node_id": "MDQ6VXNlcjc0NTk2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/745966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbengfort", "html_url": "https://github.com/bbengfort", "followers_url": "https://api.github.com/users/bbengfort/followers", "following_url": "https://api.github.com/users/bbengfort/following{/other_user}", "gists_url": "https://api.github.com/users/bbengfort/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbengfort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbengfort/subscriptions", "organizations_url": "https://api.github.com/users/bbengfort/orgs", "repos_url": "https://api.github.com/users/bbengfort/repos", "events_url": "https://api.github.com/users/bbengfort/events{/privacy}", "received_events_url": "https://api.github.com/users/bbengfort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-07-14T15:34:43Z", "updated_at": "2017-06-13T15:23:33Z", "closed_at": "2017-06-13T15:23:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Moved here as a feature request from the following SO question:\n\nhttp://stackoverflow.com/questions/38358881/how-to-profile-multiple-subprocesses-using-python-multiprocessing-and-memory-pro\n\nThe `mprof` script allows you to track memory usage of a process over time, and includes a `-C` flag which will also sum up the memory usage of all child processes (forks) spawned by the primary process. \n\nInstead of summation, I would like the `mprof` script to include a flag that will identify each process by pid in the generated `.dat` file, allowing the `plot` command to visualize each process' memory usage independently of each other, over time. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/115", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/115/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/115/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/115", "id": 159786408, "node_id": "MDU6SXNzdWUxNTk3ODY0MDg=", "number": 115, "title": "[not bug] How to run mprof if I have 2 versions of python", "user": {"login": "vuklip", "id": 5083769, "node_id": "MDQ6VXNlcjUwODM3Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5083769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vuklip", "html_url": "https://github.com/vuklip", "followers_url": "https://api.github.com/users/vuklip/followers", "following_url": "https://api.github.com/users/vuklip/following{/other_user}", "gists_url": "https://api.github.com/users/vuklip/gists{/gist_id}", "starred_url": "https://api.github.com/users/vuklip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vuklip/subscriptions", "organizations_url": "https://api.github.com/users/vuklip/orgs", "repos_url": "https://api.github.com/users/vuklip/repos", "events_url": "https://api.github.com/users/vuklip/events{/privacy}", "received_events_url": "https://api.github.com/users/vuklip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-06-11T18:19:40Z", "updated_at": "2017-03-27T14:11:09Z", "closed_at": "2016-06-12T10:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Sorry if this question is silly or strange but I couldn't Google this question.\nOn my mac I have pre-installed python 2.7.10 and installed by myself 3.5.1.\n\nWhen I use `mprof run mem_test.py` it runs on 2.7. How can I run it on 3th version? \nI tried `python3 -m mprof run mem_test.py` , but `/Library/Frameworks/Python.framework/Versions/3.5/bin/python3: No module named mprof`\n\nregards, Artem\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/114", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/114/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/114/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/114", "id": 146706280, "node_id": "MDU6SXNzdWUxNDY3MDYyODA=", "number": 114, "title": "'Process' object has no attribute 'get_memory_info'", "user": {"login": "hanlequantum", "id": 16998655, "node_id": "MDQ6VXNlcjE2OTk4NjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/16998655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanlequantum", "html_url": "https://github.com/hanlequantum", "followers_url": "https://api.github.com/users/hanlequantum/followers", "following_url": "https://api.github.com/users/hanlequantum/following{/other_user}", "gists_url": "https://api.github.com/users/hanlequantum/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanlequantum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanlequantum/subscriptions", "organizations_url": "https://api.github.com/users/hanlequantum/orgs", "repos_url": "https://api.github.com/users/hanlequantum/repos", "events_url": "https://api.github.com/users/hanlequantum/events{/privacy}", "received_events_url": "https://api.github.com/users/hanlequantum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-07T18:25:51Z", "updated_at": "2017-10-20T04:00:45Z", "closed_at": "2017-10-20T04:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems the same problem with #94\nversion: psutil 4.1.0; memory_profiler 0.4.1\n I use others code:\n![screen shot 2016-04-07 at 2 46 52 pm](https://cloud.githubusercontent.com/assets/16998655/14362925/c03e8b4e-fccf-11e5-9c9b-4b87fa91857c.jpg)\nrun \"memory_usage_psutil() \" and get:\n![screen shot 2016-04-07 at 2 47 14 pm](https://cloud.githubusercontent.com/assets/16998655/14362949/d2dfc72c-fccf-11e5-925c-e55d6572abb5.jpg)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/113", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/113/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/113/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/113", "id": 132015877, "node_id": "MDU6SXNzdWUxMzIwMTU4Nzc=", "number": 113, "title": "bug with unicode", "user": {"login": "reza1615", "id": 2202483, "node_id": "MDQ6VXNlcjIyMDI0ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2202483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reza1615", "html_url": "https://github.com/reza1615", "followers_url": "https://api.github.com/users/reza1615/followers", "following_url": "https://api.github.com/users/reza1615/following{/other_user}", "gists_url": "https://api.github.com/users/reza1615/gists{/gist_id}", "starred_url": "https://api.github.com/users/reza1615/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reza1615/subscriptions", "organizations_url": "https://api.github.com/users/reza1615/orgs", "repos_url": "https://api.github.com/users/reza1615/repos", "events_url": "https://api.github.com/users/reza1615/events{/privacy}", "received_events_url": "https://api.github.com/users/reza1615/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-07T21:41:57Z", "updated_at": "2016-02-08T14:59:07Z", "closed_at": "2016-02-08T14:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran memory_profiler on a python code which had unicode text inside it and the code shows this error\n\n```\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/data/project/checkdictation-fa/www/python/venv/lib/python2.7/site-packages/memory_profiler.py\", line 992, in <module>\n    show_results(prof, precision=options.precision, stream=out_file)\n  File \"/data/project/checkdictation-fa/www/python/venv/lib/python2.7/site-packages/memory_profiler.py\", line 621, in show_results\n    stream.write(unicode(tmp))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xdb in position 53: ordinal not in range(128)\n```\n\nI changed line 621\n`stream.write(unicode(tmp))`\nto\n`stream.write(unicode(tmp,'UTF-8'))`\nand and it is ok please solve this bug\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/107", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/107/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/107/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/107", "id": 119807759, "node_id": "MDU6SXNzdWUxMTk4MDc3NTk=", "number": 107, "title": "Bug in include_children loop", "user": {"login": "pintohutch", "id": 3731548, "node_id": "MDQ6VXNlcjM3MzE1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3731548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pintohutch", "html_url": "https://github.com/pintohutch", "followers_url": "https://api.github.com/users/pintohutch/followers", "following_url": "https://api.github.com/users/pintohutch/following{/other_user}", "gists_url": "https://api.github.com/users/pintohutch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pintohutch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pintohutch/subscriptions", "organizations_url": "https://api.github.com/users/pintohutch/orgs", "repos_url": "https://api.github.com/users/pintohutch/repos", "events_url": "https://api.github.com/users/pintohutch/events{/privacy}", "received_events_url": "https://api.github.com/users/pintohutch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-01T21:04:57Z", "updated_at": "2017-10-20T04:02:28Z", "closed_at": "2017-10-20T04:02:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "At https://github.com/fabianp/memory_profiler/blob/master/memory_profiler.py#L66 and https://github.com/fabianp/memory_profiler/blob/master/memory_profiler.py#L70 the line:\n\nmem += getattr(process, meminfo_attr)()[0] / _TWO_20\n\nshould be replaced with\n\nmem += getattr(p, meminfo_attr)()[0] / _TWO_20\n\nSo the p as the child process iterable in the for loop has its memory captured, instead of just the parent process.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/106", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/106/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/106/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/106", "id": 115954863, "node_id": "MDU6SXNzdWUxMTU5NTQ4NjM=", "number": 106, "title": "Installing from pip or setup.py gives error", "user": {"login": "graysonw", "id": 7809923, "node_id": "MDQ6VXNlcjc4MDk5MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7809923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graysonw", "html_url": "https://github.com/graysonw", "followers_url": "https://api.github.com/users/graysonw/followers", "following_url": "https://api.github.com/users/graysonw/following{/other_user}", "gists_url": "https://api.github.com/users/graysonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/graysonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graysonw/subscriptions", "organizations_url": "https://api.github.com/users/graysonw/orgs", "repos_url": "https://api.github.com/users/graysonw/repos", "events_url": "https://api.github.com/users/graysonw/events{/privacy}", "received_events_url": "https://api.github.com/users/graysonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-09T20:07:46Z", "updated_at": "2019-07-17T19:31:41Z", "closed_at": "2018-05-17T08:42:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on both OS X 10.11 and Debian GNU/Linux 7. \n\nCollecting memory-profiler\n  Downloading memory_profiler-0.38.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/private/tmp/pip-build-BV2ywJ/memory-profiler/setup.py\", line 1, in <module>\n        import memory_profiler\n      File \"memory_profiler.py\", line 863, in <module>\n        magic_mprun = MemoryProfilerMagics().mprun.**func**\n    TypeError: **init**() takes exactly 2 arguments (1 given)\n\n```\n----------------------------------------\n```\n\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/tmp/pip-build-BV2ywJ/memory-profiler\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/103", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/103/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/103/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/103", "id": 112990458, "node_id": "MDU6SXNzdWUxMTI5OTA0NTg=", "number": 103, "title": "Can the plot be scaled to show fine detail?", "user": {"login": "pbowyer", "id": 89852, "node_id": "MDQ6VXNlcjg5ODUy", "avatar_url": "https://avatars1.githubusercontent.com/u/89852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbowyer", "html_url": "https://github.com/pbowyer", "followers_url": "https://api.github.com/users/pbowyer/followers", "following_url": "https://api.github.com/users/pbowyer/following{/other_user}", "gists_url": "https://api.github.com/users/pbowyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbowyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbowyer/subscriptions", "organizations_url": "https://api.github.com/users/pbowyer/orgs", "repos_url": "https://api.github.com/users/pbowyer/repos", "events_url": "https://api.github.com/users/pbowyer/events{/privacy}", "received_events_url": "https://api.github.com/users/pbowyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-10-23T10:03:48Z", "updated_at": "2018-05-17T08:41:46Z", "closed_at": "2018-05-17T08:41:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an issue with making the plot from a `mprof` run legible. This is how mine looks:\n ![plot](https://cloud.githubusercontent.com/assets/89852/10689027/235c2cc4-7970-11e5-9d83-2a05599857dc.png)\n\nI'd like to be able to stretch/zoom the plot - make it much larger, so the function markers don't overlap.\n\nI have tried changing matplotlib's `savefig.dpi` and `figure.figsize` values, and both result in the graph being scaled, rather than the canvas being larger and the line/function markers becoming thinner and separated, and the text smaller.\n\nI tried a really wide figure using these settings in my `matplotlibrc`:\n\n```\nfigure.figsize   : 200, 10    # figure size in inches\nsavefig.dpi      : 100\n```\n\nbut it still plotted at 1400x600.\n\nDo you know a way to make this possible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/101", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/101/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/101/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/101", "id": 106424330, "node_id": "MDU6SXNzdWUxMDY0MjQzMzA=", "number": 101, "title": "get_children in psutil is now children", "user": {"login": "pintohutch", "id": 3731548, "node_id": "MDQ6VXNlcjM3MzE1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3731548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pintohutch", "html_url": "https://github.com/pintohutch", "followers_url": "https://api.github.com/users/pintohutch/followers", "following_url": "https://api.github.com/users/pintohutch/following{/other_user}", "gists_url": "https://api.github.com/users/pintohutch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pintohutch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pintohutch/subscriptions", "organizations_url": "https://api.github.com/users/pintohutch/orgs", "repos_url": "https://api.github.com/users/pintohutch/repos", "events_url": "https://api.github.com/users/pintohutch/events{/privacy}", "received_events_url": "https://api.github.com/users/pintohutch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-14T20:46:10Z", "updated_at": "2018-05-17T08:40:36Z", "closed_at": "2018-05-17T08:40:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per the psutil documentation in http://pythonhosted.org/psutil/#psutil.Process.children, the iteration in https://github.com/fabianp/memory_profiler/blob/master/memory_profiler.py#L54 should actually be:\n\nfor p in process.children(recursive=True):\n\nOtherwise you get an Exception:\nAttributeError: 'Process' object has no attribute 'get_children'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/97", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/97/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/97/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/97", "id": 98989227, "node_id": "MDU6SXNzdWU5ODk4OTIyNw==", "number": 97, "title": "plot_action not taking the output .dat file with smaller intervals", "user": {"login": "neocsbee", "id": 3037022, "node_id": "MDQ6VXNlcjMwMzcwMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3037022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neocsbee", "html_url": "https://github.com/neocsbee", "followers_url": "https://api.github.com/users/neocsbee/followers", "following_url": "https://api.github.com/users/neocsbee/following{/other_user}", "gists_url": "https://api.github.com/users/neocsbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/neocsbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neocsbee/subscriptions", "organizations_url": "https://api.github.com/users/neocsbee/orgs", "repos_url": "https://api.github.com/users/neocsbee/repos", "events_url": "https://api.github.com/users/neocsbee/events{/privacy}", "received_events_url": "https://api.github.com/users/neocsbee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-04T14:51:41Z", "updated_at": "2015-08-04T15:57:04Z", "closed_at": "2015-08-04T15:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran the following test code with the command:\n mprof run -T 0.001 mprof_example.py\n\n```\nimport time\n\n\ndef test1():\n    n = 10000\n    a = [1] * n\n    time.sleep(1)\n    return a\n\ndef test2():\n    n = 100000\n    b = [1] * n\n    time.sleep(1)\n    return b\n\nif __name__ == \"__main__\":\n    test1()\n    test2()\n```\n\nI got the following output file:\nCMDLINE /usr/local/local/python-2.7.5/bin/python2.7 mprof_example.py\nMEM 5.476562 1438698997.6944\nMEM 7.613281 1438698997.7504\nMEM 7.613281 1438698997.8072\nMEM 7.613281 1438698997.8678\nMEM 7.613281 1438698997.9238\nMEM 7.613281 1438698997.9789\nMEM 7.613281 1438698998.0327\nMEM 7.613281 1438698998.0876\nMEM 7.613281 1438698998.1430\nMEM 7.613281 1438698998.1976\nMEM 7.613281 1438698998.2512\nMEM 7.613281 1438698998.3066\nMEM 7.613281 1438698998.3623\nMEM 7.613281 1438698998.4171\nMEM 7.613281 1438698998.4711\nMEM 7.613281 1438698998.5262\nMEM 7.613281 1438698998.5816\nMEM 7.613281 1438698998.6397\nMEM 7.613281 1438698998.6970\nMEM 8.378906 1438698998.7522\nMEM 8.378906 1438698998.8076\nMEM 8.378906 1438698998.8626\nMEM 8.378906 1438698998.9165\nMEM 8.378906 1438698998.9765\nMEM 8.378906 1438698999.0322\nMEM 8.378906 1438698999.0871\nMEM 8.378906 1438698999.1414\nMEM 8.378906 1438698999.1967\nMEM 8.378906 1438698999.2529\nMEM 8.378906 1438698999.3094\nMEM 8.378906 1438698999.3658\nMEM 8.378906 1438698999.4282\nMEM 8.378906 1438698999.4831\nMEM 8.378906 1438698999.5372\nMEM 8.378906 1438698999.5924\nMEM 8.378906 1438698999.6475\nMEM 8.378906 1438698999.7022\nMEM 0.000000 1438698999.7563\n\nI tried plotting the result and saw the following error message: \nmprof plot mprofile_mprofex.dat \n/usr/lib/pymodules/python2.7/matplotlib/axes.py:4601: UserWarning: No labeled objects found. Use label='...' kwarg on individual plots.\n  warnings.warn(\"No labeled objects found. \"\nTraceback (most recent call last):\n  File \"/home/jey/memory_profiler-0.33/mprof\", line 490, in <module>\n    actions[get_action()]()\n  File \"/home/jey/memory_profiler-0.33/mprof\", line 470, in plot_action\n    leg.get_frame().set_alpha(0.5)\nAttributeError: 'NoneType' object has no attribute 'get_frame'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/94", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/94/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/94/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/94", "id": 88481251, "node_id": "MDU6SXNzdWU4ODQ4MTI1MQ==", "number": 94, "title": "Incompatible with psutil 3.0.0", "user": {"login": "csdev", "id": 1824428, "node_id": "MDQ6VXNlcjE4MjQ0Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1824428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csdev", "html_url": "https://github.com/csdev", "followers_url": "https://api.github.com/users/csdev/followers", "following_url": "https://api.github.com/users/csdev/following{/other_user}", "gists_url": "https://api.github.com/users/csdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/csdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csdev/subscriptions", "organizations_url": "https://api.github.com/users/csdev/orgs", "repos_url": "https://api.github.com/users/csdev/repos", "events_url": "https://api.github.com/users/csdev/events{/privacy}", "received_events_url": "https://api.github.com/users/csdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-15T16:53:31Z", "updated_at": "2015-06-17T16:03:08Z", "closed_at": "2015-06-17T16:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "psutil 3.0.0 was recently released. Attempting to profile code using this version of psutil results in an exception:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/bin/mprof\", line 472, in <module>\n    actions[get_action()]()\n  File \"/usr/local/bin/mprof\", line 220, in run_action\n    include_children=options.include_children, stream=f)\n  File \"/usr/local/lib/python2.7/dist-packages/memory_profiler.py\", line 243, in memory_usage\n    include_children=include_children)\n  File \"/usr/local/lib/python2.7/dist-packages/memory_profiler.py\", line 48, in _get_memory\n    mem_info = getattr(process, 'memory_info', process.get_memory_info)\nAttributeError: 'Process' object has no attribute 'get_memory_info'\n```\n\n(memory_profiler does appear to work correctly with the previous version of psutil, 2.2.1)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/91", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/91/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/91/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/91", "id": 58863318, "node_id": "MDU6SXNzdWU1ODg2MzMxOA==", "number": 91, "title": "Not able to plot the graph from \"./mplot run\"", "user": {"login": "kumarvikas2605", "id": 8200796, "node_id": "MDQ6VXNlcjgyMDA3OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8200796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumarvikas2605", "html_url": "https://github.com/kumarvikas2605", "followers_url": "https://api.github.com/users/kumarvikas2605/followers", "following_url": "https://api.github.com/users/kumarvikas2605/following{/other_user}", "gists_url": "https://api.github.com/users/kumarvikas2605/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumarvikas2605/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumarvikas2605/subscriptions", "organizations_url": "https://api.github.com/users/kumarvikas2605/orgs", "repos_url": "https://api.github.com/users/kumarvikas2605/repos", "events_url": "https://api.github.com/users/kumarvikas2605/events{/privacy}", "received_events_url": "https://api.github.com/users/kumarvikas2605/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-02-25T07:51:47Z", "updated_at": "2018-05-17T13:21:00Z", "closed_at": "2018-05-17T13:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've done \"mprof run --python <script-name>\" and post that I am trying to plot the graph(\"mprof plot\"). But I don't see any graph being plotted.\n\nvikas@host:/home/vikas/memory_profiler-0.32$ ./mprof run --python ../asl\nmprof: Sampling memory every 0.1s\n\nrunning as a Python program...\n\nvikas@host:/home/vikas/memory_profiler-0.32$ cat mprofile_20150224005550.dat\n\nCMDLINE python ../asl\n\nMEM 1.316406 1424768150.5671\n\nMEM 6.539062 1424768150.6675\n\nMEM 8.812500 1424768150.7678\n\nMEM 8.812500 1424768150.8681\n\nMEM 8.812500 1424768150.9684\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/90", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/90/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/90/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/90", "id": 54573739, "node_id": "MDU6SXNzdWU1NDU3MzczOQ==", "number": 90, "title": "Documentation is outdated (profile.timestamp)", "user": {"login": "aynroot", "id": 2797569, "node_id": "MDQ6VXNlcjI3OTc1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aynroot", "html_url": "https://github.com/aynroot", "followers_url": "https://api.github.com/users/aynroot/followers", "following_url": "https://api.github.com/users/aynroot/following{/other_user}", "gists_url": "https://api.github.com/users/aynroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/aynroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aynroot/subscriptions", "organizations_url": "https://api.github.com/users/aynroot/orgs", "repos_url": "https://api.github.com/users/aynroot/repos", "events_url": "https://api.github.com/users/aynroot/events{/privacy}", "received_events_url": "https://api.github.com/users/aynroot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-16T13:10:42Z", "updated_at": "2015-09-20T07:41:09Z", "closed_at": "2015-09-20T07:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nThe deocumentation is outdated in \"Executing external scripts\" section.\nWhen it comes to timestamps there is a piece of code under \"It is also possible to timestamp a portion of code using a context manager like this:\" line. It is not working in the last version of memory_profiler.\n\nIs there a possibility to still add custom timestamps and see plots like [here](https://github.com/scikit-learn/scikit-learn/pull/2248)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/88", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/88/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/88/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/88", "id": 44287508, "node_id": "MDU6SXNzdWU0NDI4NzUwOA==", "number": 88, "title": "Please add full license text", "user": {"login": "changwoo", "id": 47143, "node_id": "MDQ6VXNlcjQ3MTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/47143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changwoo", "html_url": "https://github.com/changwoo", "followers_url": "https://api.github.com/users/changwoo/followers", "following_url": "https://api.github.com/users/changwoo/following{/other_user}", "gists_url": "https://api.github.com/users/changwoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/changwoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changwoo/subscriptions", "organizations_url": "https://api.github.com/users/changwoo/orgs", "repos_url": "https://api.github.com/users/changwoo/repos", "events_url": "https://api.github.com/users/changwoo/events{/privacy}", "received_events_url": "https://api.github.com/users/changwoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-29T12:28:29Z", "updated_at": "2014-09-30T11:25:01Z", "closed_at": "2014-09-30T09:00:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see the license of this module as Simplified BSD in README. But I couldn't find full license text in the source tree. For making it clearer, please add full license text in a COPYING or LICENSE file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/82", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/82/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/82/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/82", "id": 34293443, "node_id": "MDU6SXNzdWUzNDI5MzQ0Mw==", "number": 82, "title": "Question:", "user": {"login": "peter1000", "id": 6168860, "node_id": "MDQ6VXNlcjYxNjg4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6168860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter1000", "html_url": "https://github.com/peter1000", "followers_url": "https://api.github.com/users/peter1000/followers", "following_url": "https://api.github.com/users/peter1000/following{/other_user}", "gists_url": "https://api.github.com/users/peter1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter1000/subscriptions", "organizations_url": "https://api.github.com/users/peter1000/orgs", "repos_url": "https://api.github.com/users/peter1000/repos", "events_url": "https://api.github.com/users/peter1000/events{/privacy}", "received_events_url": "https://api.github.com/users/peter1000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-26T09:12:02Z", "updated_at": "2014-06-06T13:33:40Z", "closed_at": "2014-06-06T13:33:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hi fabianp,\n\nI'm reusing some code of  `memory_profiler` in one of my projects.  (https://github.com/peter1000/SpeedIT no code uploaded yet)\nAs I looked through I have one question:\n\nwhat is the use of: **self.last_time** in this code part.  It doesn.t seem to be called any were\n\nhttps://github.com/fabianp/memory_profiler/blob/master/memory_profiler.py#L527\n\n```\n    def disable(self):\n        self.last_time = {}\n        sys.settrace(self._original_trace_function)\n```\n\njust a question - Thanks peter1000\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/79", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/79/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/79/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/79", "id": 34211589, "node_id": "MDU6SXNzdWUzNDIxMTU4OQ==", "number": 79, "title": "DeprecationWarning: get_memory_info() is deprecated; use memory_info() instead", "user": {"login": "oeddyo", "id": 1943146, "node_id": "MDQ6VXNlcjE5NDMxNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1943146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oeddyo", "html_url": "https://github.com/oeddyo", "followers_url": "https://api.github.com/users/oeddyo/followers", "following_url": "https://api.github.com/users/oeddyo/following{/other_user}", "gists_url": "https://api.github.com/users/oeddyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/oeddyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oeddyo/subscriptions", "organizations_url": "https://api.github.com/users/oeddyo/orgs", "repos_url": "https://api.github.com/users/oeddyo/repos", "events_url": "https://api.github.com/users/oeddyo/events{/privacy}", "received_events_url": "https://api.github.com/users/oeddyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-23T21:20:16Z", "updated_at": "2018-05-17T08:39:41Z", "closed_at": "2018-05-17T08:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Anybody found this warning? \n\nCan't even suppress by\n-W ignore\n\nI guess this is because psutil changed the function from get_memory_info to memory_info\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/77", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/77/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/77/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/77", "id": 34151275, "node_id": "MDU6SXNzdWUzNDE1MTI3NQ==", "number": 77, "title": "Negative memory in memory_profiler", "user": {"login": "MechCoder", "id": 1867024, "node_id": "MDQ6VXNlcjE4NjcwMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1867024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MechCoder", "html_url": "https://github.com/MechCoder", "followers_url": "https://api.github.com/users/MechCoder/followers", "following_url": "https://api.github.com/users/MechCoder/following{/other_user}", "gists_url": "https://api.github.com/users/MechCoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/MechCoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MechCoder/subscriptions", "organizations_url": "https://api.github.com/users/MechCoder/orgs", "repos_url": "https://api.github.com/users/MechCoder/repos", "events_url": "https://api.github.com/users/MechCoder/events{/privacy}", "received_events_url": "https://api.github.com/users/MechCoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-23T07:22:53Z", "updated_at": "2018-08-29T15:18:58Z", "closed_at": "2014-05-23T10:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. sometimes while testing it, I get negative memory. for instance\n\n```\n1119     97.7 MiB    -30.0 MiB           model.fit(X, y)\n```\n\nWhat does this mean?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/76", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/76/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/76/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/76", "id": 33992616, "node_id": "MDU6SXNzdWUzMzk5MjYxNg==", "number": 76, "title": "A %%memit cell magic would be useful", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-21T15:19:47Z", "updated_at": "2017-10-20T04:22:51Z", "closed_at": "2017-10-20T04:22:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/75", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/75/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/75/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/75", "id": 32772758, "node_id": "MDU6SXNzdWUzMjc3Mjc1OA==", "number": 75, "title": "mprof script not runnable on windows", "user": {"login": "Agrisolum", "id": 5942632, "node_id": "MDQ6VXNlcjU5NDI2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5942632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Agrisolum", "html_url": "https://github.com/Agrisolum", "followers_url": "https://api.github.com/users/Agrisolum/followers", "following_url": "https://api.github.com/users/Agrisolum/following{/other_user}", "gists_url": "https://api.github.com/users/Agrisolum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Agrisolum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Agrisolum/subscriptions", "organizations_url": "https://api.github.com/users/Agrisolum/orgs", "repos_url": "https://api.github.com/users/Agrisolum/repos", "events_url": "https://api.github.com/users/Agrisolum/events{/privacy}", "received_events_url": "https://api.github.com/users/Agrisolum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 935980791, "node_id": "MDU6TGFiZWw5MzU5ODA3OTE=", "url": "https://api.github.com/repos/pythonprofilers/memory_profiler/labels/windows", "name": "windows", "color": "2b6df2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-05-04T17:34:06Z", "updated_at": "2018-07-11T06:37:13Z", "closed_at": "2018-07-09T19:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing 64bit python 2.7 memory_profiler, there is a file 'mprof' in <python>/Scripts but this is not runnable on windows.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/73", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/73/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/73/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/73", "id": 27229948, "node_id": "MDU6SXNzdWUyNzIyOTk0OA==", "number": 73, "title": "[not a bug] memory_profiler could also record Disk I/O and Network I/O", "user": {"login": "ianozsvald", "id": 273210, "node_id": "MDQ6VXNlcjI3MzIxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianozsvald", "html_url": "https://github.com/ianozsvald", "followers_url": "https://api.github.com/users/ianozsvald/followers", "following_url": "https://api.github.com/users/ianozsvald/following{/other_user}", "gists_url": "https://api.github.com/users/ianozsvald/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianozsvald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianozsvald/subscriptions", "organizations_url": "https://api.github.com/users/ianozsvald/orgs", "repos_url": "https://api.github.com/users/ianozsvald/repos", "events_url": "https://api.github.com/users/ianozsvald/events{/privacy}", "received_events_url": "https://api.github.com/users/ianozsvald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-09T20:10:22Z", "updated_at": "2014-02-10T12:17:45Z", "closed_at": "2014-02-09T22:13:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been playing with psutil, I'm attaching two images showing disk I/O and network I/O measurement (both hacky proofs).\n\nThe disk usage graph writes 10 files of 10MB each (with flushes), we can see some odd caching behaviour which maybe needs some more work?\n\nThe network graph reads a 1.6MB file from wikipedia 5 times. \n\nBoth charts exhibit a spike at the end of their 'with' block which I don't understand.\n\nIs there interest in merging this code into the main project? Obviously this goes beyond the remit of a memory profiler! All I've done is changed a few lines with psutil in memory_profiler.py and fixed 1 line in mprof for the plotting.\n\n![disk_used](https://f.cloud.github.com/assets/273210/2120808/d429b1aa-91c5-11e3-88da-3355c1a3029e.png)\n![io_used](https://f.cloud.github.com/assets/273210/2120809/d7d5cb22-91c5-11e3-951d-ec51e2a0038d.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/71", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/71/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/71/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/71", "id": 27037507, "node_id": "MDU6SXNzdWUyNzAzNzUwNw==", "number": 71, "title": "Possible race condition with psutil", "user": {"login": "guillermo-carrasco", "id": 1574147, "node_id": "MDQ6VXNlcjE1NzQxNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1574147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guillermo-carrasco", "html_url": "https://github.com/guillermo-carrasco", "followers_url": "https://api.github.com/users/guillermo-carrasco/followers", "following_url": "https://api.github.com/users/guillermo-carrasco/following{/other_user}", "gists_url": "https://api.github.com/users/guillermo-carrasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/guillermo-carrasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guillermo-carrasco/subscriptions", "organizations_url": "https://api.github.com/users/guillermo-carrasco/orgs", "repos_url": "https://api.github.com/users/guillermo-carrasco/repos", "events_url": "https://api.github.com/users/guillermo-carrasco/events{/privacy}", "received_events_url": "https://api.github.com/users/guillermo-carrasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-02-06T09:59:23Z", "updated_at": "2017-11-12T19:12:15Z", "closed_at": "2017-01-10T13:41:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi again, \n\nI think that I may have found a possible race condition when counting the memory with psutil of a process using the `include_children` option. The problem (I think) is in this piece of code in `_get_memory`:\n\n``` python\nif include_children:\n    for p in process.get_children(recursive=True):\n        mem += p.get_memory_info()[0] / _TWO_20\n```\n\nThe method `get_children`returns a list that is used to iterate over and calculate the total memory. It may happen though that one of the child processes dies or finishes before the sum has finished, resulting on an error like this:\n\n```\nReading configuration from '/pica/h1/guilc/repos/facs/tests/data/bin/fastq_screen.conf'\nUsing 1 threads for searches\nAdding database phiX\nProcessing /pica/h1/guilc/repos/facs/tests/data/synthetic_fastq/simngs_phiX_100.fastq\nOutput file /pica/h1/guilc/repos/facs/tests/data/tmp/simngs_phiX_100_screen.txt already exists - skipping\nProcessing complete\nProcess MemTimer-2:\nTraceback (most recent call last):\n  File \"/sw/comp/python/2.7_kalkyl/lib/python2.7/multiprocessing/process.py\", line 232, in _bootstrap\n    self.run()\n  File \"/pica/h1/guilc/.virtualenvs/facs/lib/python2.7/site-packages/memory_profiler.py\", line 124, in run\n    include_children=self.include_children)\n  File \"/pica/h1/guilc/.virtualenvs/facs/lib/python2.7/site-packages/memory_profiler.py\", line 52, in _get_memory\n    mem += p.get_memory_info()[0] / _TWO_20\n  File \"/pica/h1/guilc/.virtualenvs/facs/lib/python2.7/site-packages/psutil/__init__.py\", line 758, in get_memory_info\n    return self._platform_impl.get_memory_info()\n  File \"/pica/h1/guilc/.virtualenvs/facs/lib/python2.7/site-packages/psutil/_pslinux.py\", line 470, in wrapper\n    raise NoSuchProcess(self.pid, self._process_name)\nNoSuchProcess: process no longer exists (pid=17442)\n```\n\nIt happens randomly, and can be solved encapsulating the sum on a try except statement:\n\n``` python\nif include_children:\n    for p in process.get_children(recursive=True):\n        try:\n            mem += p.get_memory_info()[0] / _TWO_20\n        except NoSuchProcess:\n            pass\n```\n\nI'm not sure that this is the best solution though... any comments/ideas? @fabianp @brainstorm\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/69", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/69/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/69/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/69", "id": 26340735, "node_id": "MDU6SXNzdWUyNjM0MDczNQ==", "number": 69, "title": "Profiling multithreaded functions doesn't work", "user": {"login": "guillermo-carrasco", "id": 1574147, "node_id": "MDQ6VXNlcjE1NzQxNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1574147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guillermo-carrasco", "html_url": "https://github.com/guillermo-carrasco", "followers_url": "https://api.github.com/users/guillermo-carrasco/followers", "following_url": "https://api.github.com/users/guillermo-carrasco/following{/other_user}", "gists_url": "https://api.github.com/users/guillermo-carrasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/guillermo-carrasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guillermo-carrasco/subscriptions", "organizations_url": "https://api.github.com/users/guillermo-carrasco/orgs", "repos_url": "https://api.github.com/users/guillermo-carrasco/repos", "events_url": "https://api.github.com/users/guillermo-carrasco/events{/privacy}", "received_events_url": "https://api.github.com/users/guillermo-carrasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-27T09:41:01Z", "updated_at": "2014-01-28T07:40:33Z", "closed_at": "2014-01-28T07:40:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI was trying to profile a function that executes a subprocess.check_call() which in  turns calls a multithreaded program, which is the actual program I want to profile.\n\nI am profiling with memory_usage, and it is always returning the same value, which is around 9MB, and I guess that is the memory used by the function that create the threads, but not by the threads all together.\n\nThe real function that I'm trying to benchmark would be [this one](https://github.com/SciLifeLab/facs/blob/master/tests/test_fastqscreen.py#L104). It is quite heavy to test, so I've written an ugly small script to reproduce the scenario. Here it is:\n\n``` python\nimport sys\nfrom multiprocessing import Pool\nfrom memory_profiler import memory_usage\n\ndef test(n):\n    l = [i for i in range(n)]\n\ndef test_multip(n, np):\n    p = Pool(processes=np)\n    results = p.map(test, [n]*np)\n\nif __name__==\"__main__\":\n    t = str(sys.argv[1])\n    n = int(sys.argv[2])\n    if t == \"test\":\n        print memory_usage((test, (n, )), max_usage=True, include_children=True)\n    else:\n        np = int(sys.argv[3])\n        print memory_usage((test_multip, (n, np, )), max_usage=True, include_children=True)\n```\n\nIf you benchmark directly the `test` function, memory_usage behaves as expected:\n\n```\n(master)guilc@milou-b:~/tests$ python multithread.py test 10000\n[9.421875]\n(master)guilc@milou-b:~/tests$ python multithread.py test 100000\n[12.765625]\n(master)guilc@milou-b:~/tests$ python multithread.py test 1000000\n[47.67578125]\n(master)guilc@milou-b:~/tests$ python multithread.py test 10000000\n[396.0625]\n(master)guilc@milou-b:~/tests$ python multithread.py test 100000000\n[3879.73828125]\n```\n\nHowever, if you test the multithreaded version, this is what happens:\n\n```\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000 1\n[9.5234375]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 100000 1\n[9.51953125]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 1000000 1\n[9.4296875]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 1\n[9.31640625]\n```\n\nAnd the same if you try with more than one thread:\n\n```\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 1\n[9.31640625]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 2\n[9.3203125]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 3\n[9.3203125]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 4\n[9.3203125]\n(master)guilc@milou-b:~/tests$ python multithread.py test_multip 10000000 5\n[9.328125]\n```\n\nI hope that this is enough to understand and reproduce the problem. If you have any suggestion/idea of how to fix this, I can help on that.\n\nThanks a lot!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/66", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/66/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/66/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/66", "id": 25057807, "node_id": "MDU6SXNzdWUyNTA1NzgwNw==", "number": 66, "title": "Calling `itervalues` and `iteritems` on dict breaks mprof in Python3", "user": {"login": "ZhanruiLiang", "id": 742833, "node_id": "MDQ6VXNlcjc0MjgzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/742833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhanruiLiang", "html_url": "https://github.com/ZhanruiLiang", "followers_url": "https://api.github.com/users/ZhanruiLiang/followers", "following_url": "https://api.github.com/users/ZhanruiLiang/following{/other_user}", "gists_url": "https://api.github.com/users/ZhanruiLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhanruiLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhanruiLiang/subscriptions", "organizations_url": "https://api.github.com/users/ZhanruiLiang/orgs", "repos_url": "https://api.github.com/users/ZhanruiLiang/repos", "events_url": "https://api.github.com/users/ZhanruiLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhanruiLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-01-04T18:27:51Z", "updated_at": "2017-10-20T04:23:23Z", "closed_at": "2017-10-20T04:23:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These `iter*` method have been removed and generator become default behaviour in Python 3.\n\n``` sh\n% mprof plot\nTraceback (most recent call last):\n  File \"/usr/bin/mprof\", line 467, in <module>\n    actions[get_action()]()\n  File \"/usr/bin/mprof\", line 436, in plot_action\n    mprofile = plot_file(filename, index=n, timestamps=timestamps)\n  File \"/usr/bin/mprof\", line 338, in plot_file\n    for values in ts.itervalues():\nAttributeError: 'dict' object has no attribute 'itervalues'\n```\n\nThe Python version is 3.3.3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/61", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/61/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/61/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/61", "id": 21547854, "node_id": "MDU6SXNzdWUyMTU0Nzg1NA==", "number": 61, "title": "\"mprof plot\" with labels does not like spaces in the label", "user": {"login": "ianozsvald", "id": 273210, "node_id": "MDQ6VXNlcjI3MzIxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianozsvald", "html_url": "https://github.com/ianozsvald", "followers_url": "https://api.github.com/users/ianozsvald/followers", "following_url": "https://api.github.com/users/ianozsvald/following{/other_user}", "gists_url": "https://api.github.com/users/ianozsvald/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianozsvald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianozsvald/subscriptions", "organizations_url": "https://api.github.com/users/ianozsvald/orgs", "repos_url": "https://api.github.com/users/ianozsvald/repos", "events_url": "https://api.github.com/users/ianozsvald/events{/privacy}", "received_events_url": "https://api.github.com/users/ianozsvald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-24T20:02:25Z", "updated_at": "2017-10-20T04:23:38Z", "closed_at": "2017-10-20T04:23:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`mprof` can use a context manager to place a label. If the label contains a space e.g. \"my label\" then a `ValueError` is raised as shown below. If the space is removed (e.g. \"my_label\") then `mprof plot` displays the label.\n\nIt might be easier to make a note in the README stating that spaces aren't allowed if this disturbs your parsing code! Or catching the `ValueError` and hinting that spaces aren't allowed (to give the user a hint).\n\n```\n$ mprof plot\nTraceback (most recent call last):\n  File \"/home/ian/workspace/virtualenvs/high_performance_python_orielly/shared_github/raw_code/ian/env/bin/mprof\", line 467, in <module>\n    actions[get_action()]()\n  File \"/home/ian/workspace/virtualenvs/high_performance_python_orielly/shared_github/raw_code/ian/env/bin/mprof\", line 436, in plot_action\n    mprofile = plot_file(filename, index=n, timestamps=timestamps)\n  File \"/home/ian/workspace/virtualenvs/high_performance_python_orielly/shared_github/raw_code/ian/env/bin/mprof\", line 322, in plot_file\n    mprofile = read_mprofile_file(filename)\n  File \"/home/ian/workspace/virtualenvs/high_performance_python_orielly/shared_github/raw_code/ian/env/bin/mprof\", line 299, in read_mprofile_file\n    ts.append([float(start), float(end),\nValueError: could not convert string to float: list\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/55", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/55/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/55/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/55", "id": 17212456, "node_id": "MDU6SXNzdWUxNzIxMjQ1Ng==", "number": 55, "title": "Memory reported as MB should be MiB", "user": {"login": "ovillellas", "id": 1890137, "node_id": "MDQ6VXNlcjE4OTAxMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1890137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ovillellas", "html_url": "https://github.com/ovillellas", "followers_url": "https://api.github.com/users/ovillellas/followers", "following_url": "https://api.github.com/users/ovillellas/following{/other_user}", "gists_url": "https://api.github.com/users/ovillellas/gists{/gist_id}", "starred_url": "https://api.github.com/users/ovillellas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ovillellas/subscriptions", "organizations_url": "https://api.github.com/users/ovillellas/orgs", "repos_url": "https://api.github.com/users/ovillellas/repos", "events_url": "https://api.github.com/users/ovillellas/events{/privacy}", "received_events_url": "https://api.github.com/users/ovillellas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-25T13:55:39Z", "updated_at": "2013-08-05T12:17:21Z", "closed_at": "2013-08-05T12:17:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know, this is pretty much aesthetic. \n\nAnyways, very useful little profiler. Allowed me to plot some great graphs about memory usage of some functions. Thank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/52", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/52/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/52/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/52", "id": 16685817, "node_id": "MDU6SXNzdWUxNjY4NTgxNw==", "number": 52, "title": "Reported memory usage is sometimes wrong.", "user": {"login": "pgervais", "id": 3764624, "node_id": "MDQ6VXNlcjM3NjQ2MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgervais", "html_url": "https://github.com/pgervais", "followers_url": "https://api.github.com/users/pgervais/followers", "following_url": "https://api.github.com/users/pgervais/following{/other_user}", "gists_url": "https://api.github.com/users/pgervais/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgervais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgervais/subscriptions", "organizations_url": "https://api.github.com/users/pgervais/orgs", "repos_url": "https://api.github.com/users/pgervais/repos", "events_url": "https://api.github.com/users/pgervais/events{/privacy}", "received_events_url": "https://api.github.com/users/pgervais/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/milestones/1", "html_url": "https://github.com/pythonprofilers/memory_profiler/milestone/1", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/milestones/1/labels", "id": 334511, "node_id": "MDk6TWlsZXN0b25lMzM0NTEx", "number": 1, "title": "0.28", "description": "", "creator": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 2, "state": "open", "created_at": "2013-05-15T15:43:10Z", "updated_at": "2017-10-20T04:23:48Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2013-07-12T15:02:12Z", "updated_at": "2013-07-16T12:17:21Z", "closed_at": "2013-07-16T12:17:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In some cases, memory is not reclaimed because of memory profiler. Here's a small example exhibiting the problem:\n\n``` python\nLine #    Mem usage    Increment   Line Contents\n================================================\n     6                             @profile\n     7    20.254 MB     0.000 MB   def random_array(shape):\n     8    43.148 MB    22.895 MB       arr1 = np.random.randn(*shape)\n     9   138.320 MB    95.172 MB       arr = scipy.signal.detrend(arr1, axis=1)\n    10   138.320 MB     0.000 MB       del arr1\n    11   138.320 MB     0.000 MB       gc.collect()\n    12                             \n    13   138.320 MB     0.000 MB       col_mean = np.mean(arr, axis=1)\n    14   138.320 MB     0.000 MB       np.testing.assert_array_less(abs(col_mean), 1e-15)\n    15   138.320 MB     0.000 MB       return arr\n```\n\n`arr1` is a numpy array weighting 22.9MB. Detrending creates an array that has exactly the same size (`arr`), but memory usage increases by 95MB, and does not go down, even after line 10.\n\nI have checked that this is a side-effect of the memory_profiler module, by monitoring global memory usage, without using memory_profiler at all. Memory usage does raise to 96MB during execution of scipy.signal.detrend, but also does decrease just after it execution.\n\nmemory_profiler might be keeping a reference to the `arr1` array somehow, but I wasn't able to find how even with guppy/heapy (which complains somehow when memory_profiler is loaded). \n\nThis seems to me like a tricky issue, but it is really important, since reported memory usage can be completely different than the value obtained without profiling.\n\nEDIT: here is a snapshot of the memory usage graph.\n\n![example](https://f.cloud.github.com/assets/3764624/788839/ec6da73e-eb04-11e2-85b9-a83976f50c9f.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/48", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/48/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/48/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/48", "id": 14566757, "node_id": "MDU6SXNzdWUxNDU2Njc1Nw==", "number": 48, "title": "Problem importing modules ", "user": {"login": "keesjandevries", "id": 1029671, "node_id": "MDQ6VXNlcjEwMjk2NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1029671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keesjandevries", "html_url": "https://github.com/keesjandevries", "followers_url": "https://api.github.com/users/keesjandevries/followers", "following_url": "https://api.github.com/users/keesjandevries/following{/other_user}", "gists_url": "https://api.github.com/users/keesjandevries/gists{/gist_id}", "starred_url": "https://api.github.com/users/keesjandevries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keesjandevries/subscriptions", "organizations_url": "https://api.github.com/users/keesjandevries/orgs", "repos_url": "https://api.github.com/users/keesjandevries/repos", "events_url": "https://api.github.com/users/keesjandevries/events{/privacy}", "received_events_url": "https://api.github.com/users/keesjandevries/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-21T13:18:29Z", "updated_at": "2013-07-22T14:53:45Z", "closed_at": "2013-07-22T14:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please have a look at my question at [stack_overflow](http://stackoverflow.com/questions/16671008/cannot-import-module-when-using-memory-profiler)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/47", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/47/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/47/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/47", "id": 14451974, "node_id": "MDU6SXNzdWUxNDQ1MTk3NA==", "number": 47, "title": "Memory usage does not work with class methods?", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/milestones/1", "html_url": "https://github.com/pythonprofilers/memory_profiler/milestone/1", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/milestones/1/labels", "id": 334511, "node_id": "MDk6TWlsZXN0b25lMzM0NTEx", "number": 1, "title": "0.28", "description": "", "creator": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 2, "state": "open", "created_at": "2013-05-15T15:43:10Z", "updated_at": "2017-10-20T04:23:48Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2013-05-17T13:23:59Z", "updated_at": "2017-10-20T04:23:48Z", "closed_at": "2017-10-20T04:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to profile time and memory usage of class method. \nWhen I try to use `partial` from `functools` I got this error:\n\n```\nFile \"/usr/lib/python2.7/site-packages/memory_profiler.py\", line 126, in memory_usage\n  aspec = inspect.getargspec(f)\nFile \"/usr/lib64/python2.7/inspect.py\", line 815, in getargspec\n  raise TypeError('{!r} is not a Python function'.format(func))\nTypeError: <functools.partial object at 0x252da48> is not a Python function\n```\n\nBy the way exactly the same approach works fine with `timeit` function.\n\nWhen I try to use `lambda` as was I got this error:\n\n```\nFile \"/usr/lib/python2.7/site-packages/memory_profiler.py\", line 141, in memory_usage\n  ret = parent_conn.recv()\nIOError: [Errno 4] Interrupted system call\n```\n\nHow can I handle class methods with memory_profiler? Are there any (even dirty) ways?\n\nI asked this question on SO: http://stackoverflow.com/questions/16593246/how-to-use-memory-profiler-python-module-with-class-methods\n\nUPD: fixed broken link to SO\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/44", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/44/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/44/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/44", "id": 13932845, "node_id": "MDU6SXNzdWUxMzkzMjg0NQ==", "number": 44, "title": "import module as name doesn' t work with Python 3", "user": {"login": "Reinis", "id": 1250117, "node_id": "MDQ6VXNlcjEyNTAxMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1250117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reinis", "html_url": "https://github.com/Reinis", "followers_url": "https://api.github.com/users/Reinis/followers", "following_url": "https://api.github.com/users/Reinis/following{/other_user}", "gists_url": "https://api.github.com/users/Reinis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reinis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reinis/subscriptions", "organizations_url": "https://api.github.com/users/Reinis/orgs", "repos_url": "https://api.github.com/users/Reinis/repos", "events_url": "https://api.github.com/users/Reinis/events{/privacy}", "received_events_url": "https://api.github.com/users/Reinis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-03T12:53:35Z", "updated_at": "2013-05-05T20:37:36Z", "closed_at": "2013-05-05T20:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is an example script:\n\n```\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport math as m\n\n@profile\ndef f():\n    o = m.sqrt(2013)\n    return o\n\nprint(f())\n```\n\nAnd here output with Python 2:\n\n```\n~$ python2 -m memory_profiler ./tmpr.py \n44.8664685483\nFilename: ./tmpr.py\n\nLine #    Mem usage    Increment   Line Contents\n================================================\n     7                             @profile\n     8     9.668 MB     0.000 MB   def f():\n     9     9.676 MB     0.008 MB       o = m.sqrt(2013)\n    10     9.676 MB     0.000 MB       return o\n\n```\n\nAnd here with Python 3:\n\n```\n~$ python3 -m memory_profiler ./tmpr.py \nTraceback (most recent call last):\n  File \"/usr/lib64/python3.2/runpy.py\", line 161, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib64/python3.2/runpy.py\", line 74, in _run_code\n    exec(code, run_globals)\n  File \"/usr/lib64/python3.2/site-packages/memory_profiler.py\", line 615, in <module>\n    ns, copy(globals()))\n  File \"./tmpr.py\", line 13, in <module>\n    print(f())\n  File \"/usr/lib64/python3.2/site-packages/memory_profiler.py\", line 576, in wrapper\n    val = prof(func)(*args, **kwargs)\n  File \"/usr/lib64/python3.2/site-packages/memory_profiler.py\", line 229, in f\n    result = func(*args, **kwds)\n  File \"./tmpr.py\", line 9, in f\n    o = m.sqrt(2013)\nNameError: global name 'm' is not defined\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/43", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/43/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/43/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/43", "id": 12934495, "node_id": "MDU6SXNzdWUxMjkzNDQ5NQ==", "number": 43, "title": "Does not remove itself from sys.argv", "user": {"login": "zenzic64", "id": 4095465, "node_id": "MDQ6VXNlcjQwOTU0NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4095465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenzic64", "html_url": "https://github.com/zenzic64", "followers_url": "https://api.github.com/users/zenzic64/followers", "following_url": "https://api.github.com/users/zenzic64/following{/other_user}", "gists_url": "https://api.github.com/users/zenzic64/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenzic64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenzic64/subscriptions", "organizations_url": "https://api.github.com/users/zenzic64/orgs", "repos_url": "https://api.github.com/users/zenzic64/repos", "events_url": "https://api.github.com/users/zenzic64/events{/privacy}", "received_events_url": "https://api.github.com/users/zenzic64/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-08T17:27:44Z", "updated_at": "2013-04-22T13:33:23Z", "closed_at": "2013-04-21T14:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When invoking via command line with -m option, memory_profiler does not remove itself from sys.argv, so it messes up the profiled program's argument parsing:\n\n```\n$ cat mp.py\nimport sys\nprint sys.argv\n\n$ python mp.py --foo\n['mp.py', '--foo']\n\n$ python -m memory_profiler mp.py --foo\n['/home/jneely/dev/env/betl/lib/python2.6/site-packages/memory_profiler.py', 'mp.py', '--foo']\n```\n\nBy contrast:\n\n```\n$ python -m pdb mp.py --foo\n> /home/jneely/tmp/mp.py(1)<module>()\n-> import sys\n(Pdb) c\n['mp.py', '--foo']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/41", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/41/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/41/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/41", "id": 12562909, "node_id": "MDU6SXNzdWUxMjU2MjkwOQ==", "number": 41, "title": "use resource library?", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-28T12:48:11Z", "updated_at": "2013-05-05T19:59:26Z", "closed_at": "2013-05-05T19:59:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "would it be possible to use the resource (http://docs.python.org/2/library/resource.html#resource-usage) library instead of psutils ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/39", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/39/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/39/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/39", "id": 11767981, "node_id": "MDU6SXNzdWUxMTc2Nzk4MQ==", "number": 39, "title": "%memit docstring is outdated", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-03-07T16:45:05Z", "updated_at": "2013-03-29T12:33:50Z", "closed_at": "2013-03-28T13:21:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\"i\" argument is no longer used; \"r\" argument is parsed but not actually used for anything.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/36", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/36/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/36/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/36", "id": 11729303, "node_id": "MDU6SXNzdWUxMTcyOTMwMw==", "number": 36, "title": "max_iter = float('inf') looks wrong", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-06T19:46:47Z", "updated_at": "2013-03-07T10:36:24Z", "closed_at": "2013-03-07T10:35:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "it is used in memory_usage function like this:\n\n```\n    if timeout is not None:\n        max_iter = int(timeout / interval)\n    elif isinstance(proc, int):\n        # external process and no timeout\n        max_iter = 1\n    else:\n        # for a Python function wait until it finishes\n        max_iter = float('inf') # <--------------------------\n\n    if isinstance(proc, (list, tuple)):\n        # ... (snip)\n    else:\n        # external process\n        if proc == -1:\n            proc = os.getpid()\n        if max_iter == -1:\n            max_iter = 1\n        for _ in range(max_iter):   # <----------------\n            ret.append(_get_memory(proc))\n            time.sleep(interval)\n    return ret\n```\n\nrange(float('inf')) is an error, and max_iter is not used for anything else here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/34", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/34/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/34/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/34", "id": 11727261, "node_id": "MDU6SXNzdWUxMTcyNzI2MQ==", "number": 34, "title": "%memit example sometimes doesn't work", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-06T18:59:42Z", "updated_at": "2013-07-23T11:57:58Z", "closed_at": "2013-07-23T11:57:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nIn [2]: import numpy as np\n\nIn [3]: %memit np.zeros(1e2)\nmaximum of 1: 28.300781 MB per loop\n\nIn [4]: %memit np.zeros(1e2)\nmaximum of 1: 28.320312 MB per loop\n\nIn [5]: %memit np.zeros(1e2)\nmaximum of 1: 28.320312 MB per loop\n\nIn [6]: %memit np.zeros(1e4)\nmaximum of 1: 28.328125 MB per loop\n\nIn [7]: %memit np.zeros(1e7)\nmaximum of 1: 28.406250 MB per loop\n\nIn [8]: %memit np.zeros(1e7)\nmaximum of 1: 104.710938 MB per loop\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/30", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/30/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/30/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/30", "id": 9946005, "node_id": "MDU6SXNzdWU5OTQ2MDA1", "number": 30, "title": "Add support for Control-C", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-14T15:45:13Z", "updated_at": "2013-07-23T10:56:00Z", "closed_at": "2013-07-23T10:56:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Be able to stop the script with C-c, yet get output of what has been run sofar\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/27", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/27/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/27/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/27", "id": 8153966, "node_id": "MDU6SXNzdWU4MTUzOTY2", "number": 27, "title": "memory_profiler.py: error: no such option", "user": {"login": "amcnabb", "id": 1513168, "node_id": "MDQ6VXNlcjE1MTMxNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1513168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amcnabb", "html_url": "https://github.com/amcnabb", "followers_url": "https://api.github.com/users/amcnabb/followers", "following_url": "https://api.github.com/users/amcnabb/following{/other_user}", "gists_url": "https://api.github.com/users/amcnabb/gists{/gist_id}", "starred_url": "https://api.github.com/users/amcnabb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amcnabb/subscriptions", "organizations_url": "https://api.github.com/users/amcnabb/orgs", "repos_url": "https://api.github.com/users/amcnabb/repos", "events_url": "https://api.github.com/users/amcnabb/events{/privacy}", "received_events_url": "https://api.github.com/users/amcnabb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-06T21:58:51Z", "updated_at": "2012-11-18T11:00:17Z", "closed_at": "2012-11-18T11:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `python -m memory_profiler script_file.py --some-args`, memory_profile assumes that `--some-args` is intended for it rather than for `script_file.py`. This is easy to fix by adding the following single line immediately after creating the OptionParser:\n\n```\nparser.disable_interspersed_args()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/25", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/25/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/25/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/25", "id": 7298729, "node_id": "MDU6SXNzdWU3Mjk4NzI5", "number": 25, "title": "use ipython extension mechanism", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-10-02T16:51:59Z", "updated_at": "2013-02-18T19:54:43Z", "closed_at": "2013-02-18T19:54:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "http://ipython.org/ipython-doc/stable/config/extensions/index.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/24", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/24/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/24/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/24", "id": 6718183, "node_id": "MDU6SXNzdWU2NzE4MTgz", "number": 24, "title": "--pdb-mmem failures", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-09-07T16:25:09Z", "updated_at": "2012-09-07T20:10:58Z", "closed_at": "2012-09-07T20:10:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "sample script:\n\n```\n@profile\ndef f():\n    import numpy as np\n    print \"about to allocate\"\n    a = np.ones(1e8)\n    print \"done\"\n\nf()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/23", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/23/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/23/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/23", "id": 6716904, "node_id": "MDU6SXNzdWU2NzE2OTA0", "number": 23, "title": "UnboundLocalError", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-09-07T15:32:30Z", "updated_at": "2012-09-07T20:14:53Z", "closed_at": "2012-09-07T20:14:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "this should work \n\n```\n(Pdb) import memory_profiler\n(Pdb) memory_profiler.memory_usage()\n*** UnboundLocalError: local variable 'num' referenced before assignment\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/21", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/21/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/21/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/21", "id": 6712836, "node_id": "MDU6SXNzdWU2NzEyODM2", "number": 21, "title": "Truncation issue in _get_memory", "user": {"login": "arjoly", "id": 1274722, "node_id": "MDQ6VXNlcjEyNzQ3MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1274722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arjoly", "html_url": "https://github.com/arjoly", "followers_url": "https://api.github.com/users/arjoly/followers", "following_url": "https://api.github.com/users/arjoly/following{/other_user}", "gists_url": "https://api.github.com/users/arjoly/gists{/gist_id}", "starred_url": "https://api.github.com/users/arjoly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arjoly/subscriptions", "organizations_url": "https://api.github.com/users/arjoly/orgs", "repos_url": "https://api.github.com/users/arjoly/repos", "events_url": "https://api.github.com/users/arjoly/events{/privacy}", "received_events_url": "https://api.github.com/users/arjoly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-07T12:27:59Z", "updated_at": "2012-09-07T16:17:17Z", "closed_at": "2012-09-07T16:17:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWhen i was reading your code, I found a small truncation issue\nin _get_memory() (psutil version, i didn't check the other).\n\nHere a gist to reproduce it:\nhttps://gist.github.com/3665731\n\nIt is due to the integer division in python 2.x.\nIt seems that it was not intended when I saw  the float(), so I report it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/20", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/20/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/20/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/20", "id": 6470834, "node_id": "MDU6SXNzdWU2NDcwODM0", "number": 20, "title": "Add command-line option to profile without modifying source code", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-08-27T10:45:29Z", "updated_at": "2014-05-25T07:48:40Z", "closed_at": "2014-05-25T07:48:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Might be possible with sys.settrace and triggering the call event on that function, and then monkey-patching it just before it is called\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/16", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/16/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/16/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/16", "id": 5505662, "node_id": "MDU6SXNzdWU1NTA1NjYy", "number": 16, "title": "Incorrect output for first line of a function call", "user": {"login": "jni", "id": 492549, "node_id": "MDQ6VXNlcjQ5MjU0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/492549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jni", "html_url": "https://github.com/jni", "followers_url": "https://api.github.com/users/jni/followers", "following_url": "https://api.github.com/users/jni/following{/other_user}", "gists_url": "https://api.github.com/users/jni/gists{/gist_id}", "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jni/subscriptions", "organizations_url": "https://api.github.com/users/jni/orgs", "repos_url": "https://api.github.com/users/jni/repos", "events_url": "https://api.github.com/users/jni/events{/privacy}", "received_events_url": "https://api.github.com/users/jni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2012-07-09T18:45:52Z", "updated_at": "2012-07-12T18:11:45Z", "closed_at": "2012-07-12T07:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "memory_profiler does not seem to correctly catch the memory allocation for the first line of a function.\n\nHere's two versions of a script (I was trying to illustrate the failings of sys.getsizeof), differing only in an initial `print 'hello world'` statement:\n\n```\n$ cat ~/tmp/lists.py\n```\n\n``` python\nimport random\nimport sys\nimport numpy as np\n\n@profile\ndef test_random_mem_usage():\n    c = [np.zeros(50000) for x in range(1000)]\n    print sys.getsizeof(c)\n    print sum(map(len, c))\n    print sum(map(sys.getsizeof, c))\n\nif __name__ == '__main__':\n    test_random_mem_usage()\n```\n\nand\n\n```\n$ cat ~/tmp/lists2.py\n```\n\n``` python\nimport random\nimport sys\nimport numpy as np\n\n@profile\ndef test_random_mem_usage():\n    print 'hello world'\n    c = [np.zeros(50000) for x in range(1000)]\n    print sys.getsizeof(c)\n    print sum(map(len, c))\n    print sum(map(sys.getsizeof, c))\n\nif __name__ == '__main__':\n    test_random_mem_usage()\n```\n\nCompare the outputs:\n\n```\n$ python -m memory_profiler ~/tmp/lists.py\n9032\n50000000\n80000\nLine #    Mem usage  Increment   Line Contents\n==============================================\n     5                           @profile\n     6    399.39 MB    0.00 MB   def test_random_mem_usage():\n     7    399.39 MB    0.00 MB       c = [np.zeros(50000) for x in range(1000)]\n     8    399.39 MB    0.00 MB       print sys.getsizeof(c)\n     9    399.40 MB    0.01 MB       print sum(map(len, c))\n    10    399.40 MB    0.00 MB       print sum(map(sys.getsizeof, c))\n```\n\n```\n$ python -m memory_profiler ~/tmp/lists2.py\nhello world\n9032\n50000000\n80000\nLine #    Mem usage  Increment   Line Contents\n==============================================\n     5                           @profile\n     6     16.43 MB    0.00 MB   def test_random_mem_usage():\n     7     16.43 MB    0.00 MB       print 'hello world'\n     8    399.39 MB  382.96 MB       c = [np.zeros(50000) for x in range(1000)]\n     9    399.39 MB    0.00 MB       print sys.getsizeof(c)\n    10    399.40 MB    0.01 MB       print sum(map(len, c))\n    11    399.40 MB    0.00 MB       print sum(map(sys.getsizeof, c))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/14", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/14/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/14/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/14", "id": 5427738, "node_id": "MDU6SXNzdWU1NDI3NzM4", "number": 14, "title": "Fix python3 support", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-07-04T13:07:14Z", "updated_at": "2012-08-04T23:04:52Z", "closed_at": "2012-08-04T23:04:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See comments in 167641e0480616e5037bea9dd42819bac8482104\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/12", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/12/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/12/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/12", "id": 5260066, "node_id": "MDU6SXNzdWU1MjYwMDY2", "number": 12, "title": "Error when profiling pandas.io.parsers.read_csv", "user": {"login": "ihat", "id": 457571, "node_id": "MDQ6VXNlcjQ1NzU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/457571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihat", "html_url": "https://github.com/ihat", "followers_url": "https://api.github.com/users/ihat/followers", "following_url": "https://api.github.com/users/ihat/following{/other_user}", "gists_url": "https://api.github.com/users/ihat/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihat/subscriptions", "organizations_url": "https://api.github.com/users/ihat/orgs", "repos_url": "https://api.github.com/users/ihat/repos", "events_url": "https://api.github.com/users/ihat/events{/privacy}", "received_events_url": "https://api.github.com/users/ihat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2012-06-25T21:47:37Z", "updated_at": "2012-07-17T08:04:47Z", "closed_at": "2012-07-17T08:04:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a simple script using read_csv from `pandas.io.parsers`:\n\n``` py\nfrom pandas.io.parsers import read_csv\n\n@profile\ndef test_read_csv():\n  a = read_csv('dummy.txt')\n  return a\n\n\nif __name__ == '__main__':\n  test_read_csv()\n```\n\nBut when I call `python -m memory_profiler profile_read_csv`, the following error appears:\n\n```\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/Library/Python/2.7/site-packages/memory_profiler.py\", line 272, in <module>\n    execfile(__file__, locals(), locals())\n  File \"profile_read_csv.py\", line 10, in <module>\n    test_read_csv()\n  File \"/Library/Python/2.7/site-packages/memory_profiler.py\", line 158, in f\n    result = func(*args, **kwds)\n  File \"profile_read_csv.py\", line 5, in test_read_csv\n    a = read_csv('dummy.txt')\n  File \"/Library/Python/2.7/site-packages/pandas-0.7.3-py2.7-macosx-10.7-intel.egg/pandas/io/parsers.py\", line 187, in read_csv\n    return _read(TextParser, filepath_or_buffer, kwds)\n  File \"/Library/Python/2.7/site-packages/pandas-0.7.3-py2.7-macosx-10.7-intel.egg/pandas/io/parsers.py\", line 153, in _read\n    parser = cls(f, **kwds)\nTypeError: __init__() got an unexpected keyword argument 'kwds'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/10", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/10/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/10/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/10", "id": 4601503, "node_id": "MDU6SXNzdWU0NjAxNTAz", "number": 10, "title": "fix sys.argv", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-05-16T10:12:01Z", "updated_at": "2012-05-16T11:50:09Z", "closed_at": "2012-05-16T11:50:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "does not correctly pass arguments into executed script\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/8", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/8/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/8/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/8", "id": 4579163, "node_id": "MDU6SXNzdWU0NTc5MTYz", "number": 8, "title": "strange behavior for growing dictionaries/tuples", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-05-15T08:01:00Z", "updated_at": "2012-08-27T08:30:31Z", "closed_at": "2012-08-27T08:30:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "it seems strange the allocation of 2.05MB on line 6, it should be a small allocation and the 2.05 allocation should be on the next line (on a for loop we take the max). Probably lines are messed up\n\n```\n\u2514\u2500[$] python memory_profiler.py examples/example_loop.py\nLine #    Mem usage  Increment   Line Contents\n==============================================\n     4                           @profile\n     5      7.56 MB    0.00 MB   def my_func_dict():\n     6      9.61 MB    2.05 MB       a = {}\n     7      9.61 MB    0.00 MB       for i in range(10000):\n     8      9.61 MB    0.00 MB           a[i] =  i + 1\n     9      9.61 MB    0.00 MB       return\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/7", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/7/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/7/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/7", "id": 4579097, "node_id": "MDU6SXNzdWU0NTc5MDk3", "number": 7, "title": "ignores last line", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-05-15T07:55:43Z", "updated_at": "2018-01-15T16:43:55Z", "closed_at": "2018-01-15T16:43:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "sometimes there's no measurement for the last line (maybe when there's no return statement?)\n\n```\n\n     4                           @profile\n     5      7.58 MB    0.00 MB   def my_func_dict():\n     6      9.62 MB    2.05 MB       a = {}\n     7      9.62 MB    0.00 MB       for i in range(10000):\n     8                                   a[i] =  i + 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/3", "repository_url": "https://api.github.com/repos/pythonprofilers/memory_profiler", "labels_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/3/comments", "events_url": "https://api.github.com/repos/pythonprofilers/memory_profiler/issues/3/events", "html_url": "https://github.com/pythonprofilers/memory_profiler/issues/3", "id": 4551582, "node_id": "MDU6SXNzdWU0NTUxNTgy", "number": 3, "title": "Python3 support", "user": {"login": "fabianp", "id": 277639, "node_id": "MDQ6VXNlcjI3NzYzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/277639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianp", "html_url": "https://github.com/fabianp", "followers_url": "https://api.github.com/users/fabianp/followers", "following_url": "https://api.github.com/users/fabianp/following{/other_user}", "gists_url": "https://api.github.com/users/fabianp/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianp/subscriptions", "organizations_url": "https://api.github.com/users/fabianp/orgs", "repos_url": "https://api.github.com/users/fabianp/repos", "events_url": "https://api.github.com/users/fabianp/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-05-13T08:46:07Z", "updated_at": "2019-03-28T00:25:46Z", "closed_at": "2012-05-14T12:20:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "memory_profiler doesn't print memory usage with python3 (no error messages either), just empty output.\n", "performed_via_github_app": null, "score": 1.0}]}