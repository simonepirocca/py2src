{"total_count": 76, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/261", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/261/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/261/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/261", "id": 677777584, "node_id": "MDU6SXNzdWU2Nzc3Nzc1ODQ=", "number": 261, "title": "Statement in README.rst true about support only for Python 2 to 2.4.0?", "user": {"login": "AndHam89", "id": 2499906, "node_id": "MDQ6VXNlcjI0OTk5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2499906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndHam89", "html_url": "https://github.com/AndHam89", "followers_url": "https://api.github.com/users/AndHam89/followers", "following_url": "https://api.github.com/users/AndHam89/following{/other_user}", "gists_url": "https://api.github.com/users/AndHam89/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndHam89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndHam89/subscriptions", "organizations_url": "https://api.github.com/users/AndHam89/orgs", "repos_url": "https://api.github.com/users/AndHam89/repos", "events_url": "https://api.github.com/users/AndHam89/events{/privacy}", "received_events_url": "https://api.github.com/users/AndHam89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}, {"id": 812774681, "node_id": "MDU6TGFiZWw4MTI3NzQ2ODE=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/documenation", "name": "documenation", "color": "83e27c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-08-12T15:18:33Z", "updated_at": "2020-08-15T12:10:22Z", "closed_at": "2020-08-13T08:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In README.rst it states that\r\n\r\n> The latest version to support Python 2 is 2.4.0\r\n\r\nis only supported. Is this simply an oversight of an not up to date information or is this true?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/256", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/256/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/256/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/256", "id": 666503399, "node_id": "MDU6SXNzdWU2NjY1MDMzOTk=", "number": 256, "title": "Django sending Internal Server Error mails for storage checks", "user": {"login": "jessemorton", "id": 914094, "node_id": "MDQ6VXNlcjkxNDA5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/914094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessemorton", "html_url": "https://github.com/jessemorton", "followers_url": "https://api.github.com/users/jessemorton/followers", "following_url": "https://api.github.com/users/jessemorton/following{/other_user}", "gists_url": "https://api.github.com/users/jessemorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessemorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessemorton/subscriptions", "organizations_url": "https://api.github.com/users/jessemorton/orgs", "repos_url": "https://api.github.com/users/jessemorton/repos", "events_url": "https://api.github.com/users/jessemorton/events{/privacy}", "received_events_url": "https://api.github.com/users/jessemorton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-27T18:39:49Z", "updated_at": "2020-08-03T09:34:33Z", "closed_at": "2020-07-28T07:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have an issue similar to #202 but having to do with storage checks. Our app uses S3Boto3Storage and generally our health checks are successful, but a couple times a day since upgrading to Django 2.2 I've been getting error emails. We didn't get these when on Django 2.0.\r\n\r\nIt seems to have to do with `DefaultFileStorageHealthCheck` rather than `S3Boto3StorageHealthCheck`. Do you recommend just disabling `DefaultFileStorageHealthCheck` if we're using `S3Boto3StorageHealthCheck`? That doesn't resolve the root issue, though for our purposes it'd probably be fine. Any other thoughts/suggestions?\r\n\r\n```\r\nunavailable: Unknown exception\r\n\r\nServiceUnavailable\r\nunavailable: Unknown exception\r\n\r\nDjango Version: 2.2.14\r\nPython Executable: /opt/python/run/venv/bin/python3\r\nPython Version: 3.6.10\r\n\r\n...\r\n\r\nTraceback:\r\n\r\nFile \"/opt/python/run/venv/local/lib/python3.6/site-packages/health_check/storage/backends.py\" in check_status\r\n  70.             self.check_delete(file_name)\r\n\r\nFile \"/opt/python/run/venv/local/lib/python3.6/site-packages/health_check/storage/backends.py\" in check_delete\r\n  62.             raise ServiceUnavailable('File was not deleted')\r\n\r\nDuring handling of the above exception (unavailable: File was not deleted), another exception occurred:\r\n\r\nFile \"/opt/python/run/venv/local/lib/python3.6/site-packages/health_check/backends.py\" in run_check\r\n  30.             self.check_status()\r\n\r\nFile \"/opt/python/run/venv/local/lib/python3.6/site-packages/health_check/storage/backends.py\" in check_status\r\n  73.             raise ServiceUnavailable('Unknown exception')\r\n\r\nException Type: ServiceUnavailable\r\nException Value: unavailable: Unknown exception\r\nRequest data not supplied\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/248", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/248/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/248/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/248", "id": 616082707, "node_id": "MDU6SXNzdWU2MTYwODI3MDc=", "number": 248, "title": "Version 3.12.2 can't be installed from pypi", "user": {"login": "antnieszka", "id": 5757700, "node_id": "MDQ6VXNlcjU3NTc3MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5757700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antnieszka", "html_url": "https://github.com/antnieszka", "followers_url": "https://api.github.com/users/antnieszka/followers", "following_url": "https://api.github.com/users/antnieszka/following{/other_user}", "gists_url": "https://api.github.com/users/antnieszka/gists{/gist_id}", "starred_url": "https://api.github.com/users/antnieszka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antnieszka/subscriptions", "organizations_url": "https://api.github.com/users/antnieszka/orgs", "repos_url": "https://api.github.com/users/antnieszka/repos", "events_url": "https://api.github.com/users/antnieszka/events{/privacy}", "received_events_url": "https://api.github.com/users/antnieszka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-11T18:16:35Z", "updated_at": "2020-05-25T10:57:22Z", "closed_at": "2020-05-23T13:25:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI noticed today that you are probably missing pypi release 3.12.2 which is listed in GitHub releases.\r\n\r\n```\r\nERROR: Could not find a version that satisfies the requirement django-health-check==3.12.2 (from -r requirements/base.txt (line 62)) (from versions: 0.1a7, 0.1a8, 0.1b1, 0.1b2, 0.1.1b1, 0.1.1b2, 0.1.1b3, 0.2, 0.3, 1.0, 1.0.1, 1.0.2, 1.1, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5, 1.1.6, 1.2, 1.2.1, 1.3, 2.0.0, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.3.0, 2.4.0, 3.0.0, 3.1.0, 3.2.0, 3.3.0, 3.4.0, 3.4.1, 3.4.2, 3.4.3, 3.5.0, 3.5.1, 3.6.0, 3.6.1, 3.7.0, 3.7.1, 3.8.0, 3.9.0, 3.10.0, 3.10.1, 3.10.2, 3.11.0, 3.11.1, 3.12.0, 3.12.1)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/247", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/247/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/247/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/247", "id": 607615858, "node_id": "MDU6SXNzdWU2MDc2MTU4NTg=", "number": 247, "title": "TemplateDoesNotExist: health_check/index.html", "user": {"login": "atyshka", "id": 19317207, "node_id": "MDQ6VXNlcjE5MzE3MjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/19317207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atyshka", "html_url": "https://github.com/atyshka", "followers_url": "https://api.github.com/users/atyshka/followers", "following_url": "https://api.github.com/users/atyshka/following{/other_user}", "gists_url": "https://api.github.com/users/atyshka/gists{/gist_id}", "starred_url": "https://api.github.com/users/atyshka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atyshka/subscriptions", "organizations_url": "https://api.github.com/users/atyshka/orgs", "repos_url": "https://api.github.com/users/atyshka/repos", "events_url": "https://api.github.com/users/atyshka/events{/privacy}", "received_events_url": "https://api.github.com/users/atyshka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T14:54:18Z", "updated_at": "2020-04-27T15:58:27Z", "closed_at": "2020-04-27T15:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error when I try  to navigate to my health check page. \r\nDjango 2.2.5\r\nSetup steps I used:\r\nAdded \r\n```\r\n    'health_check',\r\n    'health_check.db',\r\n    'health_check.cache',\r\n    'health_check.storage',\r\n```\r\nto settings.py\r\n\r\nAnd added\r\n`url(r'^health/?', include('health_check.urls')),` to urls.py\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/246", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/246/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/246/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/246", "id": 607373373, "node_id": "MDU6SXNzdWU2MDczNzMzNzM=", "number": 246, "title": "Question - implement healt and alive?", "user": {"login": "ehmkah", "id": 6233328, "node_id": "MDQ6VXNlcjYyMzMzMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6233328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehmkah", "html_url": "https://github.com/ehmkah", "followers_url": "https://api.github.com/users/ehmkah/followers", "following_url": "https://api.github.com/users/ehmkah/following{/other_user}", "gists_url": "https://api.github.com/users/ehmkah/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehmkah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehmkah/subscriptions", "organizations_url": "https://api.github.com/users/ehmkah/orgs", "repos_url": "https://api.github.com/users/ehmkah/repos", "events_url": "https://api.github.com/users/ehmkah/events{/privacy}", "received_events_url": "https://api.github.com/users/ehmkah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-27T09:09:28Z", "updated_at": "2020-04-29T09:45:58Z", "closed_at": "2020-04-29T09:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could you please have a look at https://stackoverflow.com/questions/61455314/how-to-implement-alive-and-readyness-with-django-health-check Or Do you prefer to ask the quesion here? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/242", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/242/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/242/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/242", "id": 578723864, "node_id": "MDU6SXNzdWU1Nzg3MjM4NjQ=", "number": 242, "title": "Non-default database connection are not being closed", "user": {"login": "ashexpertVersion2", "id": 62028282, "node_id": "MDQ6VXNlcjYyMDI4Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/62028282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashexpertVersion2", "html_url": "https://github.com/ashexpertVersion2", "followers_url": "https://api.github.com/users/ashexpertVersion2/followers", "following_url": "https://api.github.com/users/ashexpertVersion2/following{/other_user}", "gists_url": "https://api.github.com/users/ashexpertVersion2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashexpertVersion2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashexpertVersion2/subscriptions", "organizations_url": "https://api.github.com/users/ashexpertVersion2/orgs", "repos_url": "https://api.github.com/users/ashexpertVersion2/repos", "events_url": "https://api.github.com/users/ashexpertVersion2/events{/privacy}", "received_events_url": "https://api.github.com/users/ashexpertVersion2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashexpertVersion2", "id": 62028282, "node_id": "MDQ6VXNlcjYyMDI4Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/62028282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashexpertVersion2", "html_url": "https://github.com/ashexpertVersion2", "followers_url": "https://api.github.com/users/ashexpertVersion2/followers", "following_url": "https://api.github.com/users/ashexpertVersion2/following{/other_user}", "gists_url": "https://api.github.com/users/ashexpertVersion2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashexpertVersion2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashexpertVersion2/subscriptions", "organizations_url": "https://api.github.com/users/ashexpertVersion2/orgs", "repos_url": "https://api.github.com/users/ashexpertVersion2/repos", "events_url": "https://api.github.com/users/ashexpertVersion2/events{/privacy}", "received_events_url": "https://api.github.com/users/ashexpertVersion2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashexpertVersion2", "id": 62028282, "node_id": "MDQ6VXNlcjYyMDI4Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/62028282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashexpertVersion2", "html_url": "https://github.com/ashexpertVersion2", "followers_url": "https://api.github.com/users/ashexpertVersion2/followers", "following_url": "https://api.github.com/users/ashexpertVersion2/following{/other_user}", "gists_url": "https://api.github.com/users/ashexpertVersion2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashexpertVersion2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashexpertVersion2/subscriptions", "organizations_url": "https://api.github.com/users/ashexpertVersion2/orgs", "repos_url": "https://api.github.com/users/ashexpertVersion2/repos", "events_url": "https://api.github.com/users/ashexpertVersion2/events{/privacy}", "received_events_url": "https://api.github.com/users/ashexpertVersion2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-03-10T16:53:45Z", "updated_at": "2020-03-17T12:12:11Z", "closed_at": "2020-03-17T12:12:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have defined 3 PostgreSQL database including 'default' but after each request a new idle connection appears on pg_stat_activity.\r\nMy router works this way: it routes all read query to 'read_replica' and all write query to 'write_replica' and no query routes to 'default'\r\nI think the problematic part is here:\r\n\r\nhttps://github.com/KristianOellegaard/django-health-check/blob/728b90251211ec34b0aa031e991955387d3fbcd9/health_check/mixins.py#L28-L37\r\n\r\nIt must call close on db that query was performing on not just default, am i missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/241", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/241/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/241/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/241", "id": 578610693, "node_id": "MDU6SXNzdWU1Nzg2MTA2OTM=", "number": 241, "title": "allow set critical_service=False (BaseHealthCheckBackend) - Enhancement", "user": {"login": "SorianoMarmol", "id": 12081940, "node_id": "MDQ6VXNlcjEyMDgxOTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/12081940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SorianoMarmol", "html_url": "https://github.com/SorianoMarmol", "followers_url": "https://api.github.com/users/SorianoMarmol/followers", "following_url": "https://api.github.com/users/SorianoMarmol/following{/other_user}", "gists_url": "https://api.github.com/users/SorianoMarmol/gists{/gist_id}", "starred_url": "https://api.github.com/users/SorianoMarmol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SorianoMarmol/subscriptions", "organizations_url": "https://api.github.com/users/SorianoMarmol/orgs", "repos_url": "https://api.github.com/users/SorianoMarmol/repos", "events_url": "https://api.github.com/users/SorianoMarmol/events{/privacy}", "received_events_url": "https://api.github.com/users/SorianoMarmol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 898049612, "node_id": "MDU6TGFiZWw4OTgwNDk2MTI=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/wontfix", "name": "wontfix", "color": "cccccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-10T14:14:39Z", "updated_at": "2020-03-14T11:01:33Z", "closed_at": "2020-03-14T11:01:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "it would be interesting to be able to define critical_service = False (BaseHealthCheckBackend) based on a setting, for example", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/240", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/240/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/240/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/240", "id": 571282541, "node_id": "MDU6SXNzdWU1NzEyODI1NDE=", "number": 240, "title": "CacheBackend doesn't catch redis ConnectionError exception", "user": {"login": "jesusgarmanz", "id": 56338425, "node_id": "MDQ6VXNlcjU2MzM4NDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/56338425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesusgarmanz", "html_url": "https://github.com/jesusgarmanz", "followers_url": "https://api.github.com/users/jesusgarmanz/followers", "following_url": "https://api.github.com/users/jesusgarmanz/following{/other_user}", "gists_url": "https://api.github.com/users/jesusgarmanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesusgarmanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesusgarmanz/subscriptions", "organizations_url": "https://api.github.com/users/jesusgarmanz/orgs", "repos_url": "https://api.github.com/users/jesusgarmanz/repos", "events_url": "https://api.github.com/users/jesusgarmanz/events{/privacy}", "received_events_url": "https://api.github.com/users/jesusgarmanz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 898049612, "node_id": "MDU6TGFiZWw4OTgwNDk2MTI=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/wontfix", "name": "wontfix", "color": "cccccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-26T11:50:43Z", "updated_at": "2020-02-28T16:00:55Z", "closed_at": "2020-02-26T14:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When Redis service is down and a request to get the status of the services are done, the request returns an exception:\r\n\r\n```\r\nFile \"/root/.local/lib/python3.6/site-packages/health_check/backends.py\", line 30, in run_check\r\n  self.check_status()\r\nFile \"/root/.local/lib/python3.6/site-packages/health_check/cache/backends.py\", line 12, in check_status\r\n  cache.set('djangohealtcheck_test', 'itworks', 1)\r\nFile \"/root/.local/lib/python3.6/site-packages/django_redis/cache.py\", line 39, in _decorator\r\n  raise e.parent\r\nFile \"/root/.local/lib/python3.6/site-packages/django_redis/client/default.py\", line 143, in set\r\n  return client.set(nkey, nvalue, nx=nx, px=timeout, xx=xx)\r\nFile \"/root/.local/lib/python3.6/site-packages/redis/client.py\", line 1519, in set\r\n  return self.execute_command('SET', *pieces)\r\nFile \"/root/.local/lib/python3.6/site-packages/redis/client.py\", line 836, in execute_command\r\n  conn = self.connection or pool.get_connection(command_name, **options)\r\nFile \"/root/.local/lib/python3.6/site-packages/redis/connection.py\", line 1053, in get_connection\r\n  connection.connect()\r\nFile \"/root/.local/lib/python3.6/site-packages/redis/connection.py\", line 515, in connect\r\n  raise ConnectionError(self._error_message(e))\r\nredis.exceptions.ConnectionError: Error -2 connecting to redis:6379. Name does not resolve.\r\n```\r\n\r\nCacheBackend has an except to capture ConnectionError, but when I debugged the execution, the execution pass through without being catch. Then a BaseException is captured on `BaseHealthCheckBackend` and raised causing the non-desired exception data returned by the request. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/239", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/239/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/239/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/239", "id": 571228567, "node_id": "MDU6SXNzdWU1NzEyMjg1Njc=", "number": 239, "title": "Context manager doesn't work with Redis < 3.3.0", "user": {"login": "jesusgarmanz", "id": 56338425, "node_id": "MDQ6VXNlcjU2MzM4NDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/56338425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesusgarmanz", "html_url": "https://github.com/jesusgarmanz", "followers_url": "https://api.github.com/users/jesusgarmanz/followers", "following_url": "https://api.github.com/users/jesusgarmanz/following{/other_user}", "gists_url": "https://api.github.com/users/jesusgarmanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesusgarmanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesusgarmanz/subscriptions", "organizations_url": "https://api.github.com/users/jesusgarmanz/orgs", "repos_url": "https://api.github.com/users/jesusgarmanz/repos", "events_url": "https://api.github.com/users/jesusgarmanz/events{/privacy}", "received_events_url": "https://api.github.com/users/jesusgarmanz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}, {"id": 898049612, "node_id": "MDU6TGFiZWw4OTgwNDk2MTI=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/wontfix", "name": "wontfix", "color": "cccccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-26T10:27:59Z", "updated_at": "2020-02-28T15:11:07Z", "closed_at": "2020-02-26T14:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `health_check.contrib.redis` is installed in a project that use a Redis version less than 3.3.0, the following exception is thrown:\r\n```\r\nunavailable: Unknown error\r\nTraceback (most recent call last):\r\n  File \"/root/.local/lib/python3.6/site-packages/health_check/contrib/redis/backends.py\", line 24, in check_status\r\n    with from_url(self.redis_url) as conn:\r\nAttributeError: __enter__\r\n```\r\n\r\nIf the version of Redis is greater or equal sthan 3.3.0, the execution of the check_status function is ok. I think that is needed to specify that the Redis version has to be greater or equals than 3.3.0: in the README or/and in the dependencies of the package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/238", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/238/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/238/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/238", "id": 555697436, "node_id": "MDU6SXNzdWU1NTU2OTc0MzY=", "number": 238, "title": "Better RabbitMQ check", "user": {"login": "JBKahn", "id": 2654653, "node_id": "MDQ6VXNlcjI2NTQ2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2654653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JBKahn", "html_url": "https://github.com/JBKahn", "followers_url": "https://api.github.com/users/JBKahn/followers", "following_url": "https://api.github.com/users/JBKahn/following{/other_user}", "gists_url": "https://api.github.com/users/JBKahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/JBKahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JBKahn/subscriptions", "organizations_url": "https://api.github.com/users/JBKahn/orgs", "repos_url": "https://api.github.com/users/JBKahn/repos", "events_url": "https://api.github.com/users/JBKahn/events{/privacy}", "received_events_url": "https://api.github.com/users/JBKahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-27T16:43:48Z", "updated_at": "2020-02-13T15:40:21Z", "closed_at": "2020-02-13T15:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "RabbitMQ has an [aliveness check](https://pulse.mozilla.org/api/) that is a lot more reliable than the existing connection check used in this library. I use it a custom check on a similar health checker called [django-watchman](https://github.com/mwarkentin/django-watchman). It has caught several incidences that the connection check (what we originally used) did not.\r\n\r\nThat API check \"Declares a test queue, then publishes and consumes a message. Intended for use by monitoring tools.\"\r\n\r\nBut you need to parse the URL or have the users declare the vhost/url separately. I used this snippet if that helps:\r\n\r\n```python\r\nfrom urllib.parse import urlsplit, urlunsplit\r\n\r\nvhost = broker_url.lstrip(\"/\").rstrip(\"?\")\r\nsplit = urlsplit(broker_url)._replace(scheme=\"https\", query=\"\", path=f\"/api/aliveness-test/{vhost}\")\r\nurl = urlunsplit(split)\r\n\r\nstatus = requests.get(url, verify=False).json()[\"status\"] == 'ok'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/236", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/236/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/236/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/236", "id": 549701714, "node_id": "MDU6SXNzdWU1NDk3MDE3MTQ=", "number": 236, "title": "Celery throws exceptions using health_check.contrib.celery", "user": {"login": "falc410", "id": 575187, "node_id": "MDQ6VXNlcjU3NTE4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/575187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falc410", "html_url": "https://github.com/falc410", "followers_url": "https://api.github.com/users/falc410/followers", "following_url": "https://api.github.com/users/falc410/following{/other_user}", "gists_url": "https://api.github.com/users/falc410/gists{/gist_id}", "starred_url": "https://api.github.com/users/falc410/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falc410/subscriptions", "organizations_url": "https://api.github.com/users/falc410/orgs", "repos_url": "https://api.github.com/users/falc410/repos", "events_url": "https://api.github.com/users/falc410/events{/privacy}", "received_events_url": "https://api.github.com/users/falc410/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T17:06:45Z", "updated_at": "2020-01-14T17:26:03Z", "closed_at": "2020-01-14T17:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I start celery it will find the additional task:\r\n\r\n[tasks]\r\n  . health_check.contrib.celery.tasks.add\r\n  . ... my own tasks\r\n\r\nWhen I access the status page this happens:\r\n\r\n> [2020-01-14 18:01:45,914: INFO/MainProcess] Received task: health_check.contrib.celery.tasks.add[6ffc5d82-c67a-4cdc-adfa-70637dd58ee9]   expires:[2020-01-14 17:01:48.859924+00:00]\r\n[2020-01-14 18:01:45,957: WARNING/ForkPoolWorker-8] /Users/no68tuh2/virtualenvs/ihearu3/lib/python3.6/site-packages/celery/app/trace.py:570: RuntimeWarning: Exception raised outside body: DoesNotExist('CeleryTask matching query does not exist.',):\r\n\r\nApparently it is not compatible to the [django_celery_results](https://django-celery-results.readthedocs.io/en/latest/) package? \r\n\r\n> django_celery_results.models.TaskResult.DoesNotExist: TaskResult matching query does not exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/233", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/233/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/233/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/233", "id": 547078090, "node_id": "MDU6SXNzdWU1NDcwNzgwOTA=", "number": 233, "title": "Catching exception hides true cause", "user": {"login": "NickWer", "id": 3439382, "node_id": "MDQ6VXNlcjM0MzkzODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3439382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickWer", "html_url": "https://github.com/NickWer", "followers_url": "https://api.github.com/users/NickWer/followers", "following_url": "https://api.github.com/users/NickWer/following{/other_user}", "gists_url": "https://api.github.com/users/NickWer/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickWer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickWer/subscriptions", "organizations_url": "https://api.github.com/users/NickWer/orgs", "repos_url": "https://api.github.com/users/NickWer/repos", "events_url": "https://api.github.com/users/NickWer/events{/privacy}", "received_events_url": "https://api.github.com/users/NickWer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-08T20:13:04Z", "updated_at": "2020-01-14T15:47:44Z", "closed_at": "2020-01-14T15:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThere is a [`try` block](https://github.com/KristianOellegaard/django-health-check/blob/master/health_check/storage/backends.py#L69) that seems to mask the true cause of an exception in the backend, which makes it hard to diagnose why the health check fails. I believe that by allowing the normal error to bubble up or by including the original exception in the `ServiceUnavailable` exception, it would be easier for dev/devops teams to diagnose why a service is down.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/232", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/232/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/232/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/232", "id": 513747291, "node_id": "MDU6SXNzdWU1MTM3NDcyOTE=", "number": 232, "title": "License mismatch", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-29T07:51:06Z", "updated_at": "2019-10-29T08:00:43Z", "closed_at": "2019-10-29T07:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The repository contains the MIT license while the setup.cfg says it is BSD like, could you please match it up to both say the same?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/231", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/231/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/231/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/231", "id": 497595300, "node_id": "MDU6SXNzdWU0OTc1OTUzMDA=", "number": 231, "title": "AttributeError: __enter__ with redis 2.10.5", "user": {"login": "Basit-qc", "id": 9863016, "node_id": "MDQ6VXNlcjk4NjMwMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9863016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Basit-qc", "html_url": "https://github.com/Basit-qc", "followers_url": "https://api.github.com/users/Basit-qc/followers", "following_url": "https://api.github.com/users/Basit-qc/following{/other_user}", "gists_url": "https://api.github.com/users/Basit-qc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Basit-qc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Basit-qc/subscriptions", "organizations_url": "https://api.github.com/users/Basit-qc/orgs", "repos_url": "https://api.github.com/users/Basit-qc/repos", "events_url": "https://api.github.com/users/Basit-qc/events{/privacy}", "received_events_url": "https://api.github.com/users/Basit-qc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}, {"id": 898049612, "node_id": "MDU6TGFiZWw4OTgwNDk2MTI=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/wontfix", "name": "wontfix", "color": "cccccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-09-24T10:18:51Z", "updated_at": "2019-10-02T10:43:33Z", "closed_at": "2019-09-25T00:49:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Started happening with redis 2.10.5. Was working fine with redis 3.3.5.\r\n\r\nResponse:\r\n```\r\n{\r\n    \"CacheBackend\": \"working\",\r\n    \"CeleryHealthCheckCelery\": \"working\",\r\n    \"DatabaseBackend\": \"working\",\r\n    \"DefaultFileStorageHealthCheck\": \"working\",\r\n    \"RedisHealthCheck\": \"unavailable: Unknown error\"\r\n}\r\n```\r\nLogs:\r\n```\r\nERROR - unavailable: Unknown error (backends.py,49)\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/health_check/contrib/redis/backends.py\", line 24, in check_status\r\n    with from_url(self.redis_url) as conn:\r\nAttributeError: __enter__\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/226", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/226/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/226/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/226", "id": 475930957, "node_id": "MDU6SXNzdWU0NzU5MzA5NTc=", "number": 226, "title": "TemplateDoesNotExist", "user": {"login": "satyamevajayate", "id": 45642569, "node_id": "MDQ6VXNlcjQ1NjQyNTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/45642569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satyamevajayate", "html_url": "https://github.com/satyamevajayate", "followers_url": "https://api.github.com/users/satyamevajayate/followers", "following_url": "https://api.github.com/users/satyamevajayate/following{/other_user}", "gists_url": "https://api.github.com/users/satyamevajayate/gists{/gist_id}", "starred_url": "https://api.github.com/users/satyamevajayate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satyamevajayate/subscriptions", "organizations_url": "https://api.github.com/users/satyamevajayate/orgs", "repos_url": "https://api.github.com/users/satyamevajayate/repos", "events_url": "https://api.github.com/users/satyamevajayate/events{/privacy}", "received_events_url": "https://api.github.com/users/satyamevajayate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-01T23:27:50Z", "updated_at": "2020-06-09T16:31:47Z", "closed_at": "2019-08-01T23:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to access the /ht endpoint with my Django app (running in a Kubernetes pod), I am met with the following error. What am I missing?\r\n\r\nTemplateDoesNotExist at /ht/\r\nhealth_check/index.html\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/223", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/223/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/223/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/223", "id": 446022412, "node_id": "MDU6SXNzdWU0NDYwMjI0MTI=", "number": 223, "title": "`yield from` is not compatible with python 2.", "user": {"login": "zkanda", "id": 5354184, "node_id": "MDQ6VXNlcjUzNTQxODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5354184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkanda", "html_url": "https://github.com/zkanda", "followers_url": "https://api.github.com/users/zkanda/followers", "following_url": "https://api.github.com/users/zkanda/following{/other_user}", "gists_url": "https://api.github.com/users/zkanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkanda/subscriptions", "organizations_url": "https://api.github.com/users/zkanda/orgs", "repos_url": "https://api.github.com/users/zkanda/repos", "events_url": "https://api.github.com/users/zkanda/events{/privacy}", "received_events_url": "https://api.github.com/users/zkanda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-20T09:48:46Z", "updated_at": "2019-05-20T10:11:22Z", "closed_at": "2019-05-20T10:01:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, it looks like `yeild from` just got into the [source code](https://github.com/KristianOellegaard/django-health-check/blob/c09c26566b19d8ac778bb7e04e2e3800941bedff/health_check/views.py#L65) recently, this is not compatible with python 2 though, we can either bump the requirements to only support python 3 or fix the incompatibilities.\r\n\r\n```python\r\n# python 3 only:\r\nyield from y\r\n\r\n# python 2/3\r\nfor x in y:\r\n    yield x\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/220", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/220/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/220/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/220", "id": 438320496, "node_id": "MDU6SXNzdWU0MzgzMjA0OTY=", "number": 220, "title": "Accept header parsing rejects valid headers", "user": {"login": "ashokdelphia", "id": 48444234, "node_id": "MDQ6VXNlcjQ4NDQ0MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/48444234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokdelphia", "html_url": "https://github.com/ashokdelphia", "followers_url": "https://api.github.com/users/ashokdelphia/followers", "following_url": "https://api.github.com/users/ashokdelphia/following{/other_user}", "gists_url": "https://api.github.com/users/ashokdelphia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokdelphia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokdelphia/subscriptions", "organizations_url": "https://api.github.com/users/ashokdelphia/orgs", "repos_url": "https://api.github.com/users/ashokdelphia/repos", "events_url": "https://api.github.com/users/ashokdelphia/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokdelphia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashokdelphia", "id": 48444234, "node_id": "MDQ6VXNlcjQ4NDQ0MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/48444234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokdelphia", "html_url": "https://github.com/ashokdelphia", "followers_url": "https://api.github.com/users/ashokdelphia/followers", "following_url": "https://api.github.com/users/ashokdelphia/following{/other_user}", "gists_url": "https://api.github.com/users/ashokdelphia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokdelphia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokdelphia/subscriptions", "organizations_url": "https://api.github.com/users/ashokdelphia/orgs", "repos_url": "https://api.github.com/users/ashokdelphia/repos", "events_url": "https://api.github.com/users/ashokdelphia/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokdelphia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashokdelphia", "id": 48444234, "node_id": "MDQ6VXNlcjQ4NDQ0MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/48444234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokdelphia", "html_url": "https://github.com/ashokdelphia", "followers_url": "https://api.github.com/users/ashokdelphia/followers", "following_url": "https://api.github.com/users/ashokdelphia/following{/other_user}", "gists_url": "https://api.github.com/users/ashokdelphia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokdelphia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokdelphia/subscriptions", "organizations_url": "https://api.github.com/users/ashokdelphia/orgs", "repos_url": "https://api.github.com/users/ashokdelphia/repos", "events_url": "https://api.github.com/users/ashokdelphia/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokdelphia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-04-29T13:38:24Z", "updated_at": "2019-05-15T13:29:22Z", "closed_at": "2019-05-15T13:29:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using Chrome Version 73.0.3683.86, and the accept header it makes for regular web pages is:\r\n\r\n```\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\r\n```\r\n\r\nWith the new Accept header parsing in v3.10.0, the last entry is rejected with:\r\n\r\n```\r\n    \"application/signed-exchange;v=b3\" is not a valid media type\r\n```\r\n\r\nApologies for not catching that in review for PR #216.\r\n\r\nI think to properly follow the [production in RFC 7231](https://tools.ietf.org/html/rfc7231#section-5.3.2), we should allow other parameters and only care if `q` is set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/218", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/218/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/218/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/218", "id": 434669532, "node_id": "MDU6SXNzdWU0MzQ2Njk1MzI=", "number": 218, "title": "Breaking change introduced in 3.9.0", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 812774681, "node_id": "MDU6TGFiZWw4MTI3NzQ2ODE=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/documenation", "name": "documenation", "color": "83e27c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-18T09:14:41Z", "updated_at": "2019-04-23T10:55:25Z", "closed_at": "2019-04-23T10:55:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nreverse(\"health_check_home\")\r\n```\r\n\r\nworking in django-health-check==3.8.0\r\n\r\nfailing in django-health-check==3.9.0\r\n\r\nError message:\r\ndjango.urls.exceptions.NoReverseMatch: Reverse for 'health_check_home' not found. 'health_check_home' is not a valid view function or pattern name.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/217", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/217/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/217/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/217", "id": 434033980, "node_id": "MDU6SXNzdWU0MzQwMzM5ODA=", "number": 217, "title": "Support for Django CLI", "user": {"login": "hugoseabra", "id": 166136, "node_id": "MDQ6VXNlcjE2NjEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/166136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugoseabra", "html_url": "https://github.com/hugoseabra", "followers_url": "https://api.github.com/users/hugoseabra/followers", "following_url": "https://api.github.com/users/hugoseabra/following{/other_user}", "gists_url": "https://api.github.com/users/hugoseabra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugoseabra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugoseabra/subscriptions", "organizations_url": "https://api.github.com/users/hugoseabra/orgs", "repos_url": "https://api.github.com/users/hugoseabra/repos", "events_url": "https://api.github.com/users/hugoseabra/events{/privacy}", "received_events_url": "https://api.github.com/users/hugoseabra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hugoseabra", "id": 166136, "node_id": "MDQ6VXNlcjE2NjEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/166136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugoseabra", "html_url": "https://github.com/hugoseabra", "followers_url": "https://api.github.com/users/hugoseabra/followers", "following_url": "https://api.github.com/users/hugoseabra/following{/other_user}", "gists_url": "https://api.github.com/users/hugoseabra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugoseabra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugoseabra/subscriptions", "organizations_url": "https://api.github.com/users/hugoseabra/orgs", "repos_url": "https://api.github.com/users/hugoseabra/repos", "events_url": "https://api.github.com/users/hugoseabra/events{/privacy}", "received_events_url": "https://api.github.com/users/hugoseabra/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hugoseabra", "id": 166136, "node_id": "MDQ6VXNlcjE2NjEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/166136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugoseabra", "html_url": "https://github.com/hugoseabra", "followers_url": "https://api.github.com/users/hugoseabra/followers", "following_url": "https://api.github.com/users/hugoseabra/following{/other_user}", "gists_url": "https://api.github.com/users/hugoseabra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugoseabra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugoseabra/subscriptions", "organizations_url": "https://api.github.com/users/hugoseabra/orgs", "repos_url": "https://api.github.com/users/hugoseabra/repos", "events_url": "https://api.github.com/users/hugoseabra/events{/privacy}", "received_events_url": "https://api.github.com/users/hugoseabra/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-04-16T23:58:53Z", "updated_at": "2020-02-16T13:53:56Z", "closed_at": "2020-02-16T13:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very nice if the checks could be supported by command lines, because not every service is served by HTTPs protocol.\r\n\r\nWhat do you guys think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/210", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/210/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/210/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/210", "id": 398425619, "node_id": "MDU6SXNzdWUzOTg0MjU2MTk=", "number": 210, "title": "Celery and RabbitMQ checks enabled concurrently results in errors", "user": {"login": "jbnance", "id": 4754442, "node_id": "MDQ6VXNlcjQ3NTQ0NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4754442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbnance", "html_url": "https://github.com/jbnance", "followers_url": "https://api.github.com/users/jbnance/followers", "following_url": "https://api.github.com/users/jbnance/following{/other_user}", "gists_url": "https://api.github.com/users/jbnance/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbnance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbnance/subscriptions", "organizations_url": "https://api.github.com/users/jbnance/orgs", "repos_url": "https://api.github.com/users/jbnance/repos", "events_url": "https://api.github.com/users/jbnance/events{/privacy}", "received_events_url": "https://api.github.com/users/jbnance/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-01-11T19:40:49Z", "updated_at": "2019-02-02T10:41:01Z", "closed_at": "2019-01-12T13:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using:\r\n\r\n- Python 3.6 and 3.7\r\n- Django 2.1.4\r\n- django-health-check 3.8.0\r\n- celery 4.2.1\r\n- RabbitMQ 3.3.5 and 3.6.16 (clustered)\r\n\r\nWith a fresh instance of RabbitMQ having both health checks enabled at the same time:\r\n\r\n- health_check.contrib.celery\r\n- health_check.contrib.rabbitmq\r\n\r\n...results in celery workers erroring out with the following:\r\n\r\n```[2019-01-11 13:32:06,428: CRITICAL/MainProcess] Unrecoverable error: TypeError(\"add() missing 2 required positional arguments: 'x' and 'y'\",)\r\nTraceback (most recent call last):\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 486, in get_or_create\r\n    return self.get(**lookup), False\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 399, in get\r\n    self.model._meta.object_name\r\ndjango_celery_results.models.TaskResult.DoesNotExist: TaskResult matching query does not exist.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/worker.py\", line 205, in start\r\n    self.blueprint.start(self)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/bootsteps.py\", line 369, in start\r\n    return self.obj.start()\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/consumer/consumer.py\", line 317, in start\r\n    blueprint.start(self)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/consumer/consumer.py\", line 593, in start\r\n    c.loop(*c.loop_args())\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/loops.py\", line 88, in asynloop\r\n    update_qos()\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/kombu/common.py\", line 417, in update\r\n    return self.set(self.value)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/kombu/common.py\", line 410, in set\r\n    self.callback(prefetch_count=new_value)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/consumer/tasks.py\", line 47, in set_prefetch_count\r\n    apply_global=qos_global,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/kombu/messaging.py\", line 558, in qos\r\n    apply_global)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/channel.py\", line 1812, in basic_qos\r\n    wait=spec.Basic.QosOk,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 59, in send_method\r\n    return self.wait(wait, returns_tuple=returns_tuple)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 79, in wait\r\n    self.connection.drain_events(timeout=timeout)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/connection.py\", line 491, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/connection.py\", line 497, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/method_framing.py\", line 77, in on_frame\r\n    callback(channel, msg.frame_method, msg.frame_args, msg)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/connection.py\", line 501, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 128, in dispatch_method\r\n    listener(*args)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/amqp/channel.py\", line 1597, in _on_basic_deliver\r\n    fun(msg)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/kombu/messaging.py\", line 624, in _receive_callback\r\n    return on_m(message) if on_m else self.receive(decoded, message)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/consumer/consumer.py\", line 567, in on_task_received\r\n    callbacks,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/strategy.py\", line 157, in task_message_handler\r\n    if (req.expires or req.id in revoked_tasks) and req.revoked():\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/request.py\", line 280, in revoked\r\n    'expired' if expired else 'revoked', False, None, expired,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/worker/request.py\", line 263, in _announce_revoked\r\n    self.id, reason, request=self, store_result=self.store_errors,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/backends/base.py\", line 191, in mark_as_revoked\r\n    traceback=None, request=request)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/backends/base.py\", line 322, in store_result\r\n    request=request, **kwargs)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django_celery_results/backends/database.py\", line 35, in _store_result\r\n    task_kwargs=task_kwargs,\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django_celery_results/managers.py\", line 50, in _inner\r\n    return fun(*args, **kwargs)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django_celery_results/managers.py\", line 126, in store_result\r\n    obj, created = self.get_or_create(task_id=task_id, defaults=fields)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 488, in get_or_create\r\n    return self._create_object_from_params(lookup, params)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 521, in _create_object_from_params\r\n    params = {k: v() if callable(v) else v for k, v in params.items()}\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 521, in <dictcomp>\r\n    params = {k: v() if callable(v) else v for k, v in params.items()}\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/app/trace.py\", line 642, in __protected_call__\r\n    return orig(self, *args, **kwargs)\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/celery/app/task.py\", line 375, in __call__\r\n    return self.run(*args, **kwargs)\r\nTypeError: add() missing 2 required positional arguments: 'x' and 'y'\r\n[2019-01-11 13:32:06,454: DEBUG/MainProcess] | Worker: Closing Hub...\r\n[2019-01-11 13:32:06,455: DEBUG/MainProcess] | Worker: Closing Pool...\r\n[2019-01-11 13:32:06,456: DEBUG/MainProcess] | Worker: Closing Consumer...\r\n[2019-01-11 13:32:06,458: DEBUG/MainProcess] | Worker: Stopping Consumer...\r\n[2019-01-11 13:32:06,459: DEBUG/MainProcess] | Consumer: Closing Connection...\r\n[2019-01-11 13:32:06,460: DEBUG/MainProcess] | Consumer: Closing Events...\r\n[2019-01-11 13:32:06,461: DEBUG/MainProcess] | Consumer: Closing Mingle...\r\n[2019-01-11 13:32:06,463: DEBUG/MainProcess] | Consumer: Closing Gossip...\r\n[2019-01-11 13:32:06,464: DEBUG/MainProcess] | Consumer: Closing Tasks...\r\n[2019-01-11 13:32:06,465: DEBUG/MainProcess] | Consumer: Closing Control...\r\n[2019-01-11 13:32:06,466: DEBUG/MainProcess] | Consumer: Closing Heart...\r\n[2019-01-11 13:32:06,467: DEBUG/MainProcess] | Consumer: Closing event loop...\r\n[2019-01-11 13:32:06,468: DEBUG/MainProcess] | Consumer: Stopping event loop...\r\n[2019-01-11 13:32:06,469: DEBUG/MainProcess] | Consumer: Stopping Heart...\r\n[2019-01-11 13:32:06,471: DEBUG/MainProcess] | Consumer: Stopping Control...\r\n[2019-01-11 13:32:06,472: INFO/MainProcess] Received task: health_check.contrib.celery.tasks.add[c3d288cc-523d-4831-a788-35ba68375516]   expires:[2019-01-11 18:12:22.144025+00:00]\r\n[2019-01-11 13:32:06,474: INFO/MainProcess] Discarding revoked task: health_check.contrib.celery.tasks.add[c3d288cc-523d-4831-a788-35ba68375516]\r\n[2019-01-11 13:32:06,480: ERROR/MainProcess] Error on stopping Control: TypeError(\"add() missing 2 required positional arguments: 'x' and 'y'\",)\r\nTraceback (most recent call last):\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 486, in get_or_create\r\n    return self.get(**lookup), False\r\n  File \"/opt/rh/rh-python36/root/usr/lib/python3.6/site-packages/django/db/models/query.py\", line 399, in get\r\n    self.model._meta.object_name\r\ndjango_celery_results.models.TaskResult.DoesNotExist: TaskResult matching query does not exist.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n...<snip>...```\r\n\r\nIf I disable either of the checks the other works just fine.\r\n\r\nI was able to get both working concurrently by going through a few iterations of enabling one, then the other, then finally both at the same time so it seems that there's some sort of race condition.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/204", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/204/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/204/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/204", "id": 384077296, "node_id": "MDU6SXNzdWUzODQwNzcyOTY=", "number": 204, "title": "[minor] CI deploy step fails when running against a tag", "user": {"login": "GabLeRoux", "id": 1264761, "node_id": "MDQ6VXNlcjEyNjQ3NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1264761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabLeRoux", "html_url": "https://github.com/GabLeRoux", "followers_url": "https://api.github.com/users/GabLeRoux/followers", "following_url": "https://api.github.com/users/GabLeRoux/following{/other_user}", "gists_url": "https://api.github.com/users/GabLeRoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabLeRoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabLeRoux/subscriptions", "organizations_url": "https://api.github.com/users/GabLeRoux/orgs", "repos_url": "https://api.github.com/users/GabLeRoux/repos", "events_url": "https://api.github.com/users/GabLeRoux/events{/privacy}", "received_events_url": "https://api.github.com/users/GabLeRoux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-25T13:06:37Z", "updated_at": "2018-12-06T12:25:10Z", "closed_at": "2018-12-06T12:25:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/1264761/48979320-442f4580-f087-11e8-94ac-0798bb11fc43.png)\r\n\r\nExample: https://travis-ci.org/KristianOellegaard/django-health-check/jobs/443743439\r\n\r\n```\r\nDeploying application\r\nrunning sdist\r\nrunning egg_info\r\ncreating django_health_check.egg-info\r\nwriting django_health_check.egg-info/PKG-INFO\r\nwriting dependency_links to django_health_check.egg-info/dependency_links.txt\r\nwriting top-level names to django_health_check.egg-info/top_level.txt\r\nwriting pbr to django_health_check.egg-info/pbr.json\r\n[pbr] Processing SOURCES.txt\r\nwriting manifest file 'django_health_check.egg-info/SOURCES.txt'\r\n[pbr] In git context, generating filelist from git\r\nwarning: no files found matching 'AUTHORS'\r\nwarning: no files found matching 'ChangeLog'\r\nwarning: no previously-included files found matching '.gitreview'\r\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'django_health_check.egg-info/SOURCES.txt'\r\nrunning check\r\ncreating django-health-check-3.8.0\r\ncreating django-health-check-3.8.0/django_health_check.egg-info\r\ncreating django-health-check-3.8.0/docs\r\ncreating django-health-check-3.8.0/health_check\r\ncreating django-health-check-3.8.0/health_check/cache\r\ncreating django-health-check-3.8.0/health_check/contrib\r\ncreating django-health-check-3.8.0/health_check/contrib/celery\r\ncreating django-health-check-3.8.0/health_check/contrib/psutil\r\ncreating django-health-check-3.8.0/health_check/contrib/rabbitmq\r\ncreating django-health-check-3.8.0/health_check/contrib/s3boto3_storage\r\ncreating django-health-check-3.8.0/health_check/contrib/s3boto_storage\r\ncreating django-health-check-3.8.0/health_check/db\r\ncreating django-health-check-3.8.0/health_check/db/migrations\r\ncreating django-health-check-3.8.0/health_check/storage\r\ncreating django-health-check-3.8.0/health_check/templates\r\ncreating django-health-check-3.8.0/health_check/templates/health_check\r\ncreating django-health-check-3.8.0/tests\r\ncreating django-health-check-3.8.0/tests/testapp\r\ncopying files to django-health-check-3.8.0...\r\ncopying .editorconfig -> django-health-check-3.8.0\r\ncopying .travis.yml -> django-health-check-3.8.0\r\ncopying LICENSE -> django-health-check-3.8.0\r\ncopying MANIFEST.in -> django-health-check-3.8.0\r\ncopying README.rst -> django-health-check-3.8.0\r\ncopying requirements-dev.txt -> django-health-check-3.8.0\r\ncopying setup.cfg -> django-health-check-3.8.0\r\ncopying setup.py -> django-health-check-3.8.0\r\ncopying tox.ini -> django-health-check-3.8.0\r\ncopying django_health_check.egg-info/PKG-INFO -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying django_health_check.egg-info/SOURCES.txt -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying django_health_check.egg-info/dependency_links.txt -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying django_health_check.egg-info/not-zip-safe -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying django_health_check.egg-info/pbr.json -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying django_health_check.egg-info/top_level.txt -> django-health-check-3.8.0/django_health_check.egg-info\r\ncopying docs/changelog.rst -> django-health-check-3.8.0/docs\r\ncopying docs/conf.py -> django-health-check-3.8.0/docs\r\ncopying docs/contrib.rst -> django-health-check-3.8.0/docs\r\ncopying docs/index.rst -> django-health-check-3.8.0/docs\r\ncopying docs/readme.rst -> django-health-check-3.8.0/docs\r\ncopying docs/settings.rst -> django-health-check-3.8.0/docs\r\ncopying health_check/__init__.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/backends.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/conf.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/exceptions.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/plugins.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/urls.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/views.py -> django-health-check-3.8.0/health_check\r\ncopying health_check/cache/__init__.py -> django-health-check-3.8.0/health_check/cache\r\ncopying health_check/cache/apps.py -> django-health-check-3.8.0/health_check/cache\r\ncopying health_check/cache/backends.py -> django-health-check-3.8.0/health_check/cache\r\ncopying health_check/contrib/__init__.py -> django-health-check-3.8.0/health_check/contrib\r\ncopying health_check/contrib/celery/__init__.py -> django-health-check-3.8.0/health_check/contrib/celery\r\ncopying health_check/contrib/celery/apps.py -> django-health-check-3.8.0/health_check/contrib/celery\r\ncopying health_check/contrib/celery/backends.py -> django-health-check-3.8.0/health_check/contrib/celery\r\ncopying health_check/contrib/celery/tasks.py -> django-health-check-3.8.0/health_check/contrib/celery\r\ncopying health_check/contrib/psutil/__init__.py -> django-health-check-3.8.0/health_check/contrib/psutil\r\ncopying health_check/contrib/psutil/apps.py -> django-health-check-3.8.0/health_check/contrib/psutil\r\ncopying health_check/contrib/psutil/backends.py -> django-health-check-3.8.0/health_check/contrib/psutil\r\ncopying health_check/contrib/rabbitmq/__init__.py -> django-health-check-3.8.0/health_check/contrib/rabbitmq\r\ncopying health_check/contrib/rabbitmq/apps.py -> django-health-check-3.8.0/health_check/contrib/rabbitmq\r\ncopying health_check/contrib/rabbitmq/backends.py -> django-health-check-3.8.0/health_check/contrib/rabbitmq\r\ncopying health_check/contrib/s3boto3_storage/__init__.py -> django-health-check-3.8.0/health_check/contrib/s3boto3_storage\r\ncopying health_check/contrib/s3boto3_storage/apps.py -> django-health-check-3.8.0/health_check/contrib/s3boto3_storage\r\ncopying health_check/contrib/s3boto3_storage/backends.py -> django-health-check-3.8.0/health_check/contrib/s3boto3_storage\r\ncopying health_check/contrib/s3boto_storage/__init__.py -> django-health-check-3.8.0/health_check/contrib/s3boto_storage\r\ncopying health_check/contrib/s3boto_storage/apps.py -> django-health-check-3.8.0/health_check/contrib/s3boto_storage\r\ncopying health_check/contrib/s3boto_storage/backends.py -> django-health-check-3.8.0/health_check/contrib/s3boto_storage\r\ncopying health_check/db/__init__.py -> django-health-check-3.8.0/health_check/db\r\ncopying health_check/db/apps.py -> django-health-check-3.8.0/health_check/db\r\ncopying health_check/db/backends.py -> django-health-check-3.8.0/health_check/db\r\ncopying health_check/db/models.py -> django-health-check-3.8.0/health_check/db\r\ncopying health_check/db/migrations/0001_initial.py -> django-health-check-3.8.0/health_check/db/migrations\r\ncopying health_check/db/migrations/__init__.py -> django-health-check-3.8.0/health_check/db/migrations\r\ncopying health_check/storage/__init__.py -> django-health-check-3.8.0/health_check/storage\r\ncopying health_check/storage/apps.py -> django-health-check-3.8.0/health_check/storage\r\ncopying health_check/storage/backends.py -> django-health-check-3.8.0/health_check/storage\r\ncopying health_check/templates/health_check/index.html -> django-health-check-3.8.0/health_check/templates/health_check\r\ncopying tests/__init__.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_autodiscover.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_backends.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_cache.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_db.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_plugins.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_rabbitmq.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_storage.py -> django-health-check-3.8.0/tests\r\ncopying tests/test_views.py -> django-health-check-3.8.0/tests\r\ncopying tests/testapp/__init__.py -> django-health-check-3.8.0/tests/testapp\r\ncopying tests/testapp/celery.py -> django-health-check-3.8.0/tests/testapp\r\ncopying tests/testapp/manage.py -> django-health-check-3.8.0/tests/testapp\r\ncopying tests/testapp/settings.py -> django-health-check-3.8.0/tests/testapp\r\ncopying tests/testapp/urls.py -> django-health-check-3.8.0/tests/testapp\r\nWriting django-health-check-3.8.0/setup.cfg\r\ncreating dist\r\nCreating tar archive\r\nremoving 'django-health-check-3.8.0' (and everything under it)\r\nUploading distributions to https://upload.pypi.org/legacy/\r\nUploading django-health-check-3.8.0.tar.gz\r\n100% 25.3k/25.3k [00:00<00:00, 62.9kB/s]\r\nNOTE: Try --verbose to see response content.\r\nHTTPError: 400 Client Error: File already exists. See https://pypi.org/help/#file-name-reuse for url: https://upload.pypi.org/legacy/\r\ndjango_health_check.egg-info/PKG-INFO already exists, no checkout\r\ndjango_health_check.egg-info/SOURCES.txt already exists, no checkout\r\ndjango_health_check.egg-info/dependency_links.txt already exists, no checkout\r\ndjango_health_check.egg-info/not-zip-safe already exists, no checkout\r\ndjango_health_check.egg-info/pbr.json already exists, no checkout\r\ndjango_health_check.egg-info/top_level.txt already exists, no checkout\r\nCould not restore untracked files from stash entry\r\nPyPI upload failed.\r\nfailed to deploy\r\n```\r\n\r\nI was wondering how I could help here. It seems to fail to upload the package because it already exists.\r\n\r\nRelated travis deploy step:\r\nhttps://github.com/KristianOellegaard/django-health-check/blob/ac7d6198e97f4a151af1a11f81eeb4660e0f5a24/.travis.yml#L29-L38\r\n\r\n**HTTPError: 400 Client Error: File already exists. See https://pypi.org/help/#file-name-reuse for url: https://upload.pypi.org/legacy/**\r\n\r\nI quickly searched online and here's the related issue:\r\nhttps://github.com/travis-ci/travis-ci/issues/10056\r\n\r\nThe following solution seems right:\r\nhttps://github.com/travis-ci/travis-ci/issues/10056#issuecomment-437667181\r\n\r\nthe deploy step should be executed only against one item of the matrix. I can't test this quickly, but I'll join a pull request if you'd like to try. You may confirm this against [Test PyPI](https://packaging.python.org/guides/using-testpypi/), but it requires a separate account and I don't know if this will have the same behaviour. Or you can go cowboy style and test in production on the next release \ud83e\udd20\r\n\r\n\u270c\ufe0f ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/203", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/203/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/203/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/203", "id": 383960356, "node_id": "MDU6SXNzdWUzODM5NjAzNTY=", "number": 203, "title": "CacheBackend 'unavailable: Cache key does not match' on first call", "user": {"login": "GabLeRoux", "id": 1264761, "node_id": "MDQ6VXNlcjEyNjQ3NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1264761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabLeRoux", "html_url": "https://github.com/GabLeRoux", "followers_url": "https://api.github.com/users/GabLeRoux/followers", "following_url": "https://api.github.com/users/GabLeRoux/following{/other_user}", "gists_url": "https://api.github.com/users/GabLeRoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabLeRoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabLeRoux/subscriptions", "organizations_url": "https://api.github.com/users/GabLeRoux/orgs", "repos_url": "https://api.github.com/users/GabLeRoux/repos", "events_url": "https://api.github.com/users/GabLeRoux/events{/privacy}", "received_events_url": "https://api.github.com/users/GabLeRoux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-24T05:16:26Z", "updated_at": "2018-11-24T16:20:47Z", "closed_at": "2018-11-24T08:46:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey there, thanks for this great package. I just gave this a try and it's really nice \ud83d\udc4d.\r\n\r\nI noticed that when django server just started, the first request to the health check url fails `CacheBackend` check with the following error:\r\n\r\n```\r\n [2018-11-24 04:59:57] ERROR unavailable: Cache key does not match\r\n Traceback (most recent call last):\r\n   File \"/usr/local/lib/python3.4/site-packages/health_check/backends.py\", line 30, in run_check\r\n     self.check_status()\r\n   File \"/usr/local/lib/python3.4/site-packages/health_check/cache/backends.py\", line 14, in check_status\r\n     raise ServiceUnavailable(\"Cache key does not match\")\r\n health_check.exceptions.ServiceUnavailable: unavailable: Cache key does not match\r\n [24/Nov/2018 04:59:57] \"GET /health/ HTTP/1.1\" 500 11588\r\n```\r\n\r\nAccording to the code, it's just making sure it can store something in the cache and then read it right after:\r\n\r\n```python\r\n            cache.set('djangohealtcheck_test', 'itworks', 1)\r\n            if not cache.get(\"djangohealtcheck_test\") == \"itworks\":\r\n                raise ServiceUnavailable(\"Cache key does not match\")\r\n```\r\n\r\nI did not configure `CACHES` in django settings yet, using python 3.4.2, django 1.9.5 (and wish to update soon). According to [following documentation](https://docs.djangoproject.com/en/1.9/topics/cache/#local-memory-caching), default caching backend is local memory caching.\r\n\r\nThis happened using `DEBUG=True`, I did not test elsewhere.\r\n\r\nI'm writing this here, but the cache isn't critical on our side so I disabled it. Just wondering what's causing this.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/202", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/202/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/202/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/202", "id": 379304713, "node_id": "MDU6SXNzdWUzNzkzMDQ3MTM=", "number": 202, "title": "Django sending Internal Server Error mails for health check endpoint", "user": {"login": "praseodym", "id": 20283, "node_id": "MDQ6VXNlcjIwMjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/20283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/praseodym", "html_url": "https://github.com/praseodym", "followers_url": "https://api.github.com/users/praseodym/followers", "following_url": "https://api.github.com/users/praseodym/following{/other_user}", "gists_url": "https://api.github.com/users/praseodym/gists{/gist_id}", "starred_url": "https://api.github.com/users/praseodym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/praseodym/subscriptions", "organizations_url": "https://api.github.com/users/praseodym/orgs", "repos_url": "https://api.github.com/users/praseodym/repos", "events_url": "https://api.github.com/users/praseodym/events{/privacy}", "received_events_url": "https://api.github.com/users/praseodym/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-11-09T20:08:45Z", "updated_at": "2020-04-18T09:09:20Z", "closed_at": "2018-11-13T10:40:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading our Django app (Django 2.0.9 -> 2.1.3, Python 3.6 -> 3.7, django-health-check 3.5.1 -> 3.8.0) we're sometimes getting Internal Server Error mails from Django triggered by the health check endpoint. Unfortunately these mails do not contain a stack trace or any other information that is helpful in determining what's going on, which is why I'm opening this issue.\r\n\r\nWe're running our app on Kubernetes, and it is configured to periodically call the health check endpoint to verify that the app is still alive. There are django-health-check checks configured for db (PostgreSQL) and cache (memcached).\r\n\r\nThe first part of the error mail is as follows:\r\n```\r\nInternal Server Error: /healthz\r\n\r\nReport at /healthz\r\nInternal Server Error: /healthz\r\n\r\nRequest Method: GET\r\nRequest URL: http://10.244.2.193:8000/healthz\r\nDjango Version: 2.1.3\r\nPython Executable: /usr/local/bin/python\r\nPython Version: 3.7.1\r\nPython Path: ['/srv', '/usr/local/bin', '/usr/local/lib/python37.zip', '/usr/local/lib/python3.7', '/usr/local/lib/python3.7/lib-dynload', '/usr/local/lib/python3.7/site-packages']\r\nServer time: vr, 9 Nov 2018 19:14:47 +0100\r\nInstalled Applications:\r\n(...\r\n 'health_check',\r\n 'health_check.db',\r\n 'health_check.cache',\r\n...)\r\n```\r\nDo you happen to have any idea what could be causing these internal server errors?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/199", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/199/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/199/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/199", "id": 367073075, "node_id": "MDU6SXNzdWUzNjcwNzMwNzU=", "number": 199, "title": "StorageHealthCheck - problem with overwriting file_name by some backends", "user": {"login": "Quadric", "id": 1465170, "node_id": "MDQ6VXNlcjE0NjUxNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1465170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quadric", "html_url": "https://github.com/Quadric", "followers_url": "https://api.github.com/users/Quadric/followers", "following_url": "https://api.github.com/users/Quadric/following{/other_user}", "gists_url": "https://api.github.com/users/Quadric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quadric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quadric/subscriptions", "organizations_url": "https://api.github.com/users/Quadric/orgs", "repos_url": "https://api.github.com/users/Quadric/repos", "events_url": "https://api.github.com/users/Quadric/events{/privacy}", "received_events_url": "https://api.github.com/users/Quadric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-05T06:11:34Z", "updated_at": "2018-10-05T06:46:58Z", "closed_at": "2018-10-05T06:46:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is an issue when some storage backend overwrites requested file_name to something else (for ex. avoiding duplicates) - and when it happens there is a problem with this backend implementation. Please look at this method on StorageHealthCheck\r\n\r\n```def check_save(self, file_name, file_content):\r\n        storage = self.get_storage()\r\n        # save the file\r\n        file_name = storage.save(\r\n            file_name, ContentFile(content=file_content)\r\n        )\r\n        # read the file and compare\r\n        if not storage.exists(file_name):\r\n            raise ServiceUnavailable('File does not exist')\r\n        with storage.open(file_name) as f:\r\n            if not f.read() == file_content:\r\n                raise ServiceUnavailable('File content does not match')\r\n```\r\n\r\nLook at this line:\r\n\r\n```\r\nfile_name = storage.save(\r\n    file_name, ContentFile(content=file_content)\r\n)\r\n```\r\n\r\nstorage is allowed to overwrite the requested file_name - which is OK, and later the rest of code for this method is also OK - but since then this \"file_name\" may change.\r\n\r\nThats why this method:\r\n\r\n```\r\ndef check_status(self):\r\n        try:\r\n            # write the file to the storage backend\r\n            file_name = self.get_file_name()\r\n            file_content = self.get_file_content()\r\n            self.check_save(file_name, file_content)\r\n            self.check_delete(file_name)\r\n            return True\r\n        except Exception:\r\n            raise ServiceUnavailable('Unknown exception')\r\n```\r\n\r\nmay not work OK because 'check_save' and 'check_delete' uses the \"original\" requested **file_name** - but as we've seen this \"file_name\" could be overwritten by `check_save` method - making method `check_delete` looking for invalid file_name.\r\n\r\nIt could be fixed by adding \"return file_name\" to \"check_save\" method, like this:\r\n\r\n```\r\ndef check_save(self, file_name, file_content):\r\n        storage = self.get_storage()\r\n        # save the file\r\n        file_name = storage.save(\r\n            file_name, ContentFile(content=file_content)\r\n        )\r\n        # read the file and compare\r\n        if not storage.exists(file_name):\r\n            raise ServiceUnavailable('File does not exist')\r\n        with storage.open(file_name) as f:\r\n            if not f.read() == file_content:\r\n                raise ServiceUnavailable('File content does not match')\r\n        return file_name\r\n```\r\n\r\nAnd use that file name in `check_status` method:\r\n\r\n```\r\ndef check_status(self):\r\n        try:\r\n            # write the file to the storage backend\r\n            file_name = self.get_file_name()\r\n            file_content = self.get_file_content()\r\n            file_name = self.check_save(file_name, file_content)\r\n            self.check_delete(file_name)\r\n            return True\r\n        except Exception:\r\n            raise ServiceUnavailable('Unknown exception')\r\n```\r\n\r\nWhat do you think?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/196", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/196/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/196/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/196", "id": 335613734, "node_id": "MDU6SXNzdWUzMzU2MTM3MzQ=", "number": 196, "title": "RabbitMQ", "user": {"login": "IgooorGP", "id": 24800560, "node_id": "MDQ6VXNlcjI0ODAwNTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/24800560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IgooorGP", "html_url": "https://github.com/IgooorGP", "followers_url": "https://api.github.com/users/IgooorGP/followers", "following_url": "https://api.github.com/users/IgooorGP/following{/other_user}", "gists_url": "https://api.github.com/users/IgooorGP/gists{/gist_id}", "starred_url": "https://api.github.com/users/IgooorGP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IgooorGP/subscriptions", "organizations_url": "https://api.github.com/users/IgooorGP/orgs", "repos_url": "https://api.github.com/users/IgooorGP/repos", "events_url": "https://api.github.com/users/IgooorGP/events{/privacy}", "received_events_url": "https://api.github.com/users/IgooorGP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-26T00:23:34Z", "updated_at": "2018-11-24T08:41:26Z", "closed_at": "2018-11-24T08:41:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello there, Kristian!\r\n\r\nKristian, thanks for the open-source project. I would like to know if a PR to add a healthcheck for RabbitMQ (for anyone who's using django with pika lib only and without celery) would be of any interest.\r\n\r\nBest regards,\r\n\r\nIgor GP\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/187", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/187/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/187/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/187", "id": 313234603, "node_id": "MDU6SXNzdWUzMTMyMzQ2MDM=", "number": 187, "title": "TypeError: type() argument 1 must be string, not unicode", "user": {"login": "akellne", "id": 6863359, "node_id": "MDQ6VXNlcjY4NjMzNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6863359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akellne", "html_url": "https://github.com/akellne", "followers_url": "https://api.github.com/users/akellne/followers", "following_url": "https://api.github.com/users/akellne/following{/other_user}", "gists_url": "https://api.github.com/users/akellne/gists{/gist_id}", "starred_url": "https://api.github.com/users/akellne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akellne/subscriptions", "organizations_url": "https://api.github.com/users/akellne/orgs", "repos_url": "https://api.github.com/users/akellne/repos", "events_url": "https://api.github.com/users/akellne/events{/privacy}", "received_events_url": "https://api.github.com/users/akellne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 898049612, "node_id": "MDU6TGFiZWw4OTgwNDk2MTI=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/wontfix", "name": "wontfix", "color": "cccccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-11T09:05:33Z", "updated_at": "2018-04-11T10:00:50Z", "closed_at": "2018-04-11T10:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python 2.7.13 the package does not seem to work:\r\n\r\n```\r\n[...]\r\nenv/lib/python2.7/site-packages/health_check/contrib/celery/apps.py\", line 16, in ready\r\n    celery_class = type(celery_class_name, (CeleryHealthCheck,), {'queue': queue})\r\nTypeError: type() argument 1 must be string, not unicode\r\n```\r\nusing celery 4.1.0 and amqp 2.2.2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/184", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/184/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/184/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/184", "id": 299087933, "node_id": "MDU6SXNzdWUyOTkwODc5MzM=", "number": 184, "title": "Never-cache policy could be DOS attack vector", "user": {"login": "justinmayer", "id": 1503700, "node_id": "MDQ6VXNlcjE1MDM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1503700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmayer", "html_url": "https://github.com/justinmayer", "followers_url": "https://api.github.com/users/justinmayer/followers", "following_url": "https://api.github.com/users/justinmayer/following{/other_user}", "gists_url": "https://api.github.com/users/justinmayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmayer/subscriptions", "organizations_url": "https://api.github.com/users/justinmayer/orgs", "repos_url": "https://api.github.com/users/justinmayer/repos", "events_url": "https://api.github.com/users/justinmayer/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmayer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 812774681, "node_id": "MDU6TGFiZWw4MTI3NzQ2ODE=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/documenation", "name": "documenation", "color": "83e27c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "justinmayer", "id": 1503700, "node_id": "MDQ6VXNlcjE1MDM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1503700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmayer", "html_url": "https://github.com/justinmayer", "followers_url": "https://api.github.com/users/justinmayer/followers", "following_url": "https://api.github.com/users/justinmayer/following{/other_user}", "gists_url": "https://api.github.com/users/justinmayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmayer/subscriptions", "organizations_url": "https://api.github.com/users/justinmayer/orgs", "repos_url": "https://api.github.com/users/justinmayer/repos", "events_url": "https://api.github.com/users/justinmayer/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmayer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "justinmayer", "id": 1503700, "node_id": "MDQ6VXNlcjE1MDM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1503700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmayer", "html_url": "https://github.com/justinmayer", "followers_url": "https://api.github.com/users/justinmayer/followers", "following_url": "https://api.github.com/users/justinmayer/following{/other_user}", "gists_url": "https://api.github.com/users/justinmayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmayer/subscriptions", "organizations_url": "https://api.github.com/users/justinmayer/orgs", "repos_url": "https://api.github.com/users/justinmayer/repos", "events_url": "https://api.github.com/users/justinmayer/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmayer/received_events", "type": "User", "site_admin": false}, {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-02-21T18:57:40Z", "updated_at": "2018-03-15T18:13:49Z", "closed_at": "2018-03-15T18:13:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PR #104 turns off all caching on the main view via the [`@never_cache` decorator](https://github.com/KristianOellegaard/django-health-check/blob/master/health_check/views.py#L14), but without providing any reasoning, rationale, or justification for doing so. I'm not suggesting that there aren't benefits to that change, but I think it would be nice as a general matter of course if the problem(s) solved by the change were at least mentioned in the commit message and pull request.\r\n\r\nI bring this up because we deployed Django Health Check and then wondered about the possibility of it as a potential denial-of-service (DOS) attack vector. We limit in-bound requests by IP address, but if an external monitoring service were to change/relinquish IP addresses that then fell into untrusted hands, there is nothing at that point from said would-be attacker from DOS-ing health check views.\r\n\r\nWe considered adding a brief 3-second cache to our health check route to mitigate this risk, but then we realized that won't work if the underlying view has a blanket never-cache policy. Is there any reason the `@never_cache` decorator couldn't be replaced with a short, say, 3-second cache to both (1) ensure the view isn't cached for long periods of time (i.e., the ostensible reason behind adding `@never_cache` in the first place), and (2) mitigate potential DOS attacks.\r\n\r\nWhat do you think? (cc: @pierremanceaux @codingjoe)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/180", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/180/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/180/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/180", "id": 291679639, "node_id": "MDU6SXNzdWUyOTE2Nzk2Mzk=", "number": 180, "title": "Compatibility with python 3.4 broken after version 3.3.0", "user": {"login": "joac", "id": 126787, "node_id": "MDQ6VXNlcjEyNjc4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/126787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joac", "html_url": "https://github.com/joac", "followers_url": "https://api.github.com/users/joac/followers", "following_url": "https://api.github.com/users/joac/following{/other_user}", "gists_url": "https://api.github.com/users/joac/gists{/gist_id}", "starred_url": "https://api.github.com/users/joac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joac/subscriptions", "organizations_url": "https://api.github.com/users/joac/orgs", "repos_url": "https://api.github.com/users/joac/repos", "events_url": "https://api.github.com/users/joac/events{/privacy}", "received_events_url": "https://api.github.com/users/joac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T19:02:01Z", "updated_at": "2018-01-26T10:11:58Z", "closed_at": "2018-01-26T10:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the new code added, that uses ThreadPoolExecutor, the `max_workers` parameter is not set, and was required on Python 3.4\r\n\r\nhttps://docs.python.org/3.4/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor\r\n\r\nHere is the note about the parameter:\r\nhttps://docs.python.org/3.6/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/179", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/179/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/179/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/179", "id": 291482739, "node_id": "MDU6SXNzdWUyOTE0ODI3Mzk=", "number": 179, "title": "django-health-check 3.3.0 SSL CERTIFICATE_VERIFY_FAILED", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T08:07:43Z", "updated_at": "2018-01-25T08:27:53Z", "closed_at": "2018-01-25T08:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-health-check v3.3.0 was working fine until I tried to reinstall it today. \r\n```\r\nCollecting django-health-check==3.3.0 (from -r requirements.txt (line 5))\r\n  Downloading django-health-check-3.3.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Download error on https://pypi.python.org/simple/pbr/: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777) -- Some packages may not be found!\r\n    Couldn't find index page for 'pbr' (maybe misspelled?)\r\n    Download error on https://pypi.python.org/simple/: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777) -- Some packages may not be found!\r\n    No local packages or working download links found for pbr\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-lbv3uxiw/django-health-check/setup.py\", line 6, in <module>\r\n        pbr=True,\r\n      File \"/usr/local/lib/python3.6/distutils/core.py\", line 108, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/local/lib/python3.6/site-packages/setuptools/dist.py\", line 335, in __init__\r\n        self.fetch_build_eggs(attrs['setup_requires'])\r\n      File \"/usr/local/lib/python3.6/site-packages/setuptools/dist.py\", line 456, in fetch_build_eggs\r\n        replace_conflicting=True,\r\n      File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 863, in resolve\r\n        replace_conflicting=replace_conflicting\r\n      File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1141, in best_match\r\n        return self.obtain(req, installer)\r\n      File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1153, in obtain\r\n        return installer(requirement)\r\n      File \"/usr/local/lib/python3.6/site-packages/setuptools/dist.py\", line 522, in fetch_build_egg\r\n        return cmd.easy_install(req)\r\n      File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 666, in easy_install\r\n        raise DistutilsError(msg)\r\n    distutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('pbr')\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-lbv3uxiw/django-health-check/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/178", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/178/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/178/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/178", "id": 291350483, "node_id": "MDU6SXNzdWUyOTEzNTA0ODM=", "number": 178, "title": "health_check.db in 3.3.0: FATAL:  connection limit exceeded for non-superusers", "user": {"login": "courcelm", "id": 1862936, "node_id": "MDQ6VXNlcjE4NjI5MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1862936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/courcelm", "html_url": "https://github.com/courcelm", "followers_url": "https://api.github.com/users/courcelm/followers", "following_url": "https://api.github.com/users/courcelm/following{/other_user}", "gists_url": "https://api.github.com/users/courcelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/courcelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/courcelm/subscriptions", "organizations_url": "https://api.github.com/users/courcelm/orgs", "repos_url": "https://api.github.com/users/courcelm/repos", "events_url": "https://api.github.com/users/courcelm/events{/privacy}", "received_events_url": "https://api.github.com/users/courcelm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-01-24T20:34:40Z", "updated_at": "2018-02-01T12:54:28Z", "closed_at": "2018-02-01T12:54:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The latest release (3.3.0) is having an issue for the health_check.db in 3.3.0. The database connections (Postgres in my case) are piling up every time the check is run. The issue is not found in 2.2.1 to 3.2.0.\r\n\r\nI guess it is related to this new feature: \"Use futures and parallel execution to improve performance\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/175", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/175/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/175/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/175", "id": 290373745, "node_id": "MDU6SXNzdWUyOTAzNzM3NDU=", "number": 175, "title": "GCP & 3.3.0 error", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-22T07:34:13Z", "updated_at": "2018-01-22T15:31:29Z", "closed_at": "2018-01-22T15:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm quite confused regarding this bug, so it's difficult to report it.\r\n\r\nWhen using django-health-check v3.0.0, I have no problem querying my docker container, whether locally (docker-compose) or on GCP kubernetes.\r\n\r\nWhen upgrading django-health-check v3.3.0, I can still query /healthz locally (docker-compose & runserver), but my GCP environment breaks, returning 502 Bad gateway errors (kubectl & gunicorn/wsgi).\r\n\r\nDjango==2.0.1\r\n\r\nPython==3.4.2 on kubernetes, 3.6.3 in local\r\n\r\nWill try upgrading python on GCP to see whether this fixes the issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/174", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/174/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/174/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/174", "id": 290252199, "node_id": "MDU6SXNzdWUyOTAyNTIxOTk=", "number": 174, "title": "Sphinx Documentation", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-21T07:00:47Z", "updated_at": "2018-01-23T19:32:26Z", "closed_at": "2018-01-23T19:32:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would a PR starting Sphinx generated documentation be welcome? This would solve #170, #171 partially and #173.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/173", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/173/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/173/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/173", "id": 290185570, "node_id": "MDU6SXNzdWUyOTAxODU1NzA=", "number": 173, "title": "Document supported Python-Django combinations", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 812774681, "node_id": "MDU6TGFiZWw4MTI3NzQ2ODE=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/documenation", "name": "documenation", "color": "83e27c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-20T11:33:06Z", "updated_at": "2018-01-23T19:32:26Z", "closed_at": "2018-01-23T19:32:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Document which versions are supported in this package. From the ChangeLog (#171) I conclude\r\n\r\nPython 3.6 / Django 1.11\r\nPython 3.6 / Django 2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/172", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/172/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/172/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/172", "id": 290175661, "node_id": "MDU6SXNzdWUyOTAxNzU2NjE=", "number": 172, "title": "Dependancy missing", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-20T08:23:25Z", "updated_at": "2018-01-20T17:27:32Z", "closed_at": "2018-01-20T17:27:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 2.7, Django 1.11 and django-health-check 3.3.0 crash on a missing dependency:\r\n\r\n```\r\nFile \"/Users/dylan/.pyenv/versions/meetnetten/lib/python2.7/site-packages/health_check/views.py\", line 2, in <module>\r\n    from concurrent.futures import ThreadPoolExecutor\r\nImportError: No module named concurrent.futures\r\n```\r\n\r\nReverting to 2.4.0 resolves this error for now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/171", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/171/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/171/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/171", "id": 290175526, "node_id": "MDU6SXNzdWUyOTAxNzU1MjY=", "number": 171, "title": "Add ChangeLog to repo please", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-20T08:21:03Z", "updated_at": "2018-01-22T15:45:05Z", "closed_at": "2018-01-22T15:43:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Going from 2.4.0 to 3.3.0 we have no clue what is changed. Please add a CHANGELOG.md to document changes between releases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/170", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/170/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/170/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/170", "id": 290175468, "node_id": "MDU6SXNzdWUyOTAxNzU0Njg=", "number": 170, "title": "Documentation is gone", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 812774681, "node_id": "MDU6TGFiZWw4MTI3NzQ2ODE=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/documenation", "name": "documenation", "color": "83e27c", "default": false, "description": null}, {"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-01-20T08:19:37Z", "updated_at": "2018-01-23T19:32:26Z", "closed_at": "2018-01-23T19:32:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://kristianoellegaard.github.com/django-health-check/ no longer exists.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/166", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/166/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/166/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/166", "id": 288440963, "node_id": "MDU6SXNzdWUyODg0NDA5NjM=", "number": 166, "title": "Django system check warning on URL route entry", "user": {"login": "justinmayer", "id": 1503700, "node_id": "MDQ6VXNlcjE1MDM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1503700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmayer", "html_url": "https://github.com/justinmayer", "followers_url": "https://api.github.com/users/justinmayer/followers", "following_url": "https://api.github.com/users/justinmayer/following{/other_user}", "gists_url": "https://api.github.com/users/justinmayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmayer/subscriptions", "organizations_url": "https://api.github.com/users/justinmayer/orgs", "repos_url": "https://api.github.com/users/justinmayer/repos", "events_url": "https://api.github.com/users/justinmayer/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-14T21:24:29Z", "updated_at": "2018-01-15T17:56:55Z", "closed_at": "2018-01-15T17:56:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current README suggests the following urls.py entry:\r\n```\r\nurl(r'^ht/$', include('health_check.urls')),\r\n```\r\nHowever, running `django-admin check` then yields:\r\n```\r\nSystem check identified some issues:\r\n\r\nWARNINGS:\r\n?: (urls.W001) Your URL pattern '^ht/$' uses include with a regex ending with a '$'. Remove the dollar from the regex to avoid problems including URLs.\r\n```\r\nRemoving the dollar sign caused the warning to go away, with no apparent ill effects regarding django-health-check app functionality.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/165", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/165/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/165/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/165", "id": 288349154, "node_id": "MDU6SXNzdWUyODgzNDkxNTQ=", "number": 165, "title": "Application labels aren't unique, duplicates: celery", "user": {"login": "tobiasgoecke", "id": 3664146, "node_id": "MDQ6VXNlcjM2NjQxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3664146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgoecke", "html_url": "https://github.com/tobiasgoecke", "followers_url": "https://api.github.com/users/tobiasgoecke/followers", "following_url": "https://api.github.com/users/tobiasgoecke/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgoecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgoecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgoecke/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgoecke/orgs", "repos_url": "https://api.github.com/users/tobiasgoecke/repos", "events_url": "https://api.github.com/users/tobiasgoecke/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgoecke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-13T18:28:52Z", "updated_at": "2018-12-06T12:27:14Z", "closed_at": "2018-01-14T12:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "After activating the celery health check in Django I got the following error:\r\n`django.core.exceptions.ImproperlyConfigured: Application labels aren't unique, duplicates: celery`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/164", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/164/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/164/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/164", "id": 284586592, "node_id": "MDU6SXNzdWUyODQ1ODY1OTI=", "number": 164, "title": "healthcheck db required write permission?", "user": {"login": "nishit539687", "id": 34760026, "node_id": "MDQ6VXNlcjM0NzYwMDI2", "avatar_url": "https://avatars2.githubusercontent.com/u/34760026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nishit539687", "html_url": "https://github.com/nishit539687", "followers_url": "https://api.github.com/users/nishit539687/followers", "following_url": "https://api.github.com/users/nishit539687/following{/other_user}", "gists_url": "https://api.github.com/users/nishit539687/gists{/gist_id}", "starred_url": "https://api.github.com/users/nishit539687/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nishit539687/subscriptions", "organizations_url": "https://api.github.com/users/nishit539687/orgs", "repos_url": "https://api.github.com/users/nishit539687/repos", "events_url": "https://api.github.com/users/nishit539687/events{/privacy}", "received_events_url": "https://api.github.com/users/nishit539687/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-26T17:29:38Z", "updated_at": "2017-12-29T18:43:17Z", "closed_at": "2017-12-27T15:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI have RDS with only read permission and i am checking health-check db and i found my status was  failed .so health-check db required the write permission? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/158", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/158/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/158/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/158", "id": 278494330, "node_id": "MDU6SXNzdWUyNzg0OTQzMzA=", "number": 158, "title": "Getting exception ", "user": {"login": "neerajprasad", "id": 6658157, "node_id": "MDQ6VXNlcjY2NTgxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6658157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprasad", "html_url": "https://github.com/neerajprasad", "followers_url": "https://api.github.com/users/neerajprasad/followers", "following_url": "https://api.github.com/users/neerajprasad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprasad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprasad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprasad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprasad/orgs", "repos_url": "https://api.github.com/users/neerajprasad/repos", "events_url": "https://api.github.com/users/neerajprasad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprasad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-12-01T15:07:16Z", "updated_at": "2017-12-03T08:50:38Z", "closed_at": "2017-12-03T08:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n   I am implementing health check for my project and it work absolute fine until when i try to enable cache in my project.\r\n\r\nI tried all possible way from my side but couldn't able to figure out.\r\n\r\nPlease help .\r\n=========\r\nUrls :\r\n```\r\nurlpatterns = patterns(\r\nurl(r'^api/health/$', include('health_check.urls'))\r\n)\r\n```\r\nSettings: config\r\n```\r\nINSTALLED_APPS =[\r\n'health_check',  # required\r\n    'health_check.db',  # stock Django health checkers\r\n    'health_check.contrib.rmq',\r\n    'health_check.cache'\r\n]\r\nHEALTH_CHECK_CONF = dict(rmq_host=BROKER_URL, sqs_queue_name='queue_name', region_name='eu-west-1',\r\n                         aws_secret_access_key='mykey', aws_access_key_id='access_id',\r\n                         soft_dependencies=[CACHES]\r\n                         )\r\n\r\n```\r\n===========\r\n```\r\n Traceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/neeraj/virtualenv/python2/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/neeraj/virtualenv/python2/lib/python2.7/site-packages/django/core/management/__init__.py\", line 312, in execute\r\n    django.setup()\r\n  File \"/Users/neeraj/virtualenv/python2/lib/python2.7/site-packages/django/__init__.py\", line 18, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/neeraj/virtualenv/python2/lib/python2.7/site-packages/django/apps/registry.py\", line 85, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/Users/neeraj/virtualenv/python2/lib/python2.7/site-packages/django/apps/config.py\", line 119, in create\r\n    import_module(entry)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named cacherest_framework\r\n```\r\n==========\r\n\r\n\r\nRegards,\r\nNeeraj", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/144", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/144/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/144/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/144", "id": 258520866, "node_id": "MDU6SXNzdWUyNTg1MjA4NjY=", "number": 144, "title": "Getting \"Unknown error\" for CeleryHealthCheck", "user": {"login": "GyanP", "id": 10600741, "node_id": "MDQ6VXNlcjEwNjAwNzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/10600741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GyanP", "html_url": "https://github.com/GyanP", "followers_url": "https://api.github.com/users/GyanP/followers", "following_url": "https://api.github.com/users/GyanP/following{/other_user}", "gists_url": "https://api.github.com/users/GyanP/gists{/gist_id}", "starred_url": "https://api.github.com/users/GyanP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GyanP/subscriptions", "organizations_url": "https://api.github.com/users/GyanP/orgs", "repos_url": "https://api.github.com/users/GyanP/repos", "events_url": "https://api.github.com/users/GyanP/events{/privacy}", "received_events_url": "https://api.github.com/users/GyanP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-18T15:26:14Z", "updated_at": "2017-09-21T18:50:26Z", "closed_at": "2017-09-21T18:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I digging this error and found the actual error \"No result backend is configured\" in\r\n https://github.com/KristianOellegaard/django-health-check/blob/master/health_check/contrib/celery/backends.py at line 20\r\n\r\nresult.get(timeout=timeout)\r\n\r\nCan anyone help me on this?\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/140", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/140/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/140/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/140", "id": 255898887, "node_id": "MDU6SXNzdWUyNTU4OTg4ODc=", "number": 140, "title": "Problems with Django 1.6", "user": {"login": "gdavoianb", "id": 24395166, "node_id": "MDQ6VXNlcjI0Mzk1MTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/24395166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdavoianb", "html_url": "https://github.com/gdavoianb", "followers_url": "https://api.github.com/users/gdavoianb/followers", "following_url": "https://api.github.com/users/gdavoianb/following{/other_user}", "gists_url": "https://api.github.com/users/gdavoianb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdavoianb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdavoianb/subscriptions", "organizations_url": "https://api.github.com/users/gdavoianb/orgs", "repos_url": "https://api.github.com/users/gdavoianb/repos", "events_url": "https://api.github.com/users/gdavoianb/events{/privacy}", "received_events_url": "https://api.github.com/users/gdavoianb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-07T11:02:45Z", "updated_at": "2017-09-07T15:26:11Z", "closed_at": "2017-09-07T15:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This [line](https://github.com/KristianOellegaard/django-health-check/blob/4c64730524efb26f7763f5eb070b10975a5e6193/health_check/views.py#L4) completely breaks compatibiliy with Django 1.6 (yes, we are still using it in some of our projects). I know it is easy to fix, but it is up to you decide whether you want to main compatibility. \r\nBut even after manually replacing that JsonResponse with a proper HttpResponse in source code, all json-requests to `^ht/` always return `{}` (used the same settings described in README). And actually that's my main concern. \r\nBtw the older version [1.3](https://pypi.python.org/pypi/django-health-check/1.3) also doesn't work with Django 1.6 due to the line `from django.utils.module_loading import autodiscover_modules`  (though `Django 1.4+` was stated in `Dependencies`). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/123", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/123/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/123/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/123", "id": 236815102, "node_id": "MDU6SXNzdWUyMzY4MTUxMDI=", "number": 123, "title": "Add timer and elapsed time to checks", "user": {"login": "paurullan", "id": 305266, "node_id": "MDQ6VXNlcjMwNTI2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/305266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paurullan", "html_url": "https://github.com/paurullan", "followers_url": "https://api.github.com/users/paurullan/followers", "following_url": "https://api.github.com/users/paurullan/following{/other_user}", "gists_url": "https://api.github.com/users/paurullan/gists{/gist_id}", "starred_url": "https://api.github.com/users/paurullan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paurullan/subscriptions", "organizations_url": "https://api.github.com/users/paurullan/orgs", "repos_url": "https://api.github.com/users/paurullan/repos", "events_url": "https://api.github.com/users/paurullan/events{/privacy}", "received_events_url": "https://api.github.com/users/paurullan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-06-19T08:28:01Z", "updated_at": "2017-08-31T11:37:32Z", "closed_at": "2017-08-31T11:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are adopting django-health-check as our base health check helper and one thing we had in our custom health checks was showing the elapsed time. For example:\r\n\r\n```python\r\nfrom contexttimer import Timer\r\nfrom api.models import City\r\n\r\ndef health_check_view(request):\r\n    with Timer() as timer_db:\r\n        City.objects.first()\r\n    response = \"ok; db: {}\".format(timer_db.elapsed)\r\n    return HttpResponse(response)\r\n```\r\n\r\nI am planning to put this in django-health-check but you do not have any package dependency. Will you accept the feature even if it forces a dependency?\r\nhttps://pypi.python.org/pypi/contexttimer/0.3.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/101", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/101/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/101/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/101", "id": 214316406, "node_id": "MDU6SXNzdWUyMTQzMTY0MDY=", "number": 101, "title": "Update or remove GitHub page and link for the project", "user": {"login": "aleksihakli", "id": 2477934, "node_id": "MDQ6VXNlcjI0Nzc5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2477934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksihakli", "html_url": "https://github.com/aleksihakli", "followers_url": "https://api.github.com/users/aleksihakli/followers", "following_url": "https://api.github.com/users/aleksihakli/following{/other_user}", "gists_url": "https://api.github.com/users/aleksihakli/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksihakli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksihakli/subscriptions", "organizations_url": "https://api.github.com/users/aleksihakli/orgs", "repos_url": "https://api.github.com/users/aleksihakli/repos", "events_url": "https://api.github.com/users/aleksihakli/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksihakli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-15T08:28:45Z", "updated_at": "2018-01-24T17:13:05Z", "closed_at": "2018-01-24T17:13:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment the [GitHub Pages view](http://kristianoellegaard.github.com/django-health-check/) for the project are a bit outdated and, I think, a bit redundant as well, since we have a nice description on the README that is available on both GitHub, PyPI and Django Packages :) Maybe the link could be removed as outdated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/99", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/99/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/99/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/99", "id": 211732229, "node_id": "MDU6SXNzdWUyMTE3MzIyMjk=", "number": 99, "title": "Celery backend", "user": {"login": "courcelm", "id": 1862936, "node_id": "MDQ6VXNlcjE4NjI5MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1862936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/courcelm", "html_url": "https://github.com/courcelm", "followers_url": "https://api.github.com/users/courcelm/followers", "following_url": "https://api.github.com/users/courcelm/following{/other_user}", "gists_url": "https://api.github.com/users/courcelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/courcelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/courcelm/subscriptions", "organizations_url": "https://api.github.com/users/courcelm/orgs", "repos_url": "https://api.github.com/users/courcelm/repos", "events_url": "https://api.github.com/users/courcelm/events{/privacy}", "received_events_url": "https://api.github.com/users/courcelm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-03-03T16:14:51Z", "updated_at": "2018-01-22T13:39:16Z", "closed_at": "2018-01-22T13:39:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting the following error with the celery backend:\r\n\r\n[2017-03-03 11:12:08,194: INFO/MainProcess] Discarding revoked task: health_check.contrib.celery.tasks.add[ac03c91f-c578-43d4-bf64-23f8ecdc0872]\r\n\r\nException print:  expired", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/93", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/93/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/93/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/93", "id": 205560701, "node_id": "MDU6SXNzdWUyMDU1NjA3MDE=", "number": 93, "title": "Development status and assorted properties not defined in the PyPI page", "user": {"login": "aleksihakli", "id": 2477934, "node_id": "MDQ6VXNlcjI0Nzc5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2477934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksihakli", "html_url": "https://github.com/aleksihakli", "followers_url": "https://api.github.com/users/aleksihakli/followers", "following_url": "https://api.github.com/users/aleksihakli/following{/other_user}", "gists_url": "https://api.github.com/users/aleksihakli/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksihakli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksihakli/subscriptions", "organizations_url": "https://api.github.com/users/aleksihakli/orgs", "repos_url": "https://api.github.com/users/aleksihakli/repos", "events_url": "https://api.github.com/users/aleksihakli/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksihakli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-06T11:53:52Z", "updated_at": "2017-02-07T15:15:51Z", "closed_at": "2017-02-07T15:15:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Project PyPI page does not have a Development Status defined:\r\n\r\nhttps://pypi.python.org/pypi/django-health-check\r\n\r\nAnd it shows status as unknown in Django Packages:\r\n\r\nhttps://djangopackages.org/packages/p/django-health-check/\r\n\r\nI think the following [trove classifiers](https://pypi.python.org/pypi?%3Aaction=list_classifiers) could be added for the project to make it easier to find:\r\n\r\n```\r\nDevelopment Status :: 5 - Production/Stable\r\nFramework :: Django\r\n```\r\n\r\nSome of the following classifiers could also be useful:\r\n\r\n```\r\nFramework :: Django :: 1.8\r\nFramework :: Django :: 1.9\r\nFramework :: Django :: 1.10\r\n\r\nIntended Audience :: Developers\r\n\r\nLicense :: OSI Approved :: MIT License\r\nLicense :: Public Domain\r\n\r\nOperating System :: OS Independent\r\n\r\nTopic :: System :: Logging\r\nTopic :: System :: Monitoring\r\nTopic :: Software Development :: Quality Assurance\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/90", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/90/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/90/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/90", "id": 203684282, "node_id": "MDU6SXNzdWUyMDM2ODQyODI=", "number": 90, "title": "notify admin on 500", "user": {"login": "jheld", "id": 828813, "node_id": "MDQ6VXNlcjgyODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/828813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jheld", "html_url": "https://github.com/jheld", "followers_url": "https://api.github.com/users/jheld/followers", "following_url": "https://api.github.com/users/jheld/following{/other_user}", "gists_url": "https://api.github.com/users/jheld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jheld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jheld/subscriptions", "organizations_url": "https://api.github.com/users/jheld/orgs", "repos_url": "https://api.github.com/users/jheld/repos", "events_url": "https://api.github.com/users/jheld/events{/privacy}", "received_events_url": "https://api.github.com/users/jheld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-01-27T16:47:53Z", "updated_at": "2017-01-30T14:06:46Z", "closed_at": "2017-01-30T14:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you accept a PR for implementing a custom setting (via a settings.py that reads from the project) to notify admins of 500s?\r\nIf True, and maybe some other fine-tuned details, the admin/people/endpoint will get notified of an error, and by default/False, they won't.\r\n\r\nI realize monitoring and bot services can do this for us, but in the case of not using those services, it may be nice to have the option for a built-in version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/81", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/81/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/81/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/81", "id": 200094135, "node_id": "MDU6SXNzdWUyMDAwOTQxMzU=", "number": 81, "title": "Redis cache ConnectionError", "user": {"login": "courcelm", "id": 1862936, "node_id": "MDQ6VXNlcjE4NjI5MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1862936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/courcelm", "html_url": "https://github.com/courcelm", "followers_url": "https://api.github.com/users/courcelm/followers", "following_url": "https://api.github.com/users/courcelm/following{/other_user}", "gists_url": "https://api.github.com/users/courcelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/courcelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/courcelm/subscriptions", "organizations_url": "https://api.github.com/users/courcelm/orgs", "repos_url": "https://api.github.com/users/courcelm/repos", "events_url": "https://api.github.com/users/courcelm/events{/privacy}", "received_events_url": "https://api.github.com/users/courcelm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-11T13:32:24Z", "updated_at": "2017-01-11T14:33:12Z", "closed_at": "2017-01-11T14:33:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For Redis cache backend, I would be great to add ConnectionError exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/77", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/77/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/77/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/77", "id": 198593317, "node_id": "MDU6SXNzdWUxOTg1OTMzMTc=", "number": 77, "title": "Installation steps", "user": {"login": "morenoh149", "id": 587438, "node_id": "MDQ6VXNlcjU4NzQzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/587438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morenoh149", "html_url": "https://github.com/morenoh149", "followers_url": "https://api.github.com/users/morenoh149/followers", "following_url": "https://api.github.com/users/morenoh149/following{/other_user}", "gists_url": "https://api.github.com/users/morenoh149/gists{/gist_id}", "starred_url": "https://api.github.com/users/morenoh149/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morenoh149/subscriptions", "organizations_url": "https://api.github.com/users/morenoh149/orgs", "repos_url": "https://api.github.com/users/morenoh149/repos", "events_url": "https://api.github.com/users/morenoh149/events{/privacy}", "received_events_url": "https://api.github.com/users/morenoh149/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-03T23:12:35Z", "updated_at": "2017-01-05T18:27:19Z", "closed_at": "2017-01-05T18:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "My django project may be nonstandard hence my troubles.\r\n\r\nI have made the following changes\r\n\r\n```python\r\n# projectName/core/foo/internal/views.py\r\n+import health_check.backends.base\r\n\r\nfooViewSet(projectName.common.internal.views.ModelViewSet):\r\n             instance.fail()\r\n             instance.save()\r\n         return self.instance_to_json(request, instance)\r\n+\r\n+class CustomTest(health_check.backends.base.BaseHealthCheckBackend):\r\n+    def check_status(self):\r\n+        try:\r\n+            my_model = projectName.core.foo.models.Foo.objects.create(\r\n+                source=projectName.core.foo.models.Foo.CONST,\r\n+            )\r\n+            my_model.save()\r\n+            my_model.delete()\r\n+            return True\r\n+        except IntegrityError:\r\n+            raise ServiceReturnedUnexpectedResult(\"Integrity Error\")\r\n+        except DatabaseError:\r\n+            raise ServiceUnavailable(\"Database error\")\r\n+\r\n+django.contrib.admin.site.register(CustomTest)\r\n```\r\n\r\n```python\r\n# projectName/core/urls.py\r\n import django.conf.urls\r\n \r\n+import health_check\r\n\r\n...\r\n\r\n internal_urls = [\r\n+    django.conf.urls.url(r'^ht/', django.conf.urls.include(health_check.urls)),\r\n ]\r\n\r\nurlpatterns = [\r\n    django.conf.urls.url(r'^internal/', django.conf.urls.include(internal_urls, namespace='core_internal')),\r\n]\r\n```\r\n\r\n```python\r\n# /config/settings/__default__.py b/config/settings/__default__.py\r\nINSTALLED_APPS = [\r\n+    'health_check',\r\n+    'health_check_celery3',\r\n+    'health_check_db',\r\n+    'health_check_cache',\r\n+    'health_check_storage',\r\n]\r\n```\r\n\r\n```txt\r\n# requirements.txt\r\n+django-health-check==1.3.0\r\n```\r\n\r\nI get the error\r\n```bash\r\nTraceback (most recent call last):\r\n          File \"manage.py\", line 17, in <module>\r\n              execute_from_command_line(sys.argv)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\r\n              utility.execute()\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/management/__init__.py\", line 345, in execute\r\n              self.fetch_command(subcommand).run_from_argv(self.argv)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\r\n              self.execute(*args, **cmd_options)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/management/base.py\", line 398, in execute\r\n              self.check()\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/management/base.py\", line 426, in check\r\n              include_deployment_checks=include_deployment_checks,\r\n                File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/checks/registry.py\", line 75, in run_checks\r\n              new_errors = check(app_configs=app_configs)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\n              return check_resolver(resolver)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\n              for pattern in resolver.url_patterns:\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/utils/functional.py\", line 33, in __get__\r\n              res = instance.__dict__[self.name] = self.func(instance)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/urlresolvers.py\", line 417, in url_patterns\r\n              patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/utils/functional.py\", line 33, in __get__\r\n              res = instance.__dict__[self.name] = self.func(instance)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/core/urlresolvers.py\", line 410, in urlconf_module\r\n              return import_module(self.urlconf_name)\r\n            File \"/opt/foo/.pyenv/versions/2.7.11/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n              __import__(name)\r\n            File \"/Users/harry/programming/project/foo/urls.py\", line 7, in <module>\r\n              import foo.core.urls\r\n            File \"/Users/harry/programming/project/foo/core/urls.py\", line 13, in <module>\r\n              import foo.core.modelName.internal.views\r\n            File \"/Users/harry/programming/project/foo/core/modelName/internal/views.py\", line 176, in <module>\r\n              django.contrib.admin.site.register(HealthCheckModelLookup)\r\n            File \"/Users/harry/programming/project/env/project/lib/python2.7/site-packages/django/contrib/admin/sites.py\", line 86, in register\r\n              for model in model_or_iterable:\r\n          TypeError: 'type' object is not iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/74", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/74/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/74/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/74", "id": 197456646, "node_id": "MDU6SXNzdWUxOTc0NTY2NDY=", "number": 74, "title": "Use get() instead of polling for celery health check", "user": {"login": "MarcoGlauser", "id": 924855, "node_id": "MDQ6VXNlcjkyNDg1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/924855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGlauser", "html_url": "https://github.com/MarcoGlauser", "followers_url": "https://api.github.com/users/MarcoGlauser/followers", "following_url": "https://api.github.com/users/MarcoGlauser/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGlauser/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGlauser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGlauser/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGlauser/orgs", "repos_url": "https://api.github.com/users/MarcoGlauser/repos", "events_url": "https://api.github.com/users/MarcoGlauser/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGlauser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-24T09:48:51Z", "updated_at": "2017-01-09T09:02:04Z", "closed_at": "2017-01-07T13:13:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey\r\nI'd like to refactor the celery health check to remove the self implemented polling of the result and instead use [result.get()](http://docs.celeryproject.org/en/latest/reference/celery.result.html#celery.result.ResultSet.get). This way we wouldn't be using polling for the rabbitmq,redis,memcached backends. Also we could use the timeout parameter of get() so we get the celery.exceptions.TimeoutError of celery.\r\nDoes anyone see a problem with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/70", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/70/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/70/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/70", "id": 196331331, "node_id": "MDU6SXNzdWUxOTYzMzEzMzE=", "number": 70, "title": "Supports for Celery4", "user": {"login": "Beomi", "id": 11323660, "node_id": "MDQ6VXNlcjExMzIzNjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/11323660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Beomi", "html_url": "https://github.com/Beomi", "followers_url": "https://api.github.com/users/Beomi/followers", "following_url": "https://api.github.com/users/Beomi/following{/other_user}", "gists_url": "https://api.github.com/users/Beomi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Beomi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Beomi/subscriptions", "organizations_url": "https://api.github.com/users/Beomi/orgs", "repos_url": "https://api.github.com/users/Beomi/repos", "events_url": "https://api.github.com/users/Beomi/events{/privacy}", "received_events_url": "https://api.github.com/users/Beomi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-19T04:56:01Z", "updated_at": "2017-01-10T16:35:58Z", "closed_at": "2017-01-10T16:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Celery4 is relased now.\r\nDoes django-health-check supports celery 4?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/62", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/62/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/62/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/62", "id": 193300343, "node_id": "MDU6SXNzdWUxOTMzMDAzNDM=", "number": 62, "title": "Project updates", "user": {"login": "aleksihakli", "id": 2477934, "node_id": "MDQ6VXNlcjI0Nzc5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2477934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksihakli", "html_url": "https://github.com/aleksihakli", "followers_url": "https://api.github.com/users/aleksihakli/followers", "following_url": "https://api.github.com/users/aleksihakli/following{/other_user}", "gists_url": "https://api.github.com/users/aleksihakli/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksihakli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksihakli/subscriptions", "organizations_url": "https://api.github.com/users/aleksihakli/orgs", "repos_url": "https://api.github.com/users/aleksihakli/repos", "events_url": "https://api.github.com/users/aleksihakli/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksihakli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-03T16:50:05Z", "updated_at": "2016-12-16T13:17:22Z", "closed_at": "2016-12-16T13:17:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was planning on contributing the following updates to the project:\r\n\r\n- Rewrite the bundled storage backend to internally provide and use `check_save` and `check_delete` methods that could be overridden per storage backend instead of overriding the whole `check_status` backend. This would not be a breaking change and would \r\n- Add a bundled S3 storage backend checker for AWS health checking compatibility, for example `health_check_storage_s3`, which utilizes the S3BotoStorage interface from the django-storages. This is a very widely used package in AWS and Heroku which would be nice to support here as well. It is officially recommended by Heroku;\r\n- Upgrade README from Markdown to reStructuredText for PyPI documentation compatibility (this is the preferred format for Python packages and is supported by GitHub and many other VCS services out-of-the-box.\r\n\r\nI thought to ask about the plan before starting the work as to avoid unnecessary changes that could be rejected in PRs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/61", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/61/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/61/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/61", "id": 190758995, "node_id": "MDU6SXNzdWUxOTA3NTg5OTU=", "number": 61, "title": "DB migrations fail when upgrading to v1.2.0", "user": {"login": "christopherdcunha", "id": 1480177, "node_id": "MDQ6VXNlcjE0ODAxNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1480177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherdcunha", "html_url": "https://github.com/christopherdcunha", "followers_url": "https://api.github.com/users/christopherdcunha/followers", "following_url": "https://api.github.com/users/christopherdcunha/following{/other_user}", "gists_url": "https://api.github.com/users/christopherdcunha/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherdcunha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherdcunha/subscriptions", "organizations_url": "https://api.github.com/users/christopherdcunha/orgs", "repos_url": "https://api.github.com/users/christopherdcunha/repos", "events_url": "https://api.github.com/users/christopherdcunha/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherdcunha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-21T16:01:16Z", "updated_at": "2016-11-28T09:16:08Z", "closed_at": "2016-11-28T09:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Tested with\r\n\r\n- django 1.8.15\r\n- django-health-check 1.1.4 migrated to 1.2.0\r\n\r\n# Steps to reproduce\r\n[Install django 1.8.15 and django-health-check 1.1.4](#given1)\r\n[Configure django-health-check](#given2)\r\n[Migrate the database](#given3)\r\n[Upgrade to django-health-check 1.2.0](#when1)\r\n[Migrate the database and see that the migration fails](#then)\r\n\r\n# Work arounds\r\n[Fake the database migration](#workaround)\r\n\r\n<a name=\"given1\"/>\r\n\r\n## Install django 1.8.15 and django-health-check 1.1.4\r\n\r\n```bash\r\n$ mktmpenv     \r\n$ pip install django==1.8.15 django-health-check==1.1.4 \r\n$ pip freeze\r\nDjango==1.8.15\r\ndjango-health-check==1.1.4\r\n```\r\n\r\n<a name=\"given2\"/>\r\n\r\n## Configure django-health-check\r\n\r\n```bash\r\n$ django-admin startproject myproject                  \r\n$ vim ./myproject/myproject/settings.py \r\n# Add 'health_check_*' to INSTALLED_APPS\r\n$ vim ./myproject/myproject/urls.py\r\n# Add '/healthcheck/' URLs.\r\n```\r\n\r\n<a name=\"given3\"/>\r\n\r\n## Migrate the database\r\n\r\n```bash\r\n$ ./myproject/manage.py migrate\r\nOperations to perform:\r\n  Synchronize unmigrated apps: health_check, staticfiles, messages, health_check_storage, health_check_db, health_check_cache\r\n  Apply all migrations: admin, contenttypes, auth, sessions\r\nSynchronizing apps without migrations:\r\n  Creating tables...\r\n    Creating table health_check_db_testmodel\r\n    Running deferred SQL...\r\n  Installing custom SQL...\r\nRunning migrations:\r\n  Rendering model states... DONE\r\n  Applying contenttypes.0001_initial... OK\r\n  Applying auth.0001_initial... OK\r\n  Applying admin.0001_initial... OK\r\n  Applying contenttypes.0002_remove_content_type_name... OK\r\n  Applying auth.0002_alter_permission_name_max_length... OK\r\n  Applying auth.0003_alter_user_email_max_length... OK\r\n  Applying auth.0004_alter_user_username_opts... OK\r\n  Applying auth.0005_alter_user_last_login_null... OK\r\n  Applying auth.0006_require_contenttypes_0002... OK\r\n  Applying sessions.0001_initial... OK\r\n```\r\n  \r\n<a name=\"when1\"/>\r\n\r\n## Upgrade to django-health-check 1.2.0\r\n\r\n```bash\r\n$ pip install django==1.8.15 django-health-check==1.2.0\r\n```\r\n\r\n<a name=\"then\"/>\r\n\r\n## Migrate the database and see that the migration fails\r\n\r\n```\r\n$ ./myproject/manage.py migrate                        \r\nOperations to perform:\r\n  Synchronize unmigrated apps: staticfiles, health_check, messages, health_check_storage, health_check_cache\r\n  Apply all migrations: admin, contenttypes, health_check_db, auth, sessions\r\nSynchronizing apps without migrations:\r\n  Creating tables...\r\n    Running deferred SQL...\r\n  Installing custom SQL...\r\nRunning migrations:\r\n  Rendering model states... DONE\r\n  Applying health_check_db.0001_initial...Traceback (most recent call last):\r\n  File \"./myproject/manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 354, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 346, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/core/management/base.py\", line 394, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/core/management/base.py\", line 445, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 222, in handle\r\n    executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 110, in migrate\r\n    self.apply_migration(states[migration], migration, fake=fake, fake_initial=fake_initial)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 148, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 115, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/migrations/operations/models.py\", line 59, in database_forwards\r\n    schema_editor.create_model(model)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 286, in create_model\r\n    self.execute(sql, params or None)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 111, in execute\r\n    cursor.execute(sql, params)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/utils.py\", line 98, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 62, in execute\r\n    return self.cursor.execute(sql)\r\n  File \"/home/christopherd/.virtualenvs/tmp-1bfff73823f1c428/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\", line 316, in execute\r\n    return Database.Cursor.execute(self, query)\r\ndjango.db.utils.OperationalError: table \"health_check_db_testmodel\" already exists\r\n```\r\n\r\n<a name=\"workaround\"/>\r\n\r\n## Fake the database migration\r\n\r\n```bash\r\n$ ./myproject/manage.py migrate --list\r\nadmin\r\n [X] 0001_initial\r\nauth\r\n [X] 0001_initial\r\n [X] 0002_alter_permission_name_max_length\r\n [X] 0003_alter_user_email_max_length\r\n [X] 0004_alter_user_username_opts\r\n [X] 0005_alter_user_last_login_null\r\n [X] 0006_require_contenttypes_0002\r\ncontenttypes\r\n [X] 0001_initial\r\n [X] 0002_remove_content_type_name\r\nhealth_check_db\r\n [ ] 0001_initial\r\nsessions\r\n [X] 0001_initial\r\n$ ./myproject/manage.py migrate health_check_db 0001 --fake\r\nOperations to perform:\r\n  Target specific migration: 0001_initial, from health_check_db\r\nRunning migrations:\r\n  Rendering model states... DONE\r\n  Applying health_check_db.0001_initial... FAKED\r\n$ ./myproject/manage.py runserver  \r\nPerforming system checks...\r\n\r\nSystem check identified no issues (0 silenced).\r\nNovember 21, 2016 - 15:37:25\r\nDjango version 1.8.15, using settings 'myproject.settings'\r\nStarting development server at http://127.0.0.1:8000/\r\nQuit the server with CONTROL-C.\r\n[21/Nov/2016 15:37:26] \"GET /healthcheck HTTP/1.1\" 301 0\r\n[21/Nov/2016 15:37:26] \"GET /healthcheck/ HTTP/1.1\" 200 1516\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/60", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/60/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/60/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/60", "id": 186727826, "node_id": "MDU6SXNzdWUxODY3Mjc4MjY=", "number": 60, "title": "cannot import name autodiscover_modules", "user": {"login": "tristanguo", "id": 899903, "node_id": "MDQ6VXNlcjg5OTkwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/899903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tristanguo", "html_url": "https://github.com/tristanguo", "followers_url": "https://api.github.com/users/tristanguo/followers", "following_url": "https://api.github.com/users/tristanguo/following{/other_user}", "gists_url": "https://api.github.com/users/tristanguo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tristanguo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tristanguo/subscriptions", "organizations_url": "https://api.github.com/users/tristanguo/orgs", "repos_url": "https://api.github.com/users/tristanguo/repos", "events_url": "https://api.github.com/users/tristanguo/events{/privacy}", "received_events_url": "https://api.github.com/users/tristanguo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-02T07:12:03Z", "updated_at": "2016-11-11T03:11:20Z", "closed_at": "2016-11-06T11:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "A legacy project with Django 1.6.3.\r\n\r\nThere is no such module in django.utils.module_loading?\r\n\r\n_Django Version:\t1.6.3\r\nException Type:\tImportError\r\nException Value:\t\r\ncannot import name autodiscover_modules\r\nException Location:\t/Users/tristanguo/workspace/python_envs/xxx/lib/python2.7/site-packages/health_check/__init__.py in autodiscover, line 20_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/59", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/59/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/59/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/59", "id": 181615725, "node_id": "MDU6SXNzdWUxODE2MTU3MjU=", "number": 59, "title": "Green indicators are not working", "user": {"login": "primoz-k", "id": 4609507, "node_id": "MDQ6VXNlcjQ2MDk1MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4609507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/primoz-k", "html_url": "https://github.com/primoz-k", "followers_url": "https://api.github.com/users/primoz-k/followers", "following_url": "https://api.github.com/users/primoz-k/following{/other_user}", "gists_url": "https://api.github.com/users/primoz-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/primoz-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/primoz-k/subscriptions", "organizations_url": "https://api.github.com/users/primoz-k/orgs", "repos_url": "https://api.github.com/users/primoz-k/repos", "events_url": "https://api.github.com/users/primoz-k/events{/privacy}", "received_events_url": "https://api.github.com/users/primoz-k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-10-07T08:51:55Z", "updated_at": "2017-01-12T22:08:37Z", "closed_at": "2017-01-12T22:08:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, I just noticed that in my template working checks result as `status_True` instead of `status_1`.\n\nUnavailable checks result as `status_0` as they should.\n\nIs this just me or is anyone else experiencing the same issue? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/57", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/57/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/57/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/57", "id": 179846442, "node_id": "MDU6SXNzdWUxNzk4NDY0NDI=", "number": 57, "title": "Migration for db not included in python egg", "user": {"login": "joekiller", "id": 1022919, "node_id": "MDQ6VXNlcjEwMjI5MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1022919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joekiller", "html_url": "https://github.com/joekiller", "followers_url": "https://api.github.com/users/joekiller/followers", "following_url": "https://api.github.com/users/joekiller/following{/other_user}", "gists_url": "https://api.github.com/users/joekiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joekiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joekiller/subscriptions", "organizations_url": "https://api.github.com/users/joekiller/orgs", "repos_url": "https://api.github.com/users/joekiller/repos", "events_url": "https://api.github.com/users/joekiller/events{/privacy}", "received_events_url": "https://api.github.com/users/joekiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-28T18:10:35Z", "updated_at": "2016-10-04T19:52:46Z", "closed_at": "2016-10-04T19:19:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The newly included database check migrations are not included in the egg when it is distributed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/53", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/53/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/53/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/53", "id": 179300352, "node_id": "MDU6SXNzdWUxNzkzMDAzNTI=", "number": 53, "title": "Not compatible with explicit AppConfig", "user": {"login": "astronouth7303", "id": 401438, "node_id": "MDQ6VXNlcjQwMTQzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/401438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astronouth7303", "html_url": "https://github.com/astronouth7303", "followers_url": "https://api.github.com/users/astronouth7303/followers", "following_url": "https://api.github.com/users/astronouth7303/following{/other_user}", "gists_url": "https://api.github.com/users/astronouth7303/gists{/gist_id}", "starred_url": "https://api.github.com/users/astronouth7303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astronouth7303/subscriptions", "organizations_url": "https://api.github.com/users/astronouth7303/orgs", "repos_url": "https://api.github.com/users/astronouth7303/repos", "events_url": "https://api.github.com/users/astronouth7303/events{/privacy}", "received_events_url": "https://api.github.com/users/astronouth7303/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-26T18:17:51Z", "updated_at": "2016-10-05T06:40:08Z", "closed_at": "2016-10-05T06:40:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If an [exact `AppConfig reference](https://docs.djangoproject.com/en/1.10/ref/applications/#for-application-users) is given in `INSTALLED_APPS` (instead of a package name), `django-health-check` fails with:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 22, in <module>\n    execute_from_command_line(sys.argv)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 359, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\base.py\", line 294, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\base.py\", line 342, in execute\n    self.check()\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\base.py\", line 374, in check\n    include_deployment_checks=include_deployment_checks,\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\management\\base.py\", line 361, in _run_checks\n    return checks.run_checks(**kwargs)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 81, in run_checks\n    new_errors = check(app_configs=app_configs)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 14, in check_url_config\n    return check_resolver(resolver)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 24, in check_resolver\n    for pattern in resolver.url_patterns:\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\utils\\functional.py\", line 35, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\urls\\resolvers.py\", line 313, in url_patterns\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\utils\\functional.py\", line 35, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\urls\\resolvers.py\", line 306, in urlconf_module\n    return import_module(self.urlconf_name)\n  File \"C:\\Users\\James\\AppData\\Local\\Programs\\Python\\Python35\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"C:\\Users\\James\\code\\innocence-envs\\innocence\\urls.py\", line 24, in <module>\n    url(r'^health/', include('health_check.urls')),\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\django\\conf\\urls\\__init__.py\", line 50, in include\n    urlconf_module = import_module(urlconf_module)\n  File \"C:\\Users\\James\\AppData\\Local\\Programs\\Python\\Python35\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\health_check\\urls.py\", line 6, in <module>\n    health_check.autodiscover()\n  File \"C:\\Users\\James\\.virtualenvs\\innocence-envs\\lib\\site-packages\\health_check\\__init__.py\", line 25, in autodiscover\n    mod = import_module(app)\n  File \"C:\\Users\\James\\AppData\\Local\\Programs\\Python\\Python35\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\nImportError: No module named 'django.contrib.admin.apps.SimpleAdminConfig'; 'django.contrib.admin.apps' is not a package\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/52", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/52/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/52/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/52", "id": 177810155, "node_id": "MDU6SXNzdWUxNzc4MTAxNTU=", "number": 52, "title": "No Migrations", "user": {"login": "astronouth7303", "id": 401438, "node_id": "MDQ6VXNlcjQwMTQzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/401438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astronouth7303", "html_url": "https://github.com/astronouth7303", "followers_url": "https://api.github.com/users/astronouth7303/followers", "following_url": "https://api.github.com/users/astronouth7303/following{/other_user}", "gists_url": "https://api.github.com/users/astronouth7303/gists{/gist_id}", "starred_url": "https://api.github.com/users/astronouth7303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astronouth7303/subscriptions", "organizations_url": "https://api.github.com/users/astronouth7303/orgs", "repos_url": "https://api.github.com/users/astronouth7303/repos", "events_url": "https://api.github.com/users/astronouth7303/events{/privacy}", "received_events_url": "https://api.github.com/users/astronouth7303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-19T15:04:08Z", "updated_at": "2016-09-26T22:46:28Z", "closed_at": "2016-09-26T22:46:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "No migrations are packaged with `django-health-check`. This renders `health_check_db` useless under modern Django.\n\nPlease run `manage.py makemigrations`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/47", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/47/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/47/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/47", "id": 170714693, "node_id": "MDU6SXNzdWUxNzA3MTQ2OTM=", "number": 47, "title": "Storage base check_status returns errors instead of raising them", "user": {"login": "mspeedy", "id": 20404683, "node_id": "MDQ6VXNlcjIwNDA0Njgz", "avatar_url": "https://avatars0.githubusercontent.com/u/20404683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mspeedy", "html_url": "https://github.com/mspeedy", "followers_url": "https://api.github.com/users/mspeedy/followers", "following_url": "https://api.github.com/users/mspeedy/following{/other_user}", "gists_url": "https://api.github.com/users/mspeedy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mspeedy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mspeedy/subscriptions", "organizations_url": "https://api.github.com/users/mspeedy/orgs", "repos_url": "https://api.github.com/users/mspeedy/repos", "events_url": "https://api.github.com/users/mspeedy/events{/privacy}", "received_events_url": "https://api.github.com/users/mspeedy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-11T18:34:09Z", "updated_at": "2016-08-25T08:11:51Z", "closed_at": "2016-08-14T08:47:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In health_check_storage.base.check_status in two of the if statements, the code returns an error instead of raising it. Therefore if the file contents are not equal to what is read, or if it is improperly deleted, the status of the plugin will be set to ServiceUnavailable(msg), rather than its numbered error code. The error is then raised when pretty_status attempts to to translate the ServiceUnavailable error into one of the three default messages.\n\nReplace 'return' with 'raise' and the problem should be fixed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/46", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/46/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/46/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/46", "id": 165181063, "node_id": "MDU6SXNzdWUxNjUxODEwNjM=", "number": 46, "title": "Django 1.10 support", "user": {"login": "bufke", "id": 739307, "node_id": "MDQ6VXNlcjczOTMwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/739307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bufke", "html_url": "https://github.com/bufke", "followers_url": "https://api.github.com/users/bufke/followers", "following_url": "https://api.github.com/users/bufke/following{/other_user}", "gists_url": "https://api.github.com/users/bufke/gists{/gist_id}", "starred_url": "https://api.github.com/users/bufke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bufke/subscriptions", "organizations_url": "https://api.github.com/users/bufke/orgs", "repos_url": "https://api.github.com/users/bufke/repos", "events_url": "https://api.github.com/users/bufke/events{/privacy}", "received_events_url": "https://api.github.com/users/bufke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-12T21:07:26Z", "updated_at": "2016-08-17T06:57:55Z", "closed_at": "2016-08-17T06:57:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello - Django 1.10 is on beta now. I'd be happy to add support via a pull request if you would like. Right now we get these warnings in 1.9\n\n```\n/usr/local/lib/python3.5/site-packages/health_check/urls.py:8: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got health_check.views.home). Pass the callable instead.\n  url(r'^$', 'health_check.views.home', name='health_check_home'),\n/usr/local/lib/python3.5/site-packages/health_check/urls.py:8: RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got health_check.views.home). Pass the callable instead.\n```\n\nShould be trivial to fix.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/45", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/45/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/45/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/45", "id": 164996326, "node_id": "MDU6SXNzdWUxNjQ5OTYzMjY=", "number": 45, "title": "please push new version, 1.0.2 doesn't work with django 1.9, and issue is already fixed in master", "user": {"login": "lukasz-karolewski", "id": 5508938, "node_id": "MDQ6VXNlcjU1MDg5Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5508938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasz-karolewski", "html_url": "https://github.com/lukasz-karolewski", "followers_url": "https://api.github.com/users/lukasz-karolewski/followers", "following_url": "https://api.github.com/users/lukasz-karolewski/following{/other_user}", "gists_url": "https://api.github.com/users/lukasz-karolewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasz-karolewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasz-karolewski/subscriptions", "organizations_url": "https://api.github.com/users/lukasz-karolewski/orgs", "repos_url": "https://api.github.com/users/lukasz-karolewski/repos", "events_url": "https://api.github.com/users/lukasz-karolewski/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasz-karolewski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887307, "node_id": "MDU6TGFiZWw0MDQ4ODczMDc=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/question", "name": "question", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "KristianOellegaard", "id": 235775, "node_id": "MDQ6VXNlcjIzNTc3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/235775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KristianOellegaard", "html_url": "https://github.com/KristianOellegaard", "followers_url": "https://api.github.com/users/KristianOellegaard/followers", "following_url": "https://api.github.com/users/KristianOellegaard/following{/other_user}", "gists_url": "https://api.github.com/users/KristianOellegaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/KristianOellegaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KristianOellegaard/subscriptions", "organizations_url": "https://api.github.com/users/KristianOellegaard/orgs", "repos_url": "https://api.github.com/users/KristianOellegaard/repos", "events_url": "https://api.github.com/users/KristianOellegaard/events{/privacy}", "received_events_url": "https://api.github.com/users/KristianOellegaard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "KristianOellegaard", "id": 235775, "node_id": "MDQ6VXNlcjIzNTc3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/235775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KristianOellegaard", "html_url": "https://github.com/KristianOellegaard", "followers_url": "https://api.github.com/users/KristianOellegaard/followers", "following_url": "https://api.github.com/users/KristianOellegaard/following{/other_user}", "gists_url": "https://api.github.com/users/KristianOellegaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/KristianOellegaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KristianOellegaard/subscriptions", "organizations_url": "https://api.github.com/users/KristianOellegaard/orgs", "repos_url": "https://api.github.com/users/KristianOellegaard/repos", "events_url": "https://api.github.com/users/KristianOellegaard/events{/privacy}", "received_events_url": "https://api.github.com/users/KristianOellegaard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-07-12T05:21:08Z", "updated_at": "2016-07-12T09:06:12Z", "closed_at": "2016-07-12T09:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "issue was fixed here \nhttps://github.com/KristianOellegaard/django-health-check/commit/0e861b70232de37533c81a754c395427fac428b1\n\ncan you please push new version?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/43", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/43/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/43/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/43", "id": 162642348, "node_id": "MDU6SXNzdWUxNjI2NDIzNDg=", "number": 43, "title": "Error: backend does not implement forget", "user": {"login": "samuelfekete", "id": 17428429, "node_id": "MDQ6VXNlcjE3NDI4NDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/17428429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelfekete", "html_url": "https://github.com/samuelfekete", "followers_url": "https://api.github.com/users/samuelfekete/followers", "following_url": "https://api.github.com/users/samuelfekete/following{/other_user}", "gists_url": "https://api.github.com/users/samuelfekete/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelfekete/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelfekete/subscriptions", "organizations_url": "https://api.github.com/users/samuelfekete/orgs", "repos_url": "https://api.github.com/users/samuelfekete/repos", "events_url": "https://api.github.com/users/samuelfekete/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelfekete/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887164, "node_id": "MDU6TGFiZWw0MDQ4ODcxNjQ=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2016-06-28T09:33:23Z", "updated_at": "2017-01-12T22:08:57Z", "closed_at": "2017-01-12T22:08:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am getting this error when using health_check_celery3 with AMQP as the backend.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/39", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/39/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/39/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/39", "id": 138922489, "node_id": "MDU6SXNzdWUxMzg5MjI0ODk=", "number": 39, "title": "Your app is missing in the comparision grid for monitoring", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404887229, "node_id": "MDU6TGFiZWw0MDQ4ODcyMjk=", "url": "https://api.github.com/repos/KristianOellegaard/django-health-check/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-07T08:51:16Z", "updated_at": "2017-02-05T15:51:59Z", "closed_at": "2017-02-05T15:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Your app is missing in the comparison grid for monitoring:\n\nhttps://www.djangopackages.com/grids/g/monitoring/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/38", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/38/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/38/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/38", "id": 138921374, "node_id": "MDU6SXNzdWUxMzg5MjEzNzQ=", "number": 38, "title": "Hourly checks from 8:00 to 18:00", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-07T08:47:04Z", "updated_at": "2016-05-17T13:26:40Z", "closed_at": "2016-05-17T11:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am interested in your project.\n\nI am looking for a django application that lets my specify things like:\n- do check `foo` monday to friday hourly between 8:00 and 18:00.\n\nThe times and checks need to be configurable via admin (storing the values in db is preferred).\n\nIs this possible with django-health-check?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/37", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/37/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/37/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/37", "id": 138920414, "node_id": "MDU6SXNzdWUxMzg5MjA0MTQ=", "number": 37, "title": "Pypi page looks strange", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-07T08:42:15Z", "updated_at": "2016-12-08T07:00:09Z", "closed_at": "2016-12-06T10:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pypi page of your project looks strange: https://pypi.python.org/pypi/django-health-check\n\nAFAIK pypi does not support mark-down. You need to use reStructuredText.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/36", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/36/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/36/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/36", "id": 127470024, "node_id": "MDU6SXNzdWUxMjc0NzAwMjQ=", "number": 36, "title": "Tests?", "user": {"login": "justinabrahms", "id": 3853, "node_id": "MDQ6VXNlcjM4NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinabrahms", "html_url": "https://github.com/justinabrahms", "followers_url": "https://api.github.com/users/justinabrahms/followers", "following_url": "https://api.github.com/users/justinabrahms/following{/other_user}", "gists_url": "https://api.github.com/users/justinabrahms/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinabrahms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinabrahms/subscriptions", "organizations_url": "https://api.github.com/users/justinabrahms/orgs", "repos_url": "https://api.github.com/users/justinabrahms/repos", "events_url": "https://api.github.com/users/justinabrahms/events{/privacy}", "received_events_url": "https://api.github.com/users/justinabrahms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-19T15:24:32Z", "updated_at": "2016-05-17T13:28:41Z", "closed_at": "2016-05-17T13:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the critical nature of this sort of application, it would be really nice if there were tests that this actually works, which are run in a CI server (see #23).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/32", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/32/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/32/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/32", "id": 113788624, "node_id": "MDU6SXNzdWUxMTM3ODg2MjQ=", "number": 32, "title": "Celery3 Python3 issues", "user": {"login": "tomtom5152", "id": 2250882, "node_id": "MDQ6VXNlcjIyNTA4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2250882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomtom5152", "html_url": "https://github.com/tomtom5152", "followers_url": "https://api.github.com/users/tomtom5152/followers", "following_url": "https://api.github.com/users/tomtom5152/following{/other_user}", "gists_url": "https://api.github.com/users/tomtom5152/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomtom5152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomtom5152/subscriptions", "organizations_url": "https://api.github.com/users/tomtom5152/orgs", "repos_url": "https://api.github.com/users/tomtom5152/repos", "events_url": "https://api.github.com/users/tomtom5152/events{/privacy}", "received_events_url": "https://api.github.com/users/tomtom5152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-28T10:36:02Z", "updated_at": "2016-12-05T14:33:59Z", "closed_at": "2016-12-05T14:33:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Really simple one that if I get time later I will make a PR for.\n\n[health_check_celery3/plugin_health_check.py:23](https://github.com/KristianOellegaard/django-health-check/blob/73867e4423c39dfac8aba3639faf5fb92cc1bc54/health_check_celery3/plugin_health_check.py#L20) has an old style Python 2 print statement that is missing Py3's parenthesis causing a 500 to be generated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/25", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/25/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/25/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/25", "id": 57609501, "node_id": "MDU6SXNzdWU1NzYwOTUwMQ==", "number": 25, "title": "we should explicitly set ignore_results=False on celery task", "user": {"login": "czpython", "id": 994951, "node_id": "MDQ6VXNlcjk5NDk1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/994951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czpython", "html_url": "https://github.com/czpython", "followers_url": "https://api.github.com/users/czpython/followers", "following_url": "https://api.github.com/users/czpython/following{/other_user}", "gists_url": "https://api.github.com/users/czpython/gists{/gist_id}", "starred_url": "https://api.github.com/users/czpython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czpython/subscriptions", "organizations_url": "https://api.github.com/users/czpython/orgs", "repos_url": "https://api.github.com/users/czpython/repos", "events_url": "https://api.github.com/users/czpython/events{/privacy}", "received_events_url": "https://api.github.com/users/czpython/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-13T15:10:37Z", "updated_at": "2015-02-13T15:17:17Z", "closed_at": "2015-02-13T15:17:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "no matter how the project's celery app is configured, we should set the add task to never ignore results, otherwise the healthcheck will wrongfully fail.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/23", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/23/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/23/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/23", "id": 55834285, "node_id": "MDU6SXNzdWU1NTgzNDI4NQ==", "number": 23, "title": "Travis", "user": {"login": "jairhenrique", "id": 81854, "node_id": "MDQ6VXNlcjgxODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/81854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jairhenrique", "html_url": "https://github.com/jairhenrique", "followers_url": "https://api.github.com/users/jairhenrique/followers", "following_url": "https://api.github.com/users/jairhenrique/following{/other_user}", "gists_url": "https://api.github.com/users/jairhenrique/gists{/gist_id}", "starred_url": "https://api.github.com/users/jairhenrique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jairhenrique/subscriptions", "organizations_url": "https://api.github.com/users/jairhenrique/orgs", "repos_url": "https://api.github.com/users/jairhenrique/repos", "events_url": "https://api.github.com/users/jairhenrique/events{/privacy}", "received_events_url": "https://api.github.com/users/jairhenrique/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-28T23:45:45Z", "updated_at": "2016-06-27T16:27:39Z", "closed_at": "2016-06-27T16:27:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Enable travis-ci!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/17", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/17/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/17/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/17", "id": 51876430, "node_id": "MDU6SXNzdWU1MTg3NjQzMA==", "number": 17, "title": "DefaultFileStorageHealthCheck fails if backend is Amazon S3", "user": {"login": "peterfarrell", "id": 2857188, "node_id": "MDQ6VXNlcjI4NTcxODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2857188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterfarrell", "html_url": "https://github.com/peterfarrell", "followers_url": "https://api.github.com/users/peterfarrell/followers", "following_url": "https://api.github.com/users/peterfarrell/following{/other_user}", "gists_url": "https://api.github.com/users/peterfarrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterfarrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterfarrell/subscriptions", "organizations_url": "https://api.github.com/users/peterfarrell/orgs", "repos_url": "https://api.github.com/users/peterfarrell/repos", "events_url": "https://api.github.com/users/peterfarrell/events{/privacy}", "received_events_url": "https://api.github.com/users/peterfarrell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-13T04:39:11Z", "updated_at": "2016-12-15T12:09:27Z", "closed_at": "2016-12-15T12:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the backend storage is Amazon S3, the health check fails when it tries to check existence of the deleted test file.\n\n```\n            storage.delete(file_name)\n            if storage.exists(file_name):\n                return ServiceUnavailable(\"File was not deleted\")\n```\n\nhttps://github.com/KristianOellegaard/django-health-check/blob/master/health_check_storage/base.py#L50-L52\n\nThe issue is that it take moment for S3 to actually delete the file and therefore the health check fails because the file still exists. It gets to the `exists()` before S3 actually can delete the file because `delete()` on S3 is asynchronous (whereas the `save()` is synchronous because we wait for a file name).\n\nI solved this was sub-classing and not checking if the file was deleted but this isn't an ideal solution. I'd submit a PR if you have a suggestion on how you'd like to fix it. I'd be fine with adding at setting:\n\n```\nHEALTH_CHECK_STORAGE_DISABLE_DELETE_EXISTS = True\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/15", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/15/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/15/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/15", "id": 49403250, "node_id": "MDU6SXNzdWU0OTQwMzI1MA==", "number": 15, "title": "release 1.0.1", "user": {"login": "stefanfoulis", "id": 14330, "node_id": "MDQ6VXNlcjE0MzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/14330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanfoulis", "html_url": "https://github.com/stefanfoulis", "followers_url": "https://api.github.com/users/stefanfoulis/followers", "following_url": "https://api.github.com/users/stefanfoulis/following{/other_user}", "gists_url": "https://api.github.com/users/stefanfoulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanfoulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanfoulis/subscriptions", "organizations_url": "https://api.github.com/users/stefanfoulis/orgs", "repos_url": "https://api.github.com/users/stefanfoulis/repos", "events_url": "https://api.github.com/users/stefanfoulis/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanfoulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-19T15:00:17Z", "updated_at": "2016-12-15T12:23:02Z", "closed_at": "2016-12-15T12:23:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "with the packaging fixes :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/14", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/14/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/14/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/14", "id": 46371356, "node_id": "MDU6SXNzdWU0NjM3MTM1Ng==", "number": 14, "title": "log exceptions", "user": {"login": "stefanfoulis", "id": 14330, "node_id": "MDQ6VXNlcjE0MzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/14330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanfoulis", "html_url": "https://github.com/stefanfoulis", "followers_url": "https://api.github.com/users/stefanfoulis/followers", "following_url": "https://api.github.com/users/stefanfoulis/following{/other_user}", "gists_url": "https://api.github.com/users/stefanfoulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanfoulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanfoulis/subscriptions", "organizations_url": "https://api.github.com/users/stefanfoulis/orgs", "repos_url": "https://api.github.com/users/stefanfoulis/repos", "events_url": "https://api.github.com/users/stefanfoulis/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanfoulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-21T09:17:26Z", "updated_at": "2017-01-10T16:35:42Z", "closed_at": "2017-01-10T16:35:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To make actually debugging an error easier, it would be nice if the error could be logged using standard logging. This would be an alternative approach to #10 .\nThe \"status\" could also include the very short version of the exception (or just the Exception class) as information instead of just \"unavailable\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/10", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/10/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/10/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/10", "id": 44807546, "node_id": "MDU6SXNzdWU0NDgwNzU0Ng==", "number": 10, "title": "Throw exception instead of just rendering the error page", "user": {"login": "alesdotio", "id": 333487, "node_id": "MDQ6VXNlcjMzMzQ4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/333487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alesdotio", "html_url": "https://github.com/alesdotio", "followers_url": "https://api.github.com/users/alesdotio/followers", "following_url": "https://api.github.com/users/alesdotio/following{/other_user}", "gists_url": "https://api.github.com/users/alesdotio/gists{/gist_id}", "starred_url": "https://api.github.com/users/alesdotio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alesdotio/subscriptions", "organizations_url": "https://api.github.com/users/alesdotio/orgs", "repos_url": "https://api.github.com/users/alesdotio/repos", "events_url": "https://api.github.com/users/alesdotio/events{/privacy}", "received_events_url": "https://api.github.com/users/alesdotio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-03T14:21:19Z", "updated_at": "2016-12-29T11:41:15Z", "closed_at": "2016-12-29T11:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "This way the exception can be logged, making it easier to identify disruptions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/6", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/6/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/6/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/6", "id": 16453859, "node_id": "MDU6SXNzdWUxNjQ1Mzg1OQ==", "number": 6, "title": "getting an exception error", "user": {"login": "jandetlefsen", "id": 804751, "node_id": "MDQ6VXNlcjgwNDc1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/804751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jandetlefsen", "html_url": "https://github.com/jandetlefsen", "followers_url": "https://api.github.com/users/jandetlefsen/followers", "following_url": "https://api.github.com/users/jandetlefsen/following{/other_user}", "gists_url": "https://api.github.com/users/jandetlefsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jandetlefsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jandetlefsen/subscriptions", "organizations_url": "https://api.github.com/users/jandetlefsen/orgs", "repos_url": "https://api.github.com/users/jandetlefsen/repos", "events_url": "https://api.github.com/users/jandetlefsen/events{/privacy}", "received_events_url": "https://api.github.com/users/jandetlefsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-08T03:30:56Z", "updated_at": "2016-12-15T12:23:09Z", "closed_at": "2016-12-15T12:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "seems like base.py in the file storage app is throwing an exception error that the health check module can't handle so i'm getting an error page instead of the status page.\n\nsee error message\n\nEnvironment:\n\nRequest Method: GET\n\nDjango Version: 1.5.1\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'grappelli',\n 'django.contrib.admin',\n 'django.contrib.admindocs',\n 'south',\n 'project',\n 'django_nose',\n 'gravatar',\n 'allauth',\n 'allauth.account',\n 'allauth.socialaccount',\n 'allauth.socialaccount.providers.github',\n 'allauth.socialaccount.providers.google',\n 'allauth.socialaccount.providers.twitter',\n 'django_mailgun',\n 'djcelery',\n 'json_field',\n 'health_check',\n 'health_check_celery',\n 'health_check_db',\n 'health_check_cache',\n 'health_check_storage')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\n\nTemplate error:\nIn template /home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/health_check/templates/health_check/dashboard.html, error at line 57\n   Unknown exception\n\n57 :                 <td> {{ plugin.pretty_status }} </td>\n\nTraceback:\nFile \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/health_check/views.py\" in home\n2.         return HttpResponseServerError(loader.render_to_string(\"health_check/dashboard.html\", {'plugins': plugins}))\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/loader.py\" in render_to_string\n3.         return t.render(Context(dictionary))\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in render\n4.             return self._render(context)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in _render\n5.         return self.nodelist.render(context)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in render\n6.                 bit = self.render_node(node, context)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/debug.py\" in render_node\n7.             return node.render(context)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/defaulttags.py\" in render\n8.                         nodelist.append(node.render(context))\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/debug.py\" in render\n9.             output = self.filter_expression.resolve(context)\n   File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in resolve\n10.                 obj = self.var.resolve(context)\n    File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in resolve\n11.             value = self._resolve_lookup(context)\n    File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/django/template/base.py\" in _resolve_lookup\n12.                             current = current()\n    File \"/home/ubuntu/projects/simpletest/local/lib/python2.7/site-packages/health_check/backends/base.py\" in pretty_status\n13.         return u\"%s\" % (HEALTH_CHECK_STATUS_TYPE_TRANSLATOR[self.status])\n\nException Type: KeyError at /ht/\nException Value: ServiceUnavailable('Unknown exception',)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/3", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/3/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/3/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/3", "id": 2137453, "node_id": "MDU6SXNzdWUyMTM3NDUz", "number": 3, "title": "celery/plugin_health_check.py incorrectly formatted", "user": {"login": "PamelaM", "id": 849341, "node_id": "MDQ6VXNlcjg0OTM0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/849341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PamelaM", "html_url": "https://github.com/PamelaM", "followers_url": "https://api.github.com/users/PamelaM/followers", "following_url": "https://api.github.com/users/PamelaM/following{/other_user}", "gists_url": "https://api.github.com/users/PamelaM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PamelaM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PamelaM/subscriptions", "organizations_url": "https://api.github.com/users/PamelaM/orgs", "repos_url": "https://api.github.com/users/PamelaM/repos", "events_url": "https://api.github.com/users/PamelaM/events{/privacy}", "received_events_url": "https://api.github.com/users/PamelaM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-03T20:48:35Z", "updated_at": "2011-11-03T21:16:06Z", "closed_at": "2011-11-03T21:16:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Gives us an indentation error...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/1", "repository_url": "https://api.github.com/repos/KristianOellegaard/django-health-check", "labels_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/1/comments", "events_url": "https://api.github.com/repos/KristianOellegaard/django-health-check/issues/1/events", "html_url": "https://github.com/KristianOellegaard/django-health-check/issues/1", "id": 1737573, "node_id": "MDU6SXNzdWUxNzM3NTcz", "number": 1, "title": "add optional errormessage", "user": {"login": "stefanfoulis", "id": 14330, "node_id": "MDQ6VXNlcjE0MzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/14330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanfoulis", "html_url": "https://github.com/stefanfoulis", "followers_url": "https://api.github.com/users/stefanfoulis/followers", "following_url": "https://api.github.com/users/stefanfoulis/following{/other_user}", "gists_url": "https://api.github.com/users/stefanfoulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanfoulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanfoulis/subscriptions", "organizations_url": "https://api.github.com/users/stefanfoulis/orgs", "repos_url": "https://api.github.com/users/stefanfoulis/repos", "events_url": "https://api.github.com/users/stefanfoulis/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanfoulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-09-26T08:19:05Z", "updated_at": "2011-09-26T09:08:38Z", "closed_at": "2011-09-26T09:08:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "HealthChecks should be able to return a simple message describing the error that occured\n", "performed_via_github_app": null, "score": 1.0}]}