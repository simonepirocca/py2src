{"total_count": 1275, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2719", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2719/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2719/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2719/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2719", "id": 682525226, "node_id": "MDU6SXNzdWU2ODI1MjUyMjY=", "number": 2719, "title": "Redshift: Automatically insert in sort key order in incremental models", "user": {"login": "Limess", "id": 3199181, "node_id": "MDQ6VXNlcjMxOTkxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3199181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Limess", "html_url": "https://github.com/Limess", "followers_url": "https://api.github.com/users/Limess/followers", "following_url": "https://api.github.com/users/Limess/following{/other_user}", "gists_url": "https://api.github.com/users/Limess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Limess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Limess/subscriptions", "organizations_url": "https://api.github.com/users/Limess/orgs", "repos_url": "https://api.github.com/users/Limess/repos", "events_url": "https://api.github.com/users/Limess/events{/privacy}", "received_events_url": "https://api.github.com/users/Limess/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-20T08:28:05Z", "updated_at": "2020-08-21T18:22:44Z", "closed_at": "2020-08-20T08:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nIf sort keys are defined in DBT, run an ORDER BY matching the sort key definition within the `INSERT INTO` statement in the incremental materialization.\r\n\r\nThis should then mean that no vacuums are necessary in future to keep the table sorted.\r\n\r\nThis matches the Redshift [recommendation](https://docs.aws.amazon.com/redshift/latest/dg/c_best-practices-sort-key-order.html).\r\n\r\n### Describe alternatives you've considered\r\nThis follows a small discussion on Slack https://getdbt.slack.com/archives/CJARVS0RY/p1597827002012000\r\n\r\nAfter which I considered writing a DBT macro which only adds an `ORDER BY` statement based on the `sort` config in `incremental` models and placing it at the end of each `incremental` model by hand, but this seems like an unnecessary implementation detail to keep track of.\r\n\r\n### Additional context\r\nOnly applies to Redshift when using compound (_not interleaved_) sort keys.\r\n\r\nThis might result in some slowdown for large incremental models at DBT runtime but should increase query performance later and reduce maintenance overhead.\r\n\r\nI don't have a lot of context about how much benefit, or overhead this would bring in each context, this is mainly based on AWS recommendations.\r\n\r\n### Who will this benefit?\r\nAnyone using Redshift incremental models with sort keys.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2716", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2716/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2716/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2716/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2716", "id": 681450945, "node_id": "MDU6SXNzdWU2ODE0NTA5NDU=", "number": 2716, "title": "Dynamic Model Reference and depends_on hint", "user": {"login": "brittianwarner", "id": 18333842, "node_id": "MDQ6VXNlcjE4MzMzODQy", "avatar_url": "https://avatars2.githubusercontent.com/u/18333842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brittianwarner", "html_url": "https://github.com/brittianwarner", "followers_url": "https://api.github.com/users/brittianwarner/followers", "following_url": "https://api.github.com/users/brittianwarner/following{/other_user}", "gists_url": "https://api.github.com/users/brittianwarner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brittianwarner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brittianwarner/subscriptions", "organizations_url": "https://api.github.com/users/brittianwarner/orgs", "repos_url": "https://api.github.com/users/brittianwarner/repos", "events_url": "https://api.github.com/users/brittianwarner/events{/privacy}", "received_events_url": "https://api.github.com/users/brittianwarner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-19T00:21:43Z", "updated_at": "2020-08-20T18:21:46Z", "closed_at": "2020-08-20T18:20:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nI want to be able to dynamically union models depending on runtime variables.  For example, we have Customers A, B, C. Customer A has models 1,2,3. Customer B has models 1,2. Customer C has models 2,3. I need to be able to dynamically union these models together, so when I call dbt run for Customer A I want to union models 1,2,3; Customer B union models 1,2; and Customer C union models 2,3. I am currently running into an issue where DBT is asking for a depends_on hint. It is important that I can dynamically change the dependencies on a model given variables. Open to any suggestions/alternatives!\r\n\r\n  **dbt was unable to infer all dependencies for the model \"combined_performance\".**\r\n  **This typically happens when ref() is placed within a conditional block.**\r\n\r\n  **To fix this, add the following hint to the top of the model \"combined_performance\":**\r\n\r\n  **-- depends_on: {{ ref('stg_google_performance') }}**\r\n\r\n  **> in macro get_ad_relation (macros/get_customer_attributes.sql)**\r\n  **> called by model combined_performance (models/ads/combined_performance.sql)**\r\n  **> called by model combined_performance (models/ads/combined_performance.sql)**\r\n\r\nExample of dbt run:\r\n`dbt run --vars '{\"Customer\":\"A\"}'`\r\n`dbt run --vars '{\"Customer\":\"B\"}'`\r\n`dbt run --vars '{\"Customer\":\"C\"}'`\r\n\r\n\r\n### Describe alternatives you've considered\r\nNone\r\n\r\n### Additional context\r\nUsing Snowflake. \r\n\r\n### Who will this benefit?\r\nAnyone who is building a dbt model for many customers/variations. \r\n\r\n### Are you interested in contributing this feature?\r\nYes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2707", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2707/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2707/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2707/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2707", "id": 679411454, "node_id": "MDU6SXNzdWU2Nzk0MTE0NTQ=", "number": 2707, "title": "Jinja Comments included in dbt run SQL causing Database Error", "user": {"login": "bcolbert978", "id": 9199542, "node_id": "MDQ6VXNlcjkxOTk1NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9199542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcolbert978", "html_url": "https://github.com/bcolbert978", "followers_url": "https://api.github.com/users/bcolbert978/followers", "following_url": "https://api.github.com/users/bcolbert978/following{/other_user}", "gists_url": "https://api.github.com/users/bcolbert978/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcolbert978/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcolbert978/subscriptions", "organizations_url": "https://api.github.com/users/bcolbert978/orgs", "repos_url": "https://api.github.com/users/bcolbert978/repos", "events_url": "https://api.github.com/users/bcolbert978/events{/privacy}", "received_events_url": "https://api.github.com/users/bcolbert978/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-08-14T21:30:27Z", "updated_at": "2020-08-19T19:39:04Z", "closed_at": "2020-08-19T19:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nIn previous versions of dbt, [Jinja comments](https://jinja.palletsprojects.com/en/2.11.x/templates/#comments) were supported, allowing us to leave blocks of notes inside this templating pattern: `{# comment #}` and have those notes excluded from the compiled and executed SQL.\r\nThe SQL output of `dbt compile` looks fine, but the output of `dbt run` or `dbt run --full-refresh` both seem to include the comments, including the braces, which is resulting in Database errors.\r\n\r\n### Steps To Reproduce\r\ncreate a simple model with a Jinja comment, such as:\r\n```\r\n{# link to source: https://www.source_data_spreadhseet.com #}\r\nselect * from source_data_raw.spreadsheet_data\r\n```\r\n\r\n### Expected behavior\r\nDBT run should execute only `select * from source_data_raw.spreadsheet_data` and exclude the comment.\r\n\r\n### Screenshots and log output\r\n```\r\n2020-08-14 20:49:29.325609 (Thread-2): On model.ov.stg_discounted_skus: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.2\", \"profile_name\": \"ov_redshift\", \"target_name\": \"dev\", \"node_id\": \"model.ov.stg_discounted_skus\"} */\r\n\r\n\r\n  create view \"analytics\".\"dbt_brad\".\"stg_discounted_skus__dbt_tmp\" as (\r\n    {# Link to Google Sheet: https://docs.google.com/spreadsheets/d/aaaaaaaaaaaaa-LKCEs/edit #}\r\n\r\n    select * from google_sheets_raw.discounted_sku_exclusion_list\r\n  ) with no schema binding;\r\n\r\n2020-08-14 20:49:29.373295 (Thread-2): Postgres error: syntax error at or near \"{\"\r\nLINE 5:     {# Link to Google Sheet: https://docs.google.com/spreads...\r\n            ^\r\n\r\n2020-08-14 20:49:29.373740 (Thread-2): On model.ov.stg_discounted_skus: ROLLBACK\r\n2020-08-14 20:49:29.420368 (Thread-2): On model.ov.stg_discounted_skus: Close\r\n2020-08-14 20:49:29.421006 (Thread-2): Database Error in model stg_discounted_skus (models/staging/google_sheets/stg_discounted_skus.sql)\r\n  syntax error at or near \"{\"\r\n  LINE 5:     {# Link to Google Sheet: https://docs.google.com/spreads...\r\n              ^\r\n  compiled SQL at target/run/ov/models/staging/google_sheets/stg_discounted_skus.sql\r\nTraceback (most recent call last):\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/postgres/connections.py\", line 46, in exception_handler\r\n    yield\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/sql/connections.py\", line 77, in add_query\r\n    cursor.execute(sql, bindings)\r\npsycopg2.errors.SyntaxError: syntax error at or near \"{\"\r\nLINE 5:     {# Link to Google Sheet: https://docs.google.com/spreads...\r\n            ^\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/node_runners.py\", line 228, in safe_run\r\n    result = self.compile_and_execute(manifest, ctx)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/node_runners.py\", line 171, in compile_and_execute\r\n    result = self.run(ctx.node, manifest)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/node_runners.py\", line 273, in run\r\n    return self.execute(compiled_node, manifest)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/node_runners.py\", line 459, in execute\r\n    result = MacroGenerator(materialization_macro, context)()\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 61, in macro\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 41, in macro\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/base/impl.py\", line 228, in execute\r\n    fetch=fetch\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/sql/connections.py\", line 122, in execute\r\n    _, cursor = self.add_query(sql, auto_begin)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/sql/connections.py\", line 85, in add_query\r\n    return connection, cursor\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/contextlib.py\", line 99, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/Applications/anaconda3/envs/ov-dbt/lib/python3.6/site-packages/dbt/adapters/postgres/connections.py\", line 57, in exception_handler\r\n    raise dbt.exceptions.DatabaseException(str(e).strip()) from e\r\ndbt.exceptions.DatabaseException: Database Error in model stg_discounted_skus (models/staging/google_sheets/stg_discounted_skus.sql)\r\n  syntax error at or near \"{\"\r\n  LINE 5:     {# Link to Google Sheet: https://docs.google.com/spreads...\r\n              ^\r\n  compiled SQL at target/run/ov/models/staging/google_sheets/stg_discounted_skus.sql\r\n2020-08-14 20:49:29.433043 (Thread-2): 15:49:29 | 1 of 1 ERROR creating view model dbt_brad.stg_discounted_skus........ [ERROR in 1.22s]\r\n2020-08-14 20:49:29.433334 (Thread-2): Finished running node model.ov.stg_discounted_skus\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [X] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.2\r\n   latest version: 0.17.2\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.2\r\n  - snowflake: 0.17.2\r\n  - redshift: 0.17.2\r\n  - postgres: 0.17.2\r\n```\r\n\r\n**The operating system you're using:**\r\nMacOS Catalina, 10.15.6 (19G2021)\r\n\r\n**The output of `python --version`:**\r\nPython 3.6.6 :: Anaconda, Inc.\r\n\r\n### Additional context\r\noriginally posted in #support on dbt slack: [link](https://getdbt.slack.com/archives/C2JRRQDTL/p1597439108300900)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2705", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2705/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2705/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2705/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2705", "id": 679350872, "node_id": "MDU6SXNzdWU2NzkzNTA4NzI=", "number": 2705, "title": "Docs changes for 0.18.0", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-14T19:09:30Z", "updated_at": "2020-08-19T14:41:49Z", "closed_at": "2020-08-19T14:41:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For inclusion in final release:\r\n\r\n* https://github.com/fishtown-analytics/dbt-docs/pull/106\r\n* https://github.com/fishtown-analytics/dbt-docs/pull/108\r\n* https://github.com/fishtown-analytics/dbt-docs/pull/113\r\n* https://github.com/fishtown-analytics/dbt-docs/pull/118\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2702", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2702/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2702/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2702/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2702", "id": 679186135, "node_id": "MDU6SXNzdWU2NzkxODYxMzU=", "number": 2702, "title": "Redshift table size estimates gigabytes as kilobytes.", "user": {"login": "vogt4nick", "id": 31822672, "node_id": "MDQ6VXNlcjMxODIyNjcy", "avatar_url": "https://avatars1.githubusercontent.com/u/31822672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogt4nick", "html_url": "https://github.com/vogt4nick", "followers_url": "https://api.github.com/users/vogt4nick/followers", "following_url": "https://api.github.com/users/vogt4nick/following{/other_user}", "gists_url": "https://api.github.com/users/vogt4nick/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogt4nick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogt4nick/subscriptions", "organizations_url": "https://api.github.com/users/vogt4nick/orgs", "repos_url": "https://api.github.com/users/vogt4nick/repos", "events_url": "https://api.github.com/users/vogt4nick/events{/privacy}", "received_events_url": "https://api.github.com/users/vogt4nick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}, {"id": 547377963, "node_id": "MDU6TGFiZWw1NDczNzc5NjM=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/redshift/pg", "name": "redshift/pg", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T14:14:21Z", "updated_at": "2020-08-17T15:04:04Z", "closed_at": "2020-08-17T15:04:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nThe data catalog offers a feature to estimate table size. For Redshift tables, this estimate reports GB as KB.\r\n\r\n<img width=\"362\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31822672/90257543-52059b00-de15-11ea-97cc-d5441d504697.png\">\r\n\r\nI can verify this references a table that is 44 GB, not 44 KB. \r\n\r\nhttps://github.com/fishtown-analytics/dbt/blob/03010ecde71634d11f80949018c39a63070f1008/plugins/redshift/dbt/include/redshift/macros/catalog.sql#L150\r\n\r\nThe problem behavior appears to be in this line of code where the bytes are divided by 1e6.\r\n\r\n### Steps To Reproduce\r\n\r\nAFAICT this bug is created by adding a Redshift table to dbt and building the data catalog.\r\n\r\n### Expected behavior\r\n\r\nIt should report the correct estimate.\r\n\r\n### Screenshots and log output\r\n\r\n<img width=\"362\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31822672/90257543-52059b00-de15-11ea-97cc-d5441d504697.png\">\r\n\r\nI can verify this references a table that is 44 GB, not 44 KB. \r\n\r\n### System information\r\n\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [x] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n\r\n```\r\ninstalled version: 0.17.2\r\n   latest version: 0.17.2\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - postgres: 0.17.2\r\n  - redshift: 0.17.2\r\n  - snowflake: 0.17.2\r\n  - bigquery: 0.17.2\r\n```\r\n\r\n**The operating system you're using:** Docs are built with Docker image `python:3.7.7-slim-buster`. Docs are served with Docker image `nginx:1.19.0-alpine`.\r\n\r\n**The output of `python --version`:** 3.7.7\r\n\r\n### Additional context\r\n\r\nhttps://github.com/fishtown-analytics/dbt/blob/fb8065df2711d5f5978865a45cc0725a06e670f1/core/dbt/utils.py#L445\r\n\r\nNoting because it's related: I'm reasonably confident the issue is not in the `format_bytes` usage. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2699", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2699/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2699/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2699/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2699", "id": 678219782, "node_id": "MDU6SXNzdWU2NzgyMTk3ODI=", "number": 2699, "title": "Support field additions when updating partitioned BigQuery table", "user": {"login": "MartinNowak", "id": 288976, "node_id": "MDQ6VXNlcjI4ODk3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/288976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinNowak", "html_url": "https://github.com/MartinNowak", "followers_url": "https://api.github.com/users/MartinNowak/followers", "following_url": "https://api.github.com/users/MartinNowak/following{/other_user}", "gists_url": "https://api.github.com/users/MartinNowak/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinNowak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinNowak/subscriptions", "organizations_url": "https://api.github.com/users/MartinNowak/orgs", "repos_url": "https://api.github.com/users/MartinNowak/repos", "events_url": "https://api.github.com/users/MartinNowak/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinNowak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T07:31:42Z", "updated_at": "2020-08-13T22:26:58Z", "closed_at": "2020-08-13T22:26:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nUsing [date-partitioned tables](https://docs.getdbt.com/docs/guides/database-specific-guides/creating-date-partitioned-tables/) requires an identical schema for all partitions. Dbt should allow to configure the BigQuery-specific [`schema_update_options`](https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.job.LoadJobConfig.html#google.cloud.bigquery.job.LoadJobConfig.schema_update_options) to support field addition.\r\n\r\n### Describe alternatives you've considered\r\nAutomatic handling of field addition and removal might be an alternative, but requires careful handling of the existing data.\r\n\r\n### Additional context\r\nBigQuery-specific\r\n\r\n### Who will this benefit?\r\nWill be useful to evolve schema of regularly updated table.\r\n\r\n### Are you interested in contributing this feature?\r\nIt's quite deeply nested, so not sure how to best get config options there.\r\n\r\nhttps://github.com/fishtown-analytics/dbt/blob/21a3462798fce4aea0530df595a8faa4828782dc/plugins/bigquery/dbt/adapters/bigquery/impl.py#L474-L479\r\nhttps://github.com/fishtown-analytics/dbt/blob/1bd82d4914fd80fcc6fe17140e46554ad677eab0/plugins/bigquery/dbt/adapters/bigquery/connections.py#L348-L353\r\nhttps://github.com/fishtown-analytics/dbt/blob/1bd82d4914fd80fcc6fe17140e46554ad677eab0/plugins/bigquery/dbt/adapters/bigquery/connections.py#L323\r\nhttps://github.com/fishtown-analytics/dbt/blob/1bd82d4914fd80fcc6fe17140e46554ad677eab0/plugins/bigquery/dbt/adapters/bigquery/connections.py#L338-L339", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2697", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2697/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2697/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2697/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2697", "id": 677265713, "node_id": "MDU6SXNzdWU2NzcyNjU3MTM=", "number": 2697, "title": "Support TTL for BigQuery tables", "user": {"login": "kconvey", "id": 36738417, "node_id": "MDQ6VXNlcjM2NzM4NDE3", "avatar_url": "https://avatars0.githubusercontent.com/u/36738417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kconvey", "html_url": "https://github.com/kconvey", "followers_url": "https://api.github.com/users/kconvey/followers", "following_url": "https://api.github.com/users/kconvey/following{/other_user}", "gists_url": "https://api.github.com/users/kconvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kconvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kconvey/subscriptions", "organizations_url": "https://api.github.com/users/kconvey/orgs", "repos_url": "https://api.github.com/users/kconvey/repos", "events_url": "https://api.github.com/users/kconvey/events{/privacy}", "received_events_url": "https://api.github.com/users/kconvey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-11T23:31:52Z", "updated_at": "2020-08-19T18:10:15Z", "closed_at": "2020-08-19T18:10:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nAdd a BigQuery adapter specific config option `ttl` (or similar name) which denotes how long the produced table will exist, before being cleaned up automatically by BigQuery. This will take advantage of the `expiration_timestamp` and the BQ functions `TIMESTAMP_ADD()` `CURRENT_TIMESTAMP()`, and `INTERVAL` (with `ttl` as an argument)\r\n\r\n### Describe alternatives you've considered\r\n- Do this as a post-processing step\r\n  - Would work, but this gives better guarantees that any table you create, if configured properly, will not stick around beyond it's TTL.\r\n\r\n- #1472 was the idea of having dbt keep track of how long models have existed, and only update once expired, and called itself `TTL`, but is pretty different than this proposal.\r\n\r\n\r\n### Additional context\r\nAFAIK this is a BigQuery only feature (did some brief googling around and didn't find anything). This feature is already used for `temporary` tables in the BQ adapter, which are somewhat arbitrarily set to 12 hour TTLs. The same feature is not used for the other support databases, which have a `TEMPORARY` option which deletes tables at the end of a session, instead.\r\n\r\n\r\n### Who will this benefit?\r\n- Anyone who has requirements on how long their data can be kept around.\r\n- Developers configuring projects which may produce a lot of clutter (and can set it to expire in a few hours while developing).\r\n\r\n### Are you interested in contributing this feature?\r\nThis can be upstreamed from a locally maintained fork without too many changes (so definitely).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2696", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2696/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2696/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2696/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2696", "id": 677223813, "node_id": "MDU6SXNzdWU2NzcyMjM4MTM=", "number": 2696, "title": "Support CopyJobs in BigQuery via a macro ", "user": {"login": "kconvey", "id": 36738417, "node_id": "MDQ6VXNlcjM2NzM4NDE3", "avatar_url": "https://avatars0.githubusercontent.com/u/36738417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kconvey", "html_url": "https://github.com/kconvey", "followers_url": "https://api.github.com/users/kconvey/followers", "following_url": "https://api.github.com/users/kconvey/following{/other_user}", "gists_url": "https://api.github.com/users/kconvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kconvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kconvey/subscriptions", "organizations_url": "https://api.github.com/users/kconvey/orgs", "repos_url": "https://api.github.com/users/kconvey/repos", "events_url": "https://api.github.com/users/kconvey/events{/privacy}", "received_events_url": "https://api.github.com/users/kconvey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T21:56:50Z", "updated_at": "2020-08-19T18:39:49Z", "closed_at": "2020-08-19T18:39:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nSupport a `copy_table` macro in BigQuery, which takes advantage of BigQuery's [CopyJob](https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.job.CopyJob.html) which is better optimized than, for instance `select * {{source('my_source')}}`.\r\n\r\nThe write disposition on the resulting table can be either `append` or `truncate` corresponding to materializations of `incremental` or `table` here, depending on how you want to modify the resulting table.\r\n\r\nThis should look like the following in a model:\r\n\r\n```\r\n{{ config(materialized='table') }}\r\n\r\n{{ copy_table(ref('my_table')) }}\r\n``` \r\n\r\n### Describe alternatives you've considered\r\nJust use `select *` here.\r\n\r\n### Additional context\r\nOnly interested in BigQuery for this issue, but if there are analogous features in other databases, they can be implemented as well, and possible this can become a global macro.\r\n\r\n### Who will this benefit?\r\nAny BigQuery users who have step(s) in their SQL pipeline which simply copy data (ex. a release step, or curation that may leave some tables unchanged)\r\n\r\n### Are you interested in contributing this feature?\r\nI have already written this and maintained it as a patch on a fork of dbt, but would love to upstream & share with anyone who can take advantage.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2692", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2692/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2692/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2692/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2692", "id": 675787254, "node_id": "MDU6SXNzdWU2NzU3ODcyNTQ=", "number": 2692, "title": "DBT Seed file doesnot support commas in country code names", "user": {"login": "chaitanyabheri", "id": 35852904, "node_id": "MDQ6VXNlcjM1ODUyOTA0", "avatar_url": "https://avatars3.githubusercontent.com/u/35852904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaitanyabheri", "html_url": "https://github.com/chaitanyabheri", "followers_url": "https://api.github.com/users/chaitanyabheri/followers", "following_url": "https://api.github.com/users/chaitanyabheri/following{/other_user}", "gists_url": "https://api.github.com/users/chaitanyabheri/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaitanyabheri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaitanyabheri/subscriptions", "organizations_url": "https://api.github.com/users/chaitanyabheri/orgs", "repos_url": "https://api.github.com/users/chaitanyabheri/repos", "events_url": "https://api.github.com/users/chaitanyabheri/events{/privacy}", "received_events_url": "https://api.github.com/users/chaitanyabheri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-09T22:54:46Z", "updated_at": "2020-08-10T13:33:39Z", "closed_at": "2020-08-10T13:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhile trying to load country codes list using seed files, seed file processing fails with comma values in country names.\r\n\r\n### Steps To Reproduce\r\nCreate country_codes.csv file with country_name column \r\n\r\n> country_code,country_name\r\n> FM,Micronesia,Federated States of\r\n\r\n### Expected behavior\r\nInsert data into table\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n![image](https://user-images.githubusercontent.com/35852904/89743506-5888c100-da69-11ea-85ba-20f9c8d8d675.png)\r\n\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [X] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\n\r\n**The output of `python --3.6`:**\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2691", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2691/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2691/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2691/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2691", "id": 675087929, "node_id": "MDU6SXNzdWU2NzUwODc5Mjk=", "number": 2691, "title": "The initial snapshot creation does not seem to enforce \"check\" strategy on \"unique_key\"", "user": {"login": "eugene-nikolaev", "id": 305699, "node_id": "MDQ6VXNlcjMwNTY5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/305699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene-nikolaev", "html_url": "https://github.com/eugene-nikolaev", "followers_url": "https://api.github.com/users/eugene-nikolaev/followers", "following_url": "https://api.github.com/users/eugene-nikolaev/following{/other_user}", "gists_url": "https://api.github.com/users/eugene-nikolaev/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene-nikolaev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene-nikolaev/subscriptions", "organizations_url": "https://api.github.com/users/eugene-nikolaev/orgs", "repos_url": "https://api.github.com/users/eugene-nikolaev/repos", "events_url": "https://api.github.com/users/eugene-nikolaev/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene-nikolaev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-07T15:23:53Z", "updated_at": "2020-08-11T05:59:31Z", "closed_at": "2020-08-07T18:53:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nHello!\r\nThe initial snapshot creation does not seem to enforce \"check\" strategy on \"unique_key\".\r\n\r\n### Steps To Reproduce\r\n\r\n1. Create a source table:\r\n```\r\ncreate table snap_test(id integer, period date, data varchar);\r\ninsert into snap_test(id, period, data) values(1, '1/12/2019', 'blah1');\r\ninsert into snap_test(id, period, data) values(2, '2/12/2019', 'blah2');\r\ninsert into snap_test(id, period, data) values(3, '3/12/2019', 'blah3');\r\ninsert into snap_test(id, period, data) values(1, '1/12/2019', 'blah4');    -- NOTE: it's a key duplicate \r\n```\r\n2. Run the snapshot:\r\n\r\n```\r\n{% snapshot snap_test %}\r\n\r\n{{ config(\r\n      target_schema='snapshots',\r\n      unique_key='id_and_period',\r\n      strategy='check',\r\n      check_cols='all' ) }}\r\n\r\nselect\r\n    id,\r\n    period,\r\n    data,\r\n    CONCAT(id, billing_period) as id_and_period\r\nfrom {{source('<schema_here>', 'snap_test')}}\r\n\r\n{% endsnapshot %}\r\n```\r\n\r\nAnd it will go OK.\r\n\r\n3. Run `dbt snapshot`\r\nIt will fail\r\n\r\n### Expected behavior\r\nFailure on point 2, on initial snapshot creation\r\n\r\n### Screenshots and log output\r\n```\r\n(dbt-transformations) bash-3.2$ dbt snapshot -s snap_test\r\nRunning with dbt=0.17.1\r\nFound 129 models, 135 tests, 4 snapshots, 0 analyses, 140 macros, 0 operations, 1 seed file, 54 sources\r\n\r\n18:19:24 | Concurrency: 1 threads (target='dev')\r\n18:19:24 | \r\n18:19:24 | 1 of 1 START snapshot snapshots.snap_test............................ [RUN]\r\n18:19:26 | 1 of 1 OK snapshotted snapshots.snap_test............................ [SUCCESS 1 in 2.32s]\r\n18:19:27 | \r\n18:19:27 | Finished running 1 snapshot in 7.39s.\r\n\r\nCompleted successfully\r\n\r\nDone. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1\r\n(dbt-transformations) bash-3.2$ \r\n(dbt-transformations) bash-3.2$ \r\n(dbt-transformations) bash-3.2$ \r\n(dbt-transformations) bash-3.2$ \r\n(dbt-transformations) bash-3.2$ \r\n(dbt-transformations) bash-3.2$ dbt snapshot -s snap_test\r\nRunning with dbt=0.17.1\r\nFound 129 models, 135 tests, 4 snapshots, 0 analyses, 140 macros, 0 operations, 1 seed file, 54 sources\r\n\r\n18:19:40 | Concurrency: 1 threads (target='dev')\r\n18:19:40 | \r\n18:19:41 | 1 of 1 START snapshot snapshots.snap_test............................ [RUN]\r\n18:19:45 | 1 of 1 ERROR snapshotting snapshots.snap_test........................ [ERROR in 4.74s]\r\n18:19:46 | \r\n18:19:46 | Finished running 1 snapshot in 9.19s.\r\n\r\nCompleted with 1 error and 0 warnings:\r\n\r\nDatabase Error in snapshot snap_test (snapshots/snap_test.sql)\r\n  100090 (42P18): Duplicate row detected during DML action\r\n  Row Values: [1, 17908, \"blah1\", \"12019-01-12\", \"442e7c125fb18f499f99def30f8e6cad\", 1596813565121000000, 1596813565121000000, NULL]\r\n  compiled SQL at target/run/smartly_data_mart/snapshots/snap_test.sql\r\n\r\nDone. PASS=0 WARN=0 ERROR=1 SKIP=0 TOTAL=1\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n(dbt-transformations) bash-3.2$ dbt --version\r\ninstalled version: 0.17.1\r\n   latest version: 0.17.2\r\n\r\nYour version of dbt is out of date! You can find instructions for upgrading here:\r\nhttps://docs.getdbt.com/docs/installation\r\n\r\nPlugins:\r\n  - bigquery: 0.17.1\r\n  - snowflake: 0.17.1\r\n  - redshift: 0.17.1\r\n  - postgres: 0.17.1\r\n```\r\n\r\n**The operating system you're using:**\r\nMacOS 10.15.5 (19F101)\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.7\r\n\r\n### Additional context\r\nNone\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2689", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2689/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2689/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2689/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2689", "id": 674131043, "node_id": "MDU6SXNzdWU2NzQxMzEwNDM=", "number": 2689, "title": "Indefinite Snowflake auth loop  when using browser authentication", "user": {"login": "eugene-nikolaev", "id": 305699, "node_id": "MDQ6VXNlcjMwNTY5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/305699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene-nikolaev", "html_url": "https://github.com/eugene-nikolaev", "followers_url": "https://api.github.com/users/eugene-nikolaev/followers", "following_url": "https://api.github.com/users/eugene-nikolaev/following{/other_user}", "gists_url": "https://api.github.com/users/eugene-nikolaev/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene-nikolaev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene-nikolaev/subscriptions", "organizations_url": "https://api.github.com/users/eugene-nikolaev/orgs", "repos_url": "https://api.github.com/users/eugene-nikolaev/repos", "events_url": "https://api.github.com/users/eugene-nikolaev/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene-nikolaev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 6, "created_at": "2020-08-06T08:36:18Z", "updated_at": "2020-08-14T19:47:33Z", "closed_at": "2020-08-14T19:47:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWe encounter indefinite auth loop while running dbt with browser auth enabled\r\n\r\n### Steps To Reproduce\r\nInstall dbt 0.17.2 and run anything on Snowflake\r\n\r\n### Expected behavior\r\nExpected two auth requests in case of MFA and dbt proceeding to transform.\r\n(non-MFA logins fail into the loop too)\r\n\r\n### Screenshots and log output\r\n```\r\n(dbt-transformations) <wiped out>@<wiped out> dbt-transformations % dbt run --models <wiped out>\r\nRunning with dbt=0.17.2\r\nFound 129 models, 135 tests, 3 snapshots, 0 analyses, 140 macros, 0 operations, 1 seed file, 53 sources\r\n\r\nInitiating login request with your identity provider. A browser window should have opened for you to complete the login. If you can't see it, check existing browser windows, or your OS settings. Press CTRL+C to abort and try again...\r\nInitiating login request with your identity provider. A browser window should have opened for you to complete the login. If you can't see it, check existing browser windows, or your OS settings. Press CTRL+C to abort and try again...\r\nInitiating login request with your identity provider. A browser window should have opened for you to complete the login. If you can't see it, check existing browser windows, or your OS settings. Press CTRL+C to abort and try again...\r\nInitiating login request with your identity provider. A browser window should have opened for you to complete the login. If you can't see it, check existing browser windows, or your OS settings. Press CTRL+C to abort and try again...\r\nInitiating login request with your identity provider. A browser window should have opened for you to complete the login. If you can't see it, check existing browser windows, or your OS settings. Press CTRL+C to abort and try again...\r\n^C^C^Cctrl-c\r\n\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.2\r\n   latest version: 0.17.2\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.2\r\n  - snowflake: 0.17.2\r\n  - redshift: 0.17.2\r\n  - postgres: 0.17.2\r\n```\r\n\r\n**The operating system you're using:**\r\nMacOS 10.15.5 (19F101)\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.7\r\n\r\n### Additional context\r\nreverting dbt to 0.17.1 fixed the issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2688", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2688/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2688/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2688/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2688", "id": 673792060, "node_id": "MDU6SXNzdWU2NzM3OTIwNjA=", "number": 2688, "title": "track deprecations", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T19:27:17Z", "updated_at": "2020-08-18T20:11:03Z", "closed_at": "2020-08-18T20:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nCurrently, dbt tracks anonymized information about a few metrics on dbt runs (package installs, invocations, running models, ...). It would be nice to add tracking around deprecation warnings triggering.\r\n\r\nAs a dbt developer, I'd like to know how many people are using deprecated behavior so we can inform our decision making on when to remove it.\r\n\r\n### Describe alternatives you've considered\r\nRight now we guess about it.\r\n\r\n### Who will this benefit?\r\nAnyone making product/feature decisions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2687", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2687/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2687/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2687/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2687", "id": 673738296, "node_id": "MDU6SXNzdWU2NzM3MzgyOTY=", "number": 2687, "title": "Sprint 53: Core (8/5/2020 - 8/19/2020)", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-05T18:00:29Z", "updated_at": "2020-08-20T21:53:49Z", "closed_at": "2020-08-20T21:53:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2682", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2682/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2682/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2682/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2682", "id": 672820857, "node_id": "MDU6SXNzdWU2NzI4MjA4NTc=", "number": 2682, "title": "Individual snapshots cannot be configured from dbt_project.yml", "user": {"login": "clrcrl", "id": 20294432, "node_id": "MDQ6VXNlcjIwMjk0NDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/20294432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clrcrl", "html_url": "https://github.com/clrcrl", "followers_url": "https://api.github.com/users/clrcrl/followers", "following_url": "https://api.github.com/users/clrcrl/following{/other_user}", "gists_url": "https://api.github.com/users/clrcrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/clrcrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clrcrl/subscriptions", "organizations_url": "https://api.github.com/users/clrcrl/orgs", "repos_url": "https://api.github.com/users/clrcrl/repos", "events_url": "https://api.github.com/users/clrcrl/events{/privacy}", "received_events_url": "https://api.github.com/users/clrcrl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 990109854, "node_id": "MDU6TGFiZWw5OTAxMDk4NTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Snapshots", "name": "Snapshots", "color": "068471", "default": false, "description": "Issues related to Snapshots"}, {"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T14:06:43Z", "updated_at": "2020-08-04T14:37:54Z", "closed_at": "2020-08-04T14:37:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nA clear and concise description of what the bug is. What command did you run? What happened?\r\n\r\n### Steps To Reproduce\r\n1. Create a snapshot at `snapshots/orders/orders.sql`:\r\n```\r\n{% snapshot orders_snaphot %}\r\nselect 1 as id, current_timestamp as current_ts\r\n{% endsnapshot %}\r\n```\r\n2. Configure from `dbt_project.yml`:\r\n```\r\nsnapshots:\r\n  jaffle_shop:\r\n    orders:\r\n      orders:\r\n        orders_snapshot: # qualify to the individual snapshot\r\n          +strategy: timestamp\r\n          +unique_key: id\r\n          +updated_at: current_ts\r\n          +target_schema: dev_ccarroll\r\n```\r\n3. `dbt snapshot`\r\n\r\n### Expected behavior\r\nIt should work\u00a0\u2014 i've provided the fully qualified path\r\n\r\n### Actual results\r\n```\r\n$ dbt snapshot\r\nRunning with dbt=0.18.0-b2\r\nEncountered an error:\r\nCompilation Error in snapshot orders_snaphot (snapshots/orders/orders.sql)\r\n  at path []: 'unique_key' is a required property\r\n```\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.18.2\r\n```\r\n\r\n\r\n### Additional context\r\nYou _can_ configure it by doing this:\r\n```\r\nsnapshots:\r\n  jaffle_shop:\r\n    orders:\r\n      orders:\r\n        +strategy: timestamp\r\n        +unique_key: id\r\n        +updated_at: current_ts\r\n        +target_schema: dev_ccarroll\r\n```\r\nBut theoretically if there's two snapshots in the `snapshots/orders/orders.sql` file, then you couldn't do this individually", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2681", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2681/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2681/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2681/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2681", "id": 672603186, "node_id": "MDU6SXNzdWU2NzI2MDMxODY=", "number": 2681, "title": "When running a specific model, dbt should not try to create the schemas of all other models", "user": {"login": "FurcyPin", "id": 6087587, "node_id": "MDQ6VXNlcjYwODc1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6087587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FurcyPin", "html_url": "https://github.com/FurcyPin", "followers_url": "https://api.github.com/users/FurcyPin/followers", "following_url": "https://api.github.com/users/FurcyPin/following{/other_user}", "gists_url": "https://api.github.com/users/FurcyPin/gists{/gist_id}", "starred_url": "https://api.github.com/users/FurcyPin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FurcyPin/subscriptions", "organizations_url": "https://api.github.com/users/FurcyPin/orgs", "repos_url": "https://api.github.com/users/FurcyPin/repos", "events_url": "https://api.github.com/users/FurcyPin/events{/privacy}", "received_events_url": "https://api.github.com/users/FurcyPin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-04T08:20:45Z", "updated_at": "2020-08-09T19:43:26Z", "closed_at": "2020-08-04T21:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen running a specific model using `dbt/run model -m model_1` the command fails because of permission \r\nerrors on other models.\r\n\r\nThis is super annoying because adding a new model with a configuration error in prod will make ALL the other models fail,\r\nand this is not seen by the compile step.\r\n\r\n\r\n### Steps To Reproduce\r\nCreate two models model_1 and model_2\r\nmodel_1 creates a table in `project_1.dataset_1.table_1`\r\nmodel_2 creates a table in `project_2.dataset_2.table_2`\r\n\r\nbut where the configured connection does not have the rights on project_2.\r\n\r\nthen run `dbt run -m model_1`\r\n\r\nyou will get an error like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/user/dbt/core/dbt/main.py\", line 124, in main\r\n    results, succeeded = handle_and_check(args)\r\n  File \"/home/user/dbt/core/dbt/main.py\", line 202, in handle_and_check\r\n    task, res = run_from_args(parsed)\r\n  File \"/home/user/dbt/core/dbt/main.py\", line 255, in run_from_args\r\n    results = task.run()\r\n  File \"/home/user/dbt/core/dbt/task/runnable.py\", line 414, in run\r\n    result = self.execute_with_hooks(selected_uids)\r\n  File \"/home/user/dbt/core/dbt/task/runnable.py\", line 374, in execute_with_hooks\r\n    self.before_run(adapter, selected_uids)\r\n  File \"/home/user/dbt/core/dbt/task/run.py\", line 405, in before_run\r\n    self.create_schemas(adapter, selected_uids)\r\n  File \"/home/user/dbt/core/dbt/task/runnable.py\", line 518, in create_schemas\r\n    create_future.result()\r\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 425, in result\r\n    return self.__get_result()\r\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 384, in __get_result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/home/user/dbt/core/dbt/utils.py\", line 469, in connected\r\n    return func(*args, **kwargs)\r\n  File \"/home/user/dbt/core/dbt/task/runnable.py\", line 480, in create_schema\r\n    adapter.create_schema(relation)\r\n  File \"/home/user/test_project/venv/lib/python3.6/site-packages/dbt/adapters/bigquery/impl.py\", line 298, in create_schema\r\n    self.connections.create_dataset(database, schema)\r\n  File \"/home/user/test_project/venv/lib/python3.6/site-packages/dbt/adapters/bigquery/connections.py\", line 355, in create_dataset\r\n    self._retry_and_handle(msg='create dataset', conn=conn, fn=fn)\r\n  File \"/home/user/test_project/venv/lib/python3.6/site-packages/dbt/adapters/bigquery/connections.py\", line 373, in _retry_and_handle\r\n    deadline=None)\r\n  File \"/usr/lib/python3.6/contextlib.py\", line 99, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/home/user/test_project/venv/lib/python3.6/site-packages/dbt/adapters/bigquery/connections.py\", line 93, in exception_handler\r\n    self.handle_error(e, message)\r\n  File \"/home/user/test_project/venv/lib/python3.6/site-packages/dbt/adapters/bigquery/connections.py\", line 77, in handle_error\r\n    raise DatabaseException(error_msg)\r\ndbt.exceptions.DatabaseException: Database Error\r\n  Access Denied: Project project_2: User does not have bigquery.datasets.create permission in project project_2.\r\n```\r\n\r\n### Expected behavior\r\nRunning `dbt run -m model_1` should not try to create schemas used by model_2\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [X] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.18.0-b1\r\n   latest version: 0.17.2\r\n\r\nYour version of dbt is ahead of the latest release!\r\n\r\nPlugins:\r\n  - redshift: 0.18.0b1\r\n  - bigquery: 0.18.0b1\r\n  - postgres: 0.18.0b1\r\n```\r\n\r\n**The operating system you're using:**\r\nLinux Mint 19 (based on ubuntu bionic)\r\n\r\n**The output of `python --version`:**\r\nPython 3.6.9\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2676", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2676/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2676/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2676/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2676", "id": 670218630, "node_id": "MDU6SXNzdWU2NzAyMTg2MzA=", "number": 2676, "title": "reopen: pip-compile DBT requires contradictory packages #2674", "user": {"login": "TjrGithub", "id": 515569, "node_id": "MDQ6VXNlcjUxNTU2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TjrGithub", "html_url": "https://github.com/TjrGithub", "followers_url": "https://api.github.com/users/TjrGithub/followers", "following_url": "https://api.github.com/users/TjrGithub/following{/other_user}", "gists_url": "https://api.github.com/users/TjrGithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/TjrGithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TjrGithub/subscriptions", "organizations_url": "https://api.github.com/users/TjrGithub/orgs", "repos_url": "https://api.github.com/users/TjrGithub/repos", "events_url": "https://api.github.com/users/TjrGithub/events{/privacy}", "received_events_url": "https://api.github.com/users/TjrGithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T20:47:49Z", "updated_at": "2020-07-31T21:01:35Z", "closed_at": "2020-07-31T21:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new bug because I don't have the permissions to reopen #2674. I've got it reproduced as requested - the detailed steps are at https://github.com/jazzband/pip-tools/issues/1196. Would you please verify that this is indeed not a DBT bug? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2674", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2674/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2674/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2674/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2674", "id": 669749753, "node_id": "MDU6SXNzdWU2Njk3NDk3NTM=", "number": 2674, "title": "pip-compile: DBT requires contradictory packages", "user": {"login": "TjrGithub", "id": 515569, "node_id": "MDQ6VXNlcjUxNTU2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TjrGithub", "html_url": "https://github.com/TjrGithub", "followers_url": "https://api.github.com/users/TjrGithub/followers", "following_url": "https://api.github.com/users/TjrGithub/following{/other_user}", "gists_url": "https://api.github.com/users/TjrGithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/TjrGithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TjrGithub/subscriptions", "organizations_url": "https://api.github.com/users/TjrGithub/orgs", "repos_url": "https://api.github.com/users/TjrGithub/repos", "events_url": "https://api.github.com/users/TjrGithub/events{/privacy}", "received_events_url": "https://api.github.com/users/TjrGithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-31T12:08:46Z", "updated_at": "2020-07-31T20:45:49Z", "closed_at": "2020-07-31T14:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\ndbt seems to need incompatible requirements when installed from pip.\r\nI'm not sure if this is a dbt or a pip-compile bug.\r\n\r\n### Steps To Reproduce\r\n```shell\r\n$ cat requirements.in \r\ndbt\r\n$ pip-compile requirements.in \r\nTraceback (most recent call last):\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/bin/pip-compile\", line 8, in <module>\r\n    sys.exit(cli())\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/click/decorators.py\", line 21, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/piptools/scripts/compile.py\", line 444, in cli\r\n    results = resolver.resolve(max_rounds=max_rounds)\r\n  File \"/home/tjb/Dokumente/cologne_2018/Karriere/optiker-datenanalyse/bnb-datenanalyse/rw_elt/venv/pytest/lib/python3.7/site-packages/piptools/resolver.py\", line 164, in resolve\r\n    \"This is likely a bug.\".format(max_rounds=max_rounds)\r\nRuntimeError: No stable configuration of concrete packages could be found for the given constraints after 10 rounds of resolving.\r\nThis is likely a bug.\r\n```\r\n\r\n### Expected behavior\r\npip should find a set of compatible packages to install dbt.\r\nA few days ago, the same script used to work, and pip-compile resulted in:\r\n```shell\r\n#\r\n# This file is autogenerated by pip-compile\r\n# To update, run:\r\n#\r\n#    pip-compile requirements.in\r\n#\r\nagate==1.6.1              # via dbt-core\r\nasn1crypto==1.3.0         # via oscrypto, snowflake-connector-python\r\nattrs==19.3.0             # via jsonschema\r\nazure-common==1.1.25      # via azure-storage-blob, azure-storage-common, dbt-snowflake, snowflake-connector-python\r\nazure-storage-blob==2.1.0  # via dbt-snowflake, snowflake-connector-python\r\nazure-storage-common==2.1.0  # via azure-storage-blob\r\nbabel==2.8.0              # via agate\r\nboto3==1.11.17            # via dbt-redshift, snowflake-connector-python\r\nbotocore==1.14.17         # via boto3, dbt-redshift, s3transfer, snowflake-connector-python\r\ncachetools==4.1.1         # via google-auth\r\ncertifi==2020.6.20        # via requests, snowflake-connector-python\r\ncffi==1.13.2              # via cryptography, dbt-core, snowflake-connector-python\r\nchardet==3.0.4            # via requests\r\ncolorama==0.4.3           # via dbt-core\r\ncryptography==2.9.2       # via azure-storage-common, dbt-snowflake, pyopenssl, snowflake-connector-python\r\ndbt-bigquery==0.17.1      # via dbt\r\ndbt-core==0.17.1          # via dbt, dbt-bigquery, dbt-postgres, dbt-redshift, dbt-snowflake\r\ndbt-postgres==0.17.1      # via dbt, dbt-redshift\r\ndbt-redshift==0.17.1      # via dbt\r\ndbt-snowflake==0.17.1     # via dbt\r\ndbt==0.17.1               # via -r requirements.in\r\ndecorator==4.4.2          # via networkx\r\ndocutils==0.15.2          # via botocore\r\ngoogle-api-core==1.16.0   # via dbt-bigquery, google-cloud-bigquery, google-cloud-core\r\ngoogle-auth==1.19.2       # via google-api-core, google-cloud-bigquery\r\ngoogle-cloud-bigquery==1.24.0  # via dbt-bigquery\r\ngoogle-cloud-core==1.3.0  # via dbt-bigquery, google-cloud-bigquery\r\ngoogle-resumable-media==0.5.1  # via google-cloud-bigquery\r\ngoogleapis-common-protos==1.6.0  # via dbt-bigquery, google-api-core\r\nhologram==0.0.7           # via dbt-core\r\nidna==2.8                 # via dbt-core, requests, snowflake-connector-python\r\nijson==2.6.1              # via snowflake-connector-python\r\nimportlib-metadata==1.7.0  # via jsonschema\r\nisodate==0.6.0            # via agate, dbt-core\r\njinja2==2.11.2            # via dbt-core\r\njmespath==0.10.0          # via boto3, botocore\r\njson-rpc==1.13.0          # via dbt-core\r\njsonschema==3.1.1         # via hologram\r\nleather==0.3.3            # via agate\r\nlogbook==1.5.3            # via dbt-core\r\nmarkupsafe==1.1.1         # via jinja2\r\nminimal-snowplow-tracker==0.0.2  # via dbt-core\r\nnetworkx==2.4             # via dbt-core\r\noscrypto==1.2.0           # via snowflake-connector-python\r\nparsedatetime==2.6        # via agate\r\nprotobuf==3.11.3          # via dbt-bigquery, google-api-core, google-cloud-bigquery, googleapis-common-protos\r\npsycopg2-binary==2.8.5    # via dbt-postgres\r\npyasn1-modules==0.2.8     # via google-auth\r\npyasn1==0.4.8             # via pyasn1-modules, rsa\r\npycparser==2.20           # via cffi\r\npycryptodomex==3.9.8      # via snowflake-connector-python\r\npyjwt==1.7.1              # via snowflake-connector-python\r\npyopenssl==19.1.0         # via snowflake-connector-python\r\npyrsistent==0.16.0        # via jsonschema\r\npython-dateutil==2.8.1    # via azure-storage-common, botocore, hologram\r\npython-slugify==4.0.1     # via agate\r\npytimeparse==1.1.8        # via agate\r\npytz==2020.1              # via babel, google-api-core, snowflake-connector-python\r\npyyaml==5.3.1             # via dbt-core\r\nrequests==2.22.0          # via azure-storage-common, dbt-core, google-api-core, minimal-snowplow-tracker, snowflake-connector-python\r\nrsa==4.6                  # via google-auth\r\ns3transfer==0.3.3         # via boto3\r\nsix==1.15.0               # via agate, cryptography, dbt-bigquery, google-api-core, google-auth, google-cloud-bigquery, google-resumable-media, isodate, jsonschema, leather, minimal-snowplow-tracker, protobuf, pyopenssl, pyrsistent, python-dateutil\r\nsnowflake-connector-python==2.2.1  # via dbt-snowflake\r\nsqlparse==0.3.1           # via dbt-core\r\ntext-unidecode==1.3       # via python-slugify\r\ntyping-extensions==3.7.4.2  # via dbt-core\r\nurllib3==1.25.9           # via botocore, dbt-snowflake, requests, snowflake-connector-python\r\nwerkzeug==0.16.1          # via dbt-core\r\nzipp==3.1.0               # via importlib-metadata\r\n\r\n# The following packages are considered to be unsafe in a requirements file:\r\n# setuptools\r\n```\r\n\r\n\r\n### Screenshots and log output\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [X] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\nIt doesn't install, so no version :-(\r\n\r\n**The operating system you're using:**\r\nUbuntu Linux 19.10\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.5\r\n\r\n### Additional context\r\nThis is the virtualenv runnign pip-compile:\r\n```shell\r\n$ pip freeze\r\nastroid==2.4.2\r\nattrs==19.3.0\r\nclick==7.1.2\r\nflake8==3.8.3\r\nimportlib-metadata==1.7.0\r\nisort==4.3.21\r\nlazy-object-proxy==1.4.3\r\nmccabe==0.6.1\r\nmore-itertools==8.4.0\r\nmypy==0.782\r\nmypy-extensions==0.4.3\r\npackaging==20.4\r\npath==14.0.1\r\npip-tools==5.2.1\r\npkg-resources==0.0.0\r\npluggy==0.13.1\r\npsycopg2==2.8.5\r\npy==1.9.0\r\npycodestyle==2.6.0\r\npydocstyle==5.0.2\r\npyflakes==2.2.0\r\npylint==2.5.3\r\npyparsing==2.4.7\r\npytest==5.4.3\r\npython-dateutil==2.8.1\r\nruamel.yaml==0.16.10\r\nruamel.yaml.clib==0.2.0\r\nsix==1.15.0\r\nsnowballstemmer==2.0.0\r\nstrictyaml==1.0.6\r\ntoml==0.10.1\r\ntyped-ast==1.4.1\r\ntyping-extensions==3.7.4.2\r\nwcwidth==0.2.5\r\nwrapt==1.12.1\r\nzipp==3.1.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2673", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2673/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2673/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2673/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2673", "id": 669240411, "node_id": "MDU6SXNzdWU2NjkyNDA0MTE=", "number": 2673, "title": "Snowflake: Show terse object running for all models when only calling single model", "user": {"login": "brittianwarner", "id": 18333842, "node_id": "MDQ6VXNlcjE4MzMzODQy", "avatar_url": "https://avatars2.githubusercontent.com/u/18333842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brittianwarner", "html_url": "https://github.com/brittianwarner", "followers_url": "https://api.github.com/users/brittianwarner/followers", "following_url": "https://api.github.com/users/brittianwarner/following{/other_user}", "gists_url": "https://api.github.com/users/brittianwarner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brittianwarner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brittianwarner/subscriptions", "organizations_url": "https://api.github.com/users/brittianwarner/orgs", "repos_url": "https://api.github.com/users/brittianwarner/repos", "events_url": "https://api.github.com/users/brittianwarner/events{/privacy}", "received_events_url": "https://api.github.com/users/brittianwarner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-30T22:15:27Z", "updated_at": "2020-08-04T22:23:31Z", "closed_at": "2020-07-31T14:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen only triggering one model via --model <my_model_name> it looks like this is triggering the \"show terse objects\" for all models where I would expect it only to run for the model specified and all dependencies. \r\n\r\n### Steps To Reproduce\r\nTrigger DBT Run for one model in a project with multiple models/packages\r\n\r\n### Expected behavior\r\nI would expect show terse object to only occur for the selected model and all dependencies\r\n\r\n### Screenshots and log output\r\n\r\ndbt run --profiles-dir .  --vars '{\"src_schema\": \"64\", \"target_schema\": \"64\"}' --model linkedin\r\n\r\n![image](https://user-images.githubusercontent.com/18333842/88979775-56b44600-d290-11ea-81e9-d0114fd78ffc.png)\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nlinux\r\n**The output of `python --version`:*3.8*\r\n\r\n### Additional context\r\nAll of my code is still working but it seems like a waste to run this query for all models when only a single model is specified\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2672", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2672/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2672/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2672/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2672", "id": 669211464, "node_id": "MDU6SXNzdWU2NjkyMTE0NjQ=", "number": 2672, "title": "Allow impersonation of Google Cloud service accounts with BigQuery", "user": {"login": "preston-hf", "id": 59446380, "node_id": "MDQ6VXNlcjU5NDQ2Mzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/59446380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/preston-hf", "html_url": "https://github.com/preston-hf", "followers_url": "https://api.github.com/users/preston-hf/followers", "following_url": "https://api.github.com/users/preston-hf/following{/other_user}", "gists_url": "https://api.github.com/users/preston-hf/gists{/gist_id}", "starred_url": "https://api.github.com/users/preston-hf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/preston-hf/subscriptions", "organizations_url": "https://api.github.com/users/preston-hf/orgs", "repos_url": "https://api.github.com/users/preston-hf/repos", "events_url": "https://api.github.com/users/preston-hf/events{/privacy}", "received_events_url": "https://api.github.com/users/preston-hf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T21:29:02Z", "updated_at": "2020-08-04T18:37:54Z", "closed_at": "2020-08-04T18:37:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nI recently read [this article](https://medium.com/@jryancanty/stop-downloading-google-cloud-service-account-keys-1811d44a97d9) about using the new IAM Credentials api in order to impersonate a service account by generating a  OAuth2 bearer tokens that identifies as them. Adding these abilities to dbt would help increase security and allow for additional abstraction when running BigQuery queries on sensitive data. This way, we don't need to run dbt with a service account key, or worry about starting a node identified by a particular service account.\r\n\r\nThis would allow us to invert control, using service accounts to control access to different types of data, and granting access to the service accounts (the \"abstraction\") instead of having all of the users have IAM access to the datasets directly. This way you get the benefits of federated identity with the flexibility of service account and their keys, which are typically required for this workflow, but have many downsides as described in the article.\r\n\r\nFrom an end-user perspective, I propose that dbt adds an `impersonate_service_account` option to the profiles file for the BigQuery adapter. Using this functionality would work like this:\r\n```yaml\r\ndbt:\r\n  target: dev\r\n  outputs:\r\n    dev:\r\n      type: bigquery\r\n      method: oauth\r\n      project: myproject\r\n      dataset: dbt_preston\r\n      threads: 4\r\n      timeout_seconds: 300\r\n      location: US\r\n      priority: interactive\r\n      retries: 1\r\n      impersonate_service_account: foobar@project.iam.gserviceaccount.com\r\n```\r\nIn this case, the oauth/service account/service account file types would each be compatible. Instead of using the existing Credentials() directly as is the current functionality, when `impersonate_service_account` option is present, Credentials would be generated using the new IAM Credential API ([example](https://github.com/googleapis/google-auth-library-python/blob/15d5fa946177581b52a5a9eb3ca285c088f5c45d/google/auth/impersonated_credentials.py#L118)).\r\n\r\nIt seems like this would be pretty easy to send a patch for since the Google Auth library already has support for this method. There is one big difference that we may want to handle, these tokens are very short lived compared to ADC or Service Accounts. By default, these OAuth2 tokens expire after 1 hour. It is possible to increase this when requesting, but 1 hour is a soft limit, only able to be increased by adding the service account to an organization policy. This is usually only possible by GCP Org admins, so not your target audience. I think for an MVP it would be alright for this to be the fallback, but ideally there would be a way to detect the expired credentials and request a new set while dbt is running. This may already be possible, it's not clear how often new clients are requested. If a new client is used often, then this may not even be a concern since it would get a fresh token each time a job was created. In this case, we'd want to set the expiration much shorter than the default.\r\n\r\n### Describe alternatives you've considered\r\nThe only other option is to have GCE or Cloud Run instances run as service accounts. Cloud Run times out after 15 minutes though currently so that is a non-starter, and GCE isn't really designed for this purpose. There are a bunch of other downsides as well that I'm happy to go into if the value isn't obvious.\r\n\r\n### Additional context\r\nThis would be just for BigQuery users.\r\n\r\n### Who will this benefit?\r\nIt will benefit BigQuery users with many datasets, each needing to be and remain isolated. Any operation concerned with increased security would prefer to use this, and most of us are.\r\n\r\n### Are you interested in contributing this feature?\r\nYes, I am interested.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2667", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2667/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2667/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2667/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2667", "id": 668267057, "node_id": "MDU6SXNzdWU2NjgyNjcwNTc=", "number": 2667, "title": "tag based inclusion and exclusion with `dbt run`", "user": {"login": "yu-iskw", "id": 1523515, "node_id": "MDQ6VXNlcjE1MjM1MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1523515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yu-iskw", "html_url": "https://github.com/yu-iskw", "followers_url": "https://api.github.com/users/yu-iskw/followers", "following_url": "https://api.github.com/users/yu-iskw/following{/other_user}", "gists_url": "https://api.github.com/users/yu-iskw/gists{/gist_id}", "starred_url": "https://api.github.com/users/yu-iskw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yu-iskw/subscriptions", "organizations_url": "https://api.github.com/users/yu-iskw/orgs", "repos_url": "https://api.github.com/users/yu-iskw/repos", "events_url": "https://api.github.com/users/yu-iskw/events{/privacy}", "received_events_url": "https://api.github.com/users/yu-iskw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T01:00:37Z", "updated_at": "2020-07-30T14:27:55Z", "closed_at": "2020-07-30T07:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nI would like to select run models by tags. \r\nConsider if we have daily scheduled models and hourly based models in a dbt project. As well as, we tag them with `daily` or `hourly`. So, I want to separately run only hourly scheduled models from daily schedule models. One possible senario is to select models by the tag of `hourly`.\r\n\r\n```bash\r\ndbt run --tags hourly\r\n```\r\n\r\n### Describe alternatives you've considered\r\nWe can also realize something similar with `dbt run -m`, by defining the naming convention of models, for instance, `daily_xxx` and `hourly_xxx`. But it has a negative impact on the table names.\r\n\r\n```bash\r\ndbt run -m {dbt_project}.hourly_*\r\n```\r\n\r\n### Additional context\r\nNo specific database(s)\r\n\r\n### Who will this benefit?\r\nAs I mentioned above, when we schedule `dbt run`, the proposed feature enables us to specify what models are run based on the interval.\r\n\r\n### Are you interested in contributing this feature?\r\nYes, I am interested in implementing it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2660", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2660/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2660/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2660/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2660", "id": 668009524, "node_id": "MDU6SXNzdWU2NjgwMDk1MjQ=", "number": 2660, "title": "Remove double underscore in epheremal model generated CTE (__dbt__CTE__...)", "user": {"login": "tglunde", "id": 5864224, "node_id": "MDQ6VXNlcjU4NjQyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5864224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tglunde", "html_url": "https://github.com/tglunde", "followers_url": "https://api.github.com/users/tglunde/followers", "following_url": "https://api.github.com/users/tglunde/following{/other_user}", "gists_url": "https://api.github.com/users/tglunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/tglunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tglunde/subscriptions", "organizations_url": "https://api.github.com/users/tglunde/orgs", "repos_url": "https://api.github.com/users/tglunde/repos", "events_url": "https://api.github.com/users/tglunde/events{/privacy}", "received_events_url": "https://api.github.com/users/tglunde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2239910586, "node_id": "MDU6TGFiZWwyMjM5OTEwNTg2", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/plugins", "name": "plugins", "color": "ed22f4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 8, "created_at": "2020-07-29T17:20:17Z", "updated_at": "2020-08-19T18:40:05Z", "closed_at": "2020-08-19T18:40:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nIn Exasol identifiers starting with double underscore are illegal - hence emepheral models fail when using dbt-exasol adapter.\r\n \r\n### Steps To Reproduce\r\nConfigure you project to use dbt-exasol adapter (available on https://pypi.org/project/dbt-exasol/) and then create an ephemeral model. Once you use that model in a ref dbt generates a CTE named \"__dbt__CTE__\" which is not a valid identifier in exasol.\r\n\r\n### Expected behavior\r\nEphemeral models should work in Exasol. Therefore we suggest to generate those CTE without the leading \"__\" characters.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [x] other (specify: exasol)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\nAll versions above 0.14.x\r\n```\r\n\r\n**The operating system you're using:**\r\nubuntu 18.04.1\r\n**The output of `python --version`:**\r\nPython 3.6.9\r\n\r\n### Additional context\r\nN/A", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2657", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2657/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2657/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2657/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2657", "id": 667423159, "node_id": "MDU6SXNzdWU2Njc0MjMxNTk=", "number": 2657, "title": "Docs changes for 0.17.2", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/60", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60/labels", "id": 5697355, "node_id": "MDk6TWlsZXN0b25lNTY5NzM1NQ==", "number": 60, "title": "0.17.2", "description": "Bugfix release", "creator": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-07-24T20:38:42Z", "updated_at": "2020-08-03T17:06:32Z", "due_on": "2020-07-31T07:00:00Z", "closed_at": "2020-08-03T17:06:32Z"}, "comments": 1, "created_at": "2020-07-28T22:30:09Z", "updated_at": "2020-07-29T16:25:30Z", "closed_at": "2020-07-29T16:25:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For inclusion in final release:\r\n* https://github.com/fishtown-analytics/dbt-docs/pull/115", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2653", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2653/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2653/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2653/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2653", "id": 667162622, "node_id": "MDU6SXNzdWU2NjcxNjI2MjI=", "number": 2653, "title": "catalog.json file empty when custom schema names used", "user": {"login": "Plamen8780", "id": 35925539, "node_id": "MDQ6VXNlcjM1OTI1NTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/35925539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plamen8780", "html_url": "https://github.com/Plamen8780", "followers_url": "https://api.github.com/users/Plamen8780/followers", "following_url": "https://api.github.com/users/Plamen8780/following{/other_user}", "gists_url": "https://api.github.com/users/Plamen8780/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plamen8780/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plamen8780/subscriptions", "organizations_url": "https://api.github.com/users/Plamen8780/orgs", "repos_url": "https://api.github.com/users/Plamen8780/repos", "events_url": "https://api.github.com/users/Plamen8780/events{/privacy}", "received_events_url": "https://api.github.com/users/Plamen8780/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 547377963, "node_id": "MDU6TGFiZWw1NDczNzc5NjM=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/redshift/pg", "name": "redshift/pg", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/60", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60/labels", "id": 5697355, "node_id": "MDk6TWlsZXN0b25lNTY5NzM1NQ==", "number": 60, "title": "0.17.2", "description": "Bugfix release", "creator": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-07-24T20:38:42Z", "updated_at": "2020-08-03T17:06:32Z", "due_on": "2020-07-31T07:00:00Z", "closed_at": "2020-08-03T17:06:32Z"}, "comments": 2, "created_at": "2020-07-28T15:23:44Z", "updated_at": "2020-07-29T16:25:55Z", "closed_at": "2020-07-29T16:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/fishtown-analytics/dbt/blob/3ec911b62c736e7b5ae26e624b9a981dc3fb177f/plugins/redshift/dbt/include/redshift/macros/catalog.sql#L46\r\nThe line above does not take into account custom schema names and it always refers to the default schema name.\r\nThis results in an empty catalog.json file whenever the target uses custom schema names.\r\nThis issue appeared first appeared in v.0.17.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2652", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2652/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2652/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2652/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2652", "id": 666988654, "node_id": "MDU6SXNzdWU2NjY5ODg2NTQ=", "number": 2652, "title": "More informative error message when a package is not compatible with dbt's version", "user": {"login": "LePeti", "id": 19508797, "node_id": "MDQ6VXNlcjE5NTA4Nzk3", "avatar_url": "https://avatars1.githubusercontent.com/u/19508797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LePeti", "html_url": "https://github.com/LePeti", "followers_url": "https://api.github.com/users/LePeti/followers", "following_url": "https://api.github.com/users/LePeti/following{/other_user}", "gists_url": "https://api.github.com/users/LePeti/gists{/gist_id}", "starred_url": "https://api.github.com/users/LePeti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LePeti/subscriptions", "organizations_url": "https://api.github.com/users/LePeti/orgs", "repos_url": "https://api.github.com/users/LePeti/repos", "events_url": "https://api.github.com/users/LePeti/events{/privacy}", "received_events_url": "https://api.github.com/users/LePeti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T11:12:15Z", "updated_at": "2020-07-28T14:30:22Z", "closed_at": "2020-07-28T14:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\n\r\nI'm using dbt v0.16.0 and when I've added dbt_utils v0.5.0 and ran `dbt deps` I received the following error message:\r\n\r\n```\r\nEncountered an error:\r\nRuntime Error\r\n  Failed to read package at /home/rdeployer/app/dbt_modules/dbt_utils: Runtime Error\r\n    at path []: Additional properties are not allowed (\u2018config-version\u2019 was unexpected)\r\n```\r\nThe error occurred because dbt_utils' `dbt_project.yml` uses `config-version: 2` which isn't compatible with dbt v0.16.0.\r\n\r\nI think an error message that clearly states that there is a version discrepancy would be helpful. Showing the version dependency on dbt Hub would also be helpful.\r\n\r\n### Who will this benefit?\r\n\r\nAnyone using dependencies.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2651", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2651/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2651/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2651/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2651", "id": 666518997, "node_id": "MDU6SXNzdWU2NjY1MTg5OTc=", "number": 2651, "title": "Sprint 52: Core (7/22/2020 - 8/5/2020)", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T19:07:30Z", "updated_at": "2020-08-05T18:01:00Z", "closed_at": "2020-08-05T17:59:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2645", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2645/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2645/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2645/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2645", "id": 665368974, "node_id": "MDU6SXNzdWU2NjUzNjg5NzQ=", "number": 2645, "title": "dbt rpc's \"run_sql\" method can hang forever", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1288817952, "node_id": "MDU6TGFiZWwxMjg4ODE3OTUy", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/rpc", "name": "rpc", "color": "a9f1fc", "default": false, "description": "Issues related to dbt's RPC server"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/60", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60/labels", "id": 5697355, "node_id": "MDk6TWlsZXN0b25lNTY5NzM1NQ==", "number": 60, "title": "0.17.2", "description": "Bugfix release", "creator": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-07-24T20:38:42Z", "updated_at": "2020-08-03T17:06:32Z", "due_on": "2020-07-31T07:00:00Z", "closed_at": "2020-08-03T17:06:32Z"}, "comments": 1, "created_at": "2020-07-24T19:25:33Z", "updated_at": "2020-07-29T22:56:32Z", "closed_at": "2020-07-28T22:46:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nGiven a snowflake environment with `client_session_keepalive` set to True, the `run_sql` RPC call will successfully run and then never finish. This manifests as the rpc `poll` call showing the task as still running, forever.\r\n\r\nThe process will show up in the process table and the RPC server's `ps` output as being active on the OS level, but it won't be actually doing anything. In particular it'll be blocking on join()ing the process.\r\n\r\nThe problem here is that the background thread that the snowflake connector starts is hanging, because dbt never calls `close()` on the handle.  The fix is to update `dbt.adapters.base.connections.ConnectionManager.release()` to always call `close()`, even when the connection state is \"open\" (currently it only calls it if the state is _not_ \"open\", which seems pretty silly). \r\n\r\n\r\n### Steps To Reproduce\r\n- set up a profile with `client_session_keepalive: true`\r\n- run `dbt rpc` and point it at that profile\r\n- call `run_sql` with `select 1 as id` as the argument, or anything else you like\r\n- wait forever\r\n\r\n### Expected behavior\r\nThe API call should return pretty much immediately.\r\n\r\n### Screenshots and log output\r\nN/A\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [X] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n`dbt==0.17.1`\r\n\r\n**The operating system you're using:**\r\nmacos or linux\r\n\r\n**The output of `python --version`:**\r\nAny? 3.6 and 3.8 both have it.\r\n\r\n### Additional context\r\nI was able to reproduce this behavior on macos with dbt 0.17.0, but not on Linux, so I assume it has to do with some oddity of spawn vs fork behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2644", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2644/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2644/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2644/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2644", "id": 664830139, "node_id": "MDU6SXNzdWU2NjQ4MzAxMzk=", "number": 2644, "title": "--fail-fast with BigQuery does not show original error message", "user": {"login": "joshpeng-quibi", "id": 58446866, "node_id": "MDQ6VXNlcjU4NDQ2ODY2", "avatar_url": "https://avatars2.githubusercontent.com/u/58446866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshpeng-quibi", "html_url": "https://github.com/joshpeng-quibi", "followers_url": "https://api.github.com/users/joshpeng-quibi/followers", "following_url": "https://api.github.com/users/joshpeng-quibi/following{/other_user}", "gists_url": "https://api.github.com/users/joshpeng-quibi/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshpeng-quibi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshpeng-quibi/subscriptions", "organizations_url": "https://api.github.com/users/joshpeng-quibi/orgs", "repos_url": "https://api.github.com/users/joshpeng-quibi/repos", "events_url": "https://api.github.com/users/joshpeng-quibi/events{/privacy}", "received_events_url": "https://api.github.com/users/joshpeng-quibi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/60", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60/labels", "id": 5697355, "node_id": "MDk6TWlsZXN0b25lNTY5NzM1NQ==", "number": 60, "title": "0.17.2", "description": "Bugfix release", "creator": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-07-24T20:38:42Z", "updated_at": "2020-08-03T17:06:32Z", "due_on": "2020-07-31T07:00:00Z", "closed_at": "2020-08-03T17:06:32Z"}, "comments": 3, "created_at": "2020-07-23T23:42:21Z", "updated_at": "2020-07-27T19:15:38Z", "closed_at": "2020-07-27T19:15:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen using `dbt run --fail-fast` on BQ, the original passthrough error message is not present in the output logs.\r\n\r\n```\r\ndbt run -m +some_model --fail-fast\r\nRunning with dbt=0.17.0\r\nFound 176 models, 1261 tests, 0 snapshots, 2 analyses, 364 macros, 0 operations, 0 seed files, 27 sources\r\n\r\n16:32:26 | Concurrency: 8 threads (target='dev')\r\n16:32:26 | \r\n16:32:26 | 1 of 4 START table model someschema.some_model........ [RUN]\r\n16:32:27 | 1 of 4 ERROR creating table model someschema.some_model [ERROR in 1.02s]\r\n16:32:27 | The bigquery adapter does not support query cancellation. Some queries may still be running!\r\nEncountered an error:\r\nFailFast Error in model some_model (models/someschema/some_model.sql)\r\n  Failing early due to test failure or runtime error\r\n```\r\n\r\n### Steps To Reproduce\r\n1. Setup a broken model in dbt against a BigQuery connection\r\n2. Run with `dbt run --fail-fast`\r\n3. Look at output log\r\n\r\n### Expected behavior\r\nWe should still see the original passthrough error message prior to the `FailFast Error in...` messaging like how it does in other connection types.\r\n\r\nThis is output from another connection type where we can see the `Database Error in...` messaging present:\r\n```\r\ndbt run --fail-fast\r\nRunning with dbt=0.17.1\r\nFound 1 model, 0 tests, 0 snapshots, 0 analyses, 134 macros, 0 operations, 2 seed files, 1 source\r\n19:00:22 | Concurrency: 1 threads (target='dev')\r\n19:00:22 |\r\n19:00:22 | 1 of 1 START view model dbt_jcohen.bad_model......................... [RUN]\r\n19:00:22 | 1 of 1 ERROR creating view model dbt_jcohen.bad_model................ [ERROR in 0.08s]\r\n19:00:23 | CANCEL query model.random.bad_model.................................. [CANCEL]\r\nDatabase Error in model bad_model (models/bad_model.sql)\r\n  column \"askdfhdlrgioj\" does not exist\r\n  LINE 4:     select askdfhdlrgioj\r\n                     ^\r\n  compiled SQL at target/run/random/models/bad_model.sql\r\nEncountered an error:\r\nFailFast Error in model bad_model (models/bad_model.sql)\r\n  Failing early due to test failure or runtime error\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.1\r\n\r\nYour version of dbt is out of date! You can find instructions for upgrading here:\r\nhttps://docs.getdbt.com/docs/installation\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nmacOS 10.14.6\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2641", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2641/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2641/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2641/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2641", "id": 664019965, "node_id": "MDU6SXNzdWU2NjQwMTk5NjU=", "number": 2641, "title": "Slim CI runs, via state comparison and deferred refs", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 5, "created_at": "2020-07-22T20:11:25Z", "updated_at": "2020-08-14T19:44:49Z", "closed_at": "2020-08-14T19:44:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Slim CI: MVP\r\n\r\nFor 0.18.0, we want to prioritize making the following use case possible:\r\n```\r\ndbt run -m state:modified+ --defer --state prod-target/\r\n```\r\n\r\nWhat does this do?\r\n1. `--state prod-target/`: Compare the current project against the manifest specified in the `--state` arg (#2465)\r\n2. `state:modified+`: Select the set of model nodes that are not present in the state manifest, or differ from the same-named model nodes in state manifest, and their children\r\n3. `--defer`: Compile any `ref()` in a selected model that points to a node _not_ in the selection group by using the state manifest, instead of the default (target-informed) namespace (#2527)\r\n4. Run all selected models\r\n\r\nIn terms of the user-side setup required for the V1 of this, we expect:\r\n\r\n1. **dbt Cloud** will have a behind-the-scenes mechanism to accept user input (`job_id`) and surface up-to-date artifacts, either:\r\n    - to a relative path that is predictable, stable, and git-ignored (e.g. `.dbt-cloud/`)\r\n    - to an absolute path that is encoded in an env var\r\n2. In **Airflow/CircleCI/etc**, in the steps before running dbt, users write bash commands to grab the artifact files from wherever they are and copy them to wherever they need to be\r\n\r\nThe underlying constructs open a pandora's box of questions that we'll need to continue thinking through:\r\n* Deferring `ref`s in ephemeral models? Is this a performance killer during compilation?\r\n* How do we reflect \"deferral\" in dbt artifacts? The run results should reflect that the model selected from the \"deferred\" namespace. What should the manifest do?\r\n* What about models that should never/always be deferred? We want to be wary of global flags to control behavior which users really want to control on a per-model basis (see: `--full-refresh`).\r\n* Are there cases where someone wants to compare state against one manifest and defer references to a different one?\r\n* Should dbt offer handy mechanisms to move artifacts around?\r\n\r\nThere's more thinking to do. We're not going to block a first version of this by worrying about all the cascading implications.\r\n\r\n## Related art\r\n\r\nAs a selector (#2640):\r\n\r\n```yml\r\nselectors:\r\n  - name: delta_plus\r\n     definition:\r\n       method: state   # this would return an error if `--state` is not passed\r\n       value: modified\r\n       children: true\r\n```\r\n\r\nAs a workflow (#1842):\r\n\r\n```yml\r\nworkflows:\r\n  - name: slim_ci\r\n    steps:\r\n      # assuming the prod manifest is already in a folder called `prod-target`\r\n      - name: run_changed\r\n        description: Run changed models, parents, children\r\n        command:\r\n          subcommand: run\r\n          selector: delta_plus\r\n          defer: true\r\n          state: 'prod-target'\r\n      - name: good_tests\r\n        description: Run my good tests\r\n        command:\r\n          subcommand: test\r\n          selector: delta_plus\r\n          on_error: continue\r\n      - name: generate_docs\r\n        description: Make my docs\r\n        command:\r\n          subcommand: docs generate\r\n```\r\n\r\nThis is effectively a Makefile, with a few added benefits:\r\n* Define dbt subcommands as dicts instead of CLI arg syntax\r\n* Control `on_error` behavior: continue to next workflow step, or stop the workflow altogether\r\n\r\nI feel good about adding this functionality, and the syntax above feels reasonable. The big unknowns are (a) how people will use these, and (b) how dbt Cloud could compellingly hook into these. If possible, I'd like to add _very_ initial support for workflows in 0.18.0 and leave it undocumented / call it out as liable to change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2637", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2637/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2637/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2637/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2637", "id": 662790641, "node_id": "MDU6SXNzdWU2NjI3OTA2NDE=", "number": 2637, "title": "Column documentation fails with particular string", "user": {"login": "Limess", "id": 3199181, "node_id": "MDQ6VXNlcjMxOTkxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3199181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Limess", "html_url": "https://github.com/Limess", "followers_url": "https://api.github.com/users/Limess/followers", "following_url": "https://api.github.com/users/Limess/following{/other_user}", "gists_url": "https://api.github.com/users/Limess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Limess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Limess/subscriptions", "organizations_url": "https://api.github.com/users/Limess/orgs", "repos_url": "https://api.github.com/users/Limess/repos", "events_url": "https://api.github.com/users/Limess/events{/privacy}", "received_events_url": "https://api.github.com/users/Limess/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T09:20:35Z", "updated_at": "2020-07-21T13:58:07Z", "closed_at": "2020-07-21T09:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nA clear and concise description of what the bug is. What command did you run? What happened?\r\nDBT fails to add a comment to the following column:\r\n\r\n`comment on column \"analytics\".\"analyst_charlie_briggs_scratch\".\"dim_reports\".schedule_frequency, is $dbt_comment_literal_block$The frequency type of the schedule, e.g. 'daily' Some adapted legacy alerts did not have a schedule in which case this is taken from their `frequency_type`\r\n$dbt_comment_literal_block$;`\r\n\r\n```\r\n2020-07-21 09:12:06.852563 (Thread-3): Postgres error: syntax error at or near \",\"\r\nLINE 24: ...e_briggs_scratch\".\"dim_reports\".schedule_frequency, is $dbt_...\r\n                                                              ^\r\n\r\n2020-07-21 09:12:06.852975 (Thread-3): On model.signal_dbt.dim_reports: ROLLBACK\r\n2020-07-21 09:12:06.955836 (Thread-3): finished collecting timing info\r\n2020-07-21 09:12:06.958338 (Thread-3): Database Error in model dim_reports (models/marts/core/dim_reports.sql)\r\n  syntax error at or near \",\"\r\n  LINE 24: ...e_briggs_scratch\".\"dim_reports\".schedule_frequency, is $dbt_...\r\n                                                                ^\r\n  compiled SQL at target/run/signal_dbt/models/marts/core/dim_reports.sql\r\nTraceback (most recent call last):\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/postgres/connections.py\", line 46, in exception_handler\r\n    yield\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/sql/connections.py\", line 74, in add_query\r\n    cursor.execute(sql, bindings)\r\npsycopg2.errors.SyntaxError: syntax error at or near \",\"\r\nLINE 24: ...e_briggs_scratch\".\"dim_reports\".schedule_frequency, is $dbt_...\r\n                                                              ^\r\n```\r\n\r\n### Steps To Reproduce\r\n\r\nAdd a model to a project running against Redshift with the config:\r\n\r\n```\r\n    +persist_docs:\r\n      relations: true\r\n      columns: true\r\n```\r\n\r\nAdd a model called `dim_reports` with a column `schedule_frequency`.\r\n\r\nAdd the schema file:\r\n```\r\n  - name: dim_reports\r\n    columns:\r\n      - name: schedule_frequency,\r\n        description: >\r\n          The frequency type of the schedule, e.g. 'daily'\r\n          Some adapted legacy alerts did not have a schedule in which case this is taken from their `frequency_type`\r\n```\r\n\r\nrun `dbt run` with the above model.\r\n\r\n\r\n### Expected behavior\r\nI'd expect either the comment to be validated and fail fast, or a better error message indicating why the error occured.\r\n\r\nIt's relatively difficult to debug this as the line numbers in the DBT log don't correspond to anything in the `target` directory.\r\n\r\n### Screenshots and log output\r\n\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/node_runners.py\", line 228, in safe_run\r\n    result = self.compile_and_execute(manifest, ctx)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/node_runners.py\", line 171, in compile_and_execute\r\n    result = self.run(ctx.node, manifest)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/node_runners.py\", line 273, in run\r\n    return self.execute(compiled_node, manifest)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/node_runners.py\", line 459, in execute\r\n    result = MacroGenerator(materialization_macro, context)()\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 81, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 26, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 96, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 49, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 33, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 327, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/clients/jinja.py\", line 257, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 41, in macro\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/jinja2/runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/base/impl.py\", line 228, in execute\r\n    fetch=fetch\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/sql/connections.py\", line 119, in execute\r\n    _, cursor = self.add_query(sql, auto_begin)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/sql/connections.py\", line 82, in add_query\r\n    return connection, cursor\r\n  File \"/Users/charlie.briggs/.pyenv/versions/3.7.6/lib/python3.7/contextlib.py\", line 130, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/Users/charlie.briggs/Projects/signal/analytics/dbt/.venv/lib/python3.7/site-packages/dbt/adapters/postgres/connections.py\", line 58, in exception_handler\r\n    raise dbt.exceptions.DatabaseException(str(e).strip()) from e\r\ndbt.exceptions.DatabaseException: Database Error in model dim_reports (models/marts/core/dim_reports.sql)\r\n  syntax error at or near \",\"\r\n  LINE 24: ...e_briggs_scratch\".\"dim_reports\".schedule_frequency, is $dbt_...\r\n                                                                ^\r\n  compiled SQL at target/run/signal_dbt/models/marts/core/dim_reports.sql\r\n2020-07-21 09:12:06.962021 (Thread-3): 10:12:06 | 138 of 183 ERROR creating table model analyst_charlie_briggs_scratch.dim_reports [ERROR in 310.07s]\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [x] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.1\r\n   latest version: 0.17.1\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - redshift: 0.17.1\r\n  - postgres: 0.17.1\r\n```\r\n\r\n**The operating system you're using:**\r\n\r\nMac OS 10.15.6 (19G73)\r\n\r\n**The output of `python --version`:**\r\n\r\n3.7.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2636", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2636/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2636/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2636/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2636", "id": 662197003, "node_id": "MDU6SXNzdWU2NjIxOTcwMDM=", "number": 2636, "title": "Option to move the written files (target/*, logs/*, dbt_modules/*) out of the source tree", "user": {"login": "TjrGithub", "id": 515569, "node_id": "MDQ6VXNlcjUxNTU2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TjrGithub", "html_url": "https://github.com/TjrGithub", "followers_url": "https://api.github.com/users/TjrGithub/followers", "following_url": "https://api.github.com/users/TjrGithub/following{/other_user}", "gists_url": "https://api.github.com/users/TjrGithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/TjrGithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TjrGithub/subscriptions", "organizations_url": "https://api.github.com/users/TjrGithub/orgs", "repos_url": "https://api.github.com/users/TjrGithub/repos", "events_url": "https://api.github.com/users/TjrGithub/events{/privacy}", "received_events_url": "https://api.github.com/users/TjrGithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-20T19:48:58Z", "updated_at": "2020-07-24T19:51:34Z", "closed_at": "2020-07-24T19:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nI would love to have an option to move all the files DBT write to, out of the project's source tree.\r\n\r\n### Describe alternatives you've considered\r\nI'm working inside Docker, with the source directory shared between host (for easy dev access) and container (for testing).\r\nI've tried mounting a separate docker volume onto the dbt/target directory, but docker-compose does not support nested mount points. Writing by DBT gives all kinds of user and permissions mismatch problems, in a bind-mount intended to be read-only.\r\nI've also tried symlinks, but that is hacking around DBT and risks breakign with each upgrade.\r\n\r\n### Additional context\r\nIt's not database-specific.\r\n\r\n### Who will this benefit?\r\nAnybody who is developing (and testing) a dockerized DBT application\r\n\r\n### Are you interested in contributing this feature?\r\nSorry, please don't wait for me in this respect.\r\n\r\n\r\nIssue #2617 (splitting log directories) may or may not be closed by the same fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2633", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2633/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2633/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2633/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2633", "id": 659692121, "node_id": "MDU6SXNzdWU2NTk2OTIxMjE=", "number": 2633, "title": "Enable snowflake-connector-python debug logging with environment variables", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T22:27:01Z", "updated_at": "2020-07-21T14:51:39Z", "closed_at": "2020-07-21T14:51:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\ndbt should support an environment variable to enable debug logging for the `snowflake-connector-python` library. This will help dbt users track down issues that arise like:\r\n```\r\nApache Arrow format is not supported\r\n```\r\n\r\nSnowflake support requires these logs to diagnose and resolve issues that occur using their platform.\r\n\r\n### Describe alternatives you've considered\r\nWe could enable these logs by default. `snowflake-connector-python` debug logs are pretty verbose though, so it might be wise to restrict this logging behind an env var.\r\n\r\n### Additional context\r\nRelevant to intermittent errors like `The result set in Apache Arrow format is not supported for the platform.`\r\n\r\n### Who will this benefit?\r\nSnowflake users; snowflake support\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2632", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2632/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2632/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2632/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2632", "id": 658848304, "node_id": "MDU6SXNzdWU2NTg4NDgzMDQ=", "number": 2632, "title": "Make require_partition_filter a config option for BQ models", "user": {"login": "meurant-naude", "id": 62264378, "node_id": "MDQ6VXNlcjYyMjY0Mzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/62264378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meurant-naude", "html_url": "https://github.com/meurant-naude", "followers_url": "https://api.github.com/users/meurant-naude/followers", "following_url": "https://api.github.com/users/meurant-naude/following{/other_user}", "gists_url": "https://api.github.com/users/meurant-naude/gists{/gist_id}", "starred_url": "https://api.github.com/users/meurant-naude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meurant-naude/subscriptions", "organizations_url": "https://api.github.com/users/meurant-naude/orgs", "repos_url": "https://api.github.com/users/meurant-naude/repos", "events_url": "https://api.github.com/users/meurant-naude/events{/privacy}", "received_events_url": "https://api.github.com/users/meurant-naude/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T04:37:56Z", "updated_at": "2020-07-19T05:25:54Z", "closed_at": "2020-07-17T14:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nIt would be good if the require_partition_filter option is available for BigQuery models. The require_partition_filter option fits with the existing partitioning option.\r\n\r\nOur query costs are billed to the user and to prevent costly queries we have the require_partition_filter option set on our larger tables. Would be good if we can do the same with dbt generated tables.\r\n\r\n### Describe alternatives you've considered\r\nN/A\r\n\r\n### Additional context\r\nN/A\r\n\r\n### Who will this benefit?\r\nAny BigQuery user would benefit.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2631", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2631/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2631/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2631/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2631", "id": 658658856, "node_id": "MDU6SXNzdWU2NTg2NTg4NTY=", "number": 2631, "title": "builtins.ref.database returning full statement code for CTE's", "user": {"login": "ciejer", "id": 5128505, "node_id": "MDQ6VXNlcjUxMjg1MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5128505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciejer", "html_url": "https://github.com/ciejer", "followers_url": "https://api.github.com/users/ciejer/followers", "following_url": "https://api.github.com/users/ciejer/following{/other_user}", "gists_url": "https://api.github.com/users/ciejer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciejer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciejer/subscriptions", "organizations_url": "https://api.github.com/users/ciejer/orgs", "repos_url": "https://api.github.com/users/ciejer/repos", "events_url": "https://api.github.com/users/ciejer/events{/privacy}", "received_events_url": "https://api.github.com/users/ciejer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-16T23:24:03Z", "updated_at": "2020-07-19T17:12:28Z", "closed_at": "2020-07-17T14:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nThe statement `{{- builtins.ref('dbt_run_results_stage').database -}}` returns the CTE SQL `with __DBT__CTE__... as (...` statement before returning 'None' database, when queried for ephemeral objects.\r\n\r\n### Steps To Reproduce\r\n\r\n1. Create an ephemeral model in DBT\r\n2. Reference this model with a `{{- builtins.ref('<ephemeral model name>').database -}}` statement\r\n\r\n### Expected behavior\r\nThis snippet should return the name of the database the ephemeral model is executed on.\r\n\r\n### Screenshots and log output\r\n![image](https://user-images.githubusercontent.com/5128505/87731803-70c93f80-c81f-11ea-820e-d43911572534.png)\r\n\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [-] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\nDBT Cloud - 0.16.1\r\n\r\n**The operating system you're using:**\r\nDBT Cloud\r\n\r\n**The output of `python --version`:**\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2630", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2630/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2630/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2630/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2630", "id": 657776386, "node_id": "MDU6SXNzdWU2NTc3NzYzODY=", "number": 2630, "title": "Issue with numeric schema name when adding to sources.yml", "user": {"login": "nikomataaa", "id": 55773604, "node_id": "MDQ6VXNlcjU1NzczNjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/55773604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomataaa", "html_url": "https://github.com/nikomataaa", "followers_url": "https://api.github.com/users/nikomataaa/followers", "following_url": "https://api.github.com/users/nikomataaa/following{/other_user}", "gists_url": "https://api.github.com/users/nikomataaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomataaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomataaa/subscriptions", "organizations_url": "https://api.github.com/users/nikomataaa/orgs", "repos_url": "https://api.github.com/users/nikomataaa/repos", "events_url": "https://api.github.com/users/nikomataaa/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomataaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-16T01:45:18Z", "updated_at": "2020-07-29T22:49:36Z", "closed_at": "2020-07-29T22:49:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nI found yesterday that DBT couldn't accept the number type of schema name when I added to `sources.yml`, since it wanted to have it as String instead. I found similar issue was already resolved on this PR already : https://github.com/fishtown-analytics/dbt/pull/2208\r\n\r\n### Steps To Reproduce\r\nSo for example I have to add this to `sources.yml` : \r\n```\r\n  - name: ga360_session\r\n    database: ga360-prod\r\n    schema: 196936242\r\n    tables:\r\n      - name: ga_sessions_2020*\r\n```\r\nSince the schema name is `196936242` and it's number, DBT doesn't want that, it wants the String instead\r\n\r\n### Expected behavior\r\nSince it was already solved on this [PR](https://github.com/fishtown-analytics/dbt/pull/2208), so I expect that any input is converted to string instead\r\n\r\n### Screenshots and log output\r\n<img width=\"1055\" alt=\"Screen Shot 2020-07-16 at 08 40 58\" src=\"https://user-images.githubusercontent.com/55773604/87616839-3e94e080-c740-11ea-8eab-ca35ea67d185.png\">\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nMacOS Catalina 10.15.5\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.4\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2626", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2626/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2626/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2626/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2626", "id": 657648776, "node_id": "MDU6SXNzdWU2NTc2NDg3NzY=", "number": 2626, "title": "Regression in accepted_values quote behavior on Postgres & Snowflake", "user": {"login": "norton120", "id": 6440476, "node_id": "MDQ6VXNlcjY0NDA0NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6440476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/norton120", "html_url": "https://github.com/norton120", "followers_url": "https://api.github.com/users/norton120/followers", "following_url": "https://api.github.com/users/norton120/following{/other_user}", "gists_url": "https://api.github.com/users/norton120/gists{/gist_id}", "starred_url": "https://api.github.com/users/norton120/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/norton120/subscriptions", "organizations_url": "https://api.github.com/users/norton120/orgs", "repos_url": "https://api.github.com/users/norton120/repos", "events_url": "https://api.github.com/users/norton120/events{/privacy}", "received_events_url": "https://api.github.com/users/norton120/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-15T20:54:15Z", "updated_at": "2020-07-16T16:39:59Z", "closed_at": "2020-07-16T16:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nas recent as v0.16.1  `quote:` property in accepted_values schema tests would determine the _outermost_ quote for a given value. So: \r\n\r\n``` \r\ntests:\r\n    - accepted_values:\r\n          values: ['`BIGQUERY`','\"SNOWFLAKE\"','\"postgres\"']\r\n          quote: true\r\n```\r\nwould compile to  \r\n\r\n```\r\nwhere value_field not in (\r\n    '`BIGQUERY`','\"SNOWFLAKE\"','\"postgres\"'\r\n)\r\n```\r\nWith 0.17.0 the same schema.yml compiles to:\r\n\r\n```\r\nwhere value_field not in (\r\n    '`BIGQUERY`','SNOWFLAKE','postgres'\r\n)\r\n```\r\n\r\n### Steps To Reproduce\r\nWith dbt 0.17.0 use nested quotes and set `quote: true` for an accepted_values test. The result in Snowflake and Postgres will only respect the outer quotes. This does not appear to impact backticks in BigQuery.\r\n\r\n### Expected behavior\r\n`quote: true` determines if the value is wrapped as a literal, without impacting the internal values of the string.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\ntested in 0.16.0, 0.16.1, and now failing in 0.17.0\r\n\r\n**The operating system you're using:**\r\nDebian (python:3.7 docker image)\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.8 \r\n(dockerfile [here](https://github.com/Health-Union/dbt-xdb/blob/master/Dockerfile))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2621", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2621/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2621/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2621/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2621", "id": 654364970, "node_id": "MDU6SXNzdWU2NTQzNjQ5NzA=", "number": 2621, "title": "RPC methods should exclude Jinja comments from compiled SQL", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1288817952, "node_id": "MDU6TGFiZWwxMjg4ODE3OTUy", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/rpc", "name": "rpc", "color": "a9f1fc", "default": false, "description": "Issues related to dbt's RPC server"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T21:40:41Z", "updated_at": "2020-08-19T19:39:36Z", "closed_at": "2020-08-19T19:39:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nThe `compile_sql` and `run_sql` methods of `dbt rpc` currently include Jinja comments `{# #}` in their compiled SQL.\r\n\r\n### Steps To Reproduce\r\n\r\n1. Run an RPC server per [docs](https://docs.getdbt.com/reference/commands/rpc/)\r\n\r\n2. Send a request (method `compile_sql` or `run_sql`) where the SQL contains a Jinja comment\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"compile_sql\",\r\n    \"id\": \"2db9a2fe-9a39-41ef-828c-25e04dd6b07d\",\r\n    \"params\": {\r\n        \"timeout\": 60,\r\n        \"sql\": \"c2VsZWN0IHsjIDEgKyAxICN9IGFzIGlkCg==\",\r\n        \"name\": \"my_first_query\"\r\n    }\r\n}\r\n```\r\n\r\n3. Poll for result\r\n```json\r\n...\r\n\"raw_sql\": \"select {# 1 + 1 #} as id\\n\",\r\n\"compiled_sql\": \"select {# 1 + 1 #} as id\\n\",\r\n...\r\n```\r\n\r\n### Expected behavior\r\n```json\r\n\"raw_sql\": \"select {# 1 + 1 #} as id\\n\",\r\n\"compiled_sql\": \"select  as id\\n\",\r\n```\r\n\r\n**The output of `dbt --version`:**\r\n```bash\r\n$ dbt --version\r\ninstalled version: 0.17.1-rc4\r\n   latest version: 0.17.0\r\n\r\nYour version of dbt is ahead of the latest release!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.1rc4\r\n  - snowflake: 0.17.1rc4\r\n  - redshift: 0.17.1rc4\r\n  - postgres: 0.17.1rc4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2620", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2620/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2620/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2620/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2620", "id": 654360484, "node_id": "MDU6SXNzdWU2NTQzNjA0ODQ=", "number": 2620, "title": "dbt clean regression", "user": {"login": "tmastny", "id": 20732748, "node_id": "MDQ6VXNlcjIwNzMyNzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/20732748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmastny", "html_url": "https://github.com/tmastny", "followers_url": "https://api.github.com/users/tmastny/followers", "following_url": "https://api.github.com/users/tmastny/following{/other_user}", "gists_url": "https://api.github.com/users/tmastny/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmastny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmastny/subscriptions", "organizations_url": "https://api.github.com/users/tmastny/orgs", "repos_url": "https://api.github.com/users/tmastny/repos", "events_url": "https://api.github.com/users/tmastny/events{/privacy}", "received_events_url": "https://api.github.com/users/tmastny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/60", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/60/labels", "id": 5697355, "node_id": "MDk6TWlsZXN0b25lNTY5NzM1NQ==", "number": 60, "title": "0.17.2", "description": "Bugfix release", "creator": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-07-24T20:38:42Z", "updated_at": "2020-08-03T17:06:32Z", "due_on": "2020-07-31T07:00:00Z", "closed_at": "2020-08-03T17:06:32Z"}, "comments": 2, "created_at": "2020-07-09T21:31:25Z", "updated_at": "2020-07-28T14:56:37Z", "closed_at": "2020-07-28T14:56:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nIn dbt 0.16.1 `dbt clean` fails without a profile: \r\n\r\n```bash\r\n(dbt) dbt$ dbt --version\r\ninstalled version: 0.16.1\r\n   latest version: 0.17.0\r\n\r\nYour version of dbt is out of date! You can find instructions for upgrading here:\r\nhttps://docs.getdbt.com/docs/installation\r\n(dbt) dbt$ dbt clean\r\nRunning with dbt=0.16.1\r\nEncountered an error while reading the project:\r\n  ERROR: Runtime Error\r\n  Could not find profile named 'profile'\r\nEncountered an error:\r\nRuntime Error\r\n  Could not run dbt\r\n```\r\n\r\nIn dbt 0.15.1, `dbt clean` works.\r\n\r\n```bash\r\n(dbt) dbt$ dbt --version\r\ninstalled version: 0.15.1\r\n   latest version: 0.17.0\r\n\r\nYour version of dbt is out of date! You can find instructions for upgrading here:\r\nhttps://docs.getdbt.com/docs/installation\r\n(dbt) dbt$ dbt clean\r\nRunning with dbt=0.15.1\r\nChecking target/*\r\n Cleaned target/*\r\nFinished cleaning all paths.\r\n```\r\n\r\n### Steps To Reproduce\r\nDelete any profile found in `~/.dbt/profile.yml`. \r\n\r\nInstall 0.16.1:\r\n```bash\r\npip install dbt==0.16.1\r\n```\r\nNavigate to dbt project:\r\n```\r\ndbt clean\r\n```\r\n\r\nRepeat for 0.15.1 to confirm regression.\r\n\r\n### Expected behavior\r\nI expected `dbt clean` to work without a profile. This broke some of our automated jobs when we tried to upgrade.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [X] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\nMultiple versions. See above.\r\n\r\n**The operating system you're using:**\r\nmacOS 10.14.6\r\n\r\n**The output of `python --version`:**\r\n```\r\n(dbt) dbt$ python --version\r\nPython 3.7.3\r\n```\r\n\r\n### Additional context\r\nMost people probably don't run `dbt clean` without a profile, but it was causing us confusion, so wanted to document it as a breaking change at least.\r\n\r\nI also tested this with 0.17.0: same error as 0.16.1.\r\n\r\n```\r\n(dbt) dbt$ dbt --version\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n(dbt) dbt$ dbt clean\r\nRunning with dbt=0.17.0\r\nEncountered an error while reading the project:\r\n  ERROR: Runtime Error\r\n  Could not find profile named 'profile'\r\nEncountered an error:\r\nRuntime Error\r\n  Could not run dbt\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2619", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2619/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2619/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2619/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2619", "id": 652655153, "node_id": "MDU6SXNzdWU2NTI2NTUxNTM=", "number": 2619, "title": "Support for custom types in PostgreSQL", "user": {"login": "sgoley", "id": 10283176, "node_id": "MDQ6VXNlcjEwMjgzMTc2", "avatar_url": "https://avatars1.githubusercontent.com/u/10283176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgoley", "html_url": "https://github.com/sgoley", "followers_url": "https://api.github.com/users/sgoley/followers", "following_url": "https://api.github.com/users/sgoley/following{/other_user}", "gists_url": "https://api.github.com/users/sgoley/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgoley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgoley/subscriptions", "organizations_url": "https://api.github.com/users/sgoley/orgs", "repos_url": "https://api.github.com/users/sgoley/repos", "events_url": "https://api.github.com/users/sgoley/events{/privacy}", "received_events_url": "https://api.github.com/users/sgoley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-07T21:20:02Z", "updated_at": "2020-07-08T17:59:18Z", "closed_at": "2020-07-07T22:31:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nSupport for object types in Postgresql\r\n\r\nExample: \r\n`create type prod.log_level as enum ('error', 'warn', 'debug', 'info');`\r\n\r\n### Describe alternatives you've considered\r\n\r\nCurrently the only way to work this is with a cast to text type column\r\n\r\n### Additional context\r\n\r\nPostgresqlspecific feature:\r\nhttps://www.postgresql.org/docs/12/sql-createtype.html\r\n\r\n### Who will this benefit?\r\nI'd like to perform additional validation and even tests based around specific custom type values. Etc.\r\nThis is relatively low priority since it only impacts data warehouses built in true postgresql.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2616", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2616/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2616/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2616/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2616", "id": 652437626, "node_id": "MDU6SXNzdWU2NTI0Mzc2MjY=", "number": 2616, "title": "Sprint 51: Core (7/8/2020 - 7/22/2020)", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-07T15:57:08Z", "updated_at": "2020-07-27T19:05:08Z", "closed_at": "2020-07-27T19:05:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2615", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2615/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2615/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2615/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2615", "id": 652436385, "node_id": "MDU6SXNzdWU2NTI0MzYzODU=", "number": 2615, "title": "Sprint 50: Core (6/24/2020 - 7/8/2020)", "user": {"login": "jtcohen6", "id": 13897643, "node_id": "MDQ6VXNlcjEzODk3NjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13897643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtcohen6", "html_url": "https://github.com/jtcohen6", "followers_url": "https://api.github.com/users/jtcohen6/followers", "following_url": "https://api.github.com/users/jtcohen6/following{/other_user}", "gists_url": "https://api.github.com/users/jtcohen6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtcohen6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtcohen6/subscriptions", "organizations_url": "https://api.github.com/users/jtcohen6/orgs", "repos_url": "https://api.github.com/users/jtcohen6/repos", "events_url": "https://api.github.com/users/jtcohen6/events{/privacy}", "received_events_url": "https://api.github.com/users/jtcohen6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-07T15:55:29Z", "updated_at": "2020-07-08T19:30:54Z", "closed_at": "2020-07-08T19:30:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2613", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2613/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2613/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2613/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2613", "id": 651929182, "node_id": "MDU6SXNzdWU2NTE5MjkxODI=", "number": 2613, "title": "Upgrade snowflake-connector-python version to support the token cache", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}, {"id": 547378035, "node_id": "MDU6TGFiZWw1NDczNzgwMzU=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/snowflake", "name": "snowflake", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-07T01:52:56Z", "updated_at": "2020-08-14T19:47:33Z", "closed_at": "2020-08-14T19:47:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nUpgrade snowflake-connector-python to >= v2.2.3 to support the Snowflake OAuth token cache. The only docs we could find on this were from the [odbc connector](https://docs.snowflake.com/en/user-guide/odbc-parameters.html#using-browser-based-sso-with-connection-caching-macos-and-windows-only), but the [snowflake-connector-python](https://github.com/snowflakedb/snowflake-connector-python/blob/master/DESCRIPTION.rst) says that... something... changed around a \"Secure SSO ID Token\" in v2.2.3 and the diff appears to be relevant to some sort of token cache.\r\n\r\nWe should:\r\n - Try out enabling the token cache in our Snowflake account\r\n - See if it works with the current version of `snowflake-connector-python` that dbt supports\r\n - If not, see if it magically works with v2.2.3\r\n - If not, see if we can find someone at Snowflake to give us the scoop on supported versions :)\r\n\r\n### Additional context\r\nThe token cache makes web-based oauth usable in dbt. Without the cache, each new connection (ie. thread) opened by dbt requires the user to login via a browser, rendering browser-based oauth basically useless in a multithreaded dbt run.\r\n\r\n### Who will this benefit?\r\nSnowflake users using the oauth connection method", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2612", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2612/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2612/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2612/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2612", "id": 651924486, "node_id": "MDU6SXNzdWU2NTE5MjQ0ODY=", "number": 2612, "title": "0.17.0 regression: Make native env rendering explicit/opt-in", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-07-07T01:39:19Z", "updated_at": "2020-07-08T17:04:23Z", "closed_at": "2020-07-08T17:04:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nSee the discussion in https://github.com/fishtown-analytics/dbt/pull/2608 for more information.\r\n\r\ndbt v0.17.0 adds a native env renderer for Jinja. This has the _great_ benefit of coercing stringy values like `\"True\"` or `\"False\"` to boolean values like `True` and `False`. It's a subtle distinction, and the benefit is that you can use dbt's jinja context to do really clever things in configuration files, eg:\r\n\r\n```\r\nmodels:\r\n  my_package:\r\n    optional:\r\n       enabled: \"{{ env_var('DBT_OPTIONAL_MODELS_ENABLED\") }}\r\n```\r\n\r\nIn this example, the `env_var` function returns a string, but with the native environment, dbt coerces the string to a boolean value. This is necessary because the `enabled` config requires a boolean value as a configuration.\r\n\r\nThe drawbacks of this approach are equally subtle, but there are many:\r\n - numeric strings can be errantly converted into integers, losing information (eg. `\"00\"` --> `0`)\r\n - confusingly, this behavior is inconsistent with the current implementation for obscure reasons (`\"01\"` --> `\"01\"`)*\r\n - values like the empty string (`''`) are evaluated to `None` without special handling\r\n - quotes in quoted strings are stripped as a part of literal evaluation (eg. `\"'abc'\"` --> `\"abc\"`)\r\n - the literal evaluation lib that dbt uses will coerce \"container\" types (eg. `\"[1,2,3]\"` --> `[1,2,3]` as a list instead of a string)\r\n\r\n* `01` is not a valid Python literal, so a literal evaluation of the string raises a `SyntaxError` and dbt returns the source string instead\r\n\r\nSo, this feature is powerful and compelling (which is why we added it in the first place!) but it frequently results in unexpected behavior if you don't know the gritty details about how dbt's native env rendering works under the hood. That's the exact opposite of our design goals as we march towards a 1.0 release of dbt, so we unfortunately need to take some action to revert the native env changes introduced in 0.17.0 and gate them behind a syntax which makes their use explicit.\r\n\r\nThis is going to be a breaking change to a breaking change, so we'll need to take care to communicate out why we're changing this and how users will need to adjust their code.\r\n\r\nExample code that should work once this issue is addressed:\r\n```\r\nmodels:\r\n  my_package:\r\n    optional:\r\n       enabled: \"{{ env_var('DBT_OPTIONAL_MODELS_ENABLED\") | as_bool }}\r\n```\r\n\r\n### The path forwards:\r\n\r\nAdd a `NativeMarker` as described in this comment (https://github.com/fishtown-analytics/dbt/pull/2608#issuecomment-654438650) which can be accessed using an `as_native`. Default to _not_ calling `literal_eval` on strings unless the `as_native` marker is provided.\r\n\r\nThe `as_native` filter is good and useful in many cases, but we should also add some sugary filters that are more explicit. `as_native` isn't super descriptive, and we should take care to make sure that this behavior is well defined and well documented. I propose:\r\n\r\n- `<expression> | as_text`: same behavior as 0.17.0 (and more or less a no-op in dbt > 0.17.0)\r\n- `<expression> | as_bool`: coerce the string to a boolean value. Fail if the input cannot be represented as a bool\r\n- `<expression> | as_number`: coerce the string to a number value. Fail if the input cannot be represented as a number (or, do we want `as_int` / `as_float` here instead?)\r\n- `<expression> | as_native`: coerce the string into its native representation according to `ast.literal_eval`. That could be a set/list/tuple/dict/etc, and it's on the user to make sure that their values inside the container are evaluated correctly. From my understanding, there isn't _really_ a good way to make sure dbt does the right thing there 100% of the time, which is kind of the crux of this issue!\r\n\r\nThis might require the addition of some additional Marker classes, but I think there will be a ton of benefit to coupling type inference and validation in the same jinja filter.\r\n\r\n### Next steps\r\n\r\n- Drew to write something up since functionality churn like this is a little unusual and is blocking our dbt patch/bugfix release\r\n- We need to determine the version number for the release that includes this change. 0.17.1 and we add warning labels to 0.17.0? Or 0.18.0 and we acknowledge the breaking change as such? TBD\r\n- Drew to write up lots of docs and some sort of discourse post outlining the whats and the whys", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2609", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2609/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2609/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2609/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2609", "id": 649758699, "node_id": "MDU6SXNzdWU2NDk3NTg2OTk=", "number": 2609, "title": "Can't use CTEs in data test with dbt-sqlserver - Database Error", "user": {"login": "camfrout", "id": 8754100, "node_id": "MDQ6VXNlcjg3NTQxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8754100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camfrout", "html_url": "https://github.com/camfrout", "followers_url": "https://api.github.com/users/camfrout/followers", "following_url": "https://api.github.com/users/camfrout/following{/other_user}", "gists_url": "https://api.github.com/users/camfrout/gists{/gist_id}", "starred_url": "https://api.github.com/users/camfrout/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camfrout/subscriptions", "organizations_url": "https://api.github.com/users/camfrout/orgs", "repos_url": "https://api.github.com/users/camfrout/repos", "events_url": "https://api.github.com/users/camfrout/events{/privacy}", "received_events_url": "https://api.github.com/users/camfrout/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2239910586, "node_id": "MDU6TGFiZWwyMjM5OTEwNTg2", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/plugins", "name": "plugins", "color": "ed22f4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-07-02T08:54:36Z", "updated_at": "2020-08-19T18:40:05Z", "closed_at": "2020-08-19T18:40:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nUsing CTEs in data tests while using the dbt-sqlserver adapter raises SQL errors. This is due to the fact that data tests are wrapped around a `SELECT COUNT(*)` https://github.com/fishtown-analytics/dbt/blob/3af8a22d1319431115e7394f1235294613d36b35/core/dbt/task/test.py#L35 and SQL Server doesn't allow the CTEs inside other requests (it needs to start with WITH).\r\n\r\nI has also been reported in the dbt-sqlserver repo [here](https://github.com/mikaelene/dbt-sqlserver/issues/26) but this seems to be actually due to the different behaviour of data tests compared to schema tests in dbt.\r\n\r\n### Steps To Reproduce\r\n- Configure dbt to run with dbt-sqlserver\r\n- Create a test in the folder tests with a CTE (example: `WITH src AS (SELECT COUNT(*) AS cnt FROM {{ ref('my table') }})\r\n) SELECT * FROM src` )\r\n- Run dbt test --data\r\n- A database error is raised (see logs below)\r\n\r\n### Expected behavior\r\nThe test should run without any SQL error\r\n\r\n### Screenshots and log output\r\nFrom dbt.log\r\n```\r\n020-07-02 08:39:12,208505 (Thread-1): On test.qwdv.cte: select count(*) as errors from (\r\n\r\nWITH src AS (\r\n  <my_select_query>\r\n)\r\n\r\nSELECT * FROM src\r\n) sbq\r\n2020-07-02 08:39:12,213714 (Thread-1): Database error: ('42000', \"[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'WITH'. (156) (SQLExecDirectW)\")\r\n2020-07-02 08:39:12,213930 (Thread-1): On test.qwdv.cte: ROLLBACK\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [X] other (specify: sqlserver)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.15.2\r\n   latest version: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nMac OS\r\n\r\n**The output of `python --version`:**\r\nPython 3.8.3\r\n\r\n### Additional context\r\nIs there any reason why the data tests are wrapped around a `SELECT COUNT(*)` and could the behavior be changed to the same as schema tests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2605", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2605/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2605/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2605/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2605", "id": 648314780, "node_id": "MDU6SXNzdWU2NDgzMTQ3ODA=", "number": 2605, "title": "Encountered an error: Unresolvable JSON pointer: \u201cdefinitions/NoValue\u201d", "user": {"login": "hanachurch", "id": 64365355, "node_id": "MDQ6VXNlcjY0MzY1MzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/64365355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanachurch", "html_url": "https://github.com/hanachurch", "followers_url": "https://api.github.com/users/hanachurch/followers", "following_url": "https://api.github.com/users/hanachurch/following{/other_user}", "gists_url": "https://api.github.com/users/hanachurch/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanachurch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanachurch/subscriptions", "organizations_url": "https://api.github.com/users/hanachurch/orgs", "repos_url": "https://api.github.com/users/hanachurch/repos", "events_url": "https://api.github.com/users/hanachurch/events{/privacy}", "received_events_url": "https://api.github.com/users/hanachurch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-30T16:24:30Z", "updated_at": "2020-06-30T17:40:38Z", "closed_at": "2020-06-30T16:59:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nA clear and concise description of what the bug is. What command did you run? What happened?\r\n\r\nMigrated to dbt 0.17. Received the above error message as soon as I ran 'dbt compile' on a project that worked fine with dbt 0.15.1.  \r\n\r\n```\r\nRunning with dbt=0.17.0\r\nEncountered an error:\r\nUnresolvable JSON pointer: \u201cdefinitions/NoValue\u201d\r\n```\r\nI have another Windows PC on which this error doesn't occur.\r\n\r\n### Steps To Reproduce\r\nIn as much detail as possible, please provide steps to reproduce the issue. Sample data that triggers the issue, example model code, etc is all very helpful here.\r\n\r\nSee above\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\ndbt compiles the project successfully without errors.\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n\r\nThis error doesn't generate a log. (dbt.log)\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: _dbt-sqlserver but this project doesn't specifically use dbt-sqlserver package___________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n<output goes here>\r\n```\r\n\r\n**The operating system you're using:**\r\n\r\n**The output of `python --version`:**\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2602", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2602/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2602/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2602/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2602", "id": 648167579, "node_id": "MDU6SXNzdWU2NDgxNjc1Nzk=", "number": 2602, "title": "Windows path issues... again", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 2, "created_at": "2020-06-30T13:19:33Z", "updated_at": "2020-06-30T23:55:26Z", "closed_at": "2020-06-30T23:55:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nSee this stack trace:\r\n```\r\n[Errno 2] No such file or directory: 'target\\\\compiled\\\\dbt_project\\\\models\\\\amp\\\\04_raw\\\\source_performance_media_imports_fivetran_netsuite_mapping.yml\\\\schema_test\\\\source_not_null_performance-media-imports_fivetran_netsuite_mapping_companies_mapping_netsuite_company_id.sql'\r\n2020-06-30 07:52:45.975033 (Thread-4): \r\nTraceback (most recent call last):\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\node_runners.py\", line 228, in safe_run\r\n    result = self.compile_and_execute(manifest, ctx)\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\node_runners.py\", line 165, in compile_and_execute\r\n    ctx.node = self.compile(manifest)\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\node_runners.py\", line 340, in compile\r\n    return compile_node(self.adapter, self.config, self.node, manifest, {})\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\compilation.py\", line 264, in compile_node\r\n    node.injected_sql\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\contracts\\graph\\parsed.py\", line 172, in write_node\r\n    write_file(full_path, payload)\r\n  File \"c:\\users\\dbt_user\\anaconda3\\envs\\dbt_windows\\lib\\site-packages\\dbt\\clients\\system.py\", line 136, in write_file\r\n    with open(path, 'w', encoding='utf-8') as f:\r\n```\r\n\r\n### Steps To Reproduce\r\nMust have something to do with the Windows/python version at play?? TBD, working on getting more info.\r\n\r\n### Expected behavior\r\ndbt should log a debug log line for the exception and move on without error\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0-rc2\r\n```\r\n\r\n**The operating system you're using:** Windows (version TBD)\r\n\r\n**The output of `python --version`:** TBD", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2598", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2598/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2598/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2598/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2598", "id": 647377751, "node_id": "MDU6SXNzdWU2NDczNzc3NTE=", "number": 2598, "title": "Seed descriptions are not persisted on BigQuery", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 3, "created_at": "2020-06-29T13:29:25Z", "updated_at": "2020-07-01T01:16:52Z", "closed_at": "2020-07-01T01:16:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen `persist_docs` is configured to persist descriptions for BigQuery relations, the resulting seed tables in BigQuery are not build with relation-level descriptions.\r\n\r\n### Steps To Reproduce\r\n```\r\n# dbt_project.yml\r\nconfig-version: 2\r\nseeds:\r\n    +persist_docs:\r\n      relation: true\r\n      columns: true\r\n```\r\n\r\n```\r\n# models/schema.yml\r\nversion: 2\r\nseeds:\r\n  - name: my_seed\r\n    description: my seed\r\n    columns:\r\n      - name: the_column\r\n        description: column description\r\n```\r\n\r\n```\r\n$ dbt seed\r\n```\r\n\r\nThe resulting relation is not configured with a description in BigQuery.\r\n\r\n### Expected behavior\r\nI expect to see a configured description in BigQuery for the seed table.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ndbt v0.17.1-rc2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2597", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2597/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2597/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2597/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2597", "id": 647361423, "node_id": "MDU6SXNzdWU2NDczNjE0MjM=", "number": 2597, "title": "yaml quoting not working with NativeEnvironment jinja evaluator", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 12, "created_at": "2020-06-29T13:07:36Z", "updated_at": "2020-07-01T02:31:41Z", "closed_at": "2020-07-01T02:31:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\ndbt's NativeEnvironment introduced a functional change to how Jinja strings are evaluated. In dbt v0.17.0, a schema test can no longer be configured with a quoted column name.\r\n\r\n### Steps To Reproduce\r\n```\r\n# schema.yml\r\n\r\nversion: 2\r\nmodels:\r\n  - name: debug\r\n\r\n    columns:\r\n      - name: MyId\r\n        quote: true\r\n        tests:\r\n          - relationships:\r\n              to: ref('debug')\r\n              field: '\"MyId\"'\r\n```\r\n\r\n```\r\n-- models/debug.sql\r\n\r\nselect 1 as \"MyId\"\r\n```\r\n\r\n**Results:**\r\n```\r\nDatabase Error in test relationships_debug__MyId____MyId___ref_debug_ (models/schema.yml)\r\n  column \"myid\" does not exist\r\n  LINE 12:     select MyId as id from \"analytics\".\"test_schema\".\"debug\"\r\n                      ^\r\n  HINT:  Perhaps you meant to reference the column \"debug.MyId\" or the column \"child.id\".\r\n  compiled SQL at target/compiled/neondwh/models/schema.yml/schema_test/relationships_debug__MyId____MyId___ref_debug_.sql\r\n```\r\n\r\n### Expected behavior\r\nI would expect the yaml/jinja string `'\"MyId\"'` to be resolved to the string `\"MyId\"`, not `MyId`.\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ndbt v0.17.0\r\n```\r\n\r\n**The operating system you're using:** macOS\r\n\r\n**The output of `python --version`:** 3.7.7\r\n\r\n### Additional context\r\nUsing `Jinja2==2.11.2`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2592", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2592/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2592/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2592/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2592", "id": 645723989, "node_id": "MDU6SXNzdWU2NDU3MjM5ODk=", "number": 2592, "title": "Long windows paths error out when writing artifacts", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-25T17:11:51Z", "updated_at": "2020-07-01T02:32:42Z", "closed_at": "2020-07-01T02:32:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWe tried to fix this in 0.17.1-rc1 (#2566) but it appeared to still be an issue in the RC.\r\n\r\n### Expected behavior\r\nLong paths on windows should not fail a run. FileNotFoundErrors should be written to the debug logs, not stdout.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2587", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2587/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2587/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2587/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2587", "id": 644990866, "node_id": "MDU6SXNzdWU2NDQ5OTA4NjY=", "number": 2587, "title": "Empty string in `accepted_values` fails the test", "user": {"login": "chrisluedtke", "id": 20371880, "node_id": "MDQ6VXNlcjIwMzcxODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/20371880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisluedtke", "html_url": "https://github.com/chrisluedtke", "followers_url": "https://api.github.com/users/chrisluedtke/followers", "following_url": "https://api.github.com/users/chrisluedtke/following{/other_user}", "gists_url": "https://api.github.com/users/chrisluedtke/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisluedtke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisluedtke/subscriptions", "organizations_url": "https://api.github.com/users/chrisluedtke/orgs", "repos_url": "https://api.github.com/users/chrisluedtke/repos", "events_url": "https://api.github.com/users/chrisluedtke/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisluedtke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T21:29:24Z", "updated_at": "2020-06-26T19:00:45Z", "closed_at": "2020-06-26T18:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen using an empty sting, `''`, in an `accepted_values: values` list, the compiled SQL checks for `'None'`, which fails the test if the data actually contain an empty string.\r\n\r\n### Steps To Reproduce\r\n```yml\r\n      - name: col_name\r\n        tests:\r\n          - accepted_values:\r\n              values: ['']\r\n```\r\n```sql\r\nwith all_values as (\r\n\r\n    select distinct\r\n        col_name as value_field\r\n\r\n    from database.schema.table\r\n\r\n),\r\n\r\nvalidation_errors as (\r\n\r\n    select\r\n        value_field\r\n\r\n    from all_values\r\n    where value_field not in (\r\n        'None'\r\n    )\r\n)\r\n\r\nselect count(*) as validation_errors\r\nfrom validation_errors\r\n```\r\n\r\n### Expected behavior\r\nTest for and accept a `''` accepted value.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - postgres: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - bigquery: 0.17.0\r\n  - redshift: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\n`Ubuntu 20.04 LTS`\r\n\r\n**The output of `python --version`:**\r\n`Python 3.8.1`\r\n\r\n### Additional context\r\nWe noticed after upgrading from dbt 0.15 to 0.17.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2586", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2586/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2586/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2586/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2586", "id": 644146231, "node_id": "MDU6SXNzdWU2NDQxNDYyMzE=", "number": 2586, "title": "Add support for adding BigQuery policy tags", "user": {"login": "azhard", "id": 2332834, "node_id": "MDQ6VXNlcjIzMzI4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2332834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhard", "html_url": "https://github.com/azhard", "followers_url": "https://api.github.com/users/azhard/followers", "following_url": "https://api.github.com/users/azhard/following{/other_user}", "gists_url": "https://api.github.com/users/azhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhard/subscriptions", "organizations_url": "https://api.github.com/users/azhard/orgs", "repos_url": "https://api.github.com/users/azhard/repos", "events_url": "https://api.github.com/users/azhard/events{/privacy}", "received_events_url": "https://api.github.com/users/azhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-23T21:05:37Z", "updated_at": "2020-07-30T17:07:17Z", "closed_at": "2020-07-30T17:07:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nPolicy tags are a BigQuery feature that allows users to set column level access control ([docs](https://cloud.google.com/bigquery/docs/best-practices-policy-tags)). After a tag has been created, it can be added programatically via the [BigQuery python library to columns](https://googleapis.dev/python/bigquery/1.25.0/generated/google.cloud.bigquery.schema.SchemaField.html?highlight=policytaglist) as needed.\r\n\r\nThis proposed feature would allow users to add (already created) policy tags to their existing dbt models through their `schema.yml` files.\r\n\r\nConsiderations:\r\n- Policy tag integration in BigQuery has been added to the `google-cloud-bigquery` in version 1.25.0 (latest version). Dbt currently is using version 1.24.0 so this will need to be bumped up\r\n- [Adding a policy tag](https://cloud.google.com/bigquery/docs/column-level-security-intro#example_use_case) to a column requires a few pieces of information related to the policy tag. On the dbt side, we could either take each piece of information and construct the policy tag \"name\" for the user or have them input the fully qualified name themselves. Information required includes:\r\n  - Project\r\n  - Location\r\n  - Taxonomy ID\r\n  - Policy tag ID\r\n- I think intuitively this step should take place within the persist_docs step and would be handled if `columns` is set to true for persist_docs.\r\n- If having this happen during the persist_docs function makes sense, the easiest solution to get this off the ground would be to utilize the [`meta` field](https://docs.getdbt.com/reference/resource-properties/meta/). Alternatively a new BigQuery specific schema field could be used\r\n-  Functionally this can reside in the BigQuery `update_column_description` adapter function that is. called during `persist_docs`. The advantage here is that we're already iterating over the columns so we wouldn't have to do it again and the function name can be changed to something more generic eg. `update_column`\r\n\r\nFrom my understanding, this is something that currently can only be supported for models in the `schema.yml` files as I don't think docs can be updated for sources but that would be an ideal situation to support this as well\r\n\r\n### Additional context\r\nThis feature would be specific to BigQuery.\r\n\r\n### Who will this benefit?\r\nBigQuery users who currently use (or want to start using) policy tags and manage them through their dbt setup.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2585", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2585/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2585/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2585/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2585", "id": 644035125, "node_id": "MDU6SXNzdWU2NDQwMzUxMjU=", "number": 2585, "title": "dbt_utils.surrogate_key \u2014 Syntax error", "user": {"login": "VigneshwaranSundaresan", "id": 36016318, "node_id": "MDQ6VXNlcjM2MDE2MzE4", "avatar_url": "https://avatars2.githubusercontent.com/u/36016318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VigneshwaranSundaresan", "html_url": "https://github.com/VigneshwaranSundaresan", "followers_url": "https://api.github.com/users/VigneshwaranSundaresan/followers", "following_url": "https://api.github.com/users/VigneshwaranSundaresan/following{/other_user}", "gists_url": "https://api.github.com/users/VigneshwaranSundaresan/gists{/gist_id}", "starred_url": "https://api.github.com/users/VigneshwaranSundaresan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VigneshwaranSundaresan/subscriptions", "organizations_url": "https://api.github.com/users/VigneshwaranSundaresan/orgs", "repos_url": "https://api.github.com/users/VigneshwaranSundaresan/repos", "events_url": "https://api.github.com/users/VigneshwaranSundaresan/events{/privacy}", "received_events_url": "https://api.github.com/users/VigneshwaranSundaresan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T17:54:36Z", "updated_at": "2020-06-23T20:15:57Z", "closed_at": "2020-06-23T20:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nvigneshwaransundaresan@Vigneshwarans-MacBook-Pro my-first-dbt-project % dbt run --m example.insert_sample\r\nRunning with dbt=0.17.0\r\n* Deprecation Warning: dbt v0.17.0 introduces a new config format for the\r\ndbt_project.yml file. Support for the existing version 1 format will be removed\r\nin a future release of dbt. The following packages are currently configured with\r\nconfig version 1:\r\n - dbt_utils\r\n\r\nFor upgrading instructions, consult the documentation:\r\n  https://docs.getdbt.com/docs/guides/migration-guide/upgrading-to-0-17-0\r\nFound 7 models, 15 tests, 1 snapshot, 0 analyses, 208 macros, 1 operation, 0 seed files, 1 source\r\n\r\n12:49:26 | \r\n12:49:26 | Running 1 on-run-start hook\r\n12:49:26 | 1 of 1 START hook: dbt_from_scratch.on-run-start.0................... [RUN]\r\n12:49:26 | 1 of 1 OK hook: dbt_from_scratch.on-run-start.0...................... [SUCCESS 1 in 0.16s]\r\n12:49:26 | \r\n12:49:26 | Concurrency: 1 threads (target='dev')\r\n12:49:26 | \r\n12:49:26 | 1 of 1 START incremental model DBT.TYPE1_TESTING..................... [RUN]\r\n12:49:28 | 1 of 1 ERROR creating incremental model DBT.TYPE1_TESTING............ [ERROR in 1.97s]\r\n12:49:29 | \r\n12:49:29 | Finished running 1 incremental model, 1 hook in 5.14s.\r\n\r\nCompleted with 1 error and 0 warnings:\r\n\r\n**Database Error in model insert_sample (models/example/insert_sample.sql)\r\n  001003 (42000): SQL compilation error:\r\n  syntax error line 4 at position 4 unexpected 'md5'.\r\n  syntax error line 11 at position 1 unexpected ','.\r\n  compiled SQL at target/compiled/dbt_from_scratch/models/example/insert_sample.sql**\r\n\r\nDone. PASS=0 WARN=0 ERROR=1 SKIP=0 TOTAL=1\r\n\r\n\r\n### Steps To Reproduce\r\n**packages.yml file:**\r\n\r\npackages:\r\n  - package: fishtown-analytics/dbt-utils\r\n    version: 0.1.18\r\n\r\n### Expected behavior\r\nModel:\r\n\r\n{{ dbt_utils.surrogate_key(['C_CUSTKEY','AS_OF_DT']) }} as natural_key\r\n\r\n{{\r\nconfig(\r\n  materialized='incremental',\r\n  incremental_strategy='delete+insert',\r\n  alias='TYPE1_TESTING',\r\n  unique_key='natural_key'\r\n)\r\n}}\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n\r\n### System information\r\nSnowflake\r\n\r\n\r\n**The output of `dbt --version`:**\r\n\r\nvigneshwaransundaresan@Vigneshwarans-MacBook-Pro my-first-dbt-project % dbt --version\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n\r\n**The operating system you're using:**\r\n\r\nmacOS\r\n\r\n**The output of `python --version`:**\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2583", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2583/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2583/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2583/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2583", "id": 643960958, "node_id": "MDU6SXNzdWU2NDM5NjA5NTg=", "number": 2583, "title": "configured hooks are eagerly rendered when prefixed with a `+`", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 410212801, "node_id": "MDU6TGFiZWw0MTAyMTI4MDE=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/in%20progress", "name": "in progress", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-23T15:59:57Z", "updated_at": "2020-06-25T17:13:57Z", "closed_at": "2020-06-25T17:13:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen using config-version 2, users can prefix a config item with a `+` to make sure it isn't treated as a part of the \"config hierarchy\". While it's only important for dictionaries, it's accepted for any key inside a resource configuration block (`models`, `seeds`, etc). However, prefixing `pre-hook` or `post-hook` to make them `+pre-hook: ...` or `+post-hook: ...` caused them to be rendered during config parsing, instead of being deferred to runtime. \r\n\r\n### Steps To Reproduce\r\nIn `dbt_project.yml`:\r\n```yml\r\nname: test\r\nversion: '1.0'\r\nconfig-version: 2\r\nmodels:\r\n  test:\r\n    +post-hook:\r\n      - grant select on {{ this }} to some_user\r\n```\r\n\r\nYour post-hooks will run without the `this`.\r\n\r\n### Expected behavior\r\n`+post-hook` should behave exactly like `post-hook`.\r\n\r\nNote that I don't necessarily expect top-level fields like `on-run-start` to support the `+` prefix.\r\n\r\n### System information\r\nAny database, any python, `dbt==0.17.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2574", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2574/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2574/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2574/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2574", "id": 642004299, "node_id": "MDU6SXNzdWU2NDIwMDQyOTk=", "number": 2574, "title": "Running `dbt snapshot` succeed the first time but fails the other times", "user": {"login": "cabouffard", "id": 1725061, "node_id": "MDQ6VXNlcjE3MjUwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1725061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cabouffard", "html_url": "https://github.com/cabouffard", "followers_url": "https://api.github.com/users/cabouffard/followers", "following_url": "https://api.github.com/users/cabouffard/following{/other_user}", "gists_url": "https://api.github.com/users/cabouffard/gists{/gist_id}", "starred_url": "https://api.github.com/users/cabouffard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cabouffard/subscriptions", "organizations_url": "https://api.github.com/users/cabouffard/orgs", "repos_url": "https://api.github.com/users/cabouffard/repos", "events_url": "https://api.github.com/users/cabouffard/events{/privacy}", "received_events_url": "https://api.github.com/users/cabouffard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-19T14:19:02Z", "updated_at": "2020-06-24T00:58:36Z", "closed_at": "2020-06-24T00:58:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nI'm running DBT 0.17 and we've been playing with the snapshot feature.\r\n\r\nI'm hitting an oddity that I'm not sure how to resolve or what to understand from it.\r\n\r\nKeep in mind that my tables currently have no data inside them.\r\n\r\n* The first time I run `dbt snapshot` everything is successful: https://share.getcloudapp.com/E0uzrezL\r\n* The second time and subsequent time I run DBT I get errors: https://share.getcloudapp.com/DOuA9Exe\r\n\r\nIt seems like some snapshots can't infer the column types for some reason and I'm not sure what could be wrong.\r\n\r\n### Steps To Reproduce\r\nMy Snapshot query:\r\n```sql\r\n{% snapshot snapshot_shipmonk__shipping_addresses %}\r\n{{\r\n    config(\r\n      target_database='output',\r\n      target_schema='dbt_cab',\r\n      unique_key='id',\r\n      strategy='timestamp',\r\n      updated_at='modified',\r\n    )\r\n}}\r\nselect * from {{ source('public', 'shipmonk_shipping_address') }}\r\n{% endsnapshot %}\r\n```\r\n\r\nThe compiled query (the second time I run `dbt snapshot`):\r\n```sql\r\n   update \"output\".\"dbt_cab\".\"snapshot_shipmonk__shipping_addresses\"\r\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\r\n    from \"snapshot_shipmonk__shipping_addresses__dbt_tmp20200618215824103241\" as DBT_INTERNAL_SOURCE\r\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = \"output\".\"dbt_cab\".\"snapshot_shipmonk__shipping_addresses\".dbt_scd_id::text\r\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text = 'update'::text\r\n      and \"output\".\"dbt_cab\".\"snapshot_shipmonk__shipping_addresses\".dbt_valid_to is null;\r\n    insert into \"output\".\"dbt_cab\".\"snapshot_shipmonk__shipping_addresses\" ()\r\n    select \r\n    from \"snapshot_shipmonk__shipping_addresses__dbt_tmp20200618215824103241\" as DBT_INTERNAL_SOURCE\r\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\r\n```\r\n\r\nThe DDL of the table when it was first generated:\r\n```sql\r\ncreate table dbt_cab.snapshot_shipmonk__shipping_addresses\r\n(\r\n\tid integer,\r\n\tintegration_id integer,\r\n\tshipping_order_id integer,\r\n\tcompany text,\r\n\tstreet1 text,\r\n\tstreet2 text,\r\n\tstreet3 text,\r\n\tcity text,\r\n\tstate text,\r\n\tpostal_code text,\r\n\tphone text,\r\n\tcountry text,\r\n\tis_residential boolean,\r\n\tis_verified boolean,\r\n\tcreated timestamp with time zone,\r\n\tmodified timestamp with time zone,\r\n\tdbt_scd_id text,\r\n\tdbt_updated_at timestamp with time zone,\r\n\tdbt_valid_from timestamp with time zone,\r\n\tdbt_valid_to timestamp with time zone\r\n);\r\nalter table dbt_cab.snapshot_shipmonk__shipping_addresses owner to postgres;\r\n```\r\n\r\n1) Remove all snapshot tables (i.e. start from a clean snapshot schema)\r\n2) Have the source tables contain no data\r\n3) Run `dbt snapshot`\r\n4) Run `dbt snapshot` again\r\n\r\nNotice that some snapshot fails: https://share.getcloudapp.com/DOuA9Exe\r\n\r\n### Expected behavior\r\n`dbt snapshot` should run all snapshot successfully and not have any failures\r\n\r\n### Screenshots and log output\r\nSee links and queries above\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n/usr/src # dbt --version\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - postgres: 0.17.0\r\n  - bigquery: 0.17.0\r\n  - redshift: 0.17.0\r\n  - snowflake: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\n```\r\nDocker container with: python:3.7-alpine (i.e. Alpine Linux)\r\n```\r\n\r\n**The output of `python --version`:**\r\n```\r\n/usr/src # python --version\r\nPython 3.7.7\r\n```\r\n\r\n### Additional context\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2573", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2573/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2573/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2573/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2573", "id": 641897078, "node_id": "MDU6SXNzdWU2NDE4OTcwNzg=", "number": 2573, "title": "dbt run gives different output than running with DataGrip", "user": {"login": "rbval", "id": 6399810, "node_id": "MDQ6VXNlcjYzOTk4MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6399810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbval", "html_url": "https://github.com/rbval", "followers_url": "https://api.github.com/users/rbval/followers", "following_url": "https://api.github.com/users/rbval/following{/other_user}", "gists_url": "https://api.github.com/users/rbval/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbval/subscriptions", "organizations_url": "https://api.github.com/users/rbval/orgs", "repos_url": "https://api.github.com/users/rbval/repos", "events_url": "https://api.github.com/users/rbval/events{/privacy}", "received_events_url": "https://api.github.com/users/rbval/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T11:17:32Z", "updated_at": "2020-06-19T19:06:02Z", "closed_at": "2020-06-19T14:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running my sql with DataGrip gives the correct timestamps:\r\n![image](https://user-images.githubusercontent.com/6399810/85127066-63785f80-b237-11ea-87ba-1510f5a0fa23.png)\r\n\r\nRunning the same sql with `dbt run` gives everything 3 hour earlier:\r\n![image](https://user-images.githubusercontent.com/6399810/85126924-201df100-b237-11ea-8822-b2e051100342.png)\r\n\r\nI have my database in UTC, timestamps in UTC, DataGrip in UTC. I can't seem to figure out why the sql ran by dbt doesn't land as UTC. Is there a way to explicitly configure that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2569", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2569/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2569/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2569/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2569", "id": 641203709, "node_id": "MDU6SXNzdWU2NDEyMDM3MDk=", "number": 2569, "title": "Empty target in profiles.yml results in an unhelpful error message", "user": {"login": "clrcrl", "id": 20294432, "node_id": "MDQ6VXNlcjIwMjk0NDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/20294432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clrcrl", "html_url": "https://github.com/clrcrl", "followers_url": "https://api.github.com/users/clrcrl/followers", "following_url": "https://api.github.com/users/clrcrl/following{/other_user}", "gists_url": "https://api.github.com/users/clrcrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/clrcrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clrcrl/subscriptions", "organizations_url": "https://api.github.com/users/clrcrl/orgs", "repos_url": "https://api.github.com/users/clrcrl/repos", "events_url": "https://api.github.com/users/clrcrl/events{/privacy}", "received_events_url": "https://api.github.com/users/clrcrl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-06-18T13:21:47Z", "updated_at": "2020-07-17T17:48:09Z", "closed_at": "2020-07-17T17:48:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Create a profile like so (note empty `learn:` key)\r\n```\r\n$ cat ~/.dbt/profiles.yml\r\njaffle_shop:\r\n  target: learn\r\n\r\n  outputs:\r\n    learn:\r\n```\r\n2. Run `dbt debug --profile jaffle_shop`\r\n\r\n### Expected behavior\r\nA useful error message\r\n\r\n### Actual behavior\r\n```\r\n$ dbt debug --profile jaffle_shop\r\nRunning with dbt=0.18.0-b1\r\ndbt version: 0.18.0-b1\r\npython version: 3.7.5\r\npython path: /Users/claire/.pyenv/versions/3.7.5/envs/dbt-dev-v2/bin/python\r\nos info: Darwin-19.4.0-x86_64-i386-64bit\r\nUsing profiles.yml file at /Users/claire/.dbt/profiles.yml\r\nUsing dbt_project.yml file at /Users/claire/clrcrl/jaffle_shop/dbt_project.yml\r\n\r\nEncountered an error:\r\n'NoneType' object has no attribute 'pop'\r\n\r\n```\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n$ dbt --version\r\ninstalled version: 0.18.0-b1\r\n   latest version: 0.17.0\r\n\r\nYour version of dbt is ahead of the latest release!\r\n\r\nPlugins:\r\n  - bigquery: 0.18.0b1\r\n  - snowflake: 0.18.0b1\r\n  - redshift: 0.18.0b1\r\n  - postgres: 0.18.0b1\r\n```\r\n\r\n### Additional context\r\nThis came up because someone had their profile indented incorrectly:\r\n```\r\njaffle_shop:\r\n  target: learn\r\n\r\n  outputs:\r\n    learn:\r\n    type: snowflake\r\n    threads: 1\r\n    account: ***\r\n    ...\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2568", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2568/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2568/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2568/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2568", "id": 641051199, "node_id": "MDU6SXNzdWU2NDEwNTExOTk=", "number": 2568, "title": "Option to \"Continue loading from failure point\" when restarting a previous failed run", "user": {"login": "bashyroger", "id": 11387837, "node_id": "MDQ6VXNlcjExMzg3ODM3", "avatar_url": "https://avatars0.githubusercontent.com/u/11387837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashyroger", "html_url": "https://github.com/bashyroger", "followers_url": "https://api.github.com/users/bashyroger/followers", "following_url": "https://api.github.com/users/bashyroger/following{/other_user}", "gists_url": "https://api.github.com/users/bashyroger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashyroger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashyroger/subscriptions", "organizations_url": "https://api.github.com/users/bashyroger/orgs", "repos_url": "https://api.github.com/users/bashyroger/repos", "events_url": "https://api.github.com/users/bashyroger/events{/privacy}", "received_events_url": "https://api.github.com/users/bashyroger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T09:22:22Z", "updated_at": "2020-06-19T13:56:40Z", "closed_at": "2020-06-19T13:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\n1st, this request is a sort if _inverse_ of [2142](https://github.com/fishtown-analytics/dbt/issues/2142)\r\n\r\nWhen a model run fails, all dependent, downstream model runs are skipped. \r\nNow, when you fix your error and you restart a run, it would be great that you could continue it / **retry from the point of failure** with a flag like  `continue_from_last_failure` or `skip_already_processed`. This will save a lot of processing time / costs when the job runs for a long time and makes restarting inherently simple.\r\n\r\n_As an example,_ when scheduling a daily run that takes 2 hours and the job failing at 1,5 hour: it would be great when you do not have to restart it completely OR have go though the laborious work of using the _models_ clause to start running from the point of failure\r\n\r\nI realize that this is complex to add as **it requires to log / track state of every model that has been run.** But I do know this is possible, as I have build something like this a decade ago when developing an ETL automation tool for SQL server, written in procedural SQL...\r\n\r\n### Describe alternatives you've considered\r\nThe alternative is going though the laborious work of using the models clause to start everything from the point of failure or pay the price for a total re-run\r\n\r\n\r\n### Who will this benefit?\r\nBasically everyone that has a run failing having significant costs (in processing and / or time), wanting to restart it as efficient as possible.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2563", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2563/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2563/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2563/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2563", "id": 640613730, "node_id": "MDU6SXNzdWU2NDA2MTM3MzA=", "number": 2563, "title": "Support model selection based on materialization type", "user": {"login": "azhard", "id": 2332834, "node_id": "MDQ6VXNlcjIzMzI4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2332834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhard", "html_url": "https://github.com/azhard", "followers_url": "https://api.github.com/users/azhard/followers", "following_url": "https://api.github.com/users/azhard/following{/other_user}", "gists_url": "https://api.github.com/users/azhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhard/subscriptions", "organizations_url": "https://api.github.com/users/azhard/orgs", "repos_url": "https://api.github.com/users/azhard/repos", "events_url": "https://api.github.com/users/azhard/events{/privacy}", "received_events_url": "https://api.github.com/users/azhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T17:20:28Z", "updated_at": "2020-06-17T18:05:55Z", "closed_at": "2020-06-17T18:04:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nCurrent model selection syntax works with selecting based on model names, sources, tags, packages, and paths. These solve the majority of potential use cases but adding the ability to select models based on a materialization type would be very handy.\r\n\r\nA specific example where that can be used: my team's dbt setup currently auto-runs changed models on production when an MR gets merged to `master`, however we realistically only want to deploy changed views and not to cause incremental materializations for example as those are typically based on a schedule.\r\n\r\nI imagine as an actual CLI command this would look something like when implemented:\r\n```\r\ndbt run --models materialization:view\r\n````\r\n\r\n### Describe alternatives you've considered\r\nThis same behaviour can be achieved if a user tags all view (or non-view) models but this is more cumbersome so not ideal.\r\n\r\n### Additional context\r\nThis feature should be supported across databases.\r\n\r\n### Who will this benefit?\r\nAny dbt user who wants to trigger runs based on a materialization type.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2561", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2561/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2561/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2561/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2561", "id": 640580362, "node_id": "MDU6SXNzdWU2NDA1ODAzNjI=", "number": 2561, "title": "Include docs changes", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 961906998, "node_id": "MDU6TGFiZWw5NjE5MDY5OTg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/dbt%20docs", "name": "dbt docs", "color": "b17ad3", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-17T16:30:28Z", "updated_at": "2020-06-22T21:17:16Z", "closed_at": "2020-06-22T21:17:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Placeholder issue to merge in 0.17.1 changes for the dbt-docs website.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2560", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2560/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2560/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2560/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2560", "id": 640539429, "node_id": "MDU6SXNzdWU2NDA1Mzk0Mjk=", "number": 2560, "title": "plugin", "user": {"login": "stvacs", "id": 56589014, "node_id": "MDQ6VXNlcjU2NTg5MDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/56589014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stvacs", "html_url": "https://github.com/stvacs", "followers_url": "https://api.github.com/users/stvacs/followers", "following_url": "https://api.github.com/users/stvacs/following{/other_user}", "gists_url": "https://api.github.com/users/stvacs/gists{/gist_id}", "starred_url": "https://api.github.com/users/stvacs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stvacs/subscriptions", "organizations_url": "https://api.github.com/users/stvacs/orgs", "repos_url": "https://api.github.com/users/stvacs/repos", "events_url": "https://api.github.com/users/stvacs/events{/privacy}", "received_events_url": "https://api.github.com/users/stvacs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T15:32:27Z", "updated_at": "2020-06-17T15:33:07Z", "closed_at": "2020-06-17T15:33:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2558", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2558/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2558/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2558/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2558", "id": 640430678, "node_id": "MDU6SXNzdWU2NDA0MzA2Nzg=", "number": 2558, "title": "Support very long path names for compiled artifacts on Windows", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 978390631, "node_id": "MDU6TGFiZWw5NzgzOTA2MzE=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/windows", "name": "windows", "color": "ccffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 4, "created_at": "2020-06-17T13:11:01Z", "updated_at": "2020-06-22T21:17:32Z", "closed_at": "2020-06-22T21:17:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nA user is reporting an issue when running `dbt compile`. The error is for a schema test .sql artifact, and it reads:\r\n\r\n```\r\nNo such file or directory: \"target\\\\compiled\\\\<230 more characters>.sql\"\r\n```\r\n\r\nMy guess is that the full path to this file is too long, and Windows either truncates the file path, or does something else unexpected, when dbt tries to write out this sql file.\r\n\r\nInstead, let's catch this error, log a warning, and move on. Alternatively if there's a way to increase the file path length on windows to beyond ~260 chars, we should do that.\r\n\r\nThis error may start happening for folks on 0.17.0 because we are now including more information (like the `schema.yml` file name) in the path for the `.sql` artifact.\r\n\r\n### Steps To Reproduce\r\n- Run `dbt compile` on a project that would try to write a filepath > 260 chars long\r\n\r\n### Expected behavior\r\n- dbt should not _fail_ here, but it's ok for dbt to omit writing these artifacts if need be\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:** Windows 10 (Windows Server 2019)\r\n\r\n**The output of `python --version`:** TBD\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2557", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2557/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2557/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2557/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2557", "id": 640424276, "node_id": "MDU6SXNzdWU2NDA0MjQyNzY=", "number": 2557, "title": "BigQuery project alias is ignored in config", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-17T13:01:36Z", "updated_at": "2020-06-18T13:13:37Z", "closed_at": "2020-06-18T13:13:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nA user reported that a config like:\r\n```\r\n{{ config(project='myproject') }}\r\n\r\n...\r\n```\r\n\r\nhas regressed in dbt v0.17.0. While this config worked in a BQ project in dbt v0.16.1, they reported that they needed to change `project` to `database` to apply the configuration in dbt v0.17.0.\r\n\r\nThis issue needs to be reproduced - there may be other factors that impact the incidence of this regression.\r\n\r\n### Steps To Reproduce\r\n```\r\n-- models/my_model.sql\r\n\r\n{{ config(project='custom_project') }}\r\n\r\nselect 1 as id\r\n```\r\n\r\n```\r\ndbt run\r\n```\r\n\r\nConfirm that the model was _not_ build into the custom project override\r\n\r\n### Expected behavior\r\nThe model should be built into the project defined in the `project` config. Database-specific aliases should applied to config names.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] bigquery\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:** Windows\r\n**The output of `python --version`:** Unknown", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2556", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2556/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2556/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2556/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2556", "id": 640235110, "node_id": "MDU6SXNzdWU2NDAyMzUxMTA=", "number": 2556, "title": "Add COPY GRANTS to #Snowflake table materialisation", "user": {"login": "bashyroger", "id": 11387837, "node_id": "MDQ6VXNlcjExMzg3ODM3", "avatar_url": "https://avatars0.githubusercontent.com/u/11387837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashyroger", "html_url": "https://github.com/bashyroger", "followers_url": "https://api.github.com/users/bashyroger/followers", "following_url": "https://api.github.com/users/bashyroger/following{/other_user}", "gists_url": "https://api.github.com/users/bashyroger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashyroger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashyroger/subscriptions", "organizations_url": "https://api.github.com/users/bashyroger/orgs", "repos_url": "https://api.github.com/users/bashyroger/repos", "events_url": "https://api.github.com/users/bashyroger/events{/privacy}", "received_events_url": "https://api.github.com/users/bashyroger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-17T08:10:40Z", "updated_at": "2020-06-18T08:52:02Z", "closed_at": "2020-06-17T16:29:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nCurrently, doing a full table refresh on snowflake is done via create or replace table. Which works fine for the data side as the operation is atomic. However, existing grants are not copied when replacing the table, requiring a pre-hook to set them right. This can be corrected by adding **COPY GRANTS** to the CTAS command.\r\nSee https://docs.snowflake.com/en/sql-reference/sql/create-table.html\r\n\r\n### Steps To Reproduce\r\nRunning a job in Snowflake with the table materialisation\r\n\r\n### Expected behavior\r\nPre-existing grants being copied over when replacing a table\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [X] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2553", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2553/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2553/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2553/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2553", "id": 639960347, "node_id": "MDU6SXNzdWU2Mzk5NjAzNDc=", "number": 2553, "title": "BigQuery Service Account JSON Authentication not working", "user": {"login": "darwinyip", "id": 3499338, "node_id": "MDQ6VXNlcjM0OTkzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darwinyip", "html_url": "https://github.com/darwinyip", "followers_url": "https://api.github.com/users/darwinyip/followers", "following_url": "https://api.github.com/users/darwinyip/following{/other_user}", "gists_url": "https://api.github.com/users/darwinyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/darwinyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darwinyip/subscriptions", "organizations_url": "https://api.github.com/users/darwinyip/orgs", "repos_url": "https://api.github.com/users/darwinyip/repos", "events_url": "https://api.github.com/users/darwinyip/events{/privacy}", "received_events_url": "https://api.github.com/users/darwinyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T20:44:35Z", "updated_at": "2020-06-17T16:29:34Z", "closed_at": "2020-06-16T21:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nTrying to authenticate to BigQuery using [Service Account JSON Authentication](https://docs.getdbt.com/docs/supported-databases/profile-bigquery/#service-account-json-authentication) because I'm running dbt from a docker container. Since storing the creds inside the container is not safe, I am passing each field as environment variable and parsing them in `profiles.yml`.\r\n\r\n### Steps To Reproduce\r\nIn `profiles.yml`:\r\n\r\n```\r\n      keyfile_json:\r\n        type: \"{{ env_var('BIGQUERY_TYPE') }}\"\r\n        project_id: \"{{ env_var('BIGQUERY_PROJECT_ID') }}\"\r\n        private_key_id: \"{{ env_var('BIGQUERY_PRIVATE_KEY_ID') }}\"\r\n        private_key: \"{{ env_var('BIGQUERY_PRIVATE_KEY') }}\"\r\n        client_email: \"{{ env_var('BIGQUERY_CLIENT_EMAIL') }}\"\r\n        client_id: \"{{ env_var('BIGQUERY_CLIENT_ID') }}\"\r\n        auth_uri: \"{{ env_var('BIGQUERY_AUTH_URI') }}\"\r\n        token_uri: \"{{ env_var('BIGQUERY_TOKEN_URI') }}\"\r\n        auth_provider_x509_cert_url: \"{{ env_var('BIGQUERY_AUTH_PROVIDER_X509_CERT_URL') }}\"\r\n        client_x509_cert_url: \"{{ env_var('BIGQUERY_CLIENT_X509_CERT_URL') }}\"\r\n```\r\n\r\nHowever when trying to run anything I get:\r\n```\r\nPlease log into GCP to continue\r\nEncountered an error:\r\nGot a non-zero returncode running: ['gcloud', 'auth', 'application-default', 'login']\r\n```\r\n\r\n### Expected behavior\r\ndbt should run normally\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\nbigquery\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n# dbt --version\r\ninstalled version: 0.16.0\r\n   latest version: 0.17.0\r\n\r\nYour version of dbt is out of date! You can find instructions for upgrading here:\r\nhttps://docs.getdbt.com/docs/installation\r\n\r\n```\r\n\r\n**The operating system you're using:** python:3.7.4-slim\r\n\r\n**The output of `python --version`:** 3.7.4\r\n\r\n### Additional context\r\n```\r\n# gcloud --version\r\nGoogle Cloud SDK 297.0.0\r\nalpha 2020.06.12\r\nbeta 2020.06.12\r\nbq 2.0.58\r\ncore 2020.06.12\r\ngsutil 4.51\r\nkubectl 2020.06.12\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2549", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2549/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2549/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2549/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2549", "id": 639666557, "node_id": "MDU6SXNzdWU2Mzk2NjY1NTc=", "number": 2549, "title": "persist_docs functionality doesn't persist descriptions on nested bigquery columns", "user": {"login": "bodschut", "id": 1922169, "node_id": "MDQ6VXNlcjE5MjIxNjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1922169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodschut", "html_url": "https://github.com/bodschut", "followers_url": "https://api.github.com/users/bodschut/followers", "following_url": "https://api.github.com/users/bodschut/following{/other_user}", "gists_url": "https://api.github.com/users/bodschut/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodschut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodschut/subscriptions", "organizations_url": "https://api.github.com/users/bodschut/orgs", "repos_url": "https://api.github.com/users/bodschut/repos", "events_url": "https://api.github.com/users/bodschut/events{/privacy}", "received_events_url": "https://api.github.com/users/bodschut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T13:30:05Z", "updated_at": "2020-06-24T13:19:11Z", "closed_at": "2020-06-24T13:19:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWith the release of dbt 0.17.0, the persist_docs functionality was enhanced to also apply column descriptions to bigquery when they are supplied in a schema.yml file. However, it seems that it only takes into account top-level columns and there is no way to persist a description to a nested column (ie a field that is part of a RECORD type bigquery column).\r\n\r\n### Steps To Reproduce\r\nSuppose you create a simple test model using dbt in bigquery:\r\n``` SQL\r\nSELECT\r\n    STRUCT(\r\n        STRUCT(\r\n            1 AS level_3_a,\r\n            2 AS level_3_b\r\n        ) AS level_2\r\n    ) AS level_1\r\n```\r\n\r\nThis will create a view/table in bigquery with the following schema:\r\n![image](https://user-images.githubusercontent.com/1922169/84779953-4ea48d80-afe5-11ea-98ea-18d7a686647e.png)\r\n\r\nWe can describe this table in a schema.yml file and add descriptions as follows:\r\n```yaml\r\nversion: 2\r\n\r\nmodels:\r\n  - name: test_nested\r\n  \r\n    columns:\r\n      - name: level_1\r\n        description: level_1 description\r\n      - name: level_1.level_2.level_3_a\r\n        description: level_3_a description\r\n```\r\n\r\nWhen we now perform a `dbt run` on this model, only the description on the top level field is added and no warnings or errors are generated by dbt:\r\n![image](https://user-images.githubusercontent.com/1922169/84780414-d5f20100-afe5-11ea-869a-386b8518dd3f.png)\r\n\r\n### Expected behavior\r\nWhen providing descriptions for nested fields (preferably using the dotted syntax as shown above), the descriptions should be correctly persisted on nested fields.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - snowflake: 0.17.0\r\n  - postgres: 0.17.0\r\n  - bigquery: 0.17.0\r\n  - redshift: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nMac OS 10.15.3\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2548", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2548/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2548/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2548/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2548", "id": 639159081, "node_id": "MDU6SXNzdWU2MzkxNTkwODE=", "number": 2548, "title": "Unable to override macros in adapter", "user": {"login": "mikaelene", "id": 13303653, "node_id": "MDQ6VXNlcjEzMzAzNjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/13303653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikaelene", "html_url": "https://github.com/mikaelene", "followers_url": "https://api.github.com/users/mikaelene/followers", "following_url": "https://api.github.com/users/mikaelene/following{/other_user}", "gists_url": "https://api.github.com/users/mikaelene/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikaelene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikaelene/subscriptions", "organizations_url": "https://api.github.com/users/mikaelene/orgs", "repos_url": "https://api.github.com/users/mikaelene/repos", "events_url": "https://api.github.com/users/mikaelene/events{/privacy}", "received_events_url": "https://api.github.com/users/mikaelene/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2020-06-15T21:05:17Z", "updated_at": "2020-07-13T17:31:29Z", "closed_at": "2020-07-01T16:51:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nSome of the standard dbt macros can't be overridden by an adapter. I.e. Test, snapshots. This is present since dbt v0.16.0\r\n\r\n### Steps To Reproduce\r\nCreate an adapter the aims to override the standard macro snapshot_check_strategy. This has made it impossible for the dbt-sqlserver adapter to follow along with newer dbt verison.\r\n\r\n### Expected behavior\r\nExpects that the macro is overridden by the adapter version.\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [x] other (specify: SQL Server\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nOsx and windows\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.7\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2546", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2546/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2546/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2546/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2546", "id": 638997966, "node_id": "MDU6SXNzdWU2Mzg5OTc5NjY=", "number": 2546, "title": "Implement BigQuery alter column type functionality", "user": {"login": "azhard", "id": 2332834, "node_id": "MDQ6VXNlcjIzMzI4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2332834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhard", "html_url": "https://github.com/azhard", "followers_url": "https://api.github.com/users/azhard/followers", "following_url": "https://api.github.com/users/azhard/following{/other_user}", "gists_url": "https://api.github.com/users/azhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhard/subscriptions", "organizations_url": "https://api.github.com/users/azhard/orgs", "repos_url": "https://api.github.com/users/azhard/repos", "events_url": "https://api.github.com/users/azhard/events{/privacy}", "received_events_url": "https://api.github.com/users/azhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T16:51:48Z", "updated_at": "2020-06-22T18:50:19Z", "closed_at": "2020-06-22T18:50:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nCurrently dbt uses the default macro implementation for altering column types which doesn't actually work with BigQuery. This feature would implement a BigQuery specific macro that allows users to alter column types.\r\n\r\n### Describe alternatives you've considered\r\nBigQuery currently has two methods user's can use to alter a column type. The first method is done purely in SQL, the second involves uploading data to cloud storage. I believe the SQL specific approach makes more senes for dbt.\r\n\r\nhttps://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\r\n\r\n### Additional context\r\nFeature is specific to BigQuery\r\n\r\n### Who will this benefit?\r\nBigQuery dbt users who might find themselves in need of a way to alter a column type through dbt.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2545", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2545/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2545/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2545/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2545", "id": 638926022, "node_id": "MDU6SXNzdWU2Mzg5MjYwMjI=", "number": 2545, "title": "Enhancement: Make it more apparent when model specified in yml configuration does not exist in the project", "user": {"login": "christineberger", "id": 60892553, "node_id": "MDQ6VXNlcjYwODkyNTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/60892553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christineberger", "html_url": "https://github.com/christineberger", "followers_url": "https://api.github.com/users/christineberger/followers", "following_url": "https://api.github.com/users/christineberger/following{/other_user}", "gists_url": "https://api.github.com/users/christineberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/christineberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christineberger/subscriptions", "organizations_url": "https://api.github.com/users/christineberger/orgs", "repos_url": "https://api.github.com/users/christineberger/repos", "events_url": "https://api.github.com/users/christineberger/events{/privacy}", "received_events_url": "https://api.github.com/users/christineberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T15:04:09Z", "updated_at": "2020-06-22T20:41:40Z", "closed_at": "2020-06-22T20:41:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nWhen doing a run or test, a warning is given when a yml file has a model specified to document/test against. This warning is easily missed.\r\n\r\nTo test this:\r\n1. Create a .yml file and give it some documentation/testing parameters for a model that is not in the project.\r\n2. Do a dbt run or dbt test and see the warning at the top.\r\n\r\nAlthough the warning is there and you will catch this if you're paying attention, this is something that is missed frequently which results in more time spent explaining this, being very diligent in catching this in reviews, and more time for users to pay careful attention to this. I think we can make this easier for all of us. Here's a couple of ideas:\r\n\r\n1. Highlight the warning as a different color\r\n2. Throw a line in for the model name specified anyway, but show as an error/warning with more details after the testing is done\r\n\r\n### Describe alternatives you've considered\r\nThe solution to resolving instances of this issue currently is a matter of training users to be mindful of not just glancing at their dbt run and dbt test outputs.\r\n\r\n### Who will this benefit?\r\nAnyone who uses dbt and the docs/testing functionality!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2544", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2544/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2544/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2544/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2544", "id": 638886361, "node_id": "MDU6SXNzdWU2Mzg4ODYzNjE=", "number": 2544, "title": "There are incompatible versions in the resolved dependencies", "user": {"login": "rbval", "id": 6399810, "node_id": "MDQ6VXNlcjYzOTk4MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6399810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbval", "html_url": "https://github.com/rbval", "followers_url": "https://api.github.com/users/rbval/followers", "following_url": "https://api.github.com/users/rbval/following{/other_user}", "gists_url": "https://api.github.com/users/rbval/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbval/subscriptions", "organizations_url": "https://api.github.com/users/rbval/orgs", "repos_url": "https://api.github.com/users/rbval/repos", "events_url": "https://api.github.com/users/rbval/events{/privacy}", "received_events_url": "https://api.github.com/users/rbval/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T14:11:28Z", "updated_at": "2020-06-16T17:11:06Z", "closed_at": "2020-06-16T17:11:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the following line when trying to install dbt 0.17.0 with pipenv:\r\n\r\n```\r\nThere are incompatible versions in the resolved dependencies:\r\n  botocore<1.15,>=1.5.0 (from dbt-redshift==0.17.0->dbt==0.17.0->-r /var/folders/k_/qxkwwjjn16n9f9s53vc4g8q00000gn/T/pipenvtddq7bxhrequirements/pipenv-hyvox2_3-constraints.txt (line 6))\r\n  botocore<1.18.0,>=1.17.2 (from boto3==1.14.2->-r /var/folders/k_/qxkwwjjn16n9f9s53vc4g8q00000gn/T/pipenvtddq7bxhrequirements/pipenv-hyvox2_3-constraints.txt (line 8))\r\n  botocore<2.0a.0,>=1.12.36 (from s3transfer==0.3.3->boto3==1.14.2->-r /var/folders/k_/qxkwwjjn16n9f9s53vc4g8q00000gn/T/pipenvtddq7bxhrequirements/pipenv-hyvox2_3-constraints.txt (line 8))\r\n```\r\n\r\nThis was with the following Pipfile:\r\n```\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[packages]\r\nipdb = \"*\"\r\nboto3 = \"*\"\r\n\r\n[requires]\r\npython_version = \"3.7\"\r\n\r\n[pipenv]\r\nallow_prereleases = true\r\n```\r\n\r\nSeems like `dbt` doesn't work at all if `boto3` gets separately installed within the same Pipfile. Only way I was able to fix this was by removing the `boto3` altogether, however this hides that dependency under `dbt`. Any way to handle this in `dbt`'s end?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2543", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2543/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2543/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2543/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2543", "id": 638198781, "node_id": "MDU6SXNzdWU2MzgxOTg3ODE=", "number": 2543, "title": "Redshift connection lost for long-run query", "user": {"login": "tuannguyen0901", "id": 55411453, "node_id": "MDQ6VXNlcjU1NDExNDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/55411453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuannguyen0901", "html_url": "https://github.com/tuannguyen0901", "followers_url": "https://api.github.com/users/tuannguyen0901/followers", "following_url": "https://api.github.com/users/tuannguyen0901/following{/other_user}", "gists_url": "https://api.github.com/users/tuannguyen0901/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuannguyen0901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuannguyen0901/subscriptions", "organizations_url": "https://api.github.com/users/tuannguyen0901/orgs", "repos_url": "https://api.github.com/users/tuannguyen0901/repos", "events_url": "https://api.github.com/users/tuannguyen0901/events{/privacy}", "received_events_url": "https://api.github.com/users/tuannguyen0901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 547377963, "node_id": "MDU6TGFiZWw1NDczNzc5NjM=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/redshift/pg", "name": "redshift/pg", "color": "b60205", "default": false, "description": null}, {"id": 978390631, "node_id": "MDU6TGFiZWw5NzgzOTA2MzE=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/windows", "name": "windows", "color": "ccffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-13T17:20:48Z", "updated_at": "2020-06-17T16:52:10Z", "closed_at": "2020-06-17T13:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nRedshift close connection if long-running query execute. I faced this issue with dbt run/test\r\n\r\n### Steps To Reproduce\r\ndbt run/test on a long running table creation query\r\n\r\n\r\n### Expected behavior\r\nDBT is able to hold connection until transactions complete\r\n\r\n### Screenshots and log output\r\n\r\n<details>\r\n  <summary>logs</summary>\r\n\r\n```\r\n2020-06-13 04:44:23.637873 (MainThread): Running with dbt=0.17.0\r\n2020-06-13 04:44:23.720873 (MainThread): Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n2020-06-13 04:44:24.025627 (MainThread): running dbt with arguments Namespace(cls=<class 'dbt.task.run.RunTask'>, debug=False, exclude=None, fail_fast=False, full_refresh=False, log_cache_events=False, log_format='default', models=None, partial_parse=None, profile=None, profiles_dir='C:\\\\Users\\\\tuan.nguyen\\\\.dbt', project_dir=None, record_timing_info=None, rpc_method='run', single_threaded=False, strict=False, target=None, test_new_parser=False, threads=None, use_cache=True, vars='{}', version_check=True, warn_error=False, which='run', write_json=True)\r\n2020-06-13 04:44:24.026685 (MainThread): Tracking: tracking\r\n2020-06-13 04:44:24.027628 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D614D400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D614D278>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D614D550>]}\r\n2020-06-13 04:44:24.089276 (MainThread): Partial parsing not enabled\r\n2020-06-13 04:44:24.095212 (MainThread): Parsing macros\\core.sql\r\n2020-06-13 04:44:24.104283 (MainThread): Parsing macros\\adapters\\common.sql\r\n2020-06-13 04:44:24.209306 (MainThread): Parsing macros\\etc\\datetime.sql\r\n2020-06-13 04:44:24.227213 (MainThread): Parsing macros\\etc\\get_custom_alias.sql\r\n2020-06-13 04:44:24.230213 (MainThread): Parsing macros\\etc\\get_custom_database.sql\r\n2020-06-13 04:44:24.234327 (MainThread): Parsing macros\\etc\\get_custom_schema.sql\r\n2020-06-13 04:44:24.241212 (MainThread): Parsing macros\\etc\\is_incremental.sql\r\n2020-06-13 04:44:24.246214 (MainThread): Parsing macros\\etc\\query.sql\r\n2020-06-13 04:44:24.249215 (MainThread): Parsing macros\\materializations\\helpers.sql\r\n2020-06-13 04:44:24.264213 (MainThread): Parsing macros\\materializations\\common\\merge.sql\r\n2020-06-13 04:44:24.323218 (MainThread): Parsing macros\\materializations\\incremental\\helpers.sql\r\n2020-06-13 04:44:24.338305 (MainThread): Parsing macros\\materializations\\incremental\\incremental.sql\r\n2020-06-13 04:44:24.370215 (MainThread): Parsing macros\\materializations\\seed\\seed.sql\r\n2020-06-13 04:44:24.441213 (MainThread): Parsing macros\\materializations\\snapshot\\snapshot.sql\r\n2020-06-13 04:44:24.520211 (MainThread): Parsing macros\\materializations\\snapshot\\snapshot_merge.sql\r\n2020-06-13 04:44:24.523246 (MainThread): Parsing macros\\materializations\\snapshot\\strategies.sql\r\n2020-06-13 04:44:24.560210 (MainThread): Parsing macros\\materializations\\table\\table.sql\r\n2020-06-13 04:44:24.572253 (MainThread): Parsing macros\\materializations\\view\\create_or_replace_view.sql\r\n2020-06-13 04:44:24.583228 (MainThread): Parsing macros\\materializations\\view\\view.sql\r\n2020-06-13 04:44:24.595212 (MainThread): Parsing macros\\schema_tests\\accepted_values.sql\r\n2020-06-13 04:44:24.599214 (MainThread): Parsing macros\\schema_tests\\not_null.sql\r\n2020-06-13 04:44:24.601213 (MainThread): Parsing macros\\schema_tests\\relationships.sql\r\n2020-06-13 04:44:24.604240 (MainThread): Parsing macros\\schema_tests\\unique.sql\r\n2020-06-13 04:44:24.608272 (MainThread): Parsing macros\\adapters.sql\r\n2020-06-13 04:44:24.681268 (MainThread): Parsing macros\\catalog.sql\r\n2020-06-13 04:44:24.717223 (MainThread): Parsing macros\\relations.sql\r\n2020-06-13 04:44:24.720217 (MainThread): Parsing macros\\materializations\\snapshot_merge.sql\r\n2020-06-13 04:44:24.724332 (MainThread): Parsing macros\\adapters.sql\r\n2020-06-13 04:44:24.785290 (MainThread): Parsing macros\\catalog.sql\r\n2020-06-13 04:44:24.793215 (MainThread): Parsing macros\\relations.sql\r\n2020-06-13 04:44:24.799221 (MainThread): Parsing macros\\materializations\\snapshot_merge.sql\r\n2020-06-13 04:44:24.889328 (MainThread): Partial parsing not enabled\r\n2020-06-13 04:44:24.987475 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:24.988217 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.093399 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_factevir_aggr_monthly\".\r\n2020-06-13 04:44:25.093523 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.129546 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_detail_0\".\r\n2020-06-13 04:44:25.130408 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.175447 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_detail_evirstatus\".\r\n2020-06-13 04:44:25.176398 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.216602 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_header\".\r\n2020-06-13 04:44:25.216602 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.257605 (MainThread): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_mapping\".\r\n2020-06-13 04:44:25.257605 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.785357 (MainThread): Found 6 models, 2 tests, 0 snapshots, 0 analyses, 159 macros, 0 operations, 0 seed files, 2 sources\r\n2020-06-13 04:44:25.787388 (MainThread): \r\n2020-06-13 04:44:25.788232 (MainThread): Acquiring new redshift connection \"master\".\r\n2020-06-13 04:44:25.788232 (MainThread): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.794344 (ThreadPoolExecutor-0_0): Acquiring new redshift connection \"list_data01\".\r\n2020-06-13 04:44:25.794344 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state init\r\n2020-06-13 04:44:25.817349 (ThreadPoolExecutor-0_0): Using redshift connection \"list_data01\".\r\n2020-06-13 04:44:25.817977 (ThreadPoolExecutor-0_0): On list_data01: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"connection_name\": \"list_data01\"} */\r\n\r\n    select distinct nspname from pg_namespace\r\n  \r\n2020-06-13 04:44:25.818322 (ThreadPoolExecutor-0_0): Connecting to Redshift using 'database' credentials\r\n2020-06-13 04:44:26.212388 (ThreadPoolExecutor-0_0): SQL status: SELECT in 0.39 seconds\r\n2020-06-13 04:44:26.264941 (ThreadPoolExecutor-1_0): Acquiring new redshift connection \"list_data01_public\".\r\n2020-06-13 04:44:26.265948 (ThreadPoolExecutor-1_0): Opening a new connection, currently in state init\r\n2020-06-13 04:44:26.289949 (ThreadPoolExecutor-1_0): Using redshift connection \"list_data01_public\".\r\n2020-06-13 04:44:26.289949 (ThreadPoolExecutor-1_0): On list_data01_public: BEGIN\r\n2020-06-13 04:44:26.289949 (ThreadPoolExecutor-1_0): Connecting to Redshift using 'database' credentials\r\n2020-06-13 04:44:26.617939 (ThreadPoolExecutor-1_0): SQL status: BEGIN in 0.33 seconds\r\n2020-06-13 04:44:26.618943 (ThreadPoolExecutor-1_0): Using redshift connection \"list_data01_public\".\r\n2020-06-13 04:44:26.618943 (ThreadPoolExecutor-1_0): On list_data01_public: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"connection_name\": \"list_data01_public\"} */\r\nselect\r\n      'data01' as database,\r\n      tablename as name,\r\n      schemaname as schema,\r\n      'table' as type\r\n    from pg_tables\r\n    where schemaname ilike 'public'\r\n    union all\r\n    select\r\n      'data01' as database,\r\n      viewname as name,\r\n      schemaname as schema,\r\n      'view' as type\r\n    from pg_views\r\n    where schemaname ilike 'public'\r\n  \r\n2020-06-13 04:44:26.668919 (ThreadPoolExecutor-1_0): SQL status: SELECT in 0.05 seconds\r\n2020-06-13 04:44:26.888602 (ThreadPoolExecutor-1_0): On list_data01_public: ROLLBACK\r\n2020-06-13 04:44:26.972481 (MainThread): Using redshift connection \"master\".\r\n2020-06-13 04:44:26.972481 (MainThread): On master: BEGIN\r\n2020-06-13 04:44:26.973431 (MainThread): Connecting to Redshift using 'database' credentials\r\n2020-06-13 04:44:27.370413 (MainThread): SQL status: BEGIN in 0.40 seconds\r\n2020-06-13 04:44:27.371416 (MainThread): Using redshift connection \"master\".\r\n2020-06-13 04:44:27.371416 (MainThread): On master: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"connection_name\": \"master\"} */\r\nwith relation as (\r\n        select\r\n            pg_rewrite.ev_class as class,\r\n            pg_rewrite.oid as id\r\n        from pg_rewrite\r\n    ),\r\n    class as (\r\n        select\r\n            oid as id,\r\n            relname as name,\r\n            relnamespace as schema,\r\n            relkind as kind\r\n        from pg_class\r\n    ),\r\n    dependency as (\r\n        select\r\n            pg_depend.objid as id,\r\n            pg_depend.refobjid as ref\r\n        from pg_depend\r\n    ),\r\n    schema as (\r\n        select\r\n            pg_namespace.oid as id,\r\n            pg_namespace.nspname as name\r\n        from pg_namespace\r\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\r\n    ),\r\n    referenced as (\r\n        select\r\n            relation.id AS id,\r\n            referenced_class.name ,\r\n            referenced_class.schema ,\r\n            referenced_class.kind\r\n        from relation\r\n        join class as referenced_class on relation.class=referenced_class.id\r\n        where referenced_class.kind in ('r', 'v')\r\n    ),\r\n    relationships as (\r\n        select\r\n            referenced.name as referenced_name,\r\n            referenced.schema as referenced_schema_id,\r\n            dependent_class.name as dependent_name,\r\n            dependent_class.schema as dependent_schema_id,\r\n            referenced.kind as kind\r\n        from referenced\r\n        join dependency on referenced.id=dependency.id\r\n        join class as dependent_class on dependency.ref=dependent_class.id\r\n        where\r\n            (referenced.name != dependent_class.name or\r\n             referenced.schema != dependent_class.schema)\r\n    )\r\n\r\n    select\r\n        referenced_schema.name as referenced_schema,\r\n        relationships.referenced_name as referenced_name,\r\n        dependent_schema.name as dependent_schema,\r\n        relationships.dependent_name as dependent_name\r\n    from relationships\r\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\r\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\r\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\r\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\r\n2020-06-13 04:44:27.492410 (MainThread): SQL status: SELECT in 0.12 seconds\r\n2020-06-13 04:44:28.243399 (MainThread): On master: ROLLBACK\r\n2020-06-13 04:44:28.278399 (MainThread): Using redshift connection \"master\".\r\n2020-06-13 04:44:28.279404 (MainThread): On master: BEGIN\r\n2020-06-13 04:44:28.348408 (MainThread): SQL status: BEGIN in 0.07 seconds\r\n2020-06-13 04:44:28.348408 (MainThread): On master: COMMIT\r\n2020-06-13 04:44:28.349509 (MainThread): Using redshift connection \"master\".\r\n2020-06-13 04:44:28.350409 (MainThread): On master: COMMIT\r\n2020-06-13 04:44:28.386408 (MainThread): SQL status: COMMIT in 0.04 seconds\r\n2020-06-13 04:44:28.387708 (MainThread): 00:44:28 | Concurrency: 4 threads (target='dev')\r\n2020-06-13 04:44:28.388835 (MainThread): 00:44:28 | \r\n2020-06-13 04:44:28.403408 (Thread-1): Began running node model.evir_aggregation.vw_evir_mapping\r\n2020-06-13 04:44:28.404407 (Thread-1): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_mapping\".\r\n2020-06-13 04:44:28.405406 (Thread-1): Opening a new connection, currently in state init\r\n2020-06-13 04:44:28.405787 (Thread-1): Compiling model.evir_aggregation.vw_evir_mapping\r\n2020-06-13 04:44:28.492454 (Thread-1): Writing injected SQL for node \"model.evir_aggregation.vw_evir_mapping\"\r\n2020-06-13 04:44:28.494410 (Thread-1): finished collecting timing info\r\n2020-06-13 04:44:28.496414 (Thread-1): Finished running node model.evir_aggregation.vw_evir_mapping\r\n2020-06-13 04:44:28.497486 (Thread-3): Began running node model.evir_aggregation.vw_evir_detail_0\r\n2020-06-13 04:44:28.498414 (Thread-4): Began running node model.evir_aggregation.vw_evir_detail_evirstatus\r\n2020-06-13 04:44:28.499449 (Thread-3): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_detail_0\".\r\n2020-06-13 04:44:28.499904 (Thread-2): Began running node model.evir_aggregation.vw_evir_header\r\n2020-06-13 04:44:28.500415 (Thread-4): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_detail_evirstatus\".\r\n2020-06-13 04:44:28.500415 (Thread-3): Opening a new connection, currently in state init\r\n2020-06-13 04:44:28.502405 (Thread-2): Acquiring new redshift connection \"model.evir_aggregation.vw_evir_header\".\r\n2020-06-13 04:44:28.502405 (Thread-4): Opening a new connection, currently in state init\r\n2020-06-13 04:44:28.503417 (Thread-3): Compiling model.evir_aggregation.vw_evir_detail_0\r\n2020-06-13 04:44:28.503417 (Thread-2): Opening a new connection, currently in state init\r\n2020-06-13 04:44:28.503417 (Thread-4): Compiling model.evir_aggregation.vw_evir_detail_evirstatus\r\n2020-06-13 04:44:28.521415 (Thread-2): Compiling model.evir_aggregation.vw_evir_header\r\n2020-06-13 04:44:29.053403 (Thread-2): Writing injected SQL for node \"model.evir_aggregation.vw_evir_header\"\r\n2020-06-13 04:44:29.141448 (Thread-2): finished collecting timing info\r\n2020-06-13 04:44:29.172405 (Thread-2): Finished running node model.evir_aggregation.vw_evir_header\r\n2020-06-13 04:44:29.467620 (Thread-4): Writing injected SQL for node \"model.evir_aggregation.vw_evir_detail_evirstatus\"\r\n2020-06-13 04:44:29.493627 (Thread-3): Writing injected SQL for node \"model.evir_aggregation.vw_evir_detail_0\"\r\n2020-06-13 04:44:29.495108 (Thread-4): finished collecting timing info\r\n2020-06-13 04:44:29.496624 (Thread-4): Finished running node model.evir_aggregation.vw_evir_detail_evirstatus\r\n2020-06-13 04:44:29.497625 (Thread-3): finished collecting timing info\r\n2020-06-13 04:44:29.499197 (Thread-3): Finished running node model.evir_aggregation.vw_evir_detail_0\r\n2020-06-13 04:44:29.500208 (Thread-1): Began running node model.evir_aggregation.vw_factevir_aggr\r\n2020-06-13 04:44:29.503210 (Thread-1): 00:44:29 | 1 of 2 START table model public.vw_factevir_aggr..................... [RUN]\r\n2020-06-13 04:44:29.504276 (Thread-1): Acquiring new redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:29.505209 (Thread-1): Opening a new connection, currently in state init\r\n2020-06-13 04:44:29.505209 (Thread-1): Compiling model.evir_aggregation.vw_factevir_aggr\r\n2020-06-13 04:44:29.646245 (Thread-1): Writing injected SQL for node \"model.evir_aggregation.vw_factevir_aggr\"\r\n2020-06-13 04:44:29.648207 (Thread-1): finished collecting timing info\r\n2020-06-13 04:44:29.691245 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:29.692321 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: BEGIN\r\n2020-06-13 04:44:29.692321 (Thread-1): Connecting to Redshift using 'database' credentials\r\n2020-06-13 04:44:30.015216 (Thread-1): SQL status: BEGIN in 0.32 seconds\r\n2020-06-13 04:44:30.032908 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.033199 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"node_id\": \"model.evir_aggregation.vw_factevir_aggr\"} */\r\ndrop table if exists \"data01\".\"public\".\"vw_factevir_aggr__dbt_tmp\" cascade\r\n2020-06-13 04:44:30.079217 (Thread-1): SQL status: DROP TABLE in 0.05 seconds\r\n2020-06-13 04:44:30.083200 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.083200 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.083200 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.123902 (Thread-1): SQL status: COMMIT in 0.04 seconds\r\n2020-06-13 04:44:30.124489 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.124489 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: BEGIN\r\n2020-06-13 04:44:30.163809 (Thread-1): SQL status: BEGIN in 0.04 seconds\r\n2020-06-13 04:44:30.164493 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.164493 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.164493 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.198492 (Thread-1): SQL status: COMMIT in 0.03 seconds\r\n2020-06-13 04:44:30.198492 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.199706 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: BEGIN\r\n2020-06-13 04:44:30.233494 (Thread-1): SQL status: BEGIN in 0.03 seconds\r\n2020-06-13 04:44:30.240492 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.241615 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"node_id\": \"model.evir_aggregation.vw_factevir_aggr\"} */\r\ndrop table if exists \"data01\".\"public\".\"vw_factevir_aggr__dbt_backup\" cascade\r\n2020-06-13 04:44:30.277529 (Thread-1): SQL status: DROP TABLE in 0.04 seconds\r\n2020-06-13 04:44:30.281491 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.281491 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.282492 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: COMMIT\r\n2020-06-13 04:44:30.318515 (Thread-1): SQL status: COMMIT in 0.04 seconds\r\n2020-06-13 04:44:30.318515 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.319510 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: BEGIN\r\n2020-06-13 04:44:30.353833 (Thread-1): SQL status: BEGIN in 0.03 seconds\r\n2020-06-13 04:44:30.447546 (Thread-1): Writing runtime SQL for node \"model.evir_aggregation.vw_factevir_aggr\"\r\n2020-06-13 04:44:30.450949 (Thread-1): Using redshift connection \"model.evir_aggregation.vw_factevir_aggr\".\r\n2020-06-13 04:44:30.451505 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"dfx\", \"target_name\": \"dev\", \"node_id\": \"model.evir_aggregation.vw_factevir_aggr\"} */\r\n\r\nCreate  table\r\n    \"data01\".\"public\".\"vw_factevir_aggr\"\r\n    as (\r\nwith __dbt__CTE__vw_evir_mapping as (\r\nSELECT ..... long running query, more than 30 minutes ) \r\n\r\n2020-06-13 05:34:40.543717 (Thread-1): Postgres error: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n\r\n2020-06-13 05:34:40.543717 (Thread-1): On model.evir_aggregation.vw_factevir_aggr: ROLLBACK\r\n2020-06-13 05:34:40.544681 (Thread-1): Failed to rollback model.evir_aggregation.vw_factevir_aggr\r\nTraceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\postgres\\connections.py\", line 46, in exception_handler\r\n    yield\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 74, in add_query\r\n    cursor.execute(sql, bindings)\r\npsycopg2.OperationalError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\base\\connections.py\", line 221, in _rollback_handle\r\n    connection.handle.rollback()\r\npsycopg2.InterfaceError: connection already closed\r\n2020-06-13 05:34:40.547715 (Thread-1): finished collecting timing info\r\n2020-06-13 05:34:40.549697 (Thread-1): Database Error in model vw_factevir_aggr (models\\Marts\\EVIR\\vw_factevir_aggr.sql)\r\n  server closed the connection unexpectedly\r\n  \tThis probably means the server terminated abnormally\r\n  \tbefore or while processing the request.\r\n  compiled SQL at target\\run\\evir_aggregation\\models\\Marts\\EVIR\\vw_factevir_aggr.sql\r\nTraceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\postgres\\connections.py\", line 46, in exception_handler\r\n    yield\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 74, in add_query\r\n    cursor.execute(sql, bindings)\r\npsycopg2.OperationalError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\node_runners.py\", line 228, in safe_run\r\n    result = self.compile_and_execute(manifest, ctx)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\node_runners.py\", line 171, in compile_and_execute\r\n    result = self.run(ctx.node, manifest)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\node_runners.py\", line 273, in run\r\n    return self.execute(compiled_node, manifest)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\node_runners.py\", line 459, in execute\r\n    result = MacroGenerator(materialization_macro, context)()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\clients\\jinja.py\", line 296, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\clients\\jinja.py\", line 226, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 63, in macro\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\clients\\jinja.py\", line 296, in __call__\r\n    return self.call_macro(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\clients\\jinja.py\", line 226, in call_macro\r\n    return macro(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 675, in __call__\r\n    return self._invoke(arguments, autoescape)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 679, in _invoke\r\n    rv = self._func(*arguments)\r\n  File \"<template>\", line 41, in macro\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\sandbox.py\", line 462, in call\r\n    return __context.call(__obj, *args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\jinja2\\runtime.py\", line 290, in call\r\n    return __obj(*args, **kwargs)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\base\\impl.py\", line 228, in execute\r\n    fetch=fetch\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 119, in execute\r\n    _, cursor = self.add_query(sql, auto_begin)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 82, in add_query\r\n    return connection, cursor\r\n  File \"c:\\programdata\\anaconda3\\lib\\contextlib.py\", line 130, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\postgres\\connections.py\", line 58, in exception_handler\r\n    raise dbt.exceptions.DatabaseException(str(e).strip()) from e\r\ndbt.exceptions.DatabaseException: Database Error in model vw_factevir_aggr (models\\Marts\\EVIR\\vw_factevir_aggr.sql)\r\n  server closed the connection unexpectedly\r\n  \tThis probably means the server terminated abnormally\r\n  \tbefore or while processing the request.\r\n  compiled SQL at target\\run\\evir_aggregation\\models\\Marts\\EVIR\\vw_factevir_aggr.sql\r\n2020-06-13 05:34:40.558698 (Thread-1): Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '281fd3ef-9df8-46ac-ae6c-910b6029dd27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D6237588>]}\r\n2020-06-13 05:34:40.560699 (Thread-1): 01:34:40 | 1 of 2 ERROR creating table model public.vw_factevir_aggr............ [ERROR in 3011.05s]\r\n2020-06-13 05:34:40.562704 (Thread-1): Finished running node model.evir_aggregation.vw_factevir_aggr\r\n2020-06-13 05:34:40.564701 (Thread-4): Began running node model.evir_aggregation.vw_factevir_aggr_monthly\r\n2020-06-13 05:34:40.564701 (Thread-4): 01:34:40 | 2 of 2 SKIP relation public.vw_factevir_aggr_monthly................. [SKIP]\r\n2020-06-13 05:34:40.565700 (Thread-4): Finished running node model.evir_aggregation.vw_factevir_aggr_monthly\r\n2020-06-13 05:34:40.591624 (MainThread): Using redshift connection \"master\".\r\n2020-06-13 05:34:40.591624 (MainThread): On master: BEGIN\r\n2020-06-13 05:34:40.592629 (MainThread): Postgres error: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n\r\n2020-06-13 05:34:40.592629 (MainThread): Database error while running on-run-end\r\n2020-06-13 05:34:40.593624 (MainThread): Connection 'master' was left open.\r\n2020-06-13 05:34:40.593624 (MainThread): On master: Close\r\n2020-06-13 05:34:40.593624 (MainThread): Connection 'list_data01' was left open.\r\n2020-06-13 05:34:40.593624 (MainThread): On list_data01: Close\r\n2020-06-13 05:34:40.593624 (MainThread): Connection 'list_data01_public' was left open.\r\n2020-06-13 05:34:40.593624 (MainThread): On list_data01_public: Close\r\n2020-06-13 05:34:40.594659 (MainThread): Connection 'model.evir_aggregation.vw_factevir_aggr' was left open.\r\n2020-06-13 05:34:40.594659 (MainThread): On model.evir_aggregation.vw_factevir_aggr: Close\r\n2020-06-13 05:34:40.594659 (MainThread): Connection 'model.evir_aggregation.vw_evir_detail_0' was properly closed.\r\n2020-06-13 05:34:40.594659 (MainThread): Connection 'model.evir_aggregation.vw_evir_detail_evirstatus' was properly closed.\r\n2020-06-13 05:34:40.594659 (MainThread): Connection 'model.evir_aggregation.vw_evir_header' was properly closed.\r\n2020-06-13 05:34:40.594659 (MainThread): Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D629B0F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D629BCF8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000198D629B278>]}\r\n2020-06-13 05:34:40.594659 (MainThread): Flushing usage events\r\n2020-06-13 05:34:40.845547 (MainThread): Encountered an error:\r\n2020-06-13 05:34:40.845547 (MainThread): Database Error\r\n  server closed the connection unexpectedly\r\n  \tThis probably means the server terminated abnormally\r\n  \tbefore or while processing the request.\r\n2020-06-13 05:34:40.850548 (MainThread): Traceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\postgres\\connections.py\", line 46, in exception_handler\r\n    yield\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 74, in add_query\r\n    cursor.execute(sql, bindings)\r\npsycopg2.OperationalError: server closed the connection unexpectedly\r\n\tThis probably means the server terminated abnormally\r\n\tbefore or while processing the request.\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\main.py\", line 81, in main\r\n    results, succeeded = handle_and_check(args)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\main.py\", line 159, in handle_and_check\r\n    task, res = run_from_args(parsed)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\main.py\", line 212, in run_from_args\r\n    results = task.run()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\task\\runnable.py\", line 409, in run\r\n    result = self.execute_with_hooks(selected_uids)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\task\\runnable.py\", line 371, in execute_with_hooks\r\n    self.after_run(adapter, res)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\task\\run.py\", line 223, in after_run\r\n    self.safe_run_hooks(adapter, RunHookType.End, extras)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\task\\run.py\", line 180, in safe_run_hooks\r\n    self.run_hooks(adapter, hook_type, extra_context)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\task\\run.py\", line 133, in run_hooks\r\n    adapter.clear_transaction()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\base\\impl.py\", line 179, in clear_transaction\r\n    self.connections.clear_transaction()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\base\\connections.py\", line 88, in clear_transaction\r\n    self.begin()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 147, in begin\r\n    self.add_begin_query()\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 128, in add_begin_query\r\n    return self.add_query('BEGIN', auto_begin=False)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\sql\\connections.py\", line 82, in add_query\r\n    return connection, cursor\r\n  File \"c:\\programdata\\anaconda3\\lib\\contextlib.py\", line 130, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"c:\\programdata\\anaconda3\\lib\\site-packages\\dbt\\adapters\\postgres\\connections.py\", line 58, in exception_handler\r\n    raise dbt.exceptions.DatabaseException(str(e).strip()) from e\r\ndbt.exceptions.DatabaseException: Database Error\r\n  server closed the connection unexpectedly\r\n  \tThis probably means the server terminated abnormally\r\n  \tbefore or while processing the request.\r\n```\r\n</details>\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [x ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - postgres: 0.17.0\r\n  - redshift: 0.17.0\r\n  - snowflake: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nWindows 10\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.3\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2542", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2542/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2542/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2542/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2542", "id": 637904132, "node_id": "MDU6SXNzdWU2Mzc5MDQxMzI=", "number": 2542, "title": "Pass config values to sources in dbt_project.yml", "user": {"login": "azhard", "id": 2332834, "node_id": "MDQ6VXNlcjIzMzI4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2332834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhard", "html_url": "https://github.com/azhard", "followers_url": "https://api.github.com/users/azhard/followers", "following_url": "https://api.github.com/users/azhard/following{/other_user}", "gists_url": "https://api.github.com/users/azhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhard/subscriptions", "organizations_url": "https://api.github.com/users/azhard/orgs", "repos_url": "https://api.github.com/users/azhard/repos", "events_url": "https://api.github.com/users/azhard/events{/privacy}", "received_events_url": "https://api.github.com/users/azhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129289, "node_id": "MDU6TGFiZWwzMzkxMjkyODk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T17:29:01Z", "updated_at": "2020-06-22T15:20:02Z", "closed_at": "2020-06-22T15:19:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nIn the `dbt_project.yml` file you can pass specific config values to models based on the folder structure. This is extremely useful so that you are not forced to pass in the same value in individual file configs. This pattern however doesn't work for sources. A project.yml sectoin that I would expect to work is as follows:\r\n```\r\nname: 'dbt'\r\nversion: '1.0.0'\r\n\r\nconfig-version: 2\r\n\r\n...\r\n\r\n# This works\r\nmodels:\r\n  dbt:\r\n    dir1:\r\n      +tags:\r\n        - fancy_tag1\r\n      sub_dir1:\r\n        +enabled: false\r\n      sub_dir2:\r\n        +materialized: ephemeral\r\n\r\n    dir2:\r\n      +tags:\r\n        - fancy_tag2\r\n\r\n# This doesn't cause an error but doesn't actually works\r\nsources:\r\n  dbt:\r\n    dir1:\r\n      +database:\r\n        - database_1\r\n      sub_dir1:\r\n        +loaded_at_field: col_1\r\n      sub_dir2:\r\n        +description: Sub_dir2 sources live here\r\n\r\n    dir2:\r\n      +loader:\r\n        - Kafka\r\n```\r\n\r\n### Additional context\r\nThis should work across all databases\r\n\r\n### Who will this benefit?\r\nPresumably any dbt users who have sources in separate files but those sources share config elements.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2541", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2541/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2541/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2541/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2541", "id": 637828376, "node_id": "MDU6SXNzdWU2Mzc4MjgzNzY=", "number": 2541, "title": "`--project-dir` with relative paths?", "user": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 2, "created_at": "2020-06-12T15:21:35Z", "updated_at": "2020-06-17T20:09:03Z", "closed_at": "2020-06-17T20:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n`--project-dir` doesn't use relative paths, and I got confused given the error message\r\n\r\n### Steps To Reproduce\r\nRun a project in a child path; say we have a DBT project in a path called `sql` under the current one:\r\n\r\n```\r\n$ dbt run --project-dir sql\r\nRunning with dbt=0.17.0\r\nEncountered an error while reading the project:\r\n  ERROR: Runtime Error\r\n  no dbt_project.yml found at expected path sql/dbt_project.yml\r\nEncountered an error:\r\nRuntime Error\r\n  Could not run dbt\r\n\r\n$ dbt run --project-dir (pwd)/sql\r\nRunning with dbt=0.17.0\r\nFound 4 models, 0 tests, 0 snapshots, 0 analyses, 147 macros, 0 operations, 0 seed files, 0 sources\r\n```\r\n\r\nI was doubting my sanity for a second with `no dbt_project.yml found at expected path sql/dbt_project.yml`\r\n\r\n### Expected behavior\r\nUse relative paths, or if this is deliberate, don't accept relative paths\r\n\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - snowflake: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nMacOS\r\n\r\n**The output of `python --version`:**\r\nPython 3.7.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2536", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2536/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2536/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2536/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2536", "id": 637220359, "node_id": "MDU6SXNzdWU2MzcyMjAzNTk=", "number": 2536, "title": "Python 3.6.2 doesn't work with dbt 0.17.0", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-11T18:03:20Z", "updated_at": "2020-06-17T20:08:23Z", "closed_at": "2020-06-17T20:08:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nRunning dbt on python <= 3.6.2 results in an error that `name 'TimestampSnapshotConfig' is not defined`. 3.6.3 is unaffected.\r\n\r\n### Steps To Reproduce\r\nInstall python 3.6.2\r\nInstall dbt\r\nTry to use dbt\r\n\r\n### Expected behavior\r\ndbt should run, not crash, etc\r\n\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\nAny\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nmacos, linux\r\n\r\n**The output of `python --version`:**\r\n`Python 3.6.2`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2533", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2533/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2533/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2533/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2533", "id": 636498299, "node_id": "MDU6SXNzdWU2MzY0OTgyOTk=", "number": 2533, "title": "Write database-specific sample profiles.yml file in `dbt init`", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-10T19:38:22Z", "updated_at": "2020-08-11T22:27:03Z", "closed_at": "2020-08-11T22:27:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\n\r\nLet's add a flag to `dbt init` which controls the sample contents of the `~/.dbt/profiles.yml` file. \r\n\r\nExample usage:\r\n```\r\ndbt init my-project --adapter=bigquery\r\ndbt init my-project --adapter=snowflake\r\ndbt init my-project --adapter=redshift\r\n```\r\n\r\ndbt's adapter plugins should provide their own sample profiles .yml contents. Presently, dbt writes out a Redshift-specific profile.\r\n\r\n### Additional context\r\nHi Felipe :)\r\n\r\n### Who will this benefit?\r\nBQ/Snowflake/Postgres/Spark/Presto users!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2532", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2532/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2532/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2532/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2532", "id": 636494587, "node_id": "MDU6SXNzdWU2MzY0OTQ1ODc=", "number": 2532, "title": "Extend vars support in run-operations to follow same conventions as standard dbt run", "user": {"login": "mdesmet", "id": 9265503, "node_id": "MDQ6VXNlcjkyNjU1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9265503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdesmet", "html_url": "https://github.com/mdesmet", "followers_url": "https://api.github.com/users/mdesmet/followers", "following_url": "https://api.github.com/users/mdesmet/following{/other_user}", "gists_url": "https://api.github.com/users/mdesmet/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdesmet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdesmet/subscriptions", "organizations_url": "https://api.github.com/users/mdesmet/orgs", "repos_url": "https://api.github.com/users/mdesmet/repos", "events_url": "https://api.github.com/users/mdesmet/events{/privacy}", "received_events_url": "https://api.github.com/users/mdesmet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-10T19:31:22Z", "updated_at": "2020-06-12T12:59:00Z", "closed_at": "2020-06-11T22:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nThe run-operation feature also supports vars, however they can only provided through CLI, this seems a bit cumbersome. Why can't it follow the same logic as within a dbt run as stated in https://docs.getdbt.com/docs/building-a-dbt-project/building-models/using-variables/#variable-precedence. This will provide the user to specify the vars in the yaml file just as usual instead of having to provide it in dict format through the CLI.\r\n\r\nImagine having to pass these kind of structures through CLI:\r\n```\r\nvars:\r\n    var1: whatevervar\r\n    var2:\r\n      - name: name1\r\n        list:\r\n        -  entry1\r\n```\r\n\r\n### Describe alternatives you've considered\r\nWe can use db run instead, however we would like to use run-operation to enable all things related to CI/CD and this is not necessary during development.\r\n\r\n### Additional context\r\nAny/All dbs\r\n\r\n### Who will this benefit?\r\nUsers want simpler automation, build and CI scripts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2531", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2531/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2531/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2531/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2531", "id": 636476949, "node_id": "MDU6SXNzdWU2MzY0NzY5NDk=", "number": 2531, "title": "dbt should provide a way to signify that a field is a string at the yaml level", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T19:00:36Z", "updated_at": "2020-07-07T20:33:48Z", "closed_at": "2020-07-07T20:33:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nCurrently, in config files in dbt that are rendered in the native environment, we provide an `as_text` filter that dbt uses to identify a value that should not be converted to the native env rendering. We should provide a similar feature at the yaml level, so users can mark fields (perhaps even recursively?) as being \"really strings\" to either be rendered in the non-native jinja renderer or not rendered at all.\r\n\r\nThe big issue is that it's pretty tedious to mark all the relevant fields as text right now if you have a lot of them.\r\n\r\n### Describe alternatives you've considered\r\nUsers can use `\"{{ 00 | as_text }}\"` instead of `\"00\"` anywhere. `\"'00'\"` should work too in most cases.\r\n\r\n### Additional context\r\nAny/All dbs\r\n\r\n### Who will this benefit?\r\ndbt users who configure a lot of numeric-looking strings.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2527", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2527/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2527/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2527/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2527", "id": 636362912, "node_id": "MDU6SXNzdWU2MzYzNjI5MTI=", "number": 2527, "title": "Defer to prod manifest for partial runs", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1159333508, "node_id": "MDU6TGFiZWwxMTU5MzMzNTA4", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/more%20information%20needed", "name": "more information needed", "color": "710faa", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 7, "created_at": "2020-06-10T15:52:33Z", "updated_at": "2020-07-31T18:09:26Z", "closed_at": "2020-07-31T18:09:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See also #1612, #1603, and #2465 \r\n\r\n### Describe the feature\r\nIn a partial run of dbt (eg. `dbt run -m my_model+`), all of the parents of `my_model` and its children must exist for the run to succeed. To this end, we've built the `@` selector, but another helpful approach would be to defer to relations created by a production run when these parent models are referenced.\r\n\r\nWhen dbt is provided a prod manifest (#2465), it can rewrite references to models based on the information contained in this manifest. Specifically, references to models which are _not_ included in the run (ie. they are not selected, or they are explicitly excluded) should be interpolated as a relation captured in the prod manifest.\r\n\r\nThis flow will support the following use-cases:\r\n - Slim CI builds that only run new and changed models (without building their parents)\r\n - Local development (don't run large Snowplow models in dev)\r\n - Orgs with multiple projects where users don't have permissions to run models in an upstream package\r\n\r\nThings to discuss:\r\n - Is this automatic? Or should models be configured as \"deferrable\" in some way?\r\n  - If it needs to be enabled explicitly, is this a model config, a run flag, or something else?\r\n - What happens if a model is not selected and also is not in the prod manifest?\r\n - Does this have any impact on non-models?\r\n   - Seeds\r\n   - Snapshots\r\n   - Tests\r\n - How does this impact the generated manifest for the run? Are the \"borrowed\" prod models included in the generated manifest? Should they render in the auto-generated documentation?\r\n\r\n### Additional context\r\nLet's approach this separately from #2465 but keep this context in mind\r\n\r\n### Who will this benefit?\r\n- CI\r\n- Local dev\r\n- Large, sprawling, microproject architecture deployments\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2526", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2526/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2526/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2526/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2526", "id": 636359254, "node_id": "MDU6SXNzdWU2MzYzNTkyNTQ=", "number": 2526, "title": "Add data processed info into dbt run logs for all statement types", "user": {"login": "alepuccetti", "id": 6577391, "node_id": "MDQ6VXNlcjY1NzczOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6577391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alepuccetti", "html_url": "https://github.com/alepuccetti", "followers_url": "https://api.github.com/users/alepuccetti/followers", "following_url": "https://api.github.com/users/alepuccetti/following{/other_user}", "gists_url": "https://api.github.com/users/alepuccetti/gists{/gist_id}", "starred_url": "https://api.github.com/users/alepuccetti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alepuccetti/subscriptions", "organizations_url": "https://api.github.com/users/alepuccetti/orgs", "repos_url": "https://api.github.com/users/alepuccetti/repos", "events_url": "https://api.github.com/users/alepuccetti/events{/privacy}", "received_events_url": "https://api.github.com/users/alepuccetti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 12, "created_at": "2020-06-10T15:47:42Z", "updated_at": "2020-06-23T20:39:34Z", "closed_at": "2020-06-23T20:39:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nWhen using BigQuery `dbt run` logs should show the data scan value for create table statement and not just for script.\r\n\r\n### Describe alternatives you've considered\r\nNo alternative\r\n\r\n### Additional context\r\nThis specific improvement is about BigQuery. However, this might apply for other database too I do not have experience to give specific examples.\r\n\r\n### Who will this benefit?\r\nEveryone using dbt to get easier access to usage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2525", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2525/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2525/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2525/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2525", "id": 635800732, "node_id": "MDU6SXNzdWU2MzU4MDA3MzI=", "number": 2525, "title": "dbt compile tries to create a schema as of 0.17", "user": {"login": "seancron", "id": 233573, "node_id": "MDQ6VXNlcjIzMzU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/233573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seancron", "html_url": "https://github.com/seancron", "followers_url": "https://api.github.com/users/seancron/followers", "following_url": "https://api.github.com/users/seancron/following{/other_user}", "gists_url": "https://api.github.com/users/seancron/gists{/gist_id}", "starred_url": "https://api.github.com/users/seancron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seancron/subscriptions", "organizations_url": "https://api.github.com/users/seancron/orgs", "repos_url": "https://api.github.com/users/seancron/repos", "events_url": "https://api.github.com/users/seancron/events{/privacy}", "received_events_url": "https://api.github.com/users/seancron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 2, "created_at": "2020-06-09T22:33:24Z", "updated_at": "2020-06-17T20:07:32Z", "closed_at": "2020-06-17T20:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen running `dbt compile` on version 0.17, dbt executes a `create schema if not exists` statement if custom schemas are defined. This is a unexpected change as previous versions of dbt did not try to create a schema during `dbt compile`.\r\n\r\n### Steps To Reproduce\r\n1. Install dbt 0.17\r\n2. Setup a dbt project that defines custom schemas in `dbt_project.yml` using version 1 syntax (not sure if it makes a difference).\r\n3. Run `dbt compile` and check Snowflake query history or debug output to see that it tries to create a schema.\r\n\r\n### Expected behavior\r\n`dbt compile` should not try to modify the database when running.\r\n\r\n### Screenshots and log output\r\nSnippet from the `dbt --debug` output:\r\n\r\n```\r\n2020-06-09 22:27:41.474162 (MainThread): Acquiring new snowflake connection \"master\".\r\n2020-06-09 22:27:41.474252 (MainThread): Opening a new connection, currently in state init\r\n2020-06-09 22:27:41.482698 (ThreadPoolExecutor-0_0): Acquiring new snowflake connection \"list_analytics\".\r\n2020-06-09 22:27:41.482933 (ThreadPoolExecutor-0_0): Opening a new connection, currently in state init\r\n2020-06-09 22:27:41.492030 (ThreadPoolExecutor-0_0): Using snowflake connection \"list_analytics\".\r\n2020-06-09 22:27:41.492177 (ThreadPoolExecutor-0_0): On list_analytics: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"connection_name\": \"list_analytics\"} */\r\n\r\n    show terse schemas in database analytics\r\n    limit 10000\r\n2020-06-09 22:27:43.145722 (ThreadPoolExecutor-0_0): SQL status: SUCCESS 171 in 1.65 seconds\r\n2020-06-09 22:27:43.157762 (ThreadPoolExecutor-0_0): Acquiring new snowflake connection \"create_analytics_dev_scronin_compile_test\".\r\n2020-06-09 22:27:43.157916 (ThreadPoolExecutor-0_0): Re-using an available connection from the pool (formerly list_analytics).\r\n2020-06-09 22:27:43.158104 (ThreadPoolExecutor-0_0): Creating schema \"analytics.dev_scronin_compile_test\"\r\n2020-06-09 22:27:43.163265 (ThreadPoolExecutor-0_0): Using snowflake connection \"create_analytics_dev_scronin_compile_test\".\r\n2020-06-09 22:27:43.163414 (ThreadPoolExecutor-0_0): On create_analytics_dev_scronin_compile_test: BEGIN\r\n2020-06-09 22:27:43.339854 (ThreadPoolExecutor-0_0): SQL status: SUCCESS 1 in 0.18 seconds\r\n2020-06-09 22:27:43.340158 (ThreadPoolExecutor-0_0): Using snowflake connection \"create_analytics_dev_scronin_compile_test\".\r\n2020-06-09 22:27:43.340351 (ThreadPoolExecutor-0_0): On create_analytics_dev_scronin_compile_test: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"connection_name\": \"create_analytics_dev_scronin_compile_test\"} */\r\ncreate schema if not exists analytics.dev_scronin_compile_test\r\n2020-06-09 22:27:43.958637 (ThreadPoolExecutor-0_0): SQL status: SUCCESS 1 in 0.62 seconds\r\n2020-06-09 22:27:43.960449 (ThreadPoolExecutor-0_0): On create_analytics_dev_scronin_compile_test: COMMIT\r\n2020-06-09 22:27:43.960655 (ThreadPoolExecutor-0_0): Using snowflake connection \"create_analytics_dev_scronin_compile_test\".\r\n2020-06-09 22:27:43.960765 (ThreadPoolExecutor-0_0): On create_analytics_dev_scronin_compile_test: COMMIT\r\n2020-06-09 22:27:44.145170 (ThreadPoolExecutor-0_0): SQL status: SUCCESS 1 in 0.18 seconds\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.17.0\r\n   latest version: 0.17.0\r\n\r\nUp to date!\r\n\r\nPlugins:\r\n  - bigquery: 0.17.0\r\n  - redshift: 0.17.0\r\n  - postgres: 0.17.0\r\n  - snowflake: 0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nUbuntu 16.04\r\n\r\n**The output of `python --version`:**\r\nPython 3.8.2\r\n\r\n### Additional context\r\n[Original dbt Slack thread](https://getdbt.slack.com/archives/C37J8BQEL/p1591734983452000)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2524", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2524/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2524/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2524/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2524", "id": 635613951, "node_id": "MDU6SXNzdWU2MzU2MTM5NTE=", "number": 2524, "title": "Sprint 49: Core (6/10/2020 - 6/24/2020)", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-09T17:00:38Z", "updated_at": "2020-07-07T15:54:22Z", "closed_at": "2020-07-07T15:54:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2523", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2523/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2523/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2523/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2523", "id": 635613730, "node_id": "MDU6SXNzdWU2MzU2MTM3MzA=", "number": 2523, "title": "Sprint 48: Core (5/27/2020 - 6/10/2020)", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1934138407, "node_id": "MDU6TGFiZWwxOTM0MTM4NDA3", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/Epic", "name": "Epic", "color": "3E4B9E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-09T17:00:17Z", "updated_at": "2020-07-07T15:54:16Z", "closed_at": "2020-07-07T15:54:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2522", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2522/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2522/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2522/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2522", "id": 635613451, "node_id": "MDU6SXNzdWU2MzU2MTM0NTE=", "number": 2522, "title": "Sprint 48: Core (5/27/2020 - 6/10/2020)", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-09T16:59:52Z", "updated_at": "2020-06-09T17:00:06Z", "closed_at": "2020-06-09T17:00:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2520", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2520/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2520/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2520/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2520", "id": 635526989, "node_id": "MDU6SXNzdWU2MzU1MjY5ODk=", "number": 2520, "title": "Implement BigQuery Rename Relation functionality", "user": {"login": "azhard", "id": 2332834, "node_id": "MDQ6VXNlcjIzMzI4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2332834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhard", "html_url": "https://github.com/azhard", "followers_url": "https://api.github.com/users/azhard/followers", "following_url": "https://api.github.com/users/azhard/following{/other_user}", "gists_url": "https://api.github.com/users/azhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhard/subscriptions", "organizations_url": "https://api.github.com/users/azhard/orgs", "repos_url": "https://api.github.com/users/azhard/repos", "events_url": "https://api.github.com/users/azhard/events{/privacy}", "received_events_url": "https://api.github.com/users/azhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666785950, "node_id": "MDU6TGFiZWw2NjY3ODU5NTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bigquery", "name": "bigquery", "color": "0052cc", "default": false, "description": null}, {"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T15:16:21Z", "updated_at": "2020-06-10T15:48:29Z", "closed_at": "2020-06-10T15:48:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nCurrently the BigQuery adapter function that allows you to rename a relation isn't implemented - this feature request simply aims to implement that functionality\r\n\r\n### Describe alternatives you've considered\r\nBased on BigQuery documentation, there is no \"out of the box\" solution for this and instead, you must copy a table and then delete the original one so not much in the terms of alternative ways of handling this.\r\n\r\nhttps://cloud.google.com/bigquery/docs/managing-tables#renaming_a_table\r\n\r\n### Additional context\r\nIt's worth noting that views cannot currently be renamed in BigQuery so support for that cannot be added.\r\n\r\nhttps://cloud.google.com/bigquery/docs/managing-views#renaming_a_view\r\n\r\n### Who will this benefit?\r\nBigQuery dbt users!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2519", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2519/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2519/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2519/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2519", "id": 635517327, "node_id": "MDU6SXNzdWU2MzU1MTczMjc=", "number": 2519, "title": "With --project-dir set, dbt_modules is not honored", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 2, "created_at": "2020-06-09T15:05:05Z", "updated_at": "2020-06-17T20:07:42Z", "closed_at": "2020-06-17T20:07:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nIf you use the `--project-dir` flag, dbt does not look for dependencies in the correct place. The packages.yml/dbt_project.yml/etc is all loaded correctly, but the search for dependencies doesn't appear to honor the project directory.\r\n\r\nI assume it's looking in ./dbt_modules instead of ${project_dir}/dbt_modules, though I haven't looked into it too deeply.\r\n\r\n### Steps To Reproduce\r\n- Create a dbt project that uses a dependency. `dbt_utils` is nice.\r\n- Run dbt deps\r\n- Try to dbt compile your project from a different directory, using `--project-dir`.\r\n\r\n### Expected behavior\r\nThings should work!\r\n\r\n### Screenshots and log output\r\n```\r\nEncountered an error:\r\nRuntime Error\r\n  Compilation Error in model blah (models/blah.sql)\r\n    'dbt_utils' is undefined\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\nAny DB\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0\r\n```\r\n\r\n**The operating system you're using:**\r\nAny OS\r\n\r\n**The output of `python --version`:**\r\nAny Python\r\n\r\n### Additional context\r\nWe have a test for this in the CLI invocation tests, it just doesn't actually use any dependencies so it doesn't hit this error!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2518", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2518/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2518/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2518/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2518", "id": 635503967, "node_id": "MDU6SXNzdWU2MzU1MDM5Njc=", "number": 2518, "title": "Allow floats in package version fields", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 1, "created_at": "2020-06-09T14:53:02Z", "updated_at": "2020-06-17T20:08:01Z", "closed_at": "2020-06-17T20:08:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nA lot of existing packages have versions like `'1.0'`. In native env rendering, this becomes `1.0`, which is a float, and that fails validation. The workaround is to use `\"{{ 1.0 | as_text }}\"`, which people hate. We should just allow users to supply floats for git revisions/package versions and then convert them to strings internally when before doing version-y things.\r\n\r\n### Describe alternatives you've considered\r\nTell people to use `{{ 1.0 | as_text }}`, over and over again.\r\n\r\n### Additional context\r\nThere are other fields, but probably none as egregious as this one.\r\n\r\n### Who will this benefit?\r\nEnd users of packages.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2512", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2512/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2512/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2512/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2512", "id": 630587045, "node_id": "MDU6SXNzdWU2MzA1ODcwNDU=", "number": 2512, "title": "\"docs\" command not recognized", "user": {"login": "patrykkalinowski", "id": 7796424, "node_id": "MDQ6VXNlcjc3OTY0MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7796424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrykkalinowski", "html_url": "https://github.com/patrykkalinowski", "followers_url": "https://api.github.com/users/patrykkalinowski/followers", "following_url": "https://api.github.com/users/patrykkalinowski/following{/other_user}", "gists_url": "https://api.github.com/users/patrykkalinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrykkalinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrykkalinowski/subscriptions", "organizations_url": "https://api.github.com/users/patrykkalinowski/orgs", "repos_url": "https://api.github.com/users/patrykkalinowski/repos", "events_url": "https://api.github.com/users/patrykkalinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/patrykkalinowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T07:39:43Z", "updated_at": "2020-06-08T19:09:48Z", "closed_at": "2020-06-08T19:09:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen I run `dbt docs` in terminal, that's what I get:\r\n```\r\n~/Documents/Code/growth-data/dbt $ dbt docs\r\nusage: dbt [-h] [--version] [-r RECORD_TIMING_INFO] [-d]\r\n           [--log-format {text,json,default}] [--no-write-json] [-S]\r\n           [--warn-error] [--partial-parse | --no-partial-parse]\r\n           {docs,source,init,clean,debug,deps,list,ls,snapshot,rpc,run,compile,test,seed,run-operation}\r\n           ...\r\n\r\nAn ELT tool for managing your SQL transformations and data models. For more\r\ndocumentation on these commands, visit: docs.getdbt.com\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --version             Show version information\r\n  -r RECORD_TIMING_INFO, --record-timing-info RECORD_TIMING_INFO\r\n                        When this option is passed, dbt will output low-level\r\n                        timing stats to the specified file. Example:\r\n                        `--record-timing-info output.profile`\r\n  -d, --debug           Display debug logging during dbt execution. Useful for\r\n                        debugging and making bug reports.\r\n  --log-format {text,json,default}\r\n                        Specify the log format, overriding the command's\r\n                        default.\r\n  --no-write-json       If set, skip writing the manifest and run_results.json\r\n                        files to disk\r\n  -S, --strict          Run schema validations at runtime. This will surface\r\n                        bugs in dbt, but may incur a performance penalty.\r\n  --warn-error          If dbt would normally warn, instead raise an\r\n                        exception. Examples include --models that selects\r\n                        nothing, deprecations, configurations with no\r\n                        associated models, invalid test configurations, and\r\n                        missing sources/refs in tests.\r\n  --partial-parse       Allow for partial parsing by looking for and writing\r\n                        to a pickle file in the target directory. This\r\n                        overrides the user configuration file. WARNING: This\r\n                        can result in unexpected behavior if you use\r\n                        env_var()!\r\n  --no-partial-parse    Disallow partial parsing. This overrides the user\r\n                        configuration file.\r\n\r\nAvailable sub-commands:\r\n  {docs,source,init,clean,debug,deps,list,ls,snapshot,rpc,run,compile,test,seed,run-operation}\r\n    docs                Generate or serve the documentation website for your\r\n                        project.\r\n    source              Manage your project's sources\r\n    init                Initialize a new DBT project.\r\n    clean               Delete all folders in the clean-targets list (usually\r\n                        the dbt_modules and target directories.)\r\n    debug               Show some helpful information about dbt for debugging.\r\n                        Not to be confused with the --debug option which\r\n                        increases verbosity.\r\n    deps                Pull the most recent version of the dependencies\r\n                        listed in packages.yml\r\n    list (ls)           List the resources in your project\r\n    snapshot            Execute snapshots defined in your project\r\n    rpc                 Start a json-rpc server\r\n    run                 Compile SQL and execute against the current target\r\n                        database.\r\n    compile             Generates executable SQL from source model, test, and\r\n                        analysis files. Compiled SQL files are written to the\r\n                        target/ directory.\r\n    test                Runs tests on data in deployed models. Run this after\r\n                        `dbt run`\r\n    seed                Load data from csv files into your data warehouse.\r\n    run-operation       Run the named macro with any supplied arguments.\r\n\r\nSpecify one of these sub-commands and you can find more help from there.\r\n```\r\nEverything else is working well (models, tests etc.)\r\n\r\n### Steps To Reproduce\r\nRun `dbt docs` command\r\n\r\n### Expected behavior\r\nDocumentation should be generated and served\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] postgres\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.16.1\r\n   latest version: 0.16.1\r\n\r\nUp to date!\r\n```\r\n\r\n**The operating system you're using:** OSX 10.15.4\r\n\r\n**The output of `python --version`:** Python 3.7.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2511", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2511/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2511/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2511/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2511", "id": 630174084, "node_id": "MDU6SXNzdWU2MzAxNzQwODQ=", "number": 2511, "title": "Misleading log messages about opening connections", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 705965580, "node_id": "MDU6TGFiZWw3MDU5NjU1ODA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-03T17:13:36Z", "updated_at": "2020-06-08T16:06:35Z", "closed_at": "2020-06-08T16:06:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen dbt is parsing, it assigns a \"connection name\" for each model it's parsing, just in case it's needed. This goes through `set_connection_name`, which logs that it is `Acquiring new postgres connection ...` and `Opening a new connection, ...`. This behavior was very reasonable before dbt lazy-loaded connections, because it's the last centralized place before we end up in the adapter-specific `open` classmethod, so it's a nice place to send that message.\r\n\r\nSince dbt doesn't generally need to access adapter connections during parsing, this log message is extremely misleading, and leads users who inspect the debug logs to believe that what's taking a long time is opening a ton of connections. What's actually (probably) taking a long time is parsing jinja. It would be good to know either way!\r\n\r\nWe should move the message about `Opening a new connection` into the part of `LazyHandle` that calls `open`.\r\n\r\nI would like `Acquiring` to stay (though I'm very open to rewording it) as it's a very useful message in the event of weird threading-related connection issues. We haven't had any of those in a while, but I assume that as soon as we remove the message we'll introduce a slew of connection management problems somehow...\r\n\r\n### Steps To Reproduce\r\n- install dbt\r\n- make a few simple models like `select 1 as id`\r\n- run `dbt ls`\r\n- watch dbt claim to acquire a bunch of connections\r\n\r\n### Expected behavior\r\nAt the end of the day, I don't expect dbt to log that it's \"Opening\" a connection unless we're opening a socket (or at least trying to).\r\n\r\n### Screenshots and log output\r\n```\r\n$ dbt ls\r\n...\r\n2020-06-03 16:46:16.243448 (MainThread): Opening a new connection, currently in state init\r\n2020-06-03 16:46:16.253313 (MainThread): Acquiring new snowflake connection \"test.project.some_test\".\r\n```\r\n\r\n### System information\r\nAny database, any supported python version, any OS, `dbt >= 0.15.1`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2507", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2507/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2507/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2507/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2507", "id": 628371901, "node_id": "MDU6SXNzdWU2MjgzNzE5MDE=", "number": 2507, "title": "create_adpater_plugin bug with --dependency flag", "user": {"login": "scarrucciu", "id": 8050761, "node_id": "MDQ6VXNlcjgwNTA3NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8050761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarrucciu", "html_url": "https://github.com/scarrucciu", "followers_url": "https://api.github.com/users/scarrucciu/followers", "following_url": "https://api.github.com/users/scarrucciu/following{/other_user}", "gists_url": "https://api.github.com/users/scarrucciu/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarrucciu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarrucciu/subscriptions", "organizations_url": "https://api.github.com/users/scarrucciu/orgs", "repos_url": "https://api.github.com/users/scarrucciu/repos", "events_url": "https://api.github.com/users/scarrucciu/events{/privacy}", "received_events_url": "https://api.github.com/users/scarrucciu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-01T11:39:28Z", "updated_at": "2020-06-01T18:43:30Z", "closed_at": "2020-06-01T18:43:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nBug in create_adapter_plugin.py script when a dependency is not passed in via the --dependency arg. \r\n\r\n### Steps To Reproduce\r\nRun the create_adapter_plugin.py script without a --dependency arg. The variable 'prefix' is not defined in the else condition. \r\n\r\n### Expected behavior\r\nThe script should trigger the else condition. \r\n\r\n### Screenshots and log output\r\n\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\nNewest release candidate\r\n```\r\n\r\n**The operating system you're using:**\r\n\r\n**The output of `python --version`:**\r\n\r\n### Additional context\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2504", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2504/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2504/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2504/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2504", "id": 627693377, "node_id": "MDU6SXNzdWU2Mjc2OTMzNzc=", "number": 2504, "title": "DBT 0.17.0rc3 - Compilation failure regression", "user": {"login": "AcidFlow", "id": 2779316, "node_id": "MDQ6VXNlcjI3NzkzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2779316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AcidFlow", "html_url": "https://github.com/AcidFlow", "followers_url": "https://api.github.com/users/AcidFlow/followers", "following_url": "https://api.github.com/users/AcidFlow/following{/other_user}", "gists_url": "https://api.github.com/users/AcidFlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/AcidFlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AcidFlow/subscriptions", "organizations_url": "https://api.github.com/users/AcidFlow/orgs", "repos_url": "https://api.github.com/users/AcidFlow/repos", "events_url": "https://api.github.com/users/AcidFlow/events{/privacy}", "received_events_url": "https://api.github.com/users/AcidFlow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/56", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56/labels", "id": 5127345, "node_id": "MDk6TWlsZXN0b25lNTEyNzM0NQ==", "number": 56, "title": "Octavius Catto", "description": "0.17.0", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2020-02-20T20:56:01Z", "updated_at": "2020-06-10T13:11:00Z", "due_on": null, "closed_at": "2020-06-10T13:11:00Z"}, "comments": 2, "created_at": "2020-05-30T09:57:59Z", "updated_at": "2020-06-02T13:34:54Z", "closed_at": "2020-06-02T13:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nWhen trying to compile a project having some schema tests using `dbt_utils.equality` the compilation fails because the model does not exists.\r\nHowever calling DBT run works.\r\n\r\nThe compilation failure happens when using DBT 0.17.0rc3, however compiling the same project using DBT 0.16.1 succeeds.\r\n\r\n### Steps To Reproduce\r\n\r\nThe following ZIP file includes a dummy project to reproduce the issue.\r\n[dummy.zip](https://github.com/fishtown-analytics/dbt/files/4705434/dummy.zip)\r\n\r\nYou will need to configure a profile for it though.\r\n\r\nExtract the project and run:\r\n```\r\ndbt deps\r\ndbt compile\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nThe compilation succeeds on both DBT 0.16.1 and 0.17.0rc3\r\n\r\n### Actual behavior\r\n\r\nThe compilation succeeds for DBT 0.16.1 and fails for 0.17.0rc3 with the following error:\r\n\r\n```\r\nEncountered an error:\r\nRuntime Error\r\n  Database Error in test dbt_utils_equality_my_second_dbt_model_id__ref_my_first_dbt_model_ (models/example/schema.yml)\r\n    002003 (42S02): SQL compilation error:\r\n    Table 'DB.SCHEMA.MY_SECOND_DBT_MODEL' does not exist or not authorized.\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ndbt --version\r\ninstalled version: 0.17.0-rc3\r\n   latest version: 0.16.1\r\n\r\nYour version of dbt is ahead of the latest release!\r\n\r\nPlugins:\r\n  - snowflake: 0.17.0rc3\r\n  - postgres: 0.17.0rc3\r\n  - redshift: 0.17.0rc3\r\n  - bigquery: 0.17.0rc3\r\n```\r\n\r\n**The operating system you're using:**  Linux Mint 19.3\r\n\r\n\r\n**The output of `python --version`:** Python 3.6.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2503", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2503/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2503/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2503/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2503", "id": 627627244, "node_id": "MDU6SXNzdWU2Mjc2MjcyNDQ=", "number": 2503, "title": "dbt seed --select {model_name} and dbt run --models {model_name} error out when other model dependencies are missing", "user": {"login": "agnesbao", "id": 26316224, "node_id": "MDQ6VXNlcjI2MzE2MjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/26316224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agnesbao", "html_url": "https://github.com/agnesbao", "followers_url": "https://api.github.com/users/agnesbao/followers", "following_url": "https://api.github.com/users/agnesbao/following{/other_user}", "gists_url": "https://api.github.com/users/agnesbao/gists{/gist_id}", "starred_url": "https://api.github.com/users/agnesbao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agnesbao/subscriptions", "organizations_url": "https://api.github.com/users/agnesbao/orgs", "repos_url": "https://api.github.com/users/agnesbao/repos", "events_url": "https://api.github.com/users/agnesbao/events{/privacy}", "received_events_url": "https://api.github.com/users/agnesbao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 339129294, "node_id": "MDU6TGFiZWwzMzkxMjkyOTQ=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-30T01:54:13Z", "updated_at": "2020-06-01T17:54:18Z", "closed_at": "2020-06-01T17:54:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nI am collaborating on the same project with my team and working on a specific model. Under the models/ directory there're other model sql which contains seed data that cannot be shared. \r\n\r\n### Steps To Reproduce\r\nWhen I run `dbt seed --select  {model_name}` or `dbt run --models {model_name}` which only contains my own model, it will error out with: \r\n```\r\nEncountered an error:\r\nCompilation Error in model {other_model} (models/{other_model}.sql)\r\n  Model '{other_model}' (models/{other_model}.sql) depends on a node named '{other_model_seed}' which was not found\r\n```\r\nThe way i get around it is to move the sql in question out of the place temporarily \r\n\r\n### Expected behavior\r\nCan we only check dependencies of specified models when using --select or --models and disregard other independent ones\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [x] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.18.0-a1\r\n   latest version: 0.16.1\r\n\r\nYour version of dbt is ahead of the latest release!\r\n\r\nPlugins:\r\n  - bigquery: 0.18.0a1\r\n  - snowflake: 0.18.0a1\r\n  - redshift: 0.18.0a1\r\n  - postgres: 0.18.0a1\r\n```\r\n\r\n**The operating system you're using:**\r\nmacOS Catalina\r\nversion 10.15.4\r\n\r\n**The output of `python --version`:**\r\nPython 3.6.10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2500", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2500/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2500/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2500/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2500", "id": 627373784, "node_id": "MDU6SXNzdWU2MjczNzM3ODQ=", "number": 2500, "title": "Homebrew package for 0.17.0rc3 has some plugins at the wrong version", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/56", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56/labels", "id": 5127345, "node_id": "MDk6TWlsZXN0b25lNTEyNzM0NQ==", "number": 56, "title": "Octavius Catto", "description": "0.17.0", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2020-02-20T20:56:01Z", "updated_at": "2020-06-10T13:11:00Z", "due_on": null, "closed_at": "2020-06-10T13:11:00Z"}, "comments": 1, "created_at": "2020-05-29T16:02:39Z", "updated_at": "2020-06-02T13:33:46Z", "closed_at": "2020-06-02T13:33:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nThe homebrew formula for 0.17.0rc3 has dbt-postgres, snowflake, and bigquery at `0.16.1`, but redshift and core at 0.17.0-rc3.\r\n\r\n### Steps To Reproduce\r\n- Install from homebrew\r\n- get errors that make no sense and indicate a version mismatch\r\n- be sad\r\n\r\n### Expected behavior\r\nI expect the homebrew package to have all the right versions for things!\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [X] postgres\r\n- [] redshift\r\n- [X] bigquery\r\n- [X] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\nAny OS/Python, 0.17.0-rc3 from homebrew\r\n\r\n### Additional context\r\nSimply inspecting the homebrew formula file is pretty enlightening on this front.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2499", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2499/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2499/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2499/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2499", "id": 627263559, "node_id": "MDU6SXNzdWU2MjcyNjM1NTk=", "number": 2499, "title": "Better error handling for compilation exceptions in .yml files", "user": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-05-29T13:20:05Z", "updated_at": "2020-07-06T17:57:15Z", "closed_at": "2020-07-06T17:54:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nA malformed yml file can result in an error like:\r\n<img width=\"399\" alt=\"Screen Shot 2020-05-29 at 9 15 37 AM\" src=\"https://user-images.githubusercontent.com/1541139/83263674-fa984d00-a18c-11ea-8c52-4148325edaa7.png\">\r\n\r\nInstead, this error should include information about the file in which the errant jinja code was found.\r\n\r\n### Steps To Reproduce\r\nCreate a .yml file with the contents:\r\n```\r\nversion: 2\r\n\r\nmodels:\r\n  - name: debug\r\n    meta:\r\n      abc: 123\r\n\r\n      columns:\r\n        - name: id\r\n          description: '{{ doc(\"mydoc\") }}'\r\n```\r\n\r\nNote that the columns entry is errantly indented under `meta`.\r\n\r\nRun `dbt ls` or `dbt compile` to see the compilation exception.\r\n\r\n### Expected behavior\r\nI would expect to see the filename containing the errant code in the raised exception.\r\n\r\n**The output of `dbt --version`:**\r\n```\r\nv0.17.0-rc3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2496", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2496/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2496/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2496/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2496", "id": 626547100, "node_id": "MDU6SXNzdWU2MjY1NDcxMDA=", "number": 2496, "title": "Exception handler python hook", "user": {"login": "nicku33", "id": 614711, "node_id": "MDQ6VXNlcjYxNDcxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/614711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicku33", "html_url": "https://github.com/nicku33", "followers_url": "https://api.github.com/users/nicku33/followers", "following_url": "https://api.github.com/users/nicku33/following{/other_user}", "gists_url": "https://api.github.com/users/nicku33/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicku33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicku33/subscriptions", "organizations_url": "https://api.github.com/users/nicku33/orgs", "repos_url": "https://api.github.com/users/nicku33/repos", "events_url": "https://api.github.com/users/nicku33/events{/privacy}", "received_events_url": "https://api.github.com/users/nicku33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-28T14:16:12Z", "updated_at": "2020-06-02T23:55:57Z", "closed_at": "2020-06-02T23:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the feature\r\nI'd like to be able to register a function to be called whenever an exception occurs with details about the context it occurred in as well as the raw Exception instance. This is so that we can pass it on to our alerting systems as soon as they happen, with the data structure of the actual exception. Rollbar, for example, uses the stack trace itself to fingerprint exceptions. \r\n\r\n### Describe alternatives you've considered\r\nWe can parse job output, but that seems fragile. As well, with long dbt jobs we have to wait for the end to get alert output. Getting it as they happen would be better.\r\n\r\n### Additional context\r\nAny database, really.\r\n\r\n### Who will this benefit?\r\nData engineers and ops who have pre-existing error processing and logging systems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2495", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2495/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2495/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2495/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2495", "id": 626387587, "node_id": "MDU6SXNzdWU2MjYzODc1ODc=", "number": 2495, "title": "DELETE statement isn't committed within on-run-end hook.", "user": {"login": "dlmiddlecote", "id": 9053880, "node_id": "MDQ6VXNlcjkwNTM4ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9053880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlmiddlecote", "html_url": "https://github.com/dlmiddlecote", "followers_url": "https://api.github.com/users/dlmiddlecote/followers", "following_url": "https://api.github.com/users/dlmiddlecote/following{/other_user}", "gists_url": "https://api.github.com/users/dlmiddlecote/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlmiddlecote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlmiddlecote/subscriptions", "organizations_url": "https://api.github.com/users/dlmiddlecote/orgs", "repos_url": "https://api.github.com/users/dlmiddlecote/repos", "events_url": "https://api.github.com/users/dlmiddlecote/events{/privacy}", "received_events_url": "https://api.github.com/users/dlmiddlecote/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-28T10:11:08Z", "updated_at": "2020-06-10T17:15:22Z", "closed_at": "2020-06-10T17:15:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI have added an `on-run-end` hook to my project, that has a single statement: `DELETE FROM ...` to do some cleanup. However, when I `dbt run`, the data is not cleaned up. If I add `; commit;` to the end of the statement, i.e. `DELETE FROM ...; commit;`, and `dbt run` again, the data is deleted.\r\n\r\n### Steps To Reproduce\r\n\r\nThe behaviour I'm trying to account for is like so:\r\n\r\n```\r\n                   \u250c \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2510\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502              \u2502   \u2502 \u2502              \u2502       \u2502              \u2502 \u2502\r\n\u2502    STREAM    \u2502\u2500\u2500\u2500\u2500\u25b6\u2502    BATCH     \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502    TABLES    \u2502\r\n\u2502              \u2502   \u2502 \u2502              \u2502       \u2502              \u2502 \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                   \u2502                                         \u2502\r\n                     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n                   \u2502 \u2502                                     \u2502 \u2502\r\n                     \u2502    DBT                              \u2502\r\n                   \u2502 \u2502                                     \u2502 \u2502\r\n                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                   \u2514 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2500 \u2518\r\n```\r\n\r\nI have a stream with contains new raw json blobs. With `on-run-start`, I run `INSERT INTO BATCH SELECT RAW FROM STREAM`.\r\n\r\n`BATCH` is then a `source` for dbt, and transforms are made to turn it into some tables.\r\n\r\nAt the end, `on-run-end`, I then want to clean up the BATCH table, running `DELETE FROM BATCH`. This does not commit, however, and I'm left with data in BATCH at the end of a run.\r\n\r\nIn terms of configuration this looks like:\r\n- `dbt_project.yml`\r\n```yml\r\n# Name your project! Project names should contain only lowercase characters\r\n# and underscores. A good package name should reflect your organization's\r\n# name or the intended use of these models\r\nname: \"test\"\r\nversion: \"1.0.0\"\r\n\r\n# This setting configures which \"profile\" dbt uses for this project.\r\nprofile: \"dev\"\r\n\r\n# These configurations specify where dbt should look for different types of files.\r\n# The `source-paths` config, for example, states that models in this project can be\r\n# found in the \"models/\" directory. You probably won't need to change these!\r\nsource-paths: [\"models\"]\r\nanalysis-paths: [\"analysis\"]\r\ntest-paths: [\"tests\"]\r\ndata-paths: [\"data\"]\r\nmacro-paths: [\"macros\"]\r\nsnapshot-paths: [\"snapshots\"]\r\n\r\ntarget-path: \"target\" # directory which will store compiled SQL files\r\nclean-targets: # directories to be removed by `dbt clean`\r\n    - \"target\"\r\n    - \"dbt_modules\"\r\n# Configuring models\r\n# Full documentation: https://docs.getdbt.com/docs/configuring-models\r\n\r\n# In this example config, we tell dbt to build all models in the example/ directory\r\n# as tables. These settings can be overridden in the individual model files\r\n# using the `{{ config(...) }}` macro.\r\n# models:\r\n#     test:\r\n#         # Applies to all files under models/example/\r\n#         example:\r\n#             materialized: view\r\n\r\non-run-start:\r\n    - INSERT INTO BATCH (RAW, TIMESTAMP) SELECT RAW, TIMESTAMP FROM STREAM;\r\n\r\non-run-end:\r\n    - DELETE FROM BATCH [; COMMIT;]\r\n```\r\n\r\n- `schema.yml`\r\n```yml\r\nversion: 2\r\n\r\nsources:\r\n  - name: test\r\n    schema: TEST\r\n    tables:\r\n      - name: BATCH\r\n```\r\n\r\n- `models/test.sql`\r\n```sql\r\n{{ config(materialized='table') }}\r\n\r\nWITH BATCH_LATEST AS (\r\n  SELECT\r\n    CAST(RAW:object_id AS BIGINT)                   AS OBJECT_ID,\r\n    CAST(RAW:version AS INTEGER)                    AS VERSION,\r\n    CAST(RAW:timestamp AS TIMESTAMP WITH TIME ZONE) AS EMITTED_TIMESTAMP,\r\n    RAW,\r\n    ROW_NUMBER() OVER (PARTITION BY RAW:object_id ORDER BY RAW:version DESC) AS RNK\r\n  FROM {{ source('test', 'BATCH') }}\r\n)\r\nSELECT\r\n  ACCOUNT_ID,\r\n  OBJECT_ID,\r\n  VERSION,\r\n  EMITTED_TIMESTAMP,\r\n  RAW\r\nFROM BATCH_LATEST\r\nWHERE RNK = 1\r\n```\r\n\r\n### Expected behavior\r\n\r\nI'd expect the data to be deleted without having to `commit` manually.\r\n\r\n### Screenshots and log output\r\nDebug log output without `; commit;`:\r\n```\r\n2020-05-28 00:02:02.038969 (MainThread): Using snowflake connection \"master\".\r\n2020-05-28 00:02:02.039269 (MainThread): On master: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0b1\", \"profile_name\": \"cdp\", \"target_name\": \"test\", \"connection_name\": \"master\"} */\r\nDELETE FROM <...>;\r\n2020-05-28 00:02:02.910266 (MainThread): SQL status: SUCCESS 5 in 0.87 seconds\r\n```\r\n\r\nDebug log output with `; commit;`:\r\n```\r\n2020-05-28 00:04:17.663912 (MainThread): Using snowflake connection \"master\".\r\n2020-05-28 00:04:17.664125 (MainThread): On master: /* {\"app\": \"dbt\", \"dbt_version\": \"0.17.0b1\", \"profile_name\": \"cdp\", \"target_name\": \"test\", \"connection_name\": \"master\"} */\r\nDELETE FROM <...>;\r\n2020-05-28 00:04:18.553232 (MainThread): SQL status: SUCCESS 5 in 0.89 seconds\r\n2020-05-28 00:04:18.553514 (MainThread): Using snowflake connection \"master\".\r\n2020-05-28 00:04:18.553689 (MainThread): On master: commit;\r\n2020-05-28 00:04:18.884134 (MainThread): SQL status: SUCCESS 1 in 0.33 seconds\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [ ] bigquery\r\n- [x] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0-b1\r\n```\r\n\r\n(This was also the case in 0.16.1).\r\n\r\n**The operating system you're using:** Mac OS\r\n\r\n**The output of `python --version`:** Python 3.8.1\r\n\r\n### Additional context\r\n\r\nThis is my first time using dbt, so I could well be doing something incorrectly...\r\n\r\nAs a side note, my table 'TEST' (from test.sql) also doesn't have any data in it, but when I run the command outputted by the debug logs (i.e. `create or replace table ...`) it does work. Maybe there's a 'commit' issue else where, or something I'm doing wrong...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2494", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2494/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2494/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2494/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2494", "id": 625986741, "node_id": "MDU6SXNzdWU2MjU5ODY3NDE=", "number": 2494, "title": "Intermittent relation does not exist on view model in Redshift", "user": {"login": "grahamlyus", "id": 1108856, "node_id": "MDQ6VXNlcjExMDg4NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1108856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grahamlyus", "html_url": "https://github.com/grahamlyus", "followers_url": "https://api.github.com/users/grahamlyus/followers", "following_url": "https://api.github.com/users/grahamlyus/following{/other_user}", "gists_url": "https://api.github.com/users/grahamlyus/gists{/gist_id}", "starred_url": "https://api.github.com/users/grahamlyus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grahamlyus/subscriptions", "organizations_url": "https://api.github.com/users/grahamlyus/orgs", "repos_url": "https://api.github.com/users/grahamlyus/repos", "events_url": "https://api.github.com/users/grahamlyus/events{/privacy}", "received_events_url": "https://api.github.com/users/grahamlyus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-27T19:53:12Z", "updated_at": "2020-05-27T22:13:26Z", "closed_at": "2020-05-27T22:13:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nWhen running `dbt run`, I intermittently encounter a 'relation does not exist' error for a view model. It's always the same view, but that may be because all other models get skipped after the error.\r\n\r\nI've verified that the view existed before the run command\r\n\r\n### Steps To Reproduce\r\ne.g. `dbt run --target staging`\r\n\r\n### Expected behavior\r\nExpected to recreate the view without failure\r\n\r\n### Screenshots and log output\r\n```\r\n12:39:53 | 14 of 62 ERROR creating view model dbt_staging.identifies_by_day..... [ERROR in 2.08s]\r\n12:39:53 | 15 of 62 START incremental model dbt_staging.lookup_identifies_by_month [RUN]\r\n...\r\nCompleted with 1 error and 0 warnings:\r\n\r\nDatabase Error in model identifies_by_day (models/users/identifies_by_day.sql)\r\n  relation \"dbt_staging.identifies_by_day\" does not exist\r\n  compiled SQL at target/run/faw_segment/users/identifies_by_day.sql\r\n```\r\n\r\nThis appears to be on the operation that renames the existing view to a backup (snippet from logs/dbt.log):\r\n\r\n```\r\n2020-05-27 19:39:52.871333 (Thread-1): On model.faw_segment.identifies_by_day: /* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"faw-segment\", \"target_name\":\r\n \"staging\", \"node_id\": \"model.faw_segment.identifies_by_day\"} */\r\nalter table \"events\".\"dbt_staging\".\"identifies_by_day\" rename to \"identifies_by_day__dbt_backup\"\r\n2020-05-27 19:39:52.970532 (Thread-1): Postgres error: relation \"dbt_staging.identifies_by_day\" does not exist\r\n\r\n2020-05-27 19:39:52.970829 (Thread-1): On model.faw_segment.identifies_by_day: ROLLBACK\r\n2020-05-27 19:39:53.072371 (Thread-1): Error running SQL: macro rename_relation\r\n2020-05-27 19:39:53.072606 (Thread-1): Rolling back transaction.\r\n```\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [ ] postgres\r\n- [X] redshift\r\n- [ ] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.16.1\r\n   latest version: 0.16.1\r\n\r\nUp to date!\r\n```\r\n\r\n**The operating system you're using:**\r\nmacOS 10.15.4, but also happens in production on Amazon Linux 2 AMI 2.0.20200406.0 x86_64 HVM gp2\r\n\r\n**The output of `python --version`:**\r\n\r\n```Python 3.7.7```\r\n\r\n### Additional context\r\n\r\nThis started happening after upgrading from dbt 0.13.1. I've tried going back to 0.15.3, 0.14.4 and it still happens. If I go back to 0.13.1 now I get a `Could not find adapter type redshift!` error.\r\n\r\nHappy to get into specifics on slack - I used the join the community, but have not received any invite to the slack community", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2490", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2490/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2490/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2490/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2490", "id": 625801620, "node_id": "MDU6SXNzdWU2MjU4MDE2MjA=", "number": 2490, "title": "homebrew builds don't work properly and don't fail properly", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/56", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56/labels", "id": 5127345, "node_id": "MDk6TWlsZXN0b25lNTEyNzM0NQ==", "number": 56, "title": "Octavius Catto", "description": "0.17.0", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2020-02-20T20:56:01Z", "updated_at": "2020-06-10T13:11:00Z", "due_on": null, "closed_at": "2020-06-10T13:11:00Z"}, "comments": 1, "created_at": "2020-05-27T15:35:29Z", "updated_at": "2020-06-02T13:34:36Z", "closed_at": "2020-06-02T13:34:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nDuring dbt's build process, when it runs `homebrew-pypi-poet` to look up dependencies, it fails because the version of `protobuf` that is selected by some google dependencies is unbounded, but the newest couple releases don't have source distributions, only binary wheels (and python3.8 on windows is even missing wheels!).\r\nSee https://github.com/protocolbuffers/protobuf/issues/7520 and https://github.com/protocolbuffers/protobuf/issues/7530 for those issues.\r\n\r\nIt looks to me l like they've switched build systems and really want to deprecate the pure-python protobufs implementation that the src package had. I suspect they're only uploading binary wheels produced by the C++ implementation in an attempt to discourage using the pure-python implementation for speed reasons, but of course I have no proof because their build system provides no public information :)\r\n\r\nSo, I see a few issues here:\r\n - obviously we shouldn't use this version of protobuf until it at least supports the platforms we support...\r\n - the build process should have failed when we generated the formula file, before we tried to build bottles\r\n   - I think the only reason this didn't happen is because I removed the homebrew testing part (because some compiler thing is broken on my machine but only for homebrew)\r\n   - but also `homebrew-pypi-poet` just emits a warning + garbage data instead of failing, which is annoying!\r\n\r\n### Steps To Reproduce\r\n- Run the `build-dbt.py` script\r\n- get no errors\r\n- try to install the generated homebrew package\r\n- get errors\r\n- See that the Formula file created has [this garbage](https://github.com/fishtown-analytics/homebrew-dbt/blob/master/Formula/dbt%400.17.0-rc2.rb#L254-L257)\r\n\r\nRunning the `poet` script locally will produce some warnings to stderr if you have an up-to-date protobuf install, but stdout just gets that.\r\n\r\n### Expected behavior\r\nI expect to generate a valid formula for homebrew during builds. I also expect to fail loudly if I don't!\r\n\r\n### Screenshots and log output\r\nIf applicable, add screenshots or log output to help explain your problem.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\nThis is more of a `dbt` package issue, but the cause is isolated to bigquery.\r\n- [ ] postgres\r\n- [ ] redshift\r\n- [X] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0rc3\r\n```\r\n\r\n**The operating system you're using:**\r\nAny (see above about Windows + 3.8 though)\r\n\r\n**The output of `python --version`:**\r\nAny (see above about Windows + 3.8 though)\r\n\r\n### Additional context\r\nI see two ways to fix this:\r\n - lock protobuf to <=3.11.3\r\n - teach homebrew-pypi-poet about wheels\r\n\r\nThe protobuf dependency only exists in dbt-bigquery, so we can set this in the bigquery setup.py and that should work. It looks like the highest dependency there is is upon 3.6.0, so maybe we'll have a while before we have to deal with this and google will have functioning protobuf releases by then.\r\n\r\nI think we can start by just locking protobuf's version, but we should also look to teaching homebrew-pypi-poet about wheels. And getting further on CI builds so we can turn testing back on!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2488", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2488/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2488/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2488/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2488", "id": 625046863, "node_id": "MDU6SXNzdWU2MjUwNDY4NjM=", "number": 2488, "title": "The link in the default `profiles.yml` is `Page not found`", "user": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 497167169, "node_id": "MDU6TGFiZWw0OTcxNjcxNjk=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/58", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/58/labels", "id": 5364218, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxOA==", "number": 58, "title": "Marian Anderson", "description": "dbt v0.18.0 release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 28, "state": "open", "created_at": "2020-04-29T16:28:50Z", "updated_at": "2020-08-19T19:39:04Z", "due_on": "2020-08-19T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2020-05-26T17:14:13Z", "updated_at": "2020-07-06T19:03:23Z", "closed_at": "2020-07-06T17:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nThe link in the default `profiles.yml` is `Page not found`:\r\n\r\n```\r\n# For more information on how to configure this file, please see:\r\n# https://docs.getdbt.com/docs/profile\r\n```\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.16.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2487", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2487/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2487/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2487/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2487", "id": 624972465, "node_id": "MDU6SXNzdWU2MjQ5NzI0NjU=", "number": 2487, "title": "dbt catalog doesn't support missing \"database\" fields", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129290, "node_id": "MDU6TGFiZWwzMzkxMjkyOTA=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T15:26:19Z", "updated_at": "2020-05-27T17:44:10Z", "closed_at": "2020-05-27T17:44:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the feature\r\nThe dbt catalog functionality doesn't support missing database fields.\r\n\r\nIn a number of places, dbt expects database to be a `str`, but we should allow it to be `None` for some databases that don't have support for databases.\r\n\r\n- Catalogs should be allowed to set the database to None for data warehouses that don't have them.\r\n- list_relations should be allowed to take `None` for its database\r\n  - on most data warehouses, `None` should either be an error or mean target.database.\r\n  - on Spark, anything but `None` or the schema would be an error.\r\n- get_relation should get the same treatment\r\n- That's probably it?\r\n\r\n\r\nShould this be extended to schemas?\r\n\r\n### Describe alternatives you've considered\r\nWe can set `database=''` everywhere. Kind of ugly! I would like to be able to differentiate \"this component does not exist/has no meaning\" vs \"this is the empty string\"...\r\nEdit: This actually doesn't work without writing a bunch of new agate type tester things because by default, `''` is coerced into `None` (which makes sense for seeds!).\r\n\r\n### Additional context\r\nThis is mostly relevant for Spark.\r\n\r\n### Who will this benefit?\r\nSpark users, developers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2486", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2486/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2486/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2486/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2486", "id": 624222742, "node_id": "MDU6SXNzdWU2MjQyMjI3NDI=", "number": 2486, "title": "Threads cannot be set from an environment variable", "user": {"login": "keiththompson", "id": 3908455, "node_id": "MDQ6VXNlcjM5MDg0NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3908455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keiththompson", "html_url": "https://github.com/keiththompson", "followers_url": "https://api.github.com/users/keiththompson/followers", "following_url": "https://api.github.com/users/keiththompson/following{/other_user}", "gists_url": "https://api.github.com/users/keiththompson/gists{/gist_id}", "starred_url": "https://api.github.com/users/keiththompson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keiththompson/subscriptions", "organizations_url": "https://api.github.com/users/keiththompson/orgs", "repos_url": "https://api.github.com/users/keiththompson/repos", "events_url": "https://api.github.com/users/keiththompson/events{/privacy}", "received_events_url": "https://api.github.com/users/keiththompson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/56", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56/labels", "id": 5127345, "node_id": "MDk6TWlsZXN0b25lNTEyNzM0NQ==", "number": 56, "title": "Octavius Catto", "description": "0.17.0", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2020-02-20T20:56:01Z", "updated_at": "2020-06-10T13:11:00Z", "due_on": null, "closed_at": "2020-06-10T13:11:00Z"}, "comments": 3, "created_at": "2020-05-25T10:56:02Z", "updated_at": "2020-06-02T13:46:53Z", "closed_at": "2020-06-02T13:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nThreads cannot be configured with an environment variable.\r\n\r\n### Steps To Reproduce\r\nSetting an environment variable \"THREADS\" with my profile set as \r\n`threads: \"{{ env_var('THREADS') }}\"` throws the following error:\r\n```\r\nEncountered an error while reading profiles:\r\n  ERROR Runtime Error\r\n  at path ['threads']: '8' is not of type 'integer'\r\n```\r\n\r\n### Expected behavior\r\nIn this example, I would have expected the run command to work with 8 threads.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] postgres\r\n- [ ] redshift\r\n- [x] bigquery\r\n- [ ] snowflake\r\n- [ ] other (specify: ____________)\r\n\r\n\r\n**The output of `dbt --version`:**\r\n```\r\ninstalled version: 0.15.2\r\nlatest version: 0.16.1\r\n```\r\n\r\n**MacOs + Linux**\r\n\r\n**The output of `python --version`:**\r\n```\r\nPython 3.7.4\r\n```\r\n\r\n### Additional context\r\nThis seems to work fine with ports but not for threads. It may also be an issue with other fields that expect integers like Timeouts / Retries in BigQuery profiles. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2484", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2484/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2484/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2484/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2484", "id": 623472025, "node_id": "MDU6SXNzdWU2MjM0NzIwMjU=", "number": 2484, "title": "Parallel compile_sql requests to dbt RPC server cause tasks to never exit the running state.", "user": {"login": "jars", "id": 757192, "node_id": "MDQ6VXNlcjc1NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/757192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jars", "html_url": "https://github.com/jars", "followers_url": "https://api.github.com/users/jars/followers", "following_url": "https://api.github.com/users/jars/following{/other_user}", "gists_url": "https://api.github.com/users/jars/gists{/gist_id}", "starred_url": "https://api.github.com/users/jars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jars/subscriptions", "organizations_url": "https://api.github.com/users/jars/orgs", "repos_url": "https://api.github.com/users/jars/repos", "events_url": "https://api.github.com/users/jars/events{/privacy}", "received_events_url": "https://api.github.com/users/jars/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1288817952, "node_id": "MDU6TGFiZWwxMjg4ODE3OTUy", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/rpc", "name": "rpc", "color": "a9f1fc", "default": false, "description": "Issues related to dbt's RPC server"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/57", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/57/labels", "id": 5364213, "node_id": "MDk6TWlsZXN0b25lNTM2NDIxMw==", "number": 57, "title": "0.17.1", "description": "Bugfix release", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2020-04-29T16:25:43Z", "updated_at": "2020-07-22T17:16:15Z", "due_on": null, "closed_at": "2020-07-22T17:16:15Z"}, "comments": 13, "created_at": "2020-05-22T20:57:50Z", "updated_at": "2020-06-21T22:49:13Z", "closed_at": "2020-06-18T18:39:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\n#### Parallel `compile_sql` requests (at just moderate volumes) to dbt RPC server cause tasks to never exit the `running` state. We also notice several child dbt rpc processes getting created, which may or may not be symptomatic of the perpetual `running` state.\r\n\r\n### Steps To Reproduce\r\n\r\nUse the following Dockerfile, which uses the dbt official image, simply extend it to use the root user, install `ps` linux utility, and bootstrap a project w/ `dbt init`:\r\n\r\n```Dockerfile\r\nFROM fishtownanalytics/dbt:0.16.1\r\nUSER root\r\n# We need ps to see the spawned dbt rpc processes.\r\nRUN apt-get update && apt-get install -y procps\r\nWORKDIR /\r\nRUN dbt init my_project\r\nWORKDIR /my_project\r\n``` \r\n\r\nOn the host, cd into the directory that contains this `Dockerfile` and run:\r\n\r\n```bash\r\n# build the image:\r\ndocker build --no-cache -t dbt_issue_2484 .\r\n# run the dbt rpc server, exposing port 8580 to the host\r\ndocker run --publish 8580:8580 -it dbt_issue_2484 dbt rpc\r\n```\r\n\r\n---\r\n\r\nWith the rpc server running, in another terminal, find the running Docker container, and bash-in so we can watch the process list with `ps`:\r\n\r\n```bash\r\n[sudo] docker ps\r\n<get container id>\r\n[sudo] docker exec -it <container id> bash \r\n``` \r\n\r\nNow, inside the container \"watch\" the instance of dbt rpc, which there will be only one, for now:\r\n\r\n```bash\r\nwatch 'ps aux | grep rpc'\r\n```\r\n\r\n----\r\n\r\nNow, back on the host machine, let's hit the RPC server w/ multiple, serial `compile_sql` requests to show it works. \r\n\r\nCreate a file called `my_first_query.json` w/ contents (straight out of the official docs) - Note the `TASK_ID` we will fill-in w/ a random number for each request, using `sed`, in a moment.\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"compile_sql\",\r\n    \"id\": \"TASK_ID\",\r\n    \"params\": {\r\n        \"timeout\": 60,\r\n        \"sql\": \"c2VsZWN0IHt7IDEgKyAxIH19IGFzIGlk\",\r\n        \"name\": \"my_first_query\"\r\n    }\r\n}\r\n```\r\n\r\nThen create a `poll.json`:\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"poll\",\r\n    \"id\": \"TASK_ID\",\r\n    \"params\": {\r\n        \"request_token\": \"TOKEN\",\r\n        \"logs\": false,\r\n        \"logs_start\": 0\r\n    }\r\n}\r\n```\r\n\r\nAnd two shell scripts, one to `compile_sql` and the other to `poll` for results:\r\n\r\n**`compile_sql.sh`**:\r\n\r\n```\r\n#!/bin/bash\r\n\r\nid=$RANDOM\r\n# get the contents of my_first_query and change TASK_ID to a random int.\r\nquery_json=$(cat my_first_query.json | sed --expression \"s/TASK_ID/$id/g\")\r\n# we only really need the token back.\r\ncurl -s -X POST -H 'Content-Type: application/json' -d \"$query_json\" http://localhost:8580/jsonrpc | jq -r .result.request_token\r\n```\r\n\r\n**`poll.sh`** (which takes a token as its only arg):\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\ntoken=$1\r\nid=$RANDOM\r\n\r\npoll_json=$(cat poll.json | sed --expression \"s/TOKEN/$token/g\" | sed --expression \"s/TASK_ID/$id/g\")\r\n# truncates response to just state and elapsed time.\r\ncurl -s -X POST -H 'Content-Type: application/json' -d \"$poll_json\" http://localhost:8580/jsonrpc | jq '.result | .state, .elapsed'\r\n```\r\n\r\nNow, chmod em' and try them:\r\n\r\n```bash\r\n> ./compile_sql.sh\r\n1c5368d0-d610-4efd-99e7-dda256d3ede0\r\n./poll.sh 1c5368d0-d610-4efd-99e7-dda256d3ede0\r\n\"success\"\r\n0.113002\r\n```\r\n\r\nGreat! Also note that the process list still contains a single dbt rpc.\r\n\r\nNow, let's go parallel. Make a `parallel.sh` script w/ the following contents. This will invoke the `compile_sql.sh` script 20 times with max processes of 8.\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\nxargs -I % -P 8 ./compile_sql.sh \\\r\n< <(printf '%s\\n' {1..20})\r\n```\r\n\r\nThen run it:\r\n\r\n```bash\r\n./parallel.sh\r\na28e2ceb-a6c5-41d7-bbc6-b03eed263f1e\r\nda6339a3-37ed-4e66-9fd4-d51dd247812a\r\n450fd50d-5a4f-4649-b7d7-9ac2dda89f67\r\n1cc385d0-7a27-4193-bf11-126b3f9b0490\r\n93039ba2-d2fb-4b75-a84a-d7e1bd27b9ab\r\n02fa72e4-c75e-42fe-ac60-36d184399031\r\n920c0796-eac3-4106-b1ed-e62f2d29e498\r\ne45bed44-3908-45b9-9a03-bc55bb19fcdb\r\n788bb3f9-5e6c-4001-8990-cd74450117bf\r\n6e41947d-0b23-4f01-9edb-8b823e86644a\r\nb699d934-07ba-4378-9b4e-61d6805eb629\r\ne37b1a70-a63b-4142-a8eb-434e6bb8d947\r\ne7a9101c-5625-48d3-a313-4438bd77bee0\r\n5b1d98de-7d71-40c7-b0ff-4ce9296db977\r\n...\r\n...\r\n```\r\n\r\nNow, notice your `ps` output. It will likely contain child dbt rpc processes. This could be expected behaviour, we're not sure; but we did find that once this happens, thats when the polls go into perpetual running state. If you do not have multiple dbt rpc processes, run this again until you do.\r\n\r\nFinally, now for the star of the show... try polling again. Try some of the tokens printed to your CLI:\r\n\r\n```bash\r\n./poll.sh 5b1d98de-7d71-40c7-b0ff-4ce9296db977\r\n\"running\"\r\n89.967127\r\n```\r\n\r\nNote, this is `my_first_query.sql` i.e, a simple `select {{ 1 + 1 }} as id` has been running for 89 seconds now, and will never terminate and provide results.  \r\n\r\nIn addition, the dbt rpc server is now toast. :bread: Any subsequent `compile_sql` or `poll` requests will never return results. \r\n\r\n---\r\n\r\nSorry, that is a bit long-winded. It's a specific workflow that needs to be followed to produce this behaviour.\r\n\r\n### Expected behavior\r\n\r\nAt any volume, dbt rpc should eventually complete `compile_sql` requests.\r\n\r\n### System information\r\n**Which database are you using dbt with?**\r\n- [x] redshift\r\n\r\nTechnically redshift, but only because the default `dbt init` sets up a RedShift `profiles.yml` by default. We are running `compile_sql` dbt RPC function only, so, there are no real `dbt runs` happening on any warehouse.\r\n\r\n**The output of `dbt --version`:**\r\n\r\n```bash\r\ndocker run dbt_issue_2484 dbt --version\r\ninstalled version: 0.16.1\r\n   latest version: 0.16.1\r\n\r\nUp to date!\r\n\r\n```\r\n\r\n**The operating system you're using:**\r\n\r\nThe one that underlies dbt blessed Docker:\r\n\r\n```bash\r\ndocker run dbt_issue_2484 lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tDebian\r\nDescription:\tDebian GNU/Linux 10 (buster)\r\nRelease:\t10\r\nCodename:\tbuster\r\n```\r\n\r\n**The output of `python --version`:**\r\n```\r\ndocker run dbt_issue_2484 python --version\r\nPython 3.8.1\r\n```\r\n\r\n### Additional context\r\n\r\nThis is actually effecting a (small, but important part of a) production application for us. We're happy to hot-patch files rather than wait until the next release, if possible. So, if you have any easy fixes, please let us know.\r\n\r\nPossibly related to https://github.com/fishtown-analytics/dbt/issues/1848\r\n\r\nHappy Friday :tada: \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2480", "repository_url": "https://api.github.com/repos/fishtown-analytics/dbt", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2480/labels{/name}", "comments_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2480/comments", "events_url": "https://api.github.com/repos/fishtown-analytics/dbt/issues/2480/events", "html_url": "https://github.com/fishtown-analytics/dbt/issues/2480", "id": 622642472, "node_id": "MDU6SXNzdWU2MjI2NDI0NzI=", "number": 2480, "title": "docs/schema.yml parsing can be very slow at large scales", "user": {"login": "beckjake", "id": 452302, "node_id": "MDQ6VXNlcjQ1MjMwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/452302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckjake", "html_url": "https://github.com/beckjake", "followers_url": "https://api.github.com/users/beckjake/followers", "following_url": "https://api.github.com/users/beckjake/following{/other_user}", "gists_url": "https://api.github.com/users/beckjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckjake/subscriptions", "organizations_url": "https://api.github.com/users/beckjake/orgs", "repos_url": "https://api.github.com/users/beckjake/repos", "events_url": "https://api.github.com/users/beckjake/events{/privacy}", "received_events_url": "https://api.github.com/users/beckjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 339129288, "node_id": "MDU6TGFiZWwzMzkxMjkyODg=", "url": "https://api.github.com/repos/fishtown-analytics/dbt/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56", "html_url": "https://github.com/fishtown-analytics/dbt/milestone/56", "labels_url": "https://api.github.com/repos/fishtown-analytics/dbt/milestones/56/labels", "id": 5127345, "node_id": "MDk6TWlsZXN0b25lNTEyNzM0NQ==", "number": 56, "title": "Octavius Catto", "description": "0.17.0", "creator": {"login": "drewbanin", "id": 1541139, "node_id": "MDQ6VXNlcjE1NDExMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1541139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbanin", "html_url": "https://github.com/drewbanin", "followers_url": "https://api.github.com/users/drewbanin/followers", "following_url": "https://api.github.com/users/drewbanin/following{/other_user}", "gists_url": "https://api.github.com/users/drewbanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbanin/subscriptions", "organizations_url": "https://api.github.com/users/drewbanin/orgs", "repos_url": "https://api.github.com/users/drewbanin/repos", "events_url": "https://api.github.com/users/drewbanin/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbanin/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2020-02-20T20:56:01Z", "updated_at": "2020-06-10T13:11:00Z", "due_on": null, "closed_at": "2020-06-10T13:11:00Z"}, "comments": 1, "created_at": "2020-05-21T16:59:49Z", "updated_at": "2020-06-10T13:10:51Z", "closed_at": "2020-06-10T13:10:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nThis is similar to #2474 (and comes out of the same issue). Docs parsing can be really slow if you have lots of docs and large numbers of schema.yml entries that reference them. There's a few things about it that are \"slow\":\r\n\r\n - we render a lot of fields, and rendering jinja is slow\r\n   - This is hard, so I won't talk about it\r\n - we search for docs using doc() a lot, and searching for docs scales like garbage\r\n   - I'll discuss this below\r\n - loading yaml can be slow\r\n   - This isn't fixable, but we can minimize it for some users (see below)\r\n\r\n### Steps To Reproduce\r\n1) Make a project with lots of docs blocks. 50,000 is a nice number\r\n2) Make a corresponding number of models/sources and call `doc` pointing at those docs in their description fields\r\n3) Run dbt compile\r\n4) Wait a pretty long time\r\n\r\n#2474 fixed a significant regression in 0.17.0, but I believe this behavior has existed for a long time (and this behavior still exists with that PR applied).\r\n\r\n### Expected behavior\r\nI expect ~O(n) runtime scaling! I guess O(n*log(n)) I'd accept if we have to sort things, but I don't think we do.\r\n\r\n### System information\r\nI believe this problem is cross-platform, cross-db, and cross-python. Newer python versions will probably be faster, but doing fewer things is better everywhere.\r\n\r\n**The output of `dbt --version`:**\r\n```\r\n0.17.0rc1\r\n```\r\n### Additional context\r\n\r\n#### Scaling `doc()`\r\nI haven't made any charts about how it scales, but eyeballing `profile` results it looks like the search algorithm is making O(n^2) calls (I expected O(n) here \ud83d\ude15 ), so if you have N docs your time spent will go as O(n^3). That's not great!\r\n\r\nThe search algorithm is bad because it's a very simple representation of the goal:\r\n - if a package is supplied, search for a package + doc name pair\r\n - if no package is supplied, search for the caller's package + doc name, then the active project package + doc name, then \"anywhere\" + doc name\r\n\r\nWe should make search constant-time if we can, and that will help a lot. I don't know how/if I'd hope to avoid calling `doc()` n times, so that's probably an O(n) minimum!\r\n\r\nThe easy thing to do to fix this is to create a `Dict[DocName, Dict[ProjectName, ParsedDocumentation]]` once, and then lookups can do their package-specific searches using a two-level lookup (name first, _then_ package). I  have some code in a branch that does this, but I want to think about it more.\r\n\r\n`ref` and `source` resolution behave pretty similar to docs and probably have the same problems, but I've spent zero time looking at it.\r\n\r\n#### Faster yaml loading\r\n\r\nIf you have a lot of sources, dbt is going to run `yaml.safe_load` a lot, and that can be slow. By default, PyYAML is written in pure python, but there's a built in C module capability. If you have libyaml installed and pypi knows about it (on linux I think you only have to `apt-get install libyaml-dev` before you `pip install`), then `yaml.CSafeLoader` is available, and you can change `yaml.safe_load(whatever)` to `yaml.load(whatever, Loader=yaml.CSafeLoader)`. The performance gains are substantial at scale.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}