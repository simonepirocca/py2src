{"total_count": 331, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/agronholm/apscheduler/issues/448", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/448/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/448/events", "html_url": "https://github.com/agronholm/apscheduler/issues/448", "id": 663040187, "node_id": "MDU6SXNzdWU2NjMwNDAxODc=", "number": 448, "title": "How to add custom SchedulerEvent?", "user": {"login": "5uw1st", "id": 17830753, "node_id": "MDQ6VXNlcjE3ODMwNzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/17830753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5uw1st", "html_url": "https://github.com/5uw1st", "followers_url": "https://api.github.com/users/5uw1st/followers", "following_url": "https://api.github.com/users/5uw1st/following{/other_user}", "gists_url": "https://api.github.com/users/5uw1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/5uw1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5uw1st/subscriptions", "organizations_url": "https://api.github.com/users/5uw1st/orgs", "repos_url": "https://api.github.com/users/5uw1st/repos", "events_url": "https://api.github.com/users/5uw1st/events{/privacy}", "received_events_url": "https://api.github.com/users/5uw1st/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T14:02:34Z", "updated_at": "2020-07-21T15:28:46Z", "closed_at": "2020-07-21T15:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to record job execution\uff0cfor example, job start, job finished\uff0cbut  there is no api to add custom event, so how to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/447", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/447/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/447/events", "html_url": "https://github.com/agronholm/apscheduler/issues/447", "id": 662037847, "node_id": "MDU6SXNzdWU2NjIwMzc4NDc=", "number": 447, "title": "AsyncIOScheduler not triggering with ProactorEventLoop or SelectorEventLoop", "user": {"login": "keethesh", "id": 30286645, "node_id": "MDQ6VXNlcjMwMjg2NjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/30286645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keethesh", "html_url": "https://github.com/keethesh", "followers_url": "https://api.github.com/users/keethesh/followers", "following_url": "https://api.github.com/users/keethesh/following{/other_user}", "gists_url": "https://api.github.com/users/keethesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/keethesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keethesh/subscriptions", "organizations_url": "https://api.github.com/users/keethesh/orgs", "repos_url": "https://api.github.com/users/keethesh/repos", "events_url": "https://api.github.com/users/keethesh/events{/privacy}", "received_events_url": "https://api.github.com/users/keethesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T16:53:00Z", "updated_at": "2020-07-20T20:21:42Z", "closed_at": "2020-07-20T20:21:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\nThe function must be triggered when using one of these\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\nThe function doesn't get triggered\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n### This doesn't work\r\n```python3\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\n\r\nscheduler = AsyncIOScheduler()\r\nif sys.platform == \"win32\":\r\n    loop = asyncio.ProactorEventLoop()\r\nelse:\r\n    loop = asyncio.SelectorEventLoop()\r\nasyncio.set_event_loop(loop)\r\nloop = asyncio.get_event_loop()\r\n\r\nscheduler.add_job(async_func, trigger=\"cron\",\r\n                              hour=11, minute=11)\r\nscheduler.start()\r\nloop.run_forever()\r\n```\r\n### But this does\r\n```python3\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\n\r\nscheduler = AsyncIOScheduler()\r\nloop = asyncio.get_event_loop()\r\n\r\nscheduler.add_job(async_func, trigger=\"cron\",\r\n                              hour=11, minute=11)\r\nscheduler.start()\r\nloop.run_forever()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/446", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/446/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/446/events", "html_url": "https://github.com/agronholm/apscheduler/issues/446", "id": 657405359, "node_id": "MDU6SXNzdWU2NTc0MDUzNTk=", "number": 446, "title": "Code and tests are broken", "user": {"login": "lhfelis", "id": 60291241, "node_id": "MDQ6VXNlcjYwMjkxMjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/60291241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhfelis", "html_url": "https://github.com/lhfelis", "followers_url": "https://api.github.com/users/lhfelis/followers", "following_url": "https://api.github.com/users/lhfelis/following{/other_user}", "gists_url": "https://api.github.com/users/lhfelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhfelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhfelis/subscriptions", "organizations_url": "https://api.github.com/users/lhfelis/orgs", "repos_url": "https://api.github.com/users/lhfelis/repos", "events_url": "https://api.github.com/users/lhfelis/events{/privacy}", "received_events_url": "https://api.github.com/users/lhfelis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T14:39:13Z", "updated_at": "2020-07-15T14:43:26Z", "closed_at": "2020-07-15T14:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\n* `pip install .` OK\r\n* `pytest` OK\r\n\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n* `pip install .` Fails. `cbor2` is missed and `dateutil` should be `python-dateutil` in dependency.\r\n* `pytest` Fails. Number of error cases is huge.\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Clone from `master` branch\r\n2. Setup local python environment\r\n3. `pip install .` or `pip install -e .`, with all the extras installed. I failed here, and succeeded after added `cbor2` and changed `dateutil` to `python-dateutil` in `setup.cfg[[options]install_requires]`.\r\n4. `pytest` failed with more than 100 errors.\r\n\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI just wanted to play with the code but found that both the code and tests are broken.\r\nMaybe I can help fix the tests but after some effort I failed. \r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n1. In `setup.cfg[[options]install_requires]`,  `cbor2` is missed. `dateutil` is typo and should be `python-dateutil`.\r\n2. `apscheduler.triggers.base` related code are broken since refactoring in commit `17a353f073a5e34bf033ad0013577063fcf6741c`.\r\n3. Some test fixture missing after refactoring.\r\n4. `apscheduler.triggers` could not be loaded correctly as plugins.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/443", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/443/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/443/events", "html_url": "https://github.com/agronholm/apscheduler/issues/443", "id": 648485239, "node_id": "MDU6SXNzdWU2NDg0ODUyMzk=", "number": 443, "title": "Task is not properly added to sceduler", "user": {"login": "matej2", "id": 11059438, "node_id": "MDQ6VXNlcjExMDU5NDM4", "avatar_url": "https://avatars3.githubusercontent.com/u/11059438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matej2", "html_url": "https://github.com/matej2", "followers_url": "https://api.github.com/users/matej2/followers", "following_url": "https://api.github.com/users/matej2/following{/other_user}", "gists_url": "https://api.github.com/users/matej2/gists{/gist_id}", "starred_url": "https://api.github.com/users/matej2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matej2/subscriptions", "organizations_url": "https://api.github.com/users/matej2/orgs", "repos_url": "https://api.github.com/users/matej2/repos", "events_url": "https://api.github.com/users/matej2/events{/privacy}", "received_events_url": "https://api.github.com/users/matej2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-30T20:52:40Z", "updated_at": "2020-07-02T08:25:00Z", "closed_at": "2020-07-02T08:25:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\nTask would be added to sceduler and ran in random amount of seconds (from 1 to 3)\r\n\r\n## Current Behavior\r\n\r\nclock.py:\r\n```py\r\nimport asyncio\r\nimport os\r\nfrom datetime import datetime\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\nfrom trigger import RandomIntervalTrigger\r\n\r\ndef tick():\r\n    print(f'Tick! Current time is {datetime.now()}, Next scedule is: {RandomIntervalTrigger(hours=3, minutes=55, seconds=59, timezone=\"Europe/Rome\").get_next_fire_time(None, datetime.now())}')\r\n\r\n\r\nif __name__ == '__main__':\r\n    scheduler = AsyncIOScheduler()\r\n    scheduler.add_job(tick, RandomIntervalTrigger(seconds=3))\r\n    scheduler.start()\r\n    print('Press Ctrl+{0} to exit'.format('Break' if os.name == 'nt' else 'C'))\r\n\r\n    # Execution will block here until Ctrl+C (Ctrl+Break on Windows) is pressed.\r\n    try:\r\n        asyncio.get_event_loop().run_forever()\r\n    except (KeyboardInterrupt, SystemExit):\r\n        pass\r\n```\r\n\r\ntrigger.py\r\n```py\r\nfrom apscheduler.triggers.interval import IntervalTrigger\r\nfrom datetime import timedelta\r\nfrom datetime import datetime\r\nimport random\r\n\r\n\r\nclass RandomIntervalTrigger(IntervalTrigger):\r\n    def __init__(self, weeks=0, days=0, hours=0, minutes=0, seconds=0, start_date=None, end_date=None, timezone=None,\r\n                 jitter=None):\r\n        # Saving the parameters\r\n        self.__weeks = weeks\r\n        self.__days = days\r\n        self.__hours = hours\r\n        self.__minutes = minutes\r\n        self.__seconds = seconds\r\n\r\n        # Creating the random parameters\r\n        weeks = random.randint(1, weeks) if weeks != 0 else weeks\r\n        days = random.randint(1, days) if days != 0 else days\r\n        hours = random.randint(1, hours) if hours != 0 else hours\r\n        minutes = random.randint(1, minutes) if minutes != 0 else minutes\r\n        seconds = random.randint(1, seconds) if seconds != 0 else seconds\r\n\r\n        # Initializating the trigger\r\n        super().__init__(weeks, days, hours, minutes, seconds, start_date, end_date, timezone, jitter)\r\n\r\n    def get_next_fire_time(self, previous_fire_time: datetime, now: datetime):\r\n        # Creating the random parameters\r\n        weeks = random.randint(1, self.__weeks) if self.__weeks != 0 else self.__weeks\r\n        days = random.randint(1, self.__days) if self.__days != 0 else self.__days\r\n        hours = random.randint(1, self.__hours) if self.__hours != 0 else self.__hours\r\n        minutes = random.randint(1, self.__minutes) if self.__minutes != 0 else self.__minutes\r\n        seconds = random.randint(1, self.__seconds) if self.__seconds != 0 else self.__seconds\r\n\r\n        # Generating the new scheduling time\r\n        offset = timedelta(days=days, seconds=seconds, minutes=minutes, hours=hours, weeks=weeks)\r\n\r\n        if previous_fire_time is None:\r\n            previous_fire_time = now\r\n\r\n        new_time = previous_fire_time + offset\r\n\r\n        return new_time\r\n\r\n```\r\n\r\nPipfile:\r\n```\r\n[packages]\r\napscheduler = \"*\"\r\nrequests = \"*\"\r\n\r\n[requires]\r\npython_version = \"3.6\"\r\n```\r\n\r\nOutput:\r\n\r\n> Press Ctrl+C to exit\r\n\r\nThe task does not run. I think that this is a bug. \r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Create required files\r\n2. Pipenv install\r\n3. Pipenv shell\r\n4. Run `python3 clock.py`\r\n\r\n## Context (Environment)\r\n\r\nAs described, I want to scedule tasks at random times by using IntervalTrigger. I want it to run on Heroku. I am using Python version 3.6.8, pipenv version 2020.6.2 and apsceduler version 3.6.3\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/435", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/435/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/435/events", "html_url": "https://github.com/agronholm/apscheduler/issues/435", "id": 628194801, "node_id": "MDU6SXNzdWU2MjgxOTQ4MDE=", "number": 435, "title": "Why sqlalchemy jobstores remove job whether it is executed or not?", "user": {"login": "akshaybhuradia2020", "id": 42959295, "node_id": "MDQ6VXNlcjQyOTU5Mjk1", "avatar_url": "https://avatars1.githubusercontent.com/u/42959295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshaybhuradia2020", "html_url": "https://github.com/akshaybhuradia2020", "followers_url": "https://api.github.com/users/akshaybhuradia2020/followers", "following_url": "https://api.github.com/users/akshaybhuradia2020/following{/other_user}", "gists_url": "https://api.github.com/users/akshaybhuradia2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshaybhuradia2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshaybhuradia2020/subscriptions", "organizations_url": "https://api.github.com/users/akshaybhuradia2020/orgs", "repos_url": "https://api.github.com/users/akshaybhuradia2020/repos", "events_url": "https://api.github.com/users/akshaybhuradia2020/events{/privacy}", "received_events_url": "https://api.github.com/users/akshaybhuradia2020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-01T06:42:45Z", "updated_at": "2020-06-01T08:08:46Z", "closed_at": "2020-06-01T08:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "My use case  : I dont want to delete record from table.\r\n\r\ncan we add more column to this table.\r\n\r\nIf it is possible then add 'isactive' column which is used for checking whether this record is active or not.\r\n\r\nIf 'isactive' == 0 : then record is active in future it is going to execute.\r\nelse this record is executed already.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/433", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/433/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/433/events", "html_url": "https://github.com/agronholm/apscheduler/issues/433", "id": 614695127, "node_id": "MDU6SXNzdWU2MTQ2OTUxMjc=", "number": 433, "title": "from apscheduler.schedulers.background import BackgroundScheduler BackgroundScheduler()", "user": {"login": "Jie-Yuan", "id": 20265321, "node_id": "MDQ6VXNlcjIwMjY1MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20265321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jie-Yuan", "html_url": "https://github.com/Jie-Yuan", "followers_url": "https://api.github.com/users/Jie-Yuan/followers", "following_url": "https://api.github.com/users/Jie-Yuan/following{/other_user}", "gists_url": "https://api.github.com/users/Jie-Yuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jie-Yuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jie-Yuan/subscriptions", "organizations_url": "https://api.github.com/users/Jie-Yuan/orgs", "repos_url": "https://api.github.com/users/Jie-Yuan/repos", "events_url": "https://api.github.com/users/Jie-Yuan/events{/privacy}", "received_events_url": "https://api.github.com/users/Jie-Yuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T11:52:31Z", "updated_at": "2020-05-23T16:33:18Z", "closed_at": "2020-05-23T16:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "UnknownTimeZoneError                      Traceback (most recent call last)\r\n<ipython-input-8-d934dc9a5d49> in <module>\r\n      1 from apscheduler.schedulers.background import BackgroundScheduler\r\n----> 2 BackgroundScheduler()\r\n\r\n/usr/local/lib/python3.6/dist-packages/apscheduler/schedulers/base.py in __init__(self, gconfig, **options)\r\n     85         self._pending_jobs = []\r\n     86         self.state = STATE_STOPPED\r\n---> 87         self.configure(gconfig, **options)\r\n     88 \r\n     89     def configure(self, gconfig={}, prefix='apscheduler.', **options):\r\n\r\n/usr/local/lib/python3.6/dist-packages/apscheduler/schedulers/base.py in configure(self, gconfig, prefix, **options)\r\n    124         # Override any options with explicit keyword arguments\r\n    125         config.update(options)\r\n--> 126         self._configure(config)\r\n    127 \r\n    128     def start(self, paused=False):\r\n\r\n/usr/local/lib/python3.6/dist-packages/apscheduler/schedulers/background.py in _configure(self, config)\r\n     27     def _configure(self, config):\r\n     28         self._daemon = asbool(config.pop('daemon', True))\r\n---> 29         super(BackgroundScheduler, self)._configure(config)\r\n     30 \r\n     31     def start(self, *args, **kwargs):\r\n\r\n/usr/local/lib/python3.6/dist-packages/apscheduler/schedulers/base.py in _configure(self, config)\r\n    695         # Set general options\r\n    696         self._logger = maybe_ref(config.pop('logger', None)) or getLogger('apscheduler.scheduler')\r\n--> 697         self.timezone = astimezone(config.pop('timezone', None)) or get_localzone()\r\n    698         self.jobstore_retry_interval = float(config.pop('jobstore_retry_interval', 10))\r\n    699 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tzlocal/unix.py in get_localzone()\r\n    163     global _cache_tz\r\n    164     if _cache_tz is None:\r\n--> 165         _cache_tz = _get_localzone()\r\n    166 \r\n    167     return _cache_tz\r\n\r\n/usr/local/lib/python3.6/dist-packages/tzlocal/unix.py in _get_localzone(_root)\r\n     84                     if not etctz:\r\n     85                         continue\r\n---> 86                     tz = pytz.timezone(etctz.replace(' ', '_'))\r\n     87                     if _root == '/':\r\n     88                         # We are using a file in etc to name the timezone.\r\n\r\n/usr/local/lib/python3.6/dist-packages/pytz/__init__.py in timezone(zone)\r\n    179                 fp.close()\r\n    180         else:\r\n--> 181             raise UnknownTimeZoneError(zone)\r\n    182 \r\n    183     return _tzinfo_cache[zone]\r\n\r\nUnknownTimeZoneError: 'Africa/'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/432", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/432/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/432/events", "html_url": "https://github.com/agronholm/apscheduler/issues/432", "id": 608723295, "node_id": "MDU6SXNzdWU2MDg3MjMyOTU=", "number": 432, "title": "How do I turn off this log display\uff1f\uff1f\uff1f", "user": {"login": "zxiaozhou", "id": 62740686, "node_id": "MDQ6VXNlcjYyNzQwNjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/62740686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxiaozhou", "html_url": "https://github.com/zxiaozhou", "followers_url": "https://api.github.com/users/zxiaozhou/followers", "following_url": "https://api.github.com/users/zxiaozhou/following{/other_user}", "gists_url": "https://api.github.com/users/zxiaozhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxiaozhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxiaozhou/subscriptions", "organizations_url": "https://api.github.com/users/zxiaozhou/orgs", "repos_url": "https://api.github.com/users/zxiaozhou/repos", "events_url": "https://api.github.com/users/zxiaozhou/events{/privacy}", "received_events_url": "https://api.github.com/users/zxiaozhou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-29T01:53:09Z", "updated_at": "2020-04-29T06:11:41Z", "closed_at": "2020-04-29T05:21:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\nHow do I turn off this log display\uff1f\uff1f\uff1fMy log has been adjusted to info, but it still shows\u3002\r\nThe full length of this is not useful for me to record. I don't want to show this at all\r\n![image](https://user-images.githubusercontent.com/62740686/80554212-fb5b8900-89fe-11ea-9179-e4ffba59cc6e.png)\r\nThe default of the original framework is info, which makes it impossible to show it without showing it\r\n![image](https://user-images.githubusercontent.com/62740686/80554278-32ca3580-89ff-11ea-8462-77f76bf109b4.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/429", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/429/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/429/events", "html_url": "https://github.com/agronholm/apscheduler/issues/429", "id": 598517276, "node_id": "MDU6SXNzdWU1OTg1MTcyNzY=", "number": 429, "title": "job store \"next_run_time\" should only be updated when the job is finished", "user": {"login": "LeonKarabchevsky", "id": 20110237, "node_id": "MDQ6VXNlcjIwMTEwMjM3", "avatar_url": "https://avatars1.githubusercontent.com/u/20110237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeonKarabchevsky", "html_url": "https://github.com/LeonKarabchevsky", "followers_url": "https://api.github.com/users/LeonKarabchevsky/followers", "following_url": "https://api.github.com/users/LeonKarabchevsky/following{/other_user}", "gists_url": "https://api.github.com/users/LeonKarabchevsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeonKarabchevsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeonKarabchevsky/subscriptions", "organizations_url": "https://api.github.com/users/LeonKarabchevsky/orgs", "repos_url": "https://api.github.com/users/LeonKarabchevsky/repos", "events_url": "https://api.github.com/users/LeonKarabchevsky/events{/privacy}", "received_events_url": "https://api.github.com/users/LeonKarabchevsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-12T16:05:18Z", "updated_at": "2020-05-21T15:35:29Z", "closed_at": "2020-04-13T20:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "long running jobs that are terminated unexpectedly won't resume or start again execution when the scheduler is restarted when using a persistent job store\r\n\r\n## Expected Behavior\r\nThe job will start its execution as soon as the scheduler is restarted \r\n\r\n## Current Behavior\r\nThe job does no execute again\r\n\r\n## Steps to Reproduce\r\n1. Create a long running job \r\n2. Add the job to a scheduler with a  persistent job store\r\n3. restart the the scheduler process\r\n\r\n## Context (Environment)\r\nI have a docker container which executes periodic tasks that  sometimes can crash due to various issue.\r\n\r\n## Detailed Description\r\nmove the following code at base scheduler:\r\njob._modify(next_run_time=job_next_run)\r\njobstore.update_job(job)\r\n\r\nto a callback function which will be called by \r\nexecutor.submit_job(job, run_times)\r\nwhen it finishes executing the job\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/425", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/425/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/425/events", "html_url": "https://github.com/agronholm/apscheduler/issues/425", "id": 587627219, "node_id": "MDU6SXNzdWU1ODc2MjcyMTk=", "number": 425, "title": "Problem with job trigger on date", "user": {"login": "mizamae", "id": 10700202, "node_id": "MDQ6VXNlcjEwNzAwMjAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10700202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mizamae", "html_url": "https://github.com/mizamae", "followers_url": "https://api.github.com/users/mizamae/followers", "following_url": "https://api.github.com/users/mizamae/following{/other_user}", "gists_url": "https://api.github.com/users/mizamae/gists{/gist_id}", "starred_url": "https://api.github.com/users/mizamae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mizamae/subscriptions", "organizations_url": "https://api.github.com/users/mizamae/orgs", "repos_url": "https://api.github.com/users/mizamae/repos", "events_url": "https://api.github.com/users/mizamae/events{/privacy}", "received_events_url": "https://api.github.com/users/mizamae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-25T11:24:50Z", "updated_at": "2020-03-26T14:16:38Z", "closed_at": "2020-03-26T14:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am scheduling a background scheduler with a job setup with a trigger='date'. When it executes, it is supposed to be automatically deleted from the jobstore (SQLAlchemy in my case) but it raises an exception:\r\nI set the scheduler as:\r\n```\r\nscheduler=BackgroundScheduler()\r\nscheduler..add_jobstore('sqlalchemy', url=jobstoreUrl)\r\n```\r\nI add the job as:\r\n```\r\nscheduler.add_job(func=callback,trigger='date',id=id,args=(),kwargs={'cls':self.__class__,'pk':self.pk},\r\n                              run_date=start_date+datetime.timedelta(seconds=self.CONNECTION_TIMEOUT))\r\n```\r\nand when it enters the calling function, it raises the following traceback:\r\n \r\n\r\n>  File \"D:\\Python\\Python3.5.3\\lib\\threading.py\", line 914, in _bootstrap_inner\r\n>     self.run()\r\n>   File \"D:\\Python\\Python3.5.3\\lib\\threading.py\", line 862, in run\r\n>     self._target(*self._args, **self._kwargs)\r\n>   File \"D:\\Python\\Python3.5.3\\lib\\site-packages\\apscheduler\\schedulers\\blocking.py\", line 30, in _main_loop\r\n>     wait_seconds = self._process_jobs()\r\n>   File \"D:\\Python\\Python3.5.3\\lib\\site-packages\\apscheduler\\schedulers\\base.py\", line 997, in _process_jobs\r\n>     self.remove_job(job.id, jobstore_alias)\r\n> TypeError: remove_job() takes 2 positional arguments but 3 were given\r\n\r\nI am using Python 3.5.3 and APScheduler 3.6.3...\r\n\r\nis this a known bug?? or am I doing anything wrong??\r\n\r\nThans a lot!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/423", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/423/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/423/events", "html_url": "https://github.com/agronholm/apscheduler/issues/423", "id": 583031463, "node_id": "MDU6SXNzdWU1ODMwMzE0NjM=", "number": 423, "title": "apscheduler.scheduler:Execution of job skipped: maximum number of running instances reached (1)", "user": {"login": "ylmzgrk", "id": 26167878, "node_id": "MDQ6VXNlcjI2MTY3ODc4", "avatar_url": "https://avatars3.githubusercontent.com/u/26167878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ylmzgrk", "html_url": "https://github.com/ylmzgrk", "followers_url": "https://api.github.com/users/ylmzgrk/followers", "following_url": "https://api.github.com/users/ylmzgrk/following{/other_user}", "gists_url": "https://api.github.com/users/ylmzgrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ylmzgrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ylmzgrk/subscriptions", "organizations_url": "https://api.github.com/users/ylmzgrk/orgs", "repos_url": "https://api.github.com/users/ylmzgrk/repos", "events_url": "https://api.github.com/users/ylmzgrk/events{/privacy}", "received_events_url": "https://api.github.com/users/ylmzgrk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-17T13:56:25Z", "updated_at": "2020-03-20T06:44:27Z", "closed_at": "2020-03-18T13:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know that there are lot of questions asked in this topic. I read all of them but couldn't get a clear solution for my case.\r\n\r\nI have a python code running on ubuntu server that has 2 functions. First function (getKlines) receive data from api every 30 minutes, second function (execute) run an alogithm on the received data.\r\n\r\nAt first i built the setup like below;\r\n\r\nsched = BlockingScheduler()\r\n\r\nsched.add_job(getKlines,'cron', minute=\"*/30\", second=0, max_instances=5)\r\n\r\nsched.add_job(execute, 'cron', minute=\"*/30\", second=1, max_instances=5)\r\n\r\nsched.start()\r\n\r\nBut after a period of time, i get apscheduler.scheduler:Execution of job skipped: maximum number of running instances reached error. Until i recognize and manually act, my code hangs and doesn't run when the next 30 minutes come.\r\n\r\nAs offered in similar cases, i increase max instance number in job defaults but still get the error thus change the code structure as below;\r\n\r\ntrigger=OrTrigger([CronTrigger(hour='', minute='0'),CronTrigger(hour='', minute='30')])\r\n\r\ntrigger1=OrTrigger([CronTrigger(hour='', minute='1'),CronTrigger(hour='', minute='31')])\r\n\r\ndef listener(event):\r\n\r\nif event.exception:\r\n    print(\"error\")\r\njob_defaults = { 'max_instances': 20,\r\n\r\n}\r\n\r\nscheduler = BlockingScheduler(job_defaults=job_defaults)\r\n\r\nscheduler.add_listener(listener, EVENT_JOB_ERROR)\r\n\r\nscheduler.add_listener(listener, EVENT_JOB_MAX_INSTANCES)\r\n\r\nscheduler.add_job(getKlines,trigger)\r\n\r\nscheduler.add_job(execute, trigger1)\r\n\r\nscheduler.start()\r\n\r\nbut unfortunately although the frequency is decreased still i'm getting the error. I add also event listener but it also doesn't work sometimes to let me know the job is hanged.\r\n\r\nReally appreciate your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/422", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/422/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/422/events", "html_url": "https://github.com/agronholm/apscheduler/issues/422", "id": 569646238, "node_id": "MDU6SXNzdWU1Njk2NDYyMzg=", "number": 422, "title": "Question about monitor and restart", "user": {"login": "mayJJ", "id": 25437602, "node_id": "MDQ6VXNlcjI1NDM3NjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/25437602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayJJ", "html_url": "https://github.com/mayJJ", "followers_url": "https://api.github.com/users/mayJJ/followers", "following_url": "https://api.github.com/users/mayJJ/following{/other_user}", "gists_url": "https://api.github.com/users/mayJJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayJJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayJJ/subscriptions", "organizations_url": "https://api.github.com/users/mayJJ/orgs", "repos_url": "https://api.github.com/users/mayJJ/repos", "events_url": "https://api.github.com/users/mayJJ/events{/privacy}", "received_events_url": "https://api.github.com/users/mayJJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T05:36:33Z", "updated_at": "2020-02-24T20:17:03Z", "closed_at": "2020-02-24T20:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**after run a period time, apscheduler not run added job**\r\n \r\n- I can see the job in jobstore keep increasing and not decrease. \r\n- so is there some sulotion for monitor scheduler and executor and restart them when died\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/420", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/420/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/420/events", "html_url": "https://github.com/agronholm/apscheduler/issues/420", "id": 559807168, "node_id": "MDU6SXNzdWU1NTk4MDcxNjg=", "number": 420, "title": "The task will cache?", "user": {"login": "0x587", "id": 40025941, "node_id": "MDQ6VXNlcjQwMDI1OTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/40025941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x587", "html_url": "https://github.com/0x587", "followers_url": "https://api.github.com/users/0x587/followers", "following_url": "https://api.github.com/users/0x587/following{/other_user}", "gists_url": "https://api.github.com/users/0x587/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x587/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x587/subscriptions", "organizations_url": "https://api.github.com/users/0x587/orgs", "repos_url": "https://api.github.com/users/0x587/repos", "events_url": "https://api.github.com/users/0x587/events{/privacy}", "received_events_url": "https://api.github.com/users/0x587/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-04T15:47:42Z", "updated_at": "2020-02-05T10:20:24Z", "closed_at": "2020-02-05T10:20:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\nChanges as database data changes\r\n\r\n## Current Behavior\r\nIf only one thread is opened, the data will never change.\r\nWhen I open 20 threads, the data of the thread after the database data changes is updated.\r\n\r\n## Steps to Reproduce\r\n1. I use the Flask-apscheduler.\r\n2. Use SQLAlchemy to get database data. \r\n3. Create a task that runs every second to get database data.\r\n4. Chang the data in database.\r\n\r\n## Context (Environment)\r\nWin10 1903 python3.7 apscheduler3.6.3\r\n\r\n## Detailed Description\r\n### task code\r\n``` py\r\ndef check_node_health():\r\n    for node in Node.query.all():\r\n        if node.records:\r\n            last_time = datetime.datetime.min\r\n            print(node.records)\r\n            for record in Record.query.filter_by(chip_id=node.chip_id).all():\r\n                last_time = max(last_time, record.create_datetime)\r\n            print(last_time)\r\n            print((datetime.datetime.now() - last_time).seconds)\r\n```\r\n### config code\r\n``` py\r\nSCHEDULER_API_ENABLED = True\r\nJOBS = [\r\n    {\r\n        'id': 'node_health_checker',\r\n        'func': check_node_health,\r\n        'args': '',\r\n        'trigger': 'interval',\r\n        'seconds': 1\r\n    }\r\n]\r\nSCHEDULER_EXECUTORS = {\r\n    'default': ThreadPoolExecutor(20),\r\n}\r\n```\r\n![\u6279\u6ce8 2020-02-04 233511](https://user-images.githubusercontent.com/40025941/73759515-078ccd00-47a7-11ea-821c-02a60e65d648.png)\r\n### As the picture shows:\r\nThe last line of data is what I added at runtime\r\nDuplicate tasks run by the thread, showing updated data,but some are not.\r\nSo I suspect that the thread executing the task will cache the data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/419", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/419/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/419/events", "html_url": "https://github.com/agronholm/apscheduler/issues/419", "id": 559675935, "node_id": "MDU6SXNzdWU1NTk2NzU5MzU=", "number": 419, "title": "Jobstore Oracle drops \"OperationalError ORA-03114\" after adding a job (add_job)", "user": {"login": "srPuebla", "id": 35097197, "node_id": "MDQ6VXNlcjM1MDk3MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/35097197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srPuebla", "html_url": "https://github.com/srPuebla", "followers_url": "https://api.github.com/users/srPuebla/followers", "following_url": "https://api.github.com/users/srPuebla/following{/other_user}", "gists_url": "https://api.github.com/users/srPuebla/gists{/gist_id}", "starred_url": "https://api.github.com/users/srPuebla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srPuebla/subscriptions", "organizations_url": "https://api.github.com/users/srPuebla/orgs", "repos_url": "https://api.github.com/users/srPuebla/repos", "events_url": "https://api.github.com/users/srPuebla/events{/privacy}", "received_events_url": "https://api.github.com/users/srPuebla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-04T12:06:24Z", "updated_at": "2020-03-10T14:22:46Z", "closed_at": "2020-03-10T14:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nLibraries version:\r\nAPScheduler-3.5.3\r\nSQLAlchemy-1.3.4\r\ncx_Oracle-7.1.3\r\npython-2.7.14\r\n\r\nBackgroundScheduler is started (with job_store) and it works successfully (You can add jobs, jobstore works fine, etc) However, when more then 24 hours inactive (no new jobs are added or modified) the following error occurs when adding a new job \"OperationalError('(cx_Oracle.OperationalError) ORA-03114: not connected to ORACLE',) \"\r\n\r\nCode OK: \r\n```\r\njob_store = SQLAlchemyJobStore(url=URL_JOBSTORE, tablename = TABLE_JOBSTORE)\r\n_job_scheduler = BackgroundScheduler()\r\n_job_scheduler.add_jobstore(job_store)\r\n_job_scheduler.start()\r\n_job_scheduler.add_job(...) #OK\r\n```\r\n\r\nCode Error:\r\n\r\n```\r\njob_store = SQLAlchemyJobStore(url=URL_JOBSTORE, tablename = TABLE_JOBSTORE)\r\n_job_scheduler = BackgroundScheduler()\r\n_job_scheduler.add_jobstore(job_store)\r\n_job_scheduler.start()\r\n#LONG TIME OPERATIONS 24 hours past\r\n_job_scheduler.add_job(...) # drops OperationErrror exception\r\n```\r\n\r\nError full:\r\nOperationalError: (cx_Oracle.OperationalError) ORA-03114: not connected to ORACLE\\n[SQL: INSERT INTO \"jobrestore_PRE_CENTRE2_0\" (id, next_run_time, job_state) VALUES (:id, :next_run_time, :job_state)] (Background on this error at: http://sqlalche.me/e/e3q8)\\n'\r\n\r\nI think that Jobstore has lost connection. Cause if you create again the scheduler it works properly. Is there any way to reconnect the Jobstore to the Database?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/414", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/414/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/414/events", "html_url": "https://github.com/agronholm/apscheduler/issues/414", "id": 544055297, "node_id": "MDU6SXNzdWU1NDQwNTUyOTc=", "number": 414, "title": "Apscheduler does not properly reap jobs and spawns too many processes.", "user": {"login": "yus2047889", "id": 59378379, "node_id": "MDQ6VXNlcjU5Mzc4Mzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/59378379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yus2047889", "html_url": "https://github.com/yus2047889", "followers_url": "https://api.github.com/users/yus2047889/followers", "following_url": "https://api.github.com/users/yus2047889/following{/other_user}", "gists_url": "https://api.github.com/users/yus2047889/gists{/gist_id}", "starred_url": "https://api.github.com/users/yus2047889/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yus2047889/subscriptions", "organizations_url": "https://api.github.com/users/yus2047889/orgs", "repos_url": "https://api.github.com/users/yus2047889/repos", "events_url": "https://api.github.com/users/yus2047889/events{/privacy}", "received_events_url": "https://api.github.com/users/yus2047889/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-31T01:01:37Z", "updated_at": "2020-01-03T21:31:45Z", "closed_at": "2020-01-03T21:31:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "ProcessPoolExecutor spawns a bunch of processes that handle apscheduler jobs. I expect the processes spawned by ProcessPoolExecutor to actually be shutdown upon successful completion of the job and a new process to be spawned for the next execution of the job. I also expect to not spawn processes if there is no need to. This, however, doesn't happen. If I set max workers to 10, 10 processes will be spawned. Even if the only job has max_instances of 3. After one of the processes completes the job, the process isn't reclaimed and is merely repurposed for the next run of said job.\r\n\r\nI'll give an example:\r\n\r\nCreate an apscheduler utilizing BlockingScheduler using ProcessPoolExecutor as its executor.\r\n```python\r\ndef printing_job():\r\n    print(\"print this...\")\r\n\r\ndef main():\r\n    executors = {\r\n        'default': ProcessPoolExecutor(max_workers=10)\r\n    }\r\n    job_defaults = {\r\n        'coalesce': False,\r\n        'max_instances': 3,\r\n        'misfire_grace_time': None\r\n    }\r\n    scheduler = BlockingScheduler(executors=executors,\r\n                                  daemonic=True,\r\n                                  daemon=True)\r\n    scheduler.add_job(printing_job, 'interval', seconds=1)\r\n    scheduler.start()\r\n```\r\n11 processes are spawned, 10 scheduler processes and the main process:\r\n```shell\r\nuser   61428  59435 18 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61456  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61457  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61458  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61459  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61460  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61461  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61462  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61463  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61464  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\nuser   61465  61428  0 16:25 pts/2    00:00:00 ../bin/python3 ./test.py\r\n```\r\nOnly 3 are being used, by the job. I should see at most 4 processes. The processes should be reaped and re-created.\r\n\r\nIs this paradigm not possible with APScheduler?\r\n\r\nProcessPoolExecutor states that max_workers, is the number of workers to be spawned at most. The keyword being at most, which to me indicates it shouldn't spawn more then it needs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/413", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/413/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/413/events", "html_url": "https://github.com/agronholm/apscheduler/issues/413", "id": 543830835, "node_id": "MDU6SXNzdWU1NDM4MzA4MzU=", "number": 413, "title": "CalendarInterval not supported", "user": {"login": "svanscho", "id": 7288358, "node_id": "MDQ6VXNlcjcyODgzNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7288358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svanscho", "html_url": "https://github.com/svanscho", "followers_url": "https://api.github.com/users/svanscho/followers", "following_url": "https://api.github.com/users/svanscho/following{/other_user}", "gists_url": "https://api.github.com/users/svanscho/gists{/gist_id}", "starred_url": "https://api.github.com/users/svanscho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svanscho/subscriptions", "organizations_url": "https://api.github.com/users/svanscho/orgs", "repos_url": "https://api.github.com/users/svanscho/repos", "events_url": "https://api.github.com/users/svanscho/events{/privacy}", "received_events_url": "https://api.github.com/users/svanscho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-30T10:33:30Z", "updated_at": "2019-12-31T14:13:48Z", "closed_at": "2019-12-31T14:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use CalendarInterval support in v3.6.3 I get the following error:\r\n`LookupError: No trigger by the name \"calendarinterval\" was found`\r\n\r\nAny idea when this will be supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/411", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/411/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/411/events", "html_url": "https://github.com/agronholm/apscheduler/issues/411", "id": 540324772, "node_id": "MDU6SXNzdWU1NDAzMjQ3NzI=", "number": 411, "title": "Wrong weekday in CronTrigger ", "user": {"login": "hmiguel", "id": 3625220, "node_id": "MDQ6VXNlcjM2MjUyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3625220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmiguel", "html_url": "https://github.com/hmiguel", "followers_url": "https://api.github.com/users/hmiguel/followers", "following_url": "https://api.github.com/users/hmiguel/following{/other_user}", "gists_url": "https://api.github.com/users/hmiguel/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmiguel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmiguel/subscriptions", "organizations_url": "https://api.github.com/users/hmiguel/orgs", "repos_url": "https://api.github.com/users/hmiguel/repos", "events_url": "https://api.github.com/users/hmiguel/events{/privacy}", "received_events_url": "https://api.github.com/users/hmiguel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230265, "node_id": "MDU6TGFiZWwzNDgyMzAyNjU=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-19T13:47:41Z", "updated_at": "2020-05-23T16:42:26Z", "closed_at": "2020-05-23T16:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\n\r\nThe weekday value '0' should be Sunday.\r\n\r\n## Current Behavior\r\n\r\nWhen the weekday value is set to 0, the trigger assumes Monday.\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\ndef my_cron_job():\r\n    print (\"executed.\")\r\n\r\nif __name__ == '__main__':\r\n    from apscheduler.schedulers.background import BackgroundScheduler\r\n    from apscheduler.triggers.cron import CronTrigger\r\n    \r\n    sched = BackgroundScheduler(timezone='WET')\r\n\r\n    sched.add_job(my_cron_job, id='job_weekday_0', trigger = CronTrigger.from_crontab('0 2 * * 0')) \r\n\r\n    sched.add_job(my_cron_job, id='job_weekday_SUN', trigger = CronTrigger.from_crontab('0 2 * * SUN')) \r\n    \r\n    sched.start()\r\n    \r\n    j = sched.get_job('job_weekday_0')\r\n    \r\n    print (j.id, j.next_run_time) # job_weekday_0 2019-12-23 02:00:00+00:00\r\n\r\n    j = sched.get_job('job_weekday_SUN')\r\n    \r\n    print (j.id, j.next_run_time) # job_weekday_SUN 2019-12-22 02:00:00+00:00\r\n\r\n````\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/410", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/410/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/410/events", "html_url": "https://github.com/agronholm/apscheduler/issues/410", "id": 534568001, "node_id": "MDU6SXNzdWU1MzQ1NjgwMDE=", "number": 410, "title": "About job task fail handle", "user": {"login": "mayJJ", "id": 25437602, "node_id": "MDQ6VXNlcjI1NDM3NjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/25437602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayJJ", "html_url": "https://github.com/mayJJ", "followers_url": "https://api.github.com/users/mayJJ/followers", "following_url": "https://api.github.com/users/mayJJ/following{/other_user}", "gists_url": "https://api.github.com/users/mayJJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayJJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayJJ/subscriptions", "organizations_url": "https://api.github.com/users/mayJJ/orgs", "repos_url": "https://api.github.com/users/mayJJ/repos", "events_url": "https://api.github.com/users/mayJJ/events{/privacy}", "received_events_url": "https://api.github.com/users/mayJJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-08T16:46:13Z", "updated_at": "2019-12-08T16:57:02Z", "closed_at": "2019-12-08T16:56:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, recently I go touse apscheduler instand of celery, Because apscheduler is more flexible\uff0cI can support some api to modified job dynamic. But I meet some questions as follows:\r\n\r\n- I want to set execute job with max retyies number. I see I can handle error event callback like this:\r\n\r\n```python\r\ndef callback_after_job_fail(event):\r\n    # event object include job.id and expcetion\r\n    # you can add job again by job.id \r\n    pass\r\n\r\nscheduler.add_listener(callback_after_job_fail, EVENT_JOB_ERROR)\r\n```\r\n\r\nBut Job object without max_retries_num.\r\nSo I think is there some simple methods that help me to add max_retries_num for Job class and persistence it in jobstore? So I can control job remove it at success, and retry again while failed and less than max reties number, Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/409", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/409/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/409/events", "html_url": "https://github.com/agronholm/apscheduler/issues/409", "id": 531682181, "node_id": "MDU6SXNzdWU1MzE2ODIxODE=", "number": 409, "title": "remove_job and pause_job not working", "user": {"login": "xinqinglxl", "id": 7071521, "node_id": "MDQ6VXNlcjcwNzE1MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7071521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xinqinglxl", "html_url": "https://github.com/xinqinglxl", "followers_url": "https://api.github.com/users/xinqinglxl/followers", "following_url": "https://api.github.com/users/xinqinglxl/following{/other_user}", "gists_url": "https://api.github.com/users/xinqinglxl/gists{/gist_id}", "starred_url": "https://api.github.com/users/xinqinglxl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xinqinglxl/subscriptions", "organizations_url": "https://api.github.com/users/xinqinglxl/orgs", "repos_url": "https://api.github.com/users/xinqinglxl/repos", "events_url": "https://api.github.com/users/xinqinglxl/events{/privacy}", "received_events_url": "https://api.github.com/users/xinqinglxl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T03:06:18Z", "updated_at": "2020-02-03T03:18:28Z", "closed_at": "2020-02-03T03:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I am new to apscheduler and trying to use it in my flask app(with gunicorn as web server).\r\n\r\nI created a module named task_manager.py and used it to mange my apscheduler job.\r\nIn task_manager.py I want to do like add, remove, pause to apscheduler job.\r\ntask_manager.py:\r\n\r\n```\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.executors.pool import ThreadPoolExecutor\r\n\r\nexecutors = {\r\n    'default': ThreadPoolExecutor(cfg.thread_pool_size)\r\n}\r\njob_defaults = {\r\n    'coalesce': True,\r\n    'max_instances': 10,\r\n    'misfire_grace_time':600\r\n}\r\n\r\nclass TaskManager:\r\n    def start_scheduler(self):\r\n        self.scheduler.start()\r\n\r\n    def add_scheduler_job(self, job_id, ...):\r\n        job_obj = self.scheduler.add_job(job_func, 'interval', ...)\r\n\r\n    def remove_job(self, job_id):\r\n        self.scheduler.remove_job(job_id)\r\n\r\n    def pause_job(self, job_id):\r\n        self.scheduler.pause_job(job_id)\r\n```\r\n\r\n\r\nWhile starting the gunicorn I add job to apscheduler in gunicorn's on_starting() and it works fine.\r\nThen I tried to stop/pause the job added above. So I created a restful api name remove_job(job_id),\r\ni the restful api I invoked TaskManager's remove_job/pause_job functions, but nether them working.\r\n\r\nIn apscheuder's it said the job already removed, but it still running.\r\nserver_remove_job.log:\r\n2019-12-02 08:32:48,963 base.py[line:627] INFO Removed job myfunc1\r\n...\r\n2019-12-02 08:41:06,497 base.py[line:123] INFO Running job myfunc1\r\n...\r\n2019-12-02 08:51:06,491 base.py[line:123] INFO Running job myfunc1\r\n\r\nserver_pause_job.log:\r\nmyfunc1 (trigger: interval[0:02:00], paused)\r\n...\r\n2019-12-03 **02:33:45**,980 base.py[line:123] INFO Running job myfun1 next run at: 2019-12-03 **02:33:45** UTC)\r\n...\r\n2019-12-03 **02:35:46**,147 base.py[line:123] INFO Running job \"myfun1, next run at: 2019-12-03 **02:35:45** UTC)\"\r\n\r\nthx for all suggest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/408", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/408/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/408/events", "html_url": "https://github.com/agronholm/apscheduler/issues/408", "id": 529942106, "node_id": "MDU6SXNzdWU1Mjk5NDIxMDY=", "number": 408, "title": "apscheduler with mulltiple run_until_complete jobs cause RuntimeError: This event loop is already running", "user": {"login": "Nriver", "id": 6752679, "node_id": "MDQ6VXNlcjY3NTI2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6752679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nriver", "html_url": "https://github.com/Nriver", "followers_url": "https://api.github.com/users/Nriver/followers", "following_url": "https://api.github.com/users/Nriver/following{/other_user}", "gists_url": "https://api.github.com/users/Nriver/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nriver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nriver/subscriptions", "organizations_url": "https://api.github.com/users/Nriver/orgs", "repos_url": "https://api.github.com/users/Nriver/repos", "events_url": "https://api.github.com/users/Nriver/events{/privacy}", "received_events_url": "https://api.github.com/users/Nriver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-28T14:24:25Z", "updated_at": "2019-11-28T14:37:26Z", "closed_at": "2019-11-28T14:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run multiple jobs. Each of them uses a run_until_complete to execute a async function. The async functions are inside a class. I get an exception saying \"RuntimeError: This event loop is already running\" with my code.\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\nMultiple jobs run async function without exceptions.\r\n\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\nIt raises exception when two jobs happens to execute at the same time.\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\nSimple snippet\r\n```\r\nimport asyncio\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\n\r\nscheduler = BlockingScheduler()\r\n\r\n\r\nclass MyClass:\r\n\r\n    async def task1(self):\r\n        await asyncio.sleep(2)\r\n\r\n    async def task2(self):\r\n        await asyncio.sleep(2)\r\n\r\n\r\n@scheduler.scheduled_job('cron', second=\"*/3\")\r\ndef job1():\r\n    loop.run_until_complete(my_class.task1())\r\n\r\n\r\n@scheduler.scheduled_job('cron', second=\"*/6\")\r\ndef job2():\r\n    loop.run_until_complete(my_class.task2())\r\n\r\nif __name__ == '__main__':\r\n    my_class = MyClass()\r\n    loop = asyncio.get_event_loop()\r\n    scheduler.start()\r\n```\r\n\r\nI guess I'm using run_until_complete in a wrong way\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/405", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/405/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/405/events", "html_url": "https://github.com/agronholm/apscheduler/issues/405", "id": 525651778, "node_id": "MDU6SXNzdWU1MjU2NTE3Nzg=", "number": 405, "title": "AsyncIOScheduler and Flask App not worked together", "user": {"login": "abinhho", "id": 9253378, "node_id": "MDQ6VXNlcjkyNTMzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9253378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abinhho", "html_url": "https://github.com/abinhho", "followers_url": "https://api.github.com/users/abinhho/followers", "following_url": "https://api.github.com/users/abinhho/following{/other_user}", "gists_url": "https://api.github.com/users/abinhho/gists{/gist_id}", "starred_url": "https://api.github.com/users/abinhho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abinhho/subscriptions", "organizations_url": "https://api.github.com/users/abinhho/orgs", "repos_url": "https://api.github.com/users/abinhho/repos", "events_url": "https://api.github.com/users/abinhho/events{/privacy}", "received_events_url": "https://api.github.com/users/abinhho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T08:33:44Z", "updated_at": "2019-12-18T09:03:30Z", "closed_at": "2019-12-18T09:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using flask to build some APIs inside a docker container. Beside that, I has some CRON to run and fetch data from other APIs and store to DB.\r\n\r\nBut, when I using `AsyncIOScheduler` and `asyncio`, Flask app could not start. Only CRON run.\r\nHere is my code.\r\n```\r\ndef __init__(self):\r\n        self.sched = AsyncIOScheduler(daemon = True)\r\n        pass\r\n\r\ndef run(self):\r\n        self.sched.add_job(self.do_something, \"interval\", seconds = 5, id = __name__)\r\n\r\n        self.sched.start()\r\n        loop = asyncio.get_event_loop()\r\n        try:\r\n            loop.run_forever()\r\n        except (KeyboardInterrupt, SystemExit):\r\n            loop.stop()\r\n            self.sched.shutdown()\r\n            pass\r\n```\r\n\r\nAny help !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/404", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/404/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/404/events", "html_url": "https://github.com/agronholm/apscheduler/issues/404", "id": 521044002, "node_id": "MDU6SXNzdWU1MjEwNDQwMDI=", "number": 404, "title": "Version history not up to date", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348258191, "node_id": "MDU6TGFiZWwzNDgyNTgxOTE=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/documentation", "name": "documentation", "color": "ededed", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T15:56:57Z", "updated_at": "2019-11-11T20:26:05Z", "closed_at": "2019-11-11T19:22:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current released version is 3.6.3 but the current version history document only goes up to 3.6.1: https://apscheduler.readthedocs.io/en/latest/versionhistory.html\r\n\r\nWhat are the recent user-facing changes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/403", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/403/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/403/events", "html_url": "https://github.com/agronholm/apscheduler/issues/403", "id": 517519655, "node_id": "MDU6SXNzdWU1MTc1MTk2NTU=", "number": 403, "title": "Latest release breaks on dependent library", "user": {"login": "cdong8812", "id": 5809919, "node_id": "MDQ6VXNlcjU4MDk5MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5809919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdong8812", "html_url": "https://github.com/cdong8812", "followers_url": "https://api.github.com/users/cdong8812/followers", "following_url": "https://api.github.com/users/cdong8812/following{/other_user}", "gists_url": "https://api.github.com/users/cdong8812/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdong8812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdong8812/subscriptions", "organizations_url": "https://api.github.com/users/cdong8812/orgs", "repos_url": "https://api.github.com/users/cdong8812/repos", "events_url": "https://api.github.com/users/cdong8812/events{/privacy}", "received_events_url": "https://api.github.com/users/cdong8812/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-05T02:55:26Z", "updated_at": "2019-11-05T07:52:52Z", "closed_at": "2019-11-05T07:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest release seems to be breaking on a dependency library, I'm running an application on AWS and I'm getting the following error from Elastic event log and thus the docker container can't be launched:\r\n\r\nDocker container quit unexpectedly after launch: datetime_to_utc_timestamp File \"/usr/local/lib/python2.7/site-packages/apscheduler/util.py\", line 27, in <module> from trollius import iscoroutinefunction ImportError: No module named trollius. Check snapshot logs for details.\r\n\r\nI'm using Python 2.7 in my Dockerfile and It looks like it's missing the \"trollius\" dependent library from installation. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/402", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/402/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/402/events", "html_url": "https://github.com/agronholm/apscheduler/issues/402", "id": 517500765, "node_id": "MDU6SXNzdWU1MTc1MDA3NjU=", "number": 402, "title": "No trigger by the name \"calendarinterval\" was found", "user": {"login": "cheizer", "id": 4388968, "node_id": "MDQ6VXNlcjQzODg5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4388968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheizer", "html_url": "https://github.com/cheizer", "followers_url": "https://api.github.com/users/cheizer/followers", "following_url": "https://api.github.com/users/cheizer/following{/other_user}", "gists_url": "https://api.github.com/users/cheizer/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheizer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheizer/subscriptions", "organizations_url": "https://api.github.com/users/cheizer/orgs", "repos_url": "https://api.github.com/users/cheizer/repos", "events_url": "https://api.github.com/users/cheizer/events{/privacy}", "received_events_url": "https://api.github.com/users/cheizer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348258191, "node_id": "MDU6TGFiZWwzNDgyNTgxOTE=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/documentation", "name": "documentation", "color": "ededed", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T01:42:06Z", "updated_at": "2019-11-05T17:09:30Z", "closed_at": "2019-11-05T07:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install apscheduler installs APScheduler-3.6.2-py2.py3-none-any.whl which should contain the calendarinterval trigger. It appears that the calendarinterval.py file is not included in the pip install. \r\n\r\nSteps to reproduce:\r\n1) python3 -m venv env\r\n2) source env/bin/activate\r\n3) pip3 install apscheduler\r\n4) create test.py with example code from docs and try and run\r\n\r\nThere for the example code in the docs does not work, it just complains that the trigger was not found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/401", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/401/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/401/events", "html_url": "https://github.com/agronholm/apscheduler/issues/401", "id": 517120854, "node_id": "MDU6SXNzdWU1MTcxMjA4NTQ=", "number": 401, "title": "Incompatibility with pytest4", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-04T12:29:37Z", "updated_at": "2019-11-05T07:17:15Z", "closed_at": "2019-11-04T22:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This gigantic construct is invalid in pytest-4+ because of [deprecation of marks inside of pytest.mark.parametrize](https://docs.pytest.org/en/latest/deprecations.html#marks-in-pytest-mark-parametrize).\r\n\r\n```python\r\n    @pytest.mark.parametrize('input,expected', [\r\n        pytest.mark.skipif(sys.version_info[:2] == (3, 2),\r\n                           reason=\"Unbound methods can't be resolved on Python 3.2\")(\r\n            (DummyClass.meth, 'tests.test_util:DummyClass.meth')\r\n        ),\r\n        (DummyClass.classmeth, 'tests.test_util:DummyClass.classmeth'),\r\n        pytest.mark.skipif(sys.version_info < (3, 3),\r\n                           reason=\"Requires __qualname__ (Python 3.3+)\")(\r\n            (DummyClass.InnerDummyClass.innerclassmeth,\r\n             'tests.test_util:DummyClass.InnerDummyClass.innerclassmeth')\r\n        ),\r\n        pytest.mark.skipif(sys.version_info < (3, 3),\r\n                           reason=\"Requires __qualname__ (Python 3.3+)\")(\r\n            (DummyClass.staticmeth, 'tests.test_util:DummyClass.staticmeth')\r\n        ),\r\n        pytest.mark.skipif(sys.version_info >= (3, 2),\r\n                           reason=\"Unbound methods (Python 3.2) and __qualname__ (Python 3.3+)\")(\r\n            (InheritedDummyClass.pause, 'tests.test_util:InheritedDummyClass.pause')\r\n        ),\r\n        (timedelta, 'datetime:timedelta'),\r\n    ], ids=['unbound method', 'class method', 'inner class method', 'static method',\r\n            'inherited class method', 'timedelta'])\r\n    def test_valid_refs(self, input, expected):\r\n        assert obj_to_ref(input) == expected\r\n```\r\n\r\nI don\u2019t even know where to start rewriting this into pytest-4 conformant form. On the other hand, I don\u2019t think Python 3.2 should not be that much concern these days.\r\n\r\n## Expected Behavior\r\nThe test suite passes, or at least the test runner is able to collect tests.\r\n\r\n## Current Behavior\r\nThe test suite run fails with:\r\n\r\n```\r\n[   40s] ============================= test session starts ==============================\r\n[   40s] platform linux2 -- Python 2.7.16, pytest-4.6.5, py-1.8.0, pluggy-0.13.0 -- /usr/bin/python2\r\n[   40s] cachedir: .pytest_cache\r\n[   40s] rootdir: /home/abuild/rpmbuild/BUILD/APScheduler-3.6.1\r\n[   40s] plugins: tornado-0.8.0\r\n[   41s] collecting ... collected 497 items / 1 errors / 496 selected\r\n[   41s] \r\n[   41s] ==================================== ERRORS ====================================\r\n[   41s] _____________________ ERROR collecting tests/test_util.py ______________________\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   41s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   41s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   41s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   41s] /usr/lib/python2.7/site-packages/_pytest/python.py:234: in pytest_pycollect_makeitem\r\n[   41s]     res = list(collector._genfunctions(name, obj))\r\n[   41s] /usr/lib/python2.7/site-packages/_pytest/python.py:410: in _genfunctions\r\n[   41s]     self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/hooks.py:286: in __call__\r\n[   41s]     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/manager.py:92: in _hookexec\r\n[   41s]     return self._inner_hookexec(hook, methods, kwargs)\r\n[   41s] /usr/lib/python2.7/site-packages/pluggy/manager.py:86: in <lambda>\r\n[   41s]     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n[   41s] /usr/lib/python2.7/site-packages/_pytest/python.py:137: in pytest_generate_tests\r\n[   41s]     metafunc.parametrize(*marker.args, **marker.kwargs)\r\n[   41s] /usr/lib/python2.7/site-packages/_pytest/python.py:1004: in parametrize\r\n[   41s]     function_definition=self.definition,\r\n[   41s] /usr/lib/python2.7/site-packages/_pytest/mark/structures.py:130: in _for_parametrize\r\n[   41s]     if len(param.values) != len(argnames):\r\n[   41s] E   TypeError: object of type 'MarkDecorator' has no len()\r\n[   41s] !!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\r\n[   41s] =========================== 1 error in 1.02 seconds ============================\r\n```\r\n\r\n## Steps to Reproduce\r\n1. Just run the test suite with pytest 4.\r\n\r\n## Context (Environment)\r\nUpdating package of APScheduler for openSUSE/Tumbleweed.\r\n\r\n## Detailed Description\r\nI don\u2019t have the patch to fix this, just commenting out this one test.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/400", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/400/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/400/events", "html_url": "https://github.com/agronholm/apscheduler/issues/400", "id": 515150115, "node_id": "MDU6SXNzdWU1MTUxNTAxMTU=", "number": 400, "title": "[Bug] TImezone <StaticTzInfo 'local'> can not be feed into `BackgroundScheduler` as timezone", "user": {"login": "johnklee", "id": 1559859, "node_id": "MDQ6VXNlcjE1NTk4NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1559859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnklee", "html_url": "https://github.com/johnklee", "followers_url": "https://api.github.com/users/johnklee/followers", "following_url": "https://api.github.com/users/johnklee/following{/other_user}", "gists_url": "https://api.github.com/users/johnklee/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnklee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnklee/subscriptions", "organizations_url": "https://api.github.com/users/johnklee/orgs", "repos_url": "https://api.github.com/users/johnklee/repos", "events_url": "https://api.github.com/users/johnklee/events{/privacy}", "received_events_url": "https://api.github.com/users/johnklee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-31T04:14:03Z", "updated_at": "2019-11-06T07:46:31Z", "closed_at": "2019-11-05T17:23:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\nCheck below sample code:\r\n```\r\n>>> from tzlocal import get_localzone\r\n>>> import apscheduler\r\n>>> from apscheduler.schedulers.background import BackgroundScheduler\r\n>>> localzone = get_localzone()\r\n>>> localzone\r\n<StaticTzInfo 'local'>\r\n>>> scheduler = BackgroundScheduler(timezone=localzone)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 87, in __init__\r\n    self.configure(gconfig, **options)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 126, in configure\r\n    self._configure(config)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/background.py\", line 29, in _configure\r\n    super(BackgroundScheduler, self)._configure(config)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 697, in _configure\r\n    self.timezone = astimezone(config.pop('timezone', None)) or get_localzone()\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/util.py\", line 87, in astimezone\r\n    'Unable to determine the name of the local timezone -- you must explicitly '\r\nValueError: Unable to determine the name of the local timezone -- you must explicitly specify the name of the local timezone. Please refrain from using timezones like EST to prevent problems with daylight saving time. Instead, use a locale based timezone name (such as Europe/Helsinki).\r\n```\r\nThe exception is not expected and the class `BackgroundScheduler` should be able to handle any kind of time zone returned by [`get_localzone()`](https://github.com/regebro/tzlocal/blob/master/tzlocal/unix.py)\r\n\r\n## Current Behavior\r\nWith timezone=`<StaticTzInfo 'local'>`, code as `scheduler = BackgroundScheduler(timezone=localzone)` will throw exception\r\n\r\n## Steps to Reproduce\r\nCheck sample code below:\r\n```\r\n>>> from tzlocal import get_localzone\r\n>>> import apscheduler\r\n>>> from apscheduler.schedulers.background import BackgroundScheduler\r\n>>> localzone = get_localzone()\r\n>>> localzone\r\n<StaticTzInfo 'local'>\r\n>>> scheduler = BackgroundScheduler(timezone=localzone)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 87, in __init__\r\n    self.configure(gconfig, **options)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 126, in configure\r\n    self._configure(config)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/background.py\", line 29, in _configure\r\n    super(BackgroundScheduler, self)._configure(config)\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/schedulers/base.py\", line 697, in _configure\r\n    self.timezone = astimezone(config.pop('timezone', None)) or get_localzone()\r\n  File \"/usr/local/lib64/python3.6/site-packages/apscheduler/util.py\", line 87, in astimezone\r\n    'Unable to determine the name of the local timezone -- you must explicitly '\r\nValueError: Unable to determine the name of the local timezone -- you must explicitly specify the name of the local timezone. Please refrain from using timezones like EST to prevent problems with daylight saving time. Instead, use a locale based timezone name (such as Europe/Helsinki).\r\n>>> localzone.zone\r\n'local'\r\n```\r\n\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/397", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/397/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/397/events", "html_url": "https://github.com/agronholm/apscheduler/issues/397", "id": 506936212, "node_id": "MDU6SXNzdWU1MDY5MzYyMTI=", "number": 397, "title": "asyncio and tornado schedulers need to respect partial async functions", "user": {"login": "shipmints", "id": 30732365, "node_id": "MDQ6VXNlcjMwNzMyMzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/30732365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shipmints", "html_url": "https://github.com/shipmints", "followers_url": "https://api.github.com/users/shipmints/followers", "following_url": "https://api.github.com/users/shipmints/following{/other_user}", "gists_url": "https://api.github.com/users/shipmints/gists{/gist_id}", "starred_url": "https://api.github.com/users/shipmints/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shipmints/subscriptions", "organizations_url": "https://api.github.com/users/shipmints/orgs", "repos_url": "https://api.github.com/users/shipmints/repos", "events_url": "https://api.github.com/users/shipmints/events{/privacy}", "received_events_url": "https://api.github.com/users/shipmints/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230266, "node_id": "MDU6TGFiZWwzNDgyMzAyNjY=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T00:27:37Z", "updated_at": "2019-11-05T07:47:29Z", "closed_at": "2019-11-05T07:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "In cpython versions prior to the planned 3.9 release, iscoroutinefunction does not correctly unwrap partials. This needs to be amended to ensure partial-wrapped async functions wind up in the correct underlying executor.\r\n\r\n## Expected Behavior\r\n\r\nPartial-wrapped async functions should be scheduled in the async event loop not the default executor.\r\n\r\n## Current Behavior\r\n\r\nScheduled partial-wrapped async functions are executed in the incorrect underlying executor.\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\nasync def tick(s):\r\n    print(f'{s}: time is: %s' % datetime.datetime.now())\r\n        scheduler = AsyncIOScheduler()\r\n        scheduler.add_job(tick, 'interval', seconds=3) # correct executor\r\n        scheduler.add_job(partial(tick, 'partial'), 'interval', seconds=3) # incorrect executor\r\n```\r\n\r\n## Context (Environment)\r\n\r\nasync calls are not being awaited.\r\n\r\n## Detailed Description\r\n\r\nI will submit a pull request shortly which has a correct partial unwrapping implementation of iscoroutinefunction along with the changes to asyncio, tornado executors and the test_util test suite.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/396", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/396/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/396/events", "html_url": "https://github.com/agronholm/apscheduler/issues/396", "id": 499882890, "node_id": "MDU6SXNzdWU0OTk4ODI4OTA=", "number": 396, "title": "why use del thread here ? thanks.", "user": {"login": "sherry0429", "id": 11309831, "node_id": "MDQ6VXNlcjExMzA5ODMx", "avatar_url": "https://avatars2.githubusercontent.com/u/11309831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherry0429", "html_url": "https://github.com/sherry0429", "followers_url": "https://api.github.com/users/sherry0429/followers", "following_url": "https://api.github.com/users/sherry0429/following{/other_user}", "gists_url": "https://api.github.com/users/sherry0429/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherry0429/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherry0429/subscriptions", "organizations_url": "https://api.github.com/users/sherry0429/orgs", "repos_url": "https://api.github.com/users/sherry0429/repos", "events_url": "https://api.github.com/users/sherry0429/events{/privacy}", "received_events_url": "https://api.github.com/users/sherry0429/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-29T08:55:34Z", "updated_at": "2019-09-29T09:00:17Z", "closed_at": "2019-09-29T09:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "first, sorry, I try to send email but i not find any email address here, so I push this here,\r\n\r\nrecently I read the code about apscheduler and I find this code in background.py\r\n\r\n```python\r\n    def shutdown(self, *args, **kwargs):\r\n        super(BackgroundScheduler, self).shutdown(*args, **kwargs)\r\n        self._thread.join()\r\n        del self._thread\r\n```\r\n\r\ncould you tell me why when _thread join and then call del ? \r\nI guess this is for resources recycle but i am not sure,\r\n\r\nI try this:\r\n```python\r\nimport threading\r\nimport time\r\n\r\ndef test():\r\n    while True:\r\n        print(\"hello\")\r\n        time.sleep(1)\r\n    print(\"stopping ....\")\r\n\r\nth = threading.Thread(target=test)\r\nth.daemon = False\r\nth.start()\r\ntime.sleep(5)\r\nprint(\"try stop\")\r\nth.join()\r\ndel th\r\nprint(\"done\")\r\n```\r\n\r\nand i find it never print \"done\", could you help me understand this ? thanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/395", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/395/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/395/events", "html_url": "https://github.com/agronholm/apscheduler/issues/395", "id": 498138501, "node_id": "MDU6SXNzdWU0OTgxMzg1MDE=", "number": 395, "title": "Excuse me, why not add locks to control the repeated calls of tasks caused by multiple processes.", "user": {"login": "zdYng", "id": 17880611, "node_id": "MDQ6VXNlcjE3ODgwNjEx", "avatar_url": "https://avatars3.githubusercontent.com/u/17880611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdYng", "html_url": "https://github.com/zdYng", "followers_url": "https://api.github.com/users/zdYng/followers", "following_url": "https://api.github.com/users/zdYng/following{/other_user}", "gists_url": "https://api.github.com/users/zdYng/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdYng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdYng/subscriptions", "organizations_url": "https://api.github.com/users/zdYng/orgs", "repos_url": "https://api.github.com/users/zdYng/repos", "events_url": "https://api.github.com/users/zdYng/events{/privacy}", "received_events_url": "https://api.github.com/users/zdYng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-25T08:43:49Z", "updated_at": "2019-09-25T08:52:22Z", "closed_at": "2019-09-25T08:52:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't currently use the library without adding a lock. Can the author add a @func to provide a high-performance lock?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/394", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/394/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/394/events", "html_url": "https://github.com/agronholm/apscheduler/issues/394", "id": 498053950, "node_id": "MDU6SXNzdWU0OTgwNTM5NTA=", "number": 394, "title": "How to dynamically add new scheduled tasks after the scheduler.start() starts", "user": {"login": "zdYng", "id": 17880611, "node_id": "MDQ6VXNlcjE3ODgwNjEx", "avatar_url": "https://avatars3.githubusercontent.com/u/17880611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdYng", "html_url": "https://github.com/zdYng", "followers_url": "https://api.github.com/users/zdYng/followers", "following_url": "https://api.github.com/users/zdYng/following{/other_user}", "gists_url": "https://api.github.com/users/zdYng/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdYng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdYng/subscriptions", "organizations_url": "https://api.github.com/users/zdYng/orgs", "repos_url": "https://api.github.com/users/zdYng/repos", "events_url": "https://api.github.com/users/zdYng/events{/privacy}", "received_events_url": "https://api.github.com/users/zdYng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-25T05:20:04Z", "updated_at": "2019-09-25T05:28:06Z", "closed_at": "2019-09-25T05:28:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/392", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/392/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/392/events", "html_url": "https://github.com/agronholm/apscheduler/issues/392", "id": 495814396, "node_id": "MDU6SXNzdWU0OTU4MTQzOTY=", "number": 392, "title": "Return value of the scheduled function", "user": {"login": "salmanshahid8", "id": 19222248, "node_id": "MDQ6VXNlcjE5MjIyMjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/19222248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salmanshahid8", "html_url": "https://github.com/salmanshahid8", "followers_url": "https://api.github.com/users/salmanshahid8/followers", "following_url": "https://api.github.com/users/salmanshahid8/following{/other_user}", "gists_url": "https://api.github.com/users/salmanshahid8/gists{/gist_id}", "starred_url": "https://api.github.com/users/salmanshahid8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salmanshahid8/subscriptions", "organizations_url": "https://api.github.com/users/salmanshahid8/orgs", "repos_url": "https://api.github.com/users/salmanshahid8/repos", "events_url": "https://api.github.com/users/salmanshahid8/events{/privacy}", "received_events_url": "https://api.github.com/users/salmanshahid8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-19T13:52:51Z", "updated_at": "2019-09-19T14:59:01Z", "closed_at": "2019-09-19T13:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nSince a few days I am looking for a solution to get the returned values of the function that executes at a scheduled time. Here is a sample function.\r\n\r\n```\r\ndef get_data(dir):\r\n    df = pd.DataFrame()\r\n    file_name = \"nofile\"\r\n    # The rest of the body of the code executes and updates the two variables df and file_name\r\n    return df, file_name\r\n```\r\n\r\nWhat I want to do is to schedule this function at 6:00 AM. If the _file_name_ remains \"nofile\" after the execution of \"get_data()\" at 6:00 AM, the function should be re-executed at 6:00 PM. So like this\r\n\r\n```\r\n def sched():\r\n    # Schedule at 6 AM\r\n    # Here I cannot get the file_name as return value of get_data()\r\n    if file_name == \"nofile\":\r\n        # Schedule at 6 PM\r\n        file_name = \"nofile\"\r\n```\r\n\r\nI have no idea how to do it with apscheduler. Please help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/390", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/390/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/390/events", "html_url": "https://github.com/agronholm/apscheduler/issues/390", "id": 491991876, "node_id": "MDU6SXNzdWU0OTE5OTE4NzY=", "number": 390, "title": "remove job not stop func thread / process", "user": {"login": "sherry0429", "id": 11309831, "node_id": "MDQ6VXNlcjExMzA5ODMx", "avatar_url": "https://avatars2.githubusercontent.com/u/11309831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherry0429", "html_url": "https://github.com/sherry0429", "followers_url": "https://api.github.com/users/sherry0429/followers", "following_url": "https://api.github.com/users/sherry0429/following{/other_user}", "gists_url": "https://api.github.com/users/sherry0429/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherry0429/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherry0429/subscriptions", "organizations_url": "https://api.github.com/users/sherry0429/orgs", "repos_url": "https://api.github.com/users/sherry0429/repos", "events_url": "https://api.github.com/users/sherry0429/events{/privacy}", "received_events_url": "https://api.github.com/users/sherry0429/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-09-11T03:04:44Z", "updated_at": "2019-09-17T03:16:10Z", "closed_at": "2019-09-17T03:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Expected Behavior\r\nI use Background Apscheduler to schedule my jobs,  my job function will boot some threads or processes (use openstack.taskflow)\r\nwhen i call job.remove(), it want to job stopped.\r\n\r\n\r\n## Current Behavior\r\nI use Background Apscheduler to schedule my jobs,  my job function will boot some threads or processes.\r\nwhen i call job.remove(), it not stopped. still running ( i can see log from it )\r\n\r\n## Steps to Reproduce\r\n1. make a simple taskflow example and \"run\" method\r\n2.apscheduler add job -> \"run\" method\r\n3.get job instance and call job.remove()\r\n4.job not stopped.\r\n\r\n\r\nI want to know how to stop job (not just remove it from schedule) ? is there i need some extra code to stop my job without apscheduler ?\r\n\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/387", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/387/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/387/events", "html_url": "https://github.com/agronholm/apscheduler/issues/387", "id": 479461983, "node_id": "MDU6SXNzdWU0Nzk0NjE5ODM=", "number": 387, "title": "schedule async function", "user": {"login": "zkdfbb", "id": 3276284, "node_id": "MDQ6VXNlcjMyNzYyODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3276284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkdfbb", "html_url": "https://github.com/zkdfbb", "followers_url": "https://api.github.com/users/zkdfbb/followers", "following_url": "https://api.github.com/users/zkdfbb/following{/other_user}", "gists_url": "https://api.github.com/users/zkdfbb/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkdfbb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkdfbb/subscriptions", "organizations_url": "https://api.github.com/users/zkdfbb/orgs", "repos_url": "https://api.github.com/users/zkdfbb/repos", "events_url": "https://api.github.com/users/zkdfbb/events{/privacy}", "received_events_url": "https://api.github.com/users/zkdfbb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-12T04:22:37Z", "updated_at": "2019-08-12T08:52:41Z", "closed_at": "2019-08-12T08:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I add an async function, It works well, but if I use cython build, it doesn't work.\r\n\r\nhere is test.py\r\n\r\n```\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\nimport asyncio\r\n\r\n\r\nclass Pipe:\r\n\r\n    def __init__(self):\r\n        self.sched = AsyncIOScheduler()\r\n        self.loop = asyncio.get_event_loop()\r\n\r\n    async def run(self):\r\n        print(f'start run sched: {self.loop.time()}')\r\n\r\n    def main(self):\r\n        self.sched.add_job(self.run, 'interval', seconds=1)\r\n        self.sched.start()\r\n        self.loop.run_forever()\r\n\r\n\r\ndef main():\r\n    pipe = Pipe()\r\n    pipe.main()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nand setup.py\r\n\r\n```\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nextensions = []\r\nextensions.append(Extension('test', ['test.py']))\r\nsetup(ext_modules=cythonize(extensions, compiler_directives={'language_level': 3}))\r\n```\r\n\r\nbuild:  \r\n\r\n```\r\npython setup.py build_ext --inplace\r\n```\r\n\r\nrun: \r\n\r\n```\r\npython -c 'from test import main; main()'\r\n```\r\n\r\nit shows:\r\n\r\n```\r\n/root/.miniconda3/lib/python3.7/asyncio/base_events.py:1765: RuntimeWarning: coroutine 'Pipe.run' was never awaited\r\n  handle = None  # Needed to break cycles when an exception occurs.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/386", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/386/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/386/events", "html_url": "https://github.com/agronholm/apscheduler/issues/386", "id": 476211446, "node_id": "MDU6SXNzdWU0NzYyMTE0NDY=", "number": 386, "title": "Jobstore TypeError: can't pickle thread.lock objects", "user": {"login": "srPuebla", "id": 35097197, "node_id": "MDQ6VXNlcjM1MDk3MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/35097197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srPuebla", "html_url": "https://github.com/srPuebla", "followers_url": "https://api.github.com/users/srPuebla/followers", "following_url": "https://api.github.com/users/srPuebla/following{/other_user}", "gists_url": "https://api.github.com/users/srPuebla/gists{/gist_id}", "starred_url": "https://api.github.com/users/srPuebla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srPuebla/subscriptions", "organizations_url": "https://api.github.com/users/srPuebla/orgs", "repos_url": "https://api.github.com/users/srPuebla/repos", "events_url": "https://api.github.com/users/srPuebla/events{/privacy}", "received_events_url": "https://api.github.com/users/srPuebla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-02T14:35:17Z", "updated_at": "2019-08-03T15:40:01Z", "closed_at": "2019-08-02T17:52:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nVersion Python 2.7.15\r\nSQLAlchemy (1.3.3)\r\nAPScheduler (3.6.1)\r\n\r\nI have an issue with APScheduler. Using jobstore and trying to pass the \"scheduler\" to the function thread, you obtain the error:\r\n\r\n  File \"C:\\Python27\\lib\\site-packages\\apscheduler\\jobstores\\sqlalchemy.py\", line 95, in add_job\r\n    'job_state': pickle.dumps(job.__getstate__(), self.pickle_protocol)\r\nTypeError: can't pickle thread.lock objects\r\n\r\nI have the next script:\r\n\r\n```\r\n\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\nimport random\r\nimport time\r\n\r\ndef tasks_implementer(job_scheduler, ticket_id):\r\n    print(\"Thread Start \"+str(ticket_id))\r\n    print(str(job_scheduler.state))\r\n    time.sleep(3)\r\n    print(\"Thread End \"+str(ticket_id))\r\n\r\n\r\nDB_HOSTNAME  = \"127.0.0.1\"     # TODO ENCODE\r\nDB_PORT      = 3306            # TODO ENCODE\r\nTUFIN_DB     = \"PontAxiansDB\"  # TODO ENCODE\r\nDB_USER      = \"root\"          # TODO ENCODE\r\nDB_PWD       = \"\"              # TODO ENCODE\r\n\r\nTABLE_JOBSTORE = \"jobrestore_threads\"\r\n#URL_JOBSTORE = 'mysql://%s:%s@%s/%s' % (DB_USER, DB_PWD, DB_HOSTNAME, TUFIN_DB)\r\nURL_JOBSTORE = 'mysql+mysqlconnector://%s:%s@%s/%s' % (DB_USER, DB_PWD, DB_HOSTNAME, TUFIN_DB)\r\n\r\n\r\njob_store = SQLAlchemyJobStore(url = URL_JOBSTORE, tablename = TABLE_JOBSTORE)\r\njob_scheduler = BackgroundScheduler()\r\njob_scheduler.add_jobstore(job_store)\r\njob_scheduler.start()\r\nprint(str(job_scheduler.state))\r\n\r\ntry:\r\n    while True:\r\n        ticket_id = random.randint(1,101)\r\n        job_scheduler.add_job(\r\n                tasks_implementer,\r\n                'interval',\r\n                seconds= 5,\r\n                kwargs={\r\n                    'job_scheduler': job_scheduler,\r\n                    'ticket_id': str(ticket_id),\r\n                },\r\n                id=str(ticket_id))\r\n        time.sleep(100)\r\n        time.sleep(2)\r\nexcept (KeyboardInterrupt, SystemExit):\r\n    job_scheduler.shutdown()\r\n\r\n\r\n```\r\n\r\nAs you can see, i am trying to pass object \"job_scheduler\" to \"task_implementer\" method, cause i want to add more jobs inside the job. It is working if i remove \"job_scheduler\" from the variables or if i remove the jobstore.\r\n\r\nCould you help me?\r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/383", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/383/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/383/events", "html_url": "https://github.com/agronholm/apscheduler/issues/383", "id": 470878280, "node_id": "MDU6SXNzdWU0NzA4NzgyODA=", "number": 383, "title": "please help", "user": {"login": "flyfire100", "id": 28288582, "node_id": "MDQ6VXNlcjI4Mjg4NTgy", "avatar_url": "https://avatars0.githubusercontent.com/u/28288582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flyfire100", "html_url": "https://github.com/flyfire100", "followers_url": "https://api.github.com/users/flyfire100/followers", "following_url": "https://api.github.com/users/flyfire100/following{/other_user}", "gists_url": "https://api.github.com/users/flyfire100/gists{/gist_id}", "starred_url": "https://api.github.com/users/flyfire100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flyfire100/subscriptions", "organizations_url": "https://api.github.com/users/flyfire100/orgs", "repos_url": "https://api.github.com/users/flyfire100/repos", "events_url": "https://api.github.com/users/flyfire100/events{/privacy}", "received_events_url": "https://api.github.com/users/flyfire100/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-22T03:46:22Z", "updated_at": "2019-07-22T11:04:40Z", "closed_at": "2019-07-22T11:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i test my code, i find a random problem, this  is my  code\r\n```python3\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.events import EVENT_JOB_EXECUTED,EVENT_JOB_ERROR\r\nimport time\r\n\r\nscheduler = BackgroundScheduler()\r\n \r\n\r\n\r\ndef  mythandler(event):\r\n    if event.exception:\r\n        print(event.job_id, \"is error=======\")\r\n    else:\r\n        print(event.job_id, \"is normal==========\")\r\n        scheduler.remove_job(event.job_id)\r\n\r\ndef job1( text):\r\n    time.sleep(2)\r\n    return \"hello\",\"minix\"\r\n    \r\nscheduler.add_listener(mythandler,EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\r\nscheduler.start()\r\n\r\n\r\nfor i in range(5):   \r\n    scheduler.add_job(job1, 'interval', id=str(i),seconds=1,args=[\"hello\"])\r\n\r\n\r\nwhile True:\r\n    jobs = scheduler.get_jobs()\r\n    for job in jobs:\r\n        print(\"jobid is \",job.id)\r\n    time.sleep(1)\r\n```\r\n\r\ni  think  job1 will  run  five  times, but sometimes it   will run six times, like this\r\n![image](https://user-images.githubusercontent.com/28288582/61605016-45e0f580-ac76-11e9-8b2d-b1754d859d4b.png)\r\n\r\nso please help \r\n\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/382", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/382/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/382/events", "html_url": "https://github.com/agronholm/apscheduler/issues/382", "id": 470339575, "node_id": "MDU6SXNzdWU0NzAzMzk1NzU=", "number": 382, "title": "Incorrect source code on pypi?", "user": {"login": "synapticarbors", "id": 589279, "node_id": "MDQ6VXNlcjU4OTI3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/589279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synapticarbors", "html_url": "https://github.com/synapticarbors", "followers_url": "https://api.github.com/users/synapticarbors/followers", "following_url": "https://api.github.com/users/synapticarbors/following{/other_user}", "gists_url": "https://api.github.com/users/synapticarbors/gists{/gist_id}", "starred_url": "https://api.github.com/users/synapticarbors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synapticarbors/subscriptions", "organizations_url": "https://api.github.com/users/synapticarbors/orgs", "repos_url": "https://api.github.com/users/synapticarbors/repos", "events_url": "https://api.github.com/users/synapticarbors/events{/privacy}", "received_events_url": "https://api.github.com/users/synapticarbors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-19T13:56:48Z", "updated_at": "2019-07-19T14:05:14Z", "closed_at": "2019-07-19T14:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was attempting to build APScheduler 3.6.1 for conda-forge and was running into errors about imports of `six`, which looking at the source on github should not be there. When I downloaded the tarball from pypi, I can see that it looks to contain an old version of the code since all of the python 2.X dependencies are still listed and imported.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/379", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/379/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/379/events", "html_url": "https://github.com/agronholm/apscheduler/issues/379", "id": 459775971, "node_id": "MDU6SXNzdWU0NTk3NzU5NzE=", "number": 379, "title": "Feature Request: stop_job() API", "user": {"login": "wck821829906", "id": 17002975, "node_id": "MDQ6VXNlcjE3MDAyOTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/17002975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wck821829906", "html_url": "https://github.com/wck821829906", "followers_url": "https://api.github.com/users/wck821829906/followers", "following_url": "https://api.github.com/users/wck821829906/following{/other_user}", "gists_url": "https://api.github.com/users/wck821829906/gists{/gist_id}", "starred_url": "https://api.github.com/users/wck821829906/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wck821829906/subscriptions", "organizations_url": "https://api.github.com/users/wck821829906/orgs", "repos_url": "https://api.github.com/users/wck821829906/repos", "events_url": "https://api.github.com/users/wck821829906/events{/privacy}", "received_events_url": "https://api.github.com/users/wck821829906/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T09:07:17Z", "updated_at": "2019-11-12T09:01:24Z", "closed_at": "2019-06-24T09:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If it is possible to develop a API  to stop a running job, for example stop_job()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/377", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/377/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/377/events", "html_url": "https://github.com/agronholm/apscheduler/issues/377", "id": 459610874, "node_id": "MDU6SXNzdWU0NTk2MTA4NzQ=", "number": 377, "title": "scheduler.get_jobs() does not return jobstore jobs", "user": {"login": "p-doyle", "id": 16737327, "node_id": "MDQ6VXNlcjE2NzM3MzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/16737327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-doyle", "html_url": "https://github.com/p-doyle", "followers_url": "https://api.github.com/users/p-doyle/followers", "following_url": "https://api.github.com/users/p-doyle/following{/other_user}", "gists_url": "https://api.github.com/users/p-doyle/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-doyle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-doyle/subscriptions", "organizations_url": "https://api.github.com/users/p-doyle/orgs", "repos_url": "https://api.github.com/users/p-doyle/repos", "events_url": "https://api.github.com/users/p-doyle/events{/privacy}", "received_events_url": "https://api.github.com/users/p-doyle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-23T19:48:52Z", "updated_at": "2019-06-23T19:51:40Z", "closed_at": "2019-06-23T19:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may not be a bug but after loading a jobstore with existing jobs, nothing is output from print_jobs():\r\n```\r\nscheduler = BackgroundScheduler()\r\nscheduler.add_jobstore('sqlalchemy', alias='my_jobstore', url='sqlite:///example.db')\r\nscheduler.print_jobs()\r\n```\r\n\r\nI would expect the jobs loaded from the jobstore to be pending but only after calling .start() will there be any output.  It seems the jobs are still available in scheduler._jobstores but they are only printed if the scheduler hasn't started yet...(see https://github.com/agronholm/apscheduler/blob/50a7e3935b19e01ce58582c5aae2fe9ccbfda988/apscheduler/schedulers/base.py#L664)  is that intended functionality?  I am interested in a way to get jobs from a jobstore before the starting the scheduler.\r\n\r\nThanks for all your work on this!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/376", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/376/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/376/events", "html_url": "https://github.com/agronholm/apscheduler/issues/376", "id": 459218728, "node_id": "MDU6SXNzdWU0NTkyMTg3Mjg=", "number": 376, "title": "catch error if no local timezone", "user": {"login": "naseemkullah", "id": 24660299, "node_id": "MDQ6VXNlcjI0NjYwMjk5", "avatar_url": "https://avatars0.githubusercontent.com/u/24660299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naseemkullah", "html_url": "https://github.com/naseemkullah", "followers_url": "https://api.github.com/users/naseemkullah/followers", "following_url": "https://api.github.com/users/naseemkullah/following{/other_user}", "gists_url": "https://api.github.com/users/naseemkullah/gists{/gist_id}", "starred_url": "https://api.github.com/users/naseemkullah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naseemkullah/subscriptions", "organizations_url": "https://api.github.com/users/naseemkullah/orgs", "repos_url": "https://api.github.com/users/naseemkullah/repos", "events_url": "https://api.github.com/users/naseemkullah/events{/privacy}", "received_events_url": "https://api.github.com/users/naseemkullah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230270, "node_id": "MDU6TGFiZWwzNDgyMzAyNzA=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T14:13:15Z", "updated_at": "2019-06-22T13:20:09Z", "closed_at": "2019-06-22T13:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to catch the following error:\r\n\r\n```\r\nraise pytz.UnknownTimeZoneError('Can not find any timezone configuration')\r\npytz.exceptions.UnknownTimeZoneError: 'Can not find any timezone configuration'\r\n```\r\n\r\nand fallback to UTC?\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/375", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/375/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/375/events", "html_url": "https://github.com/agronholm/apscheduler/issues/375", "id": 453812823, "node_id": "MDU6SXNzdWU0NTM4MTI4MjM=", "number": 375, "title": "\"Interval\" scheduler skipping first iteration", "user": {"login": "ozone89", "id": 7688273, "node_id": "MDQ6VXNlcjc2ODgyNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7688273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozone89", "html_url": "https://github.com/ozone89", "followers_url": "https://api.github.com/users/ozone89/followers", "following_url": "https://api.github.com/users/ozone89/following{/other_user}", "gists_url": "https://api.github.com/users/ozone89/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozone89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozone89/subscriptions", "organizations_url": "https://api.github.com/users/ozone89/orgs", "repos_url": "https://api.github.com/users/ozone89/repos", "events_url": "https://api.github.com/users/ozone89/events{/privacy}", "received_events_url": "https://api.github.com/users/ozone89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-08T16:48:09Z", "updated_at": "2019-06-09T10:07:41Z", "closed_at": "2019-06-09T10:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this an intended behaviour?\r\n\r\nI get there's a workaround [proposed by the author himself](https://stackoverflow.com/questions/43254531/python-apschedule-blockingscheduler-with-interval-trigger-start-immediately), but it seems a bit counter-intuitive to me, and it involves adding `from datetime import datetime` to your code, further cluttering it.\r\n\r\nCould it be possible to at least add an option, like `skip_first_run=[True|False]`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/372", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/372/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/372/events", "html_url": "https://github.com/agronholm/apscheduler/issues/372", "id": 428232593, "node_id": "MDU6SXNzdWU0MjgyMzI1OTM=", "number": 372, "title": "Daylight saving on interval trigger", "user": {"login": "sdefauw", "id": 3833227, "node_id": "MDQ6VXNlcjM4MzMyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3833227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdefauw", "html_url": "https://github.com/sdefauw", "followers_url": "https://api.github.com/users/sdefauw/followers", "following_url": "https://api.github.com/users/sdefauw/following{/other_user}", "gists_url": "https://api.github.com/users/sdefauw/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdefauw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdefauw/subscriptions", "organizations_url": "https://api.github.com/users/sdefauw/orgs", "repos_url": "https://api.github.com/users/sdefauw/repos", "events_url": "https://api.github.com/users/sdefauw/events{/privacy}", "received_events_url": "https://api.github.com/users/sdefauw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-04-02T13:37:57Z", "updated_at": "2019-06-11T12:51:12Z", "closed_at": "2019-06-11T12:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe observed an issue on during the daylight saving clock on Europ/Brussels TZ during the night of 30 March and 31 March. After this time every schedule is executed with 1 hour of delay.\r\n\r\nWe thing it's an issue on the interval trigger (the cron trigger is already reported on your website). Mabe it is a behavior expected. But we want to have more information about it.\r\n\r\n## Test\r\nWe did a simple test during in order to tackel the issue:\r\n```python\r\nimport pytz\r\nimport datetime\r\n\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\n\r\ndef task():\r\n\tprint(\"TASK EXECUTED\")\r\n\r\nscheduler = BackgroundScheduler()\r\n\r\nscheduler.add_job(task, 'interval',\r\n\tstart_date=datetime.datetime(2019, 3, 26, 16, 0, 0),\r\n\tdays=7\r\n)\r\nscheduler.add_job(task, 'interval',\r\n\tstart_date=datetime.datetime(2019, 4, 2, 17, 0, 0),\r\n\tdays=7\r\n)\r\nscheduler.add_job(task, 'interval',\r\n\tstart_date=datetime.datetime(2019, 4, 2, 20, 0, 0),\r\n\tdays=7\r\n)\r\n\r\nscheduler.start()\r\nscheduler.print_jobs()\r\n\r\n```\r\n\r\n## Expected Behavior\r\noutput expected:\r\n```\r\nJobstore default:\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 16:00:00 CEST)\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 17:00:00 CEST)\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 20:00:00 CEST)\r\n```\r\nWhere we shedule at 16:00.\r\n\r\n## Current Behavior\r\noutput expected:\r\n```\r\nJobstore default:\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 17:00:00 CEST)\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 17:00:00 CEST)\r\n    task (trigger: interval[7 days, 0:00:00], next run at: 2019-04-02 20:00:00 CEST)\r\n```\r\nWhere we shedule at 17:00 and we expect 16:00\r\n\r\n## Solution (path)\r\nThe path we made now, it's changing the method `get_next_fire_time` in  `trigger/interval.py`\r\n\r\nAdding \r\n```python\r\nnext_fire_time = next_fire_time.tzinfo.localize(next_fire_time.replace(tzinfo=None))\r\n```\r\nand it become like this:\r\n```python\r\n def get_next_fire_time(self, previous_fire_time, now):\r\n        if previous_fire_time:\r\n            next_fire_time = previous_fire_time + self.interval\r\n        elif self.start_date > now:\r\n            next_fire_time = self.start_date\r\n        else:\r\n            timediff_seconds = timedelta_seconds(now - self.start_date)\r\n            next_interval_num = int(ceil(timediff_seconds / self.interval_length))\r\n            next_fire_time = self.start_date + self.interval * next_interval_num\r\n            # PATCH MADE\r\n            next_fire_time = next_fire_time.tzinfo.localize(next_fire_time.replace(tzinfo=None))\r\n\r\n        if self.jitter is not None:\r\n            next_fire_time = self._apply_jitter(next_fire_time, self.jitter, now)\r\n\r\n        if not self.end_date or next_fire_time <= self.end_date:\r\n            return self.timezone.normalize(next_fire_time)\r\n```\r\n\r\nSo we would like to have your expetise in order to know if this patch is good or we made a mistake ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/371", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/371/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/371/events", "html_url": "https://github.com/agronholm/apscheduler/issues/371", "id": 427977745, "node_id": "MDU6SXNzdWU0Mjc5Nzc3NDU=", "number": 371, "title": "QtScheduler - OverflowError", "user": {"login": "WildStriker", "id": 19638916, "node_id": "MDQ6VXNlcjE5NjM4OTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/19638916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WildStriker", "html_url": "https://github.com/WildStriker", "followers_url": "https://api.github.com/users/WildStriker/followers", "following_url": "https://api.github.com/users/WildStriker/following{/other_user}", "gists_url": "https://api.github.com/users/WildStriker/gists{/gist_id}", "starred_url": "https://api.github.com/users/WildStriker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WildStriker/subscriptions", "organizations_url": "https://api.github.com/users/WildStriker/orgs", "repos_url": "https://api.github.com/users/WildStriker/repos", "events_url": "https://api.github.com/users/WildStriker/events{/privacy}", "received_events_url": "https://api.github.com/users/WildStriker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-02T01:11:50Z", "updated_at": "2019-06-23T18:38:09Z", "closed_at": "2019-06-23T18:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was creating a custom trigger to run on a periodic basis using a QtScheduler when I encountered this issue.  This issue seems similiar to #263 but perhaps specific to QtScheduler.\r\n\r\nRunning on Windows 10, tested with both 32 and 64 bit versions of python\r\n\r\nI didn't notice the issue right away as I had some jobs runnings every 10 seconds or so when when I cleared it out I got an OverflowError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"\\lib\\site-packages\\apscheduler\\schedulers\\qt.py\", line 42, in _process_jobs\r\n    self._start_timer(wait_seconds)\r\n  File \"\\lib\\site-packages\\apscheduler\\schedulers\\qt.py\", line 29, in _start_timer\r\n    self._timer = QTimer.singleShot(wait_seconds * 1000, self._process_jobs)\r\nOverflowError: argument 1 overflowed: value must be in the range -2147483648 to 2147483647\r\n```\r\n\r\nIssue seems to be when waiting longer than int max in seconds.  \r\n\r\nShould be a quick fix as I tested it by making a const variable `INT_MAX = 2147483647` in qt.py and took the min value between that and `wait_seconds * 1000` before passing it to the QTimer\r\n\r\n## Expected Behavior\r\nwait_seconds * 1000 should fall back to 2147483647 for QtScheduler\r\n\r\n## Current Behavior\r\nIf the only job(s) available total wait seconds is over this amount it will crash\r\n\r\n## Steps to Reproduce\r\nAdd a job with any trigger, so long as its next fire date causes an OverflowError (30 days from now should do the trick)\r\n\r\n## Example\r\n(this is a copy of the QtScheduler example all i did was add a start_date 30 days from now)\r\n```py\r\nfrom datetime import datetime, timedelta\r\nimport signal\r\nimport sys\r\n\r\nfrom apscheduler.schedulers.qt import QtScheduler\r\n\r\ntry:\r\n    from PyQt5.QtWidgets import QApplication, QLabel\r\nexcept ImportError:\r\n    try:\r\n        from PyQt4.QtGui import QApplication, QLabel\r\n    except ImportError:\r\n        from PySide.QtGui import QApplication, QLabel\r\n\r\n\r\ndef tick():\r\n    label.setText('Tick! The time is: %s' % datetime.now())\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n\r\n    # This enables processing of Ctrl+C keypresses\r\n    signal.signal(signal.SIGINT, lambda *args: QApplication.quit())\r\n\r\n    label = QLabel('The timer text will appear here in a moment!')\r\n    label.setWindowTitle('QtScheduler example')\r\n    label.setFixedSize(280, 50)\r\n    label.show()\r\n\r\n    scheduler = QtScheduler()\r\n\r\n    # any trigger, so long as next fire time causes overflow\r\n    scheduler.add_job(tick, 'interval', seconds=3, start_date=datetime.now() + timedelta(days=30))\r\n    scheduler.start()\r\n\r\n    # Execution will block here until the user closes the windows or Ctrl+C is pressed.\r\n    app.exec_()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/370", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/370/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/370/events", "html_url": "https://github.com/agronholm/apscheduler/issues/370", "id": 427614646, "node_id": "MDU6SXNzdWU0Mjc2MTQ2NDY=", "number": 370, "title": "Bug in handling transition to DST for specific timezones (e.g. Europe/Dublin)", "user": {"login": "backbord", "id": 6814946, "node_id": "MDQ6VXNlcjY4MTQ5NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6814946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/backbord", "html_url": "https://github.com/backbord", "followers_url": "https://api.github.com/users/backbord/followers", "following_url": "https://api.github.com/users/backbord/following{/other_user}", "gists_url": "https://api.github.com/users/backbord/gists{/gist_id}", "starred_url": "https://api.github.com/users/backbord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/backbord/subscriptions", "organizations_url": "https://api.github.com/users/backbord/orgs", "repos_url": "https://api.github.com/users/backbord/repos", "events_url": "https://api.github.com/users/backbord/events{/privacy}", "received_events_url": "https://api.github.com/users/backbord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T09:58:14Z", "updated_at": "2019-04-01T10:56:13Z", "closed_at": "2019-04-01T10:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Alex,\r\n\r\nsorry to bother again with pesky timezone issues.\r\nToday, I stumbled upon the following problem.\r\nI saw it for Europe/Dublin, but it might occur for other timezones as well.\r\nInterestingly, the problem didn't show up in my tests for Europe/Berlin and US/Eastern -- but my tests might be off.\r\n\r\nPerhaps you could have a look at this? I guess this might be a relatively easy fix for you.\r\n\r\nPlease let me know if I can be of further assistance.\r\n\r\nThanks,  \r\nTim\r\n\r\n----\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nFor certain time zones (Europe/Dublin) and certain points in time `dt`, CronTrigger's method `get_next_fire_time(previous_fire_time=None, now=dt)` gives a result that is **before** `dt` and does not conform to the CronTrigger's configuration.\r\n\r\nGiven a CronTrigger with `hour=1` and `timezone=\"Europe/Dublin\"`, asking for the next firing time with `now` being from the (open) interval (2019-03-30 01:00:00 Europe/Dublin, 2019-03-31 01:00:00 Europe/Dublin), the proposed firing time is 2019-03-31 00:00:00 Europe/Dublin.\r\nThis poses two problems:\r\n- The firing time should be 2019-04-01 01:00:00 Europe/Dublin (hour 1-2 on 2019-01-31 does not exist).\r\n- For `now` from the (open) interval (2019-03-31 00:00:00 Europe/Dublin, 2019-03-31 01:00:00 Europe/Dublin), the firing time is **before** what was given as `now`.\r\n\r\n## Expected Behavior\r\nAs the hour 1 on March 31st 2019 does not exist in Europe/Dublin, the CronTrigger should give 2019-04-01 01:00:00 Europe/Dublin for all values for `now` in the (open) interval (2019-03-30 01:00:00 Europe/Dublin, 2019-03-31 01:00:00 Europe/Dublin).\r\n\r\n## Current Behavior\r\nSee code above.\r\n\r\n## Steps to Reproduce\r\n```python\r\nfrom datetime import datetime\r\nimport pytz\r\nfrom apscheduler.triggers.cron import CronTrigger\r\ntz = pytz.timezone('Europe/Dublin')\r\ntrigger = CronTrigger(timezone='Europe/Dublin', hour=1)\r\nnows = [\r\n    tz.localize(datetime(2019, 3, 30, 1, 0), is_dst=None),\r\n    tz.localize(datetime(2019, 3, 30, 1, 1), is_dst=None),\r\n    tz.localize(datetime(2019, 3, 31, 0, 59), is_dst=None),\r\n    tz.localize(datetime(2019, 3, 31, 2, 0), is_dst=None),\r\n]\r\nfor now in nows:\r\n    fire_time = trigger.get_next_fire_time(previous_fire_time=None, now=now)\r\n    print(f'now={now}, fire={fire_time}')\r\n```\r\nCurrent output:\r\n```\r\nnow=2019-03-30 01:00:00+00:00, fire=2019-03-30 01:00:00+00:00\r\nnow=2019-03-30 01:01:00+00:00, fire=2019-03-31 00:00:00+00:00  # this does not have hour=1\r\nnow=2019-03-31 00:59:00+00:00, fire=2019-03-31 00:00:00+00:00  # this is before now, does not have hour=1\r\nnow=2019-03-31 02:00:00+01:00, fire=2019-04-01 01:00:00+01:00\r\n```\r\nExpected output:\r\n```\r\nnow=2019-03-30 01:00:00+00:00, fire=2019-03-30 01:00:00+00:00\r\nnow=2019-03-30 01:01:00+00:00, fire=2019-04-01 01:00:00+01:00  # no 2019-03-31 01:00:00 in Europe/Dublin\r\nnow=2019-03-31 00:59:00+00:00, fire=2019-04-01 01:00:00+01:00  # no 2019-03-31 01:00:00 in Europe/Dublinnot have hour=1\r\nnow=2019-03-31 02:00:00+01:00, fire=2019-04-01 01:00:00+01:00\r\n```\r\n\r\n## Context (Environment)\r\nAPScheduler 3.5.3 (pip), Python 3.6 and 3.7.\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/369", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/369/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/369/events", "html_url": "https://github.com/agronholm/apscheduler/issues/369", "id": 425739323, "node_id": "MDU6SXNzdWU0MjU3MzkzMjM=", "number": 369, "title": "Python3 read error with job added with python2", "user": {"login": "giligiliduang", "id": 33048762, "node_id": "MDQ6VXNlcjMzMDQ4NzYy", "avatar_url": "https://avatars3.githubusercontent.com/u/33048762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giligiliduang", "html_url": "https://github.com/giligiliduang", "followers_url": "https://api.github.com/users/giligiliduang/followers", "following_url": "https://api.github.com/users/giligiliduang/following{/other_user}", "gists_url": "https://api.github.com/users/giligiliduang/gists{/gist_id}", "starred_url": "https://api.github.com/users/giligiliduang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giligiliduang/subscriptions", "organizations_url": "https://api.github.com/users/giligiliduang/orgs", "repos_url": "https://api.github.com/users/giligiliduang/repos", "events_url": "https://api.github.com/users/giligiliduang/events{/privacy}", "received_events_url": "https://api.github.com/users/giligiliduang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T02:57:04Z", "updated_at": "2019-07-17T21:20:33Z", "closed_at": "2019-07-17T21:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\nAll jobs should be read correctly\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n\r\n```\r\ndef _reconstitute_job(self, job_state):\r\n        job_state = pickle.loads(job_state) #UnicodeDecodeError: 'ascii' codec can't decode byte 0xe3 in position 1: ordinal not in range(128)\r\n        job_state['jobstore'] = self\r\n        job = Job.__new__(Job)\r\n        job.__setstate__(job_state)\r\n        job._scheduler = self._scheduler\r\n        job._jobstore_alias = self._alias\r\n        return job\r\n```\r\nThen I followed https://stackoverflow.com/questions/11305790/pickle-incompatibility-of-numpy-arrays-between-python-2-and-3 change the code to ` job_state = pickle.loads(job_state,encoding=\"latin1\")` then raise an `TypeError: an integer is required (got type str)` this question is very confused\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Python3 reads the job added with python2\r\n\r\n\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\napscheduler-version:**3.6.0**\r\npython-version:**3.6.2**\r\nos:**windows**\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/368", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/368/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/368/events", "html_url": "https://github.com/agronholm/apscheduler/issues/368", "id": 425400039, "node_id": "MDU6SXNzdWU0MjU0MDAwMzk=", "number": 368, "title": "Except apps.py calling BackgroundScheduler not scheduling in django?", "user": {"login": "PrabhuSKIT", "id": 46523452, "node_id": "MDQ6VXNlcjQ2NTIzNDUy", "avatar_url": "https://avatars1.githubusercontent.com/u/46523452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrabhuSKIT", "html_url": "https://github.com/PrabhuSKIT", "followers_url": "https://api.github.com/users/PrabhuSKIT/followers", "following_url": "https://api.github.com/users/PrabhuSKIT/following{/other_user}", "gists_url": "https://api.github.com/users/PrabhuSKIT/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrabhuSKIT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrabhuSKIT/subscriptions", "organizations_url": "https://api.github.com/users/PrabhuSKIT/orgs", "repos_url": "https://api.github.com/users/PrabhuSKIT/repos", "events_url": "https://api.github.com/users/PrabhuSKIT/events{/privacy}", "received_events_url": "https://api.github.com/users/PrabhuSKIT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T12:53:35Z", "updated_at": "2019-03-27T10:01:01Z", "closed_at": "2019-03-27T10:00:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing the scheduling method in updater.py file. when I am calling that method from apps .py file it's scheduling the job working fine but the same method I am calling from another python file (testing.py) it's not working I don't know why?  If I am doing anything wrong please let me know? Please Help me out this problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/366", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/366/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/366/events", "html_url": "https://github.com/agronholm/apscheduler/issues/366", "id": 423576534, "node_id": "MDU6SXNzdWU0MjM1NzY1MzQ=", "number": 366, "title": "the method inherited from base class can not be executed by processpool executor", "user": {"login": "yj97595077", "id": 3832956, "node_id": "MDQ6VXNlcjM4MzI5NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3832956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yj97595077", "html_url": "https://github.com/yj97595077", "followers_url": "https://api.github.com/users/yj97595077/followers", "following_url": "https://api.github.com/users/yj97595077/following{/other_user}", "gists_url": "https://api.github.com/users/yj97595077/gists{/gist_id}", "starred_url": "https://api.github.com/users/yj97595077/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yj97595077/subscriptions", "organizations_url": "https://api.github.com/users/yj97595077/orgs", "repos_url": "https://api.github.com/users/yj97595077/repos", "events_url": "https://api.github.com/users/yj97595077/events{/privacy}", "received_events_url": "https://api.github.com/users/yj97595077/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T05:22:41Z", "updated_at": "2019-06-30T14:08:32Z", "closed_at": "2019-06-30T14:08:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Environment\r\nMy OS is macOS Mojave(10.14.3). The python and apscheduler is as blew.\r\n```\r\n# python -V\r\nPython 2.7.10\r\n```\r\n```\r\n# pip freeze\r\nAPScheduler==3.6.0\r\nfuncsigs==1.0.2\r\nfutures==3.2.0\r\npytz==2018.9\r\nsix==1.12.0\r\ntzlocal==1.5.1\r\n```\r\n\r\n## Steps to Reproduce\r\nI write one simple example to reproduce the problem.\r\n`sched.py` is python main file, `base_action.py` and `action.py` are apscheduler job action.\r\n\r\n- sched.py\r\n\r\n```\r\n# -*- coding: utf-8 -*-\r\nimport logging\r\nimport os\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\nfrom action import Action1, Action2\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig()\r\n    scheduler = BlockingScheduler()\r\n    scheduler.add_executor('processpool')\r\n    scheduler.add_job(Action1.run, 'interval', seconds=3)\r\n    scheduler.add_job(Action2.run, 'interval', seconds=3)\r\n    print('Press Ctrl+{0} to exit'.format('Break' if os.name == 'nt' else 'C'))\r\n\r\n    try:\r\n        scheduler.start()\r\n    except (KeyboardInterrupt, SystemExit):\r\n        pass\r\n```\r\n\r\n- base_action.py\r\n```\r\n# -*- coding: utf-8 -*-\r\nfrom datetime import datetime\r\n\r\nclass BaseAction(object):\r\n    @classmethod\r\n    def run(cls):\r\n        print('[%s]: The time is [%s]' % (cls.__name__, datetime.now()))\r\n```\r\n\r\n- action.py\r\n```\r\n# -*- coding: utf-8 -*-\r\nfrom base_action import BaseAction\r\n\r\nclass Action1(BaseAction):\r\n    pass\r\n\r\nclass Action2(BaseAction):\r\n    pass\r\n```\r\n\r\n## Expected Behavior\r\nI expect I can get the result as blew.\r\n```\r\n# python /Users/yangjian/Code/python-test/sched.py\r\nPress Ctrl+C to exit\r\n[Action1]: The time is [2019-03-21 12:35:45.060848]\r\n[Action2]: The time is [2019-03-21 12:35:45.061480]\r\n[Action1]: The time is [2019-03-21 12:35:48.060196]\r\n[Action2]: The time is [2019-03-21 12:35:48.060664]\r\n[Action1]: The time is [2019-03-21 12:35:51.060686]\r\n[Action2]: The time is [2019-03-21 12:35:51.061235]\r\n[Action1]: The time is [2019-03-21 12:35:54.060251]\r\n[Action2]: The time is [2019-03-21 12:35:54.061208]\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\n## Current Behavior\r\nNow, when I execute the program, I get the exception as blew.\r\n```\r\n# python /Users/yangjian/Code/python-test/sched.py\r\nPress Ctrl+C to exit\r\nProcess Process-1:\r\nTraceback (most recent call last):\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\r\n    self.run()\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/multiprocessing/process.py\", line 114, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/yangjian/Code/python-test/venv/lib/python2.7/site-packages/concurrent/futures/process.py\", line 122, in _process_worker\r\n    call_item = call_queue.get(block=True)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/multiprocessing/queues.py\", line 117, in get\r\n    res = self._recv()\r\n  File \"/Users/yangjian/Code/python-test/venv/lib/python2.7/site-packages/apscheduler/job.py\", line 272, in __setstate__\r\n    self.func = ref_to_obj(self.func_ref)\r\n  File \"/Users/yangjian/Code/python-test/venv/lib/python2.7/site-packages/apscheduler/util.py\", line 292, in ref_to_obj\r\n    raise LookupError('Error resolving reference %s: error looking up object' % ref)\r\nLookupError: Error resolving reference base_action:Action1.run: error looking up object\r\n```\r\n\r\n## Troubleshooting\r\n1. I change the executor from `processpool` to `threadpool`, it works as blew.\r\n```\r\n# python /Users/yangjian/Code/python-test/sched.py\r\nPress Ctrl+C to exit\r\n[Action1]: The time is [2019-03-21 12:39:16.788010]\r\n[Action2]: The time is [2019-03-21 12:39:16.788848]\r\n[Action1]: The time is [2019-03-21 12:39:19.787204]\r\n[Action2]: The time is [2019-03-21 12:39:19.787837]\r\n\r\nProcess finished with exit code 0\r\n```\r\nSo, there is nothing wrong with the test code.\r\n\r\n2. I set the breakpoint on apscheduler/util.py line 266\uff0cand debug the code.\r\nThe apscheduler/util.py line 247 to 266 is as blew.\r\n```\r\ndef obj_to_ref(obj):\r\n    \"\"\"\r\n    Returns the path to the given callable.\r\n\r\n    :rtype: str\r\n    :raises TypeError: if the given object is not callable\r\n    :raises ValueError: if the given object is a :class:`~functools.partial`, lambda or a nested\r\n        function\r\n\r\n    \"\"\"\r\n    if isinstance(obj, partial):\r\n        raise ValueError('Cannot create a reference to a partial()')\r\n\r\n    name = get_callable_name(obj)\r\n    if '<lambda>' in name:\r\n        raise ValueError('Cannot create a reference to a lambda')\r\n    if '<locals>' in name:\r\n        raise ValueError('Cannot create a reference to a nested function')\r\n\r\n    return '%s:%s' % (obj.__module__, name)\r\n```\r\n`name` is `Action1.run`\r\n`obj` is `<bound method type.run of <class 'action.Action1'>>`\r\n`obj.__module__` is `base_action`\r\nthe return is `base_action.Action1.run`\r\nThat is not the expected. The expected return shoud be `action.Action1.run`.\r\n`obj.__self__.__module__` is `action`\r\nSo, we can modify `obj.__module__` to `obj.__self__.__module__` to solve the problem.\r\n\r\n3. modify `obj.__module__` to `obj.__self__.__module__`, execute the program again\r\n```\r\n# python /Users/yangjian/Code/python-test/sched.py\r\nPress Ctrl+C to exit\r\n[Action1]: The time is [2019-03-21 13:03:50.199919]\r\n[Action2]: The time is [2019-03-21 13:03:50.211368]\r\n[Action1]: The time is [2019-03-21 13:03:53.211861]\r\n[Action2]: The time is [2019-03-21 13:03:53.213038]\r\n```\r\nThe problem is solved.\r\n\r\n4. The complete solution is as blew about apscheduler/util.py.\r\n```\r\ndef obj_to_ref(obj):\r\n    ......\r\n    ......\r\n    return '%s:%s' % (obj.__module__, name)\r\n----->\r\ndef obj_to_ref(obj):\r\n    ......\r\n    ......\r\n    if ismethod(obj):\r\n        if hasattr(obj, 'im_self') and obj.im_self:\r\n            # bound method\r\n            module = obj.im_self.__module__\r\n        elif hasattr(obj, 'im_class') and obj.im_class:\r\n            # unbound method\r\n            module = obj.im_class.__module__\r\n        else:\r\n            module = obj.__module__\r\n    else:\r\n        module = obj.__module__\r\n    return '%s:%s' % (module, name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/365", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/365/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/365/events", "html_url": "https://github.com/agronholm/apscheduler/issues/365", "id": 422002654, "node_id": "MDU6SXNzdWU0MjIwMDI2NTQ=", "number": 365, "title": "Exception at Redis job store.", "user": {"login": "losywee", "id": 11990999, "node_id": "MDQ6VXNlcjExOTkwOTk5", "avatar_url": "https://avatars0.githubusercontent.com/u/11990999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/losywee", "html_url": "https://github.com/losywee", "followers_url": "https://api.github.com/users/losywee/followers", "following_url": "https://api.github.com/users/losywee/following{/other_user}", "gists_url": "https://api.github.com/users/losywee/gists{/gist_id}", "starred_url": "https://api.github.com/users/losywee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/losywee/subscriptions", "organizations_url": "https://api.github.com/users/losywee/orgs", "repos_url": "https://api.github.com/users/losywee/repos", "events_url": "https://api.github.com/users/losywee/events{/privacy}", "received_events_url": "https://api.github.com/users/losywee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-18T01:34:54Z", "updated_at": "2019-04-23T03:03:01Z", "closed_at": "2019-03-18T01:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\n\r\nTraceback (most recent call last):\r\n  File \"scheduler.py\", line 18, in <module>\r\n    scheduler.start()\r\n  File \"/lib/python3.7/site-packages/apscheduler/schedulers/background.py\", line 33, in start\r\n    BaseScheduler.start(self, *args, **kwargs)\r\n  File \"/lib/python3.7/site-packages/apscheduler/schedulers/base.py\", line 158, in start\r\n    self._real_add_job(job, jobstore_alias, replace_existing)\r\n  File \"/lib/python3.7/site-packages/apscheduler/schedulers/base.py\", line 864, in _real_add_job\r\n    store.add_job(job)\r\n  File \"/lib/python3.7/site-packages/apscheduler/jobstores/redis.py\", line 84, in add_job\r\n    pipe.zadd(self.run_times_key, datetime_to_utc_timestamp(job.next_run_time), job.id)\r\n  File \"/lib/python3.7/site-packages/redis/client.py\", line 2320, in zadd\r\n    for pair in iteritems(mapping):\r\n  File \"/lib/python3.7/site-packages/redis/_compat.py\", line 109, in iteritems\r\n    return iter(x.items())\r\nAttributeError: 'float' object has no attribute 'items'\r\n\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n1. Python 3.7.2 \r\n2. apscheduler:latest\r\n3. redis:latest ( Redis client library )\r\n4. redis-server ( All version had tested. )\r\n\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/358", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/358/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/358/events", "html_url": "https://github.com/agronholm/apscheduler/issues/358", "id": 405139177, "node_id": "MDU6SXNzdWU0MDUxMzkxNzc=", "number": 358, "title": "import error in python 3.6", "user": {"login": "guoliangli123", "id": 12670391, "node_id": "MDQ6VXNlcjEyNjcwMzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/12670391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guoliangli123", "html_url": "https://github.com/guoliangli123", "followers_url": "https://api.github.com/users/guoliangli123/followers", "following_url": "https://api.github.com/users/guoliangli123/following{/other_user}", "gists_url": "https://api.github.com/users/guoliangli123/gists{/gist_id}", "starred_url": "https://api.github.com/users/guoliangli123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guoliangli123/subscriptions", "organizations_url": "https://api.github.com/users/guoliangli123/orgs", "repos_url": "https://api.github.com/users/guoliangli123/repos", "events_url": "https://api.github.com/users/guoliangli123/events{/privacy}", "received_events_url": "https://api.github.com/users/guoliangli123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-31T08:50:37Z", "updated_at": "2019-01-31T16:09:25Z", "closed_at": "2019-01-31T16:09:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\nwhen I use apscheduler,I meet import error,my Python version is 3.6\r\n\r\n## Current Behavior\r\n\r\nTraceback (most recent call last):\r\n  File \"D:/python/ctQuant/model/schedule.py\", line 8, in <module>\r\n    from apscheduler.schedulers.blocking import BlockingScheduler\r\n  File \"C:\\Users\\guoliangli213070\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\apscheduler\\__init__.py\", line 1, in <module>\r\n    from pkg_resources import get_distribution, DistributionNotFound\r\n  File \"C:\\Users\\guoliangli213070\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 26, in <module>\r\n    import zipfile\r\n  File \"C:\\Users\\guoliangli213070\\AppData\\Local\\Programs\\Python\\Python36\\lib\\zipfile.py\", line 84, in <module>\r\n    sizeEndCentDir = struct.calcsize(structEndArchive)\r\nAttributeError: module 'struct' has no attribute 'calcsize'\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\nmy code is just like \r\n`\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\n`\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/355", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/355/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/355/events", "html_url": "https://github.com/agronholm/apscheduler/issues/355", "id": 402864086, "node_id": "MDU6SXNzdWU0MDI4NjQwODY=", "number": 355, "title": "apscheduler listener, don't work asyncio.ensure_future", "user": {"login": "kirichokjaroslav", "id": 7544341, "node_id": "MDQ6VXNlcjc1NDQzNDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7544341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirichokjaroslav", "html_url": "https://github.com/kirichokjaroslav", "followers_url": "https://api.github.com/users/kirichokjaroslav/followers", "following_url": "https://api.github.com/users/kirichokjaroslav/following{/other_user}", "gists_url": "https://api.github.com/users/kirichokjaroslav/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirichokjaroslav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirichokjaroslav/subscriptions", "organizations_url": "https://api.github.com/users/kirichokjaroslav/orgs", "repos_url": "https://api.github.com/users/kirichokjaroslav/repos", "events_url": "https://api.github.com/users/kirichokjaroslav/events{/privacy}", "received_events_url": "https://api.github.com/users/kirichokjaroslav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T19:37:15Z", "updated_at": "2019-01-31T09:48:01Z", "closed_at": "2019-01-31T09:48:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nTell me, where I am wrong? I create a TornadoScheduler in the context of a Tordado server. Assign a listener and a execute function. But I get not exactly what I need.\r\n\r\n```\r\nscheduler.add_listener(_scheduler_listener,\r\n                                    apscheduler.events.EVENT_JOB_ADDED     |\r\n                                    apscheduler.events.EVENT_JOB_MODIFIED  |\r\n                                    apscheduler.events.EVENT_JOB_SUBMITTED |\r\n                                    apscheduler.events.EVENT_JOB_EXECUTED  |\r\n                                    apscheduler.events.EVENT_JOB_ERROR)\r\n\r\n......\r\n\r\nasync def processing(event: JobEvent):\r\n    await asyncio.sleep(1)\r\n    \r\ndef _scheduler_listener(event: JobEvent):\r\n    asyncio.ensure_future(processing(event))\r\n```\r\n\r\n\r\nThe scheduler starts the task and all 3 events with the code 512 - added, 32768 - submitted and 4096 - executed come to the listener, but it asyncio.ensure_future() performed only 2 times, when 512 and 32768 codes.\r\n\r\nWhat is the reason? Thx.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/354", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/354/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/354/events", "html_url": "https://github.com/agronholm/apscheduler/issues/354", "id": 399779466, "node_id": "MDU6SXNzdWUzOTk3Nzk0NjY=", "number": 354, "title": "Jobstore with pysqlcipher", "user": {"login": "masoudr", "id": 6974428, "node_id": "MDQ6VXNlcjY5NzQ0Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6974428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masoudr", "html_url": "https://github.com/masoudr", "followers_url": "https://api.github.com/users/masoudr/followers", "following_url": "https://api.github.com/users/masoudr/following{/other_user}", "gists_url": "https://api.github.com/users/masoudr/gists{/gist_id}", "starred_url": "https://api.github.com/users/masoudr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masoudr/subscriptions", "organizations_url": "https://api.github.com/users/masoudr/orgs", "repos_url": "https://api.github.com/users/masoudr/repos", "events_url": "https://api.github.com/users/masoudr/events{/privacy}", "received_events_url": "https://api.github.com/users/masoudr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-16T12:08:00Z", "updated_at": "2019-01-19T04:19:25Z", "closed_at": "2019-01-19T04:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying to integrate `pysqlcipher3` with jobstores. I'm using this method with default SQLite:\r\n```\r\n        jobstores = {\r\n            'default': SQLAlchemyJobStore(url='sqlite:///test.db')\r\n        }\r\n```\r\nI tried to use [this refrence](https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#module-sqlalchemy.dialects.sqlite.pysqlcipher) but didn't work for me.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/353", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/353/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/353/events", "html_url": "https://github.com/agronholm/apscheduler/issues/353", "id": 399717973, "node_id": "MDU6SXNzdWUzOTk3MTc5NzM=", "number": 353, "title": "jobstores default redis", "user": {"login": "wuyazibest", "id": 39460149, "node_id": "MDQ6VXNlcjM5NDYwMTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/39460149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuyazibest", "html_url": "https://github.com/wuyazibest", "followers_url": "https://api.github.com/users/wuyazibest/followers", "following_url": "https://api.github.com/users/wuyazibest/following{/other_user}", "gists_url": "https://api.github.com/users/wuyazibest/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuyazibest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuyazibest/subscriptions", "organizations_url": "https://api.github.com/users/wuyazibest/orgs", "repos_url": "https://api.github.com/users/wuyazibest/repos", "events_url": "https://api.github.com/users/wuyazibest/events{/privacy}", "received_events_url": "https://api.github.com/users/wuyazibest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-16T09:27:07Z", "updated_at": "2019-02-28T07:08:11Z", "closed_at": "2019-02-28T07:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport time\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.redis import RedisJobStore\r\nfrom apscheduler.executors.pool import ThreadPoolExecutor\r\n\r\nclass SchedulerTask():\r\n    def __init__(self):\r\n        jobstores = {\r\n            \"default\": RedisJobStore(host=\"localhost\", port=6379, db=13)  # \u5b58\u50a8\u5668\r\n            # \"default\": SQLAlchemyJobStore(url='sqlite:///jobs.sqlite') # \u5b58\u50a8\u5668\r\n        }\r\n        executors = {\r\n            \"default\": ThreadPoolExecutor(10)  # \u6700\u5927\u7ebf\u7a0b\u6570\r\n        }\r\n        job_defaults = {\r\n            \"coalesce\": False,\r\n            \"max_instances\": 5  # \u6700\u5927\u4f5c\u4e1a\u5b9e\u4f8b\u6570\r\n        }\r\n\r\n        scheduler = BackgroundScheduler(jobstores=jobstores, executors=executors, \r\n                                                                job_defaults=job_defaults)\r\n        scheduler.start()\r\n        self.app = scheduler\r\n\r\n     def add_task(self):\r\n        self.app.add_job(my_job_1,id=\"job_1\",trigger=\"interval\",seconds=3)  # \u6bcf5\u5206\u949f\u6267\u884c\u4e00\u6b21\r\n        self.app.add_job(my_job_2,id=\"job_3\",trigger=\"interval\",seconds=3)  # \u6bcf5\u5206\u949f\u6267\u884c\u4e00\u6b21\r\n        self.app.add_job(my_job_2,id=\"job_2\",trigger=\"cron\",hour=0,minute=3)   # \u6bcf\u59290\u70b9\u8fc75\u5206\u6267\u884c\u4e00\u6b21\r\n\r\n    def modify_task(self, job_id=\"job_1\", time=5):\r\n        self.app.reschedule_job(job_id, trigger=\"interval\", seconds=time)\r\n\r\n    def remove_task(self, job_id=\"job_1\"):\r\n        self.app.remove_job(job_id)\r\n\r\n    def remove_all_task(self):\r\n        self.app.remove_all_jobs()\r\n\r\n\r\ndef my_job_1():\r\n    print(\"job start working\")\r\n\r\ndef my_job_2():\r\n    print(\"job two start working\")\r\n\r\nif __name__ == '__main__':\r\n    app = SchedulerTask()\r\n    app.add_task()\r\n    time.sleep(5)\r\n    app.modify_task(time=1)\r\n    time.sleep(5)\r\n    app.remove_task()\r\n    time.sleep(5)\r\n    app.remove_all_task()\r\n```\r\n\r\nerror message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/wu/PythonDevelop/exercise/apscheduler_task/main.py\", line 69, in <module>\r\n    app.add_task()\r\n  File \"/home/wu/PythonDevelop/exercise/apscheduler_task/main.py\", line 45, in add_task\r\n    self.app.add_job(my_job_1,id=\"job_1\",trigger=\"interval\",seconds=3)  # \u6bcf5\u5206\u949f\u6267\u884c\u4e00\u6b21\r\n  File \"/home/wu/.virtualenvs/py3.5_devlop/lib/python3.5/site-packages/apscheduler/schedulers/base.py\", line 439, in add_job\r\n    self._real_add_job(job, jobstore, replace_existing)\r\n  File \"/home/wu/.virtualenvs/py3.5_devlop/lib/python3.5/site-packages/apscheduler/schedulers/base.py\", line 864, in _real_add_job\r\n    store.add_job(job)\r\n  File \"/home/wu/.virtualenvs/py3.5_devlop/lib/python3.5/site-packages/apscheduler/jobstores/redis.py\", line 84, in add_job\r\n    pipe.zadd(self.run_times_key, datetime_to_utc_timestamp(job.next_run_time), job.id)\r\n  File \"/home/wu/.virtualenvs/py3.5_devlop/lib/python3.5/site-packages/redis/client.py\", line 2263, in zadd\r\n    for pair in iteritems(mapping):\r\n  File \"/home/wu/.virtualenvs/py3.5_devlop/lib/python3.5/site-packages/redis/_compat.py\", line 123, in iteritems\r\n    return iter(x.items())\r\nAttributeError: 'float' object has no attribute 'items'\r\n```\r\n\r\nProcess finished with exit code 1\r\n\r\n\r\n\r\n\r\nif me use   \"default\": SQLAlchemyJobStore(url='sqlite:///jobs.sqlite')    the successful\r\nbut me use \"default\": RedisJobStore()    is fail\r\n\r\n\r\nI hope everyone can understand what I said.\r\nthank all very much\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/352", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/352/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/352/events", "html_url": "https://github.com/agronholm/apscheduler/issues/352", "id": 393984903, "node_id": "MDU6SXNzdWUzOTM5ODQ5MDM=", "number": 352, "title": "apscheduler crash - Value Error related to timezone", "user": {"login": "AdityaVarmaG", "id": 22930397, "node_id": "MDQ6VXNlcjIyOTMwMzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/22930397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdityaVarmaG", "html_url": "https://github.com/AdityaVarmaG", "followers_url": "https://api.github.com/users/AdityaVarmaG/followers", "following_url": "https://api.github.com/users/AdityaVarmaG/following{/other_user}", "gists_url": "https://api.github.com/users/AdityaVarmaG/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdityaVarmaG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdityaVarmaG/subscriptions", "organizations_url": "https://api.github.com/users/AdityaVarmaG/orgs", "repos_url": "https://api.github.com/users/AdityaVarmaG/repos", "events_url": "https://api.github.com/users/AdityaVarmaG/events{/privacy}", "received_events_url": "https://api.github.com/users/AdityaVarmaG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-25T08:22:17Z", "updated_at": "2018-12-29T09:21:23Z", "closed_at": "2018-12-29T09:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\nMy application uses apscheduler to run 8 threads in parallel. Whenever the below error occurs, apscheduler crashes without reporting to log/listeners.\r\n\r\n## Current Behavior\r\n![aps_base_month_error](https://user-images.githubusercontent.com/22930397/50415950-d6a53f00-0815-11e9-804a-a5f72ef22b83.PNG)\r\n\r\n## Steps to Reproduce\r\nThis occurs rarely once/twice in a day (not fixed time).\r\n\r\n## Context (Environment)\r\nMy application runs on CentOS. I created 8 jobs using background apscheduler\r\n\r\n## Detailed Description\r\nWith this ValueError, all my jobs (8 running) suddenly stopped. I added logging,  exception and shutdown listeners. But nothing reports. \r\n\r\nI have no clue why this happens. This error started occurring after upgrading to latest 3.5.3 version.\r\n\r\nIn the current version, I modified the below line in base.py (My system uses UTC). Hopefully this resolves the issue.\r\n#self.timezone = astimezone(config.pop('timezone', None)) or get_localzone()\r\nfrom pytz import timezone\r\nself.timezone = timezone('UTC')\r\n\r\nHow can we detect apscheduler crash (using log and listeners did not work)? Is there any chance to restart all current jobs, when apscheduler crash is detected?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/351", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/351/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/351/events", "html_url": "https://github.com/agronholm/apscheduler/issues/351", "id": 392898241, "node_id": "MDU6SXNzdWUzOTI4OTgyNDE=", "number": 351, "title": "job not execute when system time changed lagging", "user": {"login": "shimanshe", "id": 7099296, "node_id": "MDQ6VXNlcjcwOTkyOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7099296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shimanshe", "html_url": "https://github.com/shimanshe", "followers_url": "https://api.github.com/users/shimanshe/followers", "following_url": "https://api.github.com/users/shimanshe/following{/other_user}", "gists_url": "https://api.github.com/users/shimanshe/gists{/gist_id}", "starred_url": "https://api.github.com/users/shimanshe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shimanshe/subscriptions", "organizations_url": "https://api.github.com/users/shimanshe/orgs", "repos_url": "https://api.github.com/users/shimanshe/repos", "events_url": "https://api.github.com/users/shimanshe/events{/privacy}", "received_events_url": "https://api.github.com/users/shimanshe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-20T05:42:05Z", "updated_at": "2018-12-20T13:10:03Z", "closed_at": "2018-12-20T08:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "environment:\r\nubuntu 14.04, apscheduler 3.5.3\r\n\r\n@sched.scheduled_job('cron', second='*/10')\r\ndef check_time():\r\n\tprint(now_str())\r\n\r\nwhen i change system time 2 minutes lagging, the crob job not execute untill 2 minutes later. than i use\r\ninterval job,\r\n@sched.scheduled_job('interval', seconds=10)\r\ndef check_time():\r\n\tprint(now_str())\r\n\r\nresult is the same.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/349", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/349/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/349/events", "html_url": "https://github.com/agronholm/apscheduler/issues/349", "id": 388911929, "node_id": "MDU6SXNzdWUzODg5MTE5Mjk=", "number": 349, "title": "cronjob 15 10,12 * * 1,7 not supported, ", "user": {"login": "ArduChecker", "id": 20740676, "node_id": "MDQ6VXNlcjIwNzQwNjc2", "avatar_url": "https://avatars0.githubusercontent.com/u/20740676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArduChecker", "html_url": "https://github.com/ArduChecker", "followers_url": "https://api.github.com/users/ArduChecker/followers", "following_url": "https://api.github.com/users/ArduChecker/following{/other_user}", "gists_url": "https://api.github.com/users/ArduChecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArduChecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArduChecker/subscriptions", "organizations_url": "https://api.github.com/users/ArduChecker/orgs", "repos_url": "https://api.github.com/users/ArduChecker/repos", "events_url": "https://api.github.com/users/ArduChecker/events{/privacy}", "received_events_url": "https://api.github.com/users/ArduChecker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230266, "node_id": "MDU6TGFiZWwzNDgyMzAyNjY=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1", "html_url": "https://github.com/agronholm/apscheduler/milestone/1", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1/labels", "id": 1673437, "node_id": "MDk6TWlsZXN0b25lMTY3MzQzNw==", "number": 1, "title": "4.0", "description": "Replace pickle serialization with more secure alternatives\r\nPass a context object to job callables (optional?)\r\nForce coalesce=True but pass all scheduled run times in the job context argument\r\nDon't automatically remove any jobs from job stores anymore\r\nOverhaul the test suite\r\nDrop the PyQT scheduler", "creator": {"login": "agronholm", "id": 130003, "node_id": "MDQ6VXNlcjEzMDAwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronholm", "html_url": "https://github.com/agronholm", "followers_url": "https://api.github.com/users/agronholm/followers", "following_url": "https://api.github.com/users/agronholm/following{/other_user}", "gists_url": "https://api.github.com/users/agronholm/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronholm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronholm/subscriptions", "organizations_url": "https://api.github.com/users/agronholm/orgs", "repos_url": "https://api.github.com/users/agronholm/repos", "events_url": "https://api.github.com/users/agronholm/events{/privacy}", "received_events_url": "https://api.github.com/users/agronholm/received_events", "type": "User", "site_admin": false}, "open_issues": 15, "closed_issues": 4, "state": "open", "created_at": "2016-03-30T07:24:12Z", "updated_at": "2020-05-23T16:52:15Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2018-12-08T11:09:25Z", "updated_at": "2020-05-23T16:48:20Z", "closed_at": "2020-05-23T16:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "running \r\nrc = scheduler.add_job(takePicture, CronTrigger.from_crontab(cronjob))\r\n\r\nwith cronjob = 15 10,12 * * 1,7\r\n\r\nstops execution, no result (rc) given back\r\n\r\nAccording https://crontab.guru/#15_10,12_*_*_1,7\r\n..this is a valid job\r\n\r\n\u201cAt minute 15 past hour 10 and 12 on Monday and Sunday.\u201d\r\n\r\nOutput\r\n1st -> valid one\r\n2nd -> code stops \r\n\r\n0 0 1,13 * *\r\ntakePicture (trigger: cron[month='*', day='1,13', day_of_week='*', hour='0', minute='0'], next run at: 2018-12-13 00:00:00 CET)\r\n\r\n15 10,12 * * 1,7\r\n\r\n\r\nCode:\r\ndef on_message(client,userdata, msg):\r\n    if msg.topic == \"/apscheduler/job\":\r\n        cronjob = msg.payload   \r\n        rc = scheduler.add_job(takePicture, CronTrigger.from_crontab(cronjob))\r\n        print rc\r\n        logger.info(\"New Cronjob: \"+str(cronjob))\r\n        PublishMQTT('INFO','New Cronjob: {}'.format(str(msg.payload)))\r\n    \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/348", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/348/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/348/events", "html_url": "https://github.com/agronholm/apscheduler/issues/348", "id": 387530291, "node_id": "MDU6SXNzdWUzODc1MzAyOTE=", "number": 348, "title": "the background scheduler does not update every 5 second", "user": {"login": "dwy904", "id": 11993462, "node_id": "MDQ6VXNlcjExOTkzNDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/11993462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwy904", "html_url": "https://github.com/dwy904", "followers_url": "https://api.github.com/users/dwy904/followers", "following_url": "https://api.github.com/users/dwy904/following{/other_user}", "gists_url": "https://api.github.com/users/dwy904/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwy904/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwy904/subscriptions", "organizations_url": "https://api.github.com/users/dwy904/orgs", "repos_url": "https://api.github.com/users/dwy904/repos", "events_url": "https://api.github.com/users/dwy904/events{/privacy}", "received_events_url": "https://api.github.com/users/dwy904/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-04T23:47:41Z", "updated_at": "2018-12-05T08:05:03Z", "closed_at": "2018-12-05T07:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I let the job schedule to run every day at a certain time like 23:00?\r\n\r\n```python\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom datetime import datetime \r\n\r\ndef sensor():\r\n    global a\r\n    a = str(datetime.now())\r\n    print(a)\r\n\r\nsched = BackgroundScheduler(daemon = True)\r\nsched.add_job(sensor, 'cron', second = 5)\r\n\r\nsched.start()\r\n```\r\nI received the update from every minute.\r\n\r\n```\r\n2018-12-04 15:45:05.004699\r\n2018-12-04 15:46:05.005055\r\n2018-12-04 15:47:05.004249\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/343", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/343/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/343/events", "html_url": "https://github.com/agronholm/apscheduler/issues/343", "id": 383804475, "node_id": "MDU6SXNzdWUzODM4MDQ0NzU=", "number": 343, "title": "docs: add api reference to left navigation pane", "user": {"login": "pohmelie", "id": 2385765, "node_id": "MDQ6VXNlcjIzODU3NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2385765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pohmelie", "html_url": "https://github.com/pohmelie", "followers_url": "https://api.github.com/users/pohmelie/followers", "following_url": "https://api.github.com/users/pohmelie/following{/other_user}", "gists_url": "https://api.github.com/users/pohmelie/gists{/gist_id}", "starred_url": "https://api.github.com/users/pohmelie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pohmelie/subscriptions", "organizations_url": "https://api.github.com/users/pohmelie/orgs", "repos_url": "https://api.github.com/users/pohmelie/repos", "events_url": "https://api.github.com/users/pohmelie/events{/privacy}", "received_events_url": "https://api.github.com/users/pohmelie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348258191, "node_id": "MDU6TGFiZWwzNDgyNTgxOTE=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/documentation", "name": "documentation", "color": "ededed", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-23T12:17:41Z", "updated_at": "2018-11-29T12:19:20Z", "closed_at": "2018-11-29T12:19:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[API reference](https://apscheduler.readthedocs.io/en/latest/py-modindex.html) is most useful day-to-day  page (after you pass tutorial). Second time I spent 5 minutes to find link to this page, since it is not on left navigation pane. Sugget to add it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/342", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/342/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/342/events", "html_url": "https://github.com/agronholm/apscheduler/issues/342", "id": 381433765, "node_id": "MDU6SXNzdWUzODE0MzM3NjU=", "number": 342, "title": "kill job after `maximum number of running instances` several times and restart the job", "user": {"login": "BrikerMan", "id": 9368907, "node_id": "MDQ6VXNlcjkzNjg5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9368907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrikerMan", "html_url": "https://github.com/BrikerMan", "followers_url": "https://api.github.com/users/BrikerMan/followers", "following_url": "https://api.github.com/users/BrikerMan/following{/other_user}", "gists_url": "https://api.github.com/users/BrikerMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrikerMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrikerMan/subscriptions", "organizations_url": "https://api.github.com/users/BrikerMan/orgs", "repos_url": "https://api.github.com/users/BrikerMan/repos", "events_url": "https://api.github.com/users/BrikerMan/events{/privacy}", "received_events_url": "https://api.github.com/users/BrikerMan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T03:43:15Z", "updated_at": "2018-11-16T05:59:27Z", "closed_at": "2018-11-16T05:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "After running for a while, my project will hang and job never finished, then because of the maximum number of running instances, my program will hang forever, is there any way to kill the after several skips and start again?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/341", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/341/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/341/events", "html_url": "https://github.com/agronholm/apscheduler/issues/341", "id": 378151380, "node_id": "MDU6SXNzdWUzNzgxNTEzODA=", "number": 341, "title": "\"Unable to restore job -- removing it.\" Really?", "user": {"login": "vdedyukhin", "id": 11999630, "node_id": "MDQ6VXNlcjExOTk5NjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/11999630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdedyukhin", "html_url": "https://github.com/vdedyukhin", "followers_url": "https://api.github.com/users/vdedyukhin/followers", "following_url": "https://api.github.com/users/vdedyukhin/following{/other_user}", "gists_url": "https://api.github.com/users/vdedyukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdedyukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdedyukhin/subscriptions", "organizations_url": "https://api.github.com/users/vdedyukhin/orgs", "repos_url": "https://api.github.com/users/vdedyukhin/repos", "events_url": "https://api.github.com/users/vdedyukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/vdedyukhin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-07T05:50:07Z", "updated_at": "2018-11-07T09:41:33Z", "closed_at": "2018-11-07T09:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "What a stupid idea - to remove all jobs without asking permission to do it. I don't get it.\r\nIf we start apscheduler 3.4.0 on the database which was used by apscheduler 3.5.0 then everything is instantly lost. Okay, we need version 2 of CronTrigger, but we have version 1. But aren't there a possibility to upgrade? Why do I have to recreate all jobs once again like I have nothing else to do?\r\nWhat's another library or app with the same logic? Excel 2003 cannot open Excel 2010 files but it doesn't erase them as well! I can't believe somebody really considers this logic normal. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/340", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/340/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/340/events", "html_url": "https://github.com/agronholm/apscheduler/issues/340", "id": 375789842, "node_id": "MDU6SXNzdWUzNzU3ODk4NDI=", "number": 340, "title": "CronTrigger.from_crontab only support 5 sections", "user": {"login": "gwh-cpnet", "id": 29444942, "node_id": "MDQ6VXNlcjI5NDQ0OTQy", "avatar_url": "https://avatars3.githubusercontent.com/u/29444942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwh-cpnet", "html_url": "https://github.com/gwh-cpnet", "followers_url": "https://api.github.com/users/gwh-cpnet/followers", "following_url": "https://api.github.com/users/gwh-cpnet/following{/other_user}", "gists_url": "https://api.github.com/users/gwh-cpnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwh-cpnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwh-cpnet/subscriptions", "organizations_url": "https://api.github.com/users/gwh-cpnet/orgs", "repos_url": "https://api.github.com/users/gwh-cpnet/repos", "events_url": "https://api.github.com/users/gwh-cpnet/events{/privacy}", "received_events_url": "https://api.github.com/users/gwh-cpnet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230270, "node_id": "MDU6TGFiZWwzNDgyMzAyNzA=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-31T04:04:46Z", "updated_at": "2019-07-22T13:34:43Z", "closed_at": "2019-07-22T13:34:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\nraw crontab with 6 sections, which starts with second section, should work fine, since second is supported in the trigger\r\n\r\nhttps://github.com/agronholm/apscheduler/blob/18b50d9ee9ff14e816b557e34d7d3abc861d57e5/apscheduler/triggers/cron/__init__.py#L86\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/339", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/339/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/339/events", "html_url": "https://github.com/agronholm/apscheduler/issues/339", "id": 374282722, "node_id": "MDU6SXNzdWUzNzQyODI3MjI=", "number": 339, "title": "Some jobs seems to be missed when i set a crontab task to update system time in Centos6.6", "user": {"login": "wxy929629", "id": 27196120, "node_id": "MDQ6VXNlcjI3MTk2MTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/27196120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxy929629", "html_url": "https://github.com/wxy929629", "followers_url": "https://api.github.com/users/wxy929629/followers", "following_url": "https://api.github.com/users/wxy929629/following{/other_user}", "gists_url": "https://api.github.com/users/wxy929629/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxy929629/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxy929629/subscriptions", "organizations_url": "https://api.github.com/users/wxy929629/orgs", "repos_url": "https://api.github.com/users/wxy929629/repos", "events_url": "https://api.github.com/users/wxy929629/events{/privacy}", "received_events_url": "https://api.github.com/users/wxy929629/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-26T08:40:38Z", "updated_at": "2018-10-30T07:35:55Z", "closed_at": "2018-10-30T07:35:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment: CentOS release 6.6 (Final)\r\n\r\ni set a crontab task to update system time for each hour,like this:\r\n0 0-23/1 * * * /usr/sbin/ntpdate <the time server\u2018s ip> &> /dev/null\r\n\r\nwhen i use add_job() to add a job, the task's interval is 900 seconds, but i find the job is periodly missed:\r\n\r\nThe logs in my app:\r\n2018-10-26 00:48:23,247 INFO: (the task is executing), id:1882\r\n2018-10-26 01:03:23,066 INFO: (the task is executing), id:1882\r\n2018-10-26 01:33:23,076 INFO: (the task is executing), id:1882\r\n2018-10-26 01:48:23,345 INFO: (the task is executing), id:1882\r\n2018-10-26 02:03:23,059 INFO: (the task is executing), id:1882\r\n2018-10-26 02:33:23,054 INFO: (the task is executing), id:1882\r\n2018-10-26 02:48:23,286 INFO: (the task is executing), id:1882\r\n\r\ni dont know if there is any relations between the missed jobs and system time, or just a bug?\r\nmy apscheduler's version is 3.5.1\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/338", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/338/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/338/events", "html_url": "https://github.com/agronholm/apscheduler/issues/338", "id": 374186152, "node_id": "MDU6SXNzdWUzNzQxODYxNTI=", "number": 338, "title": "Cannot shutdown BlockingScheduler from listener", "user": {"login": "defrank", "id": 1741229, "node_id": "MDQ6VXNlcjE3NDEyMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1741229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defrank", "html_url": "https://github.com/defrank", "followers_url": "https://api.github.com/users/defrank/followers", "following_url": "https://api.github.com/users/defrank/following{/other_user}", "gists_url": "https://api.github.com/users/defrank/gists{/gist_id}", "starred_url": "https://api.github.com/users/defrank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defrank/subscriptions", "organizations_url": "https://api.github.com/users/defrank/orgs", "repos_url": "https://api.github.com/users/defrank/repos", "events_url": "https://api.github.com/users/defrank/events{/privacy}", "received_events_url": "https://api.github.com/users/defrank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1", "html_url": "https://github.com/agronholm/apscheduler/milestone/1", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1/labels", "id": 1673437, "node_id": "MDk6TWlsZXN0b25lMTY3MzQzNw==", "number": 1, "title": "4.0", "description": "Replace pickle serialization with more secure alternatives\r\nPass a context object to job callables (optional?)\r\nForce coalesce=True but pass all scheduled run times in the job context argument\r\nDon't automatically remove any jobs from job stores anymore\r\nOverhaul the test suite\r\nDrop the PyQT scheduler", "creator": {"login": "agronholm", "id": 130003, "node_id": "MDQ6VXNlcjEzMDAwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronholm", "html_url": "https://github.com/agronholm", "followers_url": "https://api.github.com/users/agronholm/followers", "following_url": "https://api.github.com/users/agronholm/following{/other_user}", "gists_url": "https://api.github.com/users/agronholm/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronholm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronholm/subscriptions", "organizations_url": "https://api.github.com/users/agronholm/orgs", "repos_url": "https://api.github.com/users/agronholm/repos", "events_url": "https://api.github.com/users/agronholm/events{/privacy}", "received_events_url": "https://api.github.com/users/agronholm/received_events", "type": "User", "site_admin": false}, "open_issues": 15, "closed_issues": 4, "state": "open", "created_at": "2016-03-30T07:24:12Z", "updated_at": "2020-05-23T16:52:15Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2018-10-26T00:49:00Z", "updated_at": "2019-12-10T01:38:04Z", "closed_at": "2019-07-30T17:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\nCalling `BlockingScheduler.shutdown()` from a listener handler should join executor threads from the main thread.\r\n\r\n## Current Behavior\r\nWith the `BlockingScheduler`, listeners are run in a thread.  Calls to `BlockingScheduler.shutdown()` from the listener fail on joining the threads because `shutdown` is meant to be called from the main thread.\r\n```\r\npython bug.py\r\nHello, World!\r\nError notifying listener\r\nTraceback (most recent call last):\r\n  File \"/home/derek/.pyenv/versions/triggered-flows/lib/python3.7/site-packages/apscheduler/schedulers/base.py\", line 828, in _dispatch_event\r\n    cb(event)\r\n  File \"bug.py\", line 14, in shutdown\r\n    scheduler.shutdown()\r\n  File \"/home/derek/.pyenv/versions/triggered-flows/lib/python3.7/site-packages/apscheduler/schedulers/blocking.py\", line 22, in shutdown\r\n    super(BlockingScheduler, self).shutdown(wait)\r\n  File \"/home/derek/.pyenv/versions/triggered-flows/lib/python3.7/site-packages/apscheduler/schedulers/base.py\", line 187, in shutdown\r\n    executor.shutdown(wait)\r\n  File \"/home/derek/.pyenv/versions/triggered-flows/lib/python3.7/site-packages/apscheduler/executors/pool.py\", line 26, in shutdown\r\n    self._pool.shutdown(wait)\r\n  File \"/home/derek/.pyenv/versions/3.7.1/lib/python3.7/concurrent/futures/thread.py\", line 204, in shutdown\r\n    t.join()\r\n  File \"/home/derek/.pyenv/versions/3.7.1/lib/python3.7/threading.py\", line 1029, in join\r\n    raise RuntimeError(\"cannot join current thread\")\r\nRuntimeError: cannot join current thread\r\n```\r\n\r\n## Steps to Reproduce\r\n```\r\nimport time\r\n\r\nfrom apscheduler.events import EVENT_JOB_EXECUTED\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\n\r\n\r\ndef hello():\r\n    print('Hello, World!')\r\n    time.sleep(.1)\r\n\r\n\r\ndef shutdown(event):\r\n    if scheduler.running:\r\n        scheduler.shutdown()\r\n\r\n\r\nif __name__ == '__main__':\r\n    scheduler = BlockingScheduler()\r\n    scheduler.add_listener(shutdown, EVENT_JOB_EXECUTED)\r\n    scheduler.add_job(hello)\r\n\r\n    try:\r\n        scheduler.start()\r\n    except KeyboardInterrupt:\r\n        scheduler.shutdown()\r\n```\r\n\r\n## Context (Environment)\r\nI was trying to use the listener handler to shutdown the scheduler after completing a job for testing purposes.\r\n\r\n\r\n## Detailed Description\r\nOne solution I can think of is a 2-step shutdown where `BlockingScheduler.start` watches for a shutdown event and `BlockingScheduler.shutdown` (or new method) sets the event.\r\n```\r\nimport threading\r\nimport time\r\n\r\nfrom apscheduler.events import EVENT_JOB_EXECUTED\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\n\r\n\r\nclass BlockingScheduler(BackgroundScheduler):\r\n    \"\"\"A scheduler that blocks in the foreground, runs in the\r\n    background, and is killable from a child thread.\r\n\r\n    Use ``BlockingScheduler.run()`` instead of\r\n    ``BlockingScheduler.start()`` and\r\n    ``BlockingScheduler.interrupt()`` instead of\r\n    ``BlockingScheduler.shutdown()``\r\n\r\n    \"\"\"\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        self._interrupt = threading.Event()\r\n\r\n    def _configure(self, config):\r\n        super()._configure(config)\r\n        self._daemon = False\r\n\r\n    def run(self):\r\n        try:\r\n            self.start()\r\n            self._interrupt.wait()\r\n        finally:\r\n            self.shutdown()\r\n        self._interrupt.clear()\r\n\r\n    def interrupt(self):\r\n        self._interrupt.set()\r\n\r\n\r\ndef hello():\r\n    print('Hello, World!')\r\n    time.sleep(.1)\r\n\r\n\r\ndef shutdown(event):\r\n    scheduler.interrupt()\r\n\r\n\r\nif __name__ == '__main__':\r\n    scheduler = BlockingScheduler()\r\n    scheduler.add_listener(shutdown, EVENT_JOB_EXECUTED)\r\n    scheduler.add_job(hello)\r\n\r\n    scheduler.run()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/337", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/337/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/337/events", "html_url": "https://github.com/agronholm/apscheduler/issues/337", "id": 372849685, "node_id": "MDU6SXNzdWUzNzI4NDk2ODU=", "number": 337, "title": "I can only add a max of 10 jobs.", "user": {"login": "Juanjoorrego", "id": 34254118, "node_id": "MDQ6VXNlcjM0MjU0MTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/34254118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Juanjoorrego", "html_url": "https://github.com/Juanjoorrego", "followers_url": "https://api.github.com/users/Juanjoorrego/followers", "following_url": "https://api.github.com/users/Juanjoorrego/following{/other_user}", "gists_url": "https://api.github.com/users/Juanjoorrego/gists{/gist_id}", "starred_url": "https://api.github.com/users/Juanjoorrego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Juanjoorrego/subscriptions", "organizations_url": "https://api.github.com/users/Juanjoorrego/orgs", "repos_url": "https://api.github.com/users/Juanjoorrego/repos", "events_url": "https://api.github.com/users/Juanjoorrego/events{/privacy}", "received_events_url": "https://api.github.com/users/Juanjoorrego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-23T07:35:42Z", "updated_at": "2018-11-29T11:36:32Z", "closed_at": "2018-11-29T11:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to find anywhere in the documentation a way to add more than 10 jobs in parallel. I have about 12 of them, and only ten of them are executed for BlockingScheduler. Any ideas?\r\n\r\nWould be great to add to the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/334", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/334/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/334/events", "html_url": "https://github.com/agronholm/apscheduler/issues/334", "id": 359068656, "node_id": "MDU6SXNzdWUzNTkwNjg2NTY=", "number": 334, "title": "AsyncIOScheduler stops my asyncio loop", "user": {"login": "TheBubblePopped", "id": 35329981, "node_id": "MDQ6VXNlcjM1MzI5OTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/35329981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBubblePopped", "html_url": "https://github.com/TheBubblePopped", "followers_url": "https://api.github.com/users/TheBubblePopped/followers", "following_url": "https://api.github.com/users/TheBubblePopped/following{/other_user}", "gists_url": "https://api.github.com/users/TheBubblePopped/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBubblePopped/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBubblePopped/subscriptions", "organizations_url": "https://api.github.com/users/TheBubblePopped/orgs", "repos_url": "https://api.github.com/users/TheBubblePopped/repos", "events_url": "https://api.github.com/users/TheBubblePopped/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBubblePopped/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T14:17:08Z", "updated_at": "2018-12-05T20:40:34Z", "closed_at": "2018-12-05T20:40:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport twitter\r\nimport discord\r\nimport logging\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\nimport asyncio\r\n\r\n\r\nclient = discord.Client()\r\nshunpo = AsyncIOScheduler(timezone='utc')\r\n\r\n\r\n\r\n@client.event\r\nasync def on_ready():\r\n    print('We have logged in as {0.user}'.format(client))\r\n\r\n@client.event\r\nasync def on_message(self, message):\r\n    if message.author == client.user:\r\n        return\r\n\r\n#define later on if u have more functions\r\ndef setup_shed():\r\n    pass\r\n\r\nasync def botSpeech():\r\n    print(\"happend\")\r\n\r\n    print(\"2ndtime\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    shunpo.add_job(botSpeech, 'cron', day_of_week=1, day='8-15' )\r\n    shunpo.start()\r\n\r\n\r\n    #Making discord rdy and run service\r\n\r\n    client.run('token')\r\n\r\n\r\n```\r\n\r\nThis is my code if i change the     shunpo.add_job(botSpeech, 'cron', day_of_week=1, day='8-15' ) to something else it works for example if i pick just a day or something. \r\n\r\nIf i pick  shunpo.add_job(botSpeech, 'cron', day='day='2nd tue') it does not aswell  the loop of the client.run just stops and i am getting the exit code 0 if i use the      shunpo.add_job(botSpeech, 'cron', minute=3 ) it works f.e. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/331", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/331/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/331/events", "html_url": "https://github.com/agronholm/apscheduler/issues/331", "id": 350502446, "node_id": "MDU6SXNzdWUzNTA1MDI0NDY=", "number": 331, "title": "Flask application context is lost when using a persistent job store", "user": {"login": "petargyurov", "id": 35771636, "node_id": "MDQ6VXNlcjM1NzcxNjM2", "avatar_url": "https://avatars0.githubusercontent.com/u/35771636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petargyurov", "html_url": "https://github.com/petargyurov", "followers_url": "https://api.github.com/users/petargyurov/followers", "following_url": "https://api.github.com/users/petargyurov/following{/other_user}", "gists_url": "https://api.github.com/users/petargyurov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petargyurov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petargyurov/subscriptions", "organizations_url": "https://api.github.com/users/petargyurov/orgs", "repos_url": "https://api.github.com/users/petargyurov/repos", "events_url": "https://api.github.com/users/petargyurov/events{/privacy}", "received_events_url": "https://api.github.com/users/petargyurov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-14T16:24:28Z", "updated_at": "2018-08-15T10:40:06Z", "closed_at": "2018-08-15T10:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Expected Behavior\r\nBe able to store jobs whose functions are wrapped with the `app.app_context()` in a persistent job store like `SQLAlchemyJobStore`. **Note:** this all works fine for `MemoryJobStore`.\r\n\r\n## Current Behavior\r\nFunction reference cannot be resolved when providing a function that is wrapped in another; providing the textual reference does not aleviate the issue because then the application context is lost.\r\n\r\n## Detailed Description\r\nMy Flask application already utilises APScheduler's `MemoryJobStore` to run various tasks. I have a custom class of the scheduler that simply adds the application context to the equation:\r\n\r\n```\r\nclass CustomScheduler(object):\r\n\tdef __init__(self, app=None):\r\n\t\tself._scheduler = BackgroundScheduler()\r\n\t\tself.app = None\r\n\t\tif app:\r\n\t\tself.init_app(app)\r\n\t\r\n\t# stuff ...\r\n\r\n\tdef add_job(self, func, trigger=None, job_id=None, args=None, kwargs=None,\r\n                    replace_existing=False, **trigger_args):\r\n\t\t\r\n                    def wrapped(*args, **kwargs):\r\n\t\t\twith self.app.app_context():\r\n\t\t\t\tfunc(*args, **kwargs)\r\n\t\t\r\n\t\treturn self._scheduler.add_job(wrapped, id=job_id, trigger=trigger, args=args,\r\n\t\t\t\t\t       kwargs=kwargs, replace_existing=replace_existing,\r\n\t\t\t\t\t       **trigger_args)\r\n```\r\n\r\nThis works fine with the in-memory jobstore. In my views I can schedule jobs as expected. However, when I configure the scheduler with a `SQLAlchemyJobStore`, the behaviour changes. I get the error:\r\n\r\n`Error resolving reference my_app.custom.custom_scheduler:wrapped: error looking up object`\r\n\r\nOk, weird. Then trying with a textual reference will work right (i.e.: passing my function reference instead of `wrapped`)? Well, yes and no. The function is found and thus added successfully to the job store, but when the job runs it is missing the Flask application context and doesn't work properly.\r\n\r\nIt kind of makes sense to me that it works for `MemoryJobStore` and not for a persistent job store but I am not sure exactly why. \r\n\r\nAny ideas on how to reconcile this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/330", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/330/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/330/events", "html_url": "https://github.com/agronholm/apscheduler/issues/330", "id": 350007025, "node_id": "MDU6SXNzdWUzNTAwMDcwMjU=", "number": 330, "title": "Class methods are mistaken for instance methods in 3.5.2", "user": {"login": "ColorFuzzy", "id": 1814478, "node_id": "MDQ6VXNlcjE4MTQ0Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1814478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColorFuzzy", "html_url": "https://github.com/ColorFuzzy", "followers_url": "https://api.github.com/users/ColorFuzzy/followers", "following_url": "https://api.github.com/users/ColorFuzzy/following{/other_user}", "gists_url": "https://api.github.com/users/ColorFuzzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColorFuzzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColorFuzzy/subscriptions", "organizations_url": "https://api.github.com/users/ColorFuzzy/orgs", "repos_url": "https://api.github.com/users/ColorFuzzy/repos", "events_url": "https://api.github.com/users/ColorFuzzy/events{/privacy}", "received_events_url": "https://api.github.com/users/ColorFuzzy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-13T12:22:59Z", "updated_at": "2018-08-14T20:56:40Z", "closed_at": "2018-08-14T20:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "update from 3.5.1 to 3.5.2\r\n\r\n## Expected Behavior\r\nrunning\r\n\r\n## Current Behavior\r\nTraceback (most recent call last):                                                                                                                             \r\n  File \"/usr/local/lib/python2.7/dist-packages/apscheduler/executors/base.py\", line 125, in run_job                                                            \r\n    retval = job.func(*job.args, **job.kwargs)                                                                                                                 \r\nTypeError: run() takes exactly 1 argument (2 given)   \r\n\r\n## Steps to Reproduce\r\nreproduce with old code runs with 3.5.1\r\n\r\n## Context (Environment)\r\n\r\nnone\r\n\r\n## Detailed Description\r\n\r\nnone", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/327", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/327/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/327/events", "html_url": "https://github.com/agronholm/apscheduler/issues/327", "id": 347672769, "node_id": "MDU6SXNzdWUzNDc2NzI3Njk=", "number": 327, "title": "Event of remove_job in listener", "user": {"login": "masoudr", "id": 6974428, "node_id": "MDQ6VXNlcjY5NzQ0Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6974428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masoudr", "html_url": "https://github.com/masoudr", "followers_url": "https://api.github.com/users/masoudr/followers", "following_url": "https://api.github.com/users/masoudr/following{/other_user}", "gists_url": "https://api.github.com/users/masoudr/gists{/gist_id}", "starred_url": "https://api.github.com/users/masoudr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masoudr/subscriptions", "organizations_url": "https://api.github.com/users/masoudr/orgs", "repos_url": "https://api.github.com/users/masoudr/repos", "events_url": "https://api.github.com/users/masoudr/events{/privacy}", "received_events_url": "https://api.github.com/users/masoudr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-05T06:15:30Z", "updated_at": "2018-08-06T03:01:44Z", "closed_at": "2018-08-06T03:01:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying to implement a functionality that when a job reaches its end time and remove by the scheduler.\r\nSuppose this script:\r\n```\r\nfrom time import sleep\r\nfrom pprint import pprint\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\nfrom apscheduler.triggers.date import DateTrigger\r\nfrom apscheduler.triggers.interval import IntervalTrigger\r\nfrom apscheduler.events import EVENT_JOB_EXECUTED, EVENT_JOB_ERROR, EVENT_JOB_REMOVED\r\n\r\n\r\ndef job_executed(event):\r\n    pprint(vars(event))\r\n    print(\"hello from job_executed\")\r\n\r\n\r\ndef func():\r\n    return \"hello from func\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    jobstores = {\r\n        'default': SQLAlchemyJobStore(url='sqlite:///test.db')\r\n    }\r\n    sched = BackgroundScheduler(jobstores=jobstores)\r\n    sched.add_listener(job_executed, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR | EVENT_JOB_REMOVED)\r\n\r\n    trig = IntervalTrigger(seconds=0.5)\r\n    sched.add_job(func, trigger=trig,\r\n                  id='func', replace_existing=True,\r\n                  max_instances=1)\r\n    sched.start()\r\n    sleep(10)\r\n    sched.remove_job('func')\r\n    print(\"Done!!!\")\r\n    while True:\r\n        pass\r\n\r\n```\r\n\r\n> hello from job_executed\r\n> {'alias': None,\r\n>  'code': 4096,\r\n>  'exception': None,\r\n>  'job_id': 'func',\r\n>  'jobstore': 'default',\r\n>  'retval': 'hello from func',\r\n>  'scheduled_run_time': datetime.datetime(...),\r\n>  'traceback': None}\r\n> hello from job_executed\r\n> {'alias': None, 'code': 1024, 'job_id': 'func', 'jobstore': 'default'}\r\n> hello from job_executed\r\n> Done!!!\r\n\r\nPlease consider that both `EVENT_JOB_EXECUTED` and `EVENT_JOB_REMOVED` must be on the same callback function. The `job_executed` function needs to know when the job gets removed by the scheduler. I see only `code` that is `1024` for `job_remove`. Another problem is the `job_id` is missing in `event` for a removed_job.  How do I know which `job_id` has been removed?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/326", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/326/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/326/events", "html_url": "https://github.com/agronholm/apscheduler/issues/326", "id": 347621670, "node_id": "MDU6SXNzdWUzNDc2MjE2NzA=", "number": 326, "title": "SQLAlchemy jobstore makes callback throw errors", "user": {"login": "jbaans", "id": 42092978, "node_id": "MDQ6VXNlcjQyMDkyOTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/42092978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaans", "html_url": "https://github.com/jbaans", "followers_url": "https://api.github.com/users/jbaans/followers", "following_url": "https://api.github.com/users/jbaans/following{/other_user}", "gists_url": "https://api.github.com/users/jbaans/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaans/subscriptions", "organizations_url": "https://api.github.com/users/jbaans/orgs", "repos_url": "https://api.github.com/users/jbaans/repos", "events_url": "https://api.github.com/users/jbaans/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaans/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-04T14:06:21Z", "updated_at": "2018-08-10T08:22:14Z", "closed_at": "2018-08-10T08:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nGreat project! I am experiencing behaviour that I did not expect though. \r\nIn my own project I need a function of an object to be called at specific times.\r\n\r\nFor debugging purposes I've modified the [SQLAlchemy example](https://github.com/agronholm/apscheduler/blob/master/examples/jobstores/sqlalchemy_.py) to call a function of the Test object, see my code below. \r\n\r\n```\r\n\"\"\"\r\nThis example demonstrates the use of the SQLAlchemy job store.\r\nOn each run, it adds a new alarm that fires after ten seconds.\r\nYou can exit the program, restart it and observe that any previous alarms that have not fired yet\r\nare still active. You can also give it the database URL as an argument.\r\nSee the SQLAlchemy documentation on how to construct those.\r\n\"\"\"\r\n\r\nfrom datetime import datetime, timedelta\r\nimport sys\r\nimport os\r\n\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\n\r\nclass TestClass:\r\n    def alarm(self,time):\r\n        print('Alarm! This alarm was scheduled at %s.' % time)\r\n\r\n\r\nif __name__ == '__main__':\r\n    scheduler = BlockingScheduler()\r\n    test = TestClass()\r\n    url = sys.argv[1] if len(sys.argv) > 1 else 'sqlite:///example.sqlite'\r\n    scheduler.add_jobstore('sqlalchemy', url=url)\r\n    alarm_time = datetime.now() + timedelta(seconds=10)\r\n    scheduler.add_job(test.alarm, 'date', run_date=alarm_time, args=[datetime.now()])\r\n    print('To clear the alarms, delete the example.sqlite file.')\r\n    print('Press Ctrl+{0} to exit'.format('Break' if os.name == 'nt' else 'C'))\r\n\r\n    try:\r\n        scheduler.start()\r\n    except (KeyboardInterrupt, SystemExit):\r\n        pass\r\n```\r\n\r\n\r\nWith no jobstore (omitting the scheduler.add_jobstore line) this works. It outputs the following:\r\n```\r\nTo clear the alarms, delete the example.sqlite file.\r\nPress Ctrl+C to exit\r\nAlarm! This alarm was scheduled at 2018-08-04 15:50:27.526578.\r\n```\r\n\r\n\r\nI would expect this to work with SQLAlchemy jobstore as well but it throws this error:\r\n\r\n```\r\nTo clear the alarms, delete the example.sqlite file.\r\nPress Ctrl+C to exit\r\nJob \"TestClass.alarm (trigger: date[2018-08-04 15:29:38 CEST], next run at: 2018-08-04 15:29:38 CEST)\" raised an exception\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/apscheduler/executors/base.py\", line 125, in run_job\r\n    retval = job.func(*job.args, **job.kwargs)\r\nTypeError: alarm() missing 1 required positional argument: 'time'\r\n```\r\n\r\n\r\nBecause I suspect the 'time' argument is consumed by the self argument of the alarm function, I tried adding an argument in front of the the argument list, but then it throws the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"sqlalchemy_.py\", line 26, in <module>\r\n    scheduler.add_job(test.alarm, 'date', run_date=alarm_time, args=[test,datetime.now()])\r\n  File \"/usr/local/lib/python3.7/site-packages/apscheduler/schedulers/base.py\", line 427, in add_job\r\n    job = Job(self, **job_kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/apscheduler/job.py\", line 44, in __init__\r\n    self._modify(id=id or uuid4().hex, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/apscheduler/job.py\", line 175, in _modify\r\n    check_callable_args(func, args, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/apscheduler/util.py\", line 393, in check_callable_args\r\n    '(allowed: %d, given in args: %d)' % (len(args) - len(unmatched_args), len(args)))\r\nValueError: The list of positional arguments is longer than the target callable can handle (allowed: 1, given in args: 2)\r\n```\r\n\r\nIs this a bug? It would be great if the callback would work as I originally intended. \r\n\r\nCheers,\r\nJB\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/325", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/325/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/325/events", "html_url": "https://github.com/agronholm/apscheduler/issues/325", "id": 345515233, "node_id": "MDU6SXNzdWUzNDU1MTUyMzM=", "number": 325, "title": "add_job is not executed in order", "user": {"login": "yanchdh", "id": 19649009, "node_id": "MDQ6VXNlcjE5NjQ5MDA5", "avatar_url": "https://avatars3.githubusercontent.com/u/19649009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchdh", "html_url": "https://github.com/yanchdh", "followers_url": "https://api.github.com/users/yanchdh/followers", "following_url": "https://api.github.com/users/yanchdh/following{/other_user}", "gists_url": "https://api.github.com/users/yanchdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchdh/subscriptions", "organizations_url": "https://api.github.com/users/yanchdh/orgs", "repos_url": "https://api.github.com/users/yanchdh/repos", "events_url": "https://api.github.com/users/yanchdh/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchdh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-29T09:07:10Z", "updated_at": "2018-08-01T13:29:03Z", "closed_at": "2018-07-30T13:44:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nscheduler = BlockingScheduler()\r\n\r\ndef work(n):\r\n  print('work: %s' % n)\r\n\r\nfor i in range(11):\r\n  scheduler.add_job(lambda i=i: work(i), 'date', id=str(i), run_date=datetime.datetime.now() + datetime.timedelta(seconds=1))\r\n\r\ntry:\r\n  scheduler.start()\r\nexcept (KeyboardInterrupt, SystemExit):\r\n  pass\r\n\r\n# output\r\nwork: 0\r\nwork: 1\r\nwork: 10\r\nwork: 2\r\nwork: 3\r\nwork: 4\r\nwork: 5\r\nwork: 6\r\nwork: 7\r\nwork: 8\r\nwork: 9\r\n```\r\n\r\nWhy \"wrok: 10\" is not last?\r\nBecause, MemoryJobStore._get_job_index ordered with timestamp and job_id.\r\nBut why use job_id?\u3000Is is a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/324", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/324/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/324/events", "html_url": "https://github.com/agronholm/apscheduler/issues/324", "id": 345161592, "node_id": "MDU6SXNzdWUzNDUxNjE1OTI=", "number": 324, "title": "Question: APScheduler in uWSGI", "user": {"login": "JuxhinDB", "id": 8005101, "node_id": "MDQ6VXNlcjgwMDUxMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8005101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JuxhinDB", "html_url": "https://github.com/JuxhinDB", "followers_url": "https://api.github.com/users/JuxhinDB/followers", "following_url": "https://api.github.com/users/JuxhinDB/following{/other_user}", "gists_url": "https://api.github.com/users/JuxhinDB/gists{/gist_id}", "starred_url": "https://api.github.com/users/JuxhinDB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JuxhinDB/subscriptions", "organizations_url": "https://api.github.com/users/JuxhinDB/orgs", "repos_url": "https://api.github.com/users/JuxhinDB/repos", "events_url": "https://api.github.com/users/JuxhinDB/events{/privacy}", "received_events_url": "https://api.github.com/users/JuxhinDB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-27T09:45:28Z", "updated_at": "2018-07-27T09:46:12Z", "closed_at": "2018-07-27T09:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is **ONLY** for reporting bugs.\r\nIssues other than bug reports will be summarily closed.\r\n\r\nAny support questions or feature requests should be directed to:\r\n\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/apscheduler)\r\n* [Gitter](https://gitter.im/apscheduler/Lobby)\r\n* [Google groups](http://groups.google.com/group/apscheduler)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\n\r\n## Current Behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context (Environment)\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Detailed Description\r\n<!--- Provide a detailed description of the change or addition you are proposing -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/322", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/322/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/322/events", "html_url": "https://github.com/agronholm/apscheduler/issues/322", "id": 341677801, "node_id": "MDU6SXNzdWUzNDE2Nzc4MDE=", "number": 322, "title": "Jobs stops being exeucted", "user": {"login": "Juanjoorrego", "id": 34254118, "node_id": "MDQ6VXNlcjM0MjU0MTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/34254118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Juanjoorrego", "html_url": "https://github.com/Juanjoorrego", "followers_url": "https://api.github.com/users/Juanjoorrego/followers", "following_url": "https://api.github.com/users/Juanjoorrego/following{/other_user}", "gists_url": "https://api.github.com/users/Juanjoorrego/gists{/gist_id}", "starred_url": "https://api.github.com/users/Juanjoorrego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Juanjoorrego/subscriptions", "organizations_url": "https://api.github.com/users/Juanjoorrego/orgs", "repos_url": "https://api.github.com/users/Juanjoorrego/repos", "events_url": "https://api.github.com/users/Juanjoorrego/events{/privacy}", "received_events_url": "https://api.github.com/users/Juanjoorrego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-16T21:01:34Z", "updated_at": "2018-08-10T18:17:30Z", "closed_at": "2018-08-10T18:17:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\r\n\r\nWe have some jobs that trigger a script to run every 5 seconds (i.e. 720 GETS per hour). Unfortunately, some jobs never go from Started Execution to Executed, which means that other jobs that should be executed after it never execute. There is no error, or bug in the logs, for some reason it just doesn't stop at the time when it is supposed to (doesn't transition from Started Execution to Executed).\r\n\r\nThere is a Started time, but finished is not really populated until the job is done. We have tested entering a finished time (i.e. 1 hour from now - 3600), but it doesn't fix it. **Is there a reason for the job not going from Started Executed to Executed?** Secondly, **Why are multiple executions created for just one job?**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/321", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/321/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/321/events", "html_url": "https://github.com/agronholm/apscheduler/issues/321", "id": 336952477, "node_id": "MDU6SXNzdWUzMzY5NTI0Nzc=", "number": 321, "title": "apscheduler cron job not scheduling on given time", "user": {"login": "rohan-t", "id": 5945088, "node_id": "MDQ6VXNlcjU5NDUwODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5945088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan-t", "html_url": "https://github.com/rohan-t", "followers_url": "https://api.github.com/users/rohan-t/followers", "following_url": "https://api.github.com/users/rohan-t/following{/other_user}", "gists_url": "https://api.github.com/users/rohan-t/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan-t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan-t/subscriptions", "organizations_url": "https://api.github.com/users/rohan-t/orgs", "repos_url": "https://api.github.com/users/rohan-t/repos", "events_url": "https://api.github.com/users/rohan-t/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan-t/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-29T10:46:11Z", "updated_at": "2018-06-29T13:00:20Z", "closed_at": "2018-06-29T13:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to setup APScheduler to run every 3 days at 7 pm. But job is getting scheduled after 2 days. Providing `start_date` as **2018-06-29**, if i check next_run_time of same job, its **01/07/2018 07:00:00 PM.** I am using cron in following way:\r\n\r\n`job = scheduler.add_job(my_job, trigger='cron', day='*/3', timezone='Asia/Calcutta', hour='19', minute='00', start_date='2018-06-29')`\r\n\r\nAnything greater than 2 is giving 01/07/2018 07:00:00 PM next run time. For */2 and * it is working fine.\r\nFacing same issue for **week** parameter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/320", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/320/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/320/events", "html_url": "https://github.com/agronholm/apscheduler/issues/320", "id": 332673257, "node_id": "MDU6SXNzdWUzMzI2NzMyNTc=", "number": 320, "title": "Drift in interval-based jobs?", "user": {"login": "user706", "id": 39215612, "node_id": "MDQ6VXNlcjM5MjE1NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/39215612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user706", "html_url": "https://github.com/user706", "followers_url": "https://api.github.com/users/user706/followers", "following_url": "https://api.github.com/users/user706/following{/other_user}", "gists_url": "https://api.github.com/users/user706/gists{/gist_id}", "starred_url": "https://api.github.com/users/user706/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user706/subscriptions", "organizations_url": "https://api.github.com/users/user706/orgs", "repos_url": "https://api.github.com/users/user706/repos", "events_url": "https://api.github.com/users/user706/events{/privacy}", "received_events_url": "https://api.github.com/users/user706/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-15T07:32:24Z", "updated_at": "2018-06-15T08:15:45Z", "closed_at": "2018-06-15T08:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ndoes an interval-based job ([example](https://github.com/agronholm/apscheduler/blob/master/examples/schedulers/background.py#L19))...\r\n\r\n```python\r\n scheduler.add_job(tick, 'interval', seconds=3)\r\n```\r\n\r\n... have drift?\r\n\r\n'couldn't find anything about \"drift\" in the documentation.\r\n\r\nOf course, I do **not** want drift. In other words -- I would like to have a behaviour as in this example:\r\n\r\n```python\r\nimport time\r\n\r\ndef go_avoid_drift(interval):\r\n    trigg_at = time.monotonic()\r\n    while True:\r\n        # absolute time, when to trigger (avoids drift)\r\n        trigg_at += interval\r\n\r\n        # calc relative delay needed\r\n        delay = trigg_at - time.monotonic()\r\n        time.sleep(delay)\r\n        \r\n        print(time.monotonic())\r\n\r\n\r\n\r\ngo_avoid_drift(1.0)\r\n```\r\n\r\nThanks for expanations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/319", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/319/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/319/events", "html_url": "https://github.com/agronholm/apscheduler/issues/319", "id": 332368391, "node_id": "MDU6SXNzdWUzMzIzNjgzOTE=", "number": 319, "title": "how to fetch missed jobs from scheduler", "user": {"login": "rohan-t", "id": 5945088, "node_id": "MDQ6VXNlcjU5NDUwODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5945088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan-t", "html_url": "https://github.com/rohan-t", "followers_url": "https://api.github.com/users/rohan-t/followers", "following_url": "https://api.github.com/users/rohan-t/following{/other_user}", "gists_url": "https://api.github.com/users/rohan-t/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan-t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan-t/subscriptions", "organizations_url": "https://api.github.com/users/rohan-t/orgs", "repos_url": "https://api.github.com/users/rohan-t/repos", "events_url": "https://api.github.com/users/rohan-t/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan-t/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-14T11:50:32Z", "updated_at": "2018-06-14T15:04:59Z", "closed_at": "2018-06-14T15:04:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using BackgroundScheduler scheduler to schedule my jobs.\r\n\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\n\r\njobstores = {'default': SQLAlchemyJobStore(engine=my_db_engine)}\r\nscheduler = BackgroundScheduler(jobstores=jobstores)\r\njob = scheduler.add_job(my_job, run_date=some_future_time, misfire_grace_time=60)\r\n\r\nI want to fetch missed jobs for scheduler which passed misfire_grace_time. The scheduler.get_jobs() will give only future jobs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/315", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/315/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/315/events", "html_url": "https://github.com/agronholm/apscheduler/issues/315", "id": 327650861, "node_id": "MDU6SXNzdWUzMjc2NTA4NjE=", "number": 315, "title": "timezone issue for scheduler", "user": {"login": "qli-aa", "id": 6913774, "node_id": "MDQ6VXNlcjY5MTM3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6913774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qli-aa", "html_url": "https://github.com/qli-aa", "followers_url": "https://api.github.com/users/qli-aa/followers", "following_url": "https://api.github.com/users/qli-aa/following{/other_user}", "gists_url": "https://api.github.com/users/qli-aa/gists{/gist_id}", "starred_url": "https://api.github.com/users/qli-aa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qli-aa/subscriptions", "organizations_url": "https://api.github.com/users/qli-aa/orgs", "repos_url": "https://api.github.com/users/qli-aa/repos", "events_url": "https://api.github.com/users/qli-aa/events{/privacy}", "received_events_url": "https://api.github.com/users/qli-aa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-05-30T09:36:54Z", "updated_at": "2019-06-30T14:06:17Z", "closed_at": "2019-06-30T14:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "sample code from apscheduler docs:\r\n```\r\nfrom pytz import utc\r\n....\r\nscheduler = BackgroundScheduler(jobstores=jobstores, executors=executors, job_defaults=job_defaults, timezone=utc)\r\n```\r\n\r\nit works for ubuntu, but after I change OS to amazonlinux, does not work\r\nerror message:\r\n```\r\nERROR:apscheduler.jobstores.default:Unable to restore job \"xxxx_job\" -- removing it\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib64/python2.7/site-packages/apscheduler/jobstores/sqlalchemy.py\", line 141, in _get_jobs\r\n    jobs.append(self._reconstitute_job(row.job_state))\r\n  File \"/usr/local/lib64/python2.7/site-packages/apscheduler/jobstores/sqlalchemy.py\", line 125, in _reconstitute_job\r\n    job_state = pickle.loads(job_state)\r\n  File \"/usr/local/lib/python2.7/site-packages/pytz/__init__.py\", line 283, in _p\r\n    return unpickler(*args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pytz/tzinfo.py\", line 539, in unpickler\r\n    tz = pytz.timezone(zone)\r\n  File \"/usr/local/lib/python2.7/site-packages/pytz/__init__.py\", line 177, in timezone\r\n    raise UnknownTimeZoneError(zone)\r\nUnknownTimeZoneError: 'local'\r\n```\r\nthen I add a file /etc/timezone with content 'Etc/UTC', it works\r\n\r\nwhen add a scheduled job, should it use timezone I passed in code otherwise read from /etc/timezone ?\r\nlooks like it always get it from [system config](https://github.com/agronholm/apscheduler/blob/master/apscheduler/schedulers/base.py#L691) \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/314", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/314/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/314/events", "html_url": "https://github.com/agronholm/apscheduler/issues/314", "id": 327645288, "node_id": "MDU6SXNzdWUzMjc2NDUyODg=", "number": 314, "title": "Global logger settings issues", "user": {"login": "qli-aa", "id": 6913774, "node_id": "MDQ6VXNlcjY5MTM3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6913774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qli-aa", "html_url": "https://github.com/qli-aa", "followers_url": "https://api.github.com/users/qli-aa/followers", "following_url": "https://api.github.com/users/qli-aa/following{/other_user}", "gists_url": "https://api.github.com/users/qli-aa/gists{/gist_id}", "starred_url": "https://api.github.com/users/qli-aa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qli-aa/subscriptions", "organizations_url": "https://api.github.com/users/qli-aa/orgs", "repos_url": "https://api.github.com/users/qli-aa/repos", "events_url": "https://api.github.com/users/qli-aa/events{/privacy}", "received_events_url": "https://api.github.com/users/qli-aa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T09:22:02Z", "updated_at": "2018-12-05T20:41:46Z", "closed_at": "2018-12-05T20:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to setup a global logger like below\r\n```\r\n#Setup global logger\r\nlogger     = logging.getLogger('time-scheduler')\r\nlogger.setLevel(logging.DEBUG)\r\nformatter  = logging.Formatter('%(asctime)s - %(module)s - %(funcName)s - %(name)s - %(levelname)s - %(message)s')\r\nhandler    = logging.StreamHandler(sys.stdout)\r\nhandler.setFormatter(formatter)\r\nlogger.addHandler(handler)\r\n```\r\n\r\nit only works for apscheduler.scheduler, but does not work for apscheduler.jobstores\r\nI found I can pass my logger to [scheduler](https://github.com/agronholm/apscheduler/blob/master/apscheduler/schedulers/base.py#L690), but not [jobstores](https://github.com/agronholm/apscheduler/blob/master/apscheduler/jobstores/base.py#L39)\r\n\r\nis it  expected ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/312", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/312/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/312/events", "html_url": "https://github.com/agronholm/apscheduler/issues/312", "id": 323757719, "node_id": "MDU6SXNzdWUzMjM3NTc3MTk=", "number": 312, "title": "Recommended approach for queuing tasks?", "user": {"login": "smlbiobot", "id": 25040297, "node_id": "MDQ6VXNlcjI1MDQwMjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/25040297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smlbiobot", "html_url": "https://github.com/smlbiobot", "followers_url": "https://api.github.com/users/smlbiobot/followers", "following_url": "https://api.github.com/users/smlbiobot/following{/other_user}", "gists_url": "https://api.github.com/users/smlbiobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/smlbiobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smlbiobot/subscriptions", "organizations_url": "https://api.github.com/users/smlbiobot/orgs", "repos_url": "https://api.github.com/users/smlbiobot/repos", "events_url": "https://api.github.com/users/smlbiobot/events{/privacy}", "received_events_url": "https://api.github.com/users/smlbiobot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-16T19:36:20Z", "updated_at": "2018-05-23T14:01:52Z", "closed_at": "2018-05-22T14:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now, for tasks that I wish to run asap, I simply call `add_job()` without specifying the trigger. However, this seems problematic when too many tasks are added and my misfire grace will need to be set fairly high to accomodate it.\r\n\r\nIs there a better approach to make multiple jobs to always execute but in an orderly fashion, say: execute everything in the queue once every second in a FIFO order?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/310", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/310/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/310/events", "html_url": "https://github.com/agronholm/apscheduler/issues/310", "id": 322791097, "node_id": "MDU6SXNzdWUzMjI3OTEwOTc=", "number": 310, "title": "schedulers/base.py:156: RuntimeWarning: Got OperationalError: (1064, \"You have an error in your SQL syntax;", "user": {"login": "Galo1117", "id": 38929628, "node_id": "MDQ6VXNlcjM4OTI5NjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/38929628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Galo1117", "html_url": "https://github.com/Galo1117", "followers_url": "https://api.github.com/users/Galo1117/followers", "following_url": "https://api.github.com/users/Galo1117/following{/other_user}", "gists_url": "https://api.github.com/users/Galo1117/gists{/gist_id}", "starred_url": "https://api.github.com/users/Galo1117/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Galo1117/subscriptions", "organizations_url": "https://api.github.com/users/Galo1117/orgs", "repos_url": "https://api.github.com/users/Galo1117/repos", "events_url": "https://api.github.com/users/Galo1117/events{/privacy}", "received_events_url": "https://api.github.com/users/Galo1117/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-14T12:15:47Z", "updated_at": "2018-12-04T12:07:09Z", "closed_at": "2018-12-04T12:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used add_job when the SQL syntax was incorrect. After inserting two inserts (_binary_binary) inside the insert statement, there should normally be only one. Is there any problem with this? I tried the same problem with v3.5.1 v3.5.0 v3.4.0.\r\n\r\n## Expected Behavior\r\n![image](https://user-images.githubusercontent.com/38929628/39996666-dddc4764-57b2-11e8-9f06-3fe28c9f06a1.png)\r\nINSERT INTO `django_apscheduler_djangojob` (`name`, `next_run_time`, `job_state`) VALUES ('sqlreview-1', '2018-05-15 22:11:52', _binary'\\udc80\u0004\\udc95\\udc96\u0001\\0\\0\\0\\0\\0\\0}\\udc94(\\udc8c version\\udc94K\u0001\\udc8c\u0004func\\udc94\\udc8c\u0019sql.sqlreview:execute_job\\udc94\\udc8c trigger\\udc94\\udc8c\u0019apscheduler.triggers.date\\udc94\\udc8c\u000bDateTrigger\\udc94\\udc93\\udc94)\\udc81\\udc94}\\udc94(h\u0001K\u0001\\udc8run_date\\udc94\\udc8datetime\\udc94\\udc8datetime\\udc94\\udc93\\udc94C\\n \\udce2\u0005\u000b\u0016\u000b4\\0\\0\\0\\udc94\\udc8c\u0004pytz\\udc94\\udc8c\u0002_p\\udc94\\udc93\\udc94(\\udc8c\\rAsia/Shanghai\\udc94M\\udc80pK\\0\\udc8c\u0003CST\\udc94t\\udc94R\\udc94\\udc86\\udc94R\\udc94ub\\udc8executor\\udc94\\udc8c default\\udc94\\udc8c\\rmax_instances\\udc94K\u0001\\udc8c\u0012misfire_grace_time\\udc94K\u0001\\udc8c\u0004args\\udc94\\udc8c\u00011\\udc94\\udc8c\u001fhttp://127.0.0.1:8000/detail/1/\\udc94\\udc86\\udc94\\udc8c\u0002id\\udc94\\udc8c\u000bsqlreview-1\\udc94\\udc8c\\rnext_run_time\\udc94h\u0017\\udc8coalesce\\udc94\\udc88\\udc8c\u0006kwargs\\udc94}\\udc94\\udc8c\u0004name\\udc94\\udc8c\u000bexecute_job\\udc94u.'); \r\n\r\n\r\n## Current Behavior\r\n![image](https://user-images.githubusercontent.com/38929628/39996721-0e58f464-57b3-11e8-94b1-3384776ecf31.png)\r\n![image](https://user-images.githubusercontent.com/38929628/39996781-4030f2d4-57b3-11e8-8428-ea654f85311e.png)\r\n\r\nINSERT INTO `django_apscheduler_djangojob` (`name`, `next_run_time`, `job_state`) VALUES ('sqlreview-11', '2018-05-15 17:15:01', _binary _binary'\\udc80\u0004\\udc95\\udca1\u0001\\0\\0\\0\\0\\0\\0}\\udc94(\\udc8c\u0006kwargs\\udc94}\\udc94\\udc8c\u0012misfire_grace_time\\udc94K\u0001\\udc8executor\\udc94\\udc8cdefault\\udc94\\udc8coalesce\\udc94\\udc88\\udc8c\u0004args\\udc94\\udc8c\u000211\\udc94\\udc8c&http://192.168.123.110:8080/detail/11/\\udc94\\udc86\\udc94\\udc8c\u0002id\\udc94\\udc8c\r\n  sqlreview-11\\udc94\\udc8c\u0004func\\udc94\\udc8c\u0019sql.sqlreview:execute_job\\udc94\\udc8ctrigger\\udc94\\udc8c\u0019apscheduler.triggers.date\\udc94\\udc8c\r\n                                                                                                                                          DateTrigger\\udc94\\udc93\\udc94)}\\udc94\\udc92\\udc94}\\udc94(\\udc8cversion\\udc94K\u0001\\udc8run_date\\udc94\\udc8datetime\\udc94\\udc8datetime\\udc94\\udc93\\udc94C\\n\\udce2\u0011\u0001\\0\\0\\0\\udc94\\udc8c\u0004pytz\\udc94\\udc8c\u0002_p\\udc94\\udc93\\udc94(\\udc8c\\rAsia/Shanghai\\udc94M\\udc80pK\\0\\udc8c\u0003CST\\udc94t\\udc94R\\udc94\\udc86\\udc94R\\udc94ub\\udc8c\\rmax_instances\\udc94K\u0001\\udc8c\\rnext_run_time\\udc94h$h\u0016K\u0001\\udc8c\u0004name\\udc94\\udc8c\r\n                                                                                                  execute_job\\udc94u.');\r\n\r\n## Steps to Reproduce\r\n![image](https://user-images.githubusercontent.com/38929628/39996863-8284bd00-57b3-11e8-845b-803171047c30.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/308", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/308/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/308/events", "html_url": "https://github.com/agronholm/apscheduler/issues/308", "id": 321424307, "node_id": "MDU6SXNzdWUzMjE0MjQzMDc=", "number": 308, "title": "how to run a function like celery async_apply", "user": {"login": "shuxiang", "id": 1243390, "node_id": "MDQ6VXNlcjEyNDMzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1243390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuxiang", "html_url": "https://github.com/shuxiang", "followers_url": "https://api.github.com/users/shuxiang/followers", "following_url": "https://api.github.com/users/shuxiang/following{/other_user}", "gists_url": "https://api.github.com/users/shuxiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuxiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuxiang/subscriptions", "organizations_url": "https://api.github.com/users/shuxiang/orgs", "repos_url": "https://api.github.com/users/shuxiang/repos", "events_url": "https://api.github.com/users/shuxiang/events{/privacy}", "received_events_url": "https://api.github.com/users/shuxiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T04:12:03Z", "updated_at": "2018-05-13T19:37:24Z", "closed_at": "2018-05-13T19:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "run a function  just one time, but async, just like celery's async_apply:\r\nid = task.apply_async()\r\ngot result later:\r\nresult = task.AsyncResult(id)\r\n\r\nI already use apscheduler to run cron job, for keep progam simple, I prefer to not use celery if apscheduler can do this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/307", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/307/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/307/events", "html_url": "https://github.com/agronholm/apscheduler/issues/307", "id": 319382650, "node_id": "MDU6SXNzdWUzMTkzODI2NTA=", "number": 307, "title": "Tornado5.0 executor RuntimeError: There is no current event loop in thread", "user": {"login": "lau-jay", "id": 6316150, "node_id": "MDQ6VXNlcjYzMTYxNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6316150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lau-jay", "html_url": "https://github.com/lau-jay", "followers_url": "https://api.github.com/users/lau-jay/followers", "following_url": "https://api.github.com/users/lau-jay/following{/other_user}", "gists_url": "https://api.github.com/users/lau-jay/gists{/gist_id}", "starred_url": "https://api.github.com/users/lau-jay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lau-jay/subscriptions", "organizations_url": "https://api.github.com/users/lau-jay/orgs", "repos_url": "https://api.github.com/users/lau-jay/repos", "events_url": "https://api.github.com/users/lau-jay/events{/privacy}", "received_events_url": "https://api.github.com/users/lau-jay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-02T01:37:27Z", "updated_at": "2018-05-23T08:10:12Z", "closed_at": "2018-05-23T08:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "TornadoScheduler not run tornado 5.0,  executor have RuntimeError.  [tornadoweb/tornado/issuses/2183](https://github.com/tornadoweb/tornado/issues/2183#issuecomment-371001254)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/306", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/306/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/306/events", "html_url": "https://github.com/agronholm/apscheduler/issues/306", "id": 318627331, "node_id": "MDU6SXNzdWUzMTg2MjczMzE=", "number": 306, "title": "Apscheduler as a class member", "user": {"login": "masoudr", "id": 6974428, "node_id": "MDQ6VXNlcjY5NzQ0Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6974428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masoudr", "html_url": "https://github.com/masoudr", "followers_url": "https://api.github.com/users/masoudr/followers", "following_url": "https://api.github.com/users/masoudr/following{/other_user}", "gists_url": "https://api.github.com/users/masoudr/gists{/gist_id}", "starred_url": "https://api.github.com/users/masoudr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masoudr/subscriptions", "organizations_url": "https://api.github.com/users/masoudr/orgs", "repos_url": "https://api.github.com/users/masoudr/repos", "events_url": "https://api.github.com/users/masoudr/events{/privacy}", "received_events_url": "https://api.github.com/users/masoudr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-04-28T11:16:35Z", "updated_at": "2018-05-20T16:28:34Z", "closed_at": "2018-05-04T05:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm trying to create a simple class with `apscheduler` with specific jobstore suppose this simple example:\r\n\r\n```\r\n\r\nfrom datetime import datetime\r\nfrom time import sleep\r\n\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\n\r\n\r\nclass sched:\r\n    def __init__(self):\r\n        jobstores = {\r\n            'default': SQLAlchemyJobStore(url='sqlite:///test.db')\r\n        }\r\n        self.scheduler = BackgroundScheduler(jobstores=jobstores)\r\n        job2 = self.scheduler.add_job(self.tick, 'interval', args=[1, 2], kwargs=dict(a=2,b=3), seconds=5, replace_existing=True)\r\n        self.scheduler.start()\r\n\r\n    def tick(self, i, j, **kwargs):\r\n        print(\"hello{} {}\".format(i, j))\r\n        for k in kwargs:\r\n            print(k, \":\", kwargs[k])\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    #print(scheduler.get_jobs())\r\n    schedule = sched()\r\n    while True:\r\n        sleep(1)\r\n\r\n\r\n```\r\nbut it gaves me this error:\r\n\r\n> TypeError: tick2() missing 1 required positional argument: 'j'\r\n\r\nbut when I change the instance name with this it works fine:\r\n```\r\nif __name__ == '__main__':\r\n    #print(scheduler.get_jobs())\r\n    sched = sched()\r\n    while True:\r\n        sleep(1)\r\n```\r\nIt works fine. I don't have any problem with default `jobstore`. I don't know if the problem relates to `apscheduler` or not but I'm a little confused here why should I use an instance name with the exact name of the class name.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/305", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/305/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/305/events", "html_url": "https://github.com/agronholm/apscheduler/issues/305", "id": 316592999, "node_id": "MDU6SXNzdWUzMTY1OTI5OTk=", "number": 305, "title": "Allow scheduler to wake up periodically", "user": {"login": "sallyruthstruik", "id": 1565642, "node_id": "MDQ6VXNlcjE1NjU2NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1565642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallyruthstruik", "html_url": "https://github.com/sallyruthstruik", "followers_url": "https://api.github.com/users/sallyruthstruik/followers", "following_url": "https://api.github.com/users/sallyruthstruik/following{/other_user}", "gists_url": "https://api.github.com/users/sallyruthstruik/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallyruthstruik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallyruthstruik/subscriptions", "organizations_url": "https://api.github.com/users/sallyruthstruik/orgs", "repos_url": "https://api.github.com/users/sallyruthstruik/repos", "events_url": "https://api.github.com/users/sallyruthstruik/events{/privacy}", "received_events_url": "https://api.github.com/users/sallyruthstruik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-22T16:29:43Z", "updated_at": "2019-06-30T13:57:41Z", "closed_at": "2019-06-30T13:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I work on django-apscheduler interface, and I faced the problem: when apscheduler decides that there are no jobs to execute, it sleeps until add_job will be called. So I faced this bug: https://github.com/jarekwg/django-apscheduler/issues/19\r\n\r\nI think it is not good behavior, and in some cases programmer may want apscheduler to wake up periodically and check for a jobs. \r\nI suggest to declare some constant which apscheduler will return by default in _process_jobs method if something going wrong. \r\n\r\nIf you agree with such behavior, I can provide pull request. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/304", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/304/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/304/events", "html_url": "https://github.com/agronholm/apscheduler/issues/304", "id": 315662035, "node_id": "MDU6SXNzdWUzMTU2NjIwMzU=", "number": 304, "title": "AsyncIOScheduler defaults to ThreadPoolExecutor", "user": {"login": "alexmbird", "id": 691831, "node_id": "MDQ6VXNlcjY5MTgzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/691831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmbird", "html_url": "https://github.com/alexmbird", "followers_url": "https://api.github.com/users/alexmbird/followers", "following_url": "https://api.github.com/users/alexmbird/following{/other_user}", "gists_url": "https://api.github.com/users/alexmbird/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmbird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmbird/subscriptions", "organizations_url": "https://api.github.com/users/alexmbird/orgs", "repos_url": "https://api.github.com/users/alexmbird/repos", "events_url": "https://api.github.com/users/alexmbird/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmbird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-18T22:20:11Z", "updated_at": "2018-04-19T18:45:09Z", "closed_at": "2018-04-19T18:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation I would expect AsyncIOScheduler to execute scheduled jobs in the supplied asyncio event loop.  However it seems to use a ThreadPoolExecutor and this plays hell with the asyncio.Lock / asyncio.Queue-s I'm using to share data between my coroutines.  \r\n\r\nI've also tried forcing it to use an AsyncIOExecutor with `executors={'default':AsyncIOExecutor()}`, but to no avail.\r\n\r\nHere's a how to trigger the behaviour:\r\n\r\n```\r\n#!/usr/bin/env python3.6\r\n\r\nimport asyncio, threading\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\n\r\ndef my_schedule_job():\r\n    print(\"Callback runs in thread %s\" % (threading.current_thread(),))\r\n\r\nasync def my_coroutine():\r\n    print(\"Coroutine runs in %s\" % (threading.current_thread(),))\r\n    await asyncio.sleep(10)\r\n\r\nif __name__ == '__main__':\r\n    print(\"Main runs in %s\" % (threading.current_thread(),))\r\n    loop = asyncio.get_event_loop()\r\n    scheduler = AsyncIOScheduler(event_loop=loop)\r\n    scheduler.add_job(my_schedule_job, 'interval', seconds=2)\r\n    scheduler.start()\r\n    loop.run_until_complete(my_coroutine())\r\n```\r\n\r\nRunning under OSX and Ubuntu I get output like the following:\r\n\r\n```\r\n$ pip freeze | grep -i  apscheduler\r\nAPScheduler==3.5.1\r\n\r\n$ ./experiments/apscheduler_async_test.py\r\nMain runs in <_MainThread(MainThread, started 140735767671680)>\r\nCoroutine runs in <_MainThread(MainThread, started 140735767671680)>\r\nCallback runs in thread <Thread(ThreadPoolExecutor-0_0, started daemon 123145546076160)>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/303", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/303/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/303/events", "html_url": "https://github.com/agronholm/apscheduler/issues/303", "id": 314333813, "node_id": "MDU6SXNzdWUzMTQzMzM4MTM=", "number": 303, "title": "JobLookupError (frequent, while using Redis Jobstore)", "user": {"login": "smlbiobot", "id": 25040297, "node_id": "MDQ6VXNlcjI1MDQwMjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/25040297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smlbiobot", "html_url": "https://github.com/smlbiobot", "followers_url": "https://api.github.com/users/smlbiobot/followers", "following_url": "https://api.github.com/users/smlbiobot/following{/other_user}", "gists_url": "https://api.github.com/users/smlbiobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/smlbiobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smlbiobot/subscriptions", "organizations_url": "https://api.github.com/users/smlbiobot/orgs", "repos_url": "https://api.github.com/users/smlbiobot/repos", "events_url": "https://api.github.com/users/smlbiobot/events{/privacy}", "received_events_url": "https://api.github.com/users/smlbiobot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-14T14:37:58Z", "updated_at": "2018-05-01T08:03:30Z", "closed_at": "2018-05-01T08:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "My webapp uses APScheduler and often it raises this error:\r\n\r\n```\r\n\r\nJobLookupError: 'No job by the id of XXXXXXX was found'\r\n```\r\n\r\nwhere `XXXXXXX` is the job ID that was executed and obviously removed. The app runs with multiple workers. Could that be why \u2014 where the task was completed by one worker and when another tries to access it is no longer available.\r\n\r\nHow do I best handle this?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/302", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/302/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/302/events", "html_url": "https://github.com/agronholm/apscheduler/issues/302", "id": 312850255, "node_id": "MDU6SXNzdWUzMTI4NTAyNTU=", "number": 302, "title": "Support for window schedules", "user": {"login": "fredthomsen", "id": 880064, "node_id": "MDQ6VXNlcjg4MDA2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/880064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredthomsen", "html_url": "https://github.com/fredthomsen", "followers_url": "https://api.github.com/users/fredthomsen/followers", "following_url": "https://api.github.com/users/fredthomsen/following{/other_user}", "gists_url": "https://api.github.com/users/fredthomsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredthomsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredthomsen/subscriptions", "organizations_url": "https://api.github.com/users/fredthomsen/orgs", "repos_url": "https://api.github.com/users/fredthomsen/repos", "events_url": "https://api.github.com/users/fredthomsen/events{/privacy}", "received_events_url": "https://api.github.com/users/fredthomsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230266, "node_id": "MDU6TGFiZWwzNDgyMzAyNjY=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 348230270, "node_id": "MDU6TGFiZWwzNDgyMzAyNzA=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-10T09:50:31Z", "updated_at": "2018-09-10T17:19:33Z", "closed_at": "2018-09-10T17:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Supporting a job that has both an action for when a window starts and when it ends, and checking if the schedule starts within the window and firing the start job.  For example, disable the alarm between 3am and 4am.\r\n\r\nI realize this can be done via client code, but native support would be cool.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/301", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/301/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/301/events", "html_url": "https://github.com/agronholm/apscheduler/issues/301", "id": 310571013, "node_id": "MDU6SXNzdWUzMTA1NzEwMTM=", "number": 301, "title": "<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'now'", "user": {"login": "jfach", "id": 9730508, "node_id": "MDQ6VXNlcjk3MzA1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9730508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfach", "html_url": "https://github.com/jfach", "followers_url": "https://api.github.com/users/jfach/followers", "following_url": "https://api.github.com/users/jfach/following{/other_user}", "gists_url": "https://api.github.com/users/jfach/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfach/subscriptions", "organizations_url": "https://api.github.com/users/jfach/orgs", "repos_url": "https://api.github.com/users/jfach/repos", "events_url": "https://api.github.com/users/jfach/events{/privacy}", "received_events_url": "https://api.github.com/users/jfach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-02T18:49:02Z", "updated_at": "2018-08-10T18:37:35Z", "closed_at": "2018-08-10T18:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to integrate APScheduler into my application, and have written a test script to play around and get a feel for things. I haven't been able to add a job yet as I keep running into this issue when I run my script, `scheduler.py`.\r\n\r\n```\r\n(apscheduler-test-env) jordan@jordan-mint ~/ap-scheduler-test-app $ python scheduler.py \r\nException in thread APScheduler (most likely raised during interpreter shutdown):\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n  File \"/home/jordan/virtualenvs/apscheduler-test-env/local/lib/python2.7/site-packages/apscheduler/schedulers/blocking.py\", line 30, in _main_loop\r\n  File \"/home/jordan/virtualenvs/apscheduler-test-env/local/lib/python2.7/site-packages/apscheduler/schedulers/base.py\", line 927, in _process_jobs\r\n<type 'exceptions.AttributeError'>: 'NoneType' object has no attribute 'now'\r\n```\r\n\r\nI'm running Python 2.7 and am working with APScheduler version 3.5.1\r\n\r\nIf you'd like to try and reproduce, I've also attached a copy of my script here:\r\n```\r\nfrom apscheduler.schedulers.background import BackgroundScheduler\r\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\r\nfrom apscheduler.executors.pool import ThreadPoolExecutor\r\n\r\nsqlalchemy_job_store = SQLAlchemyJobStore(url='sqlite:////tmp/ap.db', tablename='scheduler')\r\njob_stores = {'default': sqlalchemy_job_store}\r\nexecutors = {'default': ThreadPoolExecutor(20)}\r\nscheduler = BackgroundScheduler(job_stores=job_stores, executors=executors)\r\n\r\n\r\ndef add(x, y):\r\n    print \"adding...\"\r\n    return x + y\r\n\r\n\r\nscheduler.start()\r\nscheduler.add_job(add, 'interval', args=(6, 6), seconds=30)\r\n```\r\n\r\nI've taken a look at `schedulers/base.py` and everything seems to check out there, leaving me a bit confused. Thanks in advance and please let me know if you need me to provide any other information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/300", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/300/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/300/events", "html_url": "https://github.com/agronholm/apscheduler/issues/300", "id": 310520164, "node_id": "MDU6SXNzdWUzMTA1MjAxNjQ=", "number": 300, "title": "Invalid utf8 character string warning", "user": {"login": "lior-dw", "id": 18900135, "node_id": "MDQ6VXNlcjE4OTAwMTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/18900135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lior-dw", "html_url": "https://github.com/lior-dw", "followers_url": "https://api.github.com/users/lior-dw/followers", "following_url": "https://api.github.com/users/lior-dw/following{/other_user}", "gists_url": "https://api.github.com/users/lior-dw/gists{/gist_id}", "starred_url": "https://api.github.com/users/lior-dw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lior-dw/subscriptions", "organizations_url": "https://api.github.com/users/lior-dw/orgs", "repos_url": "https://api.github.com/users/lior-dw/repos", "events_url": "https://api.github.com/users/lior-dw/events{/privacy}", "received_events_url": "https://api.github.com/users/lior-dw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230270, "node_id": "MDU6TGFiZWwzNDgyMzAyNzA=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-02T15:43:48Z", "updated_at": "2018-04-02T19:09:44Z", "closed_at": "2018-04-02T19:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The APScheduler produces a warning:\r\n`/lib/python2.7/site-packages/pymysql/cursors.py:165: Warning: (1300, u\"Invalid utf8 character string: '80027D'\")` trying to execute SQL query `UPDATE job_store SET next_run_time=1522694809.97494, job_state='...' WHERE job_store.id = '...'`\r\n\r\nI am using MySQL 5.7.17", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/295", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/295/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/295/events", "html_url": "https://github.com/agronholm/apscheduler/issues/295", "id": 305796963, "node_id": "MDU6SXNzdWUzMDU3OTY5NjM=", "number": 295, "title": "Add support for date format with example 2018-03-16T10:30:21.279Z", "user": {"login": "kalyank23", "id": 34736945, "node_id": "MDQ6VXNlcjM0NzM2OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/34736945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalyank23", "html_url": "https://github.com/kalyank23", "followers_url": "https://api.github.com/users/kalyank23/followers", "following_url": "https://api.github.com/users/kalyank23/following{/other_user}", "gists_url": "https://api.github.com/users/kalyank23/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalyank23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalyank23/subscriptions", "organizations_url": "https://api.github.com/users/kalyank23/orgs", "repos_url": "https://api.github.com/users/kalyank23/repos", "events_url": "https://api.github.com/users/kalyank23/events{/privacy}", "received_events_url": "https://api.github.com/users/kalyank23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T04:13:44Z", "updated_at": "2018-04-06T09:22:37Z", "closed_at": "2018-04-06T09:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "2018-03-16T10:30:21.279Z is also a valid format as per https://www.w3.org/TR/NOTE-datetime.\r\n\r\nSo please support this format also.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/292", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/292/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/292/events", "html_url": "https://github.com/agronholm/apscheduler/issues/292", "id": 303706738, "node_id": "MDU6SXNzdWUzMDM3MDY3Mzg=", "number": 292, "title": "The second time, it stopped.", "user": {"login": "liang1024", "id": 18343332, "node_id": "MDQ6VXNlcjE4MzQzMzMy", "avatar_url": "https://avatars1.githubusercontent.com/u/18343332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liang1024", "html_url": "https://github.com/liang1024", "followers_url": "https://api.github.com/users/liang1024/followers", "following_url": "https://api.github.com/users/liang1024/following{/other_user}", "gists_url": "https://api.github.com/users/liang1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/liang1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liang1024/subscriptions", "organizations_url": "https://api.github.com/users/liang1024/orgs", "repos_url": "https://api.github.com/users/liang1024/repos", "events_url": "https://api.github.com/users/liang1024/events{/privacy}", "received_events_url": "https://api.github.com/users/liang1024/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-09T02:56:18Z", "updated_at": "2018-03-09T07:32:09Z", "closed_at": "2018-03-09T07:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "code\uff1a\r\n`   scheduler = BlockingScheduler()\r\n\r\n    scheduler.add_job(runTarget, 'interval', max_instances=100, days=3, start_date=firsttime)\r\n\r\n    scheduler.start()`\r\n\r\nThe second time, it stopped.\r\nerror\uff1a\r\n`Run time of job \"runtarget <trigger : interval[3 days ,0:00:00],next run at :2018-03-09 00:30:00 CST>\" was missed by 0:00:01.776066`\r\n\r\nHas anyone come across this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/290", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/290/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/290/events", "html_url": "https://github.com/agronholm/apscheduler/issues/290", "id": 301361044, "node_id": "MDU6SXNzdWUzMDEzNjEwNDQ=", "number": 290, "title": "TypeError in executors.base when using ProcessPoolExecutor", "user": {"login": "bjonen", "id": 832380, "node_id": "MDQ6VXNlcjgzMjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/832380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjonen", "html_url": "https://github.com/bjonen", "followers_url": "https://api.github.com/users/bjonen/followers", "following_url": "https://api.github.com/users/bjonen/following{/other_user}", "gists_url": "https://api.github.com/users/bjonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjonen/subscriptions", "organizations_url": "https://api.github.com/users/bjonen/orgs", "repos_url": "https://api.github.com/users/bjonen/repos", "events_url": "https://api.github.com/users/bjonen/events{/privacy}", "received_events_url": "https://api.github.com/users/bjonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-01T10:57:00Z", "updated_at": "2019-07-23T09:43:55Z", "closed_at": "2019-07-23T09:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a minimal example working with apscheduler (v 3.3.1) using ThreadPoolExecutor. Now switching to ProcessPoolExecutor, the same example raises an exception. \r\n\r\nAny hints on how to debug this? Is it possible to prevent apscheduler from catching errors? Am I using ProcessPoolExecutor incorrectly? \r\n\r\n```\r\n95017:APScheduler:base.py:Job \"description (trigger: date[2018-03-01 11:46:08 CET], next run at: 2018-03-01 11:46:08 CET)\" raised an exception\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/envs/main/lib/python2.7/site-packages/apscheduler/executors/base.py\", line 125, in run_job\r\n    retval = job.func(*job.args, **job.kwargs)\r\nTypeError: __init__() takes at least 3 arguments (1 given)\r\n```\r\n\r\n```\r\n#executors = {'default': ThreadPoolExecutor(workers)}\r\nexecutors = {'default': ProcessPoolExecutor(workers)}\r\nsched = BackgroundScheduler(executors=executors,\r\n                                job_defaults={'misfire_grace_time': 1000000})\r\n\r\ntrigger = None\r\nexecutor = 'default'\r\nhour = None\r\n\r\nkwargs = {}\r\nkwargs['func'] = func\r\nkwargs['trigger'] = trigger\r\nkwargs['executor'] = executor\r\nkwargs['id'] = job_id\r\nkwargs['name'] = 'description'\r\nkwargs['kwargs'] = {}\r\n\r\njob = self.sched.add_job(**kwargs)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/289", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/289/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/289/events", "html_url": "https://github.com/agronholm/apscheduler/issues/289", "id": 300921300, "node_id": "MDU6SXNzdWUzMDA5MjEzMDA=", "number": 289, "title": "Method \"pause\" and \"resume\" in Job instance do not return the newest job.", "user": {"login": "m358807551", "id": 14256423, "node_id": "MDQ6VXNlcjE0MjU2NDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/14256423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m358807551", "html_url": "https://github.com/m358807551", "followers_url": "https://api.github.com/users/m358807551/followers", "following_url": "https://api.github.com/users/m358807551/following{/other_user}", "gists_url": "https://api.github.com/users/m358807551/gists{/gist_id}", "starred_url": "https://api.github.com/users/m358807551/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m358807551/subscriptions", "organizations_url": "https://api.github.com/users/m358807551/orgs", "repos_url": "https://api.github.com/users/m358807551/repos", "events_url": "https://api.github.com/users/m358807551/events{/privacy}", "received_events_url": "https://api.github.com/users/m358807551/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-28T07:40:38Z", "updated_at": "2018-03-01T01:56:20Z", "closed_at": "2018-03-01T01:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\njob = scheduler.get_job(job_id)\r\njob = job.pause()  # job.next_run_time is not None\r\n\r\njob = scheduler.get_job(job_id)  # job.next_run_time is None now\r\n```\r\nAnd I do not find any method in Job that could judge whether a job is paused or not(version 3.3). Is there a better idea without using `next_run_time`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/288", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/288/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/288/events", "html_url": "https://github.com/agronholm/apscheduler/issues/288", "id": 300574366, "node_id": "MDU6SXNzdWUzMDA1NzQzNjY=", "number": 288, "title": "Can I get the `last_run_time` from a target job?", "user": {"login": "m358807551", "id": 14256423, "node_id": "MDQ6VXNlcjE0MjU2NDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/14256423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m358807551", "html_url": "https://github.com/m358807551", "followers_url": "https://api.github.com/users/m358807551/followers", "following_url": "https://api.github.com/users/m358807551/following{/other_user}", "gists_url": "https://api.github.com/users/m358807551/gists{/gist_id}", "starred_url": "https://api.github.com/users/m358807551/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m358807551/subscriptions", "organizations_url": "https://api.github.com/users/m358807551/orgs", "repos_url": "https://api.github.com/users/m358807551/repos", "events_url": "https://api.github.com/users/m358807551/events{/privacy}", "received_events_url": "https://api.github.com/users/m358807551/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-27T10:33:11Z", "updated_at": "2018-02-27T10:38:10Z", "closed_at": "2018-02-27T10:38:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A job instance has method `next_run_time`\uff0cbut how can I get the `last_run_time` of the job instance\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/286", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/286/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/286/events", "html_url": "https://github.com/agronholm/apscheduler/issues/286", "id": 295790476, "node_id": "MDU6SXNzdWUyOTU3OTA0NzY=", "number": 286, "title": "Weekday numbers in crontab expressions correspond to wrong weekdays", "user": {"login": "qli-aa", "id": 6913774, "node_id": "MDQ6VXNlcjY5MTM3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6913774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qli-aa", "html_url": "https://github.com/qli-aa", "followers_url": "https://api.github.com/users/qli-aa/followers", "following_url": "https://api.github.com/users/qli-aa/following{/other_user}", "gists_url": "https://api.github.com/users/qli-aa/gists{/gist_id}", "starred_url": "https://api.github.com/users/qli-aa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qli-aa/subscriptions", "organizations_url": "https://api.github.com/users/qli-aa/orgs", "repos_url": "https://api.github.com/users/qli-aa/repos", "events_url": "https://api.github.com/users/qli-aa/events{/privacy}", "received_events_url": "https://api.github.com/users/qli-aa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1", "html_url": "https://github.com/agronholm/apscheduler/milestone/1", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/milestones/1/labels", "id": 1673437, "node_id": "MDk6TWlsZXN0b25lMTY3MzQzNw==", "number": 1, "title": "4.0", "description": "Replace pickle serialization with more secure alternatives\r\nPass a context object to job callables (optional?)\r\nForce coalesce=True but pass all scheduled run times in the job context argument\r\nDon't automatically remove any jobs from job stores anymore\r\nOverhaul the test suite\r\nDrop the PyQT scheduler", "creator": {"login": "agronholm", "id": 130003, "node_id": "MDQ6VXNlcjEzMDAwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronholm", "html_url": "https://github.com/agronholm", "followers_url": "https://api.github.com/users/agronholm/followers", "following_url": "https://api.github.com/users/agronholm/following{/other_user}", "gists_url": "https://api.github.com/users/agronholm/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronholm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronholm/subscriptions", "organizations_url": "https://api.github.com/users/agronholm/orgs", "repos_url": "https://api.github.com/users/agronholm/repos", "events_url": "https://api.github.com/users/agronholm/events{/privacy}", "received_events_url": "https://api.github.com/users/agronholm/received_events", "type": "User", "site_admin": false}, "open_issues": 15, "closed_issues": 4, "state": "open", "created_at": "2016-03-30T07:24:12Z", "updated_at": "2020-05-23T16:52:15Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2018-02-09T08:29:06Z", "updated_at": "2020-05-23T16:43:05Z", "closed_at": "2020-05-23T16:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "apscheduler/apscheduler/triggers/cron/expressions.py\r\nWEEKDAYS = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']\r\nwill map mon ==> 0, sun ==> 6\r\n\r\nactually should map mon ==>1 , sun ==> 0 or 7\r\nWEEKDAYS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']\r\n\r\nfrom cron wiki: https://en.wikipedia.org/wiki/Cron\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/284", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/284/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/284/events", "html_url": "https://github.com/agronholm/apscheduler/issues/284", "id": 293543807, "node_id": "MDU6SXNzdWUyOTM1NDM4MDc=", "number": 284, "title": "SyntaxError when using BackgroundScheduler in Python3.6", "user": {"login": "eqperes", "id": 6121713, "node_id": "MDQ6VXNlcjYxMjE3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6121713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eqperes", "html_url": "https://github.com/eqperes", "followers_url": "https://api.github.com/users/eqperes/followers", "following_url": "https://api.github.com/users/eqperes/following{/other_user}", "gists_url": "https://api.github.com/users/eqperes/gists{/gist_id}", "starred_url": "https://api.github.com/users/eqperes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eqperes/subscriptions", "organizations_url": "https://api.github.com/users/eqperes/orgs", "repos_url": "https://api.github.com/users/eqperes/repos", "events_url": "https://api.github.com/users/eqperes/events{/privacy}", "received_events_url": "https://api.github.com/users/eqperes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-01T14:10:24Z", "updated_at": "2018-03-02T14:36:18Z", "closed_at": "2018-03-02T14:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When importing BackgroundScheduler:\r\n\r\n`from apscheduler.executors.pool import ThreadPoolExecutor` \r\n\r\nand when ThreadPoolExecutor is imported: \r\n\r\n`import concurrent.futures` \r\n\r\nwhich raises the following error:\r\n\r\n`raise exception_type, self._exception, self._traceback`\r\n`^`\r\n`SyntaxError: invalid syntax`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/282", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/282/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/282/events", "html_url": "https://github.com/agronholm/apscheduler/issues/282", "id": 291554896, "node_id": "MDU6SXNzdWUyOTE1NTQ4OTY=", "number": 282, "title": "Guarantee correctly executed jobs ", "user": {"login": "logoff", "id": 1023895, "node_id": "MDQ6VXNlcjEwMjM4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1023895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logoff", "html_url": "https://github.com/logoff", "followers_url": "https://api.github.com/users/logoff/followers", "following_url": "https://api.github.com/users/logoff/following{/other_user}", "gists_url": "https://api.github.com/users/logoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/logoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logoff/subscriptions", "organizations_url": "https://api.github.com/users/logoff/orgs", "repos_url": "https://api.github.com/users/logoff/repos", "events_url": "https://api.github.com/users/logoff/events{/privacy}", "received_events_url": "https://api.github.com/users/logoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-25T12:34:31Z", "updated_at": "2018-01-30T10:55:40Z", "closed_at": "2018-01-30T10:55:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to schedule jobs and guarantee that they finish correctly (function reach last line). Everything is working fine, but I see that when a job is started, it's removed from the database, even when the job did not finish the entire function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/280", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/280/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/280/events", "html_url": "https://github.com/agronholm/apscheduler/issues/280", "id": 291462393, "node_id": "MDU6SXNzdWUyOTE0NjIzOTM=", "number": 280, "title": "ImportError: No module named apscheduler", "user": {"login": "sdq", "id": 4166591, "node_id": "MDQ6VXNlcjQxNjY1OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4166591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdq", "html_url": "https://github.com/sdq", "followers_url": "https://api.github.com/users/sdq/followers", "following_url": "https://api.github.com/users/sdq/following{/other_user}", "gists_url": "https://api.github.com/users/sdq/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdq/subscriptions", "organizations_url": "https://api.github.com/users/sdq/orgs", "repos_url": "https://api.github.com/users/sdq/repos", "events_url": "https://api.github.com/users/sdq/events{/privacy}", "received_events_url": "https://api.github.com/users/sdq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230268, "node_id": "MDU6TGFiZWwzNDgyMzAyNjg=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-25T06:18:04Z", "updated_at": "2018-10-30T07:37:10Z", "closed_at": "2018-10-30T07:37:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any idea to solve this problem? Not work in any version...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/279", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/279/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/279/events", "html_url": "https://github.com/agronholm/apscheduler/issues/279", "id": 291136964, "node_id": "MDU6SXNzdWUyOTExMzY5NjQ=", "number": 279, "title": "APScheduler : RuntimeError: cannot release un-acquired lock", "user": {"login": "zhiyiZeng", "id": 20840761, "node_id": "MDQ6VXNlcjIwODQwNzYx", "avatar_url": "https://avatars0.githubusercontent.com/u/20840761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhiyiZeng", "html_url": "https://github.com/zhiyiZeng", "followers_url": "https://api.github.com/users/zhiyiZeng/followers", "following_url": "https://api.github.com/users/zhiyiZeng/following{/other_user}", "gists_url": "https://api.github.com/users/zhiyiZeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhiyiZeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhiyiZeng/subscriptions", "organizations_url": "https://api.github.com/users/zhiyiZeng/orgs", "repos_url": "https://api.github.com/users/zhiyiZeng/repos", "events_url": "https://api.github.com/users/zhiyiZeng/events{/privacy}", "received_events_url": "https://api.github.com/users/zhiyiZeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-24T09:25:08Z", "updated_at": "2018-01-27T03:12:12Z", "closed_at": "2018-01-27T03:12:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using APScheduler to schedule my multi-threading scripts, but when I started, the error camp up. Here is my codes.\r\n`    \r\n    scheduler = BackgroundScheduler()\r\n\r\n    jobstores = {\r\n        'default': SQLAlchemyJobStore(url='sqlite:///jobs_ip.sqlite')\r\n    }\r\n    executors = {\r\n        'default': {'type': 'threadpool', 'max_workers': 1},\r\n        # 'processpool': ProcessPoolExecutor(max_workers=5)\r\n    }\r\n\r\n    job_defaults_cron = {\r\n        'id': 'crawl_ip',\r\n        'trigger': 'cron',\r\n        'day_of_week': 'mon-sun',\r\n        # 'hour': '8',\r\n        'hour': '17',\r\n        'minute': '15',\r\n        # 'coalesce': True,\r\n        'max_instances': 1,\r\n        'misfire_grace_time': 60,\r\n    }\r\n\r\n    scheduler.add_job(app, 'cron',\r\n                      day_of_week=job_defaults_cron['day_of_week'],\r\n                      hour=job_defaults_cron['hour'],\r\n                      minute=job_defaults_cron['minute'],\r\n                      id='crawl_ip')\r\n\r\n    scheduler.configure(jobstores=jobstores, executors=executors, job_defaults=job_defaults_cron, timezone=utc)\r\n    scheduler.start()\r\n\r\n    while True:\r\n        i = int(input('IP...'))`\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/276", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/276/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/276/events", "html_url": "https://github.com/agronholm/apscheduler/issues/276", "id": 289322344, "node_id": "MDU6SXNzdWUyODkzMjIzNDQ=", "number": 276, "title": "CronJob with delta value", "user": {"login": "cidrblock", "id": 18386516, "node_id": "MDQ6VXNlcjE4Mzg2NTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/18386516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cidrblock", "html_url": "https://github.com/cidrblock", "followers_url": "https://api.github.com/users/cidrblock/followers", "following_url": "https://api.github.com/users/cidrblock/following{/other_user}", "gists_url": "https://api.github.com/users/cidrblock/gists{/gist_id}", "starred_url": "https://api.github.com/users/cidrblock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cidrblock/subscriptions", "organizations_url": "https://api.github.com/users/cidrblock/orgs", "repos_url": "https://api.github.com/users/cidrblock/repos", "events_url": "https://api.github.com/users/cidrblock/events{/privacy}", "received_events_url": "https://api.github.com/users/cidrblock/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-17T16:11:21Z", "updated_at": "2019-07-19T11:59:40Z", "closed_at": "2019-07-19T11:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking to schedule a job x h:m before or after an expression based cronjob, for example 24hours before the 3rd sun of every month.\r\n\r\nIt seems like modeling it after the jitter functionality would be a good place to start, add it to the end of `    def get_next_fire_time(self, previous_fire_time, now):` \r\n\r\nInstead of _apply_jitter, basically _apply_delta.\r\n\r\nDoes the logic seem sound ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/275", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/275/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/275/events", "html_url": "https://github.com/agronholm/apscheduler/issues/275", "id": 289141862, "node_id": "MDU6SXNzdWUyODkxNDE4NjI=", "number": 275, "title": "ImportError: GeventScheduler requires gevent installed ", "user": {"login": "geeksambhu", "id": 9899283, "node_id": "MDQ6VXNlcjk4OTkyODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9899283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geeksambhu", "html_url": "https://github.com/geeksambhu", "followers_url": "https://api.github.com/users/geeksambhu/followers", "following_url": "https://api.github.com/users/geeksambhu/following{/other_user}", "gists_url": "https://api.github.com/users/geeksambhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/geeksambhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geeksambhu/subscriptions", "organizations_url": "https://api.github.com/users/geeksambhu/orgs", "repos_url": "https://api.github.com/users/geeksambhu/repos", "events_url": "https://api.github.com/users/geeksambhu/events{/privacy}", "received_events_url": "https://api.github.com/users/geeksambhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-17T04:48:27Z", "updated_at": "2018-01-17T05:03:27Z", "closed_at": "2018-01-17T05:03:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have gevent installed but when I tried to run the example code [gevent_.py](https://github.com/agronholm/apscheduler/blob/master/examples/schedulers/gevent_.py), I faced ImportError\r\n\r\nI am using `python 2.7.3` in ubuntu 12.04 and I faced this issue :\r\n\r\n```python\r\n>>> import gevent\r\n>>> import apscheduler\r\n>>> from apscheduler.schedulers.gevent import GeventScheduler\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/apscheduler/schedulers/gevent.py\", line 11, in <module>\r\n    raise ImportError('GeventScheduler requires gevent installed')\r\nImportError: GeventScheduler requires gevent installed\r\n\r\n```\r\nThank you in advance. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/274", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/274/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/274/events", "html_url": "https://github.com/agronholm/apscheduler/issues/274", "id": 286717947, "node_id": "MDU6SXNzdWUyODY3MTc5NDc=", "number": 274, "title": "Different processes can't get job", "user": {"login": "magaofei", "id": 3363787, "node_id": "MDQ6VXNlcjMzNjM3ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3363787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magaofei", "html_url": "https://github.com/magaofei", "followers_url": "https://api.github.com/users/magaofei/followers", "following_url": "https://api.github.com/users/magaofei/following{/other_user}", "gists_url": "https://api.github.com/users/magaofei/gists{/gist_id}", "starred_url": "https://api.github.com/users/magaofei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magaofei/subscriptions", "organizations_url": "https://api.github.com/users/magaofei/orgs", "repos_url": "https://api.github.com/users/magaofei/repos", "events_url": "https://api.github.com/users/magaofei/events{/privacy}", "received_events_url": "https://api.github.com/users/magaofei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T11:33:05Z", "updated_at": "2018-01-09T09:30:26Z", "closed_at": "2018-01-09T09:30:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I started a Django application, using uwsgi, I set the 4 process, and then open a task executed once for 1 hours, I want to show the task in the information on the page, such as the next run time, I found that the request distribution access to the different processes, to get job the only 1 handling process can be displayed.\r\n\r\napscheduler==3.4.0\r\ndjango==1.10.8\r\nuwsgi==2.0.15\r\njob_store, I've tried memory and redis\r\n`scheduler.get_job(job_id='INTERFACE_AUTO_TEST_JOB_ID')`\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/273", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/273/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/273/events", "html_url": "https://github.com/agronholm/apscheduler/issues/273", "id": 286096462, "node_id": "MDU6SXNzdWUyODYwOTY0NjI=", "number": 273, "title": "Question about date trigger misfires", "user": {"login": "chaddotson", "id": 1754094, "node_id": "MDQ6VXNlcjE3NTQwOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1754094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaddotson", "html_url": "https://github.com/chaddotson", "followers_url": "https://api.github.com/users/chaddotson/followers", "following_url": "https://api.github.com/users/chaddotson/following{/other_user}", "gists_url": "https://api.github.com/users/chaddotson/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaddotson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaddotson/subscriptions", "organizations_url": "https://api.github.com/users/chaddotson/orgs", "repos_url": "https://api.github.com/users/chaddotson/repos", "events_url": "https://api.github.com/users/chaddotson/events{/privacy}", "received_events_url": "https://api.github.com/users/chaddotson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230269, "node_id": "MDU6TGFiZWwzNDgyMzAyNjk=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-04T19:57:19Z", "updated_at": "2018-01-04T22:20:40Z", "closed_at": "2018-01-04T22:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any option to allow jobs to always execute if missed (without setting a high misfire_grace_time)?  I was thinking about a job with a date trigger and I wanted it to execute on time or whenever the program comes back online if it was offline.\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/apscheduler/issues/271", "repository_url": "https://api.github.com/repos/agronholm/apscheduler", "labels_url": "https://api.github.com/repos/agronholm/apscheduler/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/apscheduler/issues/271/comments", "events_url": "https://api.github.com/repos/agronholm/apscheduler/issues/271/events", "html_url": "https://github.com/agronholm/apscheduler/issues/271", "id": 285739823, "node_id": "MDU6SXNzdWUyODU3Mzk4MjM=", "number": 271, "title": "UTC offset ignored when creating datetimes from strings", "user": {"login": "darorl89", "id": 17142036, "node_id": "MDQ6VXNlcjE3MTQyMDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/17142036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darorl89", "html_url": "https://github.com/darorl89", "followers_url": "https://api.github.com/users/darorl89/followers", "following_url": "https://api.github.com/users/darorl89/following{/other_user}", "gists_url": "https://api.github.com/users/darorl89/gists{/gist_id}", "starred_url": "https://api.github.com/users/darorl89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darorl89/subscriptions", "organizations_url": "https://api.github.com/users/darorl89/orgs", "repos_url": "https://api.github.com/users/darorl89/repos", "events_url": "https://api.github.com/users/darorl89/events{/privacy}", "received_events_url": "https://api.github.com/users/darorl89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 348230264, "node_id": "MDU6TGFiZWwzNDgyMzAyNjQ=", "url": "https://api.github.com/repos/agronholm/apscheduler/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-03T16:34:47Z", "updated_at": "2018-01-15T22:42:03Z", "closed_at": "2018-01-15T22:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It works properly for time with UTC+1 Timezone, while I put the same time but but in UTC timezone, it just starts immediately, e.g.:\r\nstart_date = '2018-01-03 18:00:00+00:00' Starts immediately\r\nstart_date = '2018-01-03 17:00:00+01:00' Starts properly\r\n\r\nAlso, there is an error thrown when I put datetime instead of string there:\r\nAttributeError: 'datetime.timezone' object has no attribute '_utcoffset'\r\nThrown in pytz.\r\n  \r\nHave to use such fix...\r\ndateStr = str(date + timedelta(hours=1))[0:-6] + '+01:00'", "performed_via_github_app": null, "score": 1.0}]}