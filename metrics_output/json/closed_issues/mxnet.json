{"total_count": 7385, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18941", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18941/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18941/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18941/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18941", "id": 679698163, "node_id": "MDU6SXNzdWU2Nzk2OTgxNjM=", "number": 18941, "title": "Segmentation fault in mxnet.contrib.autograd.mark_variables", "user": {"login": "leeyeetonn", "id": 13006365, "node_id": "MDQ6VXNlcjEzMDA2MzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/13006365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeyeetonn", "html_url": "https://github.com/leeyeetonn", "followers_url": "https://api.github.com/users/leeyeetonn/followers", "following_url": "https://api.github.com/users/leeyeetonn/following{/other_user}", "gists_url": "https://api.github.com/users/leeyeetonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeyeetonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeyeetonn/subscriptions", "organizations_url": "https://api.github.com/users/leeyeetonn/orgs", "repos_url": "https://api.github.com/users/leeyeetonn/repos", "events_url": "https://api.github.com/users/leeyeetonn/events{/privacy}", "received_events_url": "https://api.github.com/users/leeyeetonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 708215424, "node_id": "MDU6TGFiZWw3MDgyMTU0MjQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Autograd", "name": "Autograd", "color": "fbca04", "default": false, "description": null}, {"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T06:19:03Z", "updated_at": "2020-08-16T20:11:19Z", "closed_at": "2020-08-16T20:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n(A clear and concise description of what the bug is.)\r\nIt seems random ndarray can trigger `mxnet.contrib.autograd.mark_variables` to have segfault. Please see the provided code for example.\r\n### Error Message\r\n(Paste the complete error message. Please also include stack trace by setting environment variable `DMLC_LOG_STACK_TRACE_DEPTH=10` before running your script.)\r\n>Segmentation fault: 11\r\nStack trace:\r\n  [bt] (0) /root/miniconda3/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3c27360) [0x7efea4dda360]\r\n## To Reproduce\r\n(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\r\n```python\r\nimport mxnet\r\nimport numpy as np\r\ngrads = mxnet.nd.array(np.random.rand(1))\r\nvars = mxnet.nd.array(np.random.rand(1))\r\nmxnet.contrib.autograd.mark_variables(gradients=grads, variables=vars)\r\n```\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. run the provided code in python interpreter or as a script\r\n2.\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\nGot 404 when trying to get the script.\r\n\r\nSome environment information:\r\n\r\n* OS: ubuntu 18.04\r\n* Python: 3.7.6\r\n* pip: 20.0.2\r\n* numpy: 1.18.5\r\n* mxnet: 1.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18933", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18933/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18933/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18933/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18933", "id": 679619766, "node_id": "MDU6SXNzdWU2Nzk2MTk3NjY=", "number": 18933, "title": "Floating point exception in mxnet.ndarray.InstanceNorm", "user": {"login": "leeyeetonn", "id": 13006365, "node_id": "MDQ6VXNlcjEzMDA2MzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/13006365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeyeetonn", "html_url": "https://github.com/leeyeetonn", "followers_url": "https://api.github.com/users/leeyeetonn/followers", "following_url": "https://api.github.com/users/leeyeetonn/following{/other_user}", "gists_url": "https://api.github.com/users/leeyeetonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeyeetonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeyeetonn/subscriptions", "organizations_url": "https://api.github.com/users/leeyeetonn/orgs", "repos_url": "https://api.github.com/users/leeyeetonn/repos", "events_url": "https://api.github.com/users/leeyeetonn/events{/privacy}", "received_events_url": "https://api.github.com/users/leeyeetonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707556574, "node_id": "MDU6TGFiZWw3MDc1NTY1NzQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Operator", "name": "Operator", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-15T18:12:32Z", "updated_at": "2020-08-21T20:58:55Z", "closed_at": "2020-08-21T20:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n(A clear and concise description of what the bug is.)\r\n`mxnet.ndarray.InstanceNorm` has floating point exception when the given data's `batch = 0` or `channel = 0`. Please see the provided code snippets for example.\r\n\r\n### Error Message\r\n(Paste the complete error message. Please also include stack trace by setting environment variable `DMLC_LOG_STACK_TRACE_DEPTH=10` before running your script.)\r\n>Floating point exception (core dumped)\r\n## To Reproduce\r\n(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\r\n```python\r\nimport mxnet\r\nimport numpy as np\r\n\r\ninput = mxnet.nd.array(np.random.rand(0,1,1)) # batch = 0\r\ngamma = mxnet.nd.array(np.random.rand(1))\r\nbeta = mxnet.nd.array(np.random.rand(1))\r\nmxnet.ndarray.InstanceNorm(input, gamma, beta)\r\n```\r\n\r\n```python\r\nimport mxnet\r\nimport numpy as np\r\n\r\ninput = mxnet.nd.array(np.random.rand(1,0,1)) # channel = 0\r\ngamma = mxnet.nd.array(np.random.rand(0))\r\nbeta = mxnet.nd.array(np.random.rand(0))\r\nmxnet.ndarray.InstanceNorm(input, gamma, beta)\r\n```\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. run the provided code in python interpreter or as a script\r\n2.\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\nGot 404 when trying to get the script.\r\n\r\nSome environment information:\r\n\r\n* OS: ubuntu 18.04\r\n* Python: 3.7.6\r\n* pip: 20.0.2\r\n* numpy: 1.18.5\r\n* mxnet: 1.6.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18927", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18927/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18927/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18927/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18927", "id": 679435060, "node_id": "MDU6SXNzdWU2Nzk0MzUwNjA=", "number": 18927, "title": "Floating Point Exception mxnet.ndarray.contrib.bipartite_matching", "user": {"login": "leeyeetonn", "id": 13006365, "node_id": "MDQ6VXNlcjEzMDA2MzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/13006365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeyeetonn", "html_url": "https://github.com/leeyeetonn", "followers_url": "https://api.github.com/users/leeyeetonn/followers", "following_url": "https://api.github.com/users/leeyeetonn/following{/other_user}", "gists_url": "https://api.github.com/users/leeyeetonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeyeetonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeyeetonn/subscriptions", "organizations_url": "https://api.github.com/users/leeyeetonn/orgs", "repos_url": "https://api.github.com/users/leeyeetonn/repos", "events_url": "https://api.github.com/users/leeyeetonn/events{/privacy}", "received_events_url": "https://api.github.com/users/leeyeetonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707556574, "node_id": "MDU6TGFiZWw3MDc1NTY1NzQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Operator", "name": "Operator", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T22:35:18Z", "updated_at": "2020-08-21T00:01:11Z", "closed_at": "2020-08-21T00:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n(A clear and concise description of what the bug is.)\r\n* `mxnet.ndarray.contrib.bipartite_matching` gives floating point exception when input data's shape contains 0.\r\n* Curiously, it only gives floating point exception when 0 is at certain location in shape, and gives `dmlc::Error` for other locations. See the provided code snippets for example.\r\n### Error Message\r\n(Paste the complete error message. Please also include stack trace by setting environment variable `DMLC_LOG_STACK_TRACE_DEPTH=10` before running your script.)\r\n>Floating point exception(core dumped)\r\n## To Reproduce\r\n(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\r\nThe code below produces floating point exception:\r\n```python\r\nimport mxnet as mx\r\nimport numpy as np\r\n\r\ninput = mx.nd.array(np.random.rand(0,2))\r\nmx.ndarray.contrib.bipartite_matching(input, threshold=0.1)\r\n```\r\ngives:\r\n>Floating point exception (core dumped)\r\n\r\nIf swap the position of the 0 in shape, it gives `dmlc::Error` instead:\r\n```python\r\nimport mxnet as mx\r\nimport numpy as np\r\n\r\ninput = mx.nd.array(np.random.rand(2,0))\r\nmx.ndarray.contrib.bipartite_matching(input, threshold=0.1)\r\n```\r\ngives:\r\n> terminate called after throwing an instance of 'dmlc::Error'\r\n  what():  [22:15:23] src/imperative/./imperative_utils.h:146: Operator _contrib_bipartite_matching inferring shapes failed.\r\ninput shapes:\r\n[2,-1]\r\noutput shapes:\r\n[2]\r\n[-1]\r\noperator attributes:\r\nthreshold : 0.1\r\nStack trace:\r\n  [bt] (0) /root/miniconda3/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x307d3b) [0x7f5828e96d3b]\r\n  [bt] (1) /root/miniconda3/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0x363b) [0x7f582c0323bb]\r\nAborted (core dumped)\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. run the above code snippets in python Interpreter or run it as a python script\r\n2.\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\nI got 404 when trying to get the script.\r\n\r\nSome environment information:\r\n* OS: ubuntu 18.04\r\n* Python: 3.7.6\r\n* pip: 20.0.2\r\n* numpy: 1.18.5\r\n* mxnet: 1.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18911", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18911/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18911/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18911/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18911", "id": 677381531, "node_id": "MDU6SXNzdWU2NzczODE1MzE=", "number": 18911, "title": "Image transforms sometimes produce incorrect result", "user": {"login": "rogerdettloff", "id": 6138503, "node_id": "MDQ6VXNlcjYxMzg1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6138503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogerdettloff", "html_url": "https://github.com/rogerdettloff", "followers_url": "https://api.github.com/users/rogerdettloff/followers", "following_url": "https://api.github.com/users/rogerdettloff/following{/other_user}", "gists_url": "https://api.github.com/users/rogerdettloff/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogerdettloff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogerdettloff/subscriptions", "organizations_url": "https://api.github.com/users/rogerdettloff/orgs", "repos_url": "https://api.github.com/users/rogerdettloff/repos", "events_url": "https://api.github.com/users/rogerdettloff/events{/privacy}", "received_events_url": "https://api.github.com/users/rogerdettloff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707556574, "node_id": "MDU6TGFiZWw3MDc1NTY1NzQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Operator", "name": "Operator", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T04:53:40Z", "updated_at": "2020-08-13T05:47:48Z", "closed_at": "2020-08-13T05:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI've noticed that image transforms like `npx.image.random_flip_left_right` and `npx.image.random_flip_top_bottom` sometimes produce an incorrect result--although, sometimes they work correctly.  Please see my example below...\r\n\r\n### Error Message\r\nNo error message is produced.\r\n\r\n## To Reproduce\r\n```\r\n>>> from mxnet import np, npx\r\n>>> npx.set_np()\r\n\r\n>>> img=np.arange(11*9).reshape(11,9,1)\r\n\r\n>>> img[:,:,0]  # have a look at our test image for reference.\r\narray([[ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.],\r\n       [ 9., 10., 11., 12., 13., 14., 15., 16., 17.],\r\n       [18., 19., 20., 21., 22., 23., 24., 25., 26.],\r\n       [27., 28., 29., 30., 31., 32., 33., 34., 35.],\r\n       [36., 37., 38., 39., 40., 41., 42., 43., 44.],\r\n       [45., 46., 47., 48., 49., 50., 51., 52., 53.],\r\n       [54., 55., 56., 57., 58., 59., 60., 61., 62.],\r\n       [63., 64., 65., 66., 67., 68., 69., 70., 71.],\r\n       [72., 73., 74., 75., 76., 77., 78., 79., 80.],\r\n       [81., 82., 83., 84., 85., 86., 87., 88., 89.],\r\n       [90., 91., 92., 93., 94., 95., 96., 97., 98.]])\r\n\r\n>>> img_flip_lr = npx.image.random_flip_left_right(img)\r\n>>> img_flip_lr[:,:,0]  # correctly flipped image\r\narray([[ 8.,  7.,  6.,  5.,  4.,  3.,  2.,  1.,  0.],\r\n       [17., 16., 15., 14., 13., 12., 11., 10.,  9.],\r\n       [26., 25., 24., 23., 22., 21., 20., 19., 18.],\r\n       [35., 34., 33., 32., 31., 30., 29., 28., 27.],\r\n       [44., 43., 42., 41., 40., 39., 38., 37., 36.],\r\n       [53., 52., 51., 50., 49., 48., 47., 46., 45.],\r\n       [62., 61., 60., 59., 58., 57., 56., 55., 54.],\r\n       [71., 70., 69., 68., 67., 66., 65., 64., 63.],\r\n       [80., 79., 78., 77., 76., 75., 74., 73., 72.],\r\n       [89., 88., 87., 86., 85., 84., 83., 82., 81.],\r\n       [98., 97., 96., 95., 94., 93., 92., 91., 90.]])\r\n\r\n>>> img_flip_lr = npx.image.random_flip_left_right(img)  # try again...\r\n>>> img_flip_lr[:,:,0]  # sometimes I get a messed-up result...\r\narray([[ 8.0000000e+00,  7.0000000e+00,  6.0000000e+00,  5.0000000e+00,\r\n         4.4816047e-38,  3.0000000e+00,  2.0000000e+00,  1.0000000e+00,\r\n         0.0000000e+00],\r\n       [ 1.7000000e+01,  1.6000000e+01,  1.5000000e+01,  1.4000000e+01,\r\n         5.9144397e-38,  1.2000000e+01,  1.1000000e+01,  1.0000000e+01,\r\n         9.0000000e+00],\r\n       [ 2.6000000e+01,  2.5000000e+01,  2.4000000e+01,  2.3000000e+01,\r\n         7.3440759e-34,  2.1000000e+01,  2.0000000e+01,  1.9000000e+01,\r\n         1.8000000e+01],\r\n       [ 3.5000000e+01,  3.4000000e+01,  3.3000000e+01,  3.2000000e+01,\r\n         4.8542180e-32,  3.0000000e+01,  2.9000000e+01,  2.8000000e+01,\r\n         2.7000000e+01],\r\n       [ 4.4000000e+01,  4.3000000e+01,  4.2000000e+01,  4.1000000e+01,\r\n        -5.2694353e-17,  3.9000000e+01,  3.8000000e+01,  3.7000000e+01,\r\n         3.6000000e+01],\r\n       [ 5.3000000e+01,  5.2000000e+01,  5.1000000e+01,  5.0000000e+01,\r\n         9.3095263e-41,  4.8000000e+01,  4.7000000e+01,  4.6000000e+01,\r\n         4.5000000e+01],\r\n       [ 6.2000000e+01,  6.1000000e+01,  6.0000000e+01,  5.9000000e+01,\r\n         4.6286172e-38,  5.7000000e+01,  5.6000000e+01,  5.5000000e+01,\r\n         5.4000000e+01],\r\n       [ 7.1000000e+01,  7.0000000e+01,  6.9000000e+01,  6.8000000e+01,\r\n         1.9254146e-37,  6.6000000e+01,  6.5000000e+01,  6.4000000e+01,\r\n         6.3000000e+01],\r\n       [ 8.0000000e+01,  7.9000000e+01,  7.8000000e+01,  7.7000000e+01,\r\n         1.8514722e-37,  7.5000000e+01,  7.4000000e+01,  7.3000000e+01,\r\n         7.2000000e+01],\r\n       [ 8.9000000e+01,  8.8000000e+01,  8.7000000e+01,  8.6000000e+01,\r\n         1.0652919e-38,  8.4000000e+01,  8.3000000e+01,  8.2000000e+01,\r\n         8.1000000e+01],\r\n       [ 9.8000000e+01,  9.7000000e+01,  9.6000000e+01,  9.5000000e+01,\r\n         2.3658196e-37,  9.3000000e+01,  9.2000000e+01,  9.1000000e+01,\r\n         9.0000000e+01]])\r\n\r\n```\r\nThe example above does not always produce messed-up results for me, but I found that it seems more frequently messed-up when I Compose several sequential transformations, like this:\r\n```\r\n>>> from mxnet.gluon.data.vision import transforms\r\n>>> transformer = transforms.Compose([\r\n...         transforms.RandomFlipLeftRight(),\r\n...         transforms.RandomFlipTopBottom()\r\n...     ])\r\n>>> transformer(img)[:,:,0]\r\narray([[8.0000000e+00, 7.0000000e+00, 6.0000000e+00, 5.0000000e+00,\r\n        6.3878950e-04, 3.0000000e+00, 2.0000000e+00, 1.0000000e+00,\r\n        0.0000000e+00],\r\n       [1.7000000e+01, 1.6000000e+01, 1.5000000e+01, 1.4000000e+01,\r\n        4.7425812e+30, 1.2000000e+01, 1.1000000e+01, 1.0000000e+01,\r\n        9.0000000e+00],\r\n       [2.6000000e+01, 2.5000000e+01, 2.4000000e+01, 2.3000000e+01,\r\n        1.7657325e+22, 2.1000000e+01, 2.0000000e+01, 1.9000000e+01,\r\n        1.8000000e+01],\r\n       [3.5000000e+01, 3.4000000e+01, 3.3000000e+01, 3.2000000e+01,\r\n        7.5839171e+31, 3.0000000e+01, 2.9000000e+01, 2.8000000e+01,\r\n        2.7000000e+01],\r\n       [4.4000000e+01, 4.3000000e+01, 4.2000000e+01, 4.1000000e+01,\r\n        3.3809470e+03, 3.9000000e+01, 3.8000000e+01, 3.7000000e+01,\r\n        3.6000000e+01],\r\n       [5.3000000e+01, 5.2000000e+01, 5.1000000e+01, 5.0000000e+01,\r\n        2.2267046e-15, 4.8000000e+01, 4.7000000e+01, 4.6000000e+01,\r\n        4.5000000e+01],\r\n       [6.2000000e+01, 6.1000000e+01, 6.0000000e+01, 5.9000000e+01,\r\n        7.5033516e+28, 5.7000000e+01, 5.6000000e+01, 5.5000000e+01,\r\n        5.4000000e+01],\r\n       [7.1000000e+01, 7.0000000e+01, 6.9000000e+01, 6.8000000e+01,\r\n        4.7427375e+30, 6.6000000e+01, 6.5000000e+01, 6.4000000e+01,\r\n        6.3000000e+01],\r\n       [8.0000000e+01, 7.9000000e+01, 7.8000000e+01, 7.7000000e+01,\r\n        1.4589531e-19, 7.5000000e+01, 7.4000000e+01, 7.3000000e+01,\r\n        7.2000000e+01],\r\n       [8.9000000e+01, 8.8000000e+01, 8.7000000e+01, 8.6000000e+01,\r\n        4.7427375e+30, 8.4000000e+01, 8.3000000e+01, 8.2000000e+01,\r\n        8.1000000e+01],\r\n       [9.8000000e+01, 9.7000000e+01, 9.6000000e+01, 9.5000000e+01,\r\n        1.9209545e+31, 9.3000000e+01, 9.2000000e+01, 9.1000000e+01,\r\n        9.0000000e+01]])\r\n\r\n>>> transformer(img)[:,:,0]  # try again, and sometimes it works okay...\r\narray([[90., 91., 92., 93., 94., 95., 96., 97., 98.],\r\n       [81., 82., 83., 84., 85., 86., 87., 88., 89.],\r\n       [72., 73., 74., 75., 76., 77., 78., 79., 80.],\r\n       [63., 64., 65., 66., 67., 68., 69., 70., 71.],\r\n       [54., 55., 56., 57., 58., 59., 60., 61., 62.],\r\n       [45., 46., 47., 48., 49., 50., 51., 52., 53.],\r\n       [36., 37., 38., 39., 40., 41., 42., 43., 44.],\r\n       [27., 28., 29., 30., 31., 32., 33., 34., 35.],\r\n       [18., 19., 20., 21., 22., 23., 24., 25., 26.],\r\n       [ 9., 10., 11., 12., 13., 14., 15., 16., 17.],\r\n       [ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.]])\r\n```\r\n\r\n## Environment\r\n\r\n```\r\n----------Python Info----------\r\nVersion      : 3.7.6\r\nCompiler     : MSC v.1916 64 bit (AMD64)\r\nBuild        : ('tags/v3.7.6:43364a7ae0', 'Dec 19 2019 00:42:30')\r\nArch         : ('64bit', 'WindowsPE')\r\n------------Pip Info-----------\r\nVersion      : 20.2.1\r\nDirectory    : D:\\Projects\\Combinati\\dPCR-analysis\\env-mxnet\\lib\\site-packages\\pip\r\n----------MXNet Info-----------\r\nVersion      : 1.6.0\r\nDirectory    : D:\\Projects\\Combinati\\dPCR-analysis\\env-mxnet\\lib\\site-packages\\mxnet\r\nNum GPUs     : 0\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Windows-10-10.0.18362-SP0\r\nsystem       : Windows\r\nnode         : roger-5577\r\nrelease      : 10\r\nversion      : 10.0.18362\r\n----------Hardware Info----------\r\nmachine      : AMD64\r\nprocessor    : Intel64 Family 6 Model 158 Stepping 9, GenuineIntel\r\nName                                       \r\nIntel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz  \r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0080 sec, LOAD: 1.1030 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0010 sec, LOAD: 0.5180 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0861 sec, LOAD: 0.3459 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0520 sec, LOAD: 0.2090 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0190 sec, LOAD: 0.2664 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0870 sec, LOAD: 0.4820 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0100 sec, LOAD: 0.5760 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.006048440933227539 sec.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18909", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18909/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18909/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18909/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18909", "id": 677208985, "node_id": "MDU6SXNzdWU2NzcyMDg5ODU=", "number": 18909, "title": "Website API doc is empty", "user": {"login": "eric-haibin-lin", "id": 5545640, "node_id": "MDQ6VXNlcjU1NDU2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5545640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-haibin-lin", "html_url": "https://github.com/eric-haibin-lin", "followers_url": "https://api.github.com/users/eric-haibin-lin/followers", "following_url": "https://api.github.com/users/eric-haibin-lin/following{/other_user}", "gists_url": "https://api.github.com/users/eric-haibin-lin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-haibin-lin/subscriptions", "organizations_url": "https://api.github.com/users/eric-haibin-lin/orgs", "repos_url": "https://api.github.com/users/eric-haibin-lin/repos", "events_url": "https://api.github.com/users/eric-haibin-lin/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-haibin-lin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T21:27:16Z", "updated_at": "2020-08-18T16:57:35Z", "closed_at": "2020-08-18T16:57:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\r\n<img width=\"1286\" alt=\"Screen Shot 2020-08-11 at 2 26 19 PM\" src=\"https://user-images.githubusercontent.com/5545640/89950553-b12d9a80-dbde-11ea-9293-28bb2f62f760.png\">\r\n\r\nhttps://mxnet.apache.org/api/python/docs/api/gluon/loss/index.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18903", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18903/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18903/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18903/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18903", "id": 676942021, "node_id": "MDU6SXNzdWU2NzY5NDIwMjE=", "number": 18903, "title": "why 1.6.0.post0 ?", "user": {"login": "StevenJokes", "id": 25657787, "node_id": "MDQ6VXNlcjI1NjU3Nzg3", "avatar_url": "https://avatars3.githubusercontent.com/u/25657787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StevenJokes", "html_url": "https://github.com/StevenJokes", "followers_url": "https://api.github.com/users/StevenJokes/followers", "following_url": "https://api.github.com/users/StevenJokes/following{/other_user}", "gists_url": "https://api.github.com/users/StevenJokes/gists{/gist_id}", "starred_url": "https://api.github.com/users/StevenJokes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StevenJokes/subscriptions", "organizations_url": "https://api.github.com/users/StevenJokes/orgs", "repos_url": "https://api.github.com/users/StevenJokes/repos", "events_url": "https://api.github.com/users/StevenJokes/events{/privacy}", "received_events_url": "https://api.github.com/users/StevenJokes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T14:50:43Z", "updated_at": "2020-08-11T16:52:59Z", "closed_at": "2020-08-11T16:52:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n(A clear and concise description of what the bug is.)\r\n\r\n### Error Message\r\n(Paste the complete error message. Please also include stack trace by setting environment variable `DMLC_LOG_STACK_TRACE_DEPTH=10` before running your script.)\r\n\r\nhttps://github.com/horovod/horovod/pull/2172/files\r\nhttps://github.com/d2l-ai/d2l-en/issues/1324\r\nhttps://pypi.org/project/mxnet-cu101/\r\n## To Reproduce\r\n(If you developed your own code, please provide a short script that reproduces the error. For existing examples, please provide link.)\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1.\r\n2.\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18901", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18901/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18901/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18901/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18901", "id": 676692553, "node_id": "MDU6SXNzdWU2NzY2OTI1NTM=", "number": 18901, "title": " The same model with different weights has different inference speeds.", "user": {"login": "ikeliou", "id": 48668492, "node_id": "MDQ6VXNlcjQ4NjY4NDky", "avatar_url": "https://avatars1.githubusercontent.com/u/48668492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikeliou", "html_url": "https://github.com/ikeliou", "followers_url": "https://api.github.com/users/ikeliou/followers", "following_url": "https://api.github.com/users/ikeliou/following{/other_user}", "gists_url": "https://api.github.com/users/ikeliou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikeliou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikeliou/subscriptions", "organizations_url": "https://api.github.com/users/ikeliou/orgs", "repos_url": "https://api.github.com/users/ikeliou/repos", "events_url": "https://api.github.com/users/ikeliou/events{/privacy}", "received_events_url": "https://api.github.com/users/ikeliou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 273991937, "node_id": "MDU6TGFiZWwyNzM5OTE5Mzc=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/C++", "name": "C++", "color": "0052cc", "default": false, "description": "C++ frontend API"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T08:40:14Z", "updated_at": "2020-08-19T06:48:05Z", "closed_at": "2020-08-19T06:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The cpu inference speed of the model LResNet100E-IR which I trained is very slow then the pretrained model in the insightface's model zoo.\r\n\r\nmy model:\r\nhttps://drive.google.com/drive/folders/15fRNmKKY-Hoz0L7oayD8DXA-DbGtaZM1?usp=sharing\r\n\r\ninsignface model:\r\nhttps://www.dropbox.com/s/tj96fsm6t6rq8ye/model-r100-arcface-ms1m-refine-v2.zip?dl=0\r\n\r\nmxnet Version 1.6.0\r\n\r\ncode:\r\n```cpp\r\ninitialization:\r\nvoid face_feature_init(std::string modelFolder) {\r\n  std::string json_file = \"models/models-symbol.json\";\r\n  std::string param_file = \"models/models-0000.params\";\r\n\r\n  BufferFile json_data(json_file);\r\n  BufferFile param_data(param_file);\r\n\r\n  // Parameters\r\n  int dev_type = 1;  // 1: cpu, 2: gpu\r\n  int dev_id = 0;  // arbitrary.\r\n  mx_uint num_input_nodes = 1;  // 1 for feedforward\r\n  const char* input_key[1] = { \"data\" };\r\n  const char** input_keys = input_key;\r\n\r\n\r\n  const mx_uint input_shape_indptr[2] = { 0, 4 };\r\n  const mx_uint input_shape_data[4] = { 1,\r\n                                        static_cast<mx_uint>(channels),\r\n                                        static_cast<mx_uint>(height),\r\n                                        static_cast<mx_uint>(width) };\r\n\r\n  if (json_data.GetLength() == 0 || param_data.GetLength() == 0) {\r\n    return;\r\n  }\r\n\r\n  MXPredCreate(static_cast<const char*>(json_data.GetBuffer()),\r\n          static_cast<const char*>(param_data.GetBuffer()),\r\n          static_cast<int>(param_data.GetLength()),\r\n          dev_type,\r\n          dev_id,\r\n          num_input_nodes,\r\n          input_keys,\r\n          input_shape_indptr,\r\n          input_shape_data,\r\n          &pred_hnd);\r\n  assert(pred_hnd);\r\n}\r\n\r\ninference:\r\nvoid face_feature_getfeature(const cv::Mat &img, cv::Mat &feature) {\r\n#ifdef debugtime\r\n  PerformanceTimer pt(\"face_feature_getfeature\");\r\n#endif\r\n  auto image_size = static_cast<std::size_t>(width * height * channels);\r\n  std::vector<mx_float> image_data(image_size);\r\n\r\n  GetImageFile(img, image_data.data(), channels, cv::Size(width, height));\r\n\r\n  // Set Input Image\r\n  MXPredSetInput(pred_hnd, \"data\", image_data.data(), static_cast<mx_uint>(image_size));\r\n\r\n  // Do Predict Forward\r\n  MXPredForward(pred_hnd);\r\n\r\n  mx_uint output_index = 0;\r\n\r\n  mx_uint* shape = nullptr;\r\n  mx_uint shape_len;\r\n\r\n  // Get Output Result\r\n  MXPredGetOutputShape(pred_hnd, output_index, &shape, &shape_len);\r\n\r\n  std::size_t size = 1;\r\n  for (mx_uint i = 0; i < shape_len; ++i) { size *= shape[i]; }\r\n\r\n  std::vector<float> data(size);\r\n\r\n  MXPredGetOutput(pred_hnd, output_index, &(data[0]), static_cast<mx_uint>(size));\r\n#ifdef debug\r\n  PrintOutputResult(data);\r\n#endif\r\n  cv::Mat vector(size, 1, CV_32F);\r\n  memcpy(vector.data, data.data(), size*4);\r\n  cv::Mat _l2;\r\n  cv::multiply(vector,vector,_l2);\r\n  float l2 =  cv::sqrt(cv::sum(_l2).val[0]);\r\n  vector = vector / l2;\r\n  feature = vector;\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18891", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18891/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18891/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18891/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18891", "id": 676357073, "node_id": "MDU6SXNzdWU2NzYzNTcwNzM=", "number": 18891, "title": "Build from source issue", "user": {"login": "yx1215", "id": 37573101, "node_id": "MDQ6VXNlcjM3NTczMTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/37573101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yx1215", "html_url": "https://github.com/yx1215", "followers_url": "https://api.github.com/users/yx1215/followers", "following_url": "https://api.github.com/users/yx1215/following{/other_user}", "gists_url": "https://api.github.com/users/yx1215/gists{/gist_id}", "starred_url": "https://api.github.com/users/yx1215/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yx1215/subscriptions", "organizations_url": "https://api.github.com/users/yx1215/orgs", "repos_url": "https://api.github.com/users/yx1215/repos", "events_url": "https://api.github.com/users/yx1215/events{/privacy}", "received_events_url": "https://api.github.com/users/yx1215/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707583550, "node_id": "MDU6TGFiZWw3MDc1ODM1NTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Build", "name": "Build", "color": "fbca04", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-10T19:18:05Z", "updated_at": "2020-08-10T20:42:40Z", "closed_at": "2020-08-10T19:40:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nIn the build from source guide [here](https://mxnet.apache.org/versions/1.6/get_started/osx_setup), I need to copy the file make/osx.mk as ./config.mk. However, there seems to be no directory called make?\r\n\r\n### Error Message\r\n```\r\nf8ffc22b2d38:mxnet yixiaxia$     cp make/osx.mk ./config.mk\r\ncp: make/osx.mk: No such file or directory\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18878", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18878/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18878/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18878/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18878", "id": 675337422, "node_id": "MDU6SXNzdWU2NzUzMzc0MjI=", "number": 18878, "title": "[Bug] Reduction operators in numpy does not support explicitly set `keepdims` to Non", "user": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T23:14:36Z", "updated_at": "2020-08-08T01:21:18Z", "closed_at": "2020-08-08T00:07:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Minimal reproducible example:\r\n```python\r\n\r\nimport mxnet as mx\r\nfrom mxnet.gluon.nn import HybridBlock\r\nmx.npx.set_np()\r\n\r\nclass Foo(HybridBlock):\r\n    def hybrid_forward(self, F, x):\r\n        return F.np.mean(x, keepdims=None)\r\n\r\nfoo = Foo()\r\nfoo.hybridize()\r\nout = foo(mx.np.ones((10, 10)))\r\nout.asnumpy()\r\n```\r\n\r\nOutput:\r\n```\r\nMXNetError: MXNetError: Invalid Parameter format for keepdims expect boolean but value='None', in operator _npi_mean(name=\"\", __profiler_scope__=\"foo0:\", axis=\"None\", keepdims=\"None\")\r\n```\r\n\r\nThe root cause is that we should revise https://github.com/apache/incubator-mxnet/blob/dde635f8c7666e205816da8ca4e519d0d213523f/src/operator/numpy/np_broadcast_reduce_op.h#L43 to use `dmlc::optional<bool>`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18861", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18861/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18861/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18861/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18861", "id": 673092750, "node_id": "MDU6SXNzdWU2NzMwOTI3NTA=", "number": 18861, "title": "MXNet nightly build linker error", "user": {"login": "eric-haibin-lin", "id": 5545640, "node_id": "MDQ6VXNlcjU1NDU2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5545640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-haibin-lin", "html_url": "https://github.com/eric-haibin-lin", "followers_url": "https://api.github.com/users/eric-haibin-lin/followers", "following_url": "https://api.github.com/users/eric-haibin-lin/following{/other_user}", "gists_url": "https://api.github.com/users/eric-haibin-lin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-haibin-lin/subscriptions", "organizations_url": "https://api.github.com/users/eric-haibin-lin/orgs", "repos_url": "https://api.github.com/users/eric-haibin-lin/repos", "events_url": "https://api.github.com/users/eric-haibin-lin/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-haibin-lin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707583550, "node_id": "MDU6TGFiZWw3MDc1ODM1NTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Build", "name": "Build", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-04T21:25:24Z", "updated_at": "2020-08-06T00:40:43Z", "closed_at": "2020-08-06T00:39:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://jenkins.mxnet-ci.amazon-ml.com/job/restricted-mxnet-cd/job/mxnet-cd-release-job/1507/execution/node/165/log/ \r\n\r\n```\r\n13:19:26  /lib/../lib64/crti.o: In function `_init':\r\n13:19:26  (.init+0x7): relocation truncated to fit: R_X86_64_GOTPCREL against undefined symbol `__gmon_start__'\r\n13:19:26  CMakeFiles/nnvm.dir/3rdparty/tvm/nnvm/src/c_api/c_api_symbolic.cc.o: In function `NNSymbolFree':\r\n13:19:26  c_api_symbolic.cc:(.text+0x100): relocation truncated to fit: R_X86_64_GOTPCREL against symbol `__pthread_key_create@@GLIBC_2.2.5' defined in .text section in /lib64/libpthread.so.0\r\n13:19:26  CMakeFiles/nnvm.dir/3rdparty/tvm/nnvm/src/c_api/c_api_symbolic.cc.o: In function `NNGetOpHandle':\r\n13:19:26  c_api_symbolic.cc:(.text+0x236): relocation truncated to fit: R_X86_64_REX_GOTPCRELX against symbol `std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4' defined in .bss section in /usr/lib64/libstdc++.so.6\r\n13:19:26  c_api_symbolic.cc:(.text+0x24b): relocation truncated to fit: R_X86_64_GOTPCREL against symbol `__pthread_key_create@@GLIBC_2.2.5' defined in .text section in /lib64/libpthread.so.0\r\n13:19:26  c_api_symbolic.cc:(.text+0x28d): relocation truncated to fit: R_X86_64_REX_GOTPCRELX against symbol `std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4' defined in .bss section in /usr/lib64/libstdc++.so.6\r\n13:19:26  CMakeFiles/nnvm.dir/3rdparty/tvm/nnvm/src/c_api/c_api_symbolic.cc.o: In function `NNSymbolCreateVariable':\r\n13:19:26  c_api_symbolic.cc:(.text+0x388): relocation truncated to fit: R_X86_64_GOTPCREL against symbol `__pthread_key_create@@GLIBC_2.2.5' defined in .text section in /lib64/libpthread.so.0\r\n13:19:26  c_api_symbolic.cc:(.text+0x3eb): relocation truncated to fit: R_X86_64_GOTPCREL against symbol `__pthread_key_create@@GLIBC_2.2.5' defined in .text section in /lib64/libpthread.so.0\r\n13:19:26  c_api_symbolic.cc:(.text+0x4c7): relocation truncated to fit: R_X86_64_REX_GOTPCRELX against symbol `std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4' defined in .bss section in /usr/lib64/libstdc++.so.6\r\n13:19:26  c_api_symbolic.cc:(.text+0x573): relocation truncated to fit: R_X86_64_GOTPCREL against symbol `__pthread_key_create@@GLIBC_2.2.5' defined in .text section in /lib64/libpthread.so.0\r\n13:19:26  c_api_symbolic.cc:(.text+0x5bd): relocation truncated to fit: R_X86_64_REX_GOTPCRELX against symbol `std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4' defined in .bss section in /usr/lib64/libstdc++.so.6\r\n13:19:26  CMakeFiles/nnvm.dir/3rdparty/tvm/nnvm/src/c_api/c_api_symbolic.cc.o: In function `NNSymbolGetOutput':\r\n13:19:26  c_api_symbolic.cc:(.text+0x6c3): additional relocation overflows omitted from the output\r\n13:19:26  libmxnet.so: PC-relative offset overflow in PLT entry for `_ZN5mxnet2op8mxnet_op6KernelINS0_16ElemwiseBinaryOp15MissingLValueOpINS1_19backward_grad_tunedINS0_10mshadow_op4signEEELi1EEEN7mshadow3cpuEE11LaunchTunedIS8_NSA_4half6half_tEJPSF_SG_EEEvPNSA_6StreamISB_EEmDpT1_'\r\n13:19:26  collect2: error: ld returned 1 exit status\r\n```\r\n\r\n@szha @leezu FYI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18854", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18854/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18854/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18854/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18854", "id": 672299986, "node_id": "MDU6SXNzdWU2NzIyOTk5ODY=", "number": 18854, "title": "Default CPU allocator no longer multiple of 64 bytes", "user": {"login": "kpuatamazon", "id": 56725192, "node_id": "MDQ6VXNlcjU2NzI1MTky", "avatar_url": "https://avatars0.githubusercontent.com/u/56725192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpuatamazon", "html_url": "https://github.com/kpuatamazon", "followers_url": "https://api.github.com/users/kpuatamazon/followers", "following_url": "https://api.github.com/users/kpuatamazon/following{/other_user}", "gists_url": "https://api.github.com/users/kpuatamazon/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpuatamazon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpuatamazon/subscriptions", "organizations_url": "https://api.github.com/users/kpuatamazon/orgs", "repos_url": "https://api.github.com/users/kpuatamazon/repos", "events_url": "https://api.github.com/users/kpuatamazon/events{/privacy}", "received_events_url": "https://api.github.com/users/kpuatamazon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 764928544, "node_id": "MDU6TGFiZWw3NjQ5Mjg1NDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Memory", "name": "Memory", "color": "fbca04", "default": false, "description": null}, {"id": 2199050551, "node_id": "MDU6TGFiZWwyMTk5MDUwNTUx", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/good%20first%20issue%20for%20c++%20developer", "name": "good first issue for c++ developer", "color": "aecfef", "default": false, "description": "Issues that new C++ developers in the community can help."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-03T19:41:59Z", "updated_at": "2020-08-17T09:27:51Z", "closed_at": "2020-08-17T09:27:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n\r\nCPUs perform best when tensors are allocated at a multiple of 64 bytes.  The reason is that AVX512 instructions operate on 64 bytes at a time and memory access is more efficient when memory is aligned.  \r\n\r\nThis code intends to align to a multiple of 64 bytes:\r\nhttps://github.com/apache/incubator-mxnet/blob/4bb82245ee5fcbfd32da6461f7b0770ae3c2d9b6/src/storage/cpu_device_storage.h#L54-L56\r\n\r\nHowever, the above code pedantically only controls overall alignment of memory blocks, not the storage managers that divvy them up. Commit 3ef00b8840c05c49118705f6fd9663ebb951f3a1 broke 64-byte alignment in the default storage manager.  \r\n\r\n## To Reproduce\r\n1. Add the line\r\n```C++\r\n  CHECK_EQ(reinterpret_cast<intptr_t>(handle->dptr) % 64, 0);\r\n```\r\nhere: https://github.com/apache/incubator-mxnet/blob/4bb82245ee5fcbfd32da6461f7b0770ae3c2d9b6/src/storage/storage.cc#L205\r\n2. Compile MXNet including MKLDNN (otherwise 16-byte alignment is allowed though in my opinion it shouldn't be, since compilers can still vectorize without MKLDNN).  \r\n3. Use MXNet to compute something (and be sure to print it out to actually force things to happen).  Do this often enough and you'll get errors from the above check.  \r\n\r\nNote that doing the same on 2abf0b8c2b3361c73c9dfdeabdb8a88278b693d0 works successfully without error. \r\n\r\ncc @andrei5055 @pengzhao-intel ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18849", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18849/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18849/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18849/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18849", "id": 672181783, "node_id": "MDU6SXNzdWU2NzIxODE3ODM=", "number": 18849, "title": "contextvar dependency for MXNet nightly build", "user": {"login": "eric-haibin-lin", "id": 5545640, "node_id": "MDQ6VXNlcjU1NDU2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5545640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-haibin-lin", "html_url": "https://github.com/eric-haibin-lin", "followers_url": "https://api.github.com/users/eric-haibin-lin/followers", "following_url": "https://api.github.com/users/eric-haibin-lin/following{/other_user}", "gists_url": "https://api.github.com/users/eric-haibin-lin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-haibin-lin/subscriptions", "organizations_url": "https://api.github.com/users/eric-haibin-lin/orgs", "repos_url": "https://api.github.com/users/eric-haibin-lin/repos", "events_url": "https://api.github.com/users/eric-haibin-lin/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-haibin-lin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 286739971, "node_id": "MDU6TGFiZWwyODY3Mzk5NzE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Installation", "name": "Installation", "color": "fbca04", "default": false, "description": null}, {"id": 786012490, "node_id": "MDU6TGFiZWw3ODYwMTI0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/needs%20triage", "name": "needs triage", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-03T16:04:27Z", "updated_at": "2020-08-03T23:09:49Z", "closed_at": "2020-08-03T23:09:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When installing the mxnet nightly build, it does not install the contextvars dependency automatically via pip. \r\n```\r\nubuntu@ip-172-31-42-138:~$ pip3 install https://repo.mxnet.io/dist/python/cpu/mxnet-2.0.0b20200801-py2.py3-none-manylinux2014_x86_64.whl --user\r\nCollecting mxnet==2.0.0b20200801\r\n  Using cached https://repo.mxnet.io/dist/python/cpu/mxnet-2.0.0b20200801-py2.py3-none-manylinux2014_x86_64.whl (51.8 MB)\r\nRequirement already satisfied: requests<3,>=2.20.0 in ./.local/lib/python3.6/site-packages (from mxnet==2.0.0b20200801) (2.24.0)\r\nRequirement already satisfied: numpy<2.0.0,>1.16.0 in ./.local/lib/python3.6/site-packages (from mxnet==2.0.0b20200801) (1.19.0)\r\nRequirement already satisfied: graphviz<0.9.0,>=0.8.1 in ./.local/lib/python3.6/site-packages (from mxnet==2.0.0b20200801) (0.8.4)\r\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.20.0->mxnet==2.0.0b20200801) (1.24.3)\r\nRequirement already satisfied: chardet<4,>=3.0.2 in /usr/lib/python3/dist-packages (from requests<3,>=2.20.0->mxnet==2.0.0b20200801) (3.0.4)\r\nRequirement already satisfied: certifi>=2017.4.17 in /usr/lib/python3/dist-packages (from requests<3,>=2.20.0->mxnet==2.0.0b20200801) (2018.1.18)\r\nRequirement already satisfied: idna<3,>=2.5 in /usr/lib/python3/dist-packages (from requests<3,>=2.20.0->mxnet==2.0.0b20200801) (2.6)\r\nInstalling collected packages: mxnet\r\npySuccessfully installed mxnet-2.0.0b20200801\r\nWARNING: You are using pip version 20.1.1; however, version 20.2 is available.\r\nYou should consider upgrading via the '/usr/bin/python3 -m pip install --upgrade pip' command.\r\nubuntu@ip-172-31-42-138:~$ python3\r\nPython 3.6.9 (default, Jul 17 2020, 12:50:27)\r\n[GCC 8.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import mxnet\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/mxnet/__init__.py\", line 23, in <module>\r\n    from .context import Context, current_context, cpu, gpu, cpu_pinned\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/mxnet/context.py\", line 18, in <module>\r\n    import contextvars\r\nModuleNotFoundError: No module named 'contextvars'\r\n>>>\r\nKeyboardInterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18843", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18843/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18843/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18843/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18843", "id": 671713764, "node_id": "MDU6SXNzdWU2NzE3MTM3NjQ=", "number": 18843, "title": "casting Gluon block doesn't work for export", "user": {"login": "szha", "id": 2626883, "node_id": "MDQ6VXNlcjI2MjY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2626883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szha", "html_url": "https://github.com/szha", "followers_url": "https://api.github.com/users/szha/followers", "following_url": "https://api.github.com/users/szha/following{/other_user}", "gists_url": "https://api.github.com/users/szha/gists{/gist_id}", "starred_url": "https://api.github.com/users/szha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szha/subscriptions", "organizations_url": "https://api.github.com/users/szha/orgs", "repos_url": "https://api.github.com/users/szha/repos", "events_url": "https://api.github.com/users/szha/events{/privacy}", "received_events_url": "https://api.github.com/users/szha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708228884, "node_id": "MDU6TGFiZWw3MDgyMjg4ODQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Gluon", "name": "Gluon", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-02T23:45:22Z", "updated_at": "2020-08-04T21:14:44Z", "closed_at": "2020-08-04T21:11:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\ncasting Gluon block doesn't work for export. the exported data type remains the same as before the cast.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport mxnet as mx\r\n\r\nnet_fp32 = mx.gluon.model_zoo.vision.resnet34_v2(pretrained=False)\r\nnet_fp32.initialize()\r\nnet_fp32(mx.nd.zeros((1,3,224,224)))\r\nnet_fp32.cast('float64')\r\nnet_fp32.hybridize()\r\ndata = mx.nd.zeros((1,3,224,224), dtype='float64')\r\nnet_fp32(data)\r\nsym_file, params_file = net_fp32.export('test', 0)\r\n\r\nsm = mx.sym.load(sym_file)\r\ninputs = mx.sym.var('data', dtype='float64')\r\nnet_fp64 = mx.gluon.SymbolBlock(sm, inputs)\r\nnet_fp64.load_parameters(params_file)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18840", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18840/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18840/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18840/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18840", "id": 671542750, "node_id": "MDU6SXNzdWU2NzE1NDI3NTA=", "number": 18840, "title": "MacOS nightly build broken ", "user": {"login": "eric-haibin-lin", "id": 5545640, "node_id": "MDQ6VXNlcjU1NDU2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5545640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-haibin-lin", "html_url": "https://github.com/eric-haibin-lin", "followers_url": "https://api.github.com/users/eric-haibin-lin/followers", "following_url": "https://api.github.com/users/eric-haibin-lin/following{/other_user}", "gists_url": "https://api.github.com/users/eric-haibin-lin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-haibin-lin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-haibin-lin/subscriptions", "organizations_url": "https://api.github.com/users/eric-haibin-lin/orgs", "repos_url": "https://api.github.com/users/eric-haibin-lin/repos", "events_url": "https://api.github.com/users/eric-haibin-lin/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-haibin-lin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707555796, "node_id": "MDU6TGFiZWw3MDc1NTU3OTY=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/OSX", "name": "OSX", "color": "c5def5", "default": false, "description": null}, {"id": 777345030, "node_id": "MDU6TGFiZWw3NzczNDUwMzA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/pip", "name": "pip", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-02T05:44:04Z", "updated_at": "2020-08-03T20:11:07Z", "closed_at": "2020-08-03T20:11:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\npip install https://repo.mxnet.io/dist/python/cpu/mxnet-2.0.0b20200802-py3-none-macosx_10_14_x86_64.whl --user \r\n\r\n```\r\n\r\n`import mxnet as mx` probably caused by https://github.com/apache/incubator-mxnet/pull/18836  or #18796 \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/haibilin/.local/lib/python3.7/site-packages/mxnet/__init__.py\", line 23, in <module>\r\n    from .context import Context, current_context, cpu, gpu, cpu_pinned\r\n  File \"/Users/haibilin/.local/lib/python3.7/site-packages/mxnet/context.py\", line 20, in <module>\r\n    from .base import _LIB\r\n  File \"/Users/haibilin/.local/lib/python3.7/site-packages/mxnet/base.py\", line 288, in <module>\r\n    _LIB = _load_lib()\r\n  File \"/Users/haibilin/.local/lib/python3.7/site-packages/mxnet/base.py\", line 279, in _load_lib\r\n    lib = ctypes.CDLL(lib_path[0], ctypes.RTLD_LOCAL)\r\n  File \"/opt/miniconda3/lib/python3.7/ctypes/__init__.py\", line 364, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: dlopen(/Users/haibilin/.local/lib/python3.7/site-packages/mxnet/libmxnet.dylib, 6): Library not loaded: /Users/travis/build/dmlc/mxnet-distro/mxnet-build/staticdeps/lib/libprotobuf.15.dylib\r\n  Referenced from: /Users/haibilin/.local/lib/python3.7/site-packages/mxnet/libmxnet.dylib\r\n  Reason: image not found\r\n```\r\n\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n----------Python Info----------\r\nVersion      : 3.7.4\r\nCompiler     : Clang 4.0.1 (tags/RELEASE_401/final)\r\nBuild        : ('default', 'Aug 13 2019 15:17:50')\r\nArch         : ('64bit', '')\r\n------------Pip Info-----------\r\nVersion      : 19.3.1\r\nDirectory    : /opt/miniconda3/lib/python3.7/site-packages/pip\r\n----------MXNet Info-----------\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Darwin-18.7.0-x86_64-i386-64bit\r\nsystem       : Darwin\r\nnode         : a483e7be4c92.ant.amazon.com\r\nrelease      : 18.7.0\r\nversion      : Darwin Kernel Version 18.7.0: Mon Feb 10 21:08:45 PST 2020; root:xnu-4903.278.28~1/RELEASE_X86_64\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : i386\r\nb'machdep.cpu.brand_string: Intel(R) Core(TM) i7-8569U CPU @ 2.80GHz'\r\nb'machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C'\r\nb'machdep.cpu.leaf7_features: RDWRFSGS TSC_THREAD_OFFSET SGX BMI1 AVX2 SMEP BMI2 ERMS INVPCID FPU_CSDS MPX RDSEED ADX SMAP CLFSOPT IPT MDCLEAR TSXFA IBRS STIBP L1DF SSBD'\r\nb'machdep.cpu.extfeatures: SYSCALL XD 1GBPAGE EM64T LAHF LZCNT PREFETCHW RDTSCP TSCI'\r\n----------Network Test----------\r\n```\r\n@leezu  FYI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18838", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18838/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18838/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18838/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18838", "id": 671416239, "node_id": "MDU6SXNzdWU2NzE0MTYyMzk=", "number": 18838, "title": "double scroll on website", "user": {"login": "szha", "id": 2626883, "node_id": "MDQ6VXNlcjI2MjY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2626883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szha", "html_url": "https://github.com/szha", "followers_url": "https://api.github.com/users/szha/followers", "following_url": "https://api.github.com/users/szha/following{/other_user}", "gists_url": "https://api.github.com/users/szha/gists{/gist_id}", "starred_url": "https://api.github.com/users/szha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szha/subscriptions", "organizations_url": "https://api.github.com/users/szha/orgs", "repos_url": "https://api.github.com/users/szha/repos", "events_url": "https://api.github.com/users/szha/events{/privacy}", "received_events_url": "https://api.github.com/users/szha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-02T02:32:14Z", "updated_at": "2020-08-03T19:30:14Z", "closed_at": "2020-08-03T19:30:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\non the website, two scrolls appear which prevents keyboard scrolling.\r\n\r\n![image](https://user-images.githubusercontent.com/2626883/89114087-aed47f00-d42d-11ea-89d3-fcd3cd06dd39.png)\r\n\r\n\r\n## To Reproduce\r\n\r\nUse Chrome Version 84.0.4147.105 (Official Build) (64-bit) on OSX and visit\r\nhttps://mxnet.apache.org/api/python/docs/tutorials/packages/gluon/image/mnist.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18826", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18826/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18826/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18826/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18826", "id": 668349571, "node_id": "MDU6SXNzdWU2NjgzNDk1NzE=", "number": 18826, "title": "[Activation] GELU precision mismatch between MXNet and PyTorch in the CPU version", "user": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 978567321, "node_id": "MDU6TGFiZWw5Nzg1NjczMjE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/MKLDNN", "name": "MKLDNN", "color": "fbca04", "default": false, "description": ""}, {"id": 786012490, "node_id": "MDU6TGFiZWw3ODYwMTI0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/needs%20triage", "name": "needs triage", "color": "d93f0b", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-30T04:02:56Z", "updated_at": "2020-08-07T05:41:49Z", "closed_at": "2020-08-07T05:41:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The CPU version of `mx.npx.leaky_relu(x, act_type='gelu')` has different precision from PyTorch.\r\n\r\nThe minimal reproducible example:\r\n\r\n```python\r\nimport mxnet as mx\r\nmx.npx.set_np()\r\na = mx.np.random.normal(0, 1, (10000,)) \r\nb = mx.npx.leaky_relu(a, act_type='gelu')\r\nc = a * 0.5 * (1.0 + mx.npx.erf(a / math.sqrt(2.0)))\r\n\r\nimport torch\r\na_torch = torch.from_numpy(a.asnumpy()).cuda() \r\nb_torch = torch.nn.functional.gelu(a_torch)\r\nassert_allclose(b_torch.cpu().numpy(), c.asnumpy(), 1E-4, 1E-4)  \r\nassert_allclose(b_torch.cpu().numpy(), b.asnumpy(), 1E-4, 1E-4)  \r\n```\r\n\r\nThe GPU version has no issue:\r\n```python\r\nimport mxnet as mx\r\nmx.npx.set_np()\r\na = mx.np.random.normal(0, 1, (10000,), ctx=mx.gpu()) \r\nb = mx.npx.leaky_relu(a, act_type='gelu')\r\nc = a * 0.5 * (1.0 + mx.npx.erf(a / math.sqrt(2.0)))\r\n\r\nimport torch\r\na_torch = torch.from_numpy(a.asnumpy()).cuda() \r\nb_torch = torch.nn.functional.gelu(a_torch)\r\nassert_allclose(b_torch.cpu().numpy(), c.asnumpy(), 1E-4, 1E-4)  \r\nassert_allclose(b_torch.cpu().numpy(), b.asnumpy(), 1E-4, 1E-4)  \r\n```\r\n\r\n@pengzhao-intel @ciyongch \r\n\r\nError:\r\n```\r\n<ipython-input-48-6f3377797f65> in <module>\r\n      9 b_torch = torch.nn.functional.gelu(a_torch)\r\n     10 assert_allclose(b_torch.cpu().numpy(), c.asnumpy(), 1E-4, 1E-4)\r\n---> 11 assert_allclose(b_torch.cpu().numpy(), b.asnumpy(), 1E-4, 1E-4)\r\n\r\n~/.local/lib/python3.6/site-packages/numpy/testing/_private/utils.py in assert_allclose(actual, desired, rtol, atol, equal_nan, err_msg, verbose)\r\n   1526     header = 'Not equal to tolerance rtol=%g, atol=%g' % (rtol, atol)\r\n   1527     assert_array_compare(compare, actual, desired, err_msg=str(err_msg),\r\n-> 1528                          verbose=verbose, header=header, equal_nan=equal_nan)\r\n   1529 \r\n   1530 \r\n\r\n~/.local/lib/python3.6/site-packages/numpy/testing/_private/utils.py in assert_array_compare(comparison, x, y, err_msg, verbose, header, precision, equal_nan, equal_inf)\r\n    838                                 verbose=verbose, header=header,\r\n    839                                 names=('x', 'y'), precision=precision)\r\n--> 840             raise AssertionError(msg)\r\n    841     except ValueError:\r\n    842         import traceback\r\n\r\nAssertionError: \r\nNot equal to tolerance rtol=0.0001, atol=0.0001\r\n\r\nMismatched elements: 2258 / 10000 (22.6%)\r\nMax absolute difference: 0.0004735\r\nMax relative difference: 0.8255573\r\n x: array([ 0.684651,  0.508604, -0.165598, ...,  1.706593,  0.288036,\r\n        1.006167], dtype=float32)\r\n y: array([ 0.68455 ,  0.508554, -0.165716, ...,  1.706508,  0.288026,\r\n        1.005966], dtype=float32)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18775", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18775/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18775/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18775/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18775", "id": 664236416, "node_id": "MDU6SXNzdWU2NjQyMzY0MTY=", "number": 18775, "title": "Failures seen in unittest test_gluon_probability{_v1,_v2}.py::test_gluon_cauchy_{v1,}", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 721783588, "node_id": "MDU6TGFiZWw3MjE3ODM1ODg=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Flaky", "name": "Flaky", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "xidulu", "id": 26022201, "node_id": "MDQ6VXNlcjI2MDIyMjAx", "avatar_url": "https://avatars2.githubusercontent.com/u/26022201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xidulu", "html_url": "https://github.com/xidulu", "followers_url": "https://api.github.com/users/xidulu/followers", "following_url": "https://api.github.com/users/xidulu/following{/other_user}", "gists_url": "https://api.github.com/users/xidulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xidulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xidulu/subscriptions", "organizations_url": "https://api.github.com/users/xidulu/orgs", "repos_url": "https://api.github.com/users/xidulu/repos", "events_url": "https://api.github.com/users/xidulu/events{/privacy}", "received_events_url": "https://api.github.com/users/xidulu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xidulu", "id": 26022201, "node_id": "MDQ6VXNlcjI2MDIyMjAx", "avatar_url": "https://avatars2.githubusercontent.com/u/26022201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xidulu", "html_url": "https://github.com/xidulu", "followers_url": "https://api.github.com/users/xidulu/followers", "following_url": "https://api.github.com/users/xidulu/following{/other_user}", "gists_url": "https://api.github.com/users/xidulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xidulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xidulu/subscriptions", "organizations_url": "https://api.github.com/users/xidulu/orgs", "repos_url": "https://api.github.com/users/xidulu/repos", "events_url": "https://api.github.com/users/xidulu/events{/privacy}", "received_events_url": "https://api.github.com/users/xidulu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-23T06:37:10Z", "updated_at": "2020-07-25T00:22:34Z", "closed_at": "2020-07-25T00:22:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThis was observed during the development of https://github.com/apache/incubator-mxnet/pull/18424.  I've developed a fix which I've added via commit https://github.com/apache/incubator-mxnet/pull/18424/commits/29286c3f7e3b3e7f0836877c2644b95820182322.  I observed that the failures occurred when the sample was near one or both ends of the unit normal distribution for the samples data input.  Repro commands provided below.\r\n\r\n## Occurrences\r\nMXNET_TEST_SEED=783333771  pytest --verbose -s tests/python/unittest/test_gluon_probability_v2.py::test_gluon_cauchy\r\nMXNET_TEST_SEED=1447693795 pytest --verbose -s tests/python/unittest/test_gluon_probability_v2.py::test_gluon_cauchy\r\nMXNET_TEST_SEED=952434416 pytest --verbose -s tests/python/unittest/test_gluon_probability_v1.py::test_gluon_cauchy_v1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18765", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18765/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18765/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18765/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18765", "id": 662795229, "node_id": "MDU6SXNzdWU2NjI3OTUyMjk=", "number": 18765, "title": "Race-condition and crash with SymbolBlock on GPU", "user": {"login": "chinakook", "id": 5417628, "node_id": "MDQ6VXNlcjU0MTc2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5417628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinakook", "html_url": "https://github.com/chinakook", "followers_url": "https://api.github.com/users/chinakook/followers", "following_url": "https://api.github.com/users/chinakook/following{/other_user}", "gists_url": "https://api.github.com/users/chinakook/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinakook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinakook/subscriptions", "organizations_url": "https://api.github.com/users/chinakook/orgs", "repos_url": "https://api.github.com/users/chinakook/repos", "events_url": "https://api.github.com/users/chinakook/events{/privacy}", "received_events_url": "https://api.github.com/users/chinakook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1975500438, "node_id": "MDU6TGFiZWwxOTc1NTAwNDM4", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v1.x", "name": "v1.x", "color": "f9d0c4", "default": false, "description": "Targeting v1.x branch"}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-21T09:25:22Z", "updated_at": "2020-07-22T06:35:16Z", "closed_at": "2020-07-22T06:35:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nSevere Bug with nn.SymbolBlock when ctx=mx.gpu(0), cpu is OK.\r\n\r\n### Error Message\r\nmalloc or free or Segmentation fault error may appears randomly\r\n```\r\n/home/xxxxxx/anaconda3/envs/solo/lib/python3.7/site-packages/mxnet/gluon/block.py:1517: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:\r\n        data: None\r\n  input_sym_arg_type = in_param.infer_type()[0]\r\n[17:15:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\r\n[(1, 256, 56, 56), (1, 512, 28, 28), (1, 1024, 14, 14), (1, 2048, 7, 7)]\r\nmalloc(): unsorted double linked list corrupted\r\n[1]    87116 abort (core dumped)  python symbolblockbug.py\r\n\r\n```\r\n\r\n```\r\n/home/xxxxxx/anaconda3/envs/solo/lib/python3.7/site-packages/mxnet/gluon/block.py:1517: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:\r\n        data: None\r\n  input_sym_arg_type = in_param.infer_type()[0]\r\n[17:21:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\r\n[(1, 256, 56, 56), (1, 512, 28, 28), (1, 1024, 14, 14), (1, 2048, 7, 7)]\r\n\r\nSegmentation fault: 11\r\n\r\n```\r\n\r\n```\r\n/home/xxxxxx/anaconda3/envs/solo/lib/python3.7/site-packages/mxnet/gluon/block.py:1517: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:\r\n        data: None\r\n  input_sym_arg_type = in_param.infer_type()[0]\r\n[17:23:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\r\n[(1, 256, 56, 56), (1, 512, 28, 28), (1, 1024, 14, 14), (1, 2048, 7, 7)]\r\nmalloc_consolidate(): invalid chunk size\r\n[1]    87701 abort (core dumped)  python symbolblockbug.py\r\n\r\n```\r\n## To Reproduce\r\n```python\r\nimport mxnet as mx\r\nfrom mxnet import gluon\r\nfrom mxnet.gluon import nn\r\nimport gluoncv as gcv\r\nclass NetEncoder(nn.SymbolBlock):\r\n    def __init__(self, **kwargs):\r\n        base_network = gcv.model_zoo.resnet50_v1(pretrained=False)\r\n        outputs = ['stage1_activation2', 'stage2_activation3', 'stage3_activation5',\r\n                            'stage4_activation2']\r\n\r\n        inputs, outputs, params = gcv.nn.feature._parse_network(\r\n            base_network, outputs, ['data'], pretrained=False, ctx=mx.cpu(), **kwargs)\r\n        super(NetEncoder, self).__init__(outputs, inputs, params=params)\r\n    \r\nclass Foo(nn.HybridBlock):\r\n    def __init__(self):\r\n        super(Foo, self).__init__()\r\n        self.features = NetEncoder()\r\n\r\n    def hybrid_forward(self, F, x):\r\n        y = self.features(x)\r\n        return y\r\n\r\na = mx.nd.random.uniform(shape=(1,3,224,224), ctx=mx.gpu(0))\r\n\r\nf = Foo()\r\nf.collect_params().initialize()\r\nf.hybridize()\r\nf.collect_params().reset_ctx(mx.gpu(0))\r\nb = f(a)\r\nprint([x.shape for x in b])\r\n```\r\n\r\n\r\n\r\n## Environment\r\n1. mxnet_cu102-1.7.0b20200719-py2.py3-none-manylinux2014_x86_64\r\n2. mxnet 2.0 master in April", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18755", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18755/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18755/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18755/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18755", "id": 660313521, "node_id": "MDU6SXNzdWU2NjAzMTM1MjE=", "number": 18755, "title": "test_gluon_probability_v2.py::test_gluon_kl and test_gluon_probability_v1.py::test_gluon_kl_v1 are flaky", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 721783588, "node_id": "MDU6TGFiZWw3MjE3ODM1ODg=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Flaky", "name": "Flaky", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-18T18:52:20Z", "updated_at": "2020-07-19T21:15:28Z", "closed_at": "2020-07-19T21:15:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nI encountered a failure in one of my CI runs, and have supplied a fix in PR https://github.com/apache/incubator-mxnet/pull/18694 in commit https://github.com/apache/incubator-mxnet/pull/18694/commits/3e05edb3ff4e166831779d438c4537550986b2a0.\r\n\r\nThe fix was developed by printing out the distribution params and noting that the failures occurred when the parameters of the Geometric distribution (being selected from a [0,1] uniform distribution) were in the range 1e-4 -> 1e-3.  The fix was to select the parameters from np.random.uniform(size=shape, low=1e-3).  This is consistent with approaches taken elsewhere in the tests, where the parameters of the binomial distribution are taken from np.random.uniform(low=0.1, size=shape).\r\n\r\nAfter the fix, both tests passed 3000 trials without error.  Tagging test creator @xidulu.\r\n\r\n## Repro with\r\nMXNET_TEST_SEED=1633210984 pytest --verbose -s tests/python/unittest/test_gluon_probability_v2.py::test_gluon_kl\r\nMXNET_TEST_SEED=702820740 pytest --verbose -s tests/python/unittest/test_gluon_probability_v1.py::test_gluon_kl_v1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18754", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18754/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18754/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18754/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18754", "id": 659986738, "node_id": "MDU6SXNzdWU2NTk5ODY3Mzg=", "number": 18754, "title": "Python 3.8 wheel appears to be slightly corrupted", "user": {"login": "davidhewitt", "id": 1939362, "node_id": "MDQ6VXNlcjE5MzkzNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1939362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidhewitt", "html_url": "https://github.com/davidhewitt", "followers_url": "https://api.github.com/users/davidhewitt/followers", "following_url": "https://api.github.com/users/davidhewitt/following{/other_user}", "gists_url": "https://api.github.com/users/davidhewitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidhewitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidhewitt/subscriptions", "organizations_url": "https://api.github.com/users/davidhewitt/orgs", "repos_url": "https://api.github.com/users/davidhewitt/repos", "events_url": "https://api.github.com/users/davidhewitt/events{/privacy}", "received_events_url": "https://api.github.com/users/davidhewitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707583550, "node_id": "MDU6TGFiZWw3MDc1ODM1NTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Build", "name": "Build", "color": "fbca04", "default": false, "description": null}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-18T07:50:04Z", "updated_at": "2020-07-23T18:21:35Z", "closed_at": "2020-07-23T18:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI'm attempting to debug a crash observed by a user of PyO3 (https://github.com/PyO3/pyo3/issues/1044) which occurs when `mxnet` is imported.\r\n\r\nAttempting to use `gdb` (via `rust-gdb` wrapper script) suggests that `mxnet.so` is partially corrupted. `readelf -a` also emits some warnings. Both are pasted below.\r\n\r\n### Error Message\r\n\r\nErrors seen from `readelf -a path/to/libmxnet.so | grep -i warning`:\r\n\r\n```\r\nreadelf: Warning: Section 0 has an out of range sh_link value of 1179403647\r\nreadelf: Warning: Section 1 has an out of range sh_link value of 2381354254\r\nreadelf: Warning: Section 2 has an out of range sh_link value of 3825592164\r\nreadelf: Warning: Section 3 has an out of range sh_link value of 149717832\r\nreadelf: Warning: Section 3 has an out of range sh_info value of 3171257160\r\nreadelf: Warning: Section 4 has an out of range sh_link value of 2781517102\r\nreadelf: Warning: Section 4 has an out of range sh_info value of 3221398224\r\nreadelf: Warning: Section 5 has an out of range sh_link value of 222961676\r\nreadelf: Warning: Section 5 has an out of range sh_info value of 2840782096\r\nreadelf: Warning: Section 6 has an out of range sh_link value of 536469743\r\nreadelf: Warning: Section 7 has an out of range sh_link value of 548555395\r\nreadelf: Warning: Section 7 has an out of range sh_info value of 564797439\r\nreadelf: Warning: [ 0]: Unexpected value (65794) in info field.\r\nreadelf: Warning: Size of section 1 is larger than the entire file!\r\nreadelf: Warning: [ 3]: Expected link to another section in info fieldreadelf: Warning: [ 4]: Expected link to another section in info fieldreadelf: Warning: [\r\n 5]: Expected link to another section in info fieldreadelf: Warning: Size of section 6 is larger than the entire file!\r\nreadelf: Warning: [ 7]: Expected link to another section in info fieldreadelf: Error: no .dynamic section in the dynamic segment\r\n```\r\n\r\nErrors seen from `gdb`:\r\n\r\n```\r\nBFD: warning: /home/david/dev/pyo3-scratch/.direnv/python-3.8.2/lib/python3.8/site-packages/mxnet/libmxnet.so has a corrupt section with a size (ff20fb37000000\r\n08) larger than the file size\r\nBFD: warning: /home/david/dev/pyo3-scratch/.direnv/python-3.8.2/lib/python3.8/site-packages/mxnet/libmxnet.so has a corrupt section with a size (ff20fb37000000\r\n08) larger than the file size\r\nError while mapping shared library sections:\r\n`/home/david/dev/pyo3-scratch/.direnv/python-3.8.2/lib/python3.8/site-packages/mxnet/libmxnet.so': not in executable format: file format not recognized\r\n```\r\n\r\n## To Reproduce\r\nRun `readelf -a path/to/libmxnet.so | grep -i warning`.\r\n\r\nAlternatively request and I can write tutorial how to install & run the linked Rust code under `rust-gdb`.\r\n\r\n## Environment\r\n\r\nI'm using Ubuntu 20.04 on WSL2. According to pip, `mxnet` was installed via the wheel `mxnet-1.6.0-py2.py3-none-any.whl`.\r\n\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n----------Python Info----------\r\nVersion      : 3.8.2\r\nCompiler     : GCC 9.3.0\r\nBuild        : ('default', 'Apr 27 2020 15:53:34')\r\nArch         : ('64bit', 'ELF')\r\n------------Pip Info-----------\r\nVersion      : 20.0.2\r\nDirectory    : /home/david/dev/pyo3-scratch/.direnv/python-3.8.2/lib/python3.8/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 1.6.0\r\nDirectory    : /home/david/dev/pyo3-scratch/.direnv/python-3.8.2/lib/python3.8/site-packages/mxnet\r\nNum GPUs     : 0\r\nCommit Hash   : 6eec9da55c5096079355d1f1a5fa58dcf35d6752\r\n----------System Info----------\r\nPlatform     : Linux-4.19.104-microsoft-standard-x86_64-with-glibc2.29\r\nsystem       : Linux\r\nnode         : david-laptop\r\nrelease      : 4.19.104-microsoft-standard\r\nversion      : #1 SMP Wed Feb 19 06:37:35 UTC 2020\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : x86_64\r\nArchitecture:                    x86_64\r\nCPU op-mode(s):                  32-bit, 64-bit\r\nByte Order:                      Little Endian\r\nAddress sizes:                   39 bits physical, 48 bits virtual\r\nCPU(s):                          12\r\nOn-line CPU(s) list:             0-11\r\nThread(s) per core:              2\r\nCore(s) per socket:              6\r\nSocket(s):                       1\r\nVendor ID:                       GenuineIntel\r\nCPU family:                      6\r\nModel:                           165\r\nModel name:                      Intel(R) Core(TM) i7-10750H CPU @ 2.60GHz\r\nStepping:                        2\r\nCPU MHz:                         2592.007\r\nBogoMIPS:                        5184.01\r\nHypervisor vendor:               Microsoft\r\nVirtualization type:             full\r\nL1d cache:                       192 KiB\r\nL1i cache:                       192 KiB\r\nL2 cache:                        1.5 MiB\r\nL3 cache:                        12 MiB\r\nVulnerability Itlb multihit:     KVM: Vulnerable\r\nVulnerability L1tf:              Not affected\r\nVulnerability Mds:               Not affected\r\nVulnerability Meltdown:          Not affected\r\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\r\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\r\nVulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling\r\nVulnerability Tsx async abort:   Not affected\r\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdt\r\n                                 scp lm constant_tsc rep_good nopl xtopology cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f\r\n                                 16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced fsgsbase bmi1 avx2 smep bmi2\r\n                                  erms invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves flush_l1d arch_capabilities\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0236 sec, LOAD: 0.7427 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0020 sec, LOAD: 0.6102 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0815 sec, LOAD: 0.5328 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0247 sec, LOAD: 0.0889 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0254 sec, LOAD: 0.2696 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0943 sec, LOAD: 0.7244 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0236 sec, LOAD: 0.5804 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.02408432960510254 sec.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18747", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18747/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18747/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18747/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18747", "id": 659725282, "node_id": "MDU6SXNzdWU2NTk3MjUyODI=", "number": 18747, "title": "unittests using @retry decorator can segfault if they fail", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 721783490, "node_id": "MDU6TGFiZWw3MjE3ODM0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Test", "name": "Test", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T23:16:40Z", "updated_at": "2020-07-19T21:15:23Z", "closed_at": "2020-07-19T21:15:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThis is a problem I ran into in the development of PR https://github.com/apache/incubator-mxnet/pull/18694, and **I have include a fix** in commit https://github.com/apache/incubator-mxnet/pull/18694/commits/95bfe3a642f07ffd0c78d965b7f590cee75a44fd.\r\n\r\nAn example invocation of a test that is decorated with @retry(3) and that fails on its first attempt (succeeding on its 2nd) is:\r\n```\r\nMXNET_TEST_SEED=757747955 pytest --verbose -s --log-cli-level=DEBUG tests/python/gpu/test_operator_gpu.py::test_np_mixedType_unary_funcs[float16-4-rint-None--5.0-5.0]\r\n```\r\nI've posted the error message showing the segfault below.\r\n\r\nThe problem seems to center on the fact that the current retry() implementation copies any seen exception to a variable `err` that it retains as it pursues further retry attempts of the test.  I believe that when the err object is finally garbage collected, the segfault is triggered (does the exception have stack trace pointers that are now stale?).  The fix is to not retain the exception past the iteration that generated it.\r\n\r\nIn coming up with the above explanation, I determined that retaining only the exception string also avoids the segfault and so would work as a fix.\r\nSo before:\r\n```\r\nerr = e\r\n...\r\nraise err\r\n```\r\ncould become:\r\n```\r\nerr_msg = str(e)\r\n...\r\nraise AssertionError(err_msg)\r\n```\r\nI prefer to stick with the initial fix in the PR, which doesn't regenerate the exception object.\r\n\r\n### Error Message\r\n```\r\n# MXNET_TEST_SEED=757747955 pytest --verbose -s --log-cli-level=DEBUG tests/python/gpu/test_operator_gpu.py::test_np_mixedType_unary_funcs[float16-4-rint-None--5\r\n.0-5.0]\r\nWARNING:root:*** test-level seed set: all \"@with_seed()\" tests run deterministically ***\r\n==================================================================================== test session starts ====================================================================================\r\nplatform linux -- Python 3.6.9, pytest-5.3.5, py-1.9.0, pluggy-0.13.1 -- /usr/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /opt/mxnet, inifile: pytest.ini\r\nplugins: flaky-3.6.1, cov-2.8.1, env-0.6.2, forked-1.2.0, repeat-0.8.0, timeout-1.3.4, xdist-1.31.0\r\ntimeout: 1200.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollecting ... INFO:root:NumPy-shape semantics has been activated in your code. This is required for creating and manipulating scalar and zero-size tensors, which were not supported in MXN$\r\nt before, as in the official NumPy library. Please DO NOT manually deactivate this semantics while using `mxnet.numpy` and `mxnet.numpy_extension` modules.\r\n\r\n------------------------------------------------------------------------------------ live log collection -----------------------------------------------------------------------------------$\r\nINFO     root:util.py:85 NumPy-shape semantics has been activated in your code. This is required for creating and manipulating scalar and zero-size tensors, which were not supported in MXN$\r\nt before, as in the official NumPy library. Please DO NOT manually deactivate this semantics while using `mxnet.numpy` and `mxnet.numpy_extension` modules.\r\n(2, 5)\r\ncollected 1 item\r\n\r\ntests/python/gpu/test_operator_gpu.py::test_np_mixedType_unary_funcs[float16-4-rint-None--5.0-5.0] [INFO] Setting module np/mx/python random seeds, use MXNET_MODULE_SEED=548212641 to repro$\r\nuce.\r\nINFO:common:Setting module np/mx/python random seeds, use MXNET_MODULE_SEED=548212641 to reproduce.\r\n\r\n-------------------------------------------------------------------------------------- live log setup --------------------------------------------------------------------------------------$\r\nINFO     common:common.py:289 Setting module np/mx/python random seeds, use MXNET_MODULE_SEED=548212641 to reproduce.\r\n[WARNING] *** test-level seed set: all \"@with_seed()\" tests run deterministically ***\r\nWARNING:common:*** test-level seed set: all \"@with_seed()\" tests run deterministically ***\r\nWARNING  common:common.py:296 *** test-level seed set: all \"@with_seed()\" tests run deterministically ***\r\nDEBUG:root:np/mx/python random seeds are set to 757747955, use MXNET_TEST_SEED=757747955 to reproduce.\r\nDEBUG    root:conftest.py:193 np/mx/python random seeds are set to 757747955, use MXNET_TEST_SEED=757747955 to reproduce.\r\n[INFO] Setting test np/mx/python random seeds, use MXNET_TEST_SEED=757747955 to reproduce.\r\nINFO:common:Setting test np/mx/python random seeds, use MXNET_TEST_SEED=757747955 to reproduce.\r\n\r\n--------------------------------------------------------------------------------------- live log call ------------------------------------------------------------------------------[0/18716]\r\nINFO     common:common.py:221 Setting test np/mx/python random seeds, use MXNET_TEST_SEED=757747955 to reproduce.\r\nrint float16 (2, 2, 2, 2)\r\n\r\n*** Maximum errors for vector of size 16:  rtol=0.001, atol=1e-05\r\n\r\n  1: Error 99864.382812  Location of error: (0, 1, 1, 1), a=-1.00000000, b=-0.00000000\r\nrint float16 (3, 3, 3, 2)\r\nrint float16 (1, 0, 2)\r\nPASSEDFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x00007f393667f740 (most recent call first):\r\n  File \"/opt/mxnet/python/mxnet/ndarray/ndarray.py\", line 2570 in asnumpy\r\n  File \"/opt/mxnet/python/mxnet/numpy/multiarray.py\", line 1251 in __repr__\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_io/saferepr.py\", line 56 in repr_instance\r\n  File \"/usr/lib/python3.6/reprlib.py\", line 65 in repr1\r\n  File \"/usr/lib/python3.6/reprlib.py\", line 55 in repr\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_io/saferepr.py\", line 47 in repr\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_io/saferepr.py\", line 82 in saferepr\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py\", line 689 in repr_args\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py\", line 780 in repr_traceback_entry\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py\", line 821 in repr_traceback\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py\", line 877 in repr_excinfo\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/_code/code.py\", line 631 in getrepr\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/nodes.py\", line 326 in _repr_failure_py\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/reports.py\", line 296 in from_item_and_call\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/runner.py\", line 253 in pytest_runtest_makereport\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/usr/local/lib/python3.6/dist-packages/flaky/flaky_pytest_plugin.py\", line 132 in call_and_report\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/runner.py\", line 100 in runtestprotocol\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/runner.py\", line 84 in pytest_runtest_protocol\r\n  File \"/usr/local/lib/python3.6/dist-packages/flaky/flaky_pytest_plugin.py\", line 92 in pytest_runtest_protocol\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 271 in pytest_runtestloop\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 247 in _main\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 197 in wrap_session\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 240 in pytest_cmdline_main\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 87 in <lambda>\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/usr/local/lib/python3.6/dist-packages/_pytest/config/__init__.py\", line 93 in main\r\n  File \"/usr/local/bin/pytest\", line 8 in <module>\r\nSegmentation fault (core dumped)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18746", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18746/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18746/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18746/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18746", "id": 659653029, "node_id": "MDU6SXNzdWU2NTk2NTMwMjk=", "number": 18746, "title": "Numpy Op fallback does not work for functions without return value", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-17T21:29:47Z", "updated_at": "2020-08-01T00:06:21Z", "closed_at": "2020-08-01T00:06:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/apache/incubator-mxnet/blob/cec86add654fccda2f2112d4487738854e7663ca/python/mxnet/numpy/multiarray.py#L332-L365\r\n\r\nWill fail in line 359 if `out is None`.\r\n\r\nExample function is `np.save`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18737", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18737/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18737/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18737/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18737", "id": 658503628, "node_id": "MDU6SXNzdWU2NTg1MDM2Mjg=", "number": 18737, "title": "test_operator_gpu.py::test_batchnorm_with_type inadvertently retests cases, misses others", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 721783490, "node_id": "MDU6TGFiZWw3MjE3ODM0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Test", "name": "Test", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T19:39:56Z", "updated_at": "2020-07-19T21:15:13Z", "closed_at": "2020-07-19T21:15:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nNotice the test case duplication in the code:\r\nhttps://github.com/apache/incubator-mxnet/blob/2abf0b8c2b3361c73c9dfdeabdb8a88278b693d0/tests/python/gpu/test_operator_gpu.py#L406-L424\r\n\r\nThis is one of the issues fixed by PR https://github.com/apache/incubator-mxnet/pull/18694 in commit https://github.com/apache/incubator-mxnet/pull/18694/commits/4e81d14fb05d48e1eb53e861fb0065b68347f4c0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18736", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18736/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18736/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18736/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18736", "id": 658453919, "node_id": "MDU6SXNzdWU2NTg0NTM5MTk=", "number": 18736, "title": "unittest/test_numpy_interoperability.py inadvertently puts additional unittests on a fixed seed", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 721783490, "node_id": "MDU6TGFiZWw3MjE3ODM0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Test", "name": "Test", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T18:37:09Z", "updated_at": "2020-07-19T21:15:06Z", "closed_at": "2020-07-19T21:15:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThe following code in test_numpy_interoperability.py sets a numpy seed unilaterally, thereby making deterministic the random numbers used in subsequent unittests: https://github.com/apache/incubator-mxnet/blob/2abf0b8c2b3361c73c9dfdeabdb8a88278b693d0/tests/python/unittest/test_numpy_interoperability.py#L515-L528\r\n\r\nAlso, since the code is executed on import of the file, this sets the seed in advance of the with_seed() mechanism, thereby forcing determinism on a large number of other modules that import this test file, including test_operator_gpu.py.\r\nWe clearly want to get back to our usual mode of running tests non-deterministically with different random data each time, to ensure a robust framework.  Thus, having noticed this issue during the development of my current PR https://github.com/apache/incubator-mxnet/pull/18694, I have included a fixing commit https://github.com/apache/incubator-mxnet/pull/18694/commits/6567b61d219fa984d5c1b8c3987990ca04b73575 .\r\n\r\n@vexilligera and @reminisce, could you review my fix and comment, or suggest an alternative fix via another PR?  For example, you may want to evaluate whether the test is able to support random data of some appropriate distribution.  Also, you may want to evaluate whether performing all the set-up functions of this test module lazily on first use, rather than as done currently at file import, is generally a better practice.  Thanks.\r\n### Error Message\r\n\r\nI noticed this problem when different runs of the CI would flag the same failing test with the same rnd seed. [Output not retained]\r\n\r\n## What have you tried to solve it?\r\n\r\n1.  See referenced PR and fixing commit\r\n2.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18731", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18731/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18731/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18731/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18731", "id": 657781784, "node_id": "MDU6SXNzdWU2NTc3ODE3ODQ=", "number": 18731, "title": "test_numpy_default_dtype::test_default_float_dtype is not flagging true_divide op issues", "user": {"login": "DickJC123", "id": 1703397, "node_id": "MDQ6VXNlcjE3MDMzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DickJC123", "html_url": "https://github.com/DickJC123", "followers_url": "https://api.github.com/users/DickJC123/followers", "following_url": "https://api.github.com/users/DickJC123/following{/other_user}", "gists_url": "https://api.github.com/users/DickJC123/gists{/gist_id}", "starred_url": "https://api.github.com/users/DickJC123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DickJC123/subscriptions", "organizations_url": "https://api.github.com/users/DickJC123/orgs", "repos_url": "https://api.github.com/users/DickJC123/repos", "events_url": "https://api.github.com/users/DickJC123/events{/privacy}", "received_events_url": "https://api.github.com/users/DickJC123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 721783490, "node_id": "MDU6TGFiZWw3MjE3ODM0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Test", "name": "Test", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T02:00:27Z", "updated_at": "2020-07-19T21:14:49Z", "closed_at": "2020-07-19T21:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\ntest_default_float_dtype tests (among other things) the true_divide op's ability to divide an int array by an int scalar to produce either a float32 or float64 output array based on the setting of is_np_default_dtype.  However, the test overlooks a backend error that is created during the test, which can surface during a test teardown of a future test.  This is not only confusing, but also points to issues with the true_divide op itself.\r\n\r\nThe simplest way to expose this issue is with:\r\n```\r\nMXNET_ENGINE_TYPE=NaiveEngine pytest --verbose -s tests/python/unittest/test_numpy_default_dtype.py::test_default_float_dtype\r\n```\r\nAlternatively, one can add the line `mxnet.nd.waitall()` to the end of test_default_float_dtype, at which point the MXNET_ENGINE_TYPE setting is not needed.  In both cases, the error is:\r\n```\r\n...\r\nE           mxnet.base.MXNetError: Traceback (most recent call last):\r\nE             File \"include/mxnet/././tensor_blob.h\", line 256\r\nE           MXNetError: Check failed: mshadow: :DataType<DType>::kFlag == type_flag_: TBlob.get_with_shape: data type do not match specified type.Expected: double v.s. given float\r\n\r\npython/mxnet/_ffi/_ctypes/function.py:115: MXNetError\r\n```\r\nSo basically the test incorrectly feels that the output is of the expected type, when in fact the backend engine's execution of the function fails (with a type mismatch).  I ran into this problem when my in-development PR https://github.com/apache/incubator-mxnet/pull/18694 began to include a mxnet.nd.waitall() call between unittests for enhanced test isolation.\r\n\r\nIn order to make progress with my PR, I investigated the issues with true_divide, and have a fixing commit https://github.com/apache/incubator-mxnet/pull/18694/commits/65f16d8638747aa0e2a4bfe911ddeef675c56b9c as part of that PR.  I'd appreciate a review of these changes, or an alternate fix proposed.  Thanks @haojin2 , @reminisce or @JiangZhaoh . \r\n\r\nBasically, the fix addresses two issues:\r\n\r\nFirst, the output dtype of true_divide is a based on a parameter set by the main python thread and accessed within C++ by mxnet::common::GetDefaultDtype().  While this can be either float32 or float64, the backend implementation has a hard-coded cast of the output tensor pointer to float:\r\nhttps://github.com/apache/incubator-mxnet/blob/e2366e9102e6862416bf998af52baaa5e9c0a31b/src/operator/numpy/np_true_divide-inl.h#L66-L72\r\n\r\nAlso, before performing the above execution, the worker thread performs the check: https://github.com/apache/incubator-mxnet/blob/e2366e9102e6862416bf998af52baaa5e9c0a31b/src/operator/numpy/np_true_divide-inl.h#L62-L65\r\n\r\nI think it's totally appropriate for the InferType function to call mxnet::common::GetDefaultDtype(), as this is performed by the main python thread and synchronized to changes in the default dtype.  However, once the output type is determined, I don't think it's appropriate for the backend thread to once-again check the actual output type against the current value of GetDefaultDtype().  That would be a race.  The backend thread should merely execute the op based on the output TBlob's dtype, assuming it's supported.\r\n\r\nBoth issues are addressed by the commit referenced above.\r\n\r\nSee \"To Reproduce\" below for a small program that should pass on any proposed alternative fix.\r\n\r\nFinally, I'll acknowledge that the implementation of true_divide(int_array, int_array), potentially with broadcast, has similar issues, but the implementation is trickier and best left to our numpy module developers.\r\n\r\n \r\n### Error Message\r\nsee above.\r\n\r\n## To Reproduce\r\n```\r\nimport mxnet as mx\r\nimport numpy as _np\r\nfrom mxnet import numpy as np\r\n\r\n@mx.use_np_default_dtype\r\ndef test_true_divide(a,b, synchronize=False):\r\n    x = np.true_divide(a,b)\r\n    if synchronize:\r\n        # Make sure the backend, which presently calls mxnet::common::GetDefaultDtype(), is done.\r\n        mx.nd.waitall()\r\n    return x\r\n\r\n\r\n# divide int array with int scalar to produce float64 array\r\nfor synchronize in [True, False]:\r\n    out = test_true_divide(mx.nd.array([1,], dtype='int'), 9, synchronize=synchronize)\r\n    print('true_divide output value (of type {}) = {:.15f}'.format(out.dtype, out.asnumpy()[0]))\r\n```\r\n### Steps to reproduce\r\n\r\n\r\n1. copy-paste above code to a file test_true_divide.py\r\n2. python test_true_divide.py\r\n\r\n## What have you tried to solve it?\r\n\r\n1. Commit included in referenced in-development PR.\r\n2.\r\n\r\n## Environment\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18730", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18730/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18730/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18730/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18730", "id": 657773987, "node_id": "MDU6SXNzdWU2NTc3NzM5ODc=", "number": 18730, "title": "executor_manager doc shows up blank in master", "user": {"login": "aaronmarkham", "id": 5974205, "node_id": "MDQ6VXNlcjU5NzQyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5974205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronmarkham", "html_url": "https://github.com/aaronmarkham", "followers_url": "https://api.github.com/users/aaronmarkham/followers", "following_url": "https://api.github.com/users/aaronmarkham/following{/other_user}", "gists_url": "https://api.github.com/users/aaronmarkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronmarkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronmarkham/subscriptions", "organizations_url": "https://api.github.com/users/aaronmarkham/orgs", "repos_url": "https://api.github.com/users/aaronmarkham/repos", "events_url": "https://api.github.com/users/aaronmarkham/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronmarkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T01:38:39Z", "updated_at": "2020-07-28T18:48:06Z", "closed_at": "2020-07-28T18:48:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThis is blank: https://mxnet.apache.org/api/python/docs/api/mxnet/executor_manager/index.html\r\nLooks like it was (re)moved in master. Does this doc node need to be removed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18727", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18727/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18727/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18727/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18727", "id": 657769034, "node_id": "MDU6SXNzdWU2NTc3NjkwMzQ=", "number": 18727, "title": "module doc missing", "user": {"login": "aaronmarkham", "id": 5974205, "node_id": "MDQ6VXNlcjU5NzQyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5974205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronmarkham", "html_url": "https://github.com/aaronmarkham", "followers_url": "https://api.github.com/users/aaronmarkham/followers", "following_url": "https://api.github.com/users/aaronmarkham/following{/other_user}", "gists_url": "https://api.github.com/users/aaronmarkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronmarkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronmarkham/subscriptions", "organizations_url": "https://api.github.com/users/aaronmarkham/orgs", "repos_url": "https://api.github.com/users/aaronmarkham/repos", "events_url": "https://api.github.com/users/aaronmarkham/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronmarkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-16T01:25:36Z", "updated_at": "2020-07-28T18:34:22Z", "closed_at": "2020-07-28T18:34:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThis is blank: https://mxnet.apache.org/api/python/docs/api/module/index.html\r\n\r\nI believe this was deprecated. Should this node be removed or should it point to older versions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18725", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18725/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18725/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18725/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18725", "id": 657763691, "node_id": "MDU6SXNzdWU2NTc3NjM2OTE=", "number": 18725, "title": "metric.py change between branches - missing docs in master", "user": {"login": "aaronmarkham", "id": 5974205, "node_id": "MDQ6VXNlcjU5NzQyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5974205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronmarkham", "html_url": "https://github.com/aaronmarkham", "followers_url": "https://api.github.com/users/aaronmarkham/followers", "following_url": "https://api.github.com/users/aaronmarkham/following{/other_user}", "gists_url": "https://api.github.com/users/aaronmarkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronmarkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronmarkham/subscriptions", "organizations_url": "https://api.github.com/users/aaronmarkham/orgs", "repos_url": "https://api.github.com/users/aaronmarkham/repos", "events_url": "https://api.github.com/users/aaronmarkham/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronmarkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T01:11:33Z", "updated_at": "2020-07-17T17:28:35Z", "closed_at": "2020-07-17T17:28:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nLooks like master and 1.x have different implementations of metric and this has broken the docs in the process.\r\n\r\nThis is blank:\r\nhttps://mxnet.apache.org/api/python/docs/api/metric/index.html\r\n\r\nMetric is under gluon in master:\r\nhttps://github.com/apache/incubator-mxnet/blob/master/python/mxnet/gluon/metric.py\r\n\r\n1.6 has it: \r\nhttps://mxnet.apache.org/versions/1.6/api/python/docs/api/metric/index.html\r\n\r\n1.5 has it:\r\nhttps://mxnet.apache.org/versions/1.5.0/api/python/metric/metric.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18720", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18720/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18720/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18720/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18720", "id": 657670504, "node_id": "MDU6SXNzdWU2NTc2NzA1MDQ=", "number": 18720, "title": "test_inter_methods_in_augmenter timeout", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 721783588, "node_id": "MDU6TGFiZWw3MjE3ODM1ODg=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Flaky", "name": "Flaky", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T21:26:18Z", "updated_at": "2020-07-15T21:26:41Z", "closed_at": "2020-07-15T21:26:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://jenkins.mxnet-ci.amazon-ml.com/blue/rest/organizations/jenkins/pipelines/mxnet-validation/pipelines/unix-cpu/branches/PR-18319/runs/36/nodes/350/steps/489/log/?start=0\r\n\r\n```\r\n[2020-07-15T19:49:55.751Z] ______________________ test_inter_methods_in_augmenter[9] ______________________\r\n[2020-07-15T19:49:55.751Z] [gw2] linux -- Python 3.6.9 /usr/bin/python3\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z] inter_method = 9\r\n[2020-07-15T19:49:55.751Z] tmpdir = local('/tmp/pytest-of-jenkins_slave/pytest-0/popen-gw2/test_inter_methods_in_augmente1')\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z]     @pytest.mark.parametrize('inter_method', [0,1,2,3,4,9,10])\r\n[2020-07-15T19:49:55.751Z]     def test_inter_methods_in_augmenter(inter_method, tmpdir):\r\n[2020-07-15T19:49:55.751Z]         path = str(tmpdir)\r\n[2020-07-15T19:49:55.751Z] >       get_cifar10(path)\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z] tests/python/unittest/test_io.py:97: \r\n[2020-07-15T19:49:55.751Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[2020-07-15T19:49:55.751Z] python/mxnet/test_utils.py:1728: in get_cifar10\r\n[2020-07-15T19:49:55.751Z]     verify_ssl=False)\r\n[2020-07-15T19:49:55.751Z] python/mxnet/gluon/utils.py:330: in download\r\n[2020-07-15T19:49:55.751Z]     for chunk in r.iter_content(chunk_size=1024):\r\n[2020-07-15T19:49:55.751Z] /usr/local/lib/python3.6/dist-packages/requests/models.py:751: in generate\r\n[2020-07-15T19:49:55.751Z]     for chunk in self.raw.stream(chunk_size, decode_content=True):\r\n[2020-07-15T19:49:55.751Z] /usr/local/lib/python3.6/dist-packages/urllib3/response.py:576: in stream\r\n[2020-07-15T19:49:55.751Z]     data = self.read(amt=amt, decode_content=decode_content)\r\n[2020-07-15T19:49:55.751Z] /usr/local/lib/python3.6/dist-packages/urllib3/response.py:519: in read\r\n[2020-07-15T19:49:55.751Z]     data = self._fp.read(amt) if not fp_closed else b\"\"\r\n[2020-07-15T19:49:55.751Z] /usr/lib/python3.6/http/client.py:459: in read\r\n[2020-07-15T19:49:55.751Z]     n = self.readinto(b)\r\n[2020-07-15T19:49:55.751Z] /usr/lib/python3.6/http/client.py:503: in readinto\r\n[2020-07-15T19:49:55.751Z]     n = self.fp.readinto(b)\r\n[2020-07-15T19:49:55.751Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z] self = <socket.SocketIO object at 0x7f843f715438>\r\n[2020-07-15T19:49:55.751Z] b = <memory at 0x7f862e920288>\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z]     def readinto(self, b):\r\n[2020-07-15T19:49:55.751Z]         \"\"\"Read up to len(b) bytes into the writable buffer *b* and return\r\n[2020-07-15T19:49:55.751Z]         the number of bytes read.  If the socket is non-blocking and no bytes\r\n[2020-07-15T19:49:55.751Z]         are available, None is returned.\r\n[2020-07-15T19:49:55.751Z]     \r\n[2020-07-15T19:49:55.751Z]         If *b* is non-empty, a 0 return value indicates that the connection\r\n[2020-07-15T19:49:55.751Z]         was shutdown at the other end.\r\n[2020-07-15T19:49:55.751Z]         \"\"\"\r\n[2020-07-15T19:49:55.751Z]         self._checkClosed()\r\n[2020-07-15T19:49:55.751Z]         self._checkReadable()\r\n[2020-07-15T19:49:55.751Z]         if self._timeout_occurred:\r\n[2020-07-15T19:49:55.751Z]             raise OSError(\"cannot read from timed out object\")\r\n[2020-07-15T19:49:55.751Z]         while True:\r\n[2020-07-15T19:49:55.751Z]             try:\r\n[2020-07-15T19:49:55.751Z] >               return self._sock.recv_into(b)\r\n[2020-07-15T19:49:55.751Z] E               Failed: Timeout >1200.0s\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z] /usr/lib/python3.6/socket.py:586: Failed\r\n[2020-07-15T19:49:55.751Z] ---------------------------- Captured stderr setup -----------------------------\r\n[2020-07-15T19:49:55.751Z] DEBUG:root:np/mx/python random seeds are set to 1197329715, use MXNET_TEST_SEED=1197329715 to reproduce.\r\n[2020-07-15T19:49:55.751Z] ------------------------------ Captured log setup ------------------------------\r\n[2020-07-15T19:49:55.751Z] DEBUG    root:conftest.py:193 np/mx/python random seeds are set to 1197329715, use MXNET_TEST_SEED=1197329715 to reproduce.\r\n[2020-07-15T19:49:55.751Z] ----------------------------- Captured stdout call -----------------------------\r\n[2020-07-15T19:49:55.751Z] Downloading /tmp/pytest-of-jenkins_slave/pytest-0/popen-gw2/test_inter_methods_in_augmente1/cifar10.zip from http://data.mxnet.io/mxnet/data/cifar10.zip...\r\n[2020-07-15T19:49:55.751Z] ----------------------------- Captured stderr call -----------------------------\r\n[2020-07-15T19:49:55.751Z] DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): data.mxnet.io:80\r\n[2020-07-15T19:49:55.751Z] DEBUG:urllib3.connectionpool:http://data.mxnet.io:80 \"GET /mxnet/data/cifar10.zip HTTP/1.1\" 301 275\r\n[2020-07-15T19:49:55.751Z] DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): data.mxnet.io.s3-website-us-west-1.amazonaws.com:80\r\n[2020-07-15T19:49:55.751Z] DEBUG:urllib3.connectionpool:http://data.mxnet.io.s3-website-us-west-1.amazonaws.com:80 \"GET /mxnet/data/cifar10.zip HTTP/1.1\" 200 132571290\r\n[2020-07-15T19:49:55.751Z] \r\n[2020-07-15T19:49:55.751Z] ~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (140214861137664) ~~~~~~~~~~~~~~~~~~~~~\r\n[2020-07-15T19:49:55.751Z]   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 285, in _perform_spawn\r\n[2020-07-15T19:49:55.751Z]     reply.run()\r\n[2020-07-15T19:49:55.751Z]   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 220, in run\r\n[2020-07-15T19:49:55.751Z]     self._result = func(*args, **kwargs)\r\n[2020-07-15T19:49:55.751Z]   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 967, in _thread_receiver\r\n[2020-07-15T19:49:55.751Z]     msg = Message.from_io(io)\r\n[2020-07-15T19:49:55.751Z]   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 432, in from_io\r\n[2020-07-15T19:49:55.751Z]     header = io.read(9)  # type 1, channel 4, payload 4\r\n[2020-07-15T19:49:55.751Z]   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 400, in read\r\n[2020-07-15T19:49:55.751Z]     data = self._read(numbytes - len(buf))\r\n[2020-07-15T19:49:55.751Z] ------------------------------ Captured log call -------------------------------\r\n[2020-07-15T19:49:55.751Z] DEBUG    urllib3.connectionpool:connectionpool.py:230 Starting new HTTP connection (1): data.mxnet.io:80\r\n[2020-07-15T19:49:55.751Z] DEBUG    urllib3.connectionpool:connectionpool.py:442 http://data.mxnet.io:80 \"GET /mxnet/data/cifar10.zip HTTP/1.1\" 301 275\r\n[2020-07-15T19:49:55.751Z] DEBUG    urllib3.connectionpool:connectionpool.py:230 Starting new HTTP connection (1): data.mxnet.io.s3-website-us-west-1.amazonaws.com:80\r\n[2020-07-15T19:49:55.751Z] DEBUG    urllib3.connectionpool:connectionpool.py:442 http://data.mxnet.io.s3-website-us-west-1.amazonaws.com:80 \"GET /mxnet/data/cifar10.zip HTTP/1.1\" 200 132571290\r\n[2020-07-15T19:49:55.751Z] --------------------------- Captured stderr teardown ---------------------------\r\n[2020-07-15T19:49:55.751Z] INFO:root:np/mx/python random seeds are set to 1197329715, use MXNET_TEST_SEED=1197329715 to reproduce.\r\n[2020-07-15T19:49:55.751Z] ---------------------------- Captured log teardown -----------------------------\r\n[2020-07-15T19:49:55.751Z] INFO     root:conftest.py:210 np/mx/python random seeds are set to 1197329715, use MXNET_TEST_SEED=1197329715 to reproduce.\r\n[2020-07-15T19:49:55.751Z] =============================== warnings summary ===============================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18719", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18719/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18719/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18719/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18719", "id": 657651029, "node_id": "MDU6SXNzdWU2NTc2NTEwMjk=", "number": 18719, "title": "[website] beta.mxnet.io redirects affecting discoverability", "user": {"login": "ChaiBapchya", "id": 10992635, "node_id": "MDQ6VXNlcjEwOTkyNjM1", "avatar_url": "https://avatars3.githubusercontent.com/u/10992635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChaiBapchya", "html_url": "https://github.com/ChaiBapchya", "followers_url": "https://api.github.com/users/ChaiBapchya/followers", "following_url": "https://api.github.com/users/ChaiBapchya/following{/other_user}", "gists_url": "https://api.github.com/users/ChaiBapchya/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChaiBapchya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChaiBapchya/subscriptions", "organizations_url": "https://api.github.com/users/ChaiBapchya/orgs", "repos_url": "https://api.github.com/users/ChaiBapchya/repos", "events_url": "https://api.github.com/users/ChaiBapchya/events{/privacy}", "received_events_url": "https://api.github.com/users/ChaiBapchya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-15T20:57:55Z", "updated_at": "2020-07-22T01:07:40Z", "closed_at": "2020-07-22T01:07:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n#### Search \r\n- Searching mxnet grid generator, mxnet grid sampler, mxnet bilinear sampler, mxnet batchnorm on google\r\n- all 3 searches give beta.mxnet.io links in first 2 results\r\n- Clicking on all of them routes to mxnet.apche.org landing page and not the actual page of the API.\r\n\r\n![Screen Shot 2020-07-15 at 1 53 23 PM](https://user-images.githubusercontent.com/10992635/87595004-b7ddf600-c6a2-11ea-932e-ce6c31a31519.png)\r\n![Screen Shot 2020-07-15 at 1 53 34 PM](https://user-images.githubusercontent.com/10992635/87595012-b9a7b980-c6a2-11ea-86fe-8d5a7dea6ece.png)\r\n![Screen Shot 2020-07-15 at 1 53 49 PM](https://user-images.githubusercontent.com/10992635/87595015-bad8e680-c6a2-11ea-9581-8221f299ba86.png)\r\n![Screen Shot 2020-07-15 at 1 54 16 PM](https://user-images.githubusercontent.com/10992635/87595016-bb717d00-c6a2-11ea-9d18-e20ac50295a6.png)\r\n\r\n## Suggestions\r\n1. Prevent indexing of beta.mxnet.io & instead have official website APIs getting indexed\r\n2. Redirect beta.mxnet.io links to actual working links [instead of landing page]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18710", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18710/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18710/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18710/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18710", "id": 656547837, "node_id": "MDU6SXNzdWU2NTY1NDc4Mzc=", "number": 18710, "title": "[Numpy] Backward of softmax, logsoftmax failed on empty ndarray", "user": {"login": "bgawrych", "id": 59644968, "node_id": "MDQ6VXNlcjU5NjQ0OTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/59644968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgawrych", "html_url": "https://github.com/bgawrych", "followers_url": "https://api.github.com/users/bgawrych/followers", "following_url": "https://api.github.com/users/bgawrych/following{/other_user}", "gists_url": "https://api.github.com/users/bgawrych/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgawrych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgawrych/subscriptions", "organizations_url": "https://api.github.com/users/bgawrych/orgs", "repos_url": "https://api.github.com/users/bgawrych/repos", "events_url": "https://api.github.com/users/bgawrych/events{/privacy}", "received_events_url": "https://api.github.com/users/bgawrych/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T11:41:28Z", "updated_at": "2020-08-07T09:27:37Z", "closed_at": "2020-08-07T09:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nDuring backporting change #18602 to branch v1.x, CI detected problem similar to original issue (#18569).\r\nBackward propagation of softmax and log_softmax causes MXNetError: Check failed: delay_alloc: \r\n\r\n### Error Message\r\n```\r\nTraceback (most recent call last):\r\n  File \"r.py\", line 10, in <module>\r\n    a.grad.wait_to_read()\r\n  File \"/home/wihajster/Desktop/incubator-mxnet/python/mxnet/ndarray/ndarray.py\", line 2371, in wait_to_read\r\n    check_call(_LIB.MXNDArrayWaitToRead(self.handle))\r\n  File \"/home/wihajster/Desktop/incubator-mxnet/python/mxnet/base.py\", line 246, in check_call\r\n    raise get_last_ffi_error()\r\nmxnet.base.MXNetError: Traceback (most recent call last):\r\n  [bt] (9) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)>::operator()(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&) const+0xa6) [0x7f6d58049c9a]\r\n  [bt] (8) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(std::_Function_handler<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&), void (*)(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)>::_M_invoke(std::_Any_data const&, nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)+0x91) [0x7f6d56fc8a7d]\r\n  [bt] (7) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(+0xbe611e0) [0x7f6d609281e0]\r\n  [bt] (6) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::MKLDNNRun(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)>, nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)+0xad) [0x7f6d580426f3]\r\n  [bt] (5) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)>::operator()(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&) const+0xa6) [0x7f6d58049c9a]\r\n  [bt] (4) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(std::_Function_handler<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&), void (*)(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)>::_M_invoke(std::_Any_data const&, nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)+0x91) [0x7f6d56fc8a7d]\r\n  [bt] (3) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::op::MKLDNNLogSoftmaxBackward(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)+0x1b6) [0x7f6d580b7d37]\r\n  [bt] (2) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::NDArray::GetMKLDNNData() const+0x43b) [0x7f6d61188a0f]\r\n  [bt] (1) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(mxnet::NDArray::Chunk::SetMKLMem(mxnet::TShape const&, int)+0x3c4) [0x7f6d61186dbe]\r\n  [bt] (0) /home/wihajster/Desktop/incubator-mxnet/python/mxnet/../../lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x4d) [0x7f6d569b2acf]\r\n  File \"src/ndarray/ndarray.cc\", line 580\r\nMXNetError: Check failed: delay_alloc:\r\n```\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport mxnet as mx\r\nfrom mxnet import npx\r\nnpx.set_np()\r\na = mx.np.array([]).reshape(2, 1, 0)\r\na.attach_grad()\r\n\r\nwith mx.autograd.record():\r\n    b = mx.npx.log_softmax(a)\r\n    b.backward()\r\n    a.grad.wait_to_read()\r\n```\r\n\r\nPR is on its way \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18702", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18702/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18702/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18702/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18702", "id": 656251637, "node_id": "MDU6SXNzdWU2NTYyNTE2Mzc=", "number": 18702, "title": "ImageListDataset", "user": {"login": "ranjitkathiriya", "id": 12687608, "node_id": "MDQ6VXNlcjEyNjg3NjA4", "avatar_url": "https://avatars3.githubusercontent.com/u/12687608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranjitkathiriya", "html_url": "https://github.com/ranjitkathiriya", "followers_url": "https://api.github.com/users/ranjitkathiriya/followers", "following_url": "https://api.github.com/users/ranjitkathiriya/following{/other_user}", "gists_url": "https://api.github.com/users/ranjitkathiriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranjitkathiriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranjitkathiriya/subscriptions", "organizations_url": "https://api.github.com/users/ranjitkathiriya/orgs", "repos_url": "https://api.github.com/users/ranjitkathiriya/repos", "events_url": "https://api.github.com/users/ranjitkathiriya/events{/privacy}", "received_events_url": "https://api.github.com/users/ranjitkathiriya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 786012490, "node_id": "MDU6TGFiZWw3ODYwMTI0OTA=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/needs%20triage", "name": "needs triage", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T01:14:40Z", "updated_at": "2020-07-16T02:19:15Z", "closed_at": "2020-07-16T02:19:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \r\n\r\n### (module 'mxnet.gluon.data.vision.datasets' has no attribute 'ImageListDataset'\r\n\r\n\r\n### Steps to reproduce\r\na = mx.gluon.data.vision.datasets.ImageListDataset(root=train_paths, imglist=None, flag=1)\r\n## What have you tried to solve it?\r\n\r\n#18702 \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18698", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18698/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18698/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18698/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18698", "id": 655482534, "node_id": "MDU6SXNzdWU2NTU0ODI1MzQ=", "number": 18698, "title": "missing commands in the instructions for building from source", "user": {"login": "szha", "id": 2626883, "node_id": "MDQ6VXNlcjI2MjY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2626883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szha", "html_url": "https://github.com/szha", "followers_url": "https://api.github.com/users/szha/followers", "following_url": "https://api.github.com/users/szha/following{/other_user}", "gists_url": "https://api.github.com/users/szha/gists{/gist_id}", "starred_url": "https://api.github.com/users/szha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szha/subscriptions", "organizations_url": "https://api.github.com/users/szha/orgs", "repos_url": "https://api.github.com/users/szha/repos", "events_url": "https://api.github.com/users/szha/events{/privacy}", "received_events_url": "https://api.github.com/users/szha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}, {"id": 286739971, "node_id": "MDU6TGFiZWwyODY3Mzk5NzE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Installation", "name": "Installation", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-12T21:46:19Z", "updated_at": "2020-07-13T17:07:11Z", "closed_at": "2020-07-13T16:59:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nAs part of #18487 the build from source instruction no longer includes the commands for building from source. Also, it doesn't document the usage of the cmake configs in https://github.com/apache/incubator-mxnet/tree/master/config", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18695", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18695/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18695/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18695/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18695", "id": 655297749, "node_id": "MDU6SXNzdWU2NTUyOTc3NDk=", "number": 18695, "title": "Transpose only supports up to 6 dimensions", "user": {"login": "JeanKossaifi", "id": 832583, "node_id": "MDQ6VXNlcjgzMjU4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/832583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanKossaifi", "html_url": "https://github.com/JeanKossaifi", "followers_url": "https://api.github.com/users/JeanKossaifi/followers", "following_url": "https://api.github.com/users/JeanKossaifi/following{/other_user}", "gists_url": "https://api.github.com/users/JeanKossaifi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanKossaifi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanKossaifi/subscriptions", "organizations_url": "https://api.github.com/users/JeanKossaifi/orgs", "repos_url": "https://api.github.com/users/JeanKossaifi/repos", "events_url": "https://api.github.com/users/JeanKossaifi/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanKossaifi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2199050551, "node_id": "MDU6TGFiZWwyMTk5MDUwNTUx", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/good%20first%20issue%20for%20c++%20developer", "name": "good first issue for c++ developer", "color": "aecfef", "default": false, "description": "Issues that new C++ developers in the community can help."}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-11T23:30:50Z", "updated_at": "2020-07-16T17:25:03Z", "closed_at": "2020-07-16T17:25:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nTranspose does not currently support tensors with more than 6 dimensions.\r\n\r\n### Error Message\r\n```\r\nE           mxnet.base.MXNetError: Traceback (most recent call last):\r\nE             File \"src/operator/tensor/./matrix_op-inl.h\", line 459\r\nE           MXNetError: Check failed: shp.ndim() <= 6 (7 vs. 6) : Transpose support at most 6 dimensions\r\n```\r\n\r\n## To Reproduce\r\nApply transpose to a higher-order tensor.\r\n\r\n## Environment\r\nPython 3.7.3\r\nMXNet 2.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18687", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18687/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18687/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18687/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18687", "id": 654624146, "node_id": "MDU6SXNzdWU2NTQ2MjQxNDY=", "number": 18687, "title": "Unit test 'test_npx_batch_norm' failed under UNIX GPU environment", "user": {"login": "AntiZpvoh", "id": 59728467, "node_id": "MDQ6VXNlcjU5NzI4NDY3", "avatar_url": "https://avatars1.githubusercontent.com/u/59728467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AntiZpvoh", "html_url": "https://github.com/AntiZpvoh", "followers_url": "https://api.github.com/users/AntiZpvoh/followers", "following_url": "https://api.github.com/users/AntiZpvoh/following{/other_user}", "gists_url": "https://api.github.com/users/AntiZpvoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/AntiZpvoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AntiZpvoh/subscriptions", "organizations_url": "https://api.github.com/users/AntiZpvoh/orgs", "repos_url": "https://api.github.com/users/AntiZpvoh/repos", "events_url": "https://api.github.com/users/AntiZpvoh/events{/privacy}", "received_events_url": "https://api.github.com/users/AntiZpvoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 721783588, "node_id": "MDU6TGFiZWw3MjE3ODM1ODg=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Flaky", "name": "Flaky", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T08:50:07Z", "updated_at": "2020-07-10T18:59:22Z", "closed_at": "2020-07-10T18:59:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nUnit test 'test_npx_batch_norm' failed under UNIX GPU environment. And this test is in file tests/python/unittest/test_numpy_op.py.\r\n\r\n## Occurrences\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-gpu/detail/master/2099/pipeline/376\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-gpu/detail/PR-18319/30/pipeline\r\n\r\n## What have you tried to solve it?\r\n\r\nretrigger CI [unix-gpu] multiple times.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18685", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18685/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18685/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18685/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18685", "id": 654493820, "node_id": "MDU6SXNzdWU2NTQ0OTM4MjA=", "number": 18685, "title": "mx.symbol.numpy._Symbol.__deepcopy__ logic error", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T04:05:48Z", "updated_at": "2020-07-22T06:31:49Z", "closed_at": "2020-07-22T06:31:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`mx.symbol.numpy._Symbol.__deepcopy__` performs shallow copy instead of deep copy like `mx.symbol.Symbol.__deepcopy__ `.\r\n\r\nProblem:\r\n```\r\n[ins] In [1]: import mxnet as mx\r\n\r\n[ins] In [2]: import copy\r\n\r\n[ins] In [3]: v = mx.sym.Variable('a').as_np_ndarray()\r\n\r\n[ins] In [4]: b = copy.copy(v)\r\n\r\n[ins] In [5]: b._set_attr(name='b')\r\n\r\n[ins] In [6]: v\r\nOut[6]: <_Symbol b>\r\n\r\n[ins] In [7]: b\r\nOut[7]: <_Symbol b>\r\n```\r\n\r\n\r\nExpected:\r\n```\r\n[ins] In [1]: import mxnet as mx\r\n\r\n[ins] In [2]: import copy\r\n\r\n[ins] In [3]: v = mx.sym.Variable('a').as_np_ndarray()\r\n\r\n[ins] In [4]: b = copy.copy(v)\r\n\r\n[ins] In [5]: b._set_attr(name='b')\r\n\r\n[ins] In [6]: v\r\nOut[6]: <_Symbol a>\r\n\r\n[ins] In [7]: b\r\nOut[7]: <_Symbol b>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18681", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18681/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18681/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18681/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18681", "id": 654278740, "node_id": "MDU6SXNzdWU2NTQyNzg3NDA=", "number": 18681, "title": "Infer Shape Fails for empty NDArrays", "user": {"login": "AustinDoolittle", "id": 12602561, "node_id": "MDQ6VXNlcjEyNjAyNTYx", "avatar_url": "https://avatars2.githubusercontent.com/u/12602561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustinDoolittle", "html_url": "https://github.com/AustinDoolittle", "followers_url": "https://api.github.com/users/AustinDoolittle/followers", "following_url": "https://api.github.com/users/AustinDoolittle/following{/other_user}", "gists_url": "https://api.github.com/users/AustinDoolittle/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustinDoolittle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustinDoolittle/subscriptions", "organizations_url": "https://api.github.com/users/AustinDoolittle/orgs", "repos_url": "https://api.github.com/users/AustinDoolittle/repos", "events_url": "https://api.github.com/users/AustinDoolittle/events{/privacy}", "received_events_url": "https://api.github.com/users/AustinDoolittle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-09T18:56:35Z", "updated_at": "2020-07-09T20:33:14Z", "closed_at": "2020-07-09T20:33:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nWhen trying to move a tensor of size 0 to a different context than the context that it is currently on, an \"inferring shapes failed\" error is raised. This occurs for tensors regardless of the number of dimensions they contain. It seems that inferring the shape of an empty NDArray is not currently possible.\r\n\r\n### Error Message\r\n```\r\nTraceback (most recent call last):\r\n  File \"<redacted>/recreate_shape_bug.py\", line 7, in <module>\r\n    new_array = empty_array.as_in_context(mx.cpu())\r\n  File \"<redacted>/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 2144, in as_in_context\r\n    return self.copyto(context)\r\n  File \"<redacted>/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 2093, in copyto\r\n    return _internal._copyto(self, out=hret)\r\n  File \"<string>\", line 25, in _copyto\r\n  File \"<redacted>/python3.6/site-packages/mxnet/_ctypes/ndarray.py\", line 92, in _imperative_invoke\r\n    ctypes.byref(out_stypes)))\r\n  File \"<redacted>/python3.6/site-packages/mxnet/base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [18:43:30] <redacted>/src/imperative/./imperative_utils.h:145: Operator _copyto inferring shapes failed.\r\ninput shapes:\r\n[-1]\r\noutput shapes:\r\n[-1]\r\noperator attributes:\r\n\r\nStack trace:\r\n  [bt] (0) <redacted>/lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x24) [0x7fe5f79ba534]\r\n  [bt] (1) <redacted>/lib/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0x1dd5) [0x7fe5f983c1e5]\r\n  [bt] (2) <redacted>/lib/libmxnet.so(mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x297) [0x7fe5f98300c7]\r\n  [bt] (3) <redacted>/lib/libmxnet.so(MXImperativeInvokeImpl(void*, int, void**, int*, void***, int, char const**, char const**)+0x5e5) [0x7fe5f973c995]\r\n  [bt] (4) <redacted>/lib/libmxnet.so(MXImperativeInvokeEx+0x67) [0x7fe5f973dd27]\r\n  [bt] (5) <redacted>/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(ffi_call_unix64+0x4c) [0x7fe622ba3ef8]\r\n  [bt] (6) <redacted>/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(ffi_call+0x15f) [0x7fe622ba2fff]\r\n  [bt] (7) <redacted>/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(_ctypes_callproc+0x292) [0x7fe622b9ae02]\r\n  [bt] (8) <redacted>/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(+0xa08b) [0x7fe622b9208b]\r\n```\r\n\r\n## To Reproduce\r\nCode to reproduce is as follows\r\n```\r\nimport mxnet as mx\r\n\r\nempty_array = mx.nd.array([], ctx=mx.Context('cpu_shared', 0))\r\nnew_array = empty_array.as_in_context(mx.cpu())\r\n```\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. Run above code as-is \r\n\r\n## What have you tried to solve it?\r\n\r\n1. Attempted with tensors of >1 dimension, but got the same result.\r\n\r\n## Environment\r\nPython: 3.6.10\r\nMXNet: 1.6.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18680", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18680/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18680/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18680/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18680", "id": 654270107, "node_id": "MDU6SXNzdWU2NTQyNzAxMDc=", "number": 18680, "title": "[Doc] Gluon Block/HybridBlock/SymbolBlock appears at the wrong place in the API doc", "user": {"login": "icemelon9", "id": 2696494, "node_id": "MDQ6VXNlcjI2OTY0OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2696494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemelon9", "html_url": "https://github.com/icemelon9", "followers_url": "https://api.github.com/users/icemelon9/followers", "following_url": "https://api.github.com/users/icemelon9/following{/other_user}", "gists_url": "https://api.github.com/users/icemelon9/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemelon9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemelon9/subscriptions", "organizations_url": "https://api.github.com/users/icemelon9/orgs", "repos_url": "https://api.github.com/users/icemelon9/repos", "events_url": "https://api.github.com/users/icemelon9/events{/privacy}", "received_events_url": "https://api.github.com/users/icemelon9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-09T18:40:50Z", "updated_at": "2020-07-11T16:09:52Z", "closed_at": "2020-07-11T16:09:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nGluon Block, HybridBlock, SymbolBlock has an empty doc in the API doc. For example: https://mxnet.apache.org/api/python/docs/api/gluon/block.html\r\n\r\nTheir actual docs appear under `gluon.nn` domain, which IMO is a wrong place for them. For example: https://mxnet.apache.org/api/python/docs/api/gluon/nn/index.html#mxnet.gluon.nn.Block\r\n\r\n@ys2843  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18662", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18662/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18662/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18662/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18662", "id": 651044424, "node_id": "MDU6SXNzdWU2NTEwNDQ0MjQ=", "number": 18662, "title": "out of memory issue while using mxnet with sockeye", "user": {"login": "MrRaghav", "id": 31506310, "node_id": "MDQ6VXNlcjMxNTA2MzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/31506310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrRaghav", "html_url": "https://github.com/MrRaghav", "followers_url": "https://api.github.com/users/MrRaghav/followers", "following_url": "https://api.github.com/users/MrRaghav/following{/other_user}", "gists_url": "https://api.github.com/users/MrRaghav/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrRaghav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrRaghav/subscriptions", "organizations_url": "https://api.github.com/users/MrRaghav/orgs", "repos_url": "https://api.github.com/users/MrRaghav/repos", "events_url": "https://api.github.com/users/MrRaghav/events{/privacy}", "received_events_url": "https://api.github.com/users/MrRaghav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-05T10:35:30Z", "updated_at": "2020-07-10T09:03:35Z", "closed_at": "2020-07-10T09:03:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nWhen I run **sockeye.train** command with **mxnet 1.6.0** , it provides two information in logs:\r\n\r\n1) mxnet.base.MXNetError: [09:58:26] src/storage/./pooled_storage_manager.h:161: cudaMalloc retry failed: out of memory\r\n2) learning rate from lr_scheduler has been overwritten by learning_rate in optimizer.\r\n\r\nBasically I submit sockeye.train as a job in my server and its output comes as **Run time 00:06:03, FAILED, ExitCode 1**\r\n\r\nVersions on software are as follows:\r\n\r\n    [username]@[server]:/username/sockeye/dir1$ pip3 list | grep mxnet\r\n    mxnet 1.6.0\r\n    mxnet-cu101mkl 1.6.0\r\n    mxnet-mkl 1.6.0\r\n    [username]@[server]:/username/sockeye/dir1$ pip3 list | grep sockeye\r\n    sockeye 2.1.7\r\n\r\n### Error Message\r\n\r\n    [username]@[server]:~/username/sockeye$ tail -30 77233.out\r\n    File \"/home/username/.local/lib/python3.7/site-packages/sockeye/train.py\", line 997, in\r\n    main()\r\n    File \"/home/username/.local/lib/python3.7/site-packages/sockeye/train.py\", line 764, in main\r\n    train(args)\r\n    File \"/home/username/.local/lib/python3.7/site-packages/sockeye/train.py\", line 992, in train\r\n    training_state = trainer.fit(train_iter=train_iter, validation_iter=eval_iter, checkpoint_decoder=cp_decoder)\r\n    File \"/home/username/.local/lib/python3.7/site-packages/sockeye/training.py\", line 242, in fit\r\n    self._step(batch=train_iter.next())\r\n    File \"/home/username/.local/lib/python3.7/site-packages/sockeye/training.py\", line 346, in step\r\n    loss_func.metric.update(loss_value.asscalar(), num_samples.asscalar())\r\n    File \"/home/username/.local/lib/python3.7/site-packages/mxnet/ndarray/ndarray.py\", line 2553, in asscalar\r\n    return self.asnumpy()[0]\r\n    File \"/home/username/.local/lib/python3.7/site-packages/mxnet/ndarray/ndarray.py\", line 2535, in asnumpy\r\n    ctypes.c_size_t(data.size)))\r\n    File \"/home/username/.local/lib/python3.7/site-packages/mxnet/base.py\", line 255, in check_call\r\n    raise MXNetError(py_str(LIB.MXGetLastError()))\r\n    mxnet.base.MXNetError: [09:58:26] src/storage/./pooled_storage_manager.h:161: cudaMalloc retry failed: out of memory\r\n    Stack trace:\r\n    [bt] (0) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x6d554b) [0x7f6c5b3d054b]\r\n    [bt] (1) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x41a0c72) [0x7f6c5ee9bc72]\r\n    [bt] (2) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x41a694f) [0x7f6c5eea194f]\r\n    [bt] (3) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3972e10) [0x7f6c5e66de10]\r\n    [bt] (4) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x39730c7) [0x7f6c5e66e0c7]\r\n    [bt] (5) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::imperative::PushFCompute(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocatormxnet::TBlob > const&, std::vector<mxnet::OpReqType, std::allocatormxnet::OpReqType > const&, std::vector<mxnet::TBlob, std::allocatormxnet::TBlob > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::vector<mxnet::engine::Var*, std::allocatormxnet::engine::Var* > const&, std::vector<mxnet::engine::Var*, std::allocatormxnet::engine::Var* > const&, std::vector<mxnet::Resource, std::allocatormxnet::Resource > const&, std::vector<mxnet::NDArray*, std::allocatormxnet::NDArray* > const&, std::vector<mxnet::NDArray*, std::allocatormxnet::NDArray* > const&, std::vector<unsigned int, std::allocator > const&, std::vector<mxnet::OpReqType, std::allocatormxnet::OpReqType > const&)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x281) [0x7f6c5e66e4d1]\r\n    [bt] (6) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3896f19) [0x7f6c5e591f19]\r\n    [bt] (7) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38a3c31) [0x7f6c5e59ec31]\r\n    [bt] (8) /home/username/.local/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38a7170) [0x7f6c5e5a2170]\r\n\r\n     learning rate from lr_scheduler has been overwritten by learning_rate in optimizer.\r\n\r\n\r\n\r\n## To Reproduce\r\n\r\nsockeye 2.1.7 calls mxnet 1.6.0 (installed for cuda). \r\n\r\n### Steps to reproduce\r\n\r\npython3 -m sockeye.train -d training_data -vs dev.BPE.de -vt dev.BPE.en --shared-vocab -o model\r\n\r\n## What have you tried to solve it?\r\n\r\n1. Referred : https://github.com/deepinsight/insightface/issues/257 and tried to reduce the batch size (--batch-size)  for sockeye.train from 4096 to 64, 70, 100 etc. but it kept failing. \r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\nusername@server:~/username/sockeye$ curl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n----------Python Info----------\r\n('Version      :', '2.7.16')\r\n('Compiler     :', 'GCC 8.3.0')\r\n('Build        :', ('default', 'Oct 10 2019 22:02:15'))\r\n('Arch         :', ('64bit', 'ELF'))\r\n------------Pip Info-----------\r\n('Version      :', '20.1.1')\r\n('Directory    :', '/home/username/.local/lib/python2.7/site-packages/pip')\r\n----------MXNet Info-----------\r\nNo MXNet installed.\r\n----------System Info----------\r\n('Platform     :', 'Linux-4.19.0-9-amd64-x86_64-with-debian-10.4')\r\n('system       :', 'Linux')\r\n('node         :', 'server')\r\n('release      :', '4.19.0-9-amd64')\r\n('version      :', '#1 SMP Debian 4.19.118-2 (2020-04-29)')\r\n----------Hardware Info----------\r\n('machine      :', 'x86_64')\r\n('processor    :', '')\r\nArchitecture:        x86_64\r\nCPU op-mode(s):      32-bit, 64-bit\r\nByte Order:          Little Endian\r\nAddress sizes:       46 bits physical, 48 bits virtual\r\nCPU(s):              48\r\nOn-line CPU(s) list: 0-47\r\nThread(s) per core:  2\r\nCore(s) per socket:  12\r\nSocket(s):           2\r\nNUMA node(s):        2\r\nVendor ID:           GenuineIntel\r\nCPU family:          6\r\nModel:               79\r\nModel name:          Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz\r\nStepping:            1\r\nCPU MHz:             1200.726\r\nCPU max MHz:         2900.0000\r\nCPU min MHz:         1200.0000\r\nBogoMIPS:            4400.00\r\nVirtualization:      VT-x\r\nL1d cache:           32K\r\nL1i cache:           32K\r\nL2 cache:            256K\r\nL3 cache:            30720K\r\nNUMA node0 CPU(s):   0-11,24-35\r\nNUMA node1 CPU(s):   12-23,36-47\r\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts flush_l1d\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0057 sec, LOAD: 0.4408 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0010 sec, LOAD: 0.0191 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0009 sec, LOAD: 0.6619 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.00109004974365 sec.\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0012 sec, LOAD: 0.7398 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0012 sec, LOAD: 0.3613 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0011 sec, LOAD: 0.0085 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0000 sec, LOAD: 1.2439 sec.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18652", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18652/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18652/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18652/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18652", "id": 649032062, "node_id": "MDU6SXNzdWU2NDkwMzIwNjI=", "number": 18652, "title": "Can't use mx.np.concatenate with hybridize", "user": {"login": "austinmw", "id": 12224358, "node_id": "MDQ6VXNlcjEyMjI0MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/12224358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinmw", "html_url": "https://github.com/austinmw", "followers_url": "https://api.github.com/users/austinmw/followers", "following_url": "https://api.github.com/users/austinmw/following{/other_user}", "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions", "organizations_url": "https://api.github.com/users/austinmw/orgs", "repos_url": "https://api.github.com/users/austinmw/repos", "events_url": "https://api.github.com/users/austinmw/events{/privacy}", "received_events_url": "https://api.github.com/users/austinmw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-01T14:33:22Z", "updated_at": "2020-07-02T14:20:43Z", "closed_at": "2020-07-01T19:54:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI\u2019m trying to adapt the GoogLeNet/InceptionV1 implementation in the online book d2l.ai to be compatible with hybridization. However, I\u2019m currently facing issues with `mx.np.concatenate`.\r\n\r\n### Error Message\r\n\r\n> ---------------------------------------------------------------------------\r\n> AssertionError                            Traceback (most recent call last)\r\n> <ipython-input-2-491e8e8a4509> in <module>()\r\n>     113 d2l.train_ch13(net, train_iter=train_dl, test_iter=valid_dl, \r\n>     114                loss=loss, trainer=optimizer,\r\n> --> 115                num_epochs=10, ctx_list=ctx_list)\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/d2l/d2l.py in train_ch13(net, train_iter, test_iter, loss, trainer, num_epochs, ctx_list, split_f)\r\n>    1333             timer.start()\r\n>    1334             l, acc = train_batch_ch13(\r\n> -> 1335                 net, features, labels, loss, trainer, ctx_list, split_f)\r\n>    1336             metric.add(l, acc, labels.shape[0], labels.size)\r\n>    1337             timer.stop()\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/d2l/d2l.py in train_batch_ch13(net, features, labels, loss, trainer, ctx_list, split_f)\r\n>    1307     X_shards, y_shards = split_f(features, labels, ctx_list)\r\n>    1308     with autograd.record():\r\n> -> 1309         pred_shards = [net(X_shard) for X_shard in X_shards]\r\n>    1310         ls = [loss(pred_shard, y_shard) for pred_shard, y_shard\r\n>    1311               in zip(pred_shards, y_shards)]\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/d2l/d2l.py in <listcomp>(.0)\r\n>    1307     X_shards, y_shards = split_f(features, labels, ctx_list)\r\n>    1308     with autograd.record():\r\n> -> 1309         pred_shards = [net(X_shard) for X_shard in X_shards]\r\n>    1310         ls = [loss(pred_shard, y_shard) for pred_shard, y_shard\r\n>    1311               in zip(pred_shards, y_shards)]\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in __call__(self, *args)\r\n>     756             hook(self, args)\r\n>     757 \r\n> --> 758         out = self.forward(*args)\r\n>     759 \r\n>     760         for hook in self._forward_hooks.values():\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in forward(self, x, *args)\r\n>    1211                                      'Find all contexts = {}'.format(ctx_set))\r\n>    1212                 with ctx:\r\n> -> 1213                     return self._call_cached_op(x, *args)\r\n>    1214             with ctx:\r\n>    1215                 try:\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in _call_cached_op(self, *args)\r\n>    1044     def _call_cached_op(self, *args):\r\n>    1045         if self._cached_op is None:\r\n> -> 1046             self._build_cache(*args)\r\n>    1047         assert self._cached_op, \"cached op is not None\"\r\n>    1048         if self._callback:\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in _build_cache(self, *args)\r\n>     996 \r\n>     997     def _build_cache(self, *args):\r\n> --> 998         data, out = self._get_graph(*args)\r\n>     999         data_names = {data.name: i for i, data in enumerate(data)}\r\n>    1000         params = self.collect_params()\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in _get_graph(self, *args)\r\n>     988             params = {i: j.var() for i, j in self._reg_params.items()}\r\n>     989             with self.name_scope():\r\n> --> 990                 out = self.hybrid_forward(symbol, *grouped_inputs, **params)  # pylint: disable=no-value-for-parameter\r\n>     991             out, self._out_format = _flatten(out, \"output\")\r\n>     992 \r\n> \r\n> <ipython-input-2-491e8e8a4509> in hybrid_forward(self, F, x)\r\n>      97 \r\n>      98     def hybrid_forward(self, F, x):\r\n> ---> 99         x = self.net(x)\r\n>     100         return x\r\n>     101 \r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in __call__(self, *args)\r\n>     756             hook(self, args)\r\n>     757 \r\n> --> 758         out = self.forward(*args)\r\n>     759 \r\n>     760         for hook in self._forward_hooks.values():\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in forward(self, x, *args)\r\n>    1225         params = {i: j.var() for i, j in self._reg_params.items()}\r\n>    1226         with self.name_scope():\r\n> -> 1227             return self.hybrid_forward(symbol, x, *args, **params)\r\n>    1228 \r\n>    1229     def hybrid_forward(self, F, x, *args, **kwargs):\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/nn/basic_layers.py in hybrid_forward(self, F, x)\r\n>     117     def hybrid_forward(self, F, x):\r\n>     118         for block in self._children.values():\r\n> --> 119             x = block(x)\r\n>     120         return x\r\n>     121 \r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in __call__(self, *args)\r\n>     756             hook(self, args)\r\n>     757 \r\n> --> 758         out = self.forward(*args)\r\n>     759 \r\n>     760         for hook in self._forward_hooks.values():\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/gluon/block.py in forward(self, x, *args)\r\n>    1225         params = {i: j.var() for i, j in self._reg_params.items()}\r\n>    1226         with self.name_scope():\r\n> -> 1227             return self.hybrid_forward(symbol, x, *args, **params)\r\n>    1228 \r\n>    1229     def hybrid_forward(self, F, x, *args, **kwargs):\r\n> \r\n> <ipython-input-2-491e8e8a4509> in hybrid_forward(self, F, x)\r\n>      37         p4 = self.p4_2(self.p4_1(x))\r\n>      38         # Concatenate the outputs on the channel dimension\r\n> ---> 39         return np.concatenate((p1, p2, p3, p4), axis=1)\r\n>      40         #return F.concat(p1, p2, p3, p4, dim=1)\r\n>      41         #return F.concat(p1, p2, p3, p4, dim=1)\r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/numpy/multiarray.py in concatenate(seq, axis, out)\r\n>    4884     array([1., 2., 3., 4., 5., 6.])\r\n>    4885     \"\"\"\r\n> -> 4886     return _mx_nd_np.concatenate(seq, axis=axis, out=out)\r\n>    4887 \r\n>    4888 \r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/numpy/_op.py in concatenate(seq, axis, out)\r\n>    3009            [3., 4., 6.]])\r\n>    3010     \"\"\"\r\n> -> 3011     return _npi.concatenate(*seq, axis=axis, out=out)\r\n>    3012 \r\n>    3013 \r\n> \r\n> ~/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet/ndarray/register.py in concatenate(*data, **kwargs)\r\n> \r\n> AssertionError: Positional arguments must have NDArray type, but got <_Symbol conv3_relu_fwd>\r\n\r\n## To Reproduce\r\n\r\n### Steps to reproduce\r\n\r\n```python\r\nimport d2l # d2l.ai book code\r\n\r\nimport mxnet as mx\r\nfrom mxnet import gluon, metric, np, npx\r\nfrom mxnet.gluon import nn\r\nnpx.set_np()\r\n\r\nfrom mxnet import nd\r\n\r\nctx_list = [npx.gpu(i) for i in range(npx.num_gpus())]\r\nmx.random.seed(42, ctx='all')\r\n\r\n\r\nclass Inception(nn.HybridBlock):\r\n    # c1- c4 are the number of output channels for each layer in the path\r\n    def __init__(self, c1, c2, c3, c4, **kwargs):\r\n        super().__init__(**kwargs)\r\n        # Path 1 is a single 1 x 1 convolutional layer\r\n        self.p1_1 = nn.Conv2D(c1, kernel_size=1, activation='relu')\r\n        # Path 2 is a 1 x 1 convolutional layer followed by a 3 x 3\r\n        # convolutional layer\r\n        self.p2_1 = nn.Conv2D(c2[0], kernel_size=1, activation='relu')\r\n        self.p2_2 = nn.Conv2D(c2[1], kernel_size=3, padding=1, activation='relu')\r\n        # Path 3 is a 1 x 1 convolutional layer followed by a 5 x 5\r\n        # convolutional layer\r\n        self.p3_1 = nn.Conv2D(c3[0], kernel_size=1, activation='relu')\r\n        self.p3_2 = nn.Conv2D(c3[1], kernel_size=5, padding=2,\r\n                              activation='relu')\r\n        # Path 4 \r\n        self.p4_1 = nn.MaxPool2D(pool_size=3, strides=1, padding=1)\r\n        self.p4_2 = nn.Conv2D(c4, kernel_size=1, activation='relu')\r\n\r\n    def hybrid_forward(self, F, x):\r\n        p1 = self.p1_1(x)\r\n        p2 = self.p2_2(self.p2_1(x))\r\n        p3 = self.p3_2(self.p3_1(x))\r\n        p4 = self.p4_2(self.p4_1(x))\r\n        # Concatenate the outputs on the channel dimension\r\n        return np.concatenate((p1, p2, p3, p4), axis=1)\r\n        #return F.concat(p1, p2, p3, p4, dim=1) # also doesn't work\r\n\r\n\r\nclass GoogLeNet(nn.HybridBlock):\r\n    \"\"\"\r\n    GoogLeNet uses a stack of a total of 9 inception blocks and global average pooling\r\n    \"\"\"\r\n    def __init__(self, classes=1000, **kwargs):\r\n        super().__init__(**kwargs)\r\n\r\n        self.net = nn.HybridSequential()\r\n        \r\n        # First component uses a 64-channel 7 x 7 convolutional layer\r\n        self.net.add(\r\n            nn.Conv2D(64, kernel_size=7, strides=2, padding=3, activation='relu'),\r\n            nn.MaxPool2D(pool_size=3, strides=2, padding=1)\r\n        )\r\n\r\n        # Second component uses two convolutional layers:\r\n        # first a 64-channel 1 x 1 convolutional layer,\r\n        # then a 3 x 3 convolutional layer that triples the number of channels.\r\n        # This corresponds to the second path in the Inception block.\r\n        self.net.add(\r\n            nn.Conv2D(64, kernel_size=1, activation='relu'),\r\n            nn.Conv2D(192, kernel_size=3, padding=1, activation='relu'),\r\n            nn.MaxPool2D(pool_size=3, strides=2, padding=1)\r\n        )\r\n    \r\n        # Third component connects to complete Inception blocks in series\r\n        # The number of output channels of the first block is 64+128+32+32=256\r\n        # and the ratio to the output channels of the four paths is 2:4:1:1.\r\n        # The number of output channels of the second block is 128+192+96+64=480\r\n        # and the ratio to the output channels per path is 4:6:3:2\r\n        self.net.add(\r\n            Inception(64, (96, 128), (16, 32), 32),\r\n            Inception(128, (128, 192), (32, 96), 64)\r\n        )\r\n\r\n        # Fourth component connects five Inception blocks in series\r\n        self.net.add(\r\n            Inception(196, (96, 208), (16, 48), 64),\r\n            Inception(160, (112, 224), (24, 64), 64),\r\n            Inception(128, (128, 256), (24, 64), 64),\r\n            Inception(112, (144, 288), (32, 64), 64),\r\n            Inception(256, (160, 320), (32, 128), 128),\r\n            nn.MaxPool2D(pool_size=3, strides=2, padding=1)\r\n        )\r\n\r\n        # Fifth component has two Inception blocks followed by output layer\r\n        self.net.add(\r\n            Inception(256, (160, 320), (32, 128), 128),\r\n            Inception(384, (192, 384), (48, 128), 128),\r\n            nn.Dense(classes)\r\n        )\r\n    \r\n    def hybrid_forward(self, F, x):\r\n        x = self.net(x)\r\n        return x\r\n    \r\n    \r\nnet = GoogLeNet(classes=10)\r\nnet.initialize()\r\nnet.hybridize()\r\n\r\n\r\ntrain_dl, valid_dl = d2l.load_data_fashion_mnist(batch_size=128, resize=96)\r\n\r\nloss = gluon.loss.SoftmaxCrossEntropyLoss()\r\noptimizer = gluon.Trainer(net.collect_params(), 'sgd', {'learning_rate': 0.1})\r\n\r\nd2l.train_ch13(net, train_iter=train_dl, test_iter=valid_dl, \r\n               loss=loss, trainer=optimizer, \r\n               num_epochs=10, ctx_list=ctx_list)\r\n```\r\n\r\n## What have you tried to solve it?\r\n\r\nAlso tried `return F.concat(p1, p2, p3, p4, dim=1)` which results in a different error:\r\n\r\n> TypeError: Operator concat registered in backend is known as concat in Python. This is a legacy operator which can only accept legacy ndarrays, while received an MXNet numpy ndarray. Please call as_nd_ndarray() upon the numpy ndarray to convert it to a legacy ndarray, and then feed the converted array to this operator.\r\n\r\n\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\n----------Python Info----------\r\nVersion      : 3.6.5\r\nCompiler     : GCC 7.2.0\r\nBuild        : ('default', 'Apr 29 2018 16:14:56')\r\nArch         : ('64bit', '')\r\n------------Pip Info-----------\r\nVersion      : 10.0.1\r\nDirectory    : /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 1.6.0\r\nDirectory    : /home/ubuntu/anaconda3/envs/mxnet_p36/lib/python3.6/site-packages/mxnet\r\nNum GPUs     : 1\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-4.15.0-1060-aws-x86_64-with-debian-buster-sid\r\nsystem       : Linux\r\nnode         : ip-172-31-74-28\r\nrelease      : 4.15.0-1060-aws\r\nversion      : #62-Ubuntu SMP Tue Feb 11 21:23:22 UTC 2020\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : x86_64\r\nArchitecture:        x86_64\r\nCPU op-mode(s):      32-bit, 64-bit\r\nByte Order:          Little Endian\r\nCPU(s):              4\r\nOn-line CPU(s) list: 0-3\r\nThread(s) per core:  2\r\nCore(s) per socket:  2\r\nSocket(s):           1\r\nNUMA node(s):        1\r\nVendor ID:           GenuineIntel\r\nCPU family:          6\r\nModel:               85\r\nModel name:          Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz\r\nStepping:            7\r\nCPU MHz:             3191.599\r\nBogoMIPS:            4999.99\r\nHypervisor vendor:   KVM\r\nVirtualization type: full\r\nL1d cache:           32K\r\nL1i cache:           32K\r\nL2 cache:            1024K\r\nL3 cache:            36608K\r\nNUMA node0 CPU(s):   0-3\r\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves ida arat pku ospke avx512_vnni\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0020 sec, LOAD: 0.6654 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0005 sec, LOAD: 0.4951 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0408 sec, LOAD: 0.1209 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0307 sec, LOAD: 0.0119 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0150 sec, LOAD: 0.1406 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0542 sec, LOAD: 0.3796 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0017 sec, LOAD: 0.0988 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.0032265186309814453 sec.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18650", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18650/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18650/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18650/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18650", "id": 648904428, "node_id": "MDU6SXNzdWU2NDg5MDQ0Mjg=", "number": 18650, "title": "nightly builds for Linux", "user": {"login": "nicolaerosia", "id": 4127983, "node_id": "MDQ6VXNlcjQxMjc5ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4127983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolaerosia", "html_url": "https://github.com/nicolaerosia", "followers_url": "https://api.github.com/users/nicolaerosia/followers", "following_url": "https://api.github.com/users/nicolaerosia/following{/other_user}", "gists_url": "https://api.github.com/users/nicolaerosia/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolaerosia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolaerosia/subscriptions", "organizations_url": "https://api.github.com/users/nicolaerosia/orgs", "repos_url": "https://api.github.com/users/nicolaerosia/repos", "events_url": "https://api.github.com/users/nicolaerosia/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolaerosia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T11:25:10Z", "updated_at": "2020-07-02T14:52:36Z", "closed_at": "2020-07-01T17:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that nightly builds for Linux are missing and adding them would help Linux users test before the actual release.\r\nhttps://pypi.org/project/mxnet-mkl/1.7.0b20200315/#files\r\nhttps://pypi.org/project/mxnet/1.7.0b20200315/#files\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18646", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18646/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18646/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18646/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18646", "id": 648493901, "node_id": "MDU6SXNzdWU2NDg0OTM5MDE=", "number": 18646, "title": "BatchNorm with axis=-1 is much slower than axis=1", "user": {"login": "stu1130", "id": 6792331, "node_id": "MDQ6VXNlcjY3OTIzMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6792331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stu1130", "html_url": "https://github.com/stu1130", "followers_url": "https://api.github.com/users/stu1130/followers", "following_url": "https://api.github.com/users/stu1130/following{/other_user}", "gists_url": "https://api.github.com/users/stu1130/gists{/gist_id}", "starred_url": "https://api.github.com/users/stu1130/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stu1130/subscriptions", "organizations_url": "https://api.github.com/users/stu1130/orgs", "repos_url": "https://api.github.com/users/stu1130/repos", "events_url": "https://api.github.com/users/stu1130/events{/privacy}", "received_events_url": "https://api.github.com/users/stu1130/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707556574, "node_id": "MDU6TGFiZWw3MDc1NTY1NzQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Operator", "name": "Operator", "color": "fbca04", "default": false, "description": null}, {"id": 707546925, "node_id": "MDU6TGFiZWw3MDc1NDY5MjU=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Performance", "name": "Performance", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-30T21:07:10Z", "updated_at": "2020-07-09T17:06:10Z", "closed_at": "2020-07-09T17:06:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n```\r\nimport mxnet as mx\r\nfrom mxnet import autograd, np, npx, gluon, init\r\nfrom mxnet.gluon import nn\r\nimport time\r\n\r\nnpx.set_np()\r\n\r\ndata = mx.np.random.uniform(size=(32, 100, 100), ctx=mx.gpu())\r\nlabel = mx.np.ones((32, 100, 100), ctx=mx.gpu())\r\nnet = nn.Sequential()\r\nnet.add(nn.BatchNorm(axis=-1))\r\nnet.initialize(init.Xavier(), ctx=mx.gpu())\r\nloss = gluon.loss.L2Loss()\r\nt = time.time()\r\nfor _ in range(5000):\r\n    with autograd.record():\r\n        l = loss(net(data), label)\r\n    l.backward()\r\nmx.nd.waitall()\r\nprint('spent: {}s'.format(time.time() - t))\r\n```\r\nMXNet version: static build with branch v1.7x commit 75ab15569bd0f20a90806ce2fc38df08be208ed7\r\nI  got around 5 sec with axis=1 and 30 sec with axis=-1 on P3.8xlarge (V100). \r\nBoth of case are computing the 32 * 100 data for each axis\r\nsimilar to https://github.com/apache/incubator-mxnet/issues/10095\r\n\r\n## Solution\r\nThanks @ptrendx to point out that cudnn 7.4 (https://docs.nvidia.com/deeplearning/sdk/cudnn-release-notes/rel_7xx.html#rel_741) added a new cudnnBatchNormalization*Ex API that gives much better speed for axis = -1\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18637", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18637/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18637/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18637/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18637", "id": 647614989, "node_id": "MDU6SXNzdWU2NDc2MTQ5ODk=", "number": 18637, "title": "[Nvidia][CI] Jetson toolchain files public acess", "user": {"login": "ChaiBapchya", "id": 10992635, "node_id": "MDQ6VXNlcjEwOTkyNjM1", "avatar_url": "https://avatars3.githubusercontent.com/u/10992635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChaiBapchya", "html_url": "https://github.com/ChaiBapchya", "followers_url": "https://api.github.com/users/ChaiBapchya/followers", "following_url": "https://api.github.com/users/ChaiBapchya/following{/other_user}", "gists_url": "https://api.github.com/users/ChaiBapchya/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChaiBapchya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChaiBapchya/subscriptions", "organizations_url": "https://api.github.com/users/ChaiBapchya/orgs", "repos_url": "https://api.github.com/users/ChaiBapchya/repos", "events_url": "https://api.github.com/users/ChaiBapchya/events{/privacy}", "received_events_url": "https://api.github.com/users/ChaiBapchya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-29T19:35:51Z", "updated_at": "2020-07-15T20:59:35Z", "closed_at": "2020-07-15T20:59:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nCurrently, CI for Jetson builds uses aarch64 cross depedencies package based on Jetpack 4.3\r\n\r\nHowever, it needs to be manually downloaded using SDK Manager tool and placed in a private S3 bucket because we don't have license to redistribute them.\r\n\r\nFix would be to make it publicly available under nvidia machine learning apt repository http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/\r\n\r\nFor reference\r\nhttps://github.com/apache/incubator-mxnet/blob/master/ci/docker/Dockerfile.build.jetson#L61-L65\r\n\r\n@leezu @ptrendx @tristonc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18624", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18624/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18624/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18624/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18624", "id": 646393714, "node_id": "MDU6SXNzdWU2NDYzOTM3MTQ=", "number": 18624, "title": "Gluoncv HRNet Code raise error in mxnet-1.6.0 gpu hybridize mode", "user": {"login": "JONGGON", "id": 24702070, "node_id": "MDQ6VXNlcjI0NzAyMDcw", "avatar_url": "https://avatars1.githubusercontent.com/u/24702070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JONGGON", "html_url": "https://github.com/JONGGON", "followers_url": "https://api.github.com/users/JONGGON/followers", "following_url": "https://api.github.com/users/JONGGON/following{/other_user}", "gists_url": "https://api.github.com/users/JONGGON/gists{/gist_id}", "starred_url": "https://api.github.com/users/JONGGON/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JONGGON/subscriptions", "organizations_url": "https://api.github.com/users/JONGGON/orgs", "repos_url": "https://api.github.com/users/JONGGON/repos", "events_url": "https://api.github.com/users/JONGGON/events{/privacy}", "received_events_url": "https://api.github.com/users/JONGGON/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1630817629, "node_id": "MDU6TGFiZWwxNjMwODE3NjI5", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/R1.6.0", "name": "R1.6.0", "color": "f9d0c4", "default": false, "description": ""}, {"id": 2058684432, "node_id": "MDU6TGFiZWwyMDU4Njg0NDMy", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/R1.7.0", "name": "R1.7.0", "color": "e2692d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T17:02:26Z", "updated_at": "2020-06-29T20:34:00Z", "closed_at": "2020-06-29T20:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nIn mxnet 1.6.0 gpu hybridize mode, the below code raise error .\r\n\r\n(As a result of checking, \r\nno problem occurs in 1.5.0 gpu mode and 1.5.0 cpu mode(hybridize or not hybridize)\r\nno problem occurs in 1.6.0 cpu mode(hybridize or not hybridize)\r\n\r\nThe problem only occurs in version 1.6.0 gpu hybridize mode.\r\nI have confirmed that the same error occurs in 1.7.0 gpu hybridize mode which is not released now.\r\n\r\n## Error Message\r\nTraceback (most recent call last):\r\n  File \"/home/jg/Desktop/mountain/2frameCenter/core/model/backbone/HrNet.py\", line 664, in <module>\r\n    output = net(mx.nd.random_uniform(low=0, high=1, shape=(1, 3, input_size[0], input_size[1]), ctx=mx.gpu(0)))\r\n  File \"/home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 693, in __call__\r\n    out = self.forward(*args)\r\n  File \"/home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 1148, in forward\r\n    return self._call_cached_op(x, *args)\r\n  File \"/home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/gluon/block.py\", line 1020, in _call_cached_op\r\n    out = self._cached_op(*cargs)\r\n  File \"/home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/_ctypes/ndarray.py\", line 170, in __call__\r\n    ctypes.byref(out_stypes)))\r\n  File \"/home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/base.py\", line 255, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [02:01:14] src/core/graph.cc:102: Check failed: it != node2index_.end() && it->first == e.node.get(): \r\nStack trace:\r\n  [bt] (0) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x6b8b5b) [0x7f83ce9d2b5b]\r\n  [bt] (1) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x91bdd08) [0x7f83d74d7d08]\r\n  [bt] (2) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x91bf0a8) [0x7f83d74d90a8]\r\n  [bt] (3) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x91bfc30) [0x7f83d74d9c30]\r\n  [bt] (4) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38500aa) [0x7f83d1b6a0aa]\r\n  [bt] (5) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3870b2a) [0x7f83d1b8ab2a]\r\n  [bt] (6) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38804c2) [0x7f83d1b9a4c2]\r\n  [bt] (7) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3881959) [0x7f83d1b9b959]\r\n  [bt] (8) /home/jg/anaconda3/envs/mxnet/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::CachedOp::Forward(std::shared_ptr<mxnet::CachedOp> const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x181) [0x7f83d1b9f4c1]\r\n\r\nProcess finished with exit code 1\r\n\r\n## To Reproduce\r\ncode!!!\r\n\r\n```\r\nfrom gluoncv.model_zoo.resnet import BasicBlockV1, BottleneckV1, _conv3x3\r\nfrom mxnet.context import cpu\r\nfrom mxnet.gluon import contrib\r\nfrom mxnet.gluon import nn\r\nfrom mxnet.gluon.nn import BatchNorm\r\n\r\n\r\nclass HRBasicBlock(BasicBlockV1):\r\n    r\"\"\"BasicBlock V1 from `\"Deep Residual Learning for Image Recognition\"\r\n    \"\"\"\r\n    expansion = 1\r\n\r\nclass HRBottleneck(BottleneckV1):\r\n    '''\r\n    warning: It's mxnet compatable bottleneck, the orginal implementation is different\r\n    from this bottleneck as its all convolutions are no bias\r\n    '''\r\n    expansion = 4\r\n\r\nclass OrigHRBottleneck(nn.HybridBlock):\r\n    r\"\"\"Modified Bottleneck V1 from `\"Deep Residual Learning for Image Recognition\"\r\n    <http://arxiv.org/abs/1512.03385>`_ paper.\r\n    This is used for ResNet V1 for 50, 101, 152 layers. Its all convolutions are\r\n    no bias to match with the original hrnet implementation.\r\n\r\n    Parameters\r\n    ----------\r\n    channels : int\r\n        Number of output channels.\r\n    stride : int\r\n        Stride size.\r\n    downsample : bool, default False\r\n        Whether to downsample the input.\r\n    in_channels : int, default 0\r\n        Number of input channels. Default is 0, to infer from the graph.\r\n    last_gamma : bool, default False\r\n        Whether to initialize the gamma of the last BatchNorm layer in each bottleneck to zero.\r\n    use_se : bool, default False\r\n        Whether to use Squeeze-and-Excitation module\r\n    norm_layer : object\r\n        Normalization layer used (default: :class:`mxnet.gluon.nn.BatchNorm`)\r\n        Can be :class:`mxnet.gluon.nn.BatchNorm` or :class:`mxnet.gluon.contrib.nn.SyncBatchNorm`.\r\n    norm_kwargs : dict\r\n        Additional `norm_layer` arguments, for example `num_devices=4`\r\n        for :class:`mxnet.gluon.contrib.nn.SyncBatchNorm`.\r\n    \"\"\"\r\n    expansion = 4\r\n    def __init__(self, channels, stride, downsample=False, in_channels=0,\r\n                 last_gamma=False, use_se=False, norm_layer=BatchNorm, norm_kwargs=None, **kwargs):\r\n        super(OrigHRBottleneck, self).__init__(**kwargs)\r\n        self.body = nn.HybridSequential(prefix='')\r\n        # add use_bias=False here to match with the original implementation\r\n        self.body.add(nn.Conv2D(channels//4, kernel_size=1, strides=stride, use_bias=False))\r\n        self.body.add(norm_layer(**({} if norm_kwargs is None else norm_kwargs)))\r\n        self.body.add(nn.Activation('relu'))\r\n        self.body.add(_conv3x3(channels//4, 1, channels//4))\r\n        self.body.add(norm_layer(**({} if norm_kwargs is None else norm_kwargs)))\r\n        self.body.add(nn.Activation('relu'))\r\n        # add use_bias=False here to match with the original implementation\r\n        self.body.add(nn.Conv2D(channels, kernel_size=1, strides=1, use_bias=False))\r\n\r\n        if use_se:\r\n            self.se = nn.HybridSequential(prefix='')\r\n            self.se.add(nn.Dense(channels // 16, use_bias=False))\r\n            self.se.add(nn.Activation('relu'))\r\n            self.se.add(nn.Dense(channels, use_bias=False))\r\n            self.se.add(nn.Activation('sigmoid'))\r\n        else:\r\n            self.se = None\r\n\r\n        if not last_gamma:\r\n            self.body.add(norm_layer(**({} if norm_kwargs is None else norm_kwargs)))\r\n        else:\r\n            self.body.add(norm_layer(gamma_initializer='zeros',\r\n                                     **({} if norm_kwargs is None else norm_kwargs)))\r\n\r\n        if downsample:\r\n            self.downsample = nn.HybridSequential(prefix='')\r\n            self.downsample.add(nn.Conv2D(channels, kernel_size=1, strides=stride,\r\n                                          use_bias=False, in_channels=in_channels))\r\n            self.downsample.add(norm_layer(**({} if norm_kwargs is None else norm_kwargs)))\r\n        else:\r\n            self.downsample = None\r\n\r\n    def hybrid_forward(self, F, x):\r\n        residual = x\r\n\r\n        x = self.body(x)\r\n\r\n        if self.se:\r\n\r\n            w = F.contrib.AdaptiveAvgPooling2D(x, output_size=1)\r\n            w = self.se(w)\r\n            x = F.broadcast_mul(x, w.expand_dims(axis=2).expand_dims(axis=2))\r\n\r\n        if self.downsample:\r\n            residual = self.downsample(residual)\r\n\r\n        x = F.Activation(data =x + residual, act_type='relu')\r\n        return x\r\n\r\nclass HighResolutionModule(nn.HybridBlock):\r\n    '''\r\n    interp_type can be 'nearest'/'bilinear'/'bilinear_like'\r\n    '''\r\n    def __init__(self, num_branches, blocks, num_blocks, num_channels, fuse_method,\r\n                 num_inchannels=None, multi_scale_output=True, interp_type='nearest',\r\n                 norm_layer=BatchNorm, norm_kwargs=None, **kwargs):\r\n        super(HighResolutionModule, self).__init__(**kwargs)\r\n\r\n        if num_inchannels is not None:\r\n            self.num_inchannels = num_inchannels\r\n        else:\r\n            self.num_inchannels = num_channels\r\n\r\n        self.fuse_method = fuse_method\r\n        self.num_branches = num_branches\r\n\r\n        self.multi_scale_output = multi_scale_output\r\n        self.interp_type = interp_type\r\n\r\n        self.branches = self._make_branches(\r\n            num_branches, blocks, num_blocks, num_channels)\r\n        self.fuse_layers = self._make_fuse_layers(norm_layer=norm_layer, norm_kwargs=norm_kwargs)\r\n\r\n    def _make_one_branch(self, branch_index, block, num_blocks, num_channels,\r\n                         stride=1):\r\n        downsample = stride != 1 or self.num_inchannels[branch_index] != \\\r\n                     num_channels[branch_index] * block.expansion\r\n\r\n        layers = nn.HybridSequential()\r\n        layers.add(block(num_channels[branch_index]* block.expansion, stride,\r\n                         downsample, self.num_inchannels[branch_index]))\r\n        self.num_inchannels[branch_index] = \\\r\n            num_channels[branch_index] * block.expansion\r\n        for i in range(1, num_blocks[branch_index]):\r\n            layers.add(block(num_channels[branch_index]* block.expansion, 1,\r\n                             False, self.num_inchannels[branch_index]))\r\n\r\n        return layers\r\n\r\n\r\n    def _make_branches(self, num_branches, block, num_blocks, num_channels):\r\n        branches = nn.HybridSequential()\r\n\r\n        for i in range(num_branches):\r\n            branches.add(\r\n                self._make_one_branch(i, block, num_blocks, num_channels)\r\n            )\r\n        return branches\r\n\r\n    def _make_fuse_layers(self, norm_layer=BatchNorm, norm_kwargs=None):\r\n        if self.num_branches == 1:\r\n            return None\r\n\r\n        num_branches = self.num_branches\r\n        num_inchannels = self.num_inchannels\r\n        fuse_layers = nn.HybridSequential()\r\n        for i in range(num_branches if self.multi_scale_output else 1):\r\n            fuse_layer = nn.HybridSequential()\r\n            for j in range(num_branches):\r\n                if j > i:\r\n                    seq = nn.HybridSequential()\r\n\r\n                    seq.add(\r\n                        nn.Conv2D(num_inchannels[i], 1, 1, 0, use_bias=False),\r\n                        norm_layer(**({} if norm_kwargs is None else norm_kwargs))\r\n                    )\r\n                    fuse_layer.add(seq)\r\n                elif j == i:\r\n                    fuse_layer.add(contrib.nn.Identity())\r\n                else:\r\n                    conv3x3s = nn.HybridSequential()\r\n                    for k in range(i-j):\r\n                        if k == i - j - 1:\r\n                            num_outchannels_conv3x3 = num_inchannels[i]\r\n                            conv3x3s.add(\r\n                                nn.Conv2D(num_outchannels_conv3x3, 3, 2, 1, use_bias=False),\r\n                                norm_layer(**({} if norm_kwargs is None else norm_kwargs))\r\n                            )\r\n                        else:\r\n                            num_outchannels_conv3x3 = num_inchannels[j]\r\n                            conv3x3s.add(\r\n                                nn.Conv2D(num_outchannels_conv3x3, 3, 2, 1, use_bias=False),\r\n                                norm_layer(**({} if norm_kwargs is None else norm_kwargs)),\r\n                                nn.Activation('relu')\r\n                            )\r\n                    fuse_layer.add(conv3x3s)\r\n            fuse_layers.add(fuse_layer)\r\n\r\n        return fuse_layers\r\n\r\n    def get_num_inchannels(self):\r\n        return self.num_inchannels\r\n\r\n    def hybrid_forward(self, F, x, *args, **kwargs):\r\n        x = self.branches[0](x)\r\n        if self.num_branches == 1:\r\n            return [x]\r\n\r\n        X = []\r\n        X.append(x)\r\n\r\n        for i in range(1, self.num_branches):\r\n            X.append(self.branches[i](args[i-1]))\r\n\r\n        x_fuse = []\r\n        for i in range(len(self.fuse_layers)):\r\n            y = X[0] if i == 0 else self.fuse_layers[i][0](X[0])\r\n            for j in range(1, self.num_branches):\r\n                if j > i:\r\n                    if self.interp_type == 'nearest':\r\n                        y = y + F.UpSampling(\r\n                            self.fuse_layers[i][j](X[j]),\r\n                            scale=2**(j-i),\r\n                            sample_type='nearest')\r\n                    elif self.interp_type == 'bilinear':\r\n                        y = y + F.contrib.BilinearResize2D(\r\n                            self.fuse_layers[i][j](X[j]),\r\n                            scale_height=2**(j-i),\r\n                            scale_width=2**(j-i),\r\n                        )\r\n                    elif self.interp_type == 'bilinear_like':\r\n                        y = y + F.contrib.BilinearResize2D(\r\n                            self.fuse_layers[i][j](X[j]),\r\n                            like=X[i],\r\n                            mode='like',\r\n                        )\r\n                    else:\r\n                        raise NotImplementedError\r\n\r\n                else:\r\n                    y = y + self.fuse_layers[i][j](X[j])\r\n            x_fuse.append(F.relu(y))\r\n\r\n        return x_fuse\r\n\r\n# TODO: Now, We use OrigHRBottleneck to match with the origial implementation. You\r\n#       can also replace it with the mxnet compatable HRBottleneck.\r\nBLOCKS_DICT = {\r\n    'BASIC': HRBasicBlock,\r\n    'BOTTLENECK': OrigHRBottleneck\r\n}\r\n\r\nclass HighResolutionBaseNet(nn.HybridBlock):\r\n    r\"\"\"Base class for classification and segmentation\r\n    \"\"\"\r\n    def __init__(self, cfg, stage_interp_type='nearst', norm_layer=BatchNorm, \\\r\n                 norm_kwargs=None, **kwargs):\r\n        self.stage_interp_type = stage_interp_type\r\n        super(HighResolutionBaseNet, self).__init__()\r\n\r\n        self.conv1 = nn.Conv2D(64, kernel_size=3, strides=2, padding=1,\r\n                               use_bias=False)\r\n        self.bn1 = norm_layer(**({} if norm_kwargs is None else norm_kwargs))\r\n        self.conv2 = nn.Conv2D(64, kernel_size=3, strides=2, padding=1,\r\n                               use_bias=False)\r\n        self.bn2 = norm_layer(**({} if norm_kwargs is None else norm_kwargs))\r\n\r\n        self.stage1_cfg = cfg[0]\r\n        num_channels = self.stage1_cfg[3][0]\r\n        block = BLOCKS_DICT[self.stage1_cfg[1]]\r\n        num_blocks = self.stage1_cfg[2][0]\r\n        self.layer1 = self._make_layer(block, num_channels, num_blocks, inplanes=64)\r\n        stage1_out_channel = block.expansion*num_channels\r\n\r\n        self.stage2_cfg = cfg[1]\r\n        num_channels = self.stage2_cfg[3]\r\n        block = BLOCKS_DICT[self.stage2_cfg[1]]\r\n        num_channels = [\r\n            num_channels[i] * block.expansion for i in range(len(num_channels))]\r\n        self.transition1 = self._make_transition_layer(\r\n            [stage1_out_channel], num_channels, norm_layer, norm_kwargs)\r\n        self.stage2, pre_stage_channels = self._make_stage(\r\n            self.stage2_cfg, num_channels)\r\n\r\n        self.stage3_cfg = cfg[2]\r\n        num_channels = self.stage3_cfg[3]\r\n        block = BLOCKS_DICT[self.stage3_cfg[1]]\r\n        num_channels = [\r\n            num_channels[i] * block.expansion for i in range(len(num_channels))]\r\n        self.transition2 = self._make_transition_layer(\r\n            pre_stage_channels, num_channels, norm_layer, norm_kwargs)\r\n        self.stage3, pre_stage_channels = self._make_stage(\r\n            self.stage3_cfg, num_channels)\r\n\r\n        self.stage4_cfg = cfg[3]\r\n        num_channels = self.stage4_cfg[3]\r\n        block = BLOCKS_DICT[self.stage4_cfg[1]]\r\n        num_channels = [\r\n            num_channels[i] * block.expansion for i in range(len(num_channels))]\r\n        self.transition3 = self._make_transition_layer(\r\n            pre_stage_channels, num_channels, norm_layer, norm_kwargs)\r\n        self.stage4, pre_stage_channels = self._make_stage(\r\n            self.stage4_cfg, num_channels, multi_scale_output=True)\r\n\r\n        self.pre_stage_channels = pre_stage_channels\r\n\r\n    def _make_transition_layer(self, num_channels_pre_layer, num_channels_cur_layer,\r\n                               norm_layer=BatchNorm, norm_kwargs=None):\r\n        num_branches_cur = len(num_channels_cur_layer)\r\n        num_branches_pre = len(num_channels_pre_layer)\r\n\r\n        transition_layers = nn.HybridSequential()\r\n\r\n        for i in range(num_branches_cur):\r\n            if i < num_branches_pre:\r\n                if num_channels_cur_layer[i] != num_channels_pre_layer[i]:\r\n                    transition_layer = nn.HybridSequential()\r\n                    transition_layer.add(\r\n                        nn.Conv2D(num_channels_cur_layer[i], 3, 1, 1,\r\n                                  use_bias=False, in_channels=num_channels_pre_layer[i]),\r\n                        norm_layer(**({} if norm_kwargs is None else norm_kwargs)),\r\n                        nn.Activation('relu')\r\n                    )\r\n                    transition_layers.add(transition_layer)\r\n                else:\r\n                    transition_layers.add(contrib.nn.Identity())\r\n            else:\r\n                conv3x3s = nn.HybridSequential()\r\n                for j in range(i+1-num_branches_pre):\r\n                    inchannels = num_channels_pre_layer[-1]\r\n                    outchannels = num_channels_cur_layer[i] \\\r\n                        if j == i-num_branches_pre else inchannels\r\n                    cba = nn.HybridSequential()\r\n                    cba.add(\r\n                        nn.Conv2D(outchannels, 3, 2, 1,\r\n                                  use_bias=False, in_channels=inchannels),\r\n                        norm_layer(**({} if norm_kwargs is None else norm_kwargs)),\r\n                        nn.Activation('relu')\r\n                    )\r\n                    conv3x3s.add(cba)\r\n                transition_layers.add(conv3x3s)\r\n\r\n        return transition_layers\r\n\r\n    def _make_layer(self, block, planes, blocks, inplanes=0, stride=1):\r\n        downsample = stride != 1 or inplanes != planes * block.expansion\r\n\r\n        layers = nn.HybridSequential()\r\n        layers.add(block(planes* block.expansion, stride, downsample, inplanes))\r\n        for i in range(1, blocks):\r\n            layers.add(block(planes* block.expansion, 1, False, inplanes))\r\n\r\n        return layers\r\n\r\n    def _make_stage(self, layer_config, num_inchannels,\r\n                    multi_scale_output=True):\r\n        num_modules = layer_config[0]\r\n        num_blocks = layer_config[2]\r\n        num_branches = len(num_blocks)\r\n        num_channels = layer_config[3]\r\n        block = BLOCKS_DICT[layer_config[1]]\r\n        fuse_method = layer_config[4]\r\n\r\n        blocks = nn.HybridSequential()\r\n        for i in range(num_modules):\r\n            # multi_scale_output is only used last module\r\n            if not multi_scale_output and i == num_modules - 1:\r\n                reset_multi_scale_output = False\r\n            else:\r\n                reset_multi_scale_output = True\r\n            hrm = HighResolutionModule(num_branches,\r\n                                       block,\r\n                                       num_blocks,\r\n                                       num_channels,\r\n                                       fuse_method,\r\n                                       num_inchannels,\r\n                                       reset_multi_scale_output,\r\n                                       self.stage_interp_type)\r\n            blocks.add(hrm)\r\n            num_inchannels = hrm.get_num_inchannels()\r\n\r\n        return blocks, num_inchannels\r\n\r\n    def hybrid_forward(self, F, x):\r\n        x = self.conv1(x)\r\n        x = self.bn1(x)\r\n        x = F.relu(x)\r\n        x = self.conv2(x)\r\n        x = self.bn2(x)\r\n        x = F.relu(x)\r\n        x = self.layer1(x)\r\n        x_list = []\r\n\r\n        for i in range(len(self.stage2_cfg[2])):\r\n            x_list.append(self.transition1[i](x))\r\n\r\n        y_list = x_list\r\n        for s in self.stage2:\r\n            y_list = s(*y_list)\r\n\r\n        x_list = []\r\n        for i in range(len(self.stage3_cfg[2])):\r\n            if i < len(self.stage2_cfg[2]):\r\n                x_list.append(self.transition2[i](y_list[i]))\r\n            else:\r\n                x_list.append(self.transition2[i](y_list[-1]))\r\n\r\n        y_list = x_list\r\n        for s in self.stage3:\r\n            y_list = s(*y_list)\r\n\r\n        x_list = []\r\n        for i in range(len(self.stage4_cfg[2])):\r\n            if i < len(self.stage3_cfg[2]):\r\n                x_list.append(self.transition3[i](y_list[i]))\r\n            else:\r\n                x_list.append(self.transition3[i](y_list[-1]))\r\n\r\n        y_list = x_list\r\n        for s in self.stage4:\r\n            y_list = s(*y_list)\r\n\r\n        return y_list\r\n\r\nclass HighResolutionClsNet(HighResolutionBaseNet):\r\n    r\"\"\"HRNet for Classification\r\n    \"\"\"\r\n    def __init__(self, config, stage_interp_type='nearest', norm_layer=BatchNorm, norm_kwargs=None,\r\n                 num_classes=1000, **kwargs):\r\n        super(HighResolutionClsNet, self).__init__(config, stage_interp_type=stage_interp_type,\r\n                                                   norm_layer=norm_layer, norm_kwargs=norm_kwargs)\r\n\r\n        # Classification Head\r\n        self.incre_blocks, self.downsamp_blocks, \\\r\n        self.final_layer = self._make_head(self.pre_stage_channels, norm_layer, norm_kwargs)\r\n\r\n        # self.avg = nn.GlobalAvgPool2D()\r\n        #\r\n        # self.classifier = nn.Dense(num_classes, in_units=2048)\r\n\r\n    def hybrid_forward(self, F, x):\r\n        y_list = super(HighResolutionClsNet, self).hybrid_forward(F, x)\r\n\r\n        # Classification Head\r\n        y = self.incre_blocks[0](y_list[0])\r\n        for i in range(len(self.downsamp_blocks)):\r\n            y = self.incre_blocks[i+1](y_list[i+1]) + \\\r\n                self.downsamp_blocks[i](y)\r\n\r\n        y = self.final_layer(y)\r\n        # y = self.avg(y)\r\n        # y = self.classifier(y)\r\n\r\n        return y\r\n\r\n\r\n    def _make_head(self, pre_stage_channels, norm_layer=BatchNorm, norm_kwargs=None):\r\n        head_block = BLOCKS_DICT['BOTTLENECK']\r\n        head_channels = [32, 64, 128, 256]\r\n\r\n        incre_blocks = nn.HybridSequential()\r\n        for i, channels in enumerate(pre_stage_channels):\r\n            incre_block = self._make_layer(head_block,\r\n                                           head_channels[i],\r\n                                           1,\r\n                                           channels,\r\n                                           stride=1)\r\n            incre_blocks.add(incre_block)\r\n\r\n        downsamp_blocks = nn.HybridSequential()\r\n        for i in range(len(pre_stage_channels)-1):\r\n            in_channels = head_channels[i] * head_block.expansion\r\n            out_channels = head_channels[i+1] * head_block.expansion\r\n\r\n            downsamp_block = nn.HybridSequential()\r\n            downsamp_block.add(\r\n                nn.Conv2D(out_channels, 3, 2, 1, in_channels=in_channels),\r\n                norm_layer(**({} if norm_kwargs is None else norm_kwargs)),\r\n                nn.Activation('relu')\r\n            )\r\n            downsamp_blocks.add(downsamp_block)\r\n\r\n        final_layer = nn.HybridSequential()\r\n        final_layer.add(\r\n            nn.Conv2D(2048, 1, 1, 0, in_channels=head_channels[3] * head_block.expansion),\r\n            norm_layer(**({} if norm_kwargs is None else norm_kwargs)),\r\n            nn.Activation('relu')\r\n        )\r\n\r\n        return incre_blocks, downsamp_blocks, final_layer\r\n\r\n# pylint: disable=C0326\r\nHRNET_SPEC = {}\r\nHRNET_SPEC['w18'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],              'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [18, 36],          'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [18, 36, 72],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [18, 36, 72, 144], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w18_small_v1'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [1],           [32],              'SUM'),\r\n    (1,    'BASIC',      [2]*2,         [16, 32],          'SUM'),\r\n    (1,    'BASIC',      [2]*3,         [16, 32, 64],      'SUM'),\r\n    (1,    'BASIC',      [2]*4,         [16, 32, 64, 128], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w18_small_v2'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [2],           [64],               'SUM'),\r\n    (1,    'BASIC',      [2]*2,         [18, 36],           'SUM'),\r\n    (3,    'BASIC',      [2]*3,         [18, 36, 72],       'SUM'),\r\n    (2,    'BASIC',      [2]*4,         [18, 36, 72, 144],  'SUM')\r\n]\r\n\r\nHRNET_SPEC['w30'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],               'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [30, 60],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [30, 60, 120],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [30, 60, 120, 240], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w32'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],               'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [32, 64],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [32, 64, 128],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [32, 64, 128, 256], 'SUM')\r\n]\r\n\r\n\r\nHRNET_SPEC['w40'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],               'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [40, 80],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [40, 80, 160],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [40, 80, 160, 320], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w44'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],               'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [44, 88],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [44, 88, 176],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [44, 88, 176, 352], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w48'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],               'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [48, 96],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [48, 96, 192],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [48, 96, 192, 384], 'SUM')\r\n]\r\n\r\nHRNET_SPEC['w64'] = [\r\n    #modules, block_type, blocks, channels, fuse_method\r\n    (1,    'BOTTLENECK', [4],           [64],                'SUM'),\r\n    (1,    'BASIC',      [4]*2,         [64, 128],           'SUM'),\r\n    (4,    'BASIC',      [4]*3,         [64, 128, 256],      'SUM'),\r\n    (3,    'BASIC',      [4]*4,         [64, 128, 256, 512], 'SUM')\r\n]\r\n# pylint: enable=C0326\r\n\r\ndef get_hrnet(model_name, stage_interp_type='nearest', purpose='cls', pretrained=False, ctx=cpu(),\r\n              root='~/.mxnet/models', norm_layer=BatchNorm, norm_kwargs=None, num_classes=1000,\r\n              **kwargs):\r\n    r\"\"\"HRNet model from the\r\n    `\"Deep High-Resolution Representation Learning for Visual Recognition\"\r\n    <https://arxiv.org/pdf/1908.07919>`_ paper.\r\n\r\n    Parameters\r\n    ----------\r\n    model_name : string\r\n        The name of hrnet models: w18_small_v1/w18_small_v2/w30/w32/w40/w42/w48.\r\n    stage_interp_type : string\r\n        The interpolation type for upsample in each stage, nearest, bilinear and\r\n        bilinear_like are supported.\r\n    purpose: string\r\n        The purpose of model, cls and seg are supported.\r\n    pretrained : bool or str\r\n        Boolean value controls whether to load the default pretrained weights for model.\r\n        String value represents the hashtag for a certain version of pretrained weights.\r\n    ctx : Context, default CPU\r\n        The context in which to load the pretrained weights.\r\n    root : str, default $MXNET_HOME/models\r\n        Location for keeping the model parameters.\r\n    norm_layer : object\r\n        Normalization layer used (default: :class:`mxnet.gluon.nn.BatchNorm`)\r\n        Can be :class:`mxnet.gluon.nn.BatchNorm` or :class:`mxnet.gluon.contrib.nn.SyncBatchNorm`.\r\n    norm_kwargs : dict\r\n        Additional `norm_layer` arguments, for example `num_devices=4`\r\n        for :class:`mxnet.gluon.contrib.nn.SyncBatchNorm`.\r\n    \"\"\"\r\n    if model_name not in HRNET_SPEC.keys():\r\n        raise NotImplementedError\r\n\r\n    spec = HRNET_SPEC[model_name]\r\n\r\n    if purpose == 'cls':\r\n        net = HighResolutionClsNet(spec, stage_interp_type, norm_layer,\r\n                                   norm_kwargs, num_classes, **kwargs)\r\n        net.initialize(ctx=ctx)\r\n    else:\r\n        raise NotImplementedError\r\n\r\n    if pretrained:\r\n        from gluoncv.model_zoo.model_store import get_model_file\r\n        net.load_parameters(get_model_file('hrnet_%s_%s'%(model_name, purpose),\r\n                                           tag=pretrained, root=root), allow_missing=True, ignore_extra=True, ctx=ctx)\r\n    return net\r\n\r\ndef hrnet_w18_c(**kwargs):\r\n    r\"\"\"hrnet_w18 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w18', **kwargs)\r\n\r\ndef hrnet_w18_small_v1_c(**kwargs):\r\n    r\"\"\"hhrnet_w18_small_v1 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w18_small_v1', **kwargs)\r\n\r\ndef hrnet_w18_small_v2_c(**kwargs):\r\n    r\"\"\"hhrnet_w18_small_v2 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w18_small_v2', **kwargs)\r\n\r\ndef hrnet_w30_c(**kwargs):\r\n    r\"\"\"hhrnet_w30 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w30', **kwargs)\r\n\r\ndef hrnet_w32_c(**kwargs):\r\n    r\"\"\"hhrnet_w32 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w32', **kwargs)\r\n\r\ndef hrnet_w40_c(**kwargs):\r\n    r\"\"\"hhrnet_w40 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w40', **kwargs)\r\n\r\ndef hrnet_w44_c(**kwargs):\r\n    r\"\"\"hhrnet_w44 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w44', **kwargs)\r\n\r\ndef hrnet_w48_c(**kwargs):\r\n    r\"\"\"hhrnet_w48 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w48', **kwargs)\r\n\r\ndef hrnet_w64_c(**kwargs):\r\n    r\"\"\"hhrnet_w64 for Imagenet classification\r\n    \"\"\"\r\n    return get_hrnet('w64', **kwargs)\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    import os\r\n    import mxnet as mx\r\n\r\n    input_size = (512, 512)\r\n    root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))\r\n\r\n    # w18_small_v1, w18_small_v2, w30, w32, w40, w44, w48, w64\r\n    net = get_hrnet('w18', stage_interp_type=\"nearest\", pretrained=False, ctx=mx.gpu(0), root=os.path.join(root, 'modelparam'))\r\n    net.hybridize(active=True, static_alloc=True, static_shape=True)\r\n    output = net(mx.nd.random_uniform(low=0, high=1, shape=(1, 3, input_size[0], input_size[1]), ctx=mx.gpu(0)))\r\n    print(f\"< input size(height, width) : {input_size} >\")\r\n    print(f\"< output shape : {output.shape} >\")\r\n    '''\r\n    < input size(height, width) : (512, 512) >\r\n    < output shape : (1, 512, 16, 16) >\r\n    '''\r\n```\r\n\r\n## Steps to reproduce\r\n\r\n1. install mxnet 1.6.0 gpu version\r\n2. Execute the code described above.\r\n\r\n## What have you tried to solve it?\r\n\r\nI checked line by line. -> An error occurred in the HighResolutionBaseNet class.\r\n```python\r\n#The code below does not work properly as a starting point.\r\nfor s in self.stage2:\r\n    y_list = s(*y_list)\r\n```\r\n\r\n## Environment\r\nubuntu16.04 / cuda 10.1 / 418.56 driver\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18623", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18623/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18623/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18623/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18623", "id": 645967473, "node_id": "MDU6SXNzdWU2NDU5Njc0NzM=", "number": 18623, "title": "DataParallelExecutorGroup Issue? ", "user": {"login": "FranciscoReveriano", "id": 48685139, "node_id": "MDQ6VXNlcjQ4Njg1MTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/48685139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FranciscoReveriano", "html_url": "https://github.com/FranciscoReveriano", "followers_url": "https://api.github.com/users/FranciscoReveriano/followers", "following_url": "https://api.github.com/users/FranciscoReveriano/following{/other_user}", "gists_url": "https://api.github.com/users/FranciscoReveriano/gists{/gist_id}", "starred_url": "https://api.github.com/users/FranciscoReveriano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FranciscoReveriano/subscriptions", "organizations_url": "https://api.github.com/users/FranciscoReveriano/orgs", "repos_url": "https://api.github.com/users/FranciscoReveriano/repos", "events_url": "https://api.github.com/users/FranciscoReveriano/events{/privacy}", "received_events_url": "https://api.github.com/users/FranciscoReveriano/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T02:44:31Z", "updated_at": "2020-06-26T18:32:38Z", "closed_at": "2020-06-26T18:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I was wondering if this file was moved to a different location. I built MxNet from source and the following command no longer works: \r\nfrom mxnet.executor_manager import DataParallelExecutorGroup", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18611", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18611/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18611/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18611/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18611", "id": 643682827, "node_id": "MDU6SXNzdWU2NDM2ODI4Mjc=", "number": 18611, "title": "Failed to build from source with \"OSError: exception: access violation writing 0x0000000000000000\"", "user": {"login": "harrysekim", "id": 8053147, "node_id": "MDQ6VXNlcjgwNTMxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrysekim", "html_url": "https://github.com/harrysekim", "followers_url": "https://api.github.com/users/harrysekim/followers", "following_url": "https://api.github.com/users/harrysekim/following{/other_user}", "gists_url": "https://api.github.com/users/harrysekim/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrysekim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrysekim/subscriptions", "organizations_url": "https://api.github.com/users/harrysekim/orgs", "repos_url": "https://api.github.com/users/harrysekim/repos", "events_url": "https://api.github.com/users/harrysekim/events{/privacy}", "received_events_url": "https://api.github.com/users/harrysekim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T09:31:14Z", "updated_at": "2020-06-23T23:22:06Z", "closed_at": "2020-06-23T22:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI 'm trying to compile mxnet from source code in windows10, vs2017\r\nwith CPP_PACKAGE\r\n\r\n1. mxnet clone tag 1.6.0\r\n git clone --recursive -b 1.6.0 https://github.com/apache/incubator-mxnet mxnet_1.6.0\r\n\r\n2. set opencv, openblas env\r\nset OpenCV_DIR=C:\\opencv-3.4.1_with_freetype2\r\nset OpenBLAS_HOME=C:\\OpenBLAS-0.3.7-x64\r\n\r\n3. cmake\r\ncmake -G \"Visual Studio 15 2017 Win64\" -T cuda=10.1,host=x64 -DUSE_CUDA=1 -DBUILD_CPP_EXAMPLES=1 -DUSE_CPP_PACKAGE=1 -DUSE_CUDNN=1 -DUSE_NVRTC=1 -DUSE_OPENCV=1 -DUSE_OPENMP=1 -DUSE_BLAS=open -DUSE_LAPACK=1 -DUSE_DIST_KVSTORE=0 -DCUDA_ARCH_LIST=Common -DCUDA_TOOLSET=10.1 -DCUDNN_INCLUDE=\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.1\\include\" -DCUDNN_LIBRARY=\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.1\\lib\\x64\\cudnn.lib\" \"../\"\r\n\r\n4. build\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\MSBuild.exe\" mxnet.sln /p:Configuration=Release;Platform=x64 /maxcpucount \r\n### Error Message\r\n         Traceback (most recent call last):\r\n           File \"OpWrapperGenerator.py\", line 433, in <module>\r\n             raise(e)\r\n           File \"OpWrapperGenerator.py\", line 427, in <module>\r\n             f.write(patternStr % ParseAllOps())\r\n           File \"OpWrapperGenerator.py\", line 321, in ParseAllOps\r\n             cdll.libmxnet = cdll.LoadLibrary(sys.argv[1])\r\n           File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\ctypes\\__init__.py\", line 451, in LoadLibrary\r\n             return self._dlltype(name)\r\n           File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python38\\lib\\ctypes\\__init__.py\", line 373, in __init__\r\n             self._handle = _dlopen(self._name, mode)\r\n         FileNotFoundError: Could not find module 'C:\\Workspace\\mxnet_1.6.0\\build\\Release\\libmxnet.dll' (or one of its dependencies). Try using the full path with constructor syntax.\r\n\r\n5. copy dependents dll file to Release folder(**mxnet_1.6.0/build/Release**)\r\ncudart64_101.dll\r\n\r\n6. rebuild \r\n### Error Message\r\n         \"Running: OpWrapperGenerator.py\"\r\n         Traceback (most recent call last):\r\n           File \"OpWrapperGenerator.py\", line 433, in <module>\r\n             raise(e)\r\n           File \"OpWrapperGenerator.py\", line 427, in <module>\r\n             f.write(patternStr % ParseAllOps())\r\n           File \"OpWrapperGenerator.py\", line 338, in ParseAllOps\r\n             r = ListOP(byref(nOps), byref(opHandlers))\r\n         OSError: exception: access violation writing 0x0000000000000000\r\n\r\n7. copy dependents dll file to scripts folder(**mxnet_1.6.0/cpp-package/scripts**)\r\nlibgcc_s_seh-1.dlll\r\nibgfortran-3.dll\r\nlibopenblas.dll\r\nlibquadmath-0.dll\r\nmxnet_61.dll\r\nopencv_world341.dll\r\n\r\n8. in my case rebuild success\r\n\r\n--\r\n\r\n\r\n\r\n## Environment\r\n```\r\nS/W\r\nwindows10 64bit\r\npython 3.8.3\r\ncompiler : vs2017\r\nCUDA 10.1\r\n\r\nH/W\r\nGTX 1080Ti", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18610", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18610/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18610/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18610/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18610", "id": 643590801, "node_id": "MDU6SXNzdWU2NDM1OTA4MDE=", "number": 18610, "title": "BatchNorm running variables are not properly synchronized on CPU", "user": {"login": "anko-intel", "id": 58251767, "node_id": "MDQ6VXNlcjU4MjUxNzY3", "avatar_url": "https://avatars2.githubusercontent.com/u/58251767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anko-intel", "html_url": "https://github.com/anko-intel", "followers_url": "https://api.github.com/users/anko-intel/followers", "following_url": "https://api.github.com/users/anko-intel/following{/other_user}", "gists_url": "https://api.github.com/users/anko-intel/gists{/gist_id}", "starred_url": "https://api.github.com/users/anko-intel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anko-intel/subscriptions", "organizations_url": "https://api.github.com/users/anko-intel/orgs", "repos_url": "https://api.github.com/users/anko-intel/repos", "events_url": "https://api.github.com/users/anko-intel/events{/privacy}", "received_events_url": "https://api.github.com/users/anko-intel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 978567321, "node_id": "MDU6TGFiZWw5Nzg1NjczMjE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/MKLDNN", "name": "MKLDNN", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T07:10:33Z", "updated_at": "2020-07-01T14:45:11Z", "closed_at": "2020-07-01T14:45:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nDuring investigation of #14357 I have found that running_mean and running_var variables are sometimes not yet calculated when converted to NumPy.\r\n\r\n### Error Message\r\nWhen runing the python test from https://github.com/apache/incubator-mxnet/issues/14357#issuecomment-644887485 sometimes there is information that consecutive reads of the same variable differes, which means that backward pass is calculated after the first read:\r\n`var1 = layer2.running_var.data().asnumpy()`\r\nIt shouldn't happen as asnumpy() function should force all needed calculations to get running_var values.\r\nI such case the test shows a  message similar to the one below:\r\n```\r\nseed: 331752807\r\ncpu(0) - DIFF in running_var reads:\r\n   0 : [3.9974644 3.9977627 3.997775 ] \r\n   2 : [3.9962945 4.0025434 3.9987571]\r\ncpu(0) [3.9962945 4.0025434 3.9987571] [10.001289  9.997483 10.002162]\r\ngpu(0) [3.9962947 4.0025434 3.9987576] [10.001292  9.997481 10.002162]\r\n```\r\nVerified on master branch 959143696\r\n\r\n\r\n## To Reproduce\r\nrun python test from https://github.com/apache/incubator-mxnet/issues/14357#issuecomment-644887485\r\n\r\n## What have you tried to solve it?\r\n\r\nI already have the fix. I will put it to github soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18604", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18604/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18604/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18604/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18604", "id": 643228611, "node_id": "MDU6SXNzdWU2NDMyMjg2MTE=", "number": 18604, "title": "[Website] Java, Scala, C++, R, Clojure, and Julia API References redirect to 404", "user": {"login": "connorgoggins", "id": 25328906, "node_id": "MDQ6VXNlcjI1MzI4OTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/25328906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connorgoggins", "html_url": "https://github.com/connorgoggins", "followers_url": "https://api.github.com/users/connorgoggins/followers", "following_url": "https://api.github.com/users/connorgoggins/following{/other_user}", "gists_url": "https://api.github.com/users/connorgoggins/gists{/gist_id}", "starred_url": "https://api.github.com/users/connorgoggins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connorgoggins/subscriptions", "organizations_url": "https://api.github.com/users/connorgoggins/orgs", "repos_url": "https://api.github.com/users/connorgoggins/repos", "events_url": "https://api.github.com/users/connorgoggins/events{/privacy}", "received_events_url": "https://api.github.com/users/connorgoggins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-22T17:01:47Z", "updated_at": "2020-07-31T21:05:11Z", "closed_at": "2020-07-31T21:05:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nJava issue: trying to access the MXNet Java API reference from [this page](https://mxnet.apache.org/api/java.html) leads to a 404. This issue also extends to all of the other language docs mentioned in the title.\r\n\r\n### Error Message\r\n[404 page](https://mxnet.apache.org/api/java/docs/api/#org.apache.mxnet.infer.javaapi.package)\r\n\r\n## To Reproduce\r\nNavigate to the [MXNet Java homepage](https://mxnet.apache.org/api/java.html) or [Docs & Tutorials](https://mxnet.apache.org/api) on the MXNet website and try to access the MXNet Java API reference.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18596", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18596/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18596/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18596/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18596", "id": 642270822, "node_id": "MDU6SXNzdWU2NDIyNzA4MjI=", "number": 18596, "title": "TestNode.test_exports fails on macOS following \"Implement ONNX export for gluon LSTM\"", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T00:15:10Z", "updated_at": "2020-06-24T09:03:21Z", "closed_at": "2020-06-24T09:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n2020-06-19T19:50:34.0061500Z =================================== FAILURES ===================================\r\n2020-06-19T19:50:34.0062030Z ____________________________ TestNode.test_exports _____________________________\r\n2020-06-19T19:50:34.0064350Z [gw3] darwin -- Python 3.6.10 /Users/runner/hostedtoolcache/Python/3.6.10/x64/bin/python3\r\n2020-06-19T19:50:34.0064480Z \r\n2020-06-19T19:50:34.0064630Z self = <test_node.TestNode testMethod=test_exports>\r\n2020-06-19T19:50:34.0064700Z \r\n2020-06-19T19:50:34.0064820Z     def test_exports(self):\r\n2020-06-19T19:50:34.0064950Z         for test in export_test_cases:\r\n2020-06-19T19:50:34.0065460Z             test_name, onnx_name, mx_op, input_shape, attrs = test\r\n2020-06-19T19:50:34.0066030Z             input_sym = mx.sym.var('data')\r\n2020-06-19T19:50:34.0066250Z             if isinstance(mx_op, type) and issubclass(mx_op, (mx.gluon.HybridBlock, mx.gluon.SymbolBlock)):\r\n2020-06-19T19:50:34.0066520Z                 mx_op = mx_op(**attrs)\r\n2020-06-19T19:50:34.0066850Z                 mx_op.initialize()\r\n2020-06-19T19:50:34.0067320Z                 mx_op(mx.nd.zeros(input_shape))\r\n2020-06-19T19:50:34.0068010Z                 params = {k: v.data() for k, v in mx_op.collect_params().items()}\r\n2020-06-19T19:50:34.0068180Z                 outsym = mx_op(input_sym)\r\n2020-06-19T19:50:34.0068290Z             else:\r\n2020-06-19T19:50:34.0068530Z                 params = {}\r\n2020-06-19T19:50:34.0068990Z                 outsym = mx_op(input_sym, **attrs)\r\n2020-06-19T19:50:34.0069900Z             converted_model = onnx_mxnet.export_model(outsym, params, [input_shape], np.float32,\r\n2020-06-19T19:50:34.0070070Z >                                                     onnx_file_path=outsym.name + \".onnx\")\r\n2020-06-19T19:50:34.0070150Z \r\n2020-06-19T19:50:34.0071070Z tests/python/unittest/onnx/test_node.py:132: \r\n2020-06-19T19:50:34.0071440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n2020-06-19T19:50:34.0072310Z python/mxnet/contrib/onnx/mx2onnx/export_model.py:83: in export_model\r\n2020-06-19T19:50:34.0072470Z     verbose=verbose)\r\n2020-06-19T19:50:34.0073360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n2020-06-19T19:50:34.0073490Z \r\n2020-06-19T19:50:34.0074400Z self = <mxnet.contrib.onnx.mx2onnx.export_onnx.MXNetGraph object at 0x1485d5240>\r\n2020-06-19T19:50:34.0074560Z sym = <Symbol lstm12_rnn0>\r\n2020-06-19T19:50:34.0075830Z params = {'l0_h2h_bias': \r\n2020-06-19T19:50:34.0076400Z [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n2020-06-19T19:50:34.0076980Z <NDArray 12 @cpu(0)>, 'l0_h2h_weight': \r\n2020-06-19T19:50:34.0077470Z [[-0.02334689 -0.006454...  0.03353088]\r\n2020-06-19T19:50:34.0077600Z  [ 0.02073693  0.05509142]\r\n2020-06-19T19:50:34.0078090Z  [-0.05902549 -0.02687716]\r\n2020-06-19T19:50:34.0078570Z  [-0.00526763 -0.02571405]]\r\n2020-06-19T19:50:34.0078750Z <NDArray 12x2 @cpu(0)>}\r\n2020-06-19T19:50:34.0078880Z in_shape = [(3, 1, 2)], in_type = 1, verbose = False\r\n2020-06-19T19:50:34.0078980Z \r\n2020-06-19T19:50:34.0079110Z     def create_onnx_graph_proto(self, sym, params, in_shape, in_type, verbose=False):\r\n2020-06-19T19:50:34.0079240Z         \"\"\"Convert MXNet graph to ONNX graph\r\n2020-06-19T19:50:34.0079410Z     \r\n2020-06-19T19:50:34.0079520Z         Parameters\r\n2020-06-19T19:50:34.0079990Z         ----------\r\n2020-06-19T19:50:34.0080120Z         sym : :class:`~mxnet.symbol.Symbol`\r\n2020-06-19T19:50:34.0080240Z             MXNet symbol object\r\n2020-06-19T19:50:34.0080430Z         params : dict of ``str`` to :class:`~mxnet.ndarray.NDArray`\r\n2020-06-19T19:50:34.0080650Z             Dict of converted parameters stored in ``mxnet.ndarray.NDArray`` format\r\n2020-06-19T19:50:34.0081200Z         in_shape : List of tuple\r\n2020-06-19T19:50:34.0081380Z             Input shape of the model e.g [(1,3,224,224)]\r\n2020-06-19T19:50:34.0081500Z         in_type : data type\r\n2020-06-19T19:50:34.0081650Z             Input data type e.g. np.float32\r\n2020-06-19T19:50:34.0081940Z         verbose : Boolean\r\n2020-06-19T19:50:34.0082160Z             If true will print logs of the model conversion\r\n2020-06-19T19:50:34.0082320Z     \r\n2020-06-19T19:50:34.0082440Z         Returns\r\n2020-06-19T19:50:34.0083120Z         -------\r\n2020-06-19T19:50:34.0083270Z         graph : GraphProto\r\n2020-06-19T19:50:34.0083390Z             ONNX graph\r\n2020-06-19T19:50:34.0083550Z         \"\"\"\r\n2020-06-19T19:50:34.0083940Z         try:\r\n2020-06-19T19:50:34.0084870Z             from onnx import (checker, helper, NodeProto, ValueInfoProto, TensorProto)\r\n2020-06-19T19:50:34.0085040Z             from onnx.helper import make_tensor_value_info\r\n2020-06-19T19:50:34.0085180Z         except ImportError:\r\n2020-06-19T19:50:34.0085770Z             raise ImportError(\"Onnx and protobuf need to be installed. \"\r\n2020-06-19T19:50:34.0086660Z                               + \"Instructions to install - https://github.com/onnx/onnx\")\r\n2020-06-19T19:50:34.0086850Z     \r\n2020-06-19T19:50:34.0086980Z         # When MXNet model is saved to json file , MXNet adds a node for label.\r\n2020-06-19T19:50:34.0087480Z         # The name of this node is, name of the last node + \"_label\" ( i.e if last node\r\n2020-06-19T19:50:34.0088230Z         # name is \"Softmax\", this node will have a name \"Softmax_label\". Also, the new node\r\n2020-06-19T19:50:34.0088780Z         # will always be second last node in the json graph.\r\n2020-06-19T19:50:34.0089230Z         # Deriving the output_label name.\r\n2020-06-19T19:50:34.0090540Z         output_label = sym.get_internals()[len(sym.get_internals()) - 1].name + \"_label\"\r\n2020-06-19T19:50:34.0090720Z     \r\n2020-06-19T19:50:34.0090840Z         weights = MXNetGraph.convert_weights_to_numpy(params)\r\n2020-06-19T19:50:34.0091040Z     \r\n2020-06-19T19:50:34.0091210Z         mx_graph = json.loads(sym.tojson())[\"nodes\"]\r\n2020-06-19T19:50:34.0091340Z     \r\n2020-06-19T19:50:34.0091700Z         initializer = []\r\n2020-06-19T19:50:34.0091960Z         all_processed_nodes = []\r\n2020-06-19T19:50:34.0092290Z         onnx_processed_nodes = []\r\n2020-06-19T19:50:34.0092630Z         onnx_processed_inputs = []\r\n2020-06-19T19:50:34.0093510Z         onnx_processed_outputs = []\r\n2020-06-19T19:50:34.0093660Z         index_lookup = []\r\n2020-06-19T19:50:34.0093780Z     \r\n2020-06-19T19:50:34.0093900Z         # Determine output and internal shapes\r\n2020-06-19T19:50:34.0094790Z         graph_outputs = MXNetGraph.get_outputs(sym, params, in_shape, output_label)\r\n2020-06-19T19:50:34.0094980Z         graph_shapes = MXNetGraph.get_outputs(sym.get_internals(), params, in_shape, output_label, verbose=False)\r\n2020-06-19T19:50:34.0095330Z     \r\n2020-06-19T19:50:34.0095540Z         graph_input_idx = 0\r\n2020-06-19T19:50:34.0095840Z         for idx, node in enumerate(mx_graph):\r\n2020-06-19T19:50:34.0096120Z             op = node[\"op\"]\r\n2020-06-19T19:50:34.0096510Z             name = node[\"name\"]\r\n2020-06-19T19:50:34.0096770Z             if verbose:\r\n2020-06-19T19:50:34.0097640Z                 logging.info(\"Converting idx: %d, op: %s, name: %s\", idx, op, name)\r\n2020-06-19T19:50:34.0097790Z     \r\n2020-06-19T19:50:34.0097950Z             # A node is an input node if its op_name is \"null\" and is not\r\n2020-06-19T19:50:34.0098340Z             # in params dict\r\n2020-06-19T19:50:34.0098690Z             if op == \"null\" and name not in params:\r\n2020-06-19T19:50:34.0099030Z                 # Handling graph input\r\n2020-06-19T19:50:34.0099530Z     \r\n2020-06-19T19:50:34.0099860Z                 # Skipping output_label node, as this node is not part of graph\r\n2020-06-19T19:50:34.0100580Z                 # Refer \"output_label\" assignment above for more details.\r\n2020-06-19T19:50:34.0101330Z                 if name == output_label:\r\n2020-06-19T19:50:34.0101470Z                     continue\r\n2020-06-19T19:50:34.0101830Z                 converted = MXNetGraph.convert_layer(\r\n2020-06-19T19:50:34.0101960Z                     node,\r\n2020-06-19T19:50:34.0102100Z                     is_input=True,\r\n2020-06-19T19:50:34.0102230Z                     mx_graph=mx_graph,\r\n2020-06-19T19:50:34.0102970Z                     weights=weights,\r\n2020-06-19T19:50:34.0103150Z >                   in_shape=in_shape[graph_input_idx],\r\n2020-06-19T19:50:34.0103370Z                     in_type=in_type,\r\n2020-06-19T19:50:34.0103660Z                     proc_nodes=all_processed_nodes,\r\n2020-06-19T19:50:34.0104080Z                     graph_shapes=graph_shapes,\r\n2020-06-19T19:50:34.0104580Z                     initializer=initializer,\r\n2020-06-19T19:50:34.0104880Z                     index_lookup=index_lookup)\r\n2020-06-19T19:50:34.0105270Z E               IndexError: list index out of range\r\n2020-06-19T19:50:34.0105430Z \r\n2020-06-19T19:50:34.0106450Z python/mxnet/contrib/onnx/mx2onnx/export_onnx.py:233: IndexError\r\n```\r\n\r\nhttps://github.com/apache/incubator-mxnet/pull/17734\r\n\r\ncc @RuRo ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18591", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18591/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18591/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18591/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18591", "id": 641672214, "node_id": "MDU6SXNzdWU2NDE2NzIyMTQ=", "number": 18591, "title": "CPU memory leak when running inference on model with GPU", "user": {"login": "zhongqingyang", "id": 47876973, "node_id": "MDQ6VXNlcjQ3ODc2OTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/47876973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongqingyang", "html_url": "https://github.com/zhongqingyang", "followers_url": "https://api.github.com/users/zhongqingyang/followers", "following_url": "https://api.github.com/users/zhongqingyang/following{/other_user}", "gists_url": "https://api.github.com/users/zhongqingyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongqingyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongqingyang/subscriptions", "organizations_url": "https://api.github.com/users/zhongqingyang/orgs", "repos_url": "https://api.github.com/users/zhongqingyang/repos", "events_url": "https://api.github.com/users/zhongqingyang/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongqingyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T03:10:40Z", "updated_at": "2020-07-21T08:04:14Z", "closed_at": "2020-07-21T08:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI used cpp to inference on model with GPU in childthread.\r\ncpu Memory increase 0.1G after 72000 execution.\r\ncpu Memory increase 0.14G after 100000 execution.\r\ncpu Memory increase 0.236G after 163500 execution.\r\ncpu Memory increase 0.437G after 163500 execution.\r\ncpu Memory increase 2G after 643100 execution.\r\n\r\n### Here is my test code\r\n`\r\n#include <iostream>\r\n#include <opencv2/opencv.hpp>\r\n#include <mxnet-cpp/MxNetCpp.h>\r\n#include <zconf.h>\r\n#include <thread>\r\n#include <future>\r\n#include <unistd.h>\r\n#include <malloc.h>\r\n\r\n#define FILE_NAME_SIZE 255\r\n\r\n#include \"mxnet/c_predict_api.h\"\r\nusing namespace mxnet::cpp;\r\nusing namespace std;\r\n\r\nstd::vector<mx_uint> batch_size = {1, 3, 512, 896};//\u8bbe\u7f6e\u6a21\u5f0f\r\nContext global_ctx = Context::gpu();//\u6a21\u578b\u9009\u62e9\u7684\u8fd0\u884c\u8bbe\u5907cpu\u6216gpu\r\nmap<string, NDArray> args_map;//\u6846\u67b6\u5185\u90e8\u4fdd\u7559\u7684\u4ee3\u7801,\u521d\u59cb\u5316\u6a21\u578b\u6709\u7528\u5230\r\nmap<string, NDArray> aux_map;//\u6846\u67b6\u5185\u90e8\u4fdd\u7559\u7684\u4ee3\u7801,\u521d\u59cb\u5316\u6a21\u578b\u6709\u7528\u5230\r\nSymbol net;//\u7f51\u7edc\u5bf9\u8c61\r\nExecutor *executor = nullptr;//\u6267\u884c\u5668 \u7528\u4e8e\u7f51\u7edc\u524d\u5411\u4f20\u64ad\r\nstring model_type = \"YOLO\";\r\nmutex mut;\r\n\r\n\r\nvoid LoadParameters(string params) {\r\n    map<string, NDArray> parameters;\r\n    NDArray::Load(params, 0, &parameters);\r\n\r\n    for (const auto& pair : parameters) {\r\n        string type = pair.first.substr(0, 4);\r\n        string name = pair.first.substr(4);\r\n        if (type == \"arg:\") {\r\n            (args_map)[name] = pair.second.Copy(global_ctx);\r\n        } else if (type == \"aux:\") {\r\n            (aux_map)[name] = pair.second.Copy(global_ctx);\r\n        }\r\n    }\r\n\r\n    NDArray::WaitAll();\r\n}\r\n\r\nNDArray YOLOSSDTransform(vector<cv::Mat> ori_image_vec, int &new_height, int &new_width)\r\n{\r\n    int pre_H = 0, pre_W = 0;\r\n    int maxLongSide = 1024;\r\n    int short_side = 512;\r\n\r\n    //\u5224\u65ad\u662f\u5426\u6709\u8f93\u5165\u56fe\u7247\r\n    if (ori_image_vec.empty())\r\n    {\r\n        LG << \"\u8f93\u5165\u56fe\u7247\u4e3a\u7a7a\";\r\n        throw runtime_error(\"\u8f93\u5165\u56fe\u7247\u4e3a\u7a7a\");\r\n    }\r\n    //\u5224\u65ad\u8f93\u5165\u5c3a\u5bf8\u662f\u5426\u4e00\u81f4\r\n    for (auto & i : ori_image_vec)\r\n    {\r\n        if (pre_H == 0)\r\n        {\r\n            pre_H = i.rows;\r\n            pre_W = i.cols;\r\n        }\r\n        else\r\n        {\r\n            if (pre_H != i.rows || pre_W != i.cols)\r\n            {\r\n                LG << \"\u8f93\u5165\u56fe\u7247\u5c3a\u5bf8\u4e0d\u4e00\u81f4\";\r\n                throw runtime_error(\"\u8f93\u5165\u56fe\u7247\u5c3a\u5bf8\u4e0d\u4e00\u81f4!\");\r\n            }\r\n            pre_H = i.rows;\r\n            pre_W = i.cols;\r\n        }\r\n    }\r\n\r\n    int H = ori_image_vec[0].rows;\r\n    int W = ori_image_vec[0].cols;\r\n    float times;\r\n    vector<float> array;\r\n    //std::vector<uchar> array;\r\n    if (H > W)\r\n    { //\u5f53\u9ad8\u5927\u4e8e\u5bbd\u65f6\r\n        if ((H * short_side) > (maxLongSide * W))\r\n        { //\u5f53\u56fe\u7247\u8fc7\u4e8e\u72ed\u957f\u65f6,\u9009\u7528\u957f\u8fb9\u4e3a\u56fa\u5b9a\u8fb9\r\n            times = maxLongSide * 1.0 / H;\r\n        }\r\n        else\r\n        { //\u5f53\u56fe\u7247\u4e0d\u72ed\u957f\u65f6,\u9009\u7528\u77ed\u8fb9\u4e3a\u56fa\u5b9a\u8fb9\r\n            times = short_side * 1.0 / W;\r\n        }\r\n    }\r\n    else\r\n    { //\u5f53\u5bbd\u5927\u4e8e\u9ad8\u65f6\r\n        if ((W * short_side) > (maxLongSide * H))\r\n        { //\u5f53\u56fe\u7247\u8fc7\u4e8e\u72ed\u957f\u65f6,\u9009\u7528\u957f\u8fb9\u4e3a\u56fa\u5b9a\u8fb9\r\n            times = maxLongSide * 1.0 / W;\r\n        }\r\n        else\r\n        { //\u5f53\u56fe\u7247\u4e0d\u72ed\u957f\u65f6,\u9009\u7528\u77ed\u8fb9\u4e3a\u56fa\u5b9a\u8fb9\r\n            times = short_side * 1.0 / H;\r\n        }\r\n    }\r\n\r\n    if (model_type == \"YOLO\")\r\n    {\r\n        new_height = int(times * H) / 32 * 32;\r\n        new_width = int(times * W) / 32 * 32;\r\n    }\r\n    else if (model_type == \"SSD\")\r\n    {\r\n        new_height = int(times * H);\r\n        new_width = int(times * W);\r\n    }\r\n    else\r\n    {\r\n        LG << \"no model type  match with \" << model_type << \" !\" << endl;\r\n        throw runtime_error(\"wrong value with model type !\");\r\n    }\r\n    //\u56fe\u7247\u6807\u51c6\u5316\r\n    cv::Mat im;\r\n    int channels = 3;\r\n    int bach_size = ori_image_vec.size();\r\n    cv::resize(ori_image_vec[0], im, cv::Size(new_width, new_height));\r\n    int size = im.rows * im.cols * channels;\r\n    std::vector<std::vector<float>> files(bach_size);\r\n    files[0].resize(size);\r\n\r\n    float *image_data = files[0].data();\r\n    float *ptr_image_b = image_data;\r\n    float mean_b = 0.485;\r\n    float mean_g = 0.456;\r\n    float mean_r = 0.406;\r\n    float std_b = 0.229;\r\n    float std_g = 0.224;\r\n    float std_r = 0.225;\r\n\r\n    for (int i = 0; i < im.rows; ++i)\r\n    {\r\n        auto data = im.ptr<uchar>(i);\r\n        for (int j = 0; j < im.cols; j++)\r\n        {\r\n            *ptr_image_b++ = (static_cast<float>(*data++) / 255.0 - mean_b) / std_b;\r\n            *ptr_image_b++ = (static_cast<float>(*data++) / 255.0 - mean_g) / std_g;\r\n            *ptr_image_b++ = (static_cast<float>(*data++) / 255.0 - mean_r) / std_r;\r\n        }\r\n    }\r\n\r\n    //transpose shape from (h,w,c) to (c,h,w)\r\n    for (int k = 0; k < 1; k++)\r\n    {\r\n        for (int c = 0; c < 3; ++c)\r\n        {\r\n            for (int i = 0; i < new_height; ++i)\r\n            {\r\n                for (int j = 0; j < new_width; ++j)\r\n                {\r\n                    array.push_back(static_cast<float>(image_data[(i * new_width + j) * 3 + c]));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //expend shape from (c,h,w) to (1,c,h,w)\r\n    Shape image_shape = Shape(1, 3, new_height, new_width);\r\n    NDArray transformed_image = NDArray(image_shape, global_ctx, false);\r\n\r\n    transformed_image.SyncCopyFromCPU(array.data(), image_shape.Size());\r\n    NDArray::WaitAll();\r\n    return transformed_image;\r\n}\r\n\r\n\r\n//\r\nvoid PredictFromMat(const NDArray& normalized_images,const float &height_plus, const float &width_plus)\r\n{\r\n    std::lock_guard<std::mutex> _guard(mut);\r\n\r\n\r\n    normalized_images.CopyTo(&(executor->arg_dict()[\"data\"]));\r\n    NDArray::WaitAll();\r\n\r\n    // Run the forward pass.\r\n    executor->Forward(false);\r\n\r\n    // The output is available in executor->outputs.\r\n    auto ids = executor->outputs[0].Copy(Context(kCPU, 0));\r\n    auto scores = executor->outputs[1].Copy(Context(kCPU, 0));\r\n    auto bboxes = executor->outputs[2].Copy(Context(kCPU, 0));\r\n    NDArray::WaitAll();\r\n    malloc_trim(0);\r\n}\r\n\r\nint main() {\r\n\r\n\r\n\r\n\r\n    net = Symbol::Load(\"/home/enhance/workspace/json/walker-ssd-symbol.json\");\r\n    LoadParameters(\"/home/enhance/workspace/params/walker-ssd.params\");\r\n\r\n    //\u83b7\u53d6\u6267\u884c\u5668\r\n    args_map[\"data\"] = NDArray(Shape(batch_size), global_ctx);\r\n    executor = net.SimpleBind(global_ctx, args_map, map<string, NDArray>(),map<string, OpReqType>(),aux_map);\r\n\r\n    cv::Mat frame;\r\n    vector<cv::Mat>vframe;\r\n    frame = cv::imread(\"/home/enhance/png/0.jpg\");\r\n    vframe.push_back(frame);\r\n    int w,h;\r\n    NDArray normalized_images = YOLOSSDTransform(vframe,h,w);\r\n    frame.release();\r\n    vframe.clear();\r\n\r\n    for (auto i = 0;i<1000000;i++){\r\n        cout<<i<<endl;\r\n        auto fun = [&normalized_images, h, w] { return PredictFromMat(normalized_images, h, w); };\r\n        std::thread go(fun);\r\n        go.join();\r\n    }\r\n}\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18581", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18581/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18581/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18581/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18581", "id": 640744345, "node_id": "MDU6SXNzdWU2NDA3NDQzNDU=", "number": 18581, "title": "ImportError: cannot import name 'SyncBatchNorm'", "user": {"login": "GasparVardanyan", "id": 40148969, "node_id": "MDQ6VXNlcjQwMTQ4OTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/40148969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GasparVardanyan", "html_url": "https://github.com/GasparVardanyan", "followers_url": "https://api.github.com/users/GasparVardanyan/followers", "following_url": "https://api.github.com/users/GasparVardanyan/following{/other_user}", "gists_url": "https://api.github.com/users/GasparVardanyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/GasparVardanyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GasparVardanyan/subscriptions", "organizations_url": "https://api.github.com/users/GasparVardanyan/orgs", "repos_url": "https://api.github.com/users/GasparVardanyan/repos", "events_url": "https://api.github.com/users/GasparVardanyan/events{/privacy}", "received_events_url": "https://api.github.com/users/GasparVardanyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T21:10:40Z", "updated_at": "2020-07-04T09:01:55Z", "closed_at": "2020-06-22T21:09:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi! I've installed mxnet via the **mxnet-cu91** pip package, but running my script which has perfectly worked with the **mxnet** pip package I get this error:\r\n\r\nTraceback (most recent call last):\r\n  File \"./main.py\", line 44, in <module>\r\n    from gluoncv import model_zoo\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/__init__.py\", line 9, in <module>\r\n    from . import model_zoo\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/model_zoo/__init__.py\", line 3, in <module>\r\n    from .model_zoo import get_model, get_model_list\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/model_zoo/model_zoo.py\", line 9, in <module>\r\n    from .deeplabv3 import *\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/model_zoo/deeplabv3.py\", line 7, in <module>\r\n    from .segbase import SegBaseModel\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/model_zoo/segbase.py\", line 10, in <module>\r\n    from .resnest import resnest50, resnest101, resnest200, resnest269\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/model_zoo/resnest.py\", line 11, in <module>\r\n    from ..nn.dropblock import DropBlock\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/nn/__init__.py\", line 7, in <module>\r\n    from . import feature\r\n  File \"/home/paperspace/venv/lib/python3.6/site-packages/gluoncv/nn/feature.py\", line 13, in <module>\r\n    from mxnet.symbol.contrib import SyncBatchNorm\r\nImportError: cannot import name 'SyncBatchNorm'\r\n\r\nPlease help me to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18569", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18569/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18569/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18569/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18569", "id": 639140683, "node_id": "MDU6SXNzdWU2MzkxNDA2ODM=", "number": 18569, "title": "[Numpy] softmax, logsoftmax failed on empty ndarray", "user": {"login": "stu1130", "id": 6792331, "node_id": "MDQ6VXNlcjY3OTIzMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6792331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stu1130", "html_url": "https://github.com/stu1130", "followers_url": "https://api.github.com/users/stu1130/followers", "following_url": "https://api.github.com/users/stu1130/following{/other_user}", "gists_url": "https://api.github.com/users/stu1130/gists{/gist_id}", "starred_url": "https://api.github.com/users/stu1130/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stu1130/subscriptions", "organizations_url": "https://api.github.com/users/stu1130/orgs", "repos_url": "https://api.github.com/users/stu1130/repos", "events_url": "https://api.github.com/users/stu1130/events{/privacy}", "received_events_url": "https://api.github.com/users/stu1130/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 978567321, "node_id": "MDU6TGFiZWw5Nzg1NjczMjE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/MKLDNN", "name": "MKLDNN", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T20:44:30Z", "updated_at": "2020-07-02T01:44:50Z", "closed_at": "2020-07-01T14:43:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nlatest mxnet pip wheel\r\n```\r\nimport mxnet as mx\r\nfrom mxnet import npx\r\nnpx.set_np()\r\na = mx.np.array([]).reshape(2, 1, 0)\r\nb = mx.npx.softmax(a)\r\nb.wait_to_read()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/mxnet/ndarray/ndarray.py\", line 2353, in wait_to_read\r\n    check_call(_LIB.MXNDArrayWaitToRead(self.handle))\r\n  File \"/home/ubuntu/.local/lib/python3.5/site-packages/mxnet/base.py\", line 255, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [20:43:29] src/ndarray/ndarray.cc:507: Check failed: delay_alloc:\r\nStack trace:\r\n  [bt] (0) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x6d554b) [0x7efe143bd54b]\r\n  [bt] (1) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(mxnet::NDArray::Chunk::SetMKLMem(mxnet::TShape const&, int)+0x7b2) [0x7efe177b2082]\r\n  [bt] (2) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(mxnet::NDArray::GetMKLDNNData() const+0x70) [0x7efe177b6ae0]\r\n  [bt] (3) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(mxnet::op::MKLDNNSoftmaxForward(nnvm::NodeAttrs const&, mxnet::OpContext const&, mxnet::NDArray const&, mxnet::OpReqType const&, mxnet::NDArray const&)+0x564) [0x7efe14466a24]\r\n  [bt] (4) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x115e4bd) [0x7efe14e464bd]\r\n  [bt] (5) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(mxnet::imperative::PushFComputeEx(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::NDArray, std::allocator<mxnet::NDArray> > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::Resource, std::allocator<mxnet::Resource> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x3c4) [0x7efe1765e4f4]\r\n  [bt] (6) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x3895c84) [0x7efe1757dc84]\r\n  [bt] (7) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x38a3c31) [0x7efe1758bc31]\r\n  [bt] (8) /home/ubuntu/.local/lib/python3.5/site-packages/mxnet/libmxnet.so(+0x38a6fa4) [0x7efe1758efa4]\r\n```\r\nThe root cause should be missing proper zero-dim ndarray handle on the kernel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18567", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18567/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18567/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18567/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18567", "id": 639132684, "node_id": "MDU6SXNzdWU2MzkxMzI2ODQ=", "number": 18567, "title": "Anchor tags are shifted.", "user": {"login": "ys2843", "id": 23468760, "node_id": "MDQ6VXNlcjIzNDY4NzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/23468760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ys2843", "html_url": "https://github.com/ys2843", "followers_url": "https://api.github.com/users/ys2843/followers", "following_url": "https://api.github.com/users/ys2843/following{/other_user}", "gists_url": "https://api.github.com/users/ys2843/gists{/gist_id}", "starred_url": "https://api.github.com/users/ys2843/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ys2843/subscriptions", "organizations_url": "https://api.github.com/users/ys2843/orgs", "repos_url": "https://api.github.com/users/ys2843/repos", "events_url": "https://api.github.com/users/ys2843/events{/privacy}", "received_events_url": "https://api.github.com/users/ys2843/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T20:31:57Z", "updated_at": "2020-06-17T20:00:05Z", "closed_at": "2020-06-17T20:00:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Another issue: Anchor tags are shifted.\r\nAnchor tags exist, but they don't work properly. They are shifted by certain margin [potentially getting hidden by the header]\r\nFor ex: \r\n1. Go to contribute page : https://mxnet.apache.org/community/contribute.html\r\n2. Select a specific anchor : Setup MXNet for Development [https://mxnet.apache.org/community/contribute.html#setup-mxnet-for-development]\r\n3. It takes you here\r\n<img width=\"1439\" alt=\"Screen Shot 2020-05-27 at 11 14 57 AM\" src=\"https://user-images.githubusercontent.com/10992635/83057216-766a8c00-a00b-11ea-83da-0de634bd9df6.png\">\r\n\r\nBut it's supposed to show you this\r\n<img width=\"1440\" alt=\"Screen Shot 2020-05-27 at 11 14 44 AM\" src=\"https://user-images.githubusercontent.com/10992635/83057243-82eee480-a00b-11ea-92e7-3d9e027a2b1a.png\">\r\n\r\nThis looks like an easy fix and improves usability as anchor tags will start behaving correctly [rather than user having to scroll up to adjust the screen].\r\n\r\n_Originally posted by @ChaiBapchya in https://github.com/apache/incubator-mxnet/issues/17982#issuecomment-634850809_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18566", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18566/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18566/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18566/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18566", "id": 639089646, "node_id": "MDU6SXNzdWU2MzkwODk2NDY=", "number": 18566, "title": "Merge numpy.mxnet.io to MXNet official website", "user": {"login": "sandeep-krishnamurthy", "id": 3403674, "node_id": "MDQ6VXNlcjM0MDM2NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3403674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeep-krishnamurthy", "html_url": "https://github.com/sandeep-krishnamurthy", "followers_url": "https://api.github.com/users/sandeep-krishnamurthy/followers", "following_url": "https://api.github.com/users/sandeep-krishnamurthy/following{/other_user}", "gists_url": "https://api.github.com/users/sandeep-krishnamurthy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeep-krishnamurthy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeep-krishnamurthy/subscriptions", "organizations_url": "https://api.github.com/users/sandeep-krishnamurthy/orgs", "repos_url": "https://api.github.com/users/sandeep-krishnamurthy/repos", "events_url": "https://api.github.com/users/sandeep-krishnamurthy/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeep-krishnamurthy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T19:32:26Z", "updated_at": "2020-07-29T18:28:38Z", "closed_at": "2020-07-29T18:28:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n\r\nMigrate all content from numpy.mxnet.io to official mxnet website. Setup redirects appropriately to divert user traffic to mxnet official website.\r\n\r\n@ys2843 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18561", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18561/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18561/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18561/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18561", "id": 638428072, "node_id": "MDU6SXNzdWU2Mzg0MjgwNzI=", "number": 18561, "title": "array protocol support on memory sharing", "user": {"login": "szha", "id": 2626883, "node_id": "MDQ6VXNlcjI2MjY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2626883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szha", "html_url": "https://github.com/szha", "followers_url": "https://api.github.com/users/szha/followers", "following_url": "https://api.github.com/users/szha/following{/other_user}", "gists_url": "https://api.github.com/users/szha/gists{/gist_id}", "starred_url": "https://api.github.com/users/szha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szha/subscriptions", "organizations_url": "https://api.github.com/users/szha/orgs", "repos_url": "https://api.github.com/users/szha/repos", "events_url": "https://api.github.com/users/szha/events{/privacy}", "received_events_url": "https://api.github.com/users/szha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-14T20:50:43Z", "updated_at": "2020-08-01T00:06:18Z", "closed_at": "2020-08-01T00:06:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nFor arrays that share memory, np.may_share_memory doesn't work for numpy types yet.\r\n```\r\nimport mxnet as mx\r\nimport numpy as _np\r\nnp_array = _np.ones((3,5))\r\nmx_nd_array = mx.nd.from_numpy(np_array, zero_copy=True)\r\nmx_np_array = mx_nd_array.as_np_ndarray()\r\nmx_np_array[0, 0] = 2\r\n\r\nIn [42]: mx_np_array\r\nOut[42]:\r\narray([[2., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1.]], dtype=float64)\r\n\r\nIn [43]: mx_nd_array\r\nOut[43]:\r\n\r\n[[2. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1.]]\r\n<NDArray 3x5 @cpu(0)>\r\n\r\nIn [44]: np_array\r\nOut[44]:\r\narray([[2., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1.]])\r\n```\r\n\r\nThen, if we call `np.may_share_memory(np_array, mx_np_array)` or `np.may_share_memory(np_array, mx_nd_array)`, it returns\r\n```\r\nTypeError: no implementation found for 'numpy.may_share_memory' on types that implement __array_function__: [<class 'numpy.ndarray'>, <class 'mxnet.numpy.ndarray'>]\r\n```\r\n\r\nIt works for `_np.may_share_memory(mx_nd_array, mx_np_array)` though\r\n```\r\nTrue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18548", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18548/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18548/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18548/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18548", "id": 637918264, "node_id": "MDU6SXNzdWU2Mzc5MTgyNjQ=", "number": 18548, "title": "Merge beta.mxnet.io To MXNet Official Website", "user": {"login": "ys2843", "id": 23468760, "node_id": "MDQ6VXNlcjIzNDY4NzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/23468760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ys2843", "html_url": "https://github.com/ys2843", "followers_url": "https://api.github.com/users/ys2843/followers", "following_url": "https://api.github.com/users/ys2843/following{/other_user}", "gists_url": "https://api.github.com/users/ys2843/gists{/gist_id}", "starred_url": "https://api.github.com/users/ys2843/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ys2843/subscriptions", "organizations_url": "https://api.github.com/users/ys2843/orgs", "repos_url": "https://api.github.com/users/ys2843/repos", "events_url": "https://api.github.com/users/ys2843/events{/privacy}", "received_events_url": "https://api.github.com/users/ys2843/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T17:57:50Z", "updated_at": "2020-07-07T00:06:38Z", "closed_at": "2020-07-07T00:06:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Introduction\r\n\r\nMXNet developer community is committed to provide our customers the best user experience in exploring MXNet through the well maintained official website (https://mxnet.apache.org/). Given that there are several MXNet websites hosting a subset of documents, it benefits our users if we merge the good features and resources all to the official website to make it as the one stop for all MXNet customers.\r\n\r\n### Problems\r\n\r\n[beta.mxnet.io](http://beta.mxnet.io/) hosts Python and R documents with a subset of tutorials. According to Google Analytics it has 19741 year to date page views in 2020, however, this website is not maintained by MXNet engineer team and the contents have not been updated for more than 1 year. Visitors can be confused by different versions of MXNet website and documents.\r\n\r\n### Proposed Solution\r\n\r\nTo make MXNet official website the one-stop site for all visitors, this project aims to merge the outstanding features and supplement documents from beta.mxnet.io (http://beta.mxnet.io/) to MXNet official website. And redirect all traffic to the main site upon project completion.\r\n\r\n### Milestones\r\n\r\n1. Set up a restyled, bug-free, update to date R API micro-site on MXNet website\r\n2. Build user feedback widget based Google Analytics on MXNet website\r\n3. Close beta site and redirect all traffic to MXNet official website\r\n\r\n### Reference\r\n\r\n1. MXNet beta R docs site: http://beta.mxnet.io/r/index.html\r\n2. MXNet beta website Github repo: https://github.com/mli/new-docs\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18547", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18547/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18547/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18547/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18547", "id": 637865421, "node_id": "MDU6SXNzdWU2Mzc4NjU0MjE=", "number": 18547, "title": "website redirects needed", "user": {"login": "aaronmarkham", "id": 5974205, "node_id": "MDQ6VXNlcjU5NzQyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5974205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronmarkham", "html_url": "https://github.com/aaronmarkham", "followers_url": "https://api.github.com/users/aaronmarkham/followers", "following_url": "https://api.github.com/users/aaronmarkham/following{/other_user}", "gists_url": "https://api.github.com/users/aaronmarkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronmarkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronmarkham/subscriptions", "organizations_url": "https://api.github.com/users/aaronmarkham/orgs", "repos_url": "https://api.github.com/users/aaronmarkham/repos", "events_url": "https://api.github.com/users/aaronmarkham/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronmarkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T16:14:16Z", "updated_at": "2020-06-17T18:59:42Z", "closed_at": "2020-06-17T18:59:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nI'm sure there are more, but let's put them here for now (until this gets resolved and we have to open another issue)\r\n\r\n* https://mxnet.incubator.apache.org/versions/master/faq/model_parallel_lstm.html --> https://mxnet.apache.org/api/faq/model_parallel_lstm\r\n* https://mxnet.incubator.apache.org/versions/master/faq/multi_devices.html --> https://mxnet.apache.org/api/faq/distributed_training\r\n\r\nFor these maybe just a redirect of /master/faq/* --> /api/faq/* would be sufficient.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18544", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18544/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18544/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18544/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18544", "id": 637539281, "node_id": "MDU6SXNzdWU2Mzc1MzkyODE=", "number": 18544, "title": "Deferred computation API returns \"wrong\" data type given DeepNumpy input ", "user": {"login": "xidulu", "id": 26022201, "node_id": "MDQ6VXNlcjI2MDIyMjAx", "avatar_url": "https://avatars2.githubusercontent.com/u/26022201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xidulu", "html_url": "https://github.com/xidulu", "followers_url": "https://api.github.com/users/xidulu/followers", "following_url": "https://api.github.com/users/xidulu/following{/other_user}", "gists_url": "https://api.github.com/users/xidulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xidulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xidulu/subscriptions", "organizations_url": "https://api.github.com/users/xidulu/orgs", "repos_url": "https://api.github.com/users/xidulu/repos", "events_url": "https://api.github.com/users/xidulu/events{/privacy}", "received_events_url": "https://api.github.com/users/xidulu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T07:14:59Z", "updated_at": "2020-06-13T23:32:00Z", "closed_at": "2020-06-13T23:32:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```scala\r\nfrom mxnet import np, npx\r\nfrom mxnet.gluon import HybridBlock\r\n\r\nclass block1(HybridBlock):\r\n    def hybrid_forward(self, F, x):\r\n        return x + 1\r\n\r\nclass block2(HybridBlock):\r\n    def forward(self, x):\r\n        return x + 1\r\n\r\nnet1 = block1()\r\nnet1.hybridize()\r\nnet2 = block2()\r\nnet2.hybridize()\r\n\r\nprint(type(net1(np.ones((2,2)))))\r\n\r\nprint(type(net2(np.ones((2,2)))))\r\n\r\n```\r\n\r\n\r\nOut:\r\n```python\r\n<class 'mxnet.numpy.ndarray'>\r\n<class 'mxnet.ndarray.ndarray.NDArray'>\r\n```\r\n\r\nNot sure what the output type from forward() is supposed to be, but it should be consistent with that from hybrid_foward()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18540", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18540/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18540/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18540/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18540", "id": 637459186, "node_id": "MDU6SXNzdWU2Mzc0NTkxODY=", "number": 18540, "title": "DataLoader Operator stack inferring shapes failed", "user": {"login": "mikethreeacer", "id": 19503278, "node_id": "MDQ6VXNlcjE5NTAzMjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/19503278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikethreeacer", "html_url": "https://github.com/mikethreeacer", "followers_url": "https://api.github.com/users/mikethreeacer/followers", "following_url": "https://api.github.com/users/mikethreeacer/following{/other_user}", "gists_url": "https://api.github.com/users/mikethreeacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikethreeacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikethreeacer/subscriptions", "organizations_url": "https://api.github.com/users/mikethreeacer/orgs", "repos_url": "https://api.github.com/users/mikethreeacer/repos", "events_url": "https://api.github.com/users/mikethreeacer/events{/privacy}", "received_events_url": "https://api.github.com/users/mikethreeacer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T03:34:29Z", "updated_at": "2020-06-12T05:43:21Z", "closed_at": "2020-06-12T05:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI tried to use custom dataset with dataloader to train a model. \r\nThe error appears when use dataloader to get a batch.\r\nImages are loaded in dataset correctly but all images and labels are None in batch.\r\n\r\n```\r\nimport glob\r\nfrom PIL import Image\r\n\r\nimport mxnet\r\nfrom mxnet import nd\r\nfrom mxnet.gluon.data import Dataset\r\n\r\n\r\nclass data(Dataset):\r\n    def __init__(self, root_dir):    \r\n        self.files = sorted(glob.glob(root_dir + '/*/*'))\r\n        self.label = [nd.array(0) if x.split('/')[-1] == 'test' else nd.array(1) for x in self.files]\r\n\r\n    def __len__(self):\r\n        return len(self.files)\r\n    \r\n    def __getitem__(self, idx):\r\n        image = Image.open(self.files[idx])\r\n        image = nd.array(image)\r\n        label = self.label[idx]\r\n        return image, label\r\n\r\ndataset = data(data_root)\r\ntest_dataset = dataset\r\ntest_loader = mxnet.gluon.data.DataLoader(test_dataset, batch_size = 4)\r\n\r\nfor (image, label) in train_loader:\r\n    print(image)\r\n    print(label)\r\n```\r\n\r\n### Error Message\r\n```\r\nmxnet.base.MXNetError: [11:21:44] src/imperative/./imperative_utils.h:146: Operator stack inferring shapes failed.\r\ninput shapes:\r\nNone\r\nNone\r\nNone\r\nNone\r\noutput shapes:\r\nNone\r\noperator attributes:\r\nnum_args : 4\r\n\r\nStack trace:\r\n  [bt] (0) /home/***/.virtualenvs/torch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x6d554b) [0x7fed620f254b]\r\n  [bt] (1) /home/***/.virtualenvs/torch/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::imperative::SetShapeType(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::DispatchMode*)+0x363b) [0x7fed6538de8b]\r\n  [bt] (2) /home/***/.virtualenvs/torch/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::Imperative::Invoke(mxnet::Context const&, nnvm::NodeAttrs const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)+0x1db) [0x7fed65395dcb]\r\n  [bt] (3) /home/***/.virtualenvs/torch/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x3839f1f) [0x7fed65256f1f]\r\n  [bt] (4) /home/***/.virtualenvs/torch/lib/python3.6/site-packages/mxnet/libmxnet.so(MXImperativeInvokeEx+0x62) [0x7fed652574e2]\r\n  [bt] (5) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7fedacfc9dae]\r\n  [bt] (6) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x22f) [0x7fedacfc971f]\r\n  [bt] (7) /usr/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(_ctypes_callproc+0x2b4) [0x7fedad20a5c4]\r\n  [bt] (8) /usr/lib/python3.6/lib-dynload/_ctypes.cpython-36m-x86_64-linux-gnu.so(+0x11c33) [0x7fedad20ac33]\r\n```\r\n\r\n## Environment\r\n\r\nmxnet-cu101mkl 1.6.0\r\nubuntu 18.04\r\ncuda 10.1\r\npython 3.6.9\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18539", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18539/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18539/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18539/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18539", "id": 637304097, "node_id": "MDU6SXNzdWU2MzczMDQwOTc=", "number": 18539, "title": "mxnet.executor.backward does not compute the true values of gradients at all", "user": {"login": "modeste2015", "id": 16214860, "node_id": "MDQ6VXNlcjE2MjE0ODYw", "avatar_url": "https://avatars2.githubusercontent.com/u/16214860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/modeste2015", "html_url": "https://github.com/modeste2015", "followers_url": "https://api.github.com/users/modeste2015/followers", "following_url": "https://api.github.com/users/modeste2015/following{/other_user}", "gists_url": "https://api.github.com/users/modeste2015/gists{/gist_id}", "starred_url": "https://api.github.com/users/modeste2015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/modeste2015/subscriptions", "organizations_url": "https://api.github.com/users/modeste2015/orgs", "repos_url": "https://api.github.com/users/modeste2015/repos", "events_url": "https://api.github.com/users/modeste2015/events{/privacy}", "received_events_url": "https://api.github.com/users/modeste2015/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T20:35:14Z", "updated_at": "2020-06-12T01:36:46Z", "closed_at": "2020-06-12T01:36:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`mxnet.executor.backward` gives false values of gradient. the gradient of `a` must be equal to `[2 2]` and the gradient of `b` must equal to  `[1 1]`. mxnet.executor.backward gives instead `[8 14]` and `[4 7]`. It seems the error do not come from python [file](https://github.com/apache/incubator-mxnet/blob/master/python/mxnet/executor.py). The issue comes from c++ [file](https://github.com/apache/incubator-mxnet/blob/master/src/executor/graph_executor.cc)  because result is the same in Julia. `mx.executor.backward` calls in fact `GraphExecutor::Backward`.\r\n```python\r\nimport mxnet as mx\r\n\r\na = mx.sym.Variable('a')\r\nb = mx.sym.Variable('b')\r\n# c is not a loss function symbol\r\nc = 2 * a + b\r\nargs = {'a': mx.nd.array([1,2]), 'b':mx.nd.array([2,3])}\r\nargs_grad = {'a': mx.nd.zeros((2)), 'b': mx.nd.zeros((2))}\r\ntexec = c.bind(ctx=mx.cpu(), args=args, args_grad=args_grad)\r\nout = texec.forward(is_train=True)[0].copy()\r\nprint(out.asnumpy())\r\n# answer [ 4.  7.]\r\n# out_grads is the head gradient in backward pass.\r\n# Here we define 'c' as loss function.\r\n# Then 'out' is passed as head gradient of backward pass.\r\ntexec.backward(out)\r\nprint(texec.grad_arrays[0].asnumpy())\r\n# answer[ 8.  14.]\r\nprint(texec.grad_arrays[1].asnumpy())\r\n# answer [ 4.  7.]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18536", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18536/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18536/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18536/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18536", "id": 636978829, "node_id": "MDU6SXNzdWU2MzY5Nzg4Mjk=", "number": 18536, "title": "MXNET build not working on armv7 (raspberry pi 4)", "user": {"login": "woreom", "id": 15047794, "node_id": "MDQ6VXNlcjE1MDQ3Nzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/15047794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woreom", "html_url": "https://github.com/woreom", "followers_url": "https://api.github.com/users/woreom/followers", "following_url": "https://api.github.com/users/woreom/following{/other_user}", "gists_url": "https://api.github.com/users/woreom/gists{/gist_id}", "starred_url": "https://api.github.com/users/woreom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woreom/subscriptions", "organizations_url": "https://api.github.com/users/woreom/orgs", "repos_url": "https://api.github.com/users/woreom/repos", "events_url": "https://api.github.com/users/woreom/events{/privacy}", "received_events_url": "https://api.github.com/users/woreom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-11T12:38:34Z", "updated_at": "2020-07-16T12:54:21Z", "closed_at": "2020-07-16T12:54:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nOkay this is the following of #18471 , I used the new instruction but I get an error still\r\nthe latest would be `virtual memory exhausted: Cannot allocate memory ninja: build stopped: subcommand failed.` on the last 4 files (mxnet-1.6.0). I also tried other versions from 1.2.1 to 1.6.0 and all the prebuilds that were available (I think it was mxnet-1.5.0) . the all resulted in an error unfortunately I didn't save all the errors but here are some of them.\r\nversion 1.6.0\r\n```\r\n[1/4] Building CXX object CMakeFiles/m...r/src/operator/numpy/np_einsum_op.cc.o\r\nFAILED: CMakeFiles/mxnet.dir/src/operator/numpy/np_einsum_op.cc.o \r\n/usr/bin/ccache /usr/bin/c++  -DDMLC_CORE_USE_CMAKE -DDMLC_LOG_FATAL_THROW=1 -DDMLC_LOG_STACK_TRACE_SIZE=0 -DDMLC_MODERN_THREAD_LOCAL=0 -DDMLC_STRICT_CXX11 -DDMLC_USE_CXX11 -DDMLC_USE_CXX11=1 -DDMLC_USE_CXX14 -DMSHADOW_INT64_TENSOR_SIZE=0 -DMSHADOW_IN_CXX11 -DMSHADOW_USE_CBLAS=1 -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_F16C=0 -DMSHADOW_USE_MKL=0 -DMSHADOW_USE_SSE=0 -DMXNET_USE_BLAS_OPEN=1 -DMXNET_USE_LAPACK=1 -DMXNET_USE_LIBJPEG_TURBO=0 -DMXNET_USE_OPENCV=1 -DMXNET_USE_OPENMP=1 -DMXNET_USE_OPERATOR_TUNING=1 -DMXNET_USE_SIGNAL_HANDLER=1 -DNDEBUG=1 -D__USE_XOPEN2K8 -Dmxnet_EXPORTS -I../include -I../src -I../3rdparty/nvidia_cub -I../3rdparty/tvm/nnvm/include -I../3rdparty/tvm/include -I../3rdparty/dmlc-core/include -I../3rdparty/dlpack/include -I../3rdparty/mshadow -I3rdparty/dmlc-core/include -isystem /usr/include/arm-linux-gnueabihf -isystem /usr/local/include/opencv4 -Wall -Wno-sign-compare -O3 -fopenmp -O3 -DNDEBUG -fPIC   -Wno-unused-parameter -Wno-unknown-pragmas -Wno-unused-local-typedefs -std=gnu++17 -MD -MT CMakeFiles/mxnet.dir/src/operator/numpy/np_einsum_op.cc.o -MF CMakeFiles/mxnet.dir/src/operator/numpy/np_einsum_op.cc.o.d -o CMakeFiles/mxnet.dir/src/operator/numpy/np_einsum_op.cc.o -c ../src/operator/numpy/np_einsum_op.cc\r\nIn file included from /usr/include/c++/8/vector:69,\r\n                 from ../include/dmlc/registry.h:11,\r\n                 from ../include/mxnet/operator_util.h:37,\r\n                 from ../src/operator/numpy/./np_einsum_op-inl.h:46,\r\n                 from ../src/operator/numpy/np_einsum_op.cc:58:\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = mxnet::op::Alternative; _Alloc = std::allocator<mxnet::op::Alternative>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:159:5: note: parameter passing for argument of type \u2018std::vector<mxnet::op::Alternative>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019} changed in GCC 7.1\r\n     vector<_Tp, _Alloc>::\r\n     ^~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const mxnet::op::Alternative&}; _Tp = mxnet::op::Alternative; _Alloc = std::allocator<mxnet::op::Alternative>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:413:7: note: parameter passing for argument of type \u2018std::vector<mxnet::op::Alternative>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019} changed in GCC 7.1\r\n       vector<_Tp, _Alloc>::\r\n       ^~~~~~~~~~~~~~~~~~~\r\nIn file included from /usr/include/c++/8/vector:64,\r\n                 from ../include/dmlc/registry.h:11,\r\n                 from ../include/mxnet/operator_util.h:37,\r\n                 from ../src/operator/numpy/./np_einsum_op-inl.h:46,\r\n                 from ../src/operator/numpy/np_einsum_op.cc:58:\r\n/usr/include/c++/8/bits/stl_vector.h: In function \u2018void mxnet::op::_update_other_results(std::vector<mxnet::op::Alternative>*, const mxnet::op::Alternative&)\u2019:\r\n/usr/include/c++/8/bits/stl_vector.h:1318:58: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019 changed in GCC 7.1\r\n       { return _M_erase(begin() + (__position - cbegin())); }\r\n                                                          ^\r\n/usr/include/c++/8/bits/stl_vector.h: In function \u2018std::vector<std::vector<int> > mxnet::op::_greedy_path(const SetVector*, const std::bitset<128>&, const dim_t*, size_t)\u2019:\r\n/usr/include/c++/8/bits/stl_vector.h:1085:4: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019 changed in GCC 7.1\r\n    _M_realloc_insert(end(), __x);\r\n    ^~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/stl_vector.h:1085:4: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019 changed in GCC 7.1\r\n    _M_realloc_insert(end(), __x);\r\n    ^~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/stl_vector.h:1085:4: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::op::Alternative*, std::vector<mxnet::op::Alternative> >\u2019 changed in GCC 7.1\r\n    _M_realloc_insert(end(), __x);\r\n    ^~~~~~~~~~~~~~~~~\r\nIn file included from /usr/include/c++/8/vector:69,\r\n                 from ../include/dmlc/registry.h:11,\r\n                 from ../include/mxnet/operator_util.h:37,\r\n                 from ../src/operator/numpy/./np_einsum_op-inl.h:46,\r\n                 from ../src/operator/numpy/np_einsum_op.cc:58:\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:159:5: note: parameter passing for argument of type \u2018std::vector<mxnet::TBlob>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<mxnet::TBlob*, std::vector<mxnet::TBlob> >\u2019} changed in GCC 7.1\r\n     vector<_Tp, _Alloc>::\r\n     ^~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {mxnet::TBlob}; _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:413:7: note: parameter passing for argument of type \u2018std::vector<mxnet::TBlob>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<mxnet::TBlob*, std::vector<mxnet::TBlob> >\u2019} changed in GCC 7.1\r\n       vector<_Tp, _Alloc>::\r\n       ^~~~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {mxnet::TBlob}; _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:109:4: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::TBlob*, std::vector<mxnet::TBlob> >\u2019 changed in GCC 7.1\r\n    _M_realloc_insert(end(), std::forward<_Args>(__args)...);\r\n    ^~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/vector.tcc: In member function \u2018void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const mxnet::TBlob&}; _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/vector.tcc:413:7: note: parameter passing for argument of type \u2018std::vector<mxnet::TBlob>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<mxnet::TBlob*, std::vector<mxnet::TBlob> >\u2019} changed in GCC 7.1\r\n       vector<_Tp, _Alloc>::\r\n       ^~~~~~~~~~~~~~~~~~~\r\nIn file included from /usr/include/c++/8/vector:64,\r\n                 from ../include/dmlc/registry.h:11,\r\n                 from ../include/mxnet/operator_util.h:37,\r\n                 from ../src/operator/numpy/./np_einsum_op-inl.h:46,\r\n                 from ../src/operator/numpy/np_einsum_op.cc:58:\r\n/usr/include/c++/8/bits/stl_vector.h: In member function \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/stl_vector.h:1085:4: note: parameter passing for argument of type \u2018__gnu_cxx::__normal_iterator<mxnet::TBlob*, std::vector<mxnet::TBlob> >\u2019 changed in GCC 7.1\r\n    _M_realloc_insert(end(), __x);\r\n    ^~~~~~~~~~~~~~~~~\r\n/usr/include/c++/8/bits/stl_vector.h: In function \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = mxnet::TBlob; _Alloc = std::allocator<mxnet::TBlob>]\u2019:\r\n/usr/include/c++/8/bits/stl_vector.h:515:7: note: parameter passing for argument of type \u2018std::initializer_list<mxnet::TBlob>\u2019 changed in GCC 7.1\r\n       vector(initializer_list<value_type> __l,\r\n       ^~~~~~\r\nvirtual memory exhausted: Cannot allocate memory\r\nninja: build stopped: subcommand failed.\r\n\r\n```\r\nversion 1.5.0\r\n```\r\n[1/3] Linking CXX executable im2rec\r\nFAILED: im2rec \r\n: && /usr/bin/c++  -Wall -Wno-unknown-pragmas -Wno-sign-compare -O3 -std=c++11 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -fopenmp -std=c++0x -O3 -DNDEBUG  -rdynamic CMakeFiles/im2rec.dir/tools/im2rec.cc.o  -o im2rec  -Wl,-rpath,/usr/local/lib -Wl,--whole-archive libmxnet.a -Wl,--no-whole-archive -lopenblas -lrt -ljemalloc -llapack -ljemalloc /usr/local/lib/libopencv_highgui.so.4.0.0 3rdparty/dmlc-core/libdmlc.a -llapack /usr/local/lib/libopencv_videoio.so.4.0.0 /usr/local/lib/libopencv_imgcodecs.so.4.0.0 /usr/local/lib/libopencv_imgproc.so.4.0.0 /usr/local/lib/libopencv_core.so.4.0.0 -lrt && :\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_exit_api()':\r\nc_api_profile.cc:(.text+0xa3c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xa78): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xbb8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_enter_api(char const*) [clone .part.617]':\r\nc_api_profile.cc:(.text+0xed8): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xf20): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileSetCounter':\r\nc_api_profile.cc:(.text+0x265c): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileAdjustCounter':\r\nc_api_profile.cc:(.text+0x2828): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0x2880): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::MarkVariables(std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)':\r\nimperative.cc:(.text+0xa38): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::RecordOp(nnvm::NodeAttrs&&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::OpStatePtr const&, std::vector<bool, std::allocator<bool> >*, std::vector<bool, std::allocator<bool> >*)':\r\nimperative.cc:(.text+0x37ac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: imperative.cc:(.text+0x3a10): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::StorageImpl::Alloc(mxnet::Storage::Handle*)':\r\nstorage.cc:(.text+0x3460): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::profiler::ProfileCounter::operator-=(long long)':\r\nstorage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x20): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x5c): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0xac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x2dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::storage::DeviceStorageProfiler::OnFree(mxnet::Storage::Handle const&)':\r\nstorage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x17c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x240): undefined reference to `__atomic_store_8'\r\ncollect2: error: ld returned 1 exit status\r\n[2/3] Linking CXX executable example/i...edict-cpp/image-classification-predict\r\nFAILED: example/image-classification/predict-cpp/image-classification-predict \r\n: && /usr/bin/c++  -Wall -Wno-unknown-pragmas -Wno-sign-compare -O3 -std=c++11 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -fopenmp -std=c++0x -O3 -DNDEBUG  -rdynamic example/image-classification/predict-cpp/CMakeFiles/image-classification-predict.dir/image-classification-predict.cc.o  -o example/image-classification/predict-cpp/image-classification-predict  -Wl,-rpath,/usr/local/lib -Wl,--whole-archive libmxnet.a -Wl,--no-whole-archive 3rdparty/dmlc-core/libdmlc.a -lopenblas -lrt -ljemalloc /usr/local/lib/libopencv_highgui.so.4.0.0 -llapack -ljemalloc -lrt -llapack /usr/local/lib/libopencv_videoio.so.4.0.0 /usr/local/lib/libopencv_imgcodecs.so.4.0.0 /usr/local/lib/libopencv_imgproc.so.4.0.0 /usr/local/lib/libopencv_core.so.4.0.0 && :\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_exit_api()':\r\nc_api_profile.cc:(.text+0xa3c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xa78): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xbb8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_enter_api(char const*) [clone .part.617]':\r\nc_api_profile.cc:(.text+0xed8): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xf20): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileSetCounter':\r\nc_api_profile.cc:(.text+0x265c): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileAdjustCounter':\r\nc_api_profile.cc:(.text+0x2828): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0x2880): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::MarkVariables(std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)':\r\nimperative.cc:(.text+0xa38): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::RecordOp(nnvm::NodeAttrs&&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::OpStatePtr const&, std::vector<bool, std::allocator<bool> >*, std::vector<bool, std::allocator<bool> >*)':\r\nimperative.cc:(.text+0x37ac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: imperative.cc:(.text+0x3a10): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::StorageImpl::Alloc(mxnet::Storage::Handle*)':\r\nstorage.cc:(.text+0x3460): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::profiler::ProfileCounter::operator-=(long long)':\r\nstorage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x20): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x5c): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0xac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x2dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::storage::DeviceStorageProfiler::OnFree(mxnet::Storage::Handle const&)':\r\nstorage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x17c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x240): undefined reference to `__atomic_store_8'\r\ncollect2: error: ld returned 1 exit status\r\n[3/3] Linking CXX executable tests/mxnet_unit_tests\r\nFAILED: tests/mxnet_unit_tests \r\n: && /usr/bin/c++  -Wall -Wno-unknown-pragmas -Wno-sign-compare -O3 -std=c++11 -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -fopenmp -std=c++0x -O3 -DNDEBUG  -rdynamic tests/CMakeFiles/mxnet_unit_tests.dir/cpp/engine/engine_shutdown_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/engine/threaded_engine_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/kvstore/gpu_topology_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/misc/base.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/misc/libinfo_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/batchnorm_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/coreop_perf.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/dropout_perf.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/fully_conn_perf.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/krprod_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/mkldnn_operator_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/mkldnn_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/runner/core_op_runner_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/slice_channel_perf.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/tune/operator_tune_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/storage/storage_test.cc.o tests/CMakeFiles/mxnet_unit_tests.dir/cpp/test_main.cc.o  -o tests/mxnet_unit_tests  -Wl,-rpath,/usr/local/lib lib/libgtest.a -Wl,--whole-archive libmxnet.a -Wl,--no-whole-archive 3rdparty/dmlc-core/libdmlc.a -lopenblas -lrt -ljemalloc /usr/local/lib/libopencv_highgui.so.4.0.0 -llapack -ljemalloc -lrt -llapack /usr/local/lib/libopencv_videoio.so.4.0.0 /usr/local/lib/libopencv_imgcodecs.so.4.0.0 /usr/local/lib/libopencv_imgproc.so.4.0.0 /usr/local/lib/libopencv_core.so.4.0.0 && :\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `dmlc::LogCheckError dmlc::LogCheck_NE<std::atomic<unsigned long long>, unsigned int>(std::atomic<unsigned long long> const&, unsigned int const&)':\r\nactivation_perf.cc:(.text._ZN4dmlc11LogCheck_NEISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_[_ZN4dmlc11LogCheck_NEISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_]+0x1c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN4dmlc11LogCheck_NEISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_[_ZN4dmlc11LogCheck_NEISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_]+0x74): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `dmlc::LogCheckError dmlc::LogCheck_EQ<std::atomic<unsigned long long>, unsigned int>(std::atomic<unsigned long long> const&, unsigned int const&)':\r\nactivation_perf.cc:(.text._ZN4dmlc11LogCheck_EQISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_[_ZN4dmlc11LogCheck_EQISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_]+0x1c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN4dmlc11LogCheck_EQISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_[_ZN4dmlc11LogCheck_EQISt6atomicIyEjEENS_13LogCheckErrorERKT_RKT0_]+0x74): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `mxnet::test::perf::TimingInstrument::Info::Info(mxnet::test::perf::TimingInstrument::Info const&)':\r\nactivation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument4InfoC2ERKS3_[_ZN5mxnet4test4perf16TimingInstrument4InfoC5ERKS3_]+0x34): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o:activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument4InfoC2ERKS3_[_ZN5mxnet4test4perf16TimingInstrument4InfoC5ERKS3_]+0x50): more undefined references to `__atomic_load_8' follow\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `mxnet::test::perf::TimingInstrument::stopTiming(int, unsigned int)':\r\nactivation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument10stopTimingEij[_ZN5mxnet4test4perf16TimingInstrument10stopTimingEij]+0x140): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument10stopTimingEij[_ZN5mxnet4test4perf16TimingInstrument10stopTimingEij]+0x37c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument10stopTimingEij[_ZN5mxnet4test4perf16TimingInstrument10stopTimingEij]+0x394): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument10stopTimingEij[_ZN5mxnet4test4perf16TimingInstrument10stopTimingEij]+0x3a8): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument10stopTimingEij[_ZN5mxnet4test4perf16TimingInstrument10stopTimingEij]+0x3bc): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `mxnet::test::perf::TimingInstrument::startTiming(int, char const*)':\r\nactivation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument11startTimingEiPKc[_ZN5mxnet4test4perf16TimingInstrument11startTimingEiPKc]+0x88): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument11startTimingEiPKc[_ZN5mxnet4test4perf16TimingInstrument11startTimingEiPKc]+0x174): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `mxnet::test::perf::TimingInstrument::reset()':\r\nactivation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5resetEv[_ZN5mxnet4test4perf16TimingInstrument5resetEv]+0xec): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5resetEv[_ZN5mxnet4test4perf16TimingInstrument5resetEv]+0x240): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5resetEv[_ZN5mxnet4test4perf16TimingInstrument5resetEv]+0x274): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `void mxnet::test::perf::TimingInstrument::print<std::ostream>(std::ostream*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)':\r\nactivation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb[_ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb]+0x280): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb[_ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb]+0x2dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb[_ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb]+0x304): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb[_ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb]+0x33c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o:activation_perf.cc:(.text._ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb[_ZN5mxnet4test4perf16TimingInstrument5printISoEEvPT_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb]+0x454): more undefined references to `__atomic_load_8' follow\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/activation_perf.cc.o: in function `mxnet::test::OperatorRunner<mxnet::test::op::CoreOpProp, mxnet::test::op::CoreOpExecutor<float, float> >::TimingTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, int, unsigned int, std::vector<mxnet::TShape, std::allocator<mxnet::TShape> > const&, bool)':\r\nactivation_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb[_ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb]+0x704): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb[_ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb]+0x710): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: activation_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb[_ZN5mxnet4test14OperatorRunnerINS0_2op10CoreOpPropENS2_14CoreOpExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISC_SC_ESaISH_EEijRKSF_INS_6TShapeESaISM_EEb]+0x724): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/slice_channel_perf.cc.o: in function `mxnet::test::OperatorRunner<mxnet::op::SliceChannelProp, mxnet::test::op::LegacyOperatorExecutor<float, float> >::TimingTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, int, unsigned int, std::vector<mxnet::TShape, std::allocator<mxnet::TShape> > const&, bool)':\r\nslice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0x91c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: slice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0x950): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: slice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0xa68): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: slice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0xa80): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: slice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0xa8c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: slice_channel_perf.cc:(.text._ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb[_ZN5mxnet4test14OperatorRunnerINS_2op16SliceChannelPropENS0_2op22LegacyOperatorExecutorIffEEE10TimingTestERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbRKSt6vectorISt4pairISD_SD_ESaISI_EEijRKSG_INS_6TShapeESaISN_EEb]+0xaa0): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/batchnorm_test.cc.o: in function `mxnet::test::perf::TimingInstrument::operator+=(mxnet::test::perf::TimingInstrument const&)':\r\nbatchnorm_test.cc:(.text._ZN5mxnet4test4perf16TimingInstrumentpLERKS2_[_ZN5mxnet4test4perf16TimingInstrumentpLERKS2_]+0xcc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: batchnorm_test.cc:(.text._ZN5mxnet4test4perf16TimingInstrumentpLERKS2_[_ZN5mxnet4test4perf16TimingInstrumentpLERKS2_]+0xe4): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: batchnorm_test.cc:(.text._ZN5mxnet4test4perf16TimingInstrumentpLERKS2_[_ZN5mxnet4test4perf16TimingInstrumentpLERKS2_]+0xf0): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: batchnorm_test.cc:(.text._ZN5mxnet4test4perf16TimingInstrumentpLERKS2_[_ZN5mxnet4test4perf16TimingInstrumentpLERKS2_]+0x104): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/tune/operator_tune_test.cc.o: in function `mxnet::test::tune::TuningTester<float>::CalculateModeSort(mxnet::test::op::TimingDirection, bool) const':\r\noperator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIfE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIfE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1c8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: operator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIfE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIfE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/tune/operator_tune_test.cc.o: in function `mxnet::test::tune::TuningTester<double>::CalculateModeSort(mxnet::test::op::TimingDirection, bool) const':\r\noperator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIdE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIdE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1c8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: operator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIdE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIdE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/tune/operator_tune_test.cc.o: in function `mxnet::test::tune::TuningTester<mshadow::half::half_t>::CalculateModeSort(mxnet::test::op::TimingDirection, bool) const':\r\noperator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIN7mshadow4half6half_tEE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIN7mshadow4half6half_tEE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1c8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: tests/CMakeFiles/mxnet_unit_tests.dir/cpp/operator/tune/operator_tune_test.cc.o:operator_tune_test.cc:(.text._ZNK5mxnet4test4tune12TuningTesterIN7mshadow4half6half_tEE17CalculateModeSortENS0_2op15TimingDirectionEb[_ZNK5mxnet4test4tune12TuningTesterIN7mshadow4half6half_tEE17CalculateModeSortENS0_2op15TimingDirectionEb]+0x1dc): more undefined references to `__atomic_load_8' follow\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_exit_api()':\r\nc_api_profile.cc:(.text+0xa78): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xbb8): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `mxnet::on_enter_api(char const*) [clone .part.617]':\r\nc_api_profile.cc:(.text+0xed8): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0xf20): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileSetCounter':\r\nc_api_profile.cc:(.text+0x265c): undefined reference to `__atomic_store_8'\r\n/usr/bin/ld: libmxnet.a(c_api_profile.cc.o): in function `MXProfileAdjustCounter':\r\nc_api_profile.cc:(.text+0x2828): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: c_api_profile.cc:(.text+0x2880): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::MarkVariables(std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&)':\r\nimperative.cc:(.text+0xa38): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(imperative.cc.o): in function `mxnet::Imperative::RecordOp(nnvm::NodeAttrs&&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, mxnet::OpStatePtr const&, std::vector<bool, std::allocator<bool> >*, std::vector<bool, std::allocator<bool> >*)':\r\nimperative.cc:(.text+0x37ac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: imperative.cc:(.text+0x3a10): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::StorageImpl::Alloc(mxnet::Storage::Handle*)':\r\nstorage.cc:(.text+0x3460): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::profiler::ProfileCounter::operator-=(long long)':\r\nstorage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x20): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x5c): undefined reference to `__atomic_fetch_sub_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0xac): undefined reference to `__atomic_fetch_add_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet8profiler14ProfileCountermIEx[_ZN5mxnet8profiler14ProfileCountermIEx]+0x2dc): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: libmxnet.a(storage.cc.o): in function `mxnet::storage::DeviceStorageProfiler::OnFree(mxnet::Storage::Handle const&)':\r\nstorage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x17c): undefined reference to `__atomic_load_8'\r\n/usr/bin/ld: storage.cc:(.text._ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE[_ZN5mxnet7storage21DeviceStorageProfiler6OnFreeERKNS_7Storage6HandleE]+0x240): undefined reference to `__atomic_store_8'\r\ncollect2: error: ld returned 1 exit status\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nversion 1.4.1\r\n```\r\nninja -j4\r\n[0/4] Building CXX object CMakeFiles/m...r/src/operator/tensor/indexing_op[1/4] Building CXX object CMakeFile...rc/operator/tensor/indexing_op.cc.o\r\nFAILED: CMakeFiles/mxnet.dir/src/operator/tensor/indexing_op.cc.o\r\n/usr/bin/ccache /usr/bin/c++  -DDMLC_CORE_USE_CMAKE -DDMLC_LOG_FATAL_THROW=1 -DDMLC_LOG_STACK_TRACE_SIZE=0 -DDMLC_MODERN_THREAD_LOCAL=0 -DDMLC_STRICT_CXX11 -DDMLC_USE_CXX11 -DDMLC_USE_CXX11=1 -DDMLC_USE_CXX14 -DMSHADOW_INT64_TENSOR_SIZE=0 -DMSHADOW_IN_CXX11 -DMSHADOW_USE_CBLAS=1 -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_MKL=0 -DMSHADOW_USE_SSE=0 -DMXNET_USE_BLAS_OPEN=1 -DMXNET_USE_LAPACK=1 -DMXNET_USE_LIBJPEG_TURBO=0 -DMXNET_USE_OPENCV=1 -DMXNET_USE_OPENMP=1 -DMXNET_USE_OPERATOR_TUNING=1 -DMXNET_USE_SIGNAL_HANDLER=1 -DNDEBUG=1 -D__USE_XOPEN2K8 -Dmxnet_EXPORTS -I../include -I../src -I../3rdparty/nvidia_cub -I../3rdparty/tvm/nnvm/include -I../3rdparty/tvm/include -I../3rdparty/dmlc-core/include -I../3rdparty/dlpack/include -I../3rdparty/mshadow -I3rdparty/dmlc-core/include -isystem /usr/include/opencv4 -Wall -Wno-sign-compare -O3  -O3 -DNDEBUG -fPIC   -Wno-unused-parameter -Wno-unknown-pragmas -Wno-unused-local-typedefs -mf16c -std=gnu++17 -MD -MT CMakeFiles/mxnet.dir/src/operator/tensor/indexing_op.cc.o -MF CMakeFiles/mxnet.dir/src/operator/tensor/indexing_op.cc.o.d -o CMakeFiles/mxnet.dir/src/operator/tensor/indexing_op.cc.o -c ../src/operator/tensor/indexing_op.cc\r\nc++: fatal error: Killed signal terminated program cc1plus\r\ncompilation terminated.\r\nninja: build stopped: subcommand failed.\r\n```\r\nversion 1.2.1\r\n```\r\nMakefile:166: \"USE_LAPACK disabled because libraries were not found\"\r\nMakefile:264: WARNING: Significant performance increases can be achieved by installing and enabling gperftools or jemalloc development packages\r\ncd /mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dmlc-core; make libdmlc.a USE_SSE=0 config=/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/make/config.mk; cd /mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating\r\nmake[1]: Entering directory '/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dmlc-core'\r\nmake[1]: 'libdmlc.a' is up to date.\r\nmake[1]: Leaving directory '/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dmlc-core'\r\ng++ -DMSHADOW_FORCE_STREAM -Wall -Wsign-compare -O3 -DNDEBUG=1 -I/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/mshadow/ -I/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dmlc-core/include -fPIC -I/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/nnvm/include -I/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dlpack/include -I/mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/nnvm/tvm/include -Iinclude -funroll-loops -Wno-unused-parameter -Wno-unknown-pragmas -Wno-unused-local-typedefs -DMSHADOW_USE_SSE=0 -DMSHADOW_USE_F16C=0 -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_CBLAS=1 -DMSHADOW_USE_MKL=0 -DMSHADOW_RABIT_PS=0 -DMSHADOW_DIST_PS=0 -DMSHADOW_USE_PASCAL=0 -DMXNET_USE_OPENCV=1 -I/usr/include/opencv -fopenmp -DMXNET_USE_OPERATOR_TUNING=1  -DMXNET_USE_NCCL=0 -DMXNET_USE_LIBJPEG_TURBO=0 -std=c++11  -o bin/im2rec tools/im2rec.cc build/src/operator/nn/mkldnn/mkldnn_convolution.o build/src/operator/nn/mkldnn/mkldnn_concat.o build/src/operator/nn/mkldnn/mkldnn_base.o build/src/operator/nn/mkldnn/mkldnn_act.o build/src/operator/nn/mkldnn/mkldnn_softmax.o build/src/operator/nn/mkldnn/mkldnn_deconvolution.o build/src/operator/nn/mkldnn/mkldnn_copy.o build/src/operator/nn/mkldnn/mkldnn_fully_connected.o build/src/operator/nn/mkldnn/mkldnn_pooling.o build/src/operator/nn/mkldnn/mkldnn_sum.o build/src/operator/nn/cudnn/cudnn_algoreg.o build/src/operator/nn/cudnn/cudnn_batch_norm.o build/src/operator/tensor/elemwise_binary_broadcast_op_basic.o build/src/operator/tensor/elemwise_binary_op_logic.o build/src/operator/tensor/square_sum.o build/src/operator/tensor/matrix_op.o build/src/operator/tensor/init_op.o build/src/operator/tensor/elemwise_binary_broadcast_op_extended.o build/src/operator/tensor/broadcast_reduce_op_index.o build/src/operator/tensor/dot.o build/src/operator/tensor/elemwise_scatter_op.o build/src/operator/tensor/elemwise_unary_op_basic.o build/src/operator/tensor/broadcast_reduce_op_value.o build/src/operator/tensor/elemwise_binary_op.o build/src/operator/tensor/control_flow_op.o build/src/operator/tensor/elemwise_binary_op_basic.o build/src/operator/tensor/elemwise_binary_scalar_op_basic.o build/src/operator/tensor/elemwise_binary_scalar_op_extended.o build/src/operator/tensor/indexing_op.o build/src/operator/tensor/elemwise_binary_broadcast_op_logic.o build/src/operator/tensor/la_op.o build/src/operator/tensor/sparse_retain.o build/src/operator/tensor/elemwise_binary_op_extended.o build/src/operator/tensor/ordering_op.o build/src/operator/tensor/elemwise_sum.o build/src/operator/tensor/cast_storage.o build/src/operator/tensor/elemwise_binary_scalar_op_logic.o build/src/operator/tensor/elemwise_unary_op_trig.o build/src/operator/contrib/multibox_target.o build/src/operator/contrib/count_sketch.o build/src/operator/contrib/krprod.o build/src/operator/contrib/deformable_psroi_pooling.o build/src/operator/contrib/ctc_loss.o build/src/operator/contrib/quadratic_op.o build/src/operator/contrib/multi_proposal.o build/src/operator/contrib/bounding_box.o build/src/operator/contrib/multibox_prior.o build/src/operator/contrib/bilinear_resize.o build/src/operator/contrib/fft.o build/src/operator/contrib/proposal.o build/src/operator/contrib/psroi_pooling.o build/src/operator/contrib/deformable_convolution.o build/src/operator/contrib/ifft.o build/src/operator/contrib/multibox_detection.o build/src/operator/contrib/adaptive_avg_pooling.o build/src/operator/custom/native_op.o build/src/operator/custom/ndarray_op.o build/src/operator/custom/custom.o build/src/operator/image/image_random.o build/src/operator/nnpack/nnpack_util.o build/src/operator/random/sample_multinomial_op.o build/src/operator/random/multisample_op.o build/src/operator/random/sample_op.o build/src/operator/random/shuffle_op.o build/src/operator/nn/softmax.o build/src/operator/nn/pooling.o build/src/operator/nn/deconvolution.o build/src/operator/nn/activation.o build/src/operator/nn/upsampling.o build/src/operator/nn/fully_connected.o build/src/operator/nn/convolution.o build/src/operator/nn/lrn.o build/src/operator/nn/layer_norm.o build/src/operator/nn/concat.o build/src/operator/nn/softmax_activation.o build/src/operator/nn/batch_norm.o build/src/operator/nn/dropout.o build/src/operator/quantization/requantize.o build/src/operator/quantization/dequantize.o build/src/operator/quantization/quantize_graph_pass.o build/src/operator/quantization/quantized_flatten.o build/src/operator/quantization/quantized_conv.o build/src/operator/quantization/quantized_fully_connected.o build/src/operator/quantization/quantized_pooling.o build/src/operator/quantization/quantize.o build/src/io/io.o build/src/io/image_aug_default.o build/src/io/iter_image_det_recordio.o build/src/io/image_io.o build/src/io/image_det_aug_default.o build/src/io/iter_csv.o build/src/io/iter_image_recordio.o build/src/io/iter_mnist.o build/src/io/iter_image_recordio_2.o build/src/io/iter_libsvm.o build/src/common/utils.o build/src/common/rtc.o build/src/nnvm/legacy_op_util.o build/src/nnvm/tvm_bridge.o build/src/nnvm/legacy_json_util.o build/src/profiler/profiler.o build/src/profiler/aggregate_stats.o build/src/profiler/vtune.o build/src/imperative/cached_op.o build/src/imperative/imperative.o build/src/ndarray/ndarray_function.o build/src/ndarray/ndarray.o build/src/operator/sequence_last.o build/src/operator/svm_output.o build/src/operator/instance_norm.o build/src/operator/grid_generator.o build/src/operator/swapaxis.o build/src/operator/pooling_v1.o build/src/operator/loss_binary_op.o build/src/operator/rnn.o build/src/operator/convolution_v1.o build/src/operator/crop.o build/src/operator/sequence_reverse.o build/src/operator/pad.o build/src/operator/bilinear_sampler.o build/src/operator/softmax_output.o build/src/operator/operator_tune.o build/src/operator/roi_pooling.o build/src/operator/slice_channel.o build/src/operator/batch_norm_v1.o build/src/operator/cross_device_copy.o build/src/operator/l2_normalization.o build/src/operator/regression_output.o build/src/operator/make_loss.o build/src/operator/identity_attach_KL_sparse_reg.o build/src/operator/operator.o build/src/operator/optimizer_op.o build/src/operator/correlation.o build/src/operator/operator_util.o build/src/operator/spatial_transformer.o build/src/operator/leaky_relu.o build/src/operator/sequence_mask.o build/src/engine/naive_engine.o build/src/engine/openmp.o build/src/engine/threaded_engine_pooled.o build/src/engine/threaded_engine.o build/src/engine/engine.o build/src/engine/threaded_engine_perdevice.o build/src/storage/storage.o build/src/c_api/c_api_executor.o build/src/c_api/c_api_symbolic.o build/src/c_api/c_api_profile.o build/src/c_api/c_api_ndarray.o build/src/c_api/c_predict_api.o build/src/c_api/c_api_function.o build/src/c_api/c_api.o build/src/c_api/c_api_error.o build/src/executor/inplace_addto_detect_pass.o build/src/executor/graph_executor.o build/src/executor/infer_graph_attr_pass.o build/src/executor/attach_op_execs_pass.o build/src/executor/attach_op_resource_pass.o build/src/kvstore/gradient_compression.o build/src/kvstore/kvstore_utils.o build/src/kvstore/kvstore.o build/src/resource.o build/src/initialize.o /mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/dmlc-core/libdmlc.a /mnt/USB/.mxnet/mxnet-1.2.1/apache-mxnet-src-1.2.1-incubating/3rdparty/nnvm/lib/libnnvm.a -pthread -lm -lcblas -fopenmp -lrt -lopencv_shape -lopencv_stitching -lopencv_superres -lopencv_videostab -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_datasets -lopencv_dpm -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hdf -lopencv_line_descriptor -lopencv_optflow -lopencv_video -lopencv_plot -lopencv_reg -lopencv_saliency -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_rgbd -lopencv_viz -lopencv_surface_matching -lopencv_text -lopencv_ximgproc -lopencv_calib3d -lopencv_features2d -lopencv_flann -lopencv_xobjdetect -lopencv_objdetect -lopencv_ml -lopencv_xphoto -lopencv_highgui -lopencv_videoio -lopencv_imgcodecs -lopencv_photo -lopencv_imgproc -lopencv_core \r\n/usr/bin/ld: build/src/storage/storage.o: undefined reference to symbol '__atomic_fetch_sub_8@@LIBATOMIC_1.0'\r\n/usr/bin/ld: //usr/lib/arm-linux-gnueabihf/libatomic.so.1: error adding symbols: DSO missing from command line\r\ncollect2: error: ld returned 1 exit status\r\nmake: *** [Makefile:496: bin/im2rec] Error 1\r\n\r\n```\r\n\r\nI need to finish my project and it's already passed its deadline. I kinda really need mxnet to finish it, I would appreciate it if you helped me with instructions on how to build, cross-compile or even make a prebuild that works on armv71.\r\nalso, you can find more information on #18471 \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18524", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18524/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18524/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18524/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18524", "id": 635331697, "node_id": "MDU6SXNzdWU2MzUzMzE2OTc=", "number": 18524, "title": "Can't run YOLOv3 in gpu, not enough workspace size", "user": {"login": "smileyzyw", "id": 16618502, "node_id": "MDQ6VXNlcjE2NjE4NTAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16618502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smileyzyw", "html_url": "https://github.com/smileyzyw", "followers_url": "https://api.github.com/users/smileyzyw/followers", "following_url": "https://api.github.com/users/smileyzyw/following{/other_user}", "gists_url": "https://api.github.com/users/smileyzyw/gists{/gist_id}", "starred_url": "https://api.github.com/users/smileyzyw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smileyzyw/subscriptions", "organizations_url": "https://api.github.com/users/smileyzyw/orgs", "repos_url": "https://api.github.com/users/smileyzyw/repos", "events_url": "https://api.github.com/users/smileyzyw/events{/privacy}", "received_events_url": "https://api.github.com/users/smileyzyw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-09T11:02:19Z", "updated_at": "2020-06-10T06:51:50Z", "closed_at": "2020-06-10T03:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nhi, guys, I recently tried to run the yolov3 example code provided in [07. Train YOLOv3 on PASCAL VOC](https://gluon-cv.mxnet.io/build/examples_detection/train_yolo_v3.html) with my own dataset. The CPU version runs pretty smoothly (comment the GPU context), but the GPU version runs with problems, saying that the workspace size is not enough. I tried to reduce the batch_size from 16 to 8,4,2,1 and this error occurs constantly. In fact, using `watch -n 1 nvidia-smi`, the GPU memory was only less than 1GB out of 12GB during the whole running process. I was wondering whether my mxnet-cu80 installation was alright, so I run the validation example code `a = mx.nd.ones((2, 3), mx.gpu())`, it took me like 10min(very long) to able to input the next line 'b = a * 2 + 1'. Anyway, the results showed that my code can run in GPU context and I don't know what is wrong with this whole situation. \r\n\r\n### Error Message\r\n[18:29:52] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)\r\nTraceback (most recent call last):\r\n  File \"train_yolo3.py\", line 402, in <module>\r\n    train(net, train_data, val_data, eval_metric, ctx, args)\r\n  File \"train_yolo3.py\", line 313, in train\r\n    obj_metrics.update(0, obj_losses)\r\n  File \"/home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/metric.py\", line 1636, in update\r\n    loss = ndarray.sum(pred).asscalar()\r\n  File \"/home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 2014, in asscalar\r\n    return self.asnumpy()[0]\r\n  File \"/home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/ndarray/ndarray.py\", line 1996, in asnumpy\r\n    ctypes.c_size_t(data.size)))\r\n  File \"/home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/base.py\", line 253, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: [18:29:52] src/operator/nn/./cudnn/cudnn_convolution-inl.h:948: Failed to find any forward convolution algorithm.  with workspace size of 1073741824 bytes, please consider reducing batch/model size or increasing the workspace size\r\nStack trace:\r\n  [bt] (0) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x4958fb) [0x7fd86c5468fb]\r\n  [bt] (1) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x319b5b7) [0x7fd86f24c5b7]\r\n  [bt] (2) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x319f335) [0x7fd86f250335]\r\n  [bt] (3) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x318d514) [0x7fd86f23e514]\r\n  [bt] (4) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x318d9ce) [0x7fd86f23e9ce]\r\n  [bt] (5) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x318e352) [0x7fd86f23f352]\r\n  [bt] (6) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x318fa43) [0x7fd86f240a43]\r\n  [bt] (7) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(+0x3195159) [0x7fd86f246159]\r\n  [bt] (8) /home/disk2/zhangyingwen/anaconda2/envs/newMx/lib/python3.6/site-packages/mxnet/libmxnet.so(mxnet::imperative::PushFCompute(std::function<void (nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&)> const&, nnvm::Op const*, nnvm::NodeAttrs const&, mxnet::Context const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::engine::Var*, std::allocator<mxnet::engine::Var*> > const&, std::vector<mxnet::Resource, std::allocator<mxnet::Resource> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<mxnet::NDArray*, std::allocator<mxnet::NDArray*> > const&, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&)::{lambda(mxnet::RunContext)#1}::operator()(mxnet::RunContext) const+0x307) [0x7fd86e6fe597]\r\n\r\n\r\n## What have you tried to solve it?\r\n\r\n1. change the batch_size from 16 to 8,4,2,1\r\n2. resize the images from 608 to 416\r\n3. check the mxnet environment, try old version `pip install mxnet-cu80=1.6,1.5,1.4,1.0`\r\n\r\nI also look up some similar issues with approximately the same error\r\n[install two mxnet](https://github.com/apache/incubator-mxnet/issues/7740)\r\n[Nvidia driver don't match mxnet version](https://github.com/apache/incubator-mxnet/issues/11535)\r\n[try old version of Mxnet](https://discuss.mxnet.io/t/mxnet92-cuda9-2-win10-cannot-use-gpu/1839/4)\r\nNone of these solutions above solve my problem and I have been stuck in this problem for two days, so please help me if you happen to encounter the same error, THANK YOU!\r\n\r\n## Environment\r\nUbuntu 16.04, TITAN V, Nvidia driver 396.24.10, CUDA 8.0.61, cuDNN 6.0.21, mxnet-cu80", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18519", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18519/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18519/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18519/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18519", "id": 635066010, "node_id": "MDU6SXNzdWU2MzUwNjYwMTA=", "number": 18519, "title": "Unknow storage type: -1 when defining custom Op", "user": {"login": "zehuichen123", "id": 24351120, "node_id": "MDQ6VXNlcjI0MzUxMTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/24351120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zehuichen123", "html_url": "https://github.com/zehuichen123", "followers_url": "https://api.github.com/users/zehuichen123/followers", "following_url": "https://api.github.com/users/zehuichen123/following{/other_user}", "gists_url": "https://api.github.com/users/zehuichen123/gists{/gist_id}", "starred_url": "https://api.github.com/users/zehuichen123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zehuichen123/subscriptions", "organizations_url": "https://api.github.com/users/zehuichen123/orgs", "repos_url": "https://api.github.com/users/zehuichen123/repos", "events_url": "https://api.github.com/users/zehuichen123/events{/privacy}", "received_events_url": "https://api.github.com/users/zehuichen123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-09T02:42:02Z", "updated_at": "2020-06-09T08:16:58Z", "closed_at": "2020-06-09T08:16:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to define a custom op to replace `SoftmaxOutput` since I want to weighted loss value before mx.make_loss. However, I encountered the Exception shown below:\r\n```\r\nTraceback (most recent call last):\r\n  File \"detection_train.py\", line 307, in <module>\r\n    train_net(parse_args())\r\n  File \"detection_train.py\", line 289, in train_net\r\n    profile=profile\r\n  File \"/mnt/truenas/scratch/czh/kl_baseline/core/detection_module.py\", line 1010, in fit\r\nError in CustomOp.backward: Traceback (most recent call last):\r\n  File \".../mxnet_xyxy/python/mxnet/operator.py\", line 1022, in backward_entry\r\n    stype=stype))\r\n  File \".../mxnet_xyxy/python/mxnet/ndarray/sparse.py\", line 1187, in _ndarray_cls\r\n    raise Exception(\"unknown storage type: %s\"%stype)\r\nException: unknown storage type: -1\r\n```\r\nThe version of mxnet is 1.6.0.\r\nHere is the custom op I defined:\r\n```\r\nimport numpy as np\r\nimport mxnet as mx\r\nimport time\r\n\r\nclass WeightSoftmaxOperator(mx.operator.CustomOp):\r\n    def __init__(self):\r\n        super().__init__()\r\n    \r\n    def forward(self, is_train, req, in_data, out_data, aux):\r\n        data = in_data[0]\r\n        label = in_data[1]\r\n\r\n        data = mx.nd.softmax(data)\r\n        loss = - label * mx.nd.log(data + 1e-8)\r\n\r\n        self.assign(out_data[0], req[0], loss)\r\n    \r\n    def backward(self, req, out_grad, in_data, out_data, in_grad, aux):\r\n        data = in_data[0]\r\n        label = in_data[1]\r\n\r\n        d_grad = mx.nd.softmax(data) - label\r\n        \r\n        self.assign(in_grad[0], req[0], d_grad)\r\n        self.assign(in_grad[1], req[1], mx.nd.zeros_like(label))\r\n        \r\n\r\n@mx.operator.register('weight_softmax')\r\nclass WeightSoftmaxProp(mx.operator.CustomOpProp):\r\n    def __init__(self):\r\n        super().__init__(need_top_grad=True)\r\n\r\n    def list_arguments(self):\r\n        return ['data', 'label']\r\n    \r\n    def list_outputs(self):\r\n        return ['output']\r\n    \r\n    def infer_shape(self, in_shape):\r\n        return [in_shape[0], in_shape[1]], [in_shape[0]]\r\n    \r\n    def create_operator(self, ctx, shapes, dtypes):\r\n        return WeightSoftmaxOperator()\r\n    \r\n    def declare_backward_dependency(self, out_grad, in_data, out_data):\r\n        deps = []\r\n        if self.need_top_grad_:\r\n            deps.extend(out_grad)\r\n        deps.extend(in_data)\r\n        deps.extend(out_data)\r\n        return deps\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18506", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18506/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18506/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18506/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18506", "id": 632673099, "node_id": "MDU6SXNzdWU2MzI2NzMwOTk=", "number": 18506, "title": "KLDivLoss misbehave", "user": {"login": "Neutron3529", "id": 26130174, "node_id": "MDQ6VXNlcjI2MTMwMTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/26130174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neutron3529", "html_url": "https://github.com/Neutron3529", "followers_url": "https://api.github.com/users/Neutron3529/followers", "following_url": "https://api.github.com/users/Neutron3529/following{/other_user}", "gists_url": "https://api.github.com/users/Neutron3529/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neutron3529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neutron3529/subscriptions", "organizations_url": "https://api.github.com/users/Neutron3529/orgs", "repos_url": "https://api.github.com/users/Neutron3529/repos", "events_url": "https://api.github.com/users/Neutron3529/events{/privacy}", "received_events_url": "https://api.github.com/users/Neutron3529/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-06T19:15:15Z", "updated_at": "2020-06-19T21:51:21Z", "closed_at": "2020-06-19T21:51:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nIn the current version of `KLDivLoss`, the return value is not the same value calculated by SoftmaxCrossEntropyLoss, which is not documented. It may due to the incorrect settings which using mean rather than sum dealing with the return value.\r\n\r\nI have submitted a PR ( PR #18423 ) to fix such misbehave.\r\nIn addition, this PR also fix `SDMLLoss` which uses `KLDivLoss`'s result.\r\n\r\n### Error Message\r\n(no error message)\r\n\r\n## To Reproduce\r\n>>> o=mx.nd.array([[1,2,3]])\r\n>>> l=mx.nd.array([1])\r\n>>> lo=l.one_hot(o.shape[1])\r\n>>> mx.gluon.loss.SoftmaxCrossEntropyLoss()(o,l)#correct answer.\r\n\r\n[1.4076059]\r\n<NDArray 1 @cpu(0)>\r\n>>> mx.gluon.loss.KLDivLoss(from_logits=False)(o,lo)#not equals to the previous result.\r\n\r\n[0.46920195]\r\n<NDArray 1 @cpu(0)>\r\n>>> mx.gluon.loss.KLDivLoss(from_logits=False)(o,lo)*o.shape[1]#this is what the document say.\r\n\r\n[1.4076059]\r\n<NDArray 1 @cpu(0)>\r\n\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n----------Python Info----------\r\nVersion      : 3.8.3\r\nCompiler     : GCC 10.1.0\r\nBuild        : ('default', 'May 17 2020 18:15:42')\r\nArch         : ('64bit', 'ELF')\r\n------------Pip Info-----------\r\nVersion      : 20.0.2\r\nDirectory    : /usr/lib/python3.8/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 1.6.0\r\nDirectory    : /home/neutron/.local/lib/python3.8/site-packages/mxnet\r\nNum GPUs     : 1\r\nCommit Hash   : 6eec9da55c5096079355d1f1a5fa58dcf35d6752\r\n----------System Info----------\r\nPlatform     : Linux-5.4.43-1-MANJARO-x86_64-with-glibc2.2.5\r\nsystem       : Linux\r\nnode         : Neutron\r\nrelease      : 5.4.43-1-MANJARO\r\nversion      : #1 SMP PREEMPT Wed May 27 20:25:12 UTC 2020\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : \r\n\u67b6\u6784\uff1a                           x86_64\r\nCPU \u8fd0\u884c\u6a21\u5f0f\uff1a                   32-bit, 64-bit\r\n\u5b57\u8282\u5e8f\uff1a                         Little Endian\r\nAddress sizes:                   39 bits physical, 48 bits virtual\r\nCPU:                             12\r\n\u5728\u7ebf CPU \u5217\u8868\uff1a                  0-11\r\n\u6bcf\u4e2a\u6838\u7684\u7ebf\u7a0b\u6570\uff1a                 2\r\n\u6bcf\u4e2a\u5ea7\u7684\u6838\u6570\uff1a                   6\r\n\u5ea7\uff1a                             1\r\nNUMA \u8282\u70b9\uff1a                      1\r\n\u5382\u5546 ID\uff1a                        GenuineIntel\r\nCPU \u7cfb\u5217\uff1a                       6\r\n\u578b\u53f7\uff1a                           158\r\n\u578b\u53f7\u540d\u79f0\uff1a                       Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz\r\n\u6b65\u8fdb\uff1a                           10\r\nCPU MHz\uff1a                        2803.323\r\nCPU \u6700\u5927 MHz\uff1a                   4100.0000\r\nCPU \u6700\u5c0f MHz\uff1a                   800.0000\r\nBogoMIPS\uff1a                       4401.32\r\n\u865a\u62df\u5316\uff1a                         VT-x\r\nL1d \u7f13\u5b58\uff1a                       192 KiB\r\nL1i \u7f13\u5b58\uff1a                       192 KiB\r\nL2 \u7f13\u5b58\uff1a                        1.5 MiB\r\nL3 \u7f13\u5b58\uff1a                        9 MiB\r\nNUMA \u8282\u70b90 CPU\uff1a                 0-11\r\nVulnerability Itlb multihit:     KVM: Mitigation: Split huge pages\r\nVulnerability L1tf:              Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable\r\nVulnerability Mds:               Mitigation; Clear CPU buffers; SMT vulnerable\r\nVulnerability Meltdown:          Mitigation; PTI\r\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\r\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\r\nVulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling\r\nVulnerability Tsx async abort:   Not affected\r\n\u6807\u8bb0\uff1a                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm p\r\n                                 be syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aper\r\n                                 fmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe \r\n                                 popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd\r\n                                  ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mp\r\n                                 x rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_w\r\n                                 indow hwp_epp md_clear flush_l1d\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0006 sec, LOAD: 1.1995 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0003 sec, LOAD: 2.3723 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.4260 sec, LOAD: 1.6315 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 1.2683 sec, LOAD: 0.6324 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.2637 sec, LOAD: 0.6168 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.4871 sec, LOAD: 1.0879 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0196 sec, LOAD: 1.7082 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.31757044792175293 sec.\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18499", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18499/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18499/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18499/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18499", "id": 632047618, "node_id": "MDU6SXNzdWU2MzIwNDc2MTg=", "number": 18499, "title": "[BUG] The wrong gradient of Batch Norm when `grad_req = add`", "user": {"login": "wkcn", "id": 3415417, "node_id": "MDQ6VXNlcjM0MTU0MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3415417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wkcn", "html_url": "https://github.com/wkcn", "followers_url": "https://api.github.com/users/wkcn/followers", "following_url": "https://api.github.com/users/wkcn/following{/other_user}", "gists_url": "https://api.github.com/users/wkcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wkcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wkcn/subscriptions", "organizations_url": "https://api.github.com/users/wkcn/orgs", "repos_url": "https://api.github.com/users/wkcn/repos", "events_url": "https://api.github.com/users/wkcn/events{/privacy}", "received_events_url": "https://api.github.com/users/wkcn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 707556574, "node_id": "MDU6TGFiZWw3MDc1NTY1NzQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Operator", "name": "Operator", "color": "fbca04", "default": false, "description": null}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-05T23:16:18Z", "updated_at": "2020-06-08T17:41:36Z", "closed_at": "2020-06-08T17:41:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nHi there, we found that the current implementation of batch norm layer does support `grad_req = add`. If `grad_req` is set to `add`, the gradient of input data is not accumulated. Besides the gradient of gamma and beta are not assigned to any value by mistake.\r\n\r\n## To Reproduce\r\n```python\r\nimport mxnet as mx\r\nfrom mxnet.gluon import nn\r\n\r\nN = 1\r\nC = 3\r\nH = W = 2\r\nblock = nn.BatchNorm() \r\nblock.collect_params().initialize()\r\nblock.collect_params().setattr('grad_req', 'add')\r\n\r\nx = mx.nd.arange(N*C*H*W).reshape((N, C, H, W))\r\nx.attach_grad()\r\nfor i in range(3):\r\n    with mx.autograd.record():\r\n        y = block(x)\r\n        loss = (y * y).sum() \r\n    loss.backward()\r\nprint(x.grad, block.gamma.grad(), block.beta.grad())\r\n```\r\n\r\nIt outputs the following message:\r\nmxnet-2.0.0b20200421 installed by pip\r\n```\r\n[[[[-1.8979003e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.8979003e-05]]\r\n\r\n  [[-1.8979003e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.8979003e-05]]\r\n\r\n  [[-1.8979003e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.8979003e-05]]]]\r\n<NDArray 1x3x2x2 @cpu(0)> \r\n[7.999936 7.999936 7.999936]\r\n<NDArray 3 @cpu(0)> \r\n[0. 0. 0.]\r\n<NDArray 3 @cpu(0)>\r\n```\r\nMXNet 1.6 installed by `pip --pre`\r\n```\r\n[[[[-1.9192250e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.9192250e-05]]\r\n\r\n  [[-1.9192250e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.9192250e-05]]\r\n\r\n  [[-1.9192250e-05 -6.3974167e-06]\r\n   [ 6.3974167e-06  1.9192250e-05]]]]\r\n<NDArray 1x3x2x2 @cpu(0)> \r\n[0. 0. 0.]\r\n<NDArray 3 @cpu(0)> \r\n[0. 0. 0.]\r\n<NDArray 3 @cpu(0)>\r\n```\r\nThe correct result should be\r\n```\r\n[[[[-5.8216e-05, -1.9352e-05],\r\n   [ 1.9352e-05,  5.8216e-05]],\r\n\r\n   [[-5.8216e-05, -1.9352e-05],\r\n   [ 1.9352e-05,  5.8216e-05]],\r\n\r\n   [[-5.8216e-05, -1.9352e-05],\r\n   [ 1.9352e-05,  5.8216e-05]]]]\r\n\r\n[23.9998, 23.9998, 23.9998]\r\n\r\n[0., 0., 0.]\r\n```\r\n\r\nThe several values are the gradients of the input data, gamma, beta individually. The gradients are wrong.\r\n\r\n## Environment\r\nmxnet-2.0.0b20200421 installed by pip\r\nI could not run the latest version(mxnet-2.0.0b20200516) of MXNet 2.0 on my laptop since `libopenblas.so.0` is not found : (\r\n```\r\n----------Python Info----------\r\nVersion      : 3.8.3\r\nCompiler     : GCC 10.1.0\r\nBuild        : ('default', 'May 17 2020 18:15:42')\r\nArch         : ('64bit', 'ELF')\r\n------------Pip Info-----------\r\nVersion      : 20.0.2\r\nDirectory    : /usr/lib/python3.8/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 2.0.0\r\nDirectory    : /usr/lib/python3.8/site-packages/mxnet\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-5.6.15-arch1-1-x86_64-with-glibc2.2.5\r\nsystem       : Linux\r\nnode         : MiraiT\r\nrelease      : 5.6.15-arch1-1\r\nversion      : #1 SMP PREEMPT Wed, 27 May 2020 23:42:26 +0000\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : \r\nArchitecture:                    x86_64\r\nCPU op-mode(s):                  32-bit, 64-bit\r\nByte Order:                      Little Endian\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18491", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18491/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18491/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18491/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18491", "id": 631495696, "node_id": "MDU6SXNzdWU2MzE0OTU2OTY=", "number": 18491, "title": "Matchall in visualize.jl has been deprecated as of Julia 1.3", "user": {"login": "andevellicus", "id": 762254, "node_id": "MDQ6VXNlcjc2MjI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/762254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andevellicus", "html_url": "https://github.com/andevellicus", "followers_url": "https://api.github.com/users/andevellicus/followers", "following_url": "https://api.github.com/users/andevellicus/following{/other_user}", "gists_url": "https://api.github.com/users/andevellicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/andevellicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andevellicus/subscriptions", "organizations_url": "https://api.github.com/users/andevellicus/orgs", "repos_url": "https://api.github.com/users/andevellicus/repos", "events_url": "https://api.github.com/users/andevellicus/events{/privacy}", "received_events_url": "https://api.github.com/users/andevellicus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 850740563, "node_id": "MDU6TGFiZWw4NTA3NDA1NjM=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Julia", "name": "Julia", "color": "0052cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T10:44:28Z", "updated_at": "2020-06-16T02:13:14Z", "closed_at": "2020-06-16T02:13:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nto_graphviz will no longer work.\r\n\r\n### Error Message\r\nERROR: LoadError: UndefVarError: matchall not defined\r\nStacktrace:\r\n [1] _extract_shape(::String) at /home/###julia/packages/MXNet/XoVCW/src/visualize.jl:210\r\n [2] to_graphviz(::SymbolicNode; title::String, input_shapes::Nothing) at /home/andevellicus/.julia/packages/MXNet/XoVCW/src/visualize.jl:91\r\n [3] to_graphviz at /home/###/.julia/packages/MXNet/XoVCW/src/visualize.jl:33 [inlined]\r\n [4] (::var\"#3#4\")(::IOStream) at /home/###Programming/ML/julia/MXNet/train.jl:24\r\n [5] open(::var\"#3#4\", ::String, ::Vararg{String,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./io.jl:298\r\n [6] top-level scope at /home/###/Programming/ML/julia/MXNet/train.jl:23\r\nin expression starting at /home/###Programming/ML/julia/MXNet/train.jl:23\r\n                                                          \r\n## To Reproduce\r\nmodel = build_model()\r\n\r\nopen(\"visualize.dot\", \"w\") do io\r\n    println(io, mx.to_graphviz(model))\r\nend\r\nrun(pipeline(`dot -Tsvg visualize.dot`, stdout=\"model.svg\"))\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\n----------MXNet Info-----------\r\nVersion      : 2.0.0\r\nDirectory    : /usr/lib/python3.8/site-packages/mxnet\r\nNum GPUs     : 3\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-5.6.15-arch1-1-x86_64-with-glibc2.2.5\r\nsystem       : Linux\r\nnode         : mordekai\r\nrelease      : 5.6.15-arch1-1\r\nversion      : #1 SMP PREEMPT Wed, 27 May 2020 23:42:26 +0000\r\n\r\nJulia 1.4\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18475", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18475/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18475/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18475/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18475", "id": 629643884, "node_id": "MDU6SXNzdWU2Mjk2NDM4ODQ=", "number": 18475, "title": "BatchNorm can not converge with scale=False", "user": {"login": "nttstar", "id": 97733, "node_id": "MDQ6VXNlcjk3NzMz", "avatar_url": "https://avatars0.githubusercontent.com/u/97733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nttstar", "html_url": "https://github.com/nttstar", "followers_url": "https://api.github.com/users/nttstar/followers", "following_url": "https://api.github.com/users/nttstar/following{/other_user}", "gists_url": "https://api.github.com/users/nttstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nttstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nttstar/subscriptions", "organizations_url": "https://api.github.com/users/nttstar/orgs", "repos_url": "https://api.github.com/users/nttstar/repos", "events_url": "https://api.github.com/users/nttstar/events{/privacy}", "received_events_url": "https://api.github.com/users/nttstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-03T02:30:54Z", "updated_at": "2020-07-21T22:55:01Z", "closed_at": "2020-07-21T22:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n BatchNorm operator with ``scale=False`` can not converge.\r\n\r\n### Error Message\r\nNo error message, but loss value and training accuracy is abnormal comparing with ``scale=True`` BatchNorm.\r\n\r\n## To Reproduce\r\nWe can try ``https://github.com/nttstar/arcface.np`` to train arcface. Add one BatchNorm op with ``scale=False`` after final embedding layer\r\n\r\n\r\n## What have you tried to solve it?\r\n\r\n1. Set ``Scale=True``, it can work but with slightly worse test accuracy.\r\n\r\n## Environment\r\n\r\n----------Python Info----------\r\nVersion      : 3.6.9\r\nCompiler     : GCC 7.3.0\r\nBuild        : ('default', 'Jul 30 2019 19:07:31')\r\nArch         : ('64bit', '')\r\n------------Pip Info-----------\r\nVersion      : 19.3.1\r\nDirectory    : /root/anaconda2/envs/py36/lib/python3.6/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 2.0.0\r\nDirectory    : /root/anaconda2/envs/py36/lib/python3.6/site-packages/mxnet\r\nNum GPUs     : 8\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-3.10.0-327.el7.x86_64-x86_64-with-centos-7.5.1804-Core\r\nsystem       : Linux\r\nnode         : gpu06\r\nrelease      : 3.10.0-327.el7.x86_64\r\nversion      : #1 SMP Thu Nov 19 22:10:57 UTC 2015\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18471", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18471/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18471/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18471/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18471", "id": 629466025, "node_id": "MDU6SXNzdWU2Mjk0NjYwMjU=", "number": 18471, "title": "Can't install Mxnet on raspberry pi with opencv 4.0.0", "user": {"login": "woreom", "id": 15047794, "node_id": "MDQ6VXNlcjE1MDQ3Nzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/15047794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woreom", "html_url": "https://github.com/woreom", "followers_url": "https://api.github.com/users/woreom/followers", "following_url": "https://api.github.com/users/woreom/following{/other_user}", "gists_url": "https://api.github.com/users/woreom/gists{/gist_id}", "starred_url": "https://api.github.com/users/woreom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woreom/subscriptions", "organizations_url": "https://api.github.com/users/woreom/orgs", "repos_url": "https://api.github.com/users/woreom/repos", "events_url": "https://api.github.com/users/woreom/events{/privacy}", "received_events_url": "https://api.github.com/users/woreom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-06-02T19:43:10Z", "updated_at": "2020-07-11T08:10:52Z", "closed_at": "2020-06-05T00:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nSo I'm following the tutorial on : https://mxnet.apache.org/get_started/?platform=devices&iot=raspberry-pi& \r\nI'm trying to use opencv and mxnet together for my project. I tried the prebuild whl but it uses numpy 1.12.4 or something but the opencv needs 1.16.2 or higher.\r\n### Error Message\r\nI tried to install with docker I get the error ModuleNotFoundError: No module named 'docker.errors' which is probably because i'm doing something wrong this is not my issue.\r\nBut my problem is with the native build, when I cmake I get the error \" -- Configuring incomplete, errors occurred!\"\r\nand here is CMakeError\r\n\r\n>  Performing C++ SOURCE FILE Test COMPILER_SUPPORT_MF16C failed with the followin$\r\n> Change Dir: /mnt/USB/.mxnet/mxnet/build/CMakeFiles/CMakeTmp\r\n> Run Build Command:\"/usr/bin/ninja\" \"cmTC_ff7d6\"\r\n> [1/2] Building CXX object CMakeFiles/cmTC_ff7d6.dir/src.cxx.o\r\n> FAILED:` CMakeFiles/cmTC_ff7d6.dir/src.cxx.o\r\n> /usr/bin/c++    -Wall -Wno-sign-compare -O3 -fopenmp -DCOMPILER_SUPPORT_MF16C -$\r\n> c++: error: unrecognized command line option '-mf16c'\r\n> ninja: build stopped: subcommand failed.\r\n> \r\n> Source file was:\r\n> int main() { return 0; }\r\n\r\n\r\n## What have you tried to solve it?\r\n\r\n1. I've tried other versions of mxnet but I get the same errors\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```----------Python Info----------\r\nVersion      : 3.7.3\r\nCompiler     : GCC 8.3.0\r\nBuild        : ('default', 'Dec 20 2019 18:57:59')\r\nArch         : ('32bit', 'ELF')\r\n------------Pip Info-----------\r\nVersion      : 20.1.1\r\nDirectory    : /home/pi/.virtualenvs/py3/lib/python3.7/site-packages/pip\r\n----------MXNet Info-----------\r\nNo MXNet installed.\r\n----------System Info----------\r\nPlatform     : Linux-4.19.118-v7l+-armv7l-with-debian-10.4\r\nsystem       : Linux\r\nnode         : raspberrypi\r\nrelease      : 4.19.118-v7l+\r\nversion      : #1311 SMP Mon Apr 27 14:26:42 BST 2020\r\n----------Hardware Info----------\r\nmachine      : armv7l\r\nprocessor    : \r\nArchitecture:        armv7l\r\nByte Order:          Little Endian\r\nCPU(s):              4\r\nOn-line CPU(s) list: 0-3\r\nThread(s) per core:  1\r\nCore(s) per socket:  4\r\nSocket(s):           1\r\nVendor ID:           ARM\r\nModel:               3\r\nModel name:          Cortex-A72\r\nStepping:            r0p3\r\nCPU max MHz:         1500.0000\r\nCPU min MHz:         600.0000\r\nBogoMIPS:            270.00\r\nFlags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0555 sec, LOAD: 0.7637 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0555 sec, LOAD: 0.8774 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0550 sec, LOAD: 5.9179 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0552 sec, LOAD: 0.2132 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0569 sec, LOAD: 0.3506 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0611 sec, LOAD: 0.7249 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0635 sec, LOAD: 2.4053 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.06275081634521484 sec.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18460", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18460/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18460/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18460/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18460", "id": 628780919, "node_id": "MDU6SXNzdWU2Mjg3ODA5MTk=", "number": 18460, "title": "CI: flaky compilation", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-01T22:58:11Z", "updated_at": "2020-08-20T23:03:27Z", "closed_at": "2020-08-20T23:03:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nSometimes compilation on CI fails due to compiler bugs. \r\n\r\n```\r\n[2020-06-01T20:07:22.772Z] /usr/local/bin/ccache /usr/bin/g++-7  -DDMLC_CORE_USE_CMAKE -DDMLC_LOG_FATAL_THROW=1 -DDMLC_LOG_STACK_TRACE_SIZE=0 -DDMLC_MODERN_THREAD_LOCAL=0 -DDMLC_STRICT_CXX11 -DDMLC_USE_CXX11 -DDMLC_USE_CXX11=1 -DDMLC_USE_CXX14 -DMSHADOW_INT64_TENSOR_SIZE=0 -DMSHADOW_IN_CXX11 -DMSHADOW_USE_CBLAS=0 -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_MKL=1 -DMSHADOW_USE_SSE -DMXNET_USE_BLAS_MKL=1 -DMXNET_USE_LAPACK=1 -DMXNET_USE_LIBJPEG_TURBO=0 -DMXNET_USE_OPENCV=1 -DMXNET_USE_OPENMP=1 -DMXNET_USE_OPERATOR_TUNING=1 -DMXNET_USE_SIGNAL_HANDLER=1 -DMXNET_USE_TVM_OP=1 -D__USE_XOPEN2K8 -Dmxnet_EXPORTS -I/work/mxnet/include -I/work/mxnet/src -I/work/mxnet/3rdparty/nvidia_cub -I/work/mxnet/3rdparty/tvm/nnvm/include -I/work/mxnet/3rdparty/tvm/include -I/work/mxnet/3rdparty/dmlc-core/include -I/work/mxnet/3rdparty/dlpack/include -I/work/mxnet/3rdparty/mshadow -I3rdparty/dmlc-core/include -isystem /opt/intel/mkl/include -isystem /usr/include/opencv -D_GLIBCXX_ASSERTIONS  -Wall -Wno-sign-compare -O3 -g -fopenmp -O2 -g -DNDEBUG -fPIC   -Werror -Wno-error=unused-variable --coverage -Wno-unused-parameter -Wno-unknown-pragmas -Wno-unused-local-typedefs -msse3 -mf16c -std=gnu++1z -MD -MT CMakeFiles/mxnet.dir/src/operator/instance_norm.cc.o -MF CMakeFiles/mxnet.dir/src/operator/instance_norm.cc.o.d -o CMakeFiles/mxnet.dir/src/operator/instance_norm.cc.o -c /work/mxnet/src/operator/instance_norm.cc\r\n\r\n[2020-06-01T20:07:22.772Z] /tmp/ccT4hWrG.s: Assembler messages:\r\n\r\n[2020-06-01T20:07:22.772Z] /tmp/ccT4hWrG.s:566393: Internal error in stringer at ../../gas/read.c:5521.\r\n\r\n[2020-06-01T20:07:22.772Z] Please report this bug.\r\n\r\n```\r\n\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-cpu/detail/PR-18455/1/pipeline/\r\n\r\n\r\nWe may reduce the number of occurrences by switching to a compiler version with stable c++17 support on the unix tests (and only test gcc7 on centos tests)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18442", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18442/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18442/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18442/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18442", "id": 627589498, "node_id": "MDU6SXNzdWU2Mjc1ODk0OTg=", "number": 18442, "title": "CI: tests hang during test collection stage", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T23:05:33Z", "updated_at": "2020-07-27T18:27:54Z", "closed_at": "2020-07-27T18:27:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n```\r\n[2020-05-29T18:49:28.268Z] + pytest --durations=50 --cov-report xml:tests_unittest.xml --verbose tests/python/unittest\r\n\r\n[2020-05-29T18:49:31.528Z] ============================= test session starts ==============================\r\n\r\n[2020-05-29T18:49:31.528Z] platform linux -- Python 3.6.9, pytest-5.3.5, py-1.8.1, pluggy-0.13.1 -- /usr/bin/python3\r\n\r\n[2020-05-29T18:49:31.528Z] cachedir: .pytest_cache\r\n\r\n[2020-05-29T18:49:31.528Z] rootdir: /work/mxnet, inifile: pytest.ini\r\n\r\n[2020-05-29T18:49:31.528Z] plugins: flaky-3.6.1, xdist-1.31.0, timeout-1.3.4, cov-2.8.1, env-0.6.2, forked-1.1.3\r\n\r\n[2020-05-29T18:49:31.528Z] timeout: 1200.0s\r\n\r\n[2020-05-29T18:49:31.528Z] timeout method: signal\r\n\r\n[2020-05-29T18:49:31.528Z] timeout func_only: False\r\n\r\n[2020-05-29T22:44:00.825Z] Sending interrupt signal to process\r\n\r\n```\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-cpu/detail/PR-18391/1/pipeline/366\r\n\r\nor \r\n\r\n```\r\n[2020-05-21T18:58:56.773Z] + CI_CUDA_COMPUTE_CAPABILITIES='-gencode=arch=compute_52,code=sm_52 -gencode=arch=compute_70,code=sm_70'\r\n\r\n[2020-05-21T18:58:56.773Z] + CI_CMAKE_CUDA_ARCH='5.2 7.0'\r\n\r\n[2020-05-21T18:58:56.773Z] + set +x\r\n\r\n[2020-05-21T18:58:56.773Z] + export PYTHONPATH=./python/\r\n\r\n[2020-05-21T18:58:56.773Z] + PYTHONPATH=./python/\r\n\r\n[2020-05-21T18:58:56.773Z] + export DMLC_LOG_STACK_TRACE_DEPTH=10\r\n\r\n[2020-05-21T18:58:56.773Z] + DMLC_LOG_STACK_TRACE_DEPTH=10\r\n\r\n[2020-05-21T18:58:56.773Z] + python3 tests/python/unittest/onnx/backend_test.py\r\n\r\n[2020-05-21T22:52:22.501Z] Sending interrupt signal to process\r\n\r\n```\r\n\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-cpu/detail/master/1969/pipeline/376", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18429", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18429/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18429/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18429/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18429", "id": 626646520, "node_id": "MDU6SXNzdWU2MjY2NDY1MjA=", "number": 18429, "title": "Website defaults to master API documentation", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T16:29:14Z", "updated_at": "2020-07-31T21:04:54Z", "closed_at": "2020-07-31T21:04:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Website shows API documentation for master version by default. That's not useful, as most users will run the stable MXNet version and will be confused by breaking changes in MXNet 2 website.\r\n\r\nReference:\r\nhttps://github.com/apache/incubator-mxnet/issues/18428", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18425", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18425/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18425/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18425/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18425", "id": 626172871, "node_id": "MDU6SXNzdWU2MjYxNzI4NzE=", "number": 18425, "title": "The number of samples is batch size. How to convert the convolution to GEMM in the CPU? What is the effect of Batch size on GEMM?", "user": {"login": "lingweiyang", "id": 35799096, "node_id": "MDQ6VXNlcjM1Nzk5MDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/35799096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lingweiyang", "html_url": "https://github.com/lingweiyang", "followers_url": "https://api.github.com/users/lingweiyang/followers", "following_url": "https://api.github.com/users/lingweiyang/following{/other_user}", "gists_url": "https://api.github.com/users/lingweiyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/lingweiyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lingweiyang/subscriptions", "organizations_url": "https://api.github.com/users/lingweiyang/orgs", "repos_url": "https://api.github.com/users/lingweiyang/repos", "events_url": "https://api.github.com/users/lingweiyang/events{/privacy}", "received_events_url": "https://api.github.com/users/lingweiyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 721783588, "node_id": "MDU6TGFiZWw3MjE3ODM1ODg=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Flaky", "name": "Flaky", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-28T02:52:34Z", "updated_at": "2020-06-07T08:22:23Z", "closed_at": "2020-06-07T08:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n(The location and name of the flaky test.)\r\n\r\n## Occurrences\r\n(Links to the known occurrences.)\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18422", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18422/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18422/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18422/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18422", "id": 626109405, "node_id": "MDU6SXNzdWU2MjYxMDk0MDU=", "number": 18422, "title": "MXNet Website 2.0 - Slow Site Speed in China", "user": {"login": "ys2843", "id": 23468760, "node_id": "MDQ6VXNlcjIzNDY4NzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/23468760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ys2843", "html_url": "https://github.com/ys2843", "followers_url": "https://api.github.com/users/ys2843/followers", "following_url": "https://api.github.com/users/ys2843/following{/other_user}", "gists_url": "https://api.github.com/users/ys2843/gists{/gist_id}", "starred_url": "https://api.github.com/users/ys2843/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ys2843/subscriptions", "organizations_url": "https://api.github.com/users/ys2843/orgs", "repos_url": "https://api.github.com/users/ys2843/repos", "events_url": "https://api.github.com/users/ys2843/events{/privacy}", "received_events_url": "https://api.github.com/users/ys2843/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T23:42:06Z", "updated_at": "2020-06-11T21:20:59Z", "closed_at": "2020-06-11T21:20:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nDue to lack of available CDN in China from Apache, MXNet website is hosted in Japan for Chinese visitors [1]. According to the Q1 2020 Google Analytics report, it took 20 second on average to load the website in such areas and the traffic from China declined by 16% compared to previous quarter. An alternative CDN solution is discussed in this proposal.\r\n\r\n## Introduction\r\n\r\nMXNet website is the one-stop site for users from all over the world to explore MXNet project. As a part of Apache Software Foundation, MXNet official website is hosted by Apache on its content delivery networks. Because MXNet dev community has no access to Apache\u2019s web server, Google Analytics is used as the tool to track and report website traffic. Based on the statistics from Google Analytics, we are able to better understand our users and improve MXNet website. \r\n\r\n## Problems\r\n\r\nAccording to the statistic (Q1 2020) from Google Analytics, China has the most users using MXNet website which account for 22.95% of the total number of users. But the website load time is very slow in aforementioned area, the average page load time is 20.38s compare to US it is 2.12s. \r\nThe cause of this problem [1] is, according to Apache Infra team, MXNet website is served from Japan for Chinese visitors. Due to the Great Firewall of China [2], it can cause long delay on visiting oversea websites. But at present Apache can not get access to serve from China itself by reason of Chinese government regulations. \r\nThis can cause frustration on our customers in China, and in Q1 2020 there is a 15.69% decline in traffic (measured by sessions) from China compared to previous quarter. \r\n\r\n## Proposed Solution\r\n\r\nBased on what Apache Infra team can offer now, this is a compromise solution that can address this issue. A Chinese CDN which is pointed by a different but similar domain name \u2018_mxnet.cdn.apache.org_\u2019 is set up by Apache Infra team. It is a Chinese CDN provider and there is a huge improvement on website loading speed in China.\r\nTo achieve optimal results, this project is scoped into two parts, both of which aim to increase the usability of MXNet  website and provide better user experience.\r\n\r\n**Part 1. Redirect Chinese Visitors**\r\nIn .htaccess file, add rewrite rule for Chinese visitors with the help of Apache mod_Geoip module- This is the most accurate and fastest way to redirect.\r\n05/28 - According to Apache Intra team [1], Mod_Geoip is enabled on their server. \r\n\r\n**Part 2. Improve Overall Website Loading Speed [2]**\r\nEliminate render-blocking resources, defer or lazy-load resources that is unrelated to first render. Update cache policy for static assets\r\n\r\n## Reference\r\n\r\n1. Slow site speed issue Jira ticket: https://issues.apache.org/jira/browse/INFRA-20203\r\n2. Impact of Great Firewall of China: https://mlytics.com/blog/why-your-website-is-slow-in-china/\r\n3. Google PageSpeed insight: https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fmxnet.apache.org%2F&tab=desktop\r\n4. Discussion about certificate expiration problem of Apache\u2019s experiment CDN: https://issues.apache.org/jira/browse/INFRA-20185?focusedCommentId=17096119&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17096119\r\n5. MXNet Chinese CDN URL: https://mxnet.cdn.apache.org/ (http://mxnet.cdn.apache.org/) \r\n6. Quip proposal link: https://quip-amazon.com/ydttAOKE2CkL/MXNet-Website-20-Slow-Site-Speed-in-China\r\n## Appendix - Alternative Solutions not Considered\r\n\r\nBased on the response from an Apache Incubator project \u201cEChart\u201d whose team also faced the same problem, and previous Apache Infra Jira tickets discussing similar issues, below two solutions are not considered any more.\r\n\r\n**Apache Experiment CDN**\r\nAccording to EChart team\u2019s response [4], Apache Infra once moved EChart website to the experimental CDN in China. But there was an unexpected certificate expiration issue popping up, Apache Infra team was not able to address the problem and had to move the website back to previous CDN.  \r\nThis experiment CDN is not recommended by Apache Infra team.\r\n\r\n**Deploy Mirror in China**\r\nNot recommended/permitted by Apache Infra team\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18421", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18421/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18421/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18421/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18421", "id": 625941809, "node_id": "MDU6SXNzdWU2MjU5NDE4MDk=", "number": 18421, "title": "Codecov migration to marketplace app", "user": {"login": "thomasrockhu", "id": 4213028, "node_id": "MDQ6VXNlcjQyMTMwMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4213028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasrockhu", "html_url": "https://github.com/thomasrockhu", "followers_url": "https://api.github.com/users/thomasrockhu/followers", "following_url": "https://api.github.com/users/thomasrockhu/following{/other_user}", "gists_url": "https://api.github.com/users/thomasrockhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasrockhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasrockhu/subscriptions", "organizations_url": "https://api.github.com/users/thomasrockhu/orgs", "repos_url": "https://api.github.com/users/thomasrockhu/repos", "events_url": "https://api.github.com/users/thomasrockhu/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasrockhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-05-27T18:47:28Z", "updated_at": "2020-07-20T21:30:02Z", "closed_at": "2020-06-06T03:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "\nHi, Tom from [Codecov](https://codecov.io) here.\n\nWe noticed that you are using Codecov with fairly high frequency, and we\u2019re so excited to see that! However, because you are not using our app, you may have experienced issues with uploading reports or viewing coverage information. This is due to rate-limiting issues from GitHub.\n\n**In order to prevent any future outages, we ask that you move over to our [GitHub app integration](https://github.com/apps/codecov).**\n\nThe process is extremely simple and shouldn\u2019t require more than a few clicks, and you should not expect any downtime. By moving to our app, you will no longer need an admin or separate account to manage the relationship with GitHub as the team bot.\n\nLet me know if you have any questions, or if I can help at all with this process.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18416", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18416/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18416/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18416/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18416", "id": 625634144, "node_id": "MDU6SXNzdWU2MjU2MzQxNDQ=", "number": 18416, "title": "[Numpy] np.where fails for scalar", "user": {"login": "ZheyuYe", "id": 37728728, "node_id": "MDQ6VXNlcjM3NzI4NzI4", "avatar_url": "https://avatars1.githubusercontent.com/u/37728728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZheyuYe", "html_url": "https://github.com/ZheyuYe", "followers_url": "https://api.github.com/users/ZheyuYe/followers", "following_url": "https://api.github.com/users/ZheyuYe/following{/other_user}", "gists_url": "https://api.github.com/users/ZheyuYe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZheyuYe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZheyuYe/subscriptions", "organizations_url": "https://api.github.com/users/ZheyuYe/orgs", "repos_url": "https://api.github.com/users/ZheyuYe/repos", "events_url": "https://api.github.com/users/ZheyuYe/events{/privacy}", "received_events_url": "https://api.github.com/users/ZheyuYe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-27T12:00:58Z", "updated_at": "2020-06-03T07:17:10Z", "closed_at": "2020-06-03T07:17:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As title described,  a fatal error occurs when this operation encounters a scalar.  Same operation `nd.where` does not support scalar but only `nd.ndarray`.\r\n```\r\nimport mxnet as mx\r\nmx.npx.set_np()\r\ncondition = mx.np.array([1, 0, 1, 0, 1])\r\nx = mx.np.ones_like(condition)\r\ny = mx.np.zeros_like(condition)\r\nmx.np.where(condition, x, y)\r\nmx.np.where(condition, 1, 0)\r\n```\r\nOutput:\r\n```\r\narray([1., 0., 1., 0., 1.])\r\narray([0., 0., 0., 0., 0.])\r\n```\r\nA worse result emerged as \r\n```\r\nmx.np.where(condition, 2, 103)\r\n<<< array([103.,   0., 103.,   0., 103.])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18415", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18415/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18415/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18415/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18415", "id": 625473181, "node_id": "MDU6SXNzdWU2MjU0NzMxODE=", "number": 18415, "title": "error: unknown type name 'uint32_t'", "user": {"login": "Masquerade0097", "id": 23634977, "node_id": "MDQ6VXNlcjIzNjM0OTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/23634977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Masquerade0097", "html_url": "https://github.com/Masquerade0097", "followers_url": "https://api.github.com/users/Masquerade0097/followers", "following_url": "https://api.github.com/users/Masquerade0097/following{/other_user}", "gists_url": "https://api.github.com/users/Masquerade0097/gists{/gist_id}", "starred_url": "https://api.github.com/users/Masquerade0097/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Masquerade0097/subscriptions", "organizations_url": "https://api.github.com/users/Masquerade0097/orgs", "repos_url": "https://api.github.com/users/Masquerade0097/repos", "events_url": "https://api.github.com/users/Masquerade0097/events{/privacy}", "received_events_url": "https://api.github.com/users/Masquerade0097/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-27T08:05:10Z", "updated_at": "2020-08-20T03:39:25Z", "closed_at": "2020-05-27T10:52:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI built the MXNet C++ library and installed it on my system. Then I got the following errors when I was trying to build a project that uses MXNet C++ library using cgo.\r\n\r\n### Error Message\r\n```\r\nIn file included from ../../mxnet/error.go:4:0:\r\n/opt/mxnet/include/mxnet/c_predict_api.h:45:9: error: unknown type name 'uint32_t'\r\n typedef uint32_t mx_uint;\r\n         ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:88:28: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                            uint32_t num_input_nodes,\r\n                            ^~~~~~~~\r\n                            __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:90:34: error: unknown type name 'uint32_t'\r\n                            const uint32_t* input_shape_indptr,\r\n                                  ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:91:34: error: unknown type name 'uint32_t'\r\n                            const uint32_t* input_shape_data,\r\n                                  ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:123:36: error: unknown type name 'uint32_t'\r\n                              const uint32_t num_input_nodes,\r\n                                    ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:125:36: error: unknown type name 'uint32_t'\r\n                              const uint32_t* input_shape_indptr,\r\n                                    ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:126:36: error: unknown type name 'uint32_t'\r\n                              const uint32_t* input_shape_data,\r\n                                    ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:127:36: error: unknown type name 'uint32_t'\r\n                              const uint32_t num_provided_arg_dtypes,\r\n                                    ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:159:38: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                      uint32_t num_input_nodes,\r\n                                      ^~~~~~~~\r\n                                      __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:161:44: error: unknown type name 'uint32_t'\r\n                                      const uint32_t* input_shape_indptr,\r\n                                            ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:162:44: error: unknown type name 'uint32_t'\r\n                                      const uint32_t* input_shape_data,\r\n                                            ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:163:38: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                      uint32_t num_output_nodes,\r\n                                      ^~~~~~~~\r\n                                      __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:192:39: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                       uint32_t num_input_nodes,\r\n                                       ^~~~~~~~\r\n                                       __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:194:45: error: unknown type name 'uint32_t'\r\n                                       const uint32_t* input_shape_indptr,\r\n                                             ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:195:45: error: unknown type name 'uint32_t'\r\n                                       const uint32_t* input_shape_data,\r\n                                             ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:214:29: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n MXNET_DLL int MXPredReshape(uint32_t num_input_nodes,\r\n                             ^~~~~~~~\r\n                             __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:216:25: error: unknown type name 'uint32_t'\r\n                   const uint32_t* input_shape_indptr,\r\n                         ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:217:25: error: unknown type name 'uint32_t'\r\n                   const uint32_t* input_shape_data,\r\n                         ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:230:36: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                    uint32_t index,\r\n                                    ^~~~~~~~\r\n                                    __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:231:36: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                    uint32_t** shape_data,\r\n                                    ^~~~~~~~\r\n                                    __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:232:36: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                    uint32_t* shape_ndim);\r\n                                    ^~~~~~~~\r\n                                    __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:242:35: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                                   uint32_t out_index,\r\n                                   ^~~~~~~~\r\n                                   __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:257:30: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                              uint32_t size);\r\n                              ^~~~~~~~\r\n                              __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:290:31: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                               uint32_t index,\r\n                               ^~~~~~~~\r\n                               __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:292:31: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                               uint32_t size);\r\n                               ^~~~~~~~\r\n                               __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:311:30: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                              uint32_t* out_length);\r\n                              ^~~~~~~~\r\n                              __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:323:27: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                           uint32_t index,\r\n                           ^~~~~~~~\r\n                           __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:326:33: error: unknown type name 'uint32_t'\r\n                           const uint32_t** out_shape,\r\n                                 ^~~~~~~~\r\n/opt/mxnet/include/mxnet/c_predict_api.h:327:27: error: unknown type name 'uint32_t'; did you mean '__uint128_t'?\r\n                           uint32_t* out_ndim);\r\n                           ^~~~~~~~\r\n                           __uint128_t\r\n/opt/mxnet/include/mxnet/c_predict_api.h:336:40: error: unknown type name 'bool'; did you mean '_Bool'?\r\n                                        bool monitor_all);\r\n                                        ^~~~\r\n                                        _Bool\r\n\r\n```\r\n\r\n## Environment\r\n```\r\n----------Python Info----------\r\n('Version      :', '2.7.17')\r\n('Compiler     :', 'GCC 7.5.0')\r\n('Build        :', ('default', 'Apr 15 2020 17:20:14'))\r\n('Arch         :', ('64bit', ''))\r\n------------Pip Info-----------\r\nNo corresponding pip install for current python.\r\n----------MXNet Info-----------\r\nNo MXNet installed.\r\n----------System Info----------\r\n('Platform     :', 'Linux-4.15.0-96-generic-s390x-with-Ubuntu-18.04-bionic')\r\n('system       :', 'Linux')\r\n('node         :', 'e0e720e9a63c')\r\n('release      :', '4.15.0-96-generic')\r\n('version      :', '#97-Ubuntu SMP Wed Apr 1 03:00:38 UTC 2020')\r\n----------Hardware Info----------\r\n('machine      :', 's390x')\r\n('processor    :', 's390x')\r\nArchitecture:        s390x\r\nCPU op-mode(s):      32-bit, 64-bit\r\nByte Order:          Big Endian\r\nCPU(s):              4\r\nOn-line CPU(s) list: 0-3\r\nThread(s) per core:  1\r\nCore(s) per socket:  1\r\nSocket(s) per book:  1\r\nBook(s) per drawer:  1\r\nDrawer(s):           4\r\nNUMA node(s):        1\r\nVendor ID:           IBM/S390\r\nMachine type:        3906\r\nCPU dynamic MHz:     5208\r\nCPU static MHz:      5208\r\nBogoMIPS:            21881.00\r\nHypervisor:          z/VM 6.4.0\r\nHypervisor vendor:   IBM\r\nVirtualization type: full\r\nDispatching mode:    horizontal\r\nL1d cache:           128K\r\nL1i cache:           128K\r\nL2d cache:           4096K\r\nL2i cache:           2048K\r\nL3 cache:            131072K\r\nL4 cache:            688128K\r\nNUMA node0 CPU(s):   0-3\r\nFlags:               esan3 zarch stfle msa ldisp eimm dfp edat etf3eh highgprs te vx vxd vxe gs sie\r\n----------Network Test----------\r\nSetting timeout: 10\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.0331 sec, LOAD: 0.6414 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.0197 sec, LOAD: 0.0476 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.0924 sec, LOAD: 0.3836 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.0146248340607 sec.\r\nTiming for MXNet: https://github.com/apache/incubator-mxnet, DNS: 0.0038 sec, LOAD: 0.5610 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 0.0462 sec, LOAD: 0.1590 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.0203 sec, LOAD: 0.1762 sec.\r\nTiming for GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, DNS: 0.0037 sec, LOAD: 0.7520 sec.\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18414", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18414/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18414/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18414/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18414", "id": 625409827, "node_id": "MDU6SXNzdWU2MjU0MDk4Mjc=", "number": 18414, "title": "Type inference bug of negation", "user": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T06:14:42Z", "updated_at": "2020-06-02T15:45:17Z", "closed_at": "2020-06-02T15:45:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport mxnet as mx\r\nmx.npx.set_np()\r\na = mx.np.ones((10, 10), dtype=mx.np.int32)\r\nb = -a\r\nprint(b.dtype)\r\n```\r\n\r\nOutput:\r\n```\r\nfloat64\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18412", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18412/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18412/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18412/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18412", "id": 625396534, "node_id": "MDU6SXNzdWU2MjUzOTY1MzQ=", "number": 18412, "title": "Simplifying mxnet.gluon.block APIs", "user": {"login": "acphile", "id": 24974319, "node_id": "MDQ6VXNlcjI0OTc0MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/24974319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acphile", "html_url": "https://github.com/acphile", "followers_url": "https://api.github.com/users/acphile/followers", "following_url": "https://api.github.com/users/acphile/following{/other_user}", "gists_url": "https://api.github.com/users/acphile/gists{/gist_id}", "starred_url": "https://api.github.com/users/acphile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acphile/subscriptions", "organizations_url": "https://api.github.com/users/acphile/orgs", "repos_url": "https://api.github.com/users/acphile/repos", "events_url": "https://api.github.com/users/acphile/events{/privacy}", "received_events_url": "https://api.github.com/users/acphile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-27T05:45:37Z", "updated_at": "2020-06-19T06:51:51Z", "closed_at": "2020-06-19T06:51:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Motivations\r\nCurrently the implementation of mxnet.gluon.block is not so pythonic and there are many redundancies \r\n\r\n### 1. overlaps between Block._params and Block._reg_params \r\nwhen we want to self-define a model, we currently need to use the code as follows:\r\n```\r\nclass Net(nn.HybridBlock):\r\n    def __init__(self, **kwargs):\r\n        super(HybridNet, self).__init__(**kwargs)\r\n        with self.name_scope():\r\n            self.hidden1 = nn.Dense(256, activation='relu')\r\n            self.a=self.params.get('a', shape=(1, ))        \r\n```\r\nThere are several shortcomings when using this form of registration:\r\na. adding parameter \u2018a\u2019 will lead to double recordings in both self._params and self._reg_params, which is a redundancy. And there is also a discrepancy in Block:\r\n&nbsp;&nbsp; &nbsp;&nbsp; i. In the method \u201ccollect_params\u201d, we use \u201c_params\u201d to get all parameters\r\n&nbsp;&nbsp;&nbsp;&nbsp; ii. while in the method \u201c_collect_params_with_prefix\u201d (and methods \u201cload_parameters\u201d accordingly), we use \u201c_reg_params\u201d to get all parameters.\r\nb. Currently if we do not use \u201cwith self.name_scope():\u201d for children blocks, it will lead to wrong name scopes. For the following example, we actually can not get the parameters of self.hidden1 from the result of collect_params\r\n```\r\nclass HybridNet(nn.HybridBlock):\r\n    def __init__(self, **kwargs):\r\n        super(HybridNet, self).__init__(**kwargs)\r\n        self.hidden1 = nn.Dense(256, activation='relu')\r\n        with self.name_scope():\r\n            self.hidden2 = nn.Dense(10, activation='relu')\r\n\r\n    def hybrid_forward(self, F, x):\r\n        x = self.hidden2(self.hidden1(x))\r\n        return x\r\n    \r\n>>> net = HybridNet()\r\n>>> net.initialize()\r\n>>> print(net.collect_params())\r\nhybridnet0_ (\r\n  Parameter dense0_weight (shape=(256, -1), dtype=float32)\r\n  Parameter dense0_bias (shape=(256,), dtype=float32)\r\n  Parameter hybridnet0_dense0_weight (shape=(10, -1), dtype=float32)\r\n  Parameter hybridnet0_dense0_bias (shape=(10,), dtype=float32)\r\n)\r\n```\r\nFrom the above example we can also find that the parameter names are not related to the attributes\u2019 names, which is not straightforward.\r\n\r\nIn all, we find that using name_scope and ParameterDict is not user-friendly. Thus we plan to remove such redundancies and simplify the definitions of children blocks and parameters, like:\r\n```\r\nclass Net(nn.HybridBlock):\r\n    def __init__(self, **kwargs):\r\n        super(HybridNet, self).__init__(**kwargs)\r\n        self.hidden1 = nn.Dense(256, activation='relu')\r\n        self.a=gluon.parameter.Parameter(name=\"a\", shape=(1, ))    \r\n```\r\nAnd we also can get correct results in the following operations like \u201ccollect_params\u201d: For the above example, when calling \u201ccollect_params\u201d we should get the form like:\r\n{\r\n\u201ca\u201d: xxx\r\n\u201chidden1_weight\u201d: xxx\r\n\u201chidden1_bias\u201d: xxx\r\n}\r\nwhich is like the origianl form used in _collect_params_with_prefix() \r\n\r\nFor using name_scope in hybridization, we use new method \u201cset_prefix()\u201d to recursively add prefix for all parameters inside, using the name of attributes (similar form as the keys in _collect_params_with_prefix())\r\nFor example:\r\n```\r\nnet=Net()\r\n>>> print(net.collect_params())\r\n{\r\n    \u201ca\u201d: Parameter a (...)\r\n    \u201chidden1_weight\u201d: Parameter weight (...)\r\n    \u201chidden1_bias\u201d: Parameter bias (...)\r\n}\r\n>>> net.set_prefix()\r\n>>> print(net.collect_params())\r\n{\r\n    \u201ca\u201d: Parameter a (...)\r\n    \u201chidden1_weight\u201d: Parameter hidden1_weight (...)\r\n    \u201chidden1_bias\u201d: Parameter hidden1_bias (...)\r\n}\r\n```\r\nShared parameter would be added with the prefix where it first occurs.\r\n\r\n\r\n### 2. parameter sharing \r\nCurrently, we use parameter \u201cparams\u201d in the definition of Block for parameter sharing. It means before the __init__ of Block, shared parameters already recorded in self._params.shared. And currently Block forbids overriding parameters. \r\nWe think that this is not convenient. A most common way to share parameter is like what Pytorch does, like \r\n```\r\nself.hidden1.weight=self.hidden2.weight\r\n```\r\nBut note that in the case where we have a HybridBlock and the block has been hybridized, then we shouldn't allow overriding the parameter but ask the user to unhybridize the Block first.\r\nTo further allow sharing parameters recursively, we plan to add an API:\r\n```\r\n    def share_parameters(self, params : Dict):\r\n```\r\nWe plan to use the structured based form (like what is used in \u201c_collect_params_with_prefix()\u201d) to represent each parameter recursively. For example, we denote \u201cself.hidden1.weight\u201d as \u201chidden_weight\u201d\r\n\r\nIn all, we plan to make the following improvements:\r\n\r\n1. remove parameters \u201cprefix\u201d and \u201cparams\u201d in the \u201c\\_\\_init\\_\\_\" function.\r\n2. remove the use of self._params(ParameterDict) in Block\r\n3. allow parameter attribute overriding in non-hydridization case.\r\n4. add the method \u201cshare_parameters\" to recursively share parameters in children blocks.\r\n\r\n## Detailed improvements\r\n\r\n### For Class Block\r\n\r\n1. remove attribute _empty_prefix, _prefix, _params, _profiler_scope_name,  _name and their corresponding properties.\r\n```\r\n@property\r\ndef params(self):\r\n    \"\"\"Returns this :py:class:`Block`'s parameter dictionary (does not include its\r\n    children's parameters).\"\"\"\r\n    return self._reg_params\r\n```\r\n2. use the structured format for self._scope\r\n&nbsp;&nbsp; &nbsp;&nbsp; a. self._scope is only intended to be used in hybridize() internally\r\n3. implement collect_params with _collect_params_with_prefix\r\n&nbsp;&nbsp; &nbsp;&nbsp; a.  def _collect_params_with_prefix(self, prefix='', select=None):\r\n4. change the implementation of save_params to save_parameters\r\n5. move the implementation of ParameterDict.initialize to Block.initialize\r\n6. move ParameterDict.zero_grad() to Block.zero_grad()\r\n&nbsp;&nbsp; &nbsp;&nbsp; a. call model.zero_grad() instead of model.collect_params().zero_grad()\r\n7. move ParameterDict.reset_ctx(ctx) to Block.reset_ctx(ctx)\r\n8. move ParameterDict.setattr to Block.setattr\r\n9. add method share_parameters(self, params : OrderedDict):\r\n&nbsp;&nbsp; &nbsp;&nbsp; a. return self\r\n10. add method set_prefix():\r\n&nbsp;&nbsp; &nbsp;&nbsp; a. return self\r\n&nbsp;&nbsp; &nbsp;&nbsp; b. when calling Block.initialize(), set_prefix() would be called first internally.\r\n\r\n\r\n### For Class HybridBlock:\r\n1. before hybridize() is called, set_prefix would be called first.\r\n```\r\nnet = Net()\r\nnet.initialize()\r\nnet.hybridize()\r\n```\r\nor\r\n```\r\nnet = Net().set_prefix()\r\nnet.hybridize()\r\n```\r\n\r\n### For Parameter:\r\n1. add attribute self._prefix (which is set automatically by Block.set_prefix())\r\n2. use self._prefix + self._name for attribute self.name \r\n\r\n### For other children class:\r\n\r\n1. remove params and prefix\r\n2. use Parameter instead of self.params.get like\r\n```\r\n#self.i2h_weight = self.params.get('i2h_weight', shape=(hidden_size, input_size),\r\n#                                  init=i2h_weight_initializer,\r\n#                                  allow_deferred_init=True)\r\nself.i2h_weight = Parameter(shape=(hidden_size, input_size), init=i2h_weight_initializer,\r\n                                      allow_deferred_init=True)\r\n```\r\n\r\n### For _RNNLayer (gluon.rnn.rnn_layer._RNNlayer)\r\n1. remove the implementation of _unfuse()\r\n2. remove the implementation of _collect_params_with_prefix() (Seemingly It is only for backward compatibility)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18401", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18401/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18401/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18401/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18401", "id": 623993539, "node_id": "MDU6SXNzdWU2MjM5OTM1Mzk=", "number": 18401, "title": "Add Optuna to MXNet Ecosystem", "user": {"login": "Crissman", "id": 4338467, "node_id": "MDQ6VXNlcjQzMzg0Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4338467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crissman", "html_url": "https://github.com/Crissman", "followers_url": "https://api.github.com/users/Crissman/followers", "following_url": "https://api.github.com/users/Crissman/following{/other_user}", "gists_url": "https://api.github.com/users/Crissman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crissman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crissman/subscriptions", "organizations_url": "https://api.github.com/users/Crissman/orgs", "repos_url": "https://api.github.com/users/Crissman/repos", "events_url": "https://api.github.com/users/Crissman/events{/privacy}", "received_events_url": "https://api.github.com/users/Crissman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-25T01:36:51Z", "updated_at": "2020-06-15T10:12:48Z", "closed_at": "2020-06-15T10:12:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nOptuna works well for optimizing hyperparameters for MXNet, and we've written an [integration module for MXNet](https://optuna.readthedocs.io/en/latest/reference/integration.html#optuna.integration.MXNetPruningCallback), and I've recently published a [blog about using MXNet with Optuna](https://medium.com/optuna/using-optuna-to-optimize-mxnet-hyperparameters-4c06518c1ec9).\r\n\r\nCan Optuna be added to the MXNet Ecosystem?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18395", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18395/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18395/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18395/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18395", "id": 623680846, "node_id": "MDU6SXNzdWU2MjM2ODA4NDY=", "number": 18395, "title": "can't import mxnet", "user": {"login": "paylak2002", "id": 38981695, "node_id": "MDQ6VXNlcjM4OTgxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/38981695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paylak2002", "html_url": "https://github.com/paylak2002", "followers_url": "https://api.github.com/users/paylak2002/followers", "following_url": "https://api.github.com/users/paylak2002/following{/other_user}", "gists_url": "https://api.github.com/users/paylak2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/paylak2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paylak2002/subscriptions", "organizations_url": "https://api.github.com/users/paylak2002/orgs", "repos_url": "https://api.github.com/users/paylak2002/repos", "events_url": "https://api.github.com/users/paylak2002/events{/privacy}", "received_events_url": "https://api.github.com/users/paylak2002/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 978567321, "node_id": "MDU6TGFiZWw5Nzg1NjczMjE=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/MKLDNN", "name": "MKLDNN", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-23T15:16:36Z", "updated_at": "2020-06-01T06:05:32Z", "closed_at": "2020-05-27T17:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing mxnet via pip I've tried to import the mxnet package, but unfortunately I've got this error message:\r\nIllegal instruction (core dumped)\r\nI think there are some problems with my cpu. My cpu: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor DRAM Controller", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18386", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18386/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18386/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18386/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18386", "id": 622962088, "node_id": "MDU6SXNzdWU2MjI5NjIwODg=", "number": 18386, "title": "the metric.py is missed in the latest master branch", "user": {"login": "TriLoo", "id": 16267477, "node_id": "MDQ6VXNlcjE2MjY3NDc3", "avatar_url": "https://avatars1.githubusercontent.com/u/16267477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TriLoo", "html_url": "https://github.com/TriLoo", "followers_url": "https://api.github.com/users/TriLoo/followers", "following_url": "https://api.github.com/users/TriLoo/following{/other_user}", "gists_url": "https://api.github.com/users/TriLoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TriLoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TriLoo/subscriptions", "organizations_url": "https://api.github.com/users/TriLoo/orgs", "repos_url": "https://api.github.com/users/TriLoo/repos", "events_url": "https://api.github.com/users/TriLoo/events{/privacy}", "received_events_url": "https://api.github.com/users/TriLoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T05:32:36Z", "updated_at": "2020-05-22T05:37:35Z", "closed_at": "2020-05-22T05:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "mxnet installed using latest source code from master branch complains: `AttributeError: module 'mxnet' has no attribute 'metric'`\r\n\r\nlooks like the `metric.py` is missed or moved to another package ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18373", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18373/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18373/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18373/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18373", "id": 621582156, "node_id": "MDU6SXNzdWU2MjE1ODIxNTY=", "number": 18373, "title": "[Numpy] The symbolic export of BatchNorm is wrong", "user": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-20T08:51:22Z", "updated_at": "2020-06-05T02:11:44Z", "closed_at": "2020-05-31T16:44:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport mxnet as mx\r\nimport json\r\nimport pprint\r\nmx.npx.set_np()\r\nnet = mx.gluon.nn.BatchNorm(epsilon=2E-5, axis=2)\r\nnet.hybridize()\r\nnet.initialize()\r\na = net(mx.np.ones((10, 3, 5, 5)))\r\nnet.export('bnorm', 0)\r\nwith open('bnorm-symbol.json') as f:\r\n   dat = json.load(f)\r\n   pprint.pprint(dat)\r\n```\r\n\r\nOutput:\r\n```\r\n           {'attrs': {'__profiler_scope__': 'batchnorm0:',\r\n                      'axis': '1',\r\n                      'eps': '1e-05',\r\n                      'fix_gamma': 'False',\r\n                      'momentum': '0.9',\r\n                      'use_global_stats': 'False'},\r\n            'inputs': [[0, 0, 0], [1, 0, 0], [2, 0, 0], [3, 0, 1], [4, 0, 1]],\r\n            'name': 'batchnorm0_fwd',\r\n            'op': 'BatchNorm'}]}\r\n```\r\nWe can find that `eps` and `axis` are not stored.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18372", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18372/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18372/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18372/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18372", "id": 621511080, "node_id": "MDU6SXNzdWU2MjE1MTEwODA=", "number": 18372, "title": "Question about testing weight sharing of two resnets in test_gluon_estimator.py", "user": {"login": "acphile", "id": 24974319, "node_id": "MDQ6VXNlcjI0OTc0MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/24974319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acphile", "html_url": "https://github.com/acphile", "followers_url": "https://api.github.com/users/acphile/followers", "following_url": "https://api.github.com/users/acphile/following{/other_user}", "gists_url": "https://api.github.com/users/acphile/gists{/gist_id}", "starred_url": "https://api.github.com/users/acphile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acphile/subscriptions", "organizations_url": "https://api.github.com/users/acphile/orgs", "repos_url": "https://api.github.com/users/acphile/repos", "events_url": "https://api.github.com/users/acphile/events{/privacy}", "received_events_url": "https://api.github.com/users/acphile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-20T06:59:56Z", "updated_at": "2020-05-27T04:08:30Z", "closed_at": "2020-05-27T04:08:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/apache/incubator-mxnet/blob/master/tests/python/unittest/test_gluon_estimator.py#L423\r\nActually val_net.output does not share the same parameters with net.output in this case.\r\nAnd I don't understand what the test case is aimed for. Why only share the output parameters to test weight sharing of two resnets? @liuzh91", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18367", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18367/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18367/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18367/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18367", "id": 621239486, "node_id": "MDU6SXNzdWU2MjEyMzk0ODY=", "number": 18367, "title": "Google JQuery CDN [https://ajax.googleapis.com] is banned in China", "user": {"login": "ys2843", "id": 23468760, "node_id": "MDQ6VXNlcjIzNDY4NzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/23468760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ys2843", "html_url": "https://github.com/ys2843", "followers_url": "https://api.github.com/users/ys2843/followers", "following_url": "https://api.github.com/users/ys2843/following{/other_user}", "gists_url": "https://api.github.com/users/ys2843/gists{/gist_id}", "starred_url": "https://api.github.com/users/ys2843/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ys2843/subscriptions", "organizations_url": "https://api.github.com/users/ys2843/orgs", "repos_url": "https://api.github.com/users/ys2843/repos", "events_url": "https://api.github.com/users/ys2843/events{/privacy}", "received_events_url": "https://api.github.com/users/ys2843/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 708199304, "node_id": "MDU6TGFiZWw3MDgxOTkzMDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Website", "name": "Website", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-19T19:46:12Z", "updated_at": "2020-05-20T15:48:50Z", "closed_at": "2020-05-20T15:48:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nIn MXNet website, JQuery script is loaded from google CDN in `<head>`\r\n```html\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n```\r\nBut this CDN is known banned in China, as you can see here:\r\n+ [Similar Github issues on other website](https://github.com/kubeflow/website/issues/81)\r\n+ [Things to Consider When Building a Website in China](https://www.labsterx.com/blog/things-to-consider-when-building-a-website-in-china-9-shtml/)\r\n+ [Can webflow team replace \u201cajax.googleapis.com\u201d with a reachable URL for China?](https://forum.webflow.com/t/can-webflow-team-replace-ajax-googleapis-com-with-a-reachable-url-for-china/29284)\r\n\r\nHere is my own test using Chinese servers:\r\n\r\n<img width=\"760\" alt=\"Screen Shot 2020-05-19 at 12 11 59 PM\" src=\"https://user-images.githubusercontent.com/23468760/82372090-30d90e00-99d0-11ea-8262-00f6590d484d.png\">\r\n\r\nIt not only blocks website from loading, but also breaks all the interaction on MXNet website. (e.g. dropdown, installation guide, search etc. )\r\n\r\n### Error Message\r\n`ReferenceError: jQuery is not defined[Learn More]`\r\n\r\n## Proposed solutions \r\nWhile China is the number one country using the MXNet website. We need to solve this problem so that users in China can visit MXNet website without any problem. Here are 3 solutions:\r\n+ Use an alternative CDN as a backup, for example [CDN hosted in China](https://www.bootcdn.cn/) , when google CDN fails then load the resource from backup CDN , as discussed [in this question](https://stackoverflow.com/questions/1014203/best-way-to-use-googles-hosted-jquery-but-fall-back-to-my-hosted-library-on-go)\r\n+ Replace google CDN by another CDN\r\n+ Hosting jQuery locally (**Not preferable** performance-wise, reasons can be found [here](https://meta.stackoverflow.com/questions/258288/use-of-ajax-googleapis-com-not-china-friendly) )\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18364", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18364/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18364/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18364/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18364", "id": 620880663, "node_id": "MDU6SXNzdWU2MjA4ODA2NjM=", "number": 18364, "title": "mx.gluon.data.Dataset class not support multiprocessing.Pool()", "user": {"login": "TriLoo", "id": 16267477, "node_id": "MDQ6VXNlcjE2MjY3NDc3", "avatar_url": "https://avatars1.githubusercontent.com/u/16267477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TriLoo", "html_url": "https://github.com/TriLoo", "followers_url": "https://api.github.com/users/TriLoo/followers", "following_url": "https://api.github.com/users/TriLoo/following{/other_user}", "gists_url": "https://api.github.com/users/TriLoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TriLoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TriLoo/subscriptions", "organizations_url": "https://api.github.com/users/TriLoo/orgs", "repos_url": "https://api.github.com/users/TriLoo/repos", "events_url": "https://api.github.com/users/TriLoo/events{/privacy}", "received_events_url": "https://api.github.com/users/TriLoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-05-19T10:56:50Z", "updated_at": "2020-05-22T12:54:50Z", "closed_at": "2020-05-21T02:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI installed mxnet using `cmake`, followed the tutorial: [get started-mx](https://mxnet.incubator.apache.org/get_started/ubuntu_setup.html). However, the program cannot continue execution when using followed code:\r\n\r\n``` python\r\nif self._num_workers > 0:\r\n            self._worker_pool = multiprocessing.Pool(\r\n                self._num_workers, initializer=_worker_initializer, initargs=[self._dataset])\r\n``` \r\nthe code is intercepted from [here - yolov3](https://github.com/dmlc/gluon-cv/blob/3c4150a964c776e4f7da0eb30b55ab05b7554c8d/gluoncv/data/dataloader.py#L273)\r\n\r\n### Error Message\r\nNo error message, the process is still running but cannot step out the above `Pool()` function.\r\n\r\n## To Reproduce\r\n### Steps to reproduce\r\n\r\n1. build the latest mxnet using cmake, with `CUDA, MKLDNN, OpenMP` enabled\r\n2. run the `train_yolov3.sh` from gluon-cv\r\n\r\n## What have you tried to solve it?\r\n1.  the mxnet installed by `pip install mxnet-cu100mkl` can step out the `multiprocessing.Pool()` and continue execution\r\n2. mxnet installed by `cmake` and `pip install --user -e .`, then  cannot step out.\r\n3. when installed using `cmake`, the `Dataloader` can work through with `num_workers>0`, but its derived class cannot.\r\n\r\n\r\n\r\n\r\n## Environment\r\n\r\n```\r\n----------Python Info----------\r\nVersion      : 3.6.8\r\nCompiler     : GCC 7.3.0\r\nBuild        : ('default', 'Dec 30 2018 01:22:34')\r\nArch         : ('64bit', '')\r\n------------Pip Info-----------\r\nVersion      : 19.1.1\r\nDirectory    : /search/odin/songminghui/anaconda3/lib/python3.6/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 2.0.0\r\nDirectory    : /search/odin/songminghui/githubs/incubator-mxnet/python/mxnet\r\nNum GPUs     : 8\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-3.10.0-327.el7.x86_64-x86_64-with-centos-7.2.1511-Core\r\nsystem       : Linux\r\nnode         : nmyjs_176_61\r\nrelease      : 3.10.0-327.el7.x86_64\r\nversion      : #1 SMP Thu Nov 19 22:10:57 UTC 2015\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : x86_64\r\nArchitecture:          x86_64\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Little Endian\r\nCPU(s):                48\r\nOn-line CPU(s) list:   0-47\r\nThread(s) per core:    2\r\nCore(s) per socket:    12\r\nSocket(s):             2\r\nNUMA node(s):          2\r\nVendor ID:             GenuineIntel\r\nCPU family:            6\r\nModel:                 79\r\nModel name:            Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz\r\nStepping:              1\r\nCPU MHz:               2195.104\r\nBogoMIPS:              4398.47\r\nVirtualization:        VT-x\r\nL1d cache:             32K\r\nL1i cache:             32K\r\nL2 cache:              256K\r\nL3 cache:              30720K\r\nNUMA node0 CPU(s):     0-11,24-35\r\nNUMA node1 CPU(s):     12-23,36-47\r\n----------Network Test----------\r\nSetting timeout: 10\r\nError open MXNet: https://github.com/apache/incubator-mxnet, <urlopen error timed out>, DNS finished in 1.2967002391815186 sec.\r\nError open GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, <urlopen error timed out>, DNS finished in 4.1484832763671875e-05 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 1.1775 sec, LOAD: 3.5363 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.4321 sec, LOAD: 0.8394 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.3948 sec, LOAD: 1.0763 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.4420 sec, LOAD: 2.9380 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.1293 sec, LOAD: 13.5263 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.47435927391052246 sec.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18353", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18353/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18353/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18353/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18353", "id": 620150071, "node_id": "MDU6SXNzdWU2MjAxNTAwNzE=", "number": 18353, "title": "[Numpy] Division fails for differnt floating dtypes ", "user": {"login": "ZheyuYe", "id": 37728728, "node_id": "MDQ6VXNlcjM3NzI4NzI4", "avatar_url": "https://avatars1.githubusercontent.com/u/37728728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZheyuYe", "html_url": "https://github.com/ZheyuYe", "followers_url": "https://api.github.com/users/ZheyuYe/followers", "following_url": "https://api.github.com/users/ZheyuYe/following{/other_user}", "gists_url": "https://api.github.com/users/ZheyuYe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZheyuYe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZheyuYe/subscriptions", "organizations_url": "https://api.github.com/users/ZheyuYe/orgs", "repos_url": "https://api.github.com/users/ZheyuYe/repos", "events_url": "https://api.github.com/users/ZheyuYe/events{/privacy}", "received_events_url": "https://api.github.com/users/ZheyuYe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-18T11:59:27Z", "updated_at": "2020-05-24T01:43:35Z", "closed_at": "2020-05-24T01:43:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThe current `mx.np.ndarray` produces errors that cannot be tolerated in the face of simple division when the numerator and denominator data types have two differnt floating dtypes `np.float32` and `np.float64` such as \r\n```\r\nimport mxnet as mx\r\nimport numpy as np\r\nmx.npx.set_np()\r\nnumerator = mx.np.array(5.0).astype(np.float64)\r\ndenominator = mx.np.array(2.0)\r\nnumerator/denominator\r\n>>>array(0., dtype=float64)\r\n```\r\nwhereas the correct answer is obviously 2.5. \r\n\r\n```\r\nimport numpy as np\r\nnumerator = np.array(5.0).astype(np.float64)\r\ndenominator = np.array(2.0)\r\nnumerator/denominator\r\n>>>2.5\r\n```\r\nThe same calculation steps are reliable under numpy, which forces us to face this problem directly.\r\n\r\n## Comments\r\n@sxjscience ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18345", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18345/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18345/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18345/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18345", "id": 619599821, "node_id": "MDU6SXNzdWU2MTk1OTk4MjE=", "number": 18345, "title": "how to hybridize this code", "user": {"login": "yezqNLP", "id": 35182031, "node_id": "MDQ6VXNlcjM1MTgyMDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/35182031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezqNLP", "html_url": "https://github.com/yezqNLP", "followers_url": "https://api.github.com/users/yezqNLP/followers", "following_url": "https://api.github.com/users/yezqNLP/following{/other_user}", "gists_url": "https://api.github.com/users/yezqNLP/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezqNLP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezqNLP/subscriptions", "organizations_url": "https://api.github.com/users/yezqNLP/orgs", "repos_url": "https://api.github.com/users/yezqNLP/repos", "events_url": "https://api.github.com/users/yezqNLP/events{/privacy}", "received_events_url": "https://api.github.com/users/yezqNLP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-17T03:22:07Z", "updated_at": "2020-05-17T05:15:02Z", "closed_at": "2020-05-17T05:15:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use the following code, which cannot be hybridized as code `height, width = x.shape[2:]` which reported error that `AttributeError: 'Symbol' object has no attribute 'shape'`. \r\nHow can I change this code to hybridize?\r\n\r\n```\r\ndef calc_tf_padding(x,\r\n                    kernel_size,\r\n                    strides=1,\r\n                    dilation=1):\r\n    \"\"\"\r\n    Calculate TF-same like padding size.\r\n\r\n    Returns\r\n    -------\r\n    tuple of 4 int\r\n        The size of the padding.\r\n    \"\"\"\r\n    height, width = x.shape[2:]\r\n    oh = math.ceil(height / strides)\r\n    ow = math.ceil(width / strides)\r\n    pad_h = max((oh - 1) * strides + (kernel_size - 1) * dilation + 1 - height, 0)\r\n    pad_w = max((ow - 1) * strides + (kernel_size - 1) * dilation + 1 - width, 0)\r\n    return 0, 0, 0, 0, pad_h // 2, pad_h - pad_h // 2, pad_w // 2, pad_w - pad_w // 2\r\n\r\n```\r\nThe method that call `calc_tf_padding`\r\n```        \r\nx = F.pad(x, mode=\"constant\", pad_width=calc_tf_padding(x, kernel_size=3), constant_value=0)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18341", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18341/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18341/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18341/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18341", "id": 619537596, "node_id": "MDU6SXNzdWU2MTk1Mzc1OTY=", "number": 18341, "title": "[DLPack][Numpy] Port from_dlpack and to_dlpack to `npx`", "user": {"login": "sxjscience", "id": 5178350, "node_id": "MDQ6VXNlcjUxNzgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5178350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxjscience", "html_url": "https://github.com/sxjscience", "followers_url": "https://api.github.com/users/sxjscience/followers", "following_url": "https://api.github.com/users/sxjscience/following{/other_user}", "gists_url": "https://api.github.com/users/sxjscience/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxjscience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxjscience/subscriptions", "organizations_url": "https://api.github.com/users/sxjscience/orgs", "repos_url": "https://api.github.com/users/sxjscience/repos", "events_url": "https://api.github.com/users/sxjscience/events{/privacy}", "received_events_url": "https://api.github.com/users/sxjscience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 823355562, "node_id": "MDU6TGFiZWw4MjMzNTU1NjI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Feature%20request", "name": "Feature request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T19:09:54Z", "updated_at": "2020-05-17T21:45:17Z", "closed_at": "2020-05-17T21:45:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nIn the legacy NDArray API, we have the `to_dlpack` and `from_dlpack` functionality that facilitates us to convert to/from pytorch tensors. We should port these features to the new numpy interface:\r\n\r\n```python\r\nmx.npx.from_dlpack(...)\r\nmx.npx.to_dlpack(...)\r\n```\r\n\r\nCurrently, we are able to workaround via\r\n\r\n```python\r\nimport torch as th\r\nimport mxnet as mx\r\nfrom torch.utils.dlpack import to_dlpack\r\nmx.npx.set_np()\r\na_th = th.ones(10, 10)\r\n\r\na_mx_np = mx.nd.from_dlpack(to_dlpack(a_th)).as_np_ndarray()\r\nprint(a_mx_np)\r\n```\r\nOut:\r\n```\r\n[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\r\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18329", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18329/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18329/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18329/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18329", "id": 618638243, "node_id": "MDU6SXNzdWU2MTg2MzgyNDM=", "number": 18329, "title": "'mxnet' has no attribute 'metric'", "user": {"login": "heaseny", "id": 35910818, "node_id": "MDQ6VXNlcjM1OTEwODE4", "avatar_url": "https://avatars0.githubusercontent.com/u/35910818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heaseny", "html_url": "https://github.com/heaseny", "followers_url": "https://api.github.com/users/heaseny/followers", "following_url": "https://api.github.com/users/heaseny/following{/other_user}", "gists_url": "https://api.github.com/users/heaseny/gists{/gist_id}", "starred_url": "https://api.github.com/users/heaseny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heaseny/subscriptions", "organizations_url": "https://api.github.com/users/heaseny/orgs", "repos_url": "https://api.github.com/users/heaseny/repos", "events_url": "https://api.github.com/users/heaseny/events{/privacy}", "received_events_url": "https://api.github.com/users/heaseny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T01:43:16Z", "updated_at": "2020-05-15T01:46:32Z", "closed_at": "2020-05-15T01:46:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nOn master branch, when execute the below commands,\r\npython -c \"import gluoncv\" or python -c \"import mxnet as mx; print(mx.metric)\" , an error raised with message: 'mxnet' has no attribute 'metric'\r\n\r\n### Error Message\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/__init__.py\", line 8, in <module>\r\n    from . import data\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/data/__init__.py\", line 4, in <module>\r\n    from . import transforms\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/data/transforms/__init__.py\", line 6, in <module>\r\n    from . import experimental\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/data/transforms/experimental/__init__.py\", line 2, in <module>\r\n    from . import bbox\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/data/transforms/experimental/bbox.py\", line 6, in <module>\r\n    from ....utils import bbox_iou\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/utils/__init__.py\", line 8, in <module>\r\n    from . import metrics\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/utils/metrics/__init__.py\", line 4, in <module>\r\n    from .coco_detection import COCODetectionMetric\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/gluoncv/utils/metrics/coco_detection.py\", line 18, in <module>\r\n    class COCODetectionMetric(mx.metric.EvalMetric):\r\nAttributeError: module 'mxnet' has no attribute 'metric'\r\n\r\n## To Reproduce\r\n1. install MXNet with master branch lastest commit from build source \r\nmake -j USE_MKLDNN=1 USE_OPENCV=1 USE_BLAS=mkl USE_GPERFTOOLS=0 USE_INTEL_PATH=/opt/intel/\r\n2. Execute the below command, then the error will raise:\r\n python -c \"import gluoncv\" or python -c \"import mxnet as mx; print(mx.metric)\"\r\n\r\n\r\n## Environment\r\nCentOS7.6\r\nPython3\r\nGCC7.3.1\r\ncmake:3.14.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18322", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18322/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18322/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18322/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18322", "id": 618365869, "node_id": "MDU6SXNzdWU2MTgzNjU4Njk=", "number": 18322, "title": "test_recordimage_dataset", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T16:24:53Z", "updated_at": "2020-05-21T01:59:33Z", "closed_at": "2020-05-21T01:59:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://jenkins.mxnet-ci.amazon-ml.com/blue/rest/organizations/jenkins/pipelines/mxnet-validation/pipelines/windows-gpu/branches/PR-18312/runs/2/nodes/109/steps/155/log/?start=0\r\n```\r\n\r\n[2020-05-14T09:13:07.293Z] __________________________ test_recordimage_dataset ___________________________\r\n[2020-05-14T09:13:07.293Z] [gw0] win32 -- Python 3.7.3 C:\\Python37\\python.exe\r\n[2020-05-14T09:13:07.293Z] \r\n[2020-05-14T09:13:07.293Z]     @with_seed()\r\n[2020-05-14T09:13:07.293Z]     def test_recordimage_dataset():\r\n[2020-05-14T09:13:07.293Z]         recfile = prepare_record()\r\n[2020-05-14T09:13:07.293Z]         fn = lambda x, y : (x, y)\r\n[2020-05-14T09:13:07.293Z]         dataset = gluon.data.vision.ImageRecordDataset(recfile).transform(fn)\r\n[2020-05-14T09:13:07.293Z]         loader = gluon.data.DataLoader(dataset, 1)\r\n[2020-05-14T09:13:07.293Z]     \r\n[2020-05-14T09:13:07.293Z] >       for i, (x, y) in enumerate(loader):\r\n[2020-05-14T09:13:07.293Z] \r\n[2020-05-14T09:13:07.293Z] tests\\python\\unittest\\test_gluon_data.py:75: \r\n[2020-05-14T09:13:07.293Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\gluon\\data\\dataloader.py:659: in same_process_iter\r\n[2020-05-14T09:13:07.293Z]     ret = self._batchify_fn([self._dataset[idx] for idx in batch])\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\gluon\\data\\dataloader.py:659: in <listcomp>\r\n[2020-05-14T09:13:07.293Z]     ret = self._batchify_fn([self._dataset[idx] for idx in batch])\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\gluon\\data\\dataset.py:232: in __getitem__\r\n[2020-05-14T09:13:07.293Z]     item = self._data[idx]\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\gluon\\data\\vision\\datasets.py:271: in __getitem__\r\n[2020-05-14T09:13:07.293Z]     return image.imdecode(img, self._flag), header.label\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\image\\image.py:211: in imdecode\r\n[2020-05-14T09:13:07.293Z]     return cvimdecode(buf, *args, **kwargs)\r\n[2020-05-14T09:13:07.293Z] <string>:38: in _cvimdecode\r\n[2020-05-14T09:13:07.293Z]     ???\r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\_ctypes\\ndarray.py:91: in _imperative_invoke\r\n[2020-05-14T09:13:07.293Z]     ctypes.byref(out_stypes)))\r\n[2020-05-14T09:13:07.293Z] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n[2020-05-14T09:13:07.293Z] \r\n[2020-05-14T09:13:07.293Z] ret = -1\r\n[2020-05-14T09:13:07.293Z] \r\n[2020-05-14T09:13:07.293Z]     def check_call(ret):\r\n[2020-05-14T09:13:07.293Z]         \"\"\"Check the return value of C API call.\r\n[2020-05-14T09:13:07.293Z]     \r\n[2020-05-14T09:13:07.293Z]         This function will raise an exception when an error occurs.\r\n[2020-05-14T09:13:07.293Z]         Wrap every API call with this function.\r\n[2020-05-14T09:13:07.293Z]     \r\n[2020-05-14T09:13:07.293Z]         Parameters\r\n[2020-05-14T09:13:07.293Z]         ----------\r\n[2020-05-14T09:13:07.293Z]         ret : int\r\n[2020-05-14T09:13:07.293Z]             return value from API calls.\r\n[2020-05-14T09:13:07.293Z]         \"\"\"\r\n[2020-05-14T09:13:07.293Z]         if ret != 0:\r\n[2020-05-14T09:13:07.293Z] >           raise get_last_ffi_error()\r\n[2020-05-14T09:13:07.293Z] E           mxnet.base.MXNetError: Traceback (most recent call last):\r\n[2020-05-14T09:13:07.293Z] E             File \"..\\src\\io\\image_io.cc\", line 190\r\n[2020-05-14T09:13:07.293Z] E           MXNetError: Check failed: len > 0: Input cannot be an empty buffer\r\n[2020-05-14T09:13:07.293Z] \r\n[2020-05-14T09:13:07.293Z] windows_package\\python\\mxnet\\base.py:246: MXNetError\r\n[2020-05-14T09:13:07.293Z] ---------------------------- Captured stderr setup ----------------------------\r\n```\r\n\r\n@zhreshold ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18314", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18314/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18314/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18314/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18314", "id": 617937228, "node_id": "MDU6SXNzdWU2MTc5MzcyMjg=", "number": 18314, "title": "ThreadedEngine: Segfault", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-14T05:32:55Z", "updated_at": "2020-05-15T01:21:17Z", "closed_at": "2020-05-15T01:20:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nThe following code shouldn't crash, but can reliably trigger segfault in ThreadedEngine. (No segfault with NaiveEngine).\r\n\r\n```\r\nimport gc\r\ngc.set_debug(gc.DEBUG_SAVEALL)\r\nimport mxnet as mx\r\nnet = mx.gluon.nn.Dense(10, in_units=10)\r\nnet.initialize()\r\ndel net\r\nprint(gc.collect())\r\nfor i, x in enumerate(gc.garbage):\r\n    print(i, type(x), id(x), end=' ')\r\n    try:\r\n        print('\\t', x)\r\n    except Exception as e:\r\n        print('failed', e)\r\n```\r\n\r\ncc @eric-haibin-lin ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18304", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18304/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18304/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18304/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18304", "id": 617437968, "node_id": "MDU6SXNzdWU2MTc0Mzc5Njg=", "number": 18304, "title": "Building from source with cpp-package fails due to error in OpWrapperGenerator.py", "user": {"login": "sarfaty", "id": 65289960, "node_id": "MDQ6VXNlcjY1Mjg5OTYw", "avatar_url": "https://avatars2.githubusercontent.com/u/65289960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarfaty", "html_url": "https://github.com/sarfaty", "followers_url": "https://api.github.com/users/sarfaty/followers", "following_url": "https://api.github.com/users/sarfaty/following{/other_user}", "gists_url": "https://api.github.com/users/sarfaty/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarfaty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarfaty/subscriptions", "organizations_url": "https://api.github.com/users/sarfaty/orgs", "repos_url": "https://api.github.com/users/sarfaty/repos", "events_url": "https://api.github.com/users/sarfaty/events{/privacy}", "received_events_url": "https://api.github.com/users/sarfaty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T13:13:23Z", "updated_at": "2020-05-13T17:59:07Z", "closed_at": "2020-05-13T17:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nI am trying to build MXNet with c++ API on CentOS 7.3, on a machine that i do not own, and on which i have no sudo/root privileges.\r\nI installed all the needed dependencies (mkl, cmake, ninja, etc.), and set the relevant environment variables towards the correct paths, including gcc and g++.\r\nI ran the two commands:\r\n```\r\n1. cmake -DUSE_CUDA=0 -DUSE_CUDNN=0 -DUSE_OPENCV=0 -DUSE_CPP_PACKAGE=1 -DCMAKE_BUILD_TYPE=Release -GNinja ..\r\n2. ninja -v\r\n```\r\n\r\n### Error Message\r\n```\r\nFAILED: cpp-package/CMakeFiles/cpp_package_op_h ../cpp-package/include/mxnet-cpp/op.h cpp-package/MAIN_DEPENDENCY cpp-package/mxnet \r\ncd /fs/src/interfaces/terragen/mxnet/cpp-package/scripts && echo Running:\\ OpWrapperGenerator.py && python OpWrapperGenerator.py /fs/src/interfaces/terragen/mxnet/build/libmxnet.so\r\nRunning: OpWrapperGenerator.py\r\nTraceback (most recent call last):\r\n  File \"OpWrapperGenerator.py\", line 429, in <module>\r\n    f.write(patternStr % ParseAllOps())\r\n  File \"OpWrapperGenerator.py\", line 323, in ParseAllOps\r\n    cdll.libmxnet = cdll.LoadLibrary(sys.argv[1])\r\n  File \"/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py\", line 451, in LoadLibrary\r\n    return self._dlltype(name)\r\n  File \"/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py\", line 373, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: /depot/gcc-4.8.1/lib64/libgomp.so.1: version `GOMP_4.5' not found (required by /fs/src/interfaces/terragen/mxnet/build/libmxnet.so)\r\nTraceback (most recent call last):\r\n  File \"OpWrapperGenerator.py\", line 436, in <module>\r\n    raise(e)\r\n  File \"OpWrapperGenerator.py\", line 429, in <module>\r\n    f.write(patternStr % ParseAllOps())\r\n  File \"OpWrapperGenerator.py\", line 323, in ParseAllOps\r\n    cdll.libmxnet = cdll.LoadLibrary(sys.argv[1])\r\n  File \"/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py\", line 451, in LoadLibrary\r\n    return self._dlltype(name)\r\n  File \"/depot/Python/Python-3.8.1/lib/python3.8/ctypes/__init__.py\", line 373, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: /depot/gcc-4.8.1/lib64/libgomp.so.1: version `GOMP_4.5' not found (required by /fs/src/interfaces/terragen/mxnet/build/libmxnet.so)\r\nninja: build stopped: subcommand failed.\r\n```\r\n## Remarks\r\nThe gcc version defined in PATH , LD_LIBRARY_PATH and CXX is 9.1.0, and resides in the path \"/depot/GCC/gcc-9.1.0/\", yet some part in the build process calls \"/depot/gcc-4.8.1/lib64/libgomp.so.1\" implicitly, and causes a version mismatch.\r\n\r\nI don't know where this is specific path comes from since:\r\n/usr/bin/gcc --version : 4.8.5\r\n/usr/local/bin/gcc --version : 4.5.2\r\necho $LD_LIBRARY_PATH : /depot/GCC/gcc-9.1.0/lib64:/usr/local/lib\r\n\r\n## Request for action\r\n1.  Considering the option of me being wrong - please help me out here, and tell what can i change and where, to let the build process be completed.\r\n2. Considering the option of a bug - some part of the build process doesn't rely on the environment variables while calling gcc libs, and causes version incompatibility. So it might be right to align this part (that i have no idea which), with the environment variables.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18303", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18303/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18303/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18303/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18303", "id": 617277593, "node_id": "MDU6SXNzdWU2MTcyNzc1OTM=", "number": 18303, "title": "[Unit Test]test_numpy_op.py:test_np_mixed_precision_binary_funcs randomly failed due to assertion error", "user": {"login": "heaseny", "id": 35910818, "node_id": "MDQ6VXNlcjM1OTEwODE4", "avatar_url": "https://avatars0.githubusercontent.com/u/35910818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heaseny", "html_url": "https://github.com/heaseny", "followers_url": "https://api.github.com/users/heaseny/followers", "following_url": "https://api.github.com/users/heaseny/following{/other_user}", "gists_url": "https://api.github.com/users/heaseny/gists{/gist_id}", "starred_url": "https://api.github.com/users/heaseny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heaseny/subscriptions", "organizations_url": "https://api.github.com/users/heaseny/orgs", "repos_url": "https://api.github.com/users/heaseny/repos", "events_url": "https://api.github.com/users/heaseny/events{/privacy}", "received_events_url": "https://api.github.com/users/heaseny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T09:05:42Z", "updated_at": "2020-05-13T18:00:47Z", "closed_at": "2020-05-13T18:00:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\ntest_numpy_op.py:test_np_mixed_precision_binary_funcs randomly failed due to assertion error, and can be reproduced by test seed.\r\nTest command:\r\ncd tests/python/unittest/\r\nMXNET_TEST_SEED=445183722 nosetests -v -s test_numpy_op.py:test_np_mixed_precision_binary_funcs\r\n\r\n### Error Message\r\ntest_numpy_op.test_np_mixed_precision_binary_funcs ... [INFO] Setting test np/mx/python random seeds, use MXNET_TEST_SEED=445183722 to reproduce.\r\n\r\n*** Maximum errors for vector of size 6:  rtol=0.01, atol=0.001\r\n\r\n  1: Error 1.470077  Location of error: (1, 1), a=0.02921580, b=0.02734375\r\nFAIL\r\n\r\n======================================================================\r\nFAIL: test_numpy_op.test_np_mixed_precision_binary_funcs\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/mxnet/workspace/source/incubator-mxnet/tests/python/unittest/common.py\", line 223, in test_new\r\n    orig_test(*args, **kwargs)\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/mxnet-2.0.0-py3.6.egg/mxnet/util.py\", line 297, in _with_np_shape\r\n    return func(*args, **kwargs)\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/mxnet-2.0.0-py3.6.egg/mxnet/util.py\", line 481, in _with_np_array\r\n    return func(*args, **kwargs)\r\n  File \"/home/mxnet/workspace/source/incubator-mxnet/tests/python/unittest/test_numpy_op.py\", line 2655, in test_np_mixed_precision_binary_funcs\r\n    check_mixed_precision_binary_func(func, low, high, lshape, rshape, lgrad, rgrad, type1, type2)\r\n  File \"/home/mxnet/workspace/source/incubator-mxnet/tests/python/unittest/test_numpy_op.py\", line 2595, in check_mixed_precision_binary_func\r\n    use_broadcast=False, equal_nan=True)\r\n  File \"/home/mxnet/anacondaenv/anaconda3_mxnet/envs/mxnet_daily_py3/lib/python3.6/site-packages/mxnet-2.0.0-py3.6.egg/mxnet/test_utils.py\", line 637, in assert_almost_equal\r\n    raise AssertionError(msg)\r\nAssertionError:\r\nError 1.470077 exceeds tolerance rtol=1.000000e-02, atol=1.000000e-03 (mismatch 16.666667%).\r\nLocation of maximum error: (1, 1), a=0.02921580, b=0.02734375\r\n ACTUAL: array([[2.87304688, 1.95996094, 1.35742188],\r\n       [3.35351562, 0.0292158 , 3.74609375]])\r\n DESIRED: array([[2.87304688, 1.95996094, 1.35742188],\r\n       [3.35351562, 0.02734375, 3.74609375]])\r\n-------------------- >> begin captured logging << --------------------\r\ncommon: INFO: Setting test np/mx/python random seeds, use MXNET_TEST_SEED=445183722 to reproduce.\r\nroot: INFO: NumPy-shape semantics has been activated in your code. This is required for creating and manipulating scalar and zero-size tensors, which were not supported in MXNet before, as in the official NumPy library. Please DO NOT manually deactivate this semantics while using `mxnet.numpy` and `mxnet.numpy_extension` modules.\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 2.560s\r\n\r\nFAILED (failures=1)\r\n\r\n## To Reproduce\r\nTest command:\r\nbuild with latest commit on master branch and run with the below commands:\r\ncd tests/python/unittest/\r\nMXNET_TEST_SEED=445183722 nosetests -v -s \r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. Build with mkl and install mxnet\r\n    make -j USE_MKLDNN=1 USE_OPENCV=1 USE_BLAS=mkl USE_GPERFTOOLS=0 USE_INTEL_PATH=/opt/intel/\r\n2.  Run with the below command:\r\ncd tests/python/unittest/\r\nMXNET_TEST_SEED=445183722 nosetests -v -s test_numpy_op.py:test_np_mixed_precision_binary_funcs\r\n\r\n## Environment\r\nCentos7.6\r\npython3.6.8\r\nGCC7.3.1\r\ncmake:3.14.0\r\nCPU\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18299", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18299/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18299/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18299/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18299", "id": 617223327, "node_id": "MDU6SXNzdWU2MTcyMjMzMjc=", "number": 18299, "title": "Fail to use \"==\" operation between different types", "user": {"login": "acphile", "id": 24974319, "node_id": "MDQ6VXNlcjI0OTc0MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/24974319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acphile", "html_url": "https://github.com/acphile", "followers_url": "https://api.github.com/users/acphile/followers", "following_url": "https://api.github.com/users/acphile/following{/other_user}", "gists_url": "https://api.github.com/users/acphile/gists{/gist_id}", "starred_url": "https://api.github.com/users/acphile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acphile/subscriptions", "organizations_url": "https://api.github.com/users/acphile/orgs", "repos_url": "https://api.github.com/users/acphile/repos", "events_url": "https://api.github.com/users/acphile/events{/privacy}", "received_events_url": "https://api.github.com/users/acphile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T07:46:12Z", "updated_at": "2020-06-02T07:31:17Z", "closed_at": "2020-06-02T07:31:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "for example\r\n```\r\nimport mxnet as mx\r\nmx.npx.set_np()\r\nmx.np.arange(5)\r\narray([0., 1., 2., 3., 4.])\r\nb=mx.np.arange(5)\r\na=b.astype('int32')\r\na==b\r\n```\r\nit will raise Error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py\", line 991, in __eq__\r\n    return equal(self, other)\r\n  File \"/home/ubuntu/incubator-mxnet/python/mxnet/numpy/multiarray.py\", line 8451, in equal\r\n    return _mx_nd_np.equal(x1, x2, out)\r\n  File \"/home/ubuntu/incubator-mxnet/python/mxnet/ndarray/numpy/_op.py\", line 6622, in equal\r\n    return _api_internal.equal(x1, x2, out)\r\n  File \"/home/ubuntu/incubator-mxnet/python/mxnet/_ffi/_ctypes/function.py\", line 115, in __call__\r\n    raise get_last_ffi_error()\r\nmxnet.base.MXNetError: MXNetError: Type inconsistent, Provided = float32, inferred type = int32\r\n```\r\nBut numpy supports \"==\" operation between different types", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18298", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18298/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18298/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18298/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18298", "id": 617222959, "node_id": "MDU6SXNzdWU2MTcyMjI5NTk=", "number": 18298, "title": "[v1.x] CI pipeline for NVIDIA Jetson fails with \"unsupported GNU version\"", "user": {"login": "nickguletskii", "id": 786473, "node_id": "MDQ6VXNlcjc4NjQ3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/786473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickguletskii", "html_url": "https://github.com/nickguletskii", "followers_url": "https://api.github.com/users/nickguletskii/followers", "following_url": "https://api.github.com/users/nickguletskii/following{/other_user}", "gists_url": "https://api.github.com/users/nickguletskii/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickguletskii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickguletskii/subscriptions", "organizations_url": "https://api.github.com/users/nickguletskii/orgs", "repos_url": "https://api.github.com/users/nickguletskii/repos", "events_url": "https://api.github.com/users/nickguletskii/events{/privacy}", "received_events_url": "https://api.github.com/users/nickguletskii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T07:45:37Z", "updated_at": "2020-05-26T17:29:13Z", "closed_at": "2020-05-26T17:29:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\n\r\nThe CI pipeline for NVIDIA Jetson uses the following container:  https://hub.docker.com/r/dockcross/linux-arm64/\r\nIt was recently updated to use GCC 8:\r\nhttps://github.com/dockcross/dockcross/commit/37c54a369441edbe98ef65a026d8704574cf086d\r\n\r\nHowever, CUDA 9 doesn't support GCC versions above 6, so the CI pipelines are currently failing with the following message:\r\n\r\n### Error Message\r\n\r\n```\r\nerror: #error -- unsupported GNU version! gcc versions later than 6 are not supported!\r\n```\r\n\r\nhttp://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Fedge/detail/PR-18268/3/pipeline/43\r\n\r\n## To Reproduce\r\n\r\nRun a CI pipeline on the v1.x branch.\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1.\r\n2.\r\n\r\n## What have you tried to solve it?\r\n\r\n1.\r\n2.\r\n\r\n## Environment\r\n\r\nWe recommend using our script for collecting the diagnositc information. Run the following command and paste the outputs below:\r\n```\r\ncurl --retry 10 -s https://raw.githubusercontent.com/dmlc/gluon-nlp/master/tools/diagnose.py | python\r\n\r\n# paste outputs here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18297", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18297/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18297/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18297/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18297", "id": 617220530, "node_id": "MDU6SXNzdWU2MTcyMjA1MzA=", "number": 18297, "title": "different dtype when calculating division compared with numpy", "user": {"login": "acphile", "id": 24974319, "node_id": "MDQ6VXNlcjI0OTc0MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/24974319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acphile", "html_url": "https://github.com/acphile", "followers_url": "https://api.github.com/users/acphile/followers", "following_url": "https://api.github.com/users/acphile/following{/other_user}", "gists_url": "https://api.github.com/users/acphile/gists{/gist_id}", "starred_url": "https://api.github.com/users/acphile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acphile/subscriptions", "organizations_url": "https://api.github.com/users/acphile/orgs", "repos_url": "https://api.github.com/users/acphile/repos", "events_url": "https://api.github.com/users/acphile/events{/privacy}", "received_events_url": "https://api.github.com/users/acphile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 588394144, "node_id": "MDU6TGFiZWw1ODgzOTQxNDQ=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Doc", "name": "Doc", "color": "5319e7", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-13T07:41:47Z", "updated_at": "2020-05-25T16:47:44Z", "closed_at": "2020-05-25T16:47:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example:\r\nin mxnet.numpy\r\n&nbsp;&nbsp; for two ndarray a,b with dtype='int64', the dtype of result c = a  / b is 'float32'\r\nin numpy\r\n&nbsp;&nbsp; the dtype is 'float64'\r\nGenerally, when calculating division, mxnet.numpy often uses float32 while numpy uses float64.\r\nUsing float32 will often lead to the loss of floating point precision.\r\n```\r\nb=mx.np.array(1, dtype='int32')\r\ne=b/3\r\ne.item()\r\n>>> 0.3333333432674408\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18295", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18295/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18295/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18295/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18295", "id": 617120826, "node_id": "MDU6SXNzdWU2MTcxMjA4MjY=", "number": 18295, "title": "/usr/lib64/libc.so.6 cause a mxnet segmentation.", "user": {"login": "TriLoo", "id": 16267477, "node_id": "MDQ6VXNlcjE2MjY3NDc3", "avatar_url": "https://avatars1.githubusercontent.com/u/16267477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TriLoo", "html_url": "https://github.com/TriLoo", "followers_url": "https://api.github.com/users/TriLoo/followers", "following_url": "https://api.github.com/users/TriLoo/following{/other_user}", "gists_url": "https://api.github.com/users/TriLoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/TriLoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TriLoo/subscriptions", "organizations_url": "https://api.github.com/users/TriLoo/orgs", "repos_url": "https://api.github.com/users/TriLoo/repos", "events_url": "https://api.github.com/users/TriLoo/events{/privacy}", "received_events_url": "https://api.github.com/users/TriLoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T03:56:01Z", "updated_at": "2020-05-14T07:25:05Z", "closed_at": "2020-05-14T07:24:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\nwhen using **cpp-package** to do inference, a `dmlc::Error` arose.\r\n\r\n### Error Message\r\nthe output of `bt` in gdb:\r\n\r\n```\r\n#0  0x00007fe0287f65f7 in raise () from /usr/lib64/libc.so.6\r\n#1  0x00007fe0287f7ce8 in abort () from /usr/lib64/libc.so.6\r\n#2  0x00007fe0290fb9d5 in __gnu_cxx::__verbose_terminate_handler() () from /usr/lib64/libstdc++.so.6\r\n#3  0x00007fe0290f9946 in ?? () from /usr/lib64/libstdc++.so.6\r\n#4  0x00007fe0290f8909 in ?? () from /usr/lib64/libstdc++.so.6\r\n#5  0x00007fe0290f9574 in __gxx_personality_v0 () from /usr/lib64/libstdc++.so.6\r\n#6  0x00007fe028b92903 in ?? () from /usr/lib64/libgcc_s.so.1\r\n#7  0x00007fe028b92c9b in _Unwind_RaiseException () from /usr/lib64/libgcc_s.so.1\r\n#8  0x00007fe0290f9b86 in __cxa_throw () from /usr/lib64/libstdc++.so.6\r\n#9  0x00007fe035a5c148 in void mshadow::DeleteStream<mshadow::gpu>(mshadow::Stream<mshadow::gpu>*) () from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#10 0x00007fe035a5d163 in mshadow::Stream<mshadow::gpu>* mshadow::NewStream<mshadow::gpu>(bool, bool, int) () from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#11 0x00007fe035a73bbf in void mxnet::engine::ThreadedEnginePerDevice::GPUWorker<(dmlc::ConcurrentQueueType)0>(mxnet::Context, bool, mxnet::engine::ThreadedEnginePerDevice::ThreadWorkerBlock<(dmlc::ConcurrentQueueType)0>*, std::shared_ptr<dmlc::ManualEvent> const&) ()\r\n   from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#12 0x00007fe035a73e0e in std::_Function_handler<void (std::shared_ptr<dmlc::ManualEvent>), mxnet::engine::ThreadedEnginePerDevice::PushToExecute(mxnet::engine::OprBlock*, bool)::{lambda()#4}::operator()() const::{lambda(std::shared_ptr<dmlc::ManualEvent>)#1}>::_M_invoke(std::_Any_data const&, std::shared_ptr<dmlc::ManualEvent>&&) () from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#13 0x00007fe035a6f0ca in std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::function<void (std::shared_ptr<dmlc::ManualEvent>)>, std::shared_ptr<dmlc::ManualEvent> > > >::_M_run() () from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#14 0x00007fe04279649f in execute_native_thread_routine () from /search/odin/songminghui/githubs/incubator-mxnet/lib/libmxnet.so\r\n#15 0x00007fe0293aadc5 in start_thread () from /usr/lib64/libpthread.so.0\r\n#16 0x00007fe0288b7ced in clone () from /usr/lib64/libc.so.6 \r\n```\r\n\r\n## To Reproduce\r\n\r\n### Steps to reproduce\r\n(Paste the commands you ran that produced the error.)\r\n\r\n1. download the mxnet, commit head: de510582438ad5fad576eba1b85c845b0ba9989c\r\n2. build it with the cmake, and mkl, mkldnn enabled\r\n3. run an own cpp inference code, then this error arise\r\n\r\n## What have you tried to solve it?\r\n\r\n1. Change the gcc/g++ to same as that used by mxnet, i.e. gcc 7.3.1, not work\r\n2.\r\n\r\n## Environment\r\n\r\n1. centos 7.2.1511\r\n2. gcc/g++: 7.3.1\r\n3. cuda: 10.0\r\n\r\n```\r\n----------Python Info----------\r\nVersion      : 3.6.8\r\nCompiler     : GCC 7.3.0\r\nBuild        : ('default', 'Dec 30 2018 01:22:34')\r\nArch         : ('64bit', '')\r\n------------Pip Info-----------\r\nVersion      : 19.1.1\r\nDirectory    : /search/odin/songminghui/anaconda3/lib/python3.6/site-packages/pip\r\n----------MXNet Info-----------\r\nVersion      : 2.0.0\r\nDirectory    : /search/odin/songminghui/githubs/incubator-mxnet/python/mxnet\r\nNum GPUs     : 8\r\nHashtag not found. Not installed from pre-built package.\r\n----------System Info----------\r\nPlatform     : Linux-3.10.0-327.el7.x86_64-x86_64-with-centos-7.2.1511-Core\r\nsystem       : Linux\r\nnode         : nmyjs_176_61\r\nrelease      : 3.10.0-327.el7.x86_64\r\nversion      : #1 SMP Thu Nov 19 22:10:57 UTC 2015\r\n----------Hardware Info----------\r\nmachine      : x86_64\r\nprocessor    : x86_64\r\nArchitecture:          x86_64\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Little Endian\r\nCPU(s):                48\r\nOn-line CPU(s) list:   0-47\r\nThread(s) per core:    2\r\nCore(s) per socket:    12\r\nSocket(s):             2\r\nNUMA node(s):          2\r\nVendor ID:             GenuineIntel\r\nCPU family:            6\r\nModel:                 79\r\nModel name:            Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz\r\nStepping:              1\r\nCPU MHz:               2195.104\r\nBogoMIPS:              4398.47\r\nVirtualization:        VT-x\r\nL1d cache:             32K\r\nL1i cache:             32K\r\nL2 cache:              256K\r\nL3 cache:              30720K\r\nNUMA node0 CPU(s):     0-11,24-35\r\nNUMA node1 CPU(s):     12-23,36-47\r\n----------Network Test----------\r\nSetting timeout: 10\r\nError open MXNet: https://github.com/apache/incubator-mxnet, <urlopen error timed out>, DNS finished in 1.2967002391815186 sec.\r\nError open GluonNLP GitHub: https://github.com/dmlc/gluon-nlp, <urlopen error timed out>, DNS finished in 4.1484832763671875e-05 sec.\r\nTiming for GluonNLP: http://gluon-nlp.mxnet.io, DNS: 1.1775 sec, LOAD: 3.5363 sec.\r\nTiming for D2L: http://d2l.ai, DNS: 0.4321 sec, LOAD: 0.8394 sec.\r\nTiming for D2L (zh-cn): http://zh.d2l.ai, DNS: 0.3948 sec, LOAD: 1.0763 sec.\r\nTiming for FashionMNIST: https://repo.mxnet.io/gluon/dataset/fashion-mnist/train-labels-idx1-ubyte.gz, DNS: 0.4420 sec, LOAD: 2.9380 sec.\r\nTiming for PYPI: https://pypi.python.org/pypi/pip, DNS: 0.1293 sec, LOAD: 13.5263 sec.\r\nError open Conda: https://repo.continuum.io/pkgs/free/, HTTP Error 403: Forbidden, DNS finished in 0.47435927391052246 sec.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18293", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18293/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18293/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18293/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18293", "id": 617043358, "node_id": "MDU6SXNzdWU2MTcwNDMzNTg=", "number": 18293, "title": "CD: Missing openblas", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-13T00:06:38Z", "updated_at": "2020-05-19T00:32:10Z", "closed_at": "2020-05-19T00:32:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After enabling cmake staticbuild for CD in https://github.com/apache/incubator-mxnet/commit/c329a524c520ec2b41aa4bff5ee113ff7221b790, `E   OSError: libopenblas.so.0: cannot open shared object file: No such file or directory` https://github.com/leezu/gluon-nlp/runs/669008929?check_suite_focus=true\r\n\r\nNeed to change the staticbuild script to staticlink openblas or include the library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18287", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18287/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18287/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18287/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18287", "id": 616341891, "node_id": "MDU6SXNzdWU2MTYzNDE4OTE=", "number": 18287, "title": "asscalar() fails when set_np_shape(True)", "user": {"login": "zheng-da", "id": 70481, "node_id": "MDQ6VXNlcjcwNDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/70481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-da", "html_url": "https://github.com/zheng-da", "followers_url": "https://api.github.com/users/zheng-da/followers", "following_url": "https://api.github.com/users/zheng-da/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-da/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-da/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-da/subscriptions", "organizations_url": "https://api.github.com/users/zheng-da/orgs", "repos_url": "https://api.github.com/users/zheng-da/repos", "events_url": "https://api.github.com/users/zheng-da/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-da/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 2058684432, "node_id": "MDU6TGFiZWwyMDU4Njg0NDMy", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/R1.7.0", "name": "R1.7.0", "color": "e2692d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-12T04:04:34Z", "updated_at": "2020-05-30T20:04:01Z", "closed_at": "2020-05-30T20:04:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description\r\nWhen we enable `set_np_shape(True)`, I cannot convert a scalar NDArray to python scalar with `asscalar()`. I'm using MXNet 1.6.0.\r\n\r\n### Error Message\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-9-acd043ab0fb2> in <module>\r\n----> 1 a1.asscalar()\r\n\r\n/usr/local/lib/python3.6/dist-packages/mxnet/ndarray/ndarray.py in asscalar(self)\r\n   2550         \"\"\"\r\n   2551         if self.shape != (1,):\r\n-> 2552             raise ValueError(\"The current array is not a scalar\")\r\n   2553         return self.asnumpy()[0]\r\n   2554 \r\n\r\nValueError: The current array is not a scalar\r\n```\r\n## To Reproduce\r\n```python\r\nimport mxnet as mx\r\narr = mx.nd.ones((4,))\r\nmx.set_np_shape(True)\r\na1, a2, a2, a4 = arr\r\na1.asscalar()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18281", "repository_url": "https://api.github.com/repos/apache/incubator-mxnet", "labels_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18281/labels{/name}", "comments_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18281/comments", "events_url": "https://api.github.com/repos/apache/incubator-mxnet/issues/18281/events", "html_url": "https://github.com/apache/incubator-mxnet/issues/18281", "id": 616248413, "node_id": "MDU6SXNzdWU2MTYyNDg0MTM=", "number": 18281, "title": "Divergence of implementation between Windows and non-Windows", "user": {"login": "leezu", "id": 946903, "node_id": "MDQ6VXNlcjk0NjkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/946903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leezu", "html_url": "https://github.com/leezu", "followers_url": "https://api.github.com/users/leezu/followers", "following_url": "https://api.github.com/users/leezu/following{/other_user}", "gists_url": "https://api.github.com/users/leezu/gists{/gist_id}", "starred_url": "https://api.github.com/users/leezu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leezu/subscriptions", "organizations_url": "https://api.github.com/users/leezu/orgs", "repos_url": "https://api.github.com/users/leezu/repos", "events_url": "https://api.github.com/users/leezu/events{/privacy}", "received_events_url": "https://api.github.com/users/leezu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206159502, "node_id": "MDU6TGFiZWwyMDYxNTk1MDI=", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1232775555, "node_id": "MDU6TGFiZWwxMjMyNzc1NTU1", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/Numpy", "name": "Numpy", "color": "b2ffba", "default": false, "description": ""}, {"id": 2025650657, "node_id": "MDU6TGFiZWwyMDI1NjUwNjU3", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/WIP", "name": "WIP", "color": "b2ffce", "default": false, "description": ""}, {"id": 1807195226, "node_id": "MDU6TGFiZWwxODA3MTk1MjI2", "url": "https://api.github.com/repos/apache/incubator-mxnet/labels/v2.0", "name": "v2.0", "color": "ff6d77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-11T23:17:14Z", "updated_at": "2020-06-11T21:15:18Z", "closed_at": "2020-06-11T21:15:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/apache/incubator-mxnet/blob/f00b9ab5b4410a91a8f6581da696a92f85fbccf6/src/operator/numpy/np_elemwise_broadcast_op.cu#L32-L41\r\n\r\nShouldn't be needed anymore as 64-bit toolchain is now required on Windows? (Added due to compiler OOM errors when 32-bit toolchain was in use)", "performed_via_github_app": null, "score": 1.0}]}