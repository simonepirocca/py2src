{"total_count": 452, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jieter/django-tables2/issues/755", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/755/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/755/events", "html_url": "https://github.com/jieter/django-tables2/issues/755", "id": 623874108, "node_id": "MDU6SXNzdWU2MjM4NzQxMDg=", "number": 755, "title": "[Django3] ImportError: cannot import name 'six' from 'django.utils' ", "user": {"login": "licht1stein", "id": 35418634, "node_id": "MDQ6VXNlcjM1NDE4NjM0", "avatar_url": "https://avatars2.githubusercontent.com/u/35418634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/licht1stein", "html_url": "https://github.com/licht1stein", "followers_url": "https://api.github.com/users/licht1stein/followers", "following_url": "https://api.github.com/users/licht1stein/following{/other_user}", "gists_url": "https://api.github.com/users/licht1stein/gists{/gist_id}", "starred_url": "https://api.github.com/users/licht1stein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/licht1stein/subscriptions", "organizations_url": "https://api.github.com/users/licht1stein/orgs", "repos_url": "https://api.github.com/users/licht1stein/repos", "events_url": "https://api.github.com/users/licht1stein/events{/privacy}", "received_events_url": "https://api.github.com/users/licht1stein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T14:20:24Z", "updated_at": "2020-05-25T08:51:51Z", "closed_at": "2020-05-25T08:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it supposed to work on Django 3? I have tried downgrading to Django 2.2.12 and everything worked fine. \r\n\r\n```\r\nWatching for file changes with StatReloader\r\nException in thread django-main-thread:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\mb\\AppData\\Local\\Programs\\Python\\Python37\\lib\\threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\mb\\AppData\\Local\\Programs\\Python\\Python37\\lib\\threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\utils\\autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\utils\\autoreload.py\", line 76, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 357, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\utils\\autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\apps\\registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\apps\\config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"C:\\Users\\mb\\AppData\\Local\\Programs\\Python\\Python37\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django_tables2\\__init__.py\", line 2, in <module>\r\n    from .tables import Table, TableBase, table_factory\r\n  File \"D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django_tables2\\tables.py\", line 12, in <module>\r\n    from django.utils import six\r\nImportError: cannot import name 'six' from 'django.utils' (D:\\.virtualenvs\\.poetry\\upw-google-locations-full-django-12dCmStF-py3.7\\lib\\site-packages\\django\\utils\\__init__.py)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/751", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/751/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/751/events", "html_url": "https://github.com/jieter/django-tables2/issues/751", "id": 613558252, "node_id": "MDU6SXNzdWU2MTM1NTgyNTI=", "number": 751, "title": "ImportError - example\\python manage.py migrate", "user": {"login": "MBfromOK", "id": 7131008, "node_id": "MDQ6VXNlcjcxMzEwMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7131008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MBfromOK", "html_url": "https://github.com/MBfromOK", "followers_url": "https://api.github.com/users/MBfromOK/followers", "following_url": "https://api.github.com/users/MBfromOK/following{/other_user}", "gists_url": "https://api.github.com/users/MBfromOK/gists{/gist_id}", "starred_url": "https://api.github.com/users/MBfromOK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MBfromOK/subscriptions", "organizations_url": "https://api.github.com/users/MBfromOK/orgs", "repos_url": "https://api.github.com/users/MBfromOK/repos", "events_url": "https://api.github.com/users/MBfromOK/events{/privacy}", "received_events_url": "https://api.github.com/users/MBfromOK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-06T19:28:52Z", "updated_at": "2020-05-25T06:35:28Z", "closed_at": "2020-05-23T19:33:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Steps taken:\r\n\r\n1. Create Dev\\Github\\django-tables2 folder\r\n2. CD into Dev\\Github\\django-tables2\r\n3. run virtualenv env\r\n4. env\\scripts\\activate\r\n5. pip install django\r\n6. pip install django-tables2\r\n\r\n## from directions:\r\n\r\n**7. git clone https://github.com/bradleyayers/django-tables2.git\r\n8. cd django-tables2/example\r\n9. pip install -r requirements.txt\r\n10. python manage.py migrate\r\n11. python manage.py loaddata app/fixtures/initial_data.json\r\n12. python manage.py runserver**\r\n\r\n### When I tried to execute:\r\n> 10. python manage.py migrate\r\n\r\n### I get the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 401, in execute_from_command_line\r\n    utility.execute()\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 395, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\base.py\", line 328, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\base.py\", line 366, in execute\r\n    self.check()\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\base.py\", line 392, in check\r\n    all_issues = self._run_checks(\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\commands\\migrate.py\", line 64, in _run_checks\r\n    issues.extend(super()._run_checks(**kwargs))\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\management\\base.py\", line 382, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 72, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\debug_toolbar\\apps.py\", line 20, in check_middleware\r\n    from debug_toolbar.middleware import DebugToolbarMiddleware\r\n  File \"D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\debug_toolbar\\middleware.py\", line 11, in <module>\r\n    from django.utils import six\r\nImportError: cannot import name 'six' from 'django.utils' (D:\\Dev\\GitHub\\Django-tables2\\env\\lib\\site-packages\\django\\utils\\__init__.py)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/750", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/750/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/750/events", "html_url": "https://github.com/jieter/django-tables2/issues/750", "id": 610714185, "node_id": "MDU6SXNzdWU2MTA3MTQxODU=", "number": 750, "title": "Broken link in changelog", "user": {"login": "hiroki-sawano", "id": 5885334, "node_id": "MDQ6VXNlcjU4ODUzMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5885334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiroki-sawano", "html_url": "https://github.com/hiroki-sawano", "followers_url": "https://api.github.com/users/hiroki-sawano/followers", "following_url": "https://api.github.com/users/hiroki-sawano/following{/other_user}", "gists_url": "https://api.github.com/users/hiroki-sawano/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiroki-sawano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiroki-sawano/subscriptions", "organizations_url": "https://api.github.com/users/hiroki-sawano/orgs", "repos_url": "https://api.github.com/users/hiroki-sawano/repos", "events_url": "https://api.github.com/users/hiroki-sawano/events{/privacy}", "received_events_url": "https://api.github.com/users/hiroki-sawano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T11:51:08Z", "updated_at": "2020-06-07T12:26:36Z", "closed_at": "2020-06-07T12:26:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I found the link to #717 is broken in CHANGELOG.md. `issue` in the URL should be `issues` .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/747", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/747/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/747/events", "html_url": "https://github.com/jieter/django-tables2/issues/747", "id": 602547427, "node_id": "MDU6SXNzdWU2MDI1NDc0Mjc=", "number": 747, "title": "Per row permission in column", "user": {"login": "sam-dieck", "id": 8284072, "node_id": "MDQ6VXNlcjgyODQwNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8284072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-dieck", "html_url": "https://github.com/sam-dieck", "followers_url": "https://api.github.com/users/sam-dieck/followers", "following_url": "https://api.github.com/users/sam-dieck/following{/other_user}", "gists_url": "https://api.github.com/users/sam-dieck/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-dieck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-dieck/subscriptions", "organizations_url": "https://api.github.com/users/sam-dieck/orgs", "repos_url": "https://api.github.com/users/sam-dieck/repos", "events_url": "https://api.github.com/users/sam-dieck/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-dieck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T20:43:02Z", "updated_at": "2020-06-07T12:31:13Z", "closed_at": "2020-06-07T12:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to show/hide a column content on a per-row basis based on a permission. This could be easily  achieved on a custom column in the `render` method by checking for a particular permission there and returning either Nothing or the content. I'm not able to achieve this because a Column object doesn't have access to the current \"request\" object, and hence I cannot check per-row permission on the custom Column render method.\r\n\r\nAn example of what I'm trying to do:\r\n```\r\nclass MyColumn(tables.Column):\r\n    def __init__(self, perm, *args, **kwargs):\r\n        self.perm = perm\r\n        super().__init__(*args, **kwargs)\r\n\r\n    def render(self, record):\r\n        // !!!!!! self.request is not available here !!!!!\r\n        if self.request.user.has_perm(self.perm, record):\r\n            return (record.some_field)\r\n        else:\r\n            return ''\r\n```\r\nWhat would be the recommended way to implement this on a custom column?\r\nCould we pass down the `request` to each column?\r\n\r\nThanks\r\nSam\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/744", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/744/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/744/events", "html_url": "https://github.com/jieter/django-tables2/issues/744", "id": 593034940, "node_id": "MDU6SXNzdWU1OTMwMzQ5NDA=", "number": 744, "title": "ModuleNotFoundError: No module named 'django_tables2django'", "user": {"login": "dev-harish", "id": 10478151, "node_id": "MDQ6VXNlcjEwNDc4MTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/10478151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dev-harish", "html_url": "https://github.com/dev-harish", "followers_url": "https://api.github.com/users/dev-harish/followers", "following_url": "https://api.github.com/users/dev-harish/following{/other_user}", "gists_url": "https://api.github.com/users/dev-harish/gists{/gist_id}", "starred_url": "https://api.github.com/users/dev-harish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dev-harish/subscriptions", "organizations_url": "https://api.github.com/users/dev-harish/orgs", "repos_url": "https://api.github.com/users/dev-harish/repos", "events_url": "https://api.github.com/users/dev-harish/events{/privacy}", "received_events_url": "https://api.github.com/users/dev-harish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T02:35:44Z", "updated_at": "2020-04-08T13:01:43Z", "closed_at": "2020-04-08T13:01:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error when i run python manage.py\r\nI have installed by pip install django-tables2\r\nI have activated the virtual env. and added following lines in the settings.py\r\n```\r\n_INSTALLED_APPS = [\r\n    # My apps\r\n    \"users.apps.UsersConfig\",\r\n    \"log.apps.LogConfig\",\r\n    \"django_tables2\"_\r\n...\r\n```\r\nEnsured \r\n                _\"django.template.context_processors.request\",_\r\nin Template setting\r\nmy import statement was \r\n_import django_tables2 as tables_\r\n\r\ndjango_tables (2.3.1)\r\nDjango (3.0.4) \r\n```\r\n\u25b6 python manage.py runserver                                                                                                                                                                            \r\nWatching for file changes with StatReloader\r\nException in thread django-main-thread:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/workreport_env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"workreport_env/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"workreport_env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 76, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"workreport_env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 357, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"workreport_env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"workreport_env/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"workreport_env/lib/python3.6/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"workreport_env/lib/python3.6/site-packages/django/apps/config.py\", line 116, in create\r\n    mod = import_module(mod_path)\r\n  File \"/usr/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 941, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'django_tables2django'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/740", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/740/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/740/events", "html_url": "https://github.com/jieter/django-tables2/issues/740", "id": 582903526, "node_id": "MDU6SXNzdWU1ODI5MDM1MjY=", "number": 740, "title": "How should i remove default <a> tag in <th>", "user": {"login": "wxy0810500", "id": 15108913, "node_id": "MDQ6VXNlcjE1MTA4OTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/15108913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxy0810500", "html_url": "https://github.com/wxy0810500", "followers_url": "https://api.github.com/users/wxy0810500/followers", "following_url": "https://api.github.com/users/wxy0810500/following{/other_user}", "gists_url": "https://api.github.com/users/wxy0810500/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxy0810500/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxy0810500/subscriptions", "organizations_url": "https://api.github.com/users/wxy0810500/orgs", "repos_url": "https://api.github.com/users/wxy0810500/repos", "events_url": "https://api.github.com/users/wxy0810500/events{/privacy}", "received_events_url": "https://api.github.com/users/wxy0810500/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T10:18:07Z", "updated_at": "2020-03-30T09:10:08Z", "closed_at": "2020-03-30T09:10:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a simple table like:\r\n```\r\nclass SmilesResultTable(tables.Table):\r\n    id = tables.Column(verbose_name=\"\", )\r\n    label = tables.Column()\r\n    ratings = tables.Column(verbose_name=\"Predicted ratings\")\r\n    smiles = tables.Column()\r\n```\r\n\r\nOn the result page,each <th> element has <a> element in it which links to a query request like 'xxx?sort=id'\r\n```\r\n<thead>\r\n    <tr>\r\n        <th class=\"orderable\">\r\n            <a href=\"?sort=id\"></a>\r\n        </th>\r\n        <th class=\"orderable\">\r\n            <a href=\"?sort=label\">Label</a>\r\n        </th>\r\n        <th class=\"orderable\">\r\n            <a href=\"?sort=ratings\">predicted ratings</a>\r\n        </th>\r\n<thead>\r\n```\r\n\r\nHow should i remove this <a> element?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/739", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/739/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/739/events", "html_url": "https://github.com/jieter/django-tables2/issues/739", "id": 574272669, "node_id": "MDU6SXNzdWU1NzQyNzI2Njk=", "number": 739, "title": "Cannot display foreign key field anymore", "user": {"login": "Benji81", "id": 30288181, "node_id": "MDQ6VXNlcjMwMjg4MTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/30288181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Benji81", "html_url": "https://github.com/Benji81", "followers_url": "https://api.github.com/users/Benji81/followers", "following_url": "https://api.github.com/users/Benji81/following{/other_user}", "gists_url": "https://api.github.com/users/Benji81/gists{/gist_id}", "starred_url": "https://api.github.com/users/Benji81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Benji81/subscriptions", "organizations_url": "https://api.github.com/users/Benji81/orgs", "repos_url": "https://api.github.com/users/Benji81/repos", "events_url": "https://api.github.com/users/Benji81/events{/privacy}", "received_events_url": "https://api.github.com/users/Benji81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T21:52:28Z", "updated_at": "2020-03-30T09:11:09Z", "closed_at": "2020-03-30T09:11:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nAfter an update to last version my table rendering shows \u2014 instead of my users username.\r\n\r\nEDIT : Works in 2.1.1\r\n\r\nIs this syntax still valid?\r\n\r\n```python\r\nclass ProjectUsersSummaryTable(tables.Table):\r\n    class Meta:\r\n        model = Duration\r\n        fields = ('user__username', 'total')\r\n```\r\n\r\n```python\r\ndurations = Duration.objects \\\r\n        .values('user__username') \\\r\n        .annotate(total=Round(Sum('hours')/8))\r\nProjectUsersSummaryTable(durations)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/737", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/737/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/737/events", "html_url": "https://github.com/jieter/django-tables2/issues/737", "id": 571367235, "node_id": "MDU6SXNzdWU1NzEzNjcyMzU=", "number": 737, "title": "Link on static column", "user": {"login": "Iain-S", "id": 25081046, "node_id": "MDQ6VXNlcjI1MDgxMDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/25081046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iain-S", "html_url": "https://github.com/Iain-S", "followers_url": "https://api.github.com/users/Iain-S/followers", "following_url": "https://api.github.com/users/Iain-S/following{/other_user}", "gists_url": "https://api.github.com/users/Iain-S/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iain-S/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iain-S/subscriptions", "organizations_url": "https://api.github.com/users/Iain-S/orgs", "repos_url": "https://api.github.com/users/Iain-S/repos", "events_url": "https://api.github.com/users/Iain-S/events{/privacy}", "received_events_url": "https://api.github.com/users/Iain-S/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T13:31:48Z", "updated_at": "2020-03-02T16:20:40Z", "closed_at": "2020-03-02T16:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nThis is a documentation/feature request.  I don't think there is a straightforward way to make a static column that is a dynamic link.  For example:\r\n\r\nmodels.py\r\n```\r\nclass Blog(models.Model):\r\n    title = models.CharField(max_length=100)\r\n    body = model.TextField()\r\n    user = model.ForeignKey(get_user_model(), on_delete=models.CASCADE)\r\n```\r\n\r\ntables.py\r\n```\r\nclass BlogTable(tables.Table):\r\n    # shows -> in the column but no hyperlink\r\n    link_column = tables.Column()\r\n\r\n    class Meta:\r\n        model = Blog\r\n        template_name = 'django_tables2/bootstrap.html'\r\n        # I have also tried putting 'link_column' in fields\r\n        fields = ('title', 'body', 'user')\r\n```\r\n\r\nviews.py\r\n```\r\nclass BlogTablesListView(SingleTableMixin, FilterView):\r\n    model = Blog\r\n    template_name = 'myblog/blog_tables_list.html'\r\n    table_class = BlogTable\r\n    filterset_class = BlogFilter\r\n```\r\n\r\nOther people seem to have had issues ([e.g.1](https://stackoverflow.com/questions/55075266/link-column-with-a-static-text-using-django-tables2/55118315#55118315) [e.g.2](https://stackoverflow.com/q/54643103/3324095)) but they have had to hack workarounds and I assume that there must be a better way to do it.\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/735", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/735/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/735/events", "html_url": "https://github.com/jieter/django-tables2/issues/735", "id": 566857081, "node_id": "MDU6SXNzdWU1NjY4NTcwODE=", "number": 735, "title": "MultiTableMixin does not refresh", "user": {"login": "daveisagit", "id": 724703, "node_id": "MDQ6VXNlcjcyNDcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/724703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daveisagit", "html_url": "https://github.com/daveisagit", "followers_url": "https://api.github.com/users/daveisagit/followers", "following_url": "https://api.github.com/users/daveisagit/following{/other_user}", "gists_url": "https://api.github.com/users/daveisagit/gists{/gist_id}", "starred_url": "https://api.github.com/users/daveisagit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daveisagit/subscriptions", "organizations_url": "https://api.github.com/users/daveisagit/orgs", "repos_url": "https://api.github.com/users/daveisagit/repos", "events_url": "https://api.github.com/users/daveisagit/events{/privacy}", "received_events_url": "https://api.github.com/users/daveisagit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T12:23:05Z", "updated_at": "2020-02-18T17:06:32Z", "closed_at": "2020-02-18T17:06:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using your example code \r\n\r\n```\r\nfrom django_tables2 import MultiTableMixin\r\nfrom django.views.generic.base import TemplateView\r\n\r\nclass PersonTablesView(MultiTableMixin, TemplateView):\r\n    template_name = \"multiTable.html\"\r\n    tables = [\r\n        PersonTable(qs),\r\n        PersonTable(qs, exclude=(\"country\", ))\r\n    ]\r\n\r\n    table_pagination = {\r\n        \"per_page\": 10\r\n    }\r\n```\r\n\r\nThe querysets (qs) are not refreshed when the view is refreshed. I tried using a list of classes as per the docs\r\n\r\n```\r\n    tables = [\r\n        PersonTable,\r\n        PersonTable2_say\r\n    ]\r\n```\r\nbut it fails with\r\n\r\n> paginate() missing 1 required positional argument: 'self'\r\n\r\nCould you give an example of how to use the MultiTableMixin with 2 tables so they both refresh when the view is called.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/729", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/729/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/729/events", "html_url": "https://github.com/jieter/django-tables2/issues/729", "id": 556441772, "node_id": "MDU6SXNzdWU1NTY0NDE3NzI=", "number": 729, "title": "error on export xls,xlsx and ods format", "user": {"login": "mzramna", "id": 21228660, "node_id": "MDQ6VXNlcjIxMjI4NjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/21228660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzramna", "html_url": "https://github.com/mzramna", "followers_url": "https://api.github.com/users/mzramna/followers", "following_url": "https://api.github.com/users/mzramna/following{/other_user}", "gists_url": "https://api.github.com/users/mzramna/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzramna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzramna/subscriptions", "organizations_url": "https://api.github.com/users/mzramna/orgs", "repos_url": "https://api.github.com/users/mzramna/repos", "events_url": "https://api.github.com/users/mzramna/events{/privacy}", "received_events_url": "https://api.github.com/users/mzramna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T20:12:03Z", "updated_at": "2020-02-03T06:47:04Z", "closed_at": "2020-02-03T06:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i'm tring to export my tables to xls,xlsx or ods format the following messaqe shows into django debug tool:\r\n\r\n>  AttributeError at /dono/listar\r\n'Dataset' object has no attribute 'xlsx'\r\nRequest Method: | GET\r\nRequest URL: http://localhost:8000/dono/listar?_export=xlsx\r\nDjango Version:2.2.9\r\nException Type:AttributeError\r\nException Value:'Dataset' object has no attribute 'xlsx'\r\nException Location:C:\\Users~~\\venv\\lib\\site-packages\\django_tables2\\export\\export.py in export, line 78\r\nPython Executable:C:\\Users~~\\venv\\Scripts\\python.exe\r\nPython Version:3.6.0\r\nPython Path:['C:\\\\Users~~',  'C:\\\\Users~~',  'C:\\\\Users~~\\\\AppData\\\\Local\\\\JetBrains\\\\Toolbox\\\\apps\\\\PyCharm-P\\\\ch-0\\\\193.6015.41\\\\plugins\\\\python\\\\helpers\\\\pycharm_display',  'C:\\\\Users~~\\\\venv\\\\Scripts\\\\python36.zip',  'C:\\\\Python36\\\\DLLs',  'C:\\\\Python36\\\\lib',  'C:\\\\Python36',  'C:\\\\Users~~\\\\venv',  'C:\\\\Users~~\\\\venv\\\\lib\\\\site-packages',  'C:\\\\Users~~\\\\venv\\\\lib\\\\site-packages\\\\setuptools-40.8.0-py3.6.egg',  'C:\\\\Users~~\\\\venv\\\\lib\\\\site-packages\\\\pip-19.0.3-py3.6.egg',  'C:\\\\Users~~\\\\AppData\\\\Local\\\\JetBrains\\\\Toolbox\\\\apps\\\\PyCharm-P\\\\ch-0\\\\193.6015.41\\\\plugins\\\\python\\\\helpers\\\\pycharm_matplotlib_backend']\r\nServer time:Ter, 28 Jan 2020 16:59:04 -0300\r\n\r\nbut when tring to export to csv,yml,json or latex it works fine.\r\ni'm missing any lib?\r\nthis are the following related codes:\r\ntable-template.html:\r\n`\\<a href=\"{% querystring '_export'='csv' %}\">CSV</a>\r\n   \\<a href=\"{% querystring '_export'='xls' %}\">XLS</a>\r\n    \\<a href=\"{% querystring '_export'='xlsx' %}\">XLSX</a>\r\n    \\<a href=\"{% querystring '_export'='ods' %}\">ods</a>\r\n    \\<a href=\"{% querystring '_export'='json' %}\">json</a>\r\n    \\<a href=\"{% querystring '_export'='latex' %}\">latex</a>`\r\n\r\nviews.py:\r\n`from django.apps import apps\r\nfrom django.contrib import messages\r\nfrom django.contrib.auth import update_session_auth_hash, authenticate\r\nfrom django.contrib.auth.decorators import login_required, permission_required\r\nfrom django.contrib.auth.forms import PasswordChangeForm, UserCreationForm\r\nfrom django.contrib.auth.models import Permission, Group\r\nfrom django.http import HttpResponse\r\nfrom django.shortcuts import render, redirect\r\nfrom django_tables2 import RequestConfig\r\nfrom django_tables2.export.export import TableExport\r\nfrom .filters import DonoFilter\r\nfrom .forms import DonoModelForm\r\nfrom .models import  Dono\r\nfrom .tables import DonoTable`\r\n\r\n`@login_required\r\n@permission_required('gerencia.view_dono', raise_exception=True)\r\ndef listarDono(request, per_page):\r\n    dados = {}\r\n    dados['tipoDeVariavel'] = 'dono'\r\n    dados['filtro'] = DonoFilter(request.POST, queryset=Dono.objects.filter(deletado=False))\r\n    if per_page == 'todos':\r\n        per_page = 999999999999\r\n    else:\r\n        dados['per_page'] = per_page\r\n    if len(dados['filtro'].qs) > 0:\r\n        data = dados['filtro'].qs\r\n    else:\r\n        data = Dono.objects.filter(deletado=False)\r\n    table = DonoTable(order_by=\"-diaDoCadastro\", data=data)\r\n    RequestConfig(request).configure(table)\r\n    export_format = request.GET.get(\"_export\", None)\r\n    if TableExport.is_valid_format(export_format):\r\n        exporter = TableExport(export_format, table,exclude_columns=['acoes', 'select'])\r\n        print(exporter.content_type())\r\n        return exporter.response(\"donos.\"+export_format)\r\n    RequestConfig(request, paginate={\"per_page\": per_page}).configure(table)\r\n    dados['table'] = table\r\n    return render(request, 'table_template.html', dados)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/728", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/728/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/728/events", "html_url": "https://github.com/jieter/django-tables2/issues/728", "id": 553125361, "node_id": "MDU6SXNzdWU1NTMxMjUzNjE=", "number": 728, "title": "render_xxxx method and django staticfiles", "user": {"login": "faulander", "id": 38588197, "node_id": "MDQ6VXNlcjM4NTg4MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/38588197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faulander", "html_url": "https://github.com/faulander", "followers_url": "https://api.github.com/users/faulander/followers", "following_url": "https://api.github.com/users/faulander/following{/other_user}", "gists_url": "https://api.github.com/users/faulander/gists{/gist_id}", "starred_url": "https://api.github.com/users/faulander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faulander/subscriptions", "organizations_url": "https://api.github.com/users/faulander/orgs", "repos_url": "https://api.github.com/users/faulander/repos", "events_url": "https://api.github.com/users/faulander/events{/privacy}", "received_events_url": "https://api.github.com/users/faulander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T20:58:09Z", "updated_at": "2020-02-03T06:42:08Z", "closed_at": "2020-02-03T06:41:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "my code:\r\n`  def render_name(self, value, record):\r\n        if record.imdb_id:\r\n            returnstring += '<a href=\"https://www.imdb.com/title/' + record.imdb_id + \\\r\n                \"'><img src=\" + '{% static \"img/imdb.ico\" height=\"20px\"></a>'`\r\n\r\nSince this code doesn't run the static command (because no template is processed) how would i get the relative path of the static file in need?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/727", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/727/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/727/events", "html_url": "https://github.com/jieter/django-tables2/issues/727", "id": 552939535, "node_id": "MDU6SXNzdWU1NTI5Mzk1MzU=", "number": 727, "title": "Show sort icons in columns", "user": {"login": "WendySclerandi", "id": 21165322, "node_id": "MDQ6VXNlcjIxMTY1MzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/21165322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WendySclerandi", "html_url": "https://github.com/WendySclerandi", "followers_url": "https://api.github.com/users/WendySclerandi/followers", "following_url": "https://api.github.com/users/WendySclerandi/following{/other_user}", "gists_url": "https://api.github.com/users/WendySclerandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/WendySclerandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WendySclerandi/subscriptions", "organizations_url": "https://api.github.com/users/WendySclerandi/orgs", "repos_url": "https://api.github.com/users/WendySclerandi/repos", "events_url": "https://api.github.com/users/WendySclerandi/events{/privacy}", "received_events_url": "https://api.github.com/users/WendySclerandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T15:12:45Z", "updated_at": "2020-02-03T06:48:43Z", "closed_at": "2020-02-03T06:48:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to see icons of how the table is sorted :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/726", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/726/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/726/events", "html_url": "https://github.com/jieter/django-tables2/issues/726", "id": 551782872, "node_id": "MDU6SXNzdWU1NTE3ODI4NzI=", "number": 726, "title": "Problem in sorting", "user": {"login": "adityabisoi", "id": 42573842, "node_id": "MDQ6VXNlcjQyNTczODQy", "avatar_url": "https://avatars1.githubusercontent.com/u/42573842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityabisoi", "html_url": "https://github.com/adityabisoi", "followers_url": "https://api.github.com/users/adityabisoi/followers", "following_url": "https://api.github.com/users/adityabisoi/following{/other_user}", "gists_url": "https://api.github.com/users/adityabisoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityabisoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityabisoi/subscriptions", "organizations_url": "https://api.github.com/users/adityabisoi/orgs", "repos_url": "https://api.github.com/users/adityabisoi/repos", "events_url": "https://api.github.com/users/adityabisoi/events{/privacy}", "received_events_url": "https://api.github.com/users/adityabisoi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-18T15:24:02Z", "updated_at": "2020-02-27T08:03:41Z", "closed_at": "2020-02-03T06:51:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Implementing ```RequestConfig(request).configure(table)``` in my ```views.py``` does not sort the values properly.\r\n\r\n\r\n![Screenshot from 2020-01-18 20-46-52](https://user-images.githubusercontent.com/42573842/72666033-4cd59e80-3a34-11ea-88ec-e68763de5936.png)\r\n\r\nWhen sorting the second column in ascending order,  the two values are abnormally placed in the middle of lower values. This happens with other columns, too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/724", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/724/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/724/events", "html_url": "https://github.com/jieter/django-tables2/issues/724", "id": 546034681, "node_id": "MDU6SXNzdWU1NDYwMzQ2ODE=", "number": 724, "title": "Cannot use Chinese name when exporting xlsx", "user": {"login": "zyyoo", "id": 40783859, "node_id": "MDQ6VXNlcjQwNzgzODU5", "avatar_url": "https://avatars0.githubusercontent.com/u/40783859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyyoo", "html_url": "https://github.com/zyyoo", "followers_url": "https://api.github.com/users/zyyoo/followers", "following_url": "https://api.github.com/users/zyyoo/following{/other_user}", "gists_url": "https://api.github.com/users/zyyoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyyoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyyoo/subscriptions", "organizations_url": "https://api.github.com/users/zyyoo/orgs", "repos_url": "https://api.github.com/users/zyyoo/repos", "events_url": "https://api.github.com/users/zyyoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zyyoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T01:56:22Z", "updated_at": "2020-01-10T07:31:39Z", "closed_at": "2020-01-10T07:31:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cannot use Chinese name when exporting xlsx ,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/721", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/721/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/721/events", "html_url": "https://github.com/jieter/django-tables2/issues/721", "id": 536486054, "node_id": "MDU6SXNzdWU1MzY0ODYwNTQ=", "number": 721, "title": "Can't get linkify to work", "user": {"login": "Nebucatnetzer", "id": 2287221, "node_id": "MDQ6VXNlcjIyODcyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2287221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nebucatnetzer", "html_url": "https://github.com/Nebucatnetzer", "followers_url": "https://api.github.com/users/Nebucatnetzer/followers", "following_url": "https://api.github.com/users/Nebucatnetzer/following{/other_user}", "gists_url": "https://api.github.com/users/Nebucatnetzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nebucatnetzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nebucatnetzer/subscriptions", "organizations_url": "https://api.github.com/users/Nebucatnetzer/orgs", "repos_url": "https://api.github.com/users/Nebucatnetzer/repos", "events_url": "https://api.github.com/users/Nebucatnetzer/events{/privacy}", "received_events_url": "https://api.github.com/users/Nebucatnetzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-11T16:36:49Z", "updated_at": "2019-12-21T08:59:32Z", "closed_at": "2019-12-21T08:59:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the LinkColumn by mistake and now tried to change it to the normal column.\r\nHowever I can't get it to work in one of the tables.\r\nThe cells just stay empy (---) in addition, I always get the following error when I try to sort the columns by clicking on the table header:\r\n```\r\nCannot resolve keyword 'nets' into field. Choices are: adgroup, description, device, id, location, mailgroup, name, net, user\r\n```\r\nThe code can be found here:\r\nhttps://github.com/Nebucatnetzer/network_inventory/blob/net/network_inventory/inventory/tables.py\r\nThe only table which isn't work is the CustomersTable. I tried to apply the following code change:\r\n\r\n``` diff\r\n-from django_tables2.utils import A\r\n+\r\n \r\n class CustomersTable(tables.Table):\r\n-    name = tables.LinkColumn('customer', args=[A('pk')])\r\n-    nets = tables.LinkColumn('nets', text='Nets', args=[A('pk')])\r\n-    computers = tables.LinkColumn('computers', text='Computers', args=[A('pk')])\r\n-    devices = tables.LinkColumn('devices', text='Devices', args=[A('pk')])\r\n-    backups = tables.LinkColumn('backups', text='Backups', args=[A('pk')])\r\n+    name = tables.Column(linkify=(\"customer\", [tables.A(\"pk\")]))\r\n+    nets = tables.Column(verbose_name=\"Nets\",\r\n+                         linkify=(\"nets\", [tables.A(\"pk\")]))\r\n+    computers = tables.Column(verbose_name=\"Computers\",\r\n+                              linkify=(\"computers\", [tables.A(\"pk\")]))\r\n+    devices = tables.Column(verbose_name=\"Devices\",\r\n+                            linkify=(\"devices\", [tables.A(\"pk\")]))\r\n+    backups = tables.Column(verbose_name=\"Backups\",\r\n+                            linkify=dict(viewname=\"backups\", args=[tables.A(\"pk\")]))\r\n```\r\nThis is with Python 3.8 and Django 2.2.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/718", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/718/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/718/events", "html_url": "https://github.com/jieter/django-tables2/issues/718", "id": 529774364, "node_id": "MDU6SXNzdWU1Mjk3NzQzNjQ=", "number": 718, "title": "Changelog typo", "user": {"login": "lorenzomorandini", "id": 10210433, "node_id": "MDQ6VXNlcjEwMjEwNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/10210433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorenzomorandini", "html_url": "https://github.com/lorenzomorandini", "followers_url": "https://api.github.com/users/lorenzomorandini/followers", "following_url": "https://api.github.com/users/lorenzomorandini/following{/other_user}", "gists_url": "https://api.github.com/users/lorenzomorandini/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorenzomorandini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorenzomorandini/subscriptions", "organizations_url": "https://api.github.com/users/lorenzomorandini/orgs", "repos_url": "https://api.github.com/users/lorenzomorandini/repos", "events_url": "https://api.github.com/users/lorenzomorandini/events{/privacy}", "received_events_url": "https://api.github.com/users/lorenzomorandini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-28T08:54:43Z", "updated_at": "2019-11-30T02:54:31Z", "closed_at": "2019-11-29T20:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, latest version should be 2.2.1 but in changelog file it is 2.1.0 (which is repeated)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/717", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/717/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/717/events", "html_url": "https://github.com/jieter/django-tables2/issues/717", "id": 529490431, "node_id": "MDU6SXNzdWU1Mjk0OTA0MzE=", "number": 717, "title": "Any accessor with joined table returns a blank value", "user": {"login": "dgmdan", "id": 163599, "node_id": "MDQ6VXNlcjE2MzU5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/163599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgmdan", "html_url": "https://github.com/dgmdan", "followers_url": "https://api.github.com/users/dgmdan/followers", "following_url": "https://api.github.com/users/dgmdan/following{/other_user}", "gists_url": "https://api.github.com/users/dgmdan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgmdan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgmdan/subscriptions", "organizations_url": "https://api.github.com/users/dgmdan/orgs", "repos_url": "https://api.github.com/users/dgmdan/repos", "events_url": "https://api.github.com/users/dgmdan/events{/privacy}", "received_events_url": "https://api.github.com/users/dgmdan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-27T17:39:36Z", "updated_at": "2020-03-02T11:57:33Z", "closed_at": "2020-03-02T11:57:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider that you have a column where the `accessor` uses a joined table:\r\n```\r\nname = tables.Column(accessor='foo__name')\r\n```\r\nThe value for this field will always show blank. I believe this is a regression starting in version 2.2.0. I went back to 2.1.1 to work around it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/716", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/716/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/716/events", "html_url": "https://github.com/jieter/django-tables2/issues/716", "id": 527619163, "node_id": "MDU6SXNzdWU1Mjc2MTkxNjM=", "number": 716, "title": "Add ability to set TableExport.dataset.title more conveniently", "user": {"login": "powderflask", "id": 451398, "node_id": "MDQ6VXNlcjQ1MTM5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/451398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powderflask", "html_url": "https://github.com/powderflask", "followers_url": "https://api.github.com/users/powderflask/followers", "following_url": "https://api.github.com/users/powderflask/following{/other_user}", "gists_url": "https://api.github.com/users/powderflask/gists{/gist_id}", "starred_url": "https://api.github.com/users/powderflask/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powderflask/subscriptions", "organizations_url": "https://api.github.com/users/powderflask/orgs", "repos_url": "https://api.github.com/users/powderflask/repos", "events_url": "https://api.github.com/users/powderflask/events{/privacy}", "received_events_url": "https://api.github.com/users/powderflask/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-23T22:42:11Z", "updated_at": "2019-12-09T14:22:06Z", "closed_at": "2019-12-09T14:22:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The default `tablib` export dataset name is \"Tablib Dataset\".  This name appears, for example, as the XLSX export worksheet tab name.  Confusing and irrelevant for end-user.\r\nThe title is most easily set in `TableExport.table_to_dataset`, where it can be provided as a kwarg to tablib's `Dataset()` constructor.\r\nOne idea would be to allow an optional  `title` or `dataset_title` attribute on `Table.Meta`, and look for that when constructing the `Dataset` during export.\r\n\r\nThe only work-around I've found is to override  `ExportMixin.create_export` to set exporter.dataset.title between constructing the export_class and rendering its response.   It works, but kind of ugly.\r\n\r\nHappy to work up a pull request, but wondering first if this is a generally useful contribution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/714", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/714/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/714/events", "html_url": "https://github.com/jieter/django-tables2/issues/714", "id": 525122491, "node_id": "MDU6SXNzdWU1MjUxMjI0OTE=", "number": 714, "title": "Missing FROM-clause entry for table when using deprecated dot accessors", "user": {"login": "federicobond", "id": 138426, "node_id": "MDQ6VXNlcjEzODQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/138426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/federicobond", "html_url": "https://github.com/federicobond", "followers_url": "https://api.github.com/users/federicobond/followers", "following_url": "https://api.github.com/users/federicobond/following{/other_user}", "gists_url": "https://api.github.com/users/federicobond/gists{/gist_id}", "starred_url": "https://api.github.com/users/federicobond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/federicobond/subscriptions", "organizations_url": "https://api.github.com/users/federicobond/orgs", "repos_url": "https://api.github.com/users/federicobond/repos", "events_url": "https://api.github.com/users/federicobond/events{/privacy}", "received_events_url": "https://api.github.com/users/federicobond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-19T16:31:49Z", "updated_at": "2019-11-20T08:15:48Z", "closed_at": "2019-11-20T08:15:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current change to using `__` as accessors is not entirely backwards-compatible with previous dot accessors. I encountered failing tests in Table's defining columns with order accessors that required table joins. The relevant part of the SQL query was constructed like this:\r\n```sql\r\n(...) ORDER BY (\"person\".user.first_name) ASC, (\"person\".user.last_name) ASC\r\n```\r\nWhich made the engine complain about a missing FROM-clause entry for table \"user\". Changing all accessors to use `__` solved the problem, but it might surprise some people that this breaks, not being a major version release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/712", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/712/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/712/events", "html_url": "https://github.com/jieter/django-tables2/issues/712", "id": 520488744, "node_id": "MDU6SXNzdWU1MjA0ODg3NDQ=", "number": 712, "title": "Linkify works in development, but not production.", "user": {"login": "CKDarling", "id": 34804267, "node_id": "MDQ6VXNlcjM0ODA0MjY3", "avatar_url": "https://avatars0.githubusercontent.com/u/34804267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CKDarling", "html_url": "https://github.com/CKDarling", "followers_url": "https://api.github.com/users/CKDarling/followers", "following_url": "https://api.github.com/users/CKDarling/following{/other_user}", "gists_url": "https://api.github.com/users/CKDarling/gists{/gist_id}", "starred_url": "https://api.github.com/users/CKDarling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CKDarling/subscriptions", "organizations_url": "https://api.github.com/users/CKDarling/orgs", "repos_url": "https://api.github.com/users/CKDarling/repos", "events_url": "https://api.github.com/users/CKDarling/events{/privacy}", "received_events_url": "https://api.github.com/users/CKDarling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-09T17:43:26Z", "updated_at": "2019-11-09T22:28:31Z", "closed_at": "2019-11-09T22:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have implemented django-tables2 into my project. I've utilized the major features of the package and have had no issues in development. When I push my code into production, the linkify abilities failed. My rendered tables are not displaying linked variables like they were in development. \r\n\r\nThis error is most likely my error, but I am unsure where to begin in terms of fixing it. I would love some pointers on how to begin solving this issue. \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/706", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/706/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/706/events", "html_url": "https://github.com/jieter/django-tables2/issues/706", "id": 509491268, "node_id": "MDU6SXNzdWU1MDk0OTEyNjg=", "number": 706, "title": "Unable to use render_table while also using user_authentication", "user": {"login": "CKDarling", "id": 34804267, "node_id": "MDQ6VXNlcjM0ODA0MjY3", "avatar_url": "https://avatars0.githubusercontent.com/u/34804267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CKDarling", "html_url": "https://github.com/CKDarling", "followers_url": "https://api.github.com/users/CKDarling/followers", "following_url": "https://api.github.com/users/CKDarling/following{/other_user}", "gists_url": "https://api.github.com/users/CKDarling/gists{/gist_id}", "starred_url": "https://api.github.com/users/CKDarling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CKDarling/subscriptions", "organizations_url": "https://api.github.com/users/CKDarling/orgs", "repos_url": "https://api.github.com/users/CKDarling/repos", "events_url": "https://api.github.com/users/CKDarling/events{/privacy}", "received_events_url": "https://api.github.com/users/CKDarling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-19T18:25:09Z", "updated_at": "2019-10-20T03:06:08Z", "closed_at": "2019-10-20T03:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to recreate the FilteredPersonListView table in the example app in the repository. I am able to render tables if I utilized {% render_table object_list %}, but when I attempt to use {% render_table table %} It fails. I made this [Stack Overflow post](https://stackoverflow.com/questions/58467552/context-error-while-using-django-tables2-in-my-project) attempting to ask the community for ideas.\r\n\r\nI am having large recursion issues. Sometimes my Django instance will load an AttributeError related to the context variable. I sometimes see a fatal stack overflow error. \r\n\r\nPlease help! \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/700", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/700/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/700/events", "html_url": "https://github.com/jieter/django-tables2/issues/700", "id": 505720476, "node_id": "MDU6SXNzdWU1MDU3MjA0NzY=", "number": 700, "title": "render_FOO won't work for dotted column names", "user": {"login": "javierwilson", "id": 596817, "node_id": "MDQ6VXNlcjU5NjgxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/596817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javierwilson", "html_url": "https://github.com/javierwilson", "followers_url": "https://api.github.com/users/javierwilson/followers", "following_url": "https://api.github.com/users/javierwilson/following{/other_user}", "gists_url": "https://api.github.com/users/javierwilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/javierwilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javierwilson/subscriptions", "organizations_url": "https://api.github.com/users/javierwilson/orgs", "repos_url": "https://api.github.com/users/javierwilson/repos", "events_url": "https://api.github.com/users/javierwilson/events{/privacy}", "received_events_url": "https://api.github.com/users/javierwilson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-11T08:45:38Z", "updated_at": "2019-10-16T12:19:17Z", "closed_at": "2019-10-16T12:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The same applies to value_FOO and order_FOO\r\nsince we can't create 'def render_contact.name'.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/698", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/698/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/698/events", "html_url": "https://github.com/jieter/django-tables2/issues/698", "id": 505342375, "node_id": "MDU6SXNzdWU1MDUzNDIzNzU=", "number": 698, "title": "Feature request: Adapt template block pagination.next, when using lazy pagination", "user": {"login": "tuky", "id": 2981274, "node_id": "MDQ6VXNlcjI5ODEyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2981274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuky", "html_url": "https://github.com/tuky", "followers_url": "https://api.github.com/users/tuky/followers", "following_url": "https://api.github.com/users/tuky/following{/other_user}", "gists_url": "https://api.github.com/users/tuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuky/subscriptions", "organizations_url": "https://api.github.com/users/tuky/orgs", "repos_url": "https://api.github.com/users/tuky/repos", "events_url": "https://api.github.com/users/tuky/events{/privacy}", "received_events_url": "https://api.github.com/users/tuky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-10T15:20:34Z", "updated_at": "2019-10-21T14:12:47Z", "closed_at": "2019-10-21T14:12:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, we are using this template extension, when configuring the lazy paginator:\r\n\r\n```django\r\n{% extends \"django_tables2/bootstrap4.html\" %}\r\n\r\n{% block pagination.next %}\r\n    <li class=\"page-item\"><a class=\"page-link\">...</a></li>\r\n    {{ block.super }}\r\n{% endblock pagination.next %}\r\n```\r\n\r\nIt improves communicating to the user visually, that there may be many more pages:\r\n![page](https://user-images.githubusercontent.com/2981274/66582419-0c879a00-eb82-11e9-9670-3e5246b7f211.png)\r\nDo you think this could be added to the upstream templates?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/697", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/697/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/697/events", "html_url": "https://github.com/jieter/django-tables2/issues/697", "id": 503237166, "node_id": "MDU6SXNzdWU1MDMyMzcxNjY=", "number": 697, "title": "Warning will installing the django-tables2 with pip", "user": {"login": "Priyanga31", "id": 21338617, "node_id": "MDQ6VXNlcjIxMzM4NjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/21338617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Priyanga31", "html_url": "https://github.com/Priyanga31", "followers_url": "https://api.github.com/users/Priyanga31/followers", "following_url": "https://api.github.com/users/Priyanga31/following{/other_user}", "gists_url": "https://api.github.com/users/Priyanga31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Priyanga31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Priyanga31/subscriptions", "organizations_url": "https://api.github.com/users/Priyanga31/orgs", "repos_url": "https://api.github.com/users/Priyanga31/repos", "events_url": "https://api.github.com/users/Priyanga31/events{/privacy}", "received_events_url": "https://api.github.com/users/Priyanga31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T05:17:09Z", "updated_at": "2019-10-07T08:16:36Z", "closed_at": "2019-10-07T08:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "While installing with pip in windows 10\r\n%\\AppData\\Local\\Temp\\pip-unpack-95zyjeq4\\django-tables2-1.21.2.tar.gz the member django-tables2-1.21.2/docs/pages/CHANGELOG.md is invalid: unable to resolve link inside archive", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/695", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/695/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/695/events", "html_url": "https://github.com/jieter/django-tables2/issues/695", "id": 501769275, "node_id": "MDU6SXNzdWU1MDE3NjkyNzU=", "number": 695, "title": "How to place a button in each of table row when the table is being rendered?", "user": {"login": "ImanoWilliams", "id": 11583372, "node_id": "MDQ6VXNlcjExNTgzMzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/11583372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ImanoWilliams", "html_url": "https://github.com/ImanoWilliams", "followers_url": "https://api.github.com/users/ImanoWilliams/followers", "following_url": "https://api.github.com/users/ImanoWilliams/following{/other_user}", "gists_url": "https://api.github.com/users/ImanoWilliams/gists{/gist_id}", "starred_url": "https://api.github.com/users/ImanoWilliams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ImanoWilliams/subscriptions", "organizations_url": "https://api.github.com/users/ImanoWilliams/orgs", "repos_url": "https://api.github.com/users/ImanoWilliams/repos", "events_url": "https://api.github.com/users/ImanoWilliams/events{/privacy}", "received_events_url": "https://api.github.com/users/ImanoWilliams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T23:05:26Z", "updated_at": "2019-10-07T08:34:24Z", "closed_at": "2019-10-07T08:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use buttons in each of the rows in the rendered table? For example, when I have {% render_table table2 %} each row has a button.  So, if I have a table of persons with columns: name and action. In the action column, I want buttons, so I can click on a button to view, delete, or update the person in the row that the button is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/692", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/692/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/692/events", "html_url": "https://github.com/jieter/django-tables2/issues/692", "id": 495677491, "node_id": "MDU6SXNzdWU0OTU2Nzc0OTE=", "number": 692, "title": "Columns that are model methods are not sortable", "user": {"login": "13hannes11", "id": 9381167, "node_id": "MDQ6VXNlcjkzODExNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9381167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/13hannes11", "html_url": "https://github.com/13hannes11", "followers_url": "https://api.github.com/users/13hannes11/followers", "following_url": "https://api.github.com/users/13hannes11/following{/other_user}", "gists_url": "https://api.github.com/users/13hannes11/gists{/gist_id}", "starred_url": "https://api.github.com/users/13hannes11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/13hannes11/subscriptions", "organizations_url": "https://api.github.com/users/13hannes11/orgs", "repos_url": "https://api.github.com/users/13hannes11/repos", "events_url": "https://api.github.com/users/13hannes11/events{/privacy}", "received_events_url": "https://api.github.com/users/13hannes11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T09:21:39Z", "updated_at": "2019-09-23T06:12:13Z", "closed_at": "2019-09-23T06:12:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "My issue is that the I have a model method `rating_avg` and I would like to display it in a table and have it sortable. with the following code (simplified it a bit) I get it to display but I am not able to sort it without getting the an error \r\n\r\n> Cannot resolve keyword 'rating_avg' into field\r\n\r\n\r\n```python\r\nclass ApplicationView(SingleTableMixin, FilterView):'\r\n    model = Application\r\n    table_class=ApplicationTable\r\n    filterset_class=BewerberFilter\r\n\r\n\r\nclass Application(models.Model):\r\n    def rating_avg(self):\r\n        # average is calculated here\r\n\r\n\r\nclass Rating(models.Model):\r\n    RATNGS = [\r\n        (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)\r\n    ]\r\n    application = models.ForeignKey(Application, related_name=\"ratings\", on_delete=models.CASCADE)\r\n    user = models.ForeignKey(User, related_name='    ', on_delete=models.CASCADE)\r\n    rating=models.IntegerField(choices=RATINGS)\r\n\r\n\r\nclass ApplicationTable(tables.Table):\r\n    average_rating = tables.Column(accessor='rating_avg', order_by='rating_avg')\r\n    class Meta:\r\n        model = Application\r\n        template_name = \"django_tables2/bootstrap.html\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/690", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/690/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/690/events", "html_url": "https://github.com/jieter/django-tables2/issues/690", "id": 493616405, "node_id": "MDU6SXNzdWU0OTM2MTY0MDU=", "number": 690, "title": "Check if table has data before rendering in template", "user": {"login": "ImanoWilliams", "id": 11583372, "node_id": "MDQ6VXNlcjExNTgzMzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/11583372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ImanoWilliams", "html_url": "https://github.com/ImanoWilliams", "followers_url": "https://api.github.com/users/ImanoWilliams/followers", "following_url": "https://api.github.com/users/ImanoWilliams/following{/other_user}", "gists_url": "https://api.github.com/users/ImanoWilliams/gists{/gist_id}", "starred_url": "https://api.github.com/users/ImanoWilliams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ImanoWilliams/subscriptions", "organizations_url": "https://api.github.com/users/ImanoWilliams/orgs", "repos_url": "https://api.github.com/users/ImanoWilliams/repos", "events_url": "https://api.github.com/users/ImanoWilliams/events{/privacy}", "received_events_url": "https://api.github.com/users/ImanoWilliams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-14T12:05:45Z", "updated_at": "2019-09-17T09:11:31Z", "closed_at": "2019-09-17T09:11:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am populating a table based on some query results. However, I would like to check if the table has data before calling **{% render_table table %}**. If the table does not have any data, I want to display \"no records to the user\". Is there a way to check for a table with no record in the template?\r\n\r\nI pass **[{}]** for the table_data in the views.py\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/689", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/689/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/689/events", "html_url": "https://github.com/jieter/django-tables2/issues/689", "id": 491629895, "node_id": "MDU6SXNzdWU0OTE2Mjk4OTU=", "number": 689, "title": "Compatibility issue with Django 3.0 due to django.utils.six", "user": {"login": "Mogost", "id": 721963, "node_id": "MDQ6VXNlcjcyMTk2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/721963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mogost", "html_url": "https://github.com/Mogost", "followers_url": "https://api.github.com/users/Mogost/followers", "following_url": "https://api.github.com/users/Mogost/following{/other_user}", "gists_url": "https://api.github.com/users/Mogost/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mogost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mogost/subscriptions", "organizations_url": "https://api.github.com/users/Mogost/orgs", "repos_url": "https://api.github.com/users/Mogost/repos", "events_url": "https://api.github.com/users/Mogost/events{/privacy}", "received_events_url": "https://api.github.com/users/Mogost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T12:04:15Z", "updated_at": "2019-09-17T09:13:42Z", "closed_at": "2019-09-17T09:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 3.0 scheduled for December removed Python 2 compatibility APIs used by django-tables2 (django.utils.six, django.utils.encoding.python_2_unicode_compatible).\r\n\r\nSee https://docs.djangoproject.com/en/dev/releases/3.0/#removed-private-python-2-compatibility-apis\r\nIt would be wise to switch now to the direct use of six.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/688", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/688/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/688/events", "html_url": "https://github.com/jieter/django-tables2/issues/688", "id": 490101595, "node_id": "MDU6SXNzdWU0OTAxMDE1OTU=", "number": 688, "title": "Empty cells following cells with custom render show custom render style", "user": {"login": "foldedpaper", "id": 8527220, "node_id": "MDQ6VXNlcjg1MjcyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8527220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foldedpaper", "html_url": "https://github.com/foldedpaper", "followers_url": "https://api.github.com/users/foldedpaper/followers", "following_url": "https://api.github.com/users/foldedpaper/following{/other_user}", "gists_url": "https://api.github.com/users/foldedpaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/foldedpaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foldedpaper/subscriptions", "organizations_url": "https://api.github.com/users/foldedpaper/orgs", "repos_url": "https://api.github.com/users/foldedpaper/repos", "events_url": "https://api.github.com/users/foldedpaper/events{/privacy}", "received_events_url": "https://api.github.com/users/foldedpaper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-06T02:54:24Z", "updated_at": "2019-09-17T14:54:31Z", "closed_at": "2019-09-17T09:18:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks to @benmehlman 's help with #685, I have a table that highlights the maximum value of a column with a custom style, using the render_foo method.\r\n\r\nBut I am running into an issue where columns with empty values are applying the render_foo style to empty cells that follow the max value. First I will show an image and then some example code.\r\n\r\nAs you can see, when the maximum value is rendered, the render_foo style applies properly, setting <td> background to 'lightgreen'. But then any empty cells that follow that custom-rendered cell also have the render_foo style applied. When a non-empty cell follows, the default style is applied.\r\n\r\nIs this a bug with how default styles are applied when render_foo methods are used? Or am I misusing the custom style rendering methods?\r\n\r\nImage:\r\n![render_foo_continues](https://user-images.githubusercontent.com/8527220/64397672-a7db9b80-d027-11e9-8aff-d55f21a96e95.png)\r\n\r\n\r\nExample:\r\n\r\n```python\r\n# models.py\r\nclass NumbersFilter(django_filters.FilterSet):\r\n\t[...]\r\n\t@property\r\n\tdef max_apr(self):\r\n\t\tqs = super(NumbersFilter, self).qs\r\n\t\treturn qs.aggregate(Max('apr'))['apr__max']\r\n\t[...]\r\n\r\n# views.py  \r\ndef show_numbers(request):  \r\n    queryset = Numbers.objects.all() \r\n    f = NumbersFilter(request.GET, queryset=queryset)\r\n    table = NumbersTable(f.qs, max_apr=f.max_apr, max_may=f.max_may, max_jun=f.max_jun, max_jul=f.max_jul, max_total=f.max_total)\r\n    return render(request, 'numbers.html', {'Title':'Numbers','numbers': table, 'filter': f,})\r\n\r\n# tables.py\r\nclass NumbersTable(tables.Table):\r\n\t[...]\r\n\tdef __init__(self, *args, **kwargs):\r\n\t\tself.max_apr = kwargs.pop('max_apr')\r\n\t[...]\r\n\t\tsuper(NumbersTable, self).__init__(*args, **kwargs)\r\n\t[...]\r\n\tdef render_apr(self, value, column):\r\n\t\tif value == self.max_apr:\r\n\t\t\tcolumn.attrs = {'td': {'bgcolor': 'lightgreen'}}\r\n\t\telse:\r\n\t\t\tcolumn.attrs = {'td': {}}\r\n\t\treturn value\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/685", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/685/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/685/events", "html_url": "https://github.com/jieter/django-tables2/issues/685", "id": 489596710, "node_id": "MDU6SXNzdWU0ODk1OTY3MTA=", "number": 685, "title": "How can we use views.py to pass 'max' value to tables.py?", "user": {"login": "foldedpaper", "id": 8527220, "node_id": "MDQ6VXNlcjg1MjcyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8527220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foldedpaper", "html_url": "https://github.com/foldedpaper", "followers_url": "https://api.github.com/users/foldedpaper/followers", "following_url": "https://api.github.com/users/foldedpaper/following{/other_user}", "gists_url": "https://api.github.com/users/foldedpaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/foldedpaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foldedpaper/subscriptions", "organizations_url": "https://api.github.com/users/foldedpaper/orgs", "repos_url": "https://api.github.com/users/foldedpaper/repos", "events_url": "https://api.github.com/users/foldedpaper/events{/privacy}", "received_events_url": "https://api.github.com/users/foldedpaper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T08:12:28Z", "updated_at": "2019-09-05T16:55:18Z", "closed_at": "2019-09-05T16:55:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to create a custom rendering function for the maximum value in a column, much like as described in [this StackOverflow question](https://stackoverflow.com/questions/38757887/cell-color-django-tables2). \r\n\r\nThe problem is, I don't seem to be able to follow how to pass a calculated variable from views.py to tables.py.\r\n\r\nConsider this example (also using a filter, not sure if that's causing issues):\r\n\r\n```python\r\n# views.py  \r\ndef show_numbers(request):  \r\n    queryset = Numbers.objects.all() \r\n    f = NumbersFilter(request.GET, queryset=queryset)\r\n    table = NumbersTable(f.qs)\r\n    max_number = queryset.aggregate(Max('number'))\r\n    return render(request, 'numbers.html', {'Title':'Numbers','numbers': table, 'filter': f, 'max_number': max_number})\r\n```\r\n\r\nBut I can't figure out how to access 'max_number' in tables.py in order to set a cell style according to value. The StackOverflow solution has something like this:\r\n\r\n```python\r\n# tables.py\r\nfrom MyApp import views\r\n\r\nclass NumbersTable(tables.Table):\r\n    def __init__(self, *args, **kwargs):\r\n        super(NumbersTable, self).__init__(*args, **kwargs)\r\n        self.max_number = views.max_number\r\n\r\n    def render_number(self, value, column):\r\n        if value == self.max_number:\r\n            column.attrs = {'td': {'bgcolor': 'lightgreen'}}\r\n        else:\r\n            column.attrs = {'td': {}}\r\n        return value\r\n```\r\n\r\n...but when I try this I get an AttributeError: module 'views' has no attribute 'max_number'.\r\n\r\nSorry for mixing together this StackOverflow issue with a support question, but I feel like I'm close to a solution, just am missing something essential (and quite possibly obvious).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/683", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/683/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/683/events", "html_url": "https://github.com/jieter/django-tables2/issues/683", "id": 489511535, "node_id": "MDU6SXNzdWU0ODk1MTE1MzU=", "number": 683, "title": "ImportError: cannot import name 'people' when followed tutorial", "user": {"login": "Breath123", "id": 13479651, "node_id": "MDQ6VXNlcjEzNDc5NjUx", "avatar_url": "https://avatars3.githubusercontent.com/u/13479651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Breath123", "html_url": "https://github.com/Breath123", "followers_url": "https://api.github.com/users/Breath123/followers", "following_url": "https://api.github.com/users/Breath123/following{/other_user}", "gists_url": "https://api.github.com/users/Breath123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Breath123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Breath123/subscriptions", "organizations_url": "https://api.github.com/users/Breath123/orgs", "repos_url": "https://api.github.com/users/Breath123/repos", "events_url": "https://api.github.com/users/Breath123/events{/privacy}", "received_events_url": "https://api.github.com/users/Breath123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-05T03:45:01Z", "updated_at": "2019-09-09T04:51:21Z", "closed_at": "2019-09-09T04:51:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When follows the first case in  [tutorial](https://github.com/jieter/django-tables2/blob/master/docs/pages/tutorial.rst), an exception raised as \"from tutorial.views import people\r\nImportError: cannot import name 'people' when followed tutorial\"\r\n\r\nIn the tutorial, there isn't a definition of people in tutorial/views.py:\r\n    # tutorial/views.py\r\n    from django.views.generic import ListView\r\n    from .models import Person\r\n\r\n    class PersonListView(ListView):\r\n        model = Person\r\n        template_name = 'tutorial/people.html'\r\n\r\nwhile it import the people in urls.py:\r\n    # urls.py\r\n    from django.urls import path\r\n    from django.contrib import admin\r\n\r\n    from tutorial.views import people\r\n\r\n    urlpatterns = [\r\n        path(\"admin/\", admin.site.urls),\r\n        path(\"people/\", people)\r\n    ]\r\n\r\nThen, this error occurs, could you share how to fix it? Thank you.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/676", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/676/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/676/events", "html_url": "https://github.com/jieter/django-tables2/issues/676", "id": 470317879, "node_id": "MDU6SXNzdWU0NzAzMTc4Nzk=", "number": 676, "title": "export column with  visible=False", "user": {"login": "fkdeboer", "id": 11271795, "node_id": "MDQ6VXNlcjExMjcxNzk1", "avatar_url": "https://avatars3.githubusercontent.com/u/11271795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fkdeboer", "html_url": "https://github.com/fkdeboer", "followers_url": "https://api.github.com/users/fkdeboer/followers", "following_url": "https://api.github.com/users/fkdeboer/following{/other_user}", "gists_url": "https://api.github.com/users/fkdeboer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fkdeboer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fkdeboer/subscriptions", "organizations_url": "https://api.github.com/users/fkdeboer/orgs", "repos_url": "https://api.github.com/users/fkdeboer/repos", "events_url": "https://api.github.com/users/fkdeboer/events{/privacy}", "received_events_url": "https://api.github.com/users/fkdeboer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-19T13:13:35Z", "updated_at": "2019-07-22T11:37:21Z", "closed_at": "2019-07-22T11:37:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the ExportMixin and want to add some extra columns to my export.\r\nIn other words, I would like to be able to define a value_FOO method for a column which is not shown in the original table.\r\nCurrently, when setting visible=False for column FOO, Value_FOO() is not called. My proposal would be to include columns with visible=False for export, and only exclude columns from exclude_columns.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/674", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/674/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/674/events", "html_url": "https://github.com/jieter/django-tables2/issues/674", "id": 464909397, "node_id": "MDU6SXNzdWU0NjQ5MDkzOTc=", "number": 674, "title": "Problems running example project", "user": {"login": "Bha91", "id": 5110957, "node_id": "MDQ6VXNlcjUxMTA5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5110957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bha91", "html_url": "https://github.com/Bha91", "followers_url": "https://api.github.com/users/Bha91/followers", "following_url": "https://api.github.com/users/Bha91/following{/other_user}", "gists_url": "https://api.github.com/users/Bha91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bha91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bha91/subscriptions", "organizations_url": "https://api.github.com/users/Bha91/orgs", "repos_url": "https://api.github.com/users/Bha91/repos", "events_url": "https://api.github.com/users/Bha91/events{/privacy}", "received_events_url": "https://api.github.com/users/Bha91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-07T02:57:55Z", "updated_at": "2019-07-22T06:32:59Z", "closed_at": "2019-07-22T06:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nCould not find a version that satisfies the requirement django-filter==2.1.0 (from -r requirements.txt (line 5)) (from versions: 0.1.0, 0.2.0, 0.5.0, 0.5.1, 0.5.2, 0.5.3, 0.5.4, 0.6a1, 0.6, 0.7, 0.8, 0.9.0, 0.9.1, 0.9.2, 0.10.0, 0.11.0, 0.12.0, 0.13.0, 0.14.0, 0.15.0, 0.15.1, 0.15.2, 0.15.3, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.1.0, 2.0.0.dev1, 2.0.0)\r\nNo matching distribution found for django-filter==2.1.0 (from -r requirements.txt (line 5))\r\n```\r\n\r\nand when i change it to django-filter==2.0.0 following error occured:\r\n```\r\nFile \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"C:\\Python27\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"C:\\Python27\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 338, in execute\r\n    django.setup()\r\n  File \"C:\\Python27\\lib\\site-packages\\django\\__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"C:\\Python27\\lib\\site-packages\\django\\apps\\registry.py\", line 85, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"C:\\Python27\\lib\\site-packages\\django\\apps\\config.py\", line 94, in create\r\n    module = import_module(entry)\r\n  File \"C:\\Python27\\lib\\importlib\\__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"C:\\Python27\\lib\\site-packages\\django_filters\\__init__.py\", line 4, in <module>\r\n    from .filterset import FilterSet\r\n  File \"C:\\Python27\\lib\\site-packages\\django_filters\\filterset.py\", line 184\r\n    def __init__(self, data=None, queryset=None, *, request=None, prefix=None):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/672", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/672/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/672/events", "html_url": "https://github.com/jieter/django-tables2/issues/672", "id": 456536323, "node_id": "MDU6SXNzdWU0NTY1MzYzMjM=", "number": 672, "title": "Error to export .csv and .xls as documentation", "user": {"login": "rafaelmadaloz", "id": 33348229, "node_id": "MDQ6VXNlcjMzMzQ4MjI5", "avatar_url": "https://avatars0.githubusercontent.com/u/33348229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafaelmadaloz", "html_url": "https://github.com/rafaelmadaloz", "followers_url": "https://api.github.com/users/rafaelmadaloz/followers", "following_url": "https://api.github.com/users/rafaelmadaloz/following{/other_user}", "gists_url": "https://api.github.com/users/rafaelmadaloz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafaelmadaloz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafaelmadaloz/subscriptions", "organizations_url": "https://api.github.com/users/rafaelmadaloz/orgs", "repos_url": "https://api.github.com/users/rafaelmadaloz/repos", "events_url": "https://api.github.com/users/rafaelmadaloz/events{/privacy}", "received_events_url": "https://api.github.com/users/rafaelmadaloz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-15T13:11:43Z", "updated_at": "2019-07-22T08:34:03Z", "closed_at": "2019-07-22T08:33:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass ClientsView(ExportMixin, CustomListView):\r\n    template_name = 'clients.html'\r\n    model = Client\r\n    table_class = ClientTable\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super(ClientsView,\r\n                        self).get_context_data(**kwargs)\r\n     \r\n        table = ClientTable(Client.objects.all())\r\n        table.paginate(page=self.request.GET.get('page', 1), per_page=15)\r\n\r\n        context['table'] = table\r\n        RequestConfig(self.request).configure(table)\r\n\r\n        return context\r\n\r\nclass ClientTable(ColumnShiftTable):\r\n    export_formats = ['csv', 'xls']\r\n    class Meta:\r\n        model = Client\r\n```\r\n\r\ntemplate.html\r\n\r\n```\r\n<div class=\"tabela\" style=\"overflow-x: auto; white-space: nowrap;\">\r\n    {% load render_table from django_tables2 %}\r\n    {% load bootstrap3 %}\r\n\r\n    {% render_table table 'django_tables2/bootstrap.html' %}\r\n\r\n    {% for format in table.export_formats %}\r\n        <a href=\"{% export_url format %}\">\r\n            download  <code>.{{ format }}</code>\r\n        </a>\r\n    {% endfor %}\r\n</div>\r\n```\r\nWhen clicking on any link to export I get the following error ```ClientsView' object has no attribute 'get_table'```\r\n\r\nThere is also the question in stackoverflow: https://stackoverflow.com/questions/56463489/how-to-export-csv-with-django-tables2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/671", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/671/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/671/events", "html_url": "https://github.com/jieter/django-tables2/issues/671", "id": 456209764, "node_id": "MDU6SXNzdWU0NTYyMDk3NjQ=", "number": 671, "title": "thead class cannot be overridden in bootstrap 4 ", "user": {"login": "stanorama", "id": 51097996, "node_id": "MDQ6VXNlcjUxMDk3OTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/51097996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanorama", "html_url": "https://github.com/stanorama", "followers_url": "https://api.github.com/users/stanorama/followers", "following_url": "https://api.github.com/users/stanorama/following{/other_user}", "gists_url": "https://api.github.com/users/stanorama/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanorama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanorama/subscriptions", "organizations_url": "https://api.github.com/users/stanorama/orgs", "repos_url": "https://api.github.com/users/stanorama/repos", "events_url": "https://api.github.com/users/stanorama/events{/privacy}", "received_events_url": "https://api.github.com/users/stanorama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 839217173, "node_id": "MDU6TGFiZWw4MzkyMTcxNzM=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/Help%20wanted", "name": "Help wanted", "color": "5319e7", "default": false, "description": null}, {"id": 300520808, "node_id": "MDU6TGFiZWwzMDA1MjA4MDg=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 300542212, "node_id": "MDU6TGFiZWwzMDA1NDIyMTI=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/simple", "name": "simple", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-14T11:56:23Z", "updated_at": "2019-07-06T06:15:35Z", "closed_at": "2019-07-06T06:15:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "django 2.2.2\r\ndjango-tables2 2.0.6\r\nFirefox 67.0.1 64-bit\r\nChrome 74.0.3729.169 64-bit\r\n\r\nPassing the class attribute of thead does not work when using the bootstrap 4 template.\r\nThis is caused by the inclusion of the default `class=\"thead-default\"` in the template.\r\nAny other attribute aside from class is being passed correctly.\r\n\r\nbootstrap.html\r\n\r\n> `<thead {{ table.attrs.thead.as_html }}>`\r\n\r\nbootstrap4.html\r\n\r\n> `<thead class=\"thead-default\" {{ table.attrs.thead.as_html }}>`\r\n\r\nSetting attrs in table meta:\r\n\r\n>     class Meta:\r\n>     attrs = {'class': 'table table-hover', 'thead':{'class': 'thead-light', 'id':'OK!'}}\r\n\r\nFrom Chrome Inspector showing class has stayed unchanged\r\n![image](https://user-images.githubusercontent.com/51097996/59507550-37e3cc00-8ea3-11e9-8adf-fedb682b5cce.png)\r\n\r\nI have seen no formatting difference by removing the hard coded class in the template.\r\ntbody and tfoot do not have a hard coded class.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/670", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/670/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/670/events", "html_url": "https://github.com/jieter/django-tables2/issues/670", "id": 453187237, "node_id": "MDU6SXNzdWU0NTMxODcyMzc=", "number": 670, "title": "Django 2.2.2 gives AttributeError: 'TableOptions' object has no attribute 'private_fields'", "user": {"login": "roostercrab", "id": 35913100, "node_id": "MDQ6VXNlcjM1OTEzMTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/35913100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roostercrab", "html_url": "https://github.com/roostercrab", "followers_url": "https://api.github.com/users/roostercrab/followers", "following_url": "https://api.github.com/users/roostercrab/following{/other_user}", "gists_url": "https://api.github.com/users/roostercrab/gists{/gist_id}", "starred_url": "https://api.github.com/users/roostercrab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roostercrab/subscriptions", "organizations_url": "https://api.github.com/users/roostercrab/orgs", "repos_url": "https://api.github.com/users/roostercrab/repos", "events_url": "https://api.github.com/users/roostercrab/events{/privacy}", "received_events_url": "https://api.github.com/users/roostercrab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-06T18:54:46Z", "updated_at": "2019-07-22T08:36:13Z", "closed_at": "2019-07-22T08:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my first time using django-tables2 so I am not sure if I have even configured it 100% correctly, but just in displaying the \"SimpleTable\" example with my model name replaced for the view I get this traceback:\r\n\r\n```\r\nFile \"/Users/roostercrab/Desktop/Development/learning_emporium/assignments/views.py\", line 27, in <module>\r\n    from .forms import (AssignmentForm, AssignmentQuestionForm,\r\n  File \"/Users/roostercrab/Desktop/Development/learning_emporium/assignments/forms.py\", line 44, in <module>\r\n    class StudentAssignmentQuestionForm(ModelForm):\r\n  File \"/Users/roostercrab/.pyenv/versions/emporium/lib/python3.6/site-packages/django/forms/models.py\", line 256, in __new__\r\n    apply_limit_choices_to=False,\r\n  File \"/Users/roostercrab/.pyenv/versions/emporium/lib/python3.6/site-packages/django/forms/models.py\", line 142, in fields_for_model\r\n    sortable_private_fields = [f for f in opts.private_fields if isinstance(f, ModelField)]\r\nAttributeError: 'TableOptions' object has no attribute 'private_fields'\r\n```\r\nWould downgrading to a previous version of Django be advisable until this can be resolved?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/667", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/667/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/667/events", "html_url": "https://github.com/jieter/django-tables2/issues/667", "id": 439107604, "node_id": "MDU6SXNzdWU0MzkxMDc2MDQ=", "number": 667, "title": "Allow inclusion tag in render_foo?", "user": {"login": "adamgilman", "id": 172888, "node_id": "MDQ6VXNlcjE3Mjg4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/172888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamgilman", "html_url": "https://github.com/adamgilman", "followers_url": "https://api.github.com/users/adamgilman/followers", "following_url": "https://api.github.com/users/adamgilman/following{/other_user}", "gists_url": "https://api.github.com/users/adamgilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamgilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamgilman/subscriptions", "organizations_url": "https://api.github.com/users/adamgilman/orgs", "repos_url": "https://api.github.com/users/adamgilman/repos", "events_url": "https://api.github.com/users/adamgilman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamgilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-01T09:07:22Z", "updated_at": "2019-05-01T20:25:18Z", "closed_at": "2019-05-01T20:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "For one of the columns, I have a preexisting Django template inclusion tag, which I'd like to reuse inside the table cell. When I attempt to return the Django template tag, it is not parsed by the template engine and only exported as plain text.\r\n\r\n```\r\ndef render_status(self, value):\r\n        return '{% status \"'+value+'\" %}'\r\n```\r\n\r\nRenders out the plain text of the result\r\n\r\n\r\nName | Role | Status\r\n-- | -- | --\r\nmonitor-multi-1 | Output | {% status \"Production\" %}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/663", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/663/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/663/events", "html_url": "https://github.com/jieter/django-tables2/issues/663", "id": 435363802, "node_id": "MDU6SXNzdWU0MzUzNjM4MDI=", "number": 663, "title": "Unable to set table class via attrs keyword", "user": {"login": "h-joshi", "id": 1222657, "node_id": "MDQ6VXNlcjEyMjI2NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1222657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-joshi", "html_url": "https://github.com/h-joshi", "followers_url": "https://api.github.com/users/h-joshi/followers", "following_url": "https://api.github.com/users/h-joshi/following{/other_user}", "gists_url": "https://api.github.com/users/h-joshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-joshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-joshi/subscriptions", "organizations_url": "https://api.github.com/users/h-joshi/orgs", "repos_url": "https://api.github.com/users/h-joshi/repos", "events_url": "https://api.github.com/users/h-joshi/events{/privacy}", "received_events_url": "https://api.github.com/users/h-joshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T06:46:51Z", "updated_at": "2019-04-20T13:59:15Z", "closed_at": "2019-04-20T13:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThis is what I've been referring to [Customizing table style](https://django-tables2.readthedocs.io/en/latest/pages/custom-rendering.html)\r\n\r\nI'm using Django's class based view and attempting to set the table class value within the table declaration (here I want to set the class value to 'musicTable')\r\n\r\nIn spite of following the docs, I'm unable to get the table rendered with this class value set.\r\n\r\nI've pasted an excerpt of the code below ... Is this a django-tables2 issue? or am I making a mistake here?\r\n\r\n**tables.py**\r\n```python\r\nimport django_tables2 as tables\r\nfrom .models import Music\r\n\r\nclass MusicTable(tables.Table):\r\n    class Meta:\r\n        model = Music\r\n        attrs = {'class':'musicTable'}\r\n```\r\n\r\n**views.py**\r\n```python\r\nclass MusicListView(SingleTableView):\r\n    table_class = MusicTable\r\n    model = Music\r\n    context_object_name = 'music_list'\r\n    template_name = \"music_list.html\"\r\n```\r\n\r\n**music_list.html**\r\n```html\r\n{% extends \"base.html\" %}\r\n{% load render_table from django_tables2 %}\r\n\r\n{% block content %}\r\n    {% render_table music_list %}\r\n{% endblock %}\r\n```\r\n\r\n**Resulting html**\r\n```html\r\n<div class=\"table-container\">\r\n\u00a0 <table class=\"table\">\r\n\u00a0   <thead class=\"thead-default\" >\r\n```\r\n\r\nPython v3.7.2\r\nDjango version v2.1.7\r\ndjango-tables2 v2.0.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/662", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/662/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/662/events", "html_url": "https://github.com/jieter/django-tables2/issues/662", "id": 434750240, "node_id": "MDU6SXNzdWU0MzQ3NTAyNDA=", "number": 662, "title": "Unnecessary sorting information in column headers (that only appears when the table is printed)", "user": {"login": "AliPolat", "id": 1778756, "node_id": "MDQ6VXNlcjE3Nzg3NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1778756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AliPolat", "html_url": "https://github.com/AliPolat", "followers_url": "https://api.github.com/users/AliPolat/followers", "following_url": "https://api.github.com/users/AliPolat/following{/other_user}", "gists_url": "https://api.github.com/users/AliPolat/gists{/gist_id}", "starred_url": "https://api.github.com/users/AliPolat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AliPolat/subscriptions", "organizations_url": "https://api.github.com/users/AliPolat/orgs", "repos_url": "https://api.github.com/users/AliPolat/repos", "events_url": "https://api.github.com/users/AliPolat/events{/privacy}", "received_events_url": "https://api.github.com/users/AliPolat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T12:41:46Z", "updated_at": "2019-04-27T18:29:43Z", "closed_at": "2019-04-27T18:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nHow do I get rid of unneeded ordering information that messes the column headers only when the table is printed ?\r\n\r\nThank you..\r\n\r\nNormal Screen Display\r\n \r\n![Screen display](https://user-images.githubusercontent.com/1778756/56361534-4fc70880-61f0-11e9-80c5-b45020d1a20a.jpg)\r\n\r\nSame Table when printed\r\n\r\n![Printed Copy](https://user-images.githubusercontent.com/1778756/56361602-72592180-61f0-11e9-8a52-a059dc494195.jpg)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/660", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/660/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/660/events", "html_url": "https://github.com/jieter/django-tables2/issues/660", "id": 434061762, "node_id": "MDU6SXNzdWU0MzQwNjE3NjI=", "number": 660, "title": "Incomplete sentence in django-tables2.readthedocs.io", "user": {"login": "coneypo", "id": 7233586, "node_id": "MDQ6VXNlcjcyMzM1ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7233586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coneypo", "html_url": "https://github.com/coneypo", "followers_url": "https://api.github.com/users/coneypo/followers", "following_url": "https://api.github.com/users/coneypo/following{/other_user}", "gists_url": "https://api.github.com/users/coneypo/gists{/gist_id}", "starred_url": "https://api.github.com/users/coneypo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coneypo/subscriptions", "organizations_url": "https://api.github.com/users/coneypo/orgs", "repos_url": "https://api.github.com/users/coneypo/repos", "events_url": "https://api.github.com/users/coneypo/events{/privacy}", "received_events_url": "https://api.github.com/users/coneypo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T02:19:56Z", "updated_at": "2019-04-28T07:29:02Z", "closed_at": "2019-04-28T07:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nI found an incomplete sentence in django-tables2 website: \r\n\r\n> \"Row attributes can be specified using a dict defining the HTML attributes for the <tr> element on each row. The values of the dict may be\r\n> \r\n> By default, class\"\r\n>\r\n\r\nIt seems that something missing after \"may be\".\r\n\r\n**Screenshots**\r\nScreenshot 1:\r\n![image](https://user-images.githubusercontent.com/7233586/56255844-eadcb700-60f8-11e9-90fe-4dc89dd20938.png)\r\nScreenshot 2:\r\n![image](https://user-images.githubusercontent.com/7233586/56255866-fe881d80-60f8-11e9-87ab-6ad8072eff21.png)\r\n\r\nIn this rst:\r\nhttps://github.com/jieter/django-tables2/blob/master/docs/pages/column-attributes.rst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/658", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/658/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/658/events", "html_url": "https://github.com/jieter/django-tables2/issues/658", "id": 429913552, "node_id": "MDU6SXNzdWU0Mjk5MTM1NTI=", "number": 658, "title": "Compatibility with tinymce", "user": {"login": "koopaconn", "id": 33226134, "node_id": "MDQ6VXNlcjMzMjI2MTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/33226134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koopaconn", "html_url": "https://github.com/koopaconn", "followers_url": "https://api.github.com/users/koopaconn/followers", "following_url": "https://api.github.com/users/koopaconn/following{/other_user}", "gists_url": "https://api.github.com/users/koopaconn/gists{/gist_id}", "starred_url": "https://api.github.com/users/koopaconn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koopaconn/subscriptions", "organizations_url": "https://api.github.com/users/koopaconn/orgs", "repos_url": "https://api.github.com/users/koopaconn/repos", "events_url": "https://api.github.com/users/koopaconn/events{/privacy}", "received_events_url": "https://api.github.com/users/koopaconn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-05T20:02:07Z", "updated_at": "2019-04-11T11:04:39Z", "closed_at": "2019-04-11T11:04:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if their was any compatibility issues with django-tinymce? When rendering the table instead applying the HTML tags it will simply add them as text.\r\n\r\nDesired\r\n32999 **Wilson** Burg Suite 281 Port Curtis, NE 29035\r\nWhat is rendered\r\n`<p>32999 <strong>Wilson</strong> Burg Suite 281 Port Curtis, NE 29035</p>`\r\n\r\nIs there any work around for this issue?\r\n\r\nMy models.py looks like:\r\n\r\n```\r\nfrom django.db import models\r\nfrom tinymce.models import HTMLField\r\n\r\nclass model_church(models.Model):\r\n    name = models.CharField(max_length=128)\r\n    location = HTMLField(max_length=128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/657", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/657/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/657/events", "html_url": "https://github.com/jieter/django-tables2/issues/657", "id": 429754768, "node_id": "MDU6SXNzdWU0Mjk3NTQ3Njg=", "number": 657, "title": "How to display related fields of \"non existing\" parent?", "user": {"login": "javilumbrales", "id": 2026597, "node_id": "MDQ6VXNlcjIwMjY1OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2026597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javilumbrales", "html_url": "https://github.com/javilumbrales", "followers_url": "https://api.github.com/users/javilumbrales/followers", "following_url": "https://api.github.com/users/javilumbrales/following{/other_user}", "gists_url": "https://api.github.com/users/javilumbrales/gists{/gist_id}", "starred_url": "https://api.github.com/users/javilumbrales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javilumbrales/subscriptions", "organizations_url": "https://api.github.com/users/javilumbrales/orgs", "repos_url": "https://api.github.com/users/javilumbrales/repos", "events_url": "https://api.github.com/users/javilumbrales/events{/privacy}", "received_events_url": "https://api.github.com/users/javilumbrales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-05T13:26:48Z", "updated_at": "2019-04-05T17:59:34Z", "closed_at": "2019-04-05T17:59:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI got two models: Image(filename, uploaded_at) and Annotation (author, quality,...).\r\n\r\nAn Image can have multiple Annotations, and an Annotation belong to one image.\r\n\r\nI'd like to display a table with the annotation columns and also display the image fields. All fine until here, but I'd like to display also the images that have no annotations created, and not sure how could I proceed to do this?\r\n\r\nMaybe I'm using wrong approach, I'm using Annotation as main model, but then I don't seem to have a way to display images that don't have Annotation, which kind of makes sense as there is no Annotation. However, if I use Image as main model, the relation is many Annotations so I don't know how to display many rows of the same instance.\r\n\r\nAny advice would be very appreciated.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/656", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/656/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/656/events", "html_url": "https://github.com/jieter/django-tables2/issues/656", "id": 429716174, "node_id": "MDU6SXNzdWU0Mjk3MTYxNzQ=", "number": 656, "title": "Multiple columns in table_data", "user": {"login": "ksantr", "id": 12990677, "node_id": "MDQ6VXNlcjEyOTkwNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12990677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksantr", "html_url": "https://github.com/ksantr", "followers_url": "https://api.github.com/users/ksantr/followers", "following_url": "https://api.github.com/users/ksantr/following{/other_user}", "gists_url": "https://api.github.com/users/ksantr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksantr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksantr/subscriptions", "organizations_url": "https://api.github.com/users/ksantr/orgs", "repos_url": "https://api.github.com/users/ksantr/repos", "events_url": "https://api.github.com/users/ksantr/events{/privacy}", "received_events_url": "https://api.github.com/users/ksantr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-05T11:48:52Z", "updated_at": "2019-04-12T00:48:49Z", "closed_at": "2019-04-12T00:48:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now I use this construction:\r\n\r\n` table_data = Model.objects.annotate(Count('fieldname'))`\r\n\r\nIs it possible to pass data to table_data for several different columns?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/652", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/652/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/652/events", "html_url": "https://github.com/jieter/django-tables2/issues/652", "id": 416315401, "node_id": "MDU6SXNzdWU0MTYzMTU0MDE=", "number": 652, "title": "How to specify `select_related` for table?", "user": {"login": "wgordon17", "id": 22222756, "node_id": "MDQ6VXNlcjIyMjIyNzU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22222756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgordon17", "html_url": "https://github.com/wgordon17", "followers_url": "https://api.github.com/users/wgordon17/followers", "following_url": "https://api.github.com/users/wgordon17/following{/other_user}", "gists_url": "https://api.github.com/users/wgordon17/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgordon17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgordon17/subscriptions", "organizations_url": "https://api.github.com/users/wgordon17/orgs", "repos_url": "https://api.github.com/users/wgordon17/repos", "events_url": "https://api.github.com/users/wgordon17/events{/privacy}", "received_events_url": "https://api.github.com/users/wgordon17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-01T23:09:04Z", "updated_at": "2019-03-04T22:15:43Z", "closed_at": "2019-03-04T14:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "My table is displaying multiple foreign key columns. How can I specify that `django-tables2` should use a `select_related` query set?\r\n\r\nI'm using a class based view btw:\r\n\r\n```python\r\nclass TripTable(tables.Table):\r\n    class Meta:\r\n        model = models.Trip\r\n        fields = ['title', 'intro', 'locations', 'meetings']\r\n        empty_text = 'No trips currently added'\r\n        template_name = 'tables/bootstrap4-responsive.html'\r\n\r\nclass TripIndexView(SingleTableView):\r\n    model = models.Trip\r\n    template_name = 'generic_views/index.html'\r\n    table_class = TripTable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/649", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/649/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/649/events", "html_url": "https://github.com/jieter/django-tables2/issues/649", "id": 411132479, "node_id": "MDU6SXNzdWU0MTExMzI0Nzk=", "number": 649, "title": "ManyToMany Column filtering example", "user": {"login": "niall", "id": 8472444, "node_id": "MDQ6VXNlcjg0NzI0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8472444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niall", "html_url": "https://github.com/niall", "followers_url": "https://api.github.com/users/niall/followers", "following_url": "https://api.github.com/users/niall/following{/other_user}", "gists_url": "https://api.github.com/users/niall/gists{/gist_id}", "starred_url": "https://api.github.com/users/niall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niall/subscriptions", "organizations_url": "https://api.github.com/users/niall/orgs", "repos_url": "https://api.github.com/users/niall/repos", "events_url": "https://api.github.com/users/niall/events{/privacy}", "received_events_url": "https://api.github.com/users/niall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-17T00:47:30Z", "updated_at": "2019-02-18T08:22:33Z", "closed_at": "2019-02-17T12:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs anyone able to provide an example of how to use the filter function on the ManyToMany \r\n\r\n    def filter(self, qs):\r\n        \"\"\"\r\n        Filter is called on the ManyRelatedManager to allow ordering, filtering or limiting\r\n        on the set of related objects.\r\n        \"\"\"\r\n        return qs.all()\r\n\r\n\r\nI have a table with the following column:\r\n`\r\nsite_set = tables.ManyToManyColumn(transform=lambda site: site.name, verbose_name='Managing Sites', linkify_item=(\"companies:site_detail\", {\"pk\": tables.A(\"pk\")}))\r\n`\r\nWhich is doing exactly what I want it to, giving the name of each site and linking to each individual page. However, each site object has a 'is_active' field which I wish to filter on.\r\n\r\nI have tried passing so many different things to the 'filter' parameter but always get an error. \r\n\r\nAny advise on what I need to pass to be able to further filter my queryset would be greatly appreciated. \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/646", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/646/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/646/events", "html_url": "https://github.com/jieter/django-tables2/issues/646", "id": 401906665, "node_id": "MDU6SXNzdWU0MDE5MDY2NjU=", "number": 646, "title": "Rendering model w/ foreign key as table on referenced model's detail page", "user": {"login": "errcricket", "id": 4574607, "node_id": "MDQ6VXNlcjQ1NzQ2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4574607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/errcricket", "html_url": "https://github.com/errcricket", "followers_url": "https://api.github.com/users/errcricket/followers", "following_url": "https://api.github.com/users/errcricket/following{/other_user}", "gists_url": "https://api.github.com/users/errcricket/gists{/gist_id}", "starred_url": "https://api.github.com/users/errcricket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/errcricket/subscriptions", "organizations_url": "https://api.github.com/users/errcricket/orgs", "repos_url": "https://api.github.com/users/errcricket/repos", "events_url": "https://api.github.com/users/errcricket/events{/privacy}", "received_events_url": "https://api.github.com/users/errcricket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T18:58:47Z", "updated_at": "2019-01-24T16:01:10Z", "closed_at": "2019-01-24T16:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two models -- `Sample`, and `Publication`. Each model has a list view and a detail view, and it is possible that a sample will have a publication (_e.g._, sample is a foreign key in the publication model) . \r\n\r\nIn the event that a sample has a publication, I would like to display information specific to a sample as well as any related publications on the sample's detail view (`sample_detail.html`). I know how to display the specific sample information, but I have yet to render a table of related publications.\r\n\r\nIs there a way in Django-tables2 to render a table on `sample_detail.html` with publication objects that are related to a specific sample when the sample is a foreign key in the publication model? I have tried to create a table of publications related to the sample using the approach below. \r\n\r\n```python\r\ndef publication_view(request, pk):\r\n   publication = Publication.objects.get(pk = pk)\r\n   table = PublicationTable(Publication.objects.filter(publication=pk))\r\n   RequestConfig(request).configure(table)\r\n   samples = SampleTable(publication.sample_set) #these should be the publications related to a sample \r\n   return render(request, 'samples/publication_detail.html',\r\n                 {'publication': publication, 'publication-detail': table,\r\n                  'samples': samples})\r\n```\r\n`{% render_table samples %}` #place in sample_detail.html file\r\n\r\nHaving the above item in sample_detail.html causes a `Expected table or queryset, not str` error.  I have tried `RequestConfig(request).configure(samples) and other variations but to no avail.\r\n\r\nIs there a feature in DT2 to achieve this and if yes how is it done?\r\n\r\nHere is a smattering of my code...\r\n\r\n**models.py**\r\n```python\r\nclass Sample(models.Model):\r\n   sample_name = models.CharField('Sample', max_length=16)\r\n\r\n   def __str__(self):\r\n      return self.sample_name\r\n\r\n   def get_absolute_url(self):\r\n      return reverse('sample-detail', args=[str(self.id)])\r\n\r\nclass Publication(models.Model):\r\n   sample = models.ForeignKey(Sample, on_delete=models.SET_NULL, null=True) \r\n   title_p = models.CharField('Title', max_length=200, blank=False, default='')\r\n\r\n   def get_absolute_url(self):\r\n      return reverse('publication-detail', args=[str(self.id)])\r\n\r\n   def __str__(self):\r\n      return f'{self.sample}, {self.author}, {self.title_p}'\r\n```\r\n\r\n**tables.py**\r\n```python\r\nclass SampleTable(tables.Table):\r\n   sample_name = tables.LinkColumn('sample-detail', args=[A('pk')])\r\n\r\n   class Meta:\r\n      model = Sample\r\n\r\nclass PublicationTable(tables.Table):\r\n   sample = tables.LinkColumn('sample-detail', args=[A('sample_id')])\r\n   title_p = tables.LinkColumn('publication-detail', args=[A('id')])\r\n\r\n   class Meta:\r\n      model = Publication\r\n```\r\n\r\n**views.py**\r\n```python\r\nclass SampleListView(generic.ListView):\r\n   model = Sample\r\n   paginate_by = 200 \r\n\r\n@login_required\r\ndef sam(request):\r\n   table = SampleTable(Sample.objects.all())\r\n   RequestConfig(request).configure(table)                                                                                                    \r\n   return render(request, 'samples/sample_list.html', {'sam': table}) \r\n\r\nclass SampleDetailView(generic.DetailView):\r\n    model = Sample\r\n\r\nclass PublicationListView(generic.ListView):\r\n   model = Publication\r\n   paginate_by = 100\r\n\r\n@login_required\r\ndef publication_view(request, pk):\r\n   publication = Publication.objects.get(pk = pk)\r\n   table = PublicationTable(Publication.objects.filter(publication=pk))\r\n   RequestConfig(request).configure(table)\r\n   return render(request, 'samples/publication_detail.html', {'publication': publication, 'publication-detail': table}) \r\n\r\n@login_required\r\ndef publication_table(request):\r\n   table = PublicationTable(Publication.objects.all())\r\n   RequestConfig(request).configure(table)\r\n   return render(request, 'samples/publication_list.html', {'publication_table': table}) \r\n\r\nclass PublicationDetailView(generic.DetailView):\r\n    model = Publication\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/644", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/644/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/644/events", "html_url": "https://github.com/jieter/django-tables2/issues/644", "id": 399420861, "node_id": "MDU6SXNzdWUzOTk0MjA4NjE=", "number": 644, "title": "`TypeError: __init__() unexpected keyword argument 'linkify_item'` error for django_tables2 (version 2.0.3)", "user": {"login": "errcricket", "id": 4574607, "node_id": "MDQ6VXNlcjQ1NzQ2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4574607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/errcricket", "html_url": "https://github.com/errcricket", "followers_url": "https://api.github.com/users/errcricket/followers", "following_url": "https://api.github.com/users/errcricket/following{/other_user}", "gists_url": "https://api.github.com/users/errcricket/gists{/gist_id}", "starred_url": "https://api.github.com/users/errcricket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/errcricket/subscriptions", "organizations_url": "https://api.github.com/users/errcricket/orgs", "repos_url": "https://api.github.com/users/errcricket/repos", "events_url": "https://api.github.com/users/errcricket/events{/privacy}", "received_events_url": "https://api.github.com/users/errcricket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-15T16:16:53Z", "updated_at": "2019-01-15T17:31:22Z", "closed_at": "2019-01-15T17:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the same `TypeError: __init__() got an unexpected keyword argument 'linkify_item'` error.  Is this keyword argument specific only to version 2.0.0a5 or to that and any subsequent versions?\r\n\r\n```\r\npython manage.py shell\r\n>>>import django_tables2\r\n>>> print(django_tables2.__version__)\r\n2.0.3\r\n```\r\n\r\nJust to make **extra** sure, I did a pip install and received this message:\r\n```\r\n(py37) [XX@blahblah tracker]$ pip install django-tables2\r\nRequirement already satisfied: django-tables2 in /home/XX/miniconda3/envs/py37/lib/python3.7/site-packages (2.0.3)\r\nRequirement already satisfied: Django>=1.11 in /home/XX/miniconda3/envs/py37/lib/python3.7/site-packages (from django-tables2) (2.1.2)\r\nRequirement already satisfied: pytz in /home/XX/miniconda3/envs/py37/lib/python3.7/site-packages (from Django>=1.11->django-tables2) (2018.7)\r\n```\r\nmodels.py\r\n```\r\nclass PI(models.Model):\r\n   l_name = models.CharField('L Name', blank=False, max_length=100, default='')\r\n...\r\n\r\nclass Grant(models.Model):\r\n   submission_date = models.DateField(null=True, blank=True)\r\n   pi = models.ManyToManyField(PI, verbose_name='PI')                                                                                         \r\n   status_choices = (('Accepted', 'Accepted'), ('Rejected', 'Rejected'))\r\n   status = models.CharField('Status', max_length=8, null=True, blank=True, choices = status_choices)\r\n   pdf = models.CharField('PDF', default='', max_length=500, blank=True)\r\n\r\n   def filename(self):\r\n      return self.pdf\r\n\r\n   def get_absolute_url(self):\r\n      return reverse('grant-detail', args=[str(self.id)])\r\n\r\n   def __str__(self):\r\n      return '%s, (%s)' % (self.submission_date, ', '.join(p.l_name for p in self.pi.all()))\r\n\r\n   @property\r\n   def list_pi(self):\r\n      return ', '.join([pi.l_name for pi in self.pi.all()])\r\n```\r\n\r\n**tables.py**\r\n```\r\nclass GrantTable(tables.Table):\r\n   list_pi = tables.LinkColumn('pi-detail', args=[A('pk')], verbose_name='PI', linkify_item=True)\r\n   pdf = tables.TemplateColumn(template_code='''{% load static %}<a href=\"{% static 'grants/'|add:value %}\" target=\"_blank\">{{record.pdf}}</a>''')                                                                                                                                          \r\n\r\n   class Meta:\r\n      model = Grant\r\n      fields = ('submission_date', 'status', 'pdf', 'list_pi')\r\n```\r\nDo you have any suggestions as to how to make this functional?\r\n\r\n_Originally posted by @errcricket in https://github.com/_render_node/MDEyOklzc3VlQ29tbWVudDQ1NDQ1MDk5MA==/timeline/issue_comment#issuecomment-454450990_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/643", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/643/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/643/events", "html_url": "https://github.com/jieter/django-tables2/issues/643", "id": 398414196, "node_id": "MDU6SXNzdWUzOTg0MTQxOTY=", "number": 643, "title": "Not working with django-simple-history anymore", "user": {"login": "ArkNieckarz", "id": 17624043, "node_id": "MDQ6VXNlcjE3NjI0MDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/17624043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArkNieckarz", "html_url": "https://github.com/ArkNieckarz", "followers_url": "https://api.github.com/users/ArkNieckarz/followers", "following_url": "https://api.github.com/users/ArkNieckarz/following{/other_user}", "gists_url": "https://api.github.com/users/ArkNieckarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArkNieckarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArkNieckarz/subscriptions", "organizations_url": "https://api.github.com/users/ArkNieckarz/orgs", "repos_url": "https://api.github.com/users/ArkNieckarz/repos", "events_url": "https://api.github.com/users/ArkNieckarz/events{/privacy}", "received_events_url": "https://api.github.com/users/ArkNieckarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-11T19:05:07Z", "updated_at": "2020-05-04T15:15:58Z", "closed_at": "2019-01-21T08:09:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Get error: ValueError: table data is of type <class 'App.models.HistoricalContactActivity'> but <class 'App.models.ContactActivity'> is specified in Table.Meta.model\r\n\r\nBasically set_table in TableQuerysetData (in data.py) checks for self.model != table._meta.model which brakes tables with historical \"field\" in it.\r\nHow to set the class meta model of the history model of a concrete model class?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/641", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/641/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/641/events", "html_url": "https://github.com/jieter/django-tables2/issues/641", "id": 394798563, "node_id": "MDU6SXNzdWUzOTQ3OTg1NjM=", "number": 641, "title": "Error 500 when export with xlsx", "user": {"login": "fmatray", "id": 8267716, "node_id": "MDQ6VXNlcjgyNjc3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8267716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmatray", "html_url": "https://github.com/fmatray", "followers_url": "https://api.github.com/users/fmatray/followers", "following_url": "https://api.github.com/users/fmatray/following{/other_user}", "gists_url": "https://api.github.com/users/fmatray/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmatray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmatray/subscriptions", "organizations_url": "https://api.github.com/users/fmatray/orgs", "repos_url": "https://api.github.com/users/fmatray/repos", "events_url": "https://api.github.com/users/fmatray/events{/privacy}", "received_events_url": "https://api.github.com/users/fmatray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-29T14:04:03Z", "updated_at": "2018-12-31T11:42:59Z", "closed_at": "2018-12-31T11:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI get an error 500 when exporting in XLSX format.\r\n\r\nThis issue seems to be related to this one : https://github.com/kennethreitz/tablib/issues/323\r\n\r\nThanks\r\n```\r\n[29/Dec/2018 13:58:26] \"GET /appmngt/application_list HTTP/1.1\" 200 21433\r\nweb_1  | Internal Server Error: /appmngt/application_list\r\nweb_1  | Traceback (most recent call last):\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\nweb_1  |     response = get_response(request)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\nweb_1  |     response = self.process_exception_by_middleware(e, request)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 124, in _get_response\r\nweb_1  |     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 68, in view\r\nweb_1  |     return self.dispatch(request, *args, **kwargs)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/contrib/auth/mixins.py\", line 52, in dispatch\r\nweb_1  |     return super().dispatch(request, *args, **kwargs)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/contrib/auth/mixins.py\", line 85, in dispatch\r\nweb_1  |     return super().dispatch(request, *args, **kwargs)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\nweb_1  |     return handler(request, *args, **kwargs)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django_filters/views.py\", line 87, in get\r\nweb_1  |     return self.render_to_response(context)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django_tables2/export/views.py\", line 46, in render_to_response\r\nweb_1  |     return self.create_export(export_format)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django_tables2/export/views.py\", line 41, in create_export\r\nweb_1  |     return exporter.response(filename=self.get_export_filename(export_format))\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django_tables2/export/export.py\", line 90, in response\r\nweb_1  |     response.write(self.export())\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/django_tables2/export/export.py\", line 76, in export\r\nweb_1  |     return getattr(self.dataset, self.format)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/tablib/formats/_xlsx.py\", line 43, in export_set\r\nweb_1  |     dset_sheet(dataset, ws, freeze_panes=freeze_panes)\r\nweb_1  |   File \"/usr/local/lib/python3.7/site-packages/tablib/formats/_xlsx.py\", line 122, in dset_sheet\r\nweb_1  |     cell = ws.cell('%s%s' % (col_idx, row_number))\r\nweb_1  | TypeError: cell() missing 1 required positional argument: 'column'`\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/637", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/637/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/637/events", "html_url": "https://github.com/jieter/django-tables2/issues/637", "id": 392001458, "node_id": "MDU6SXNzdWUzOTIwMDE0NTg=", "number": 637, "title": "Syntax error in linkify examples", "user": {"login": "timrichardson", "id": 927458, "node_id": "MDQ6VXNlcjkyNzQ1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/927458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timrichardson", "html_url": "https://github.com/timrichardson", "followers_url": "https://api.github.com/users/timrichardson/followers", "following_url": "https://api.github.com/users/timrichardson/following{/other_user}", "gists_url": "https://api.github.com/users/timrichardson/gists{/gist_id}", "starred_url": "https://api.github.com/users/timrichardson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timrichardson/subscriptions", "organizations_url": "https://api.github.com/users/timrichardson/orgs", "repos_url": "https://api.github.com/users/timrichardson/repos", "events_url": "https://api.github.com/users/timrichardson/events{/privacy}", "received_events_url": "https://api.github.com/users/timrichardson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T05:23:34Z", "updated_at": "2018-12-18T11:08:00Z", "closed_at": "2018-12-18T11:08:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "syntax error in linkify example, PR coming", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/635", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/635/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/635/events", "html_url": "https://github.com/jieter/django-tables2/issues/635", "id": 388799193, "node_id": "MDU6SXNzdWUzODg3OTkxOTM=", "number": 635, "title": "sequence not properly setting sequence of columns", "user": {"login": "Rubyj", "id": 4855908, "node_id": "MDQ6VXNlcjQ4NTU5MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4855908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rubyj", "html_url": "https://github.com/Rubyj", "followers_url": "https://api.github.com/users/Rubyj/followers", "following_url": "https://api.github.com/users/Rubyj/following{/other_user}", "gists_url": "https://api.github.com/users/Rubyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rubyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rubyj/subscriptions", "organizations_url": "https://api.github.com/users/Rubyj/orgs", "repos_url": "https://api.github.com/users/Rubyj/repos", "events_url": "https://api.github.com/users/Rubyj/events{/privacy}", "received_events_url": "https://api.github.com/users/Rubyj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-07T20:15:50Z", "updated_at": "2019-07-22T10:41:13Z", "closed_at": "2019-07-22T10:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a pretty simple table \r\n\r\n```python\r\nclass CountsTable(tables.Table):\r\n\r\n    class Meta:\r\n\tmodel = TargetConfirmation\r\n\torderable = False\r\n        fields = {'sample_id', 'selected', 'validated', 'has_standard'}\r\n        sequence = ('sample_id', 'selected', 'validated', 'has_standard')\r\n        attrs = {'id': 'tissue_type_table', 'class': 'data-table-selector table table-striped table-bordered'}\r\n```\r\n\r\n```python\r\nRequestConfig(request, paginate=False).configure(counts_table)\r\nreturn HttpResponse(template.render(context, request))\r\n```\r\n\r\nHowever, when I return this table to front end, the columns are not ordered in the specific sequence I specified. Is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/634", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/634/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/634/events", "html_url": "https://github.com/jieter/django-tables2/issues/634", "id": 388110342, "node_id": "MDU6SXNzdWUzODgxMTAzNDI=", "number": 634, "title": "crud", "user": {"login": "stupidYellowBird", "id": 34467226, "node_id": "MDQ6VXNlcjM0NDY3MjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/34467226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stupidYellowBird", "html_url": "https://github.com/stupidYellowBird", "followers_url": "https://api.github.com/users/stupidYellowBird/followers", "following_url": "https://api.github.com/users/stupidYellowBird/following{/other_user}", "gists_url": "https://api.github.com/users/stupidYellowBird/gists{/gist_id}", "starred_url": "https://api.github.com/users/stupidYellowBird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stupidYellowBird/subscriptions", "organizations_url": "https://api.github.com/users/stupidYellowBird/orgs", "repos_url": "https://api.github.com/users/stupidYellowBird/repos", "events_url": "https://api.github.com/users/stupidYellowBird/events{/privacy}", "received_events_url": "https://api.github.com/users/stupidYellowBird/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-06T08:44:33Z", "updated_at": "2018-12-31T12:06:45Z", "closed_at": "2018-12-31T12:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can django_tables show a create /retrive/update/delete   view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/633", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/633/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/633/events", "html_url": "https://github.com/jieter/django-tables2/issues/633", "id": 388055238, "node_id": "MDU6SXNzdWUzODgwNTUyMzg=", "number": 633, "title": "Can I using it from Json Dataset?", "user": {"login": "YongBeomKim", "id": 26833539, "node_id": "MDQ6VXNlcjI2ODMzNTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/26833539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YongBeomKim", "html_url": "https://github.com/YongBeomKim", "followers_url": "https://api.github.com/users/YongBeomKim/followers", "following_url": "https://api.github.com/users/YongBeomKim/following{/other_user}", "gists_url": "https://api.github.com/users/YongBeomKim/gists{/gist_id}", "starred_url": "https://api.github.com/users/YongBeomKim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YongBeomKim/subscriptions", "organizations_url": "https://api.github.com/users/YongBeomKim/orgs", "repos_url": "https://api.github.com/users/YongBeomKim/repos", "events_url": "https://api.github.com/users/YongBeomKim/events{/privacy}", "received_events_url": "https://api.github.com/users/YongBeomKim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-06T04:47:49Z", "updated_at": "2018-12-06T08:56:21Z", "closed_at": "2018-12-06T08:56:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "According the Manual, Defining a table it is necessary to declare each column:\r\n\r\nimport django_tables2 as tables\r\ndata = [ {'name': 'Bradley'},{'name': 'Stevie'},]\r\n\r\nclass NameTable(tables.Table):\r\n    name = tables.Column()\r\n\r\ntable = NameTable(data)\r\n\r\n\r\nBut Using API json set, It is too hard to setting each columns name, \r\nand Searching any Documents, and No one says How to convert Json to DjangoQuerySet\r\n\r\ncan you exaplain, How to using this module from json.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/632", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/632/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/632/events", "html_url": "https://github.com/jieter/django-tables2/issues/632", "id": 380399034, "node_id": "MDU6SXNzdWUzODAzOTkwMzQ=", "number": 632, "title": "Example of filtering for custom tables", "user": {"login": "partounian", "id": 2541595, "node_id": "MDQ6VXNlcjI1NDE1OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2541595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/partounian", "html_url": "https://github.com/partounian", "followers_url": "https://api.github.com/users/partounian/followers", "following_url": "https://api.github.com/users/partounian/following{/other_user}", "gists_url": "https://api.github.com/users/partounian/gists{/gist_id}", "starred_url": "https://api.github.com/users/partounian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/partounian/subscriptions", "organizations_url": "https://api.github.com/users/partounian/orgs", "repos_url": "https://api.github.com/users/partounian/repos", "events_url": "https://api.github.com/users/partounian/events{/privacy}", "received_events_url": "https://api.github.com/users/partounian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T20:01:20Z", "updated_at": "2018-11-13T21:40:03Z", "closed_at": "2018-11-13T21:39:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to filter a custom table and could I please get some guidance on it?\r\n\r\nMy table is the following\r\n\r\n```python\r\nfrom .models import Input, Result, Speech_Engine\r\n\r\n\r\nclass ResultsTable(tables.Table):\r\n    def __init__(self, data, *args, **kwargs):\r\n        rows = OrderedDict()\r\n        extra_columns = {}\r\n        for row in data:\r\n            if row.id not in rows:\r\n                rows[row.id] = {'input': row}\r\n            rows[row.id]['transcription'] = row.transcription\r\n            extra_columns['transcription'] = tables.Column()\r\n            for engine in Speech_Engine.objects.all():\r\n                try:\r\n                    rows[row.id][engine.name] = Input.objects.get(id=row.id).result_set.get(speech_engine=engine.id).stt_result\r\n                except ObjectDoesNotExist:\r\n                    rows[row.id][engine.name] = '-'\r\n                extra_columns[engine.name] = tables.Column()\r\n        super(ResultsTable, self).__init__(data=rows.values(), extra_columns=extra_columns.items(), *args, **kwargs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/631", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/631/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/631/events", "html_url": "https://github.com/jieter/django-tables2/issues/631", "id": 378785371, "node_id": "MDU6SXNzdWUzNzg3ODUzNzE=", "number": 631, "title": "How to use LazyPaginator together with RequestConfig and Table classes?", "user": {"login": "d33tah", "id": 295322, "node_id": "MDQ6VXNlcjI5NTMyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d33tah", "html_url": "https://github.com/d33tah", "followers_url": "https://api.github.com/users/d33tah/followers", "following_url": "https://api.github.com/users/d33tah/following{/other_user}", "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}", "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions", "organizations_url": "https://api.github.com/users/d33tah/orgs", "repos_url": "https://api.github.com/users/d33tah/repos", "events_url": "https://api.github.com/users/d33tah/events{/privacy}", "received_events_url": "https://api.github.com/users/d33tah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-08T15:33:57Z", "updated_at": "2018-11-11T14:20:02Z", "closed_at": "2018-11-11T13:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a copy of this SO question: https://stackoverflow.com/q/53208617/1091116\r\n\r\nI want to visualize a big, indexed table - big enough for `count(*)` to be too slow for my use case. Here's my views.py code:\r\n\r\n    import django_tables2\r\n    \r\n    from projectname.models import Growth\r\n    \r\n    def dashboard(request):\r\n    \r\n        class StatisticsTable(django_tables2.Table):\r\n    \r\n            class Meta:\r\n                model = Growth\r\n    \r\n        table = StatisticsTable(Growth.objects.all())\r\n        django_tables2.RequestConfig(\r\n                request\r\n        ).configure(table)\r\n        return render(request, \"plain_table.html\", {'table': table,\r\n                                                    'title': 'Growth dashboard',\r\n                                                    'search': None})\r\n\r\nI was looking for examples on how to use `django_tables2.paginators.LazyPaginator` here and so far only found that I should pass it as a `paginate=` in `django_tables2.RequestConfig`, but I still get a regular paginator if I pass a reference to the class there. What's the proper use of this class in this context?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/629", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/629/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/629/events", "html_url": "https://github.com/jieter/django-tables2/issues/629", "id": 378293873, "node_id": "MDU6SXNzdWUzNzgyOTM4NzM=", "number": 629, "title": "reduce pypi package file size", "user": {"login": "wtayyeb", "id": 1420290, "node_id": "MDQ6VXNlcjE0MjAyOTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1420290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wtayyeb", "html_url": "https://github.com/wtayyeb", "followers_url": "https://api.github.com/users/wtayyeb/followers", "following_url": "https://api.github.com/users/wtayyeb/following{/other_user}", "gists_url": "https://api.github.com/users/wtayyeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wtayyeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wtayyeb/subscriptions", "organizations_url": "https://api.github.com/users/wtayyeb/orgs", "repos_url": "https://api.github.com/users/wtayyeb/repos", "events_url": "https://api.github.com/users/wtayyeb/events{/privacy}", "received_events_url": "https://api.github.com/users/wtayyeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-07T13:45:47Z", "updated_at": "2018-11-11T10:56:16Z", "closed_at": "2018-11-11T10:56:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, thank you for your great django-table2 package. it helps us very much.\r\n\r\nI recently re-install my environment and noticed django-tables2 pypi package size is even bigger than django itself!\r\n\r\n![image](https://user-images.githubusercontent.com/1420290/48134445-3324bd00-e2af-11e8-9845-b64dad1f0cbc.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1420290/48134456-3ae46180-e2af-11e8-9382-a0a948d9d4eb.png)\r\n\r\ndigging more about that, I found that you only distribute source code to pypi. But if you `bdist_wheel` it, it will reduce to ~90Kb.\r\n\r\n![image](https://user-images.githubusercontent.com/1420290/48134757-2f456a80-e2b0-11e8-905f-51c17d670b25.png)\r\n\r\nHowever if you don't like wheels (why?) you could exclude `/docs/_build/` directory form source distributed version of your package, or at least remove those huge web fonts from there. I don't think anyone install your package via pip to read documents, when you offer docs in readthedocs.\r\n\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/627", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/627/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/627/events", "html_url": "https://github.com/jieter/django-tables2/issues/627", "id": 369910519, "node_id": "MDU6SXNzdWUzNjk5MTA1MTk=", "number": 627, "title": "Random th classes order", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-14T15:01:54Z", "updated_at": "2018-10-22T07:59:28Z", "closed_at": "2018-10-21T17:44:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe use [django-responsediff](https://github.com/yourlabs/django-responsediff) for auto-generated acceptance tests.\r\n\r\nHowever sometimes the order of th classes attribute items is not in the same order from a run to another : \r\n\r\n```\r\n-            <th class=\"orderable asc\"><a href=\"?status=1&amp;sort=-creation_datetime\">Date et heure de la demande</a></th>\r\n+            <th class=\"asc orderable\"><a href=\"?status=1&amp;sort=-creation_datetime\">Date et heure de la demande</a></th>\r\n```\r\n\r\nWill you accept a patch to fix this ?\r\n\r\nThanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/626", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/626/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/626/events", "html_url": "https://github.com/jieter/django-tables2/issues/626", "id": 366461737, "node_id": "MDU6SXNzdWUzNjY0NjE3Mzc=", "number": 626, "title": "Model attribute names no longer display as classes in the rendered table by default", "user": {"login": "Alzy", "id": 7864706, "node_id": "MDQ6VXNlcjc4NjQ3MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7864706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alzy", "html_url": "https://github.com/Alzy", "followers_url": "https://api.github.com/users/Alzy/followers", "following_url": "https://api.github.com/users/Alzy/following{/other_user}", "gists_url": "https://api.github.com/users/Alzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alzy/subscriptions", "organizations_url": "https://api.github.com/users/Alzy/orgs", "repos_url": "https://api.github.com/users/Alzy/repos", "events_url": "https://api.github.com/users/Alzy/events{/privacy}", "received_events_url": "https://api.github.com/users/Alzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-03T18:08:55Z", "updated_at": "2018-10-06T12:40:47Z", "closed_at": "2018-10-06T12:40:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that the latest version of django-tables2 no longer adds model attribute names in the classes of the columns. (ie: `<th class=\"created_at\"></th>`, `<td class=\"product_name\"></td>`, etc).\r\n\r\nThis was a useful feature for me as I used it in my js scripts. I understand why someone may want it removed from the default behavior but is there any way explicitly enable or disable it in the new version? I have reverted my django-tables2 install back to the last known version that included this feature (1.21.2) as upgrading broke a lot of my functionality that depended on this feature", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/625", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/625/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/625/events", "html_url": "https://github.com/jieter/django-tables2/issues/625", "id": 364999943, "node_id": "MDU6SXNzdWUzNjQ5OTk5NDM=", "number": 625, "title": "Tutorial docs define models that are missing required fields", "user": {"login": "meli-lewis", "id": 2907073, "node_id": "MDQ6VXNlcjI5MDcwNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2907073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meli-lewis", "html_url": "https://github.com/meli-lewis", "followers_url": "https://api.github.com/users/meli-lewis/followers", "following_url": "https://api.github.com/users/meli-lewis/following{/other_user}", "gists_url": "https://api.github.com/users/meli-lewis/gists{/gist_id}", "starred_url": "https://api.github.com/users/meli-lewis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meli-lewis/subscriptions", "organizations_url": "https://api.github.com/users/meli-lewis/orgs", "repos_url": "https://api.github.com/users/meli-lewis/repos", "events_url": "https://api.github.com/users/meli-lewis/events{/privacy}", "received_events_url": "https://api.github.com/users/meli-lewis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-28T18:45:26Z", "updated_at": "2018-11-11T11:03:14Z", "closed_at": "2018-11-11T11:03:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure how you'd prefer to handle this, but the Person model in https://django-tables2.readthedocs.io/en/latest/pages/table-data.html#querysets isn't viable without setting some defaults (how to handle empty fields generally, and `on_delete` for the `user` field).\r\n\r\nLocally, I've just added `null=True` to each field and `on_delete=models.CASCADE` for `user` for the sake of expedience. If that's okay by you, I'm happy to submit a PR for docs!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/623", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/623/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/623/events", "html_url": "https://github.com/jieter/django-tables2/issues/623", "id": 363431289, "node_id": "MDU6SXNzdWUzNjM0MzEyODk=", "number": 623, "title": "TypeError: PersonTable.model = <Person: > (type Person), but type must be one of (ModelBase)", "user": {"login": "vincentwhales", "id": 28204629, "node_id": "MDQ6VXNlcjI4MjA0NjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28204629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentwhales", "html_url": "https://github.com/vincentwhales", "followers_url": "https://api.github.com/users/vincentwhales/followers", "following_url": "https://api.github.com/users/vincentwhales/following{/other_user}", "gists_url": "https://api.github.com/users/vincentwhales/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentwhales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentwhales/subscriptions", "organizations_url": "https://api.github.com/users/vincentwhales/orgs", "repos_url": "https://api.github.com/users/vincentwhales/repos", "events_url": "https://api.github.com/users/vincentwhales/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentwhales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-25T06:41:55Z", "updated_at": "2018-10-31T01:28:23Z", "closed_at": "2018-10-06T12:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might be off topic, but it seems like this error keeps showing up when one is upgrading the django-tables2 package from 1.x to the latest stable. \r\n\r\n```\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10e6a6510>\r\nTraceback (most recent call last):\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 117, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/management/base.py\", line 379, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/management/base.py\", line 366, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/checks/registry.py\", line 71, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/checks/urls.py\", line 40, in check_url_namespaces_unique\r\n    all_namespaces = _load_all_namespaces(resolver)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/core/checks/urls.py\", line 57, in _load_all_namespaces\r\n    url_patterns = getattr(resolver, 'url_patterns', [])\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/utils/functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/urls/resolvers.py\", line 533, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/utils/functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django/urls/resolvers.py\", line 526, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/vng/Desktop/django-crudbuilder/example/example/urls.py\", line 5, in <module>\r\n    from crudbuilder import urls\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/crudbuilder/urls.py\", line 24, in <module>\r\n    list_view = viewbuilder.generate_list_view()\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/crudbuilder/views.py\", line 93, in generate_list_view\r\n    table_class=self.get_actual_table(),\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/crudbuilder/views.py\", line 56, in get_actual_table\r\n    return table_builder.generate_table()\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/crudbuilder/tables.py\", line 39, in generate_table\r\n    main_attrs\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django_tables2/tables.py\", line 30, in __new__\r\n    attrs[\"_meta\"] = opts = TableOptions(attrs.get(\"Meta\", None), name)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django_tables2/tables.py\", line 117, in __init__\r\n    self._check_types(options, class_name)\r\n  File \"/Users/vng/.virtualenvs/crudbuilder/lib/python3.6/site-packages/django_tables2/tables.py\", line 180, in _check_types\r\n    expression, type(value).__name__, \", \".join([t.__name__ for t in types])\r\nTypeError: PersonTable.model = <Person: > (type Person), but type must be one of (ModelBase)\r\n```\r\n\r\nI am currently in the process of updating https://github.com/asifpy/django-crudbuilder, which breaks with the latest stable django-tables2 version. \r\n\r\nAll I am doing is running the example app provided here: https://github.com/asifpy/django-crudbuilder/tree/master/example/example\r\n\r\nFor some reason, django-tables2 keeps complaining that the model class must be one of (ModelBase). The Person model class inherits from Audit which in turn inherits from models.Model. \r\n\r\nIs this expected behavior?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/621", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/621/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/621/events", "html_url": "https://github.com/jieter/django-tables2/issues/621", "id": 362301769, "node_id": "MDU6SXNzdWUzNjIzMDE3Njk=", "number": 621, "title": "Include pagination block in table.html regardless of table.paginator.num_pages?", "user": {"login": "apocalyptech", "id": 443343, "node_id": "MDQ6VXNlcjQ0MzM0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/443343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apocalyptech", "html_url": "https://github.com/apocalyptech", "followers_url": "https://api.github.com/users/apocalyptech/followers", "following_url": "https://api.github.com/users/apocalyptech/following{/other_user}", "gists_url": "https://api.github.com/users/apocalyptech/gists{/gist_id}", "starred_url": "https://api.github.com/users/apocalyptech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apocalyptech/subscriptions", "organizations_url": "https://api.github.com/users/apocalyptech/orgs", "repos_url": "https://api.github.com/users/apocalyptech/repos", "events_url": "https://api.github.com/users/apocalyptech/events{/privacy}", "received_events_url": "https://api.github.com/users/apocalyptech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-20T18:08:12Z", "updated_at": "2018-10-22T08:03:10Z", "closed_at": "2018-09-21T19:09:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Prior to 8f4146d95eec7f02b8a101221c1b13c2e103544d, the `pagination` block in `table.html` was wrapped in this:\r\n\r\n```\r\n{% if table.page %}\r\n{% block pagination %}\r\n...\r\n{% endblock pagination %}\r\n{% endif %}\r\n```\r\n\r\nAfter that commit, the wrapping's changed to be a bit more specific:\r\n```\r\n{% if table.page and table.paginator.num_pages > 1 %}\r\n    {% block pagination %}\r\n    ...\r\n    {% endblock pagination %}\r\n{% endif %}\r\n```\r\n\r\nI've got an app which had been extending the `tables.html` template to provide custom pagination...  In instances where there's only one page to display, in the new version the `pagination` block itself just doesn't exist to be overridden anymore.  So my custom `pagination` override doesn't show up either.\r\n\r\nIs it possible to flip the `block` and `if` statements so that the block exists regardless of the number of pages?  Something basically like:\r\n\r\n```\r\n{% block pagination %}\r\n    {% if table.page and table.paginator.num_pages > 1 %}\r\n    ...\r\n    {% endif %}\r\n{% endblock pagination %}\r\n```\r\n\r\nThat way it'd still be empty ordinarily, but someone extending the template would still be able to make use of it in all cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/620", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/620/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/620/events", "html_url": "https://github.com/jieter/django-tables2/issues/620", "id": 359885592, "node_id": "MDU6SXNzdWUzNTk4ODU1OTI=", "number": 620, "title": "Linking each item in a Foreign Key reverse lookup", "user": {"login": "douglance", "id": 4741454, "node_id": "MDQ6VXNlcjQ3NDE0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4741454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglance", "html_url": "https://github.com/douglance", "followers_url": "https://api.github.com/users/douglance/followers", "following_url": "https://api.github.com/users/douglance/following{/other_user}", "gists_url": "https://api.github.com/users/douglance/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglance/subscriptions", "organizations_url": "https://api.github.com/users/douglance/orgs", "repos_url": "https://api.github.com/users/douglance/repos", "events_url": "https://api.github.com/users/douglance/events{/privacy}", "received_events_url": "https://api.github.com/users/douglance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-13T13:01:32Z", "updated_at": "2018-09-15T12:26:15Z", "closed_at": "2018-09-13T15:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**CURRENT BEHAVIOR**\r\n\r\nI am trying to set up a reverse lookup for Lesson objects off of Unit objects.\r\n\r\nHere's the Lesson object:\r\n```python\r\nclass Lesson(CreatorModel):\r\n    title = models.CharField(null=False, blank=False, max_length=128)\r\n    unit = models.ForeignKey('Unit', on_delete=models.CASCADE, null=True, blank=True, related_name='lessons')\r\n```\r\nSo I can do a reverse lookup off a unit object with `unit.lessons`\r\n\r\nI am trying to get a comma separated list of Lesson objects in my Unit List table. Here's the column that I've tried, that doesn't work:\r\n\r\n```python\r\nlessons = tables.Column(linkify=lambda record: record.lessons.all())\r\n```\r\nIt only shows me wrongly linked queryset objects:` [<Lesson: Test Lesson>]`\r\n\r\nWe also tried: \r\n\r\n```python\r\nclass Unit(model.Model):\r\n    name = models.CharField(null=False, blank=False, max_length=128)\r\n\r\n    def get_absolute_url(self):\r\n        # make sure you define this method on Unit.\r\n        return reverse('TODO', args=[self.pk])\r\n\r\nclass Lesson(CreatorModel):\r\n    title = models.CharField(null=False, blank=False, max_length=128)\r\n    unit = models.ForeignKey('Unit', on_delete=models.CASCADE, null=True, blank=True, related_name='lessons')\r\n\r\n\r\nclass UnitTable(tables.Table\r\n    lessons = tables.ManyToManyColumn(linkify_item=True)\r\n```\r\n\r\nWhich gives us a list of comma separated items properly, but they're all linked together as a single <a> element that points at the Unit record's `get_absolute_url`. \r\n\r\n\r\n**EXPECTED BEHAVIOR**\r\n\r\nI expected to have a comma separated list of items that are each linked with their own `get_absolute_url`. \r\n\r\n\r\n**ENVIRONMENT**\r\ndjango==2.1\r\ndjango-tables2==2.0.0  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/619", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/619/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/619/events", "html_url": "https://github.com/jieter/django-tables2/issues/619", "id": 359563698, "node_id": "MDU6SXNzdWUzNTk1NjM2OTg=", "number": 619, "title": "context data in custom table template not working", "user": {"login": "bronte2k7", "id": 29693866, "node_id": "MDQ6VXNlcjI5NjkzODY2", "avatar_url": "https://avatars3.githubusercontent.com/u/29693866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bronte2k7", "html_url": "https://github.com/bronte2k7", "followers_url": "https://api.github.com/users/bronte2k7/followers", "following_url": "https://api.github.com/users/bronte2k7/following{/other_user}", "gists_url": "https://api.github.com/users/bronte2k7/gists{/gist_id}", "starred_url": "https://api.github.com/users/bronte2k7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bronte2k7/subscriptions", "organizations_url": "https://api.github.com/users/bronte2k7/orgs", "repos_url": "https://api.github.com/users/bronte2k7/repos", "events_url": "https://api.github.com/users/bronte2k7/events{/privacy}", "received_events_url": "https://api.github.com/users/bronte2k7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-12T16:39:56Z", "updated_at": "2018-09-12T18:35:45Z", "closed_at": "2018-09-12T18:35:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass TableA(Table):\r\n    class Meta:\r\n        template_name = \"tableA.html\"\r\n        model = ModelA\r\n\r\nclass ModelA(Model):\r\n    pass\r\n\r\nclass MultiTableView(MultiTableMixin, TemplateView):\r\n    template_name = \"tables_list.html\"\r\n\r\n    def get_tables(self):\r\n        return [\r\n            TableA(ModelA.objects.all()),\r\n        ]\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super(MultiTableView, self).get_context_data(**kwargs)\r\n        context['title'] = 'title'\r\n        return context\r\n```\r\n\r\nvariable title not working in tableA.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/618", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/618/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/618/events", "html_url": "https://github.com/jieter/django-tables2/issues/618", "id": 358944109, "node_id": "MDU6SXNzdWUzNTg5NDQxMDk=", "number": 618, "title": "Table.Meta.template is deprecated. Use template_name instead.", "user": {"login": "decentral1se", "id": 1991377, "node_id": "MDQ6VXNlcjE5OTEzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1991377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentral1se", "html_url": "https://github.com/decentral1se", "followers_url": "https://api.github.com/users/decentral1se/followers", "following_url": "https://api.github.com/users/decentral1se/following{/other_user}", "gists_url": "https://api.github.com/users/decentral1se/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentral1se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentral1se/subscriptions", "organizations_url": "https://api.github.com/users/decentral1se/orgs", "repos_url": "https://api.github.com/users/decentral1se/repos", "events_url": "https://api.github.com/users/decentral1se/events{/privacy}", "received_events_url": "https://api.github.com/users/decentral1se/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T08:39:46Z", "updated_at": "2018-09-11T09:45:44Z", "closed_at": "2018-09-11T09:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndjango_tables2/tables.py:141: Depr\r\necationWarning: Table.Meta.template is deprecated. Use template_name instead.                                                                     \r\n  warnings.warn('Table.Meta.template is deprecated. Use template_name instead.', DeprecationWarning) \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/617", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/617/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/617/events", "html_url": "https://github.com/jieter/django-tables2/issues/617", "id": 358577931, "node_id": "MDU6SXNzdWUzNTg1Nzc5MzE=", "number": 617, "title": "Add support for multiple tables on one webpage", "user": {"login": "rsplaul", "id": 2684993, "node_id": "MDQ6VXNlcjI2ODQ5OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2684993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsplaul", "html_url": "https://github.com/rsplaul", "followers_url": "https://api.github.com/users/rsplaul/followers", "following_url": "https://api.github.com/users/rsplaul/following{/other_user}", "gists_url": "https://api.github.com/users/rsplaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsplaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsplaul/subscriptions", "organizations_url": "https://api.github.com/users/rsplaul/orgs", "repos_url": "https://api.github.com/users/rsplaul/repos", "events_url": "https://api.github.com/users/rsplaul/events{/privacy}", "received_events_url": "https://api.github.com/users/rsplaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T11:17:28Z", "updated_at": "2018-09-10T15:21:51Z", "closed_at": "2018-09-10T15:21:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m not sure, if I\u2019m missing something, but is there a way to have multiple tables on one webpage and have them sorted independently? If I put two tables on one page, only one of them can be sorted by the user. Moreover, if they have identical column names, both get sorted by this column, because the query parameters are not distinct. \r\n\r\nA fix could be to (optionally) add a name of the table to the query variable or parameter i.e.:\r\n\r\n`https://domain.tld/something/?sort_table1=name&sort_table2=date`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/615", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/615/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/615/events", "html_url": "https://github.com/jieter/django-tables2/issues/615", "id": 358509883, "node_id": "MDU6SXNzdWUzNTg1MDk4ODM=", "number": 615, "title": "non-integer constant in GROUP BY", "user": {"login": "behconsci", "id": 10358323, "node_id": "MDQ6VXNlcjEwMzU4MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10358323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behconsci", "html_url": "https://github.com/behconsci", "followers_url": "https://api.github.com/users/behconsci/followers", "following_url": "https://api.github.com/users/behconsci/following{/other_user}", "gists_url": "https://api.github.com/users/behconsci/gists{/gist_id}", "starred_url": "https://api.github.com/users/behconsci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behconsci/subscriptions", "organizations_url": "https://api.github.com/users/behconsci/orgs", "repos_url": "https://api.github.com/users/behconsci/repos", "events_url": "https://api.github.com/users/behconsci/events{/privacy}", "received_events_url": "https://api.github.com/users/behconsci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T08:02:31Z", "updated_at": "2018-09-10T08:13:22Z", "closed_at": "2018-09-10T08:13:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://0.0.0.0:3000/campaigns/campaign/create/\r\n\r\nDjango Version: 1.11.15\r\nPython Version: 3.6.2\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/paginator.py\" in count\r\n  79.             return self.object_list.count()\r\n\r\nDuring handling of the above exception ('BoundRows' object has no attribute 'count'), another exception occurred:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nThe above exception (non-integer constant in GROUP BY\r\nLINE 1: ...ctive\" = true) GROUP BY \"catalogue_product\".\"id\", 'js-tr__ac...\r\n                                                             ^\r\n) was the direct cause of the following exception:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/exception.py\" in inner\r\n  41.             response = get_response(request)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  187.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/usr/lib/python3.6/contextlib.py\" in inner\r\n  52.                 return func(*args, **kwds)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/contrib/auth/decorators.py\" in _wrapped_view\r\n  23.                 return view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/base.py\" in view\r\n  68.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/base.py\" in dispatch\r\n  88.         return handler(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/edit.py\" in get\r\n  236.         return super(BaseUpdateView, self).get(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/edit.py\" in get\r\n  174.         return self.render_to_response(self.get_context_data())\r\n\r\nFile \"/home/vagrant/goldmarie/adminpanel/dashboard/campaigns/views.py\" in get_context_data\r\n  300.         ctx['add_table'] = self.get_add_table()\r\n\r\nFile \"/home/vagrant/goldmarie/adminpanel/dashboard/campaigns/views.py\" in get_add_table\r\n  471.         RequestConfig(self.request, **options).configure(table)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/config.py\" in configure\r\n  59.                     table.paginate(**kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/tables.py\" in paginate\r\n  526.         self.page = self.paginator.page(page)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/paginator.py\" in page\r\n  57.         number = self.validate_number(number)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/paginator.py\" in validate_number\r\n  46.         if number > self.num_pages:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/utils/functional.py\" in __get__\r\n  35.         res = instance.__dict__[self.name] = self.func(instance)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/paginator.py\" in num_pages\r\n  91.         if self.count == 0 and not self.allow_empty_first_page:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/utils/functional.py\" in __get__\r\n  35.         res = instance.__dict__[self.name] = self.func(instance)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/paginator.py\" in count\r\n  84.             return len(self.object_list)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/rows.py\" in __len__\r\n  341.         length = len(self.data)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/data.py\" in __len__\r\n  140.                 self._length = self.data.count()\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/models/query.py\" in count\r\n  364.         return self.query.get_count(using=self.db)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/models/sql/query.py\" in get_count\r\n  499.         number = obj.get_aggregation(using, ['__count'])['__count']\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/models/sql/query.py\" in get_aggregation\r\n  480.         result = compiler.execute_sql(SINGLE)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  899.             raise original_exception\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/models/sql/compiler.py\" in execute_sql\r\n  889.             cursor.execute(sql, params)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/backends/utils.py\" in execute\r\n  79.             return super(CursorDebugWrapper, self).execute(sql, params)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/utils.py\" in __exit__\r\n  94.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/utils/six.py\" in reraise\r\n  685.             raise value.with_traceback(tb)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/db/backends/utils.py\" in execute\r\n  64.                 return self.cursor.execute(sql, params)\r\n\r\nException Type: ProgrammingError at /campaigns/campaign/create/\r\nException Value: non-integer constant in GROUP BY\r\nLINE 1: ...ctive\" = true) GROUP BY \"catalogue_product\".\"id\", 'js-tr__ac...\r\n                                                             ^\r\n```\r\n\r\nit seems to be django-table2 issue.. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/614", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/614/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/614/events", "html_url": "https://github.com/jieter/django-tables2/issues/614", "id": 357438792, "node_id": "MDU6SXNzdWUzNTc0Mzg3OTI=", "number": 614, "title": "django_tables2-1.21.2  installed with pipenv - No bootstrap4 template", "user": {"login": "niko86", "id": 287100, "node_id": "MDQ6VXNlcjI4NzEwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niko86", "html_url": "https://github.com/niko86", "followers_url": "https://api.github.com/users/niko86/followers", "following_url": "https://api.github.com/users/niko86/following{/other_user}", "gists_url": "https://api.github.com/users/niko86/gists{/gist_id}", "starred_url": "https://api.github.com/users/niko86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niko86/subscriptions", "organizations_url": "https://api.github.com/users/niko86/orgs", "repos_url": "https://api.github.com/users/niko86/repos", "events_url": "https://api.github.com/users/niko86/events{/privacy}", "received_events_url": "https://api.github.com/users/niko86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-05T23:22:59Z", "updated_at": "2018-09-06T08:17:43Z", "closed_at": "2018-09-06T08:04:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title says, however, if i take the bootstrap4.html template from github the template has errors due to a </span> tag being missing.\r\n\r\nNot sure if this has been observed by others?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/610", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/610/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/610/events", "html_url": "https://github.com/jieter/django-tables2/issues/610", "id": 356473957, "node_id": "MDU6SXNzdWUzNTY0NzM5NTc=", "number": 610, "title": "Is it possible to render table/row or cell to use with AJAX?", "user": {"login": "milano-slesarik", "id": 7869582, "node_id": "MDQ6VXNlcjc4Njk1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7869582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milano-slesarik", "html_url": "https://github.com/milano-slesarik", "followers_url": "https://api.github.com/users/milano-slesarik/followers", "following_url": "https://api.github.com/users/milano-slesarik/following{/other_user}", "gists_url": "https://api.github.com/users/milano-slesarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/milano-slesarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milano-slesarik/subscriptions", "organizations_url": "https://api.github.com/users/milano-slesarik/orgs", "repos_url": "https://api.github.com/users/milano-slesarik/repos", "events_url": "https://api.github.com/users/milano-slesarik/events{/privacy}", "received_events_url": "https://api.github.com/users/milano-slesarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T11:49:16Z", "updated_at": "2018-09-03T13:09:54Z", "closed_at": "2018-09-03T13:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to figure out a way how to render table, row or cell to html so I can send it through **AJAX**. \r\n\r\nFor example there is a column with button \"Export\" and additional data like \"Exported date\", \"Export status\" etc. and you don't want to reload whole page after user clicks on this button. \r\n\r\nYou can do that replacing values in the cell using **JQuery** but I think it is much more comfortable and safe to get whole cell or row html through **AJAX** and then replace it. \r\n\r\nFor now, I replace a whole table and I have to create a template:\r\n```\r\n{% load django_tables2 %}\r\n{{ render_table mytable }}\r\n\r\n```\r\nthen I render this template using `render_to_string` method and send it through **AJAX** because there is no such thing like `table.render_html()` or something else.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/608", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/608/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/608/events", "html_url": "https://github.com/jieter/django-tables2/issues/608", "id": 355157236, "node_id": "MDU6SXNzdWUzNTUxNTcyMzY=", "number": 608, "title": "'int' object does not support item assignment", "user": {"login": "behconsci", "id": 10358323, "node_id": "MDQ6VXNlcjEwMzU4MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10358323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behconsci", "html_url": "https://github.com/behconsci", "followers_url": "https://api.github.com/users/behconsci/followers", "following_url": "https://api.github.com/users/behconsci/following{/other_user}", "gists_url": "https://api.github.com/users/behconsci/gists{/gist_id}", "starred_url": "https://api.github.com/users/behconsci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behconsci/subscriptions", "organizations_url": "https://api.github.com/users/behconsci/orgs", "repos_url": "https://api.github.com/users/behconsci/repos", "events_url": "https://api.github.com/users/behconsci/events{/privacy}", "received_events_url": "https://api.github.com/users/behconsci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-29T13:20:08Z", "updated_at": "2018-08-30T17:14:04Z", "closed_at": "2018-08-30T17:12:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "using \r\n\r\ndjango-tables2==1.21.2\r\ndjango-oscar==1.6\r\ndjango==1.11.15\r\n\r\nhere is the full traceback: \r\n\r\n```\r\nEnvironment:\r\nRequest Method: GET\r\nRequest URL: http://0.0.0.0:3000/orders/\r\n\r\nDjango Version: 1.11.15\r\nPython Version: 3.6.2\r\n\r\nTraceback:\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/exception.py\" in inner\r\n  41.             response = get_response(request)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  187.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/usr/lib/python3.6/contextlib.py\" in inner\r\n  52.                 return func(*args, **kwds)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/contrib/auth/decorators.py\" in _wrapped_view\r\n  23.                 return view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/base.py\" in view\r\n  68.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/oscar/apps/dashboard/orders/views.py\" in dispatch\r\n  125.         return super(OrderListView, self).dispatch(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/base.py\" in dispatch\r\n  88.         return handler(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/goldmarie/adminpanel/dashboard/orders/views.py\" in get\r\n  194.         return super(GMOrderListView, self).get(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/oscar/apps/dashboard/orders/views.py\" in get\r\n  139.         return super(OrderListView, self).get(request, *args, **kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django/views/generic/list.py\" in get\r\n  175.         context = self.get_context_data()\r\n\r\nFile \"/home/vagrant/goldmarie/adminpanel/dashboard/orders/views.py\" in get_context_data\r\n  454.         ctx = super(GMOrderListView, self).get_context_data(**kwargs)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/views.py\" in get_context_data\r\n  129.         table = self.get_table(**self.get_table_kwargs())\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/views.py\" in get_table\r\n  91.         return RequestConfig(self.request, paginate=self.get_table_pagination(table)).configure(table)\r\n\r\nFile \"/home/vagrant/.virtualenvs/goldmarie/lib/python3.6/site-packages/django_tables2/views.py\" in get_table_pagination\r\n  37.             paginate['per_page'] = self.paginate_by\r\n\r\nException Type: TypeError at /orders/\r\nException Value: 'int' object does not support item assignment\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/607", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/607/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/607/events", "html_url": "https://github.com/jieter/django-tables2/issues/607", "id": 355020484, "node_id": "MDU6SXNzdWUzNTUwMjA0ODQ=", "number": 607, "title": "Suggestion to improve query set fields to be more DRY", "user": {"login": "ccsv", "id": 6316732, "node_id": "MDQ6VXNlcjYzMTY3MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6316732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccsv", "html_url": "https://github.com/ccsv", "followers_url": "https://api.github.com/users/ccsv/followers", "following_url": "https://api.github.com/users/ccsv/following{/other_user}", "gists_url": "https://api.github.com/users/ccsv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccsv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccsv/subscriptions", "organizations_url": "https://api.github.com/users/ccsv/orgs", "repos_url": "https://api.github.com/users/ccsv/repos", "events_url": "https://api.github.com/users/ccsv/events{/privacy}", "received_events_url": "https://api.github.com/users/ccsv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-29T06:48:09Z", "updated_at": "2018-11-11T11:04:35Z", "closed_at": "2018-11-11T11:04:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. Can `sequence` and `fields` under the Meta options for tables be combined (or eliminate sequence)? The `fields` currently accepts both list and sets. [Python list will keep items in order while sets do not](https://stackoverflow.com/questions/13694034/is-a-python-list-guaranteed-to-have-its-elements-stay-in-the-order-they-are-inse) which makes the sequence option redundant.\r\n \r\nHere are the docs for fields and sequence options\r\nhttps://django-tables2.readthedocs.io/en/latest/pages/table-data.html\r\n\r\n2.  Fields should be made to accept  `__all__` to automatically populate all fields which would be the same functionality in Django Forms.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/605", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/605/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/605/events", "html_url": "https://github.com/jieter/django-tables2/issues/605", "id": 353798592, "node_id": "MDU6SXNzdWUzNTM3OTg1OTI=", "number": 605, "title": "tbody attributes (feature request)", "user": {"login": "roelbouwman", "id": 3629723, "node_id": "MDQ6VXNlcjM2Mjk3MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3629723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roelbouwman", "html_url": "https://github.com/roelbouwman", "followers_url": "https://api.github.com/users/roelbouwman/followers", "following_url": "https://api.github.com/users/roelbouwman/following{/other_user}", "gists_url": "https://api.github.com/users/roelbouwman/gists{/gist_id}", "starred_url": "https://api.github.com/users/roelbouwman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roelbouwman/subscriptions", "organizations_url": "https://api.github.com/users/roelbouwman/orgs", "repos_url": "https://api.github.com/users/roelbouwman/repos", "events_url": "https://api.github.com/users/roelbouwman/events{/privacy}", "received_events_url": "https://api.github.com/users/roelbouwman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-08-24T14:06:51Z", "updated_at": "2018-08-27T19:50:59Z", "closed_at": "2018-08-25T13:11:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hello,\r\nI'm using jquery-ui to sort tables, to make this work with django_tables2 i need to add an id attribute to the \"tbody\" tag. I noticed the \"tbody\" tag is not parameterizable, is it possible to build this feature in?\r\n\r\nI'm looking forward to your answer\r\n\r\nKind regards,\r\nRoel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/603", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/603/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/603/events", "html_url": "https://github.com/jieter/django-tables2/issues/603", "id": 351290739, "node_id": "MDU6SXNzdWUzNTEyOTA3Mzk=", "number": 603, "title": "Autosize column width when exporting to excel", "user": {"login": "Dave-Elec", "id": 15947144, "node_id": "MDQ6VXNlcjE1OTQ3MTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/15947144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dave-Elec", "html_url": "https://github.com/Dave-Elec", "followers_url": "https://api.github.com/users/Dave-Elec/followers", "following_url": "https://api.github.com/users/Dave-Elec/following{/other_user}", "gists_url": "https://api.github.com/users/Dave-Elec/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dave-Elec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dave-Elec/subscriptions", "organizations_url": "https://api.github.com/users/Dave-Elec/orgs", "repos_url": "https://api.github.com/users/Dave-Elec/repos", "events_url": "https://api.github.com/users/Dave-Elec/events{/privacy}", "received_events_url": "https://api.github.com/users/Dave-Elec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-16T17:03:33Z", "updated_at": "2018-08-20T13:09:14Z", "closed_at": "2018-08-20T08:55:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exporting with xlsx format doesn't auto resize the column width to an optimum size.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/602", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/602/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/602/events", "html_url": "https://github.com/jieter/django-tables2/issues/602", "id": 350807891, "node_id": "MDU6SXNzdWUzNTA4MDc4OTE=", "number": 602, "title": "use of linkify column", "user": {"login": "lesaf", "id": 42411156, "node_id": "MDQ6VXNlcjQyNDExMTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/42411156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lesaf", "html_url": "https://github.com/lesaf", "followers_url": "https://api.github.com/users/lesaf/followers", "following_url": "https://api.github.com/users/lesaf/following{/other_user}", "gists_url": "https://api.github.com/users/lesaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/lesaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lesaf/subscriptions", "organizations_url": "https://api.github.com/users/lesaf/orgs", "repos_url": "https://api.github.com/users/lesaf/repos", "events_url": "https://api.github.com/users/lesaf/events{/privacy}", "received_events_url": "https://api.github.com/users/lesaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-15T13:25:02Z", "updated_at": "2018-08-20T08:55:18Z", "closed_at": "2018-08-20T08:55:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "In current version is an example were linkify=True is used, this somehow gives errors.\r\nHas this been tested with Django > 2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/600", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/600/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/600/events", "html_url": "https://github.com/jieter/django-tables2/issues/600", "id": 349796166, "node_id": "MDU6SXNzdWUzNDk3OTYxNjY=", "number": 600, "title": "Table in a tab", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-12T08:51:06Z", "updated_at": "2019-01-28T18:43:38Z", "closed_at": "2019-01-28T18:04:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello maintainers !\r\n\r\nThanks for this beautiful package !\r\n\r\nMy problem is a paginated table in an HTML (materializecss) tab. If possible, we could setup a pagination link suffix, such as \"#mytab\". Then, when the user clicks a paginated table link, it could open the tab it was currently seeing.\r\n\r\nDo you think this could be acceptable ?\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/599", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/599/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/599/events", "html_url": "https://github.com/jieter/django-tables2/issues/599", "id": 346842660, "node_id": "MDU6SXNzdWUzNDY4NDI2NjA=", "number": 599, "title": "Allow descending-sort columns to place empty values at bottom of column", "user": {"login": "foldedpaper", "id": 8527220, "node_id": "MDQ6VXNlcjg1MjcyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8527220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foldedpaper", "html_url": "https://github.com/foldedpaper", "followers_url": "https://api.github.com/users/foldedpaper/followers", "following_url": "https://api.github.com/users/foldedpaper/following{/other_user}", "gists_url": "https://api.github.com/users/foldedpaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/foldedpaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foldedpaper/subscriptions", "organizations_url": "https://api.github.com/users/foldedpaper/orgs", "repos_url": "https://api.github.com/users/foldedpaper/repos", "events_url": "https://api.github.com/users/foldedpaper/events{/privacy}", "received_events_url": "https://api.github.com/users/foldedpaper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-02T03:08:49Z", "updated_at": "2019-08-21T00:31:08Z", "closed_at": "2018-08-03T03:41:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When working with descending columns in #595 and #597 , I came across some descending-sort behavior that seems a little off. \r\n\r\nConsider a set of data like this:\r\n\r\n| Record | Value |\r\n| --- | --- |\r\n| A | 3 |\r\n| B | 1 | \r\n| C | - |\r\n| D | - |\r\n\r\nWhen sorting Value column in ascending order, the empty values are pushed to the bottom of the list:\r\n\r\n| Record | Value |\r\n| --- | --- |\r\n| B | 1 |\r\n| A | 3 | \r\n| C | - |\r\n| D | - |\r\n\r\nBut when sorting in descending order, the empty values are placed at the top of the list:\r\n\r\n| Record | Value |\r\n| --- | --- |\r\n| C | - |\r\n| D | - | \r\n| A | 3 |\r\n| B | 1 |\r\n\r\nIn some cases a user would want to \"ignore\" the empty values when sorting in descending order, and thereby push them to the bottom of the list, same as with ascending. Can this be done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/598", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/598/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/598/events", "html_url": "https://github.com/jieter/django-tables2/issues/598", "id": 346839058, "node_id": "MDU6SXNzdWUzNDY4MzkwNTg=", "number": 598, "title": "Sort links don't retain page anchor", "user": {"login": "buffgecko", "id": 42018260, "node_id": "MDQ6VXNlcjQyMDE4MjYw", "avatar_url": "https://avatars0.githubusercontent.com/u/42018260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buffgecko", "html_url": "https://github.com/buffgecko", "followers_url": "https://api.github.com/users/buffgecko/followers", "following_url": "https://api.github.com/users/buffgecko/following{/other_user}", "gists_url": "https://api.github.com/users/buffgecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/buffgecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buffgecko/subscriptions", "organizations_url": "https://api.github.com/users/buffgecko/orgs", "repos_url": "https://api.github.com/users/buffgecko/repos", "events_url": "https://api.github.com/users/buffgecko/events{/privacy}", "received_events_url": "https://api.github.com/users/buffgecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-02T02:48:03Z", "updated_at": "2018-08-10T10:42:49Z", "closed_at": "2018-08-10T10:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a page with Bootstrap-style tabs that uses anchors. When I click a header field to sort one of the tables, the sorting works fine, but the result URL doesn't retain the original #anchor location and I am sent to a different tab.\r\n\r\n![wn8qy](https://user-images.githubusercontent.com/42018260/43559632-67f1bc9a-95d4-11e8-8406-4ca2b8dd7354.png)\r\n\r\nOriginal URL: http://localhost:8000/wakemeup/myaccount#reputation\r\nActual Sort URL: http://localhost:8000/wakemeup/myaccount?sort=pointvalue\r\n\r\nDesired Sort URL: http://localhost:8000/wakemeup/myaccount#reputation?sort=pointvalue\r\n\r\n**Problem**\r\nHow can I get the table sort headers to retain the original anchor location in the URL? Thanks.\r\n\r\nStackoverflow: \r\nhttps://stackoverflow.com/questions/51598822/django-tables2-sort-links-dont-retain-page-anchor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/596", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/596/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/596/events", "html_url": "https://github.com/jieter/django-tables2/issues/596", "id": 345651088, "node_id": "MDU6SXNzdWUzNDU2NTEwODg=", "number": 596, "title": "issues to fix before releasing 2.0.0", "user": {"login": "jieter", "id": 1470389, "node_id": "MDQ6VXNlcjE0NzAzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1470389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieter", "html_url": "https://github.com/jieter", "followers_url": "https://api.github.com/users/jieter/followers", "following_url": "https://api.github.com/users/jieter/following{/other_user}", "gists_url": "https://api.github.com/users/jieter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieter/subscriptions", "organizations_url": "https://api.github.com/users/jieter/orgs", "repos_url": "https://api.github.com/users/jieter/repos", "events_url": "https://api.github.com/users/jieter/events{/privacy}", "received_events_url": "https://api.github.com/users/jieter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-30T08:00:27Z", "updated_at": "2018-09-13T09:37:54Z", "closed_at": "2018-09-13T09:37:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It is my intention to release a final 2.0.0 after these issues are fixed:\r\n\r\n - [x] Tests for pagination template tags.\r\n - [x] Initial descending sort (#566)\r\n - [x] Rename `klass` argument to `Table.paginate` by something more informative.\r\n\r\n\r\n [django-filter 2.0.0](https://github.com/carltongibson/django-filter/releases/tag/2.0.0) compatability probably has nothing to do with django-tables2 and can be fixed later. See also carltongibson/django-filter#930", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/595", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/595/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/595/events", "html_url": "https://github.com/jieter/django-tables2/issues/595", "id": 345508037, "node_id": "MDU6SXNzdWUzNDU1MDgwMzc=", "number": 595, "title": "Allow some columns to sort descending on first click", "user": {"login": "foldedpaper", "id": 8527220, "node_id": "MDQ6VXNlcjg1MjcyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8527220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foldedpaper", "html_url": "https://github.com/foldedpaper", "followers_url": "https://api.github.com/users/foldedpaper/followers", "following_url": "https://api.github.com/users/foldedpaper/following{/other_user}", "gists_url": "https://api.github.com/users/foldedpaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/foldedpaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foldedpaper/subscriptions", "organizations_url": "https://api.github.com/users/foldedpaper/orgs", "repos_url": "https://api.github.com/users/foldedpaper/repos", "events_url": "https://api.github.com/users/foldedpaper/events{/privacy}", "received_events_url": "https://api.github.com/users/foldedpaper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-29T07:09:27Z", "updated_at": "2018-08-02T05:30:35Z", "closed_at": "2018-08-02T05:30:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Considering an example data table of sports statistics, rendered unsorted:\r\n\r\n| Player | Goals | Assists | Fouls |\r\n| --- | --- | --- |---|\r\n| Lorem | 3 | 1 | 4 |\r\n| Ipsum | 1 | 4 | 2 |\r\n| Totam | 0 | 3 | 1 |\r\n\r\nWhen attempting to sort this table by one column (i.e. by clicking on the column header), It would be desirable to have some columns default to descending order (like goals and assists) and others to ascending (like fouls).\r\n\r\nIt seems that the default behavior is to have all orderable columns sort in ascending order when clicked.\r\n\r\nCurrently an `order_FOO()` method can be used to make some columns sort descending on first click, like so:\r\n\r\n```\r\ndef order_goals(self, QuerySet, is_descending):\r\n\tQuerySet = QuerySet.order_by('goals' if is_descending else '-goals')\r\n\treturn (QuerySet, True)\r\n```\r\n\r\nHowever, this introduces undesirable behavior in the table rendering, especially if the `asc` and/or `desc` class names are used to add styling that indicates sorting on the column. Even though the data is presented in descending order, it is still tagged with the `asc` class.\r\n\r\n[This Stack Overflow question](https://stackoverflow.com/questions/14956594/django-tables2-set-default-sort-to-be-descending) shows how a column may be sorted in descending order on first click by overriding the template rendering of the sorting link in the column header.\r\n\r\nHowever, that solution changes the sorting behavior of all columns.\r\n\r\nIs there some way that a per-column sorting attribute can be set to change the sorting behavior on first click?   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/594", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/594/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/594/events", "html_url": "https://github.com/jieter/django-tables2/issues/594", "id": 344475375, "node_id": "MDU6SXNzdWUzNDQ0NzUzNzU=", "number": 594, "title": "Rendering ManyToMandyColumn as individual links to each related object", "user": {"login": "douglance", "id": 4741454, "node_id": "MDQ6VXNlcjQ3NDE0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4741454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglance", "html_url": "https://github.com/douglance", "followers_url": "https://api.github.com/users/douglance/followers", "following_url": "https://api.github.com/users/douglance/following{/other_user}", "gists_url": "https://api.github.com/users/douglance/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglance/subscriptions", "organizations_url": "https://api.github.com/users/douglance/orgs", "repos_url": "https://api.github.com/users/douglance/repos", "events_url": "https://api.github.com/users/douglance/events{/privacy}", "received_events_url": "https://api.github.com/users/douglance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-07-25T14:45:07Z", "updated_at": "2019-01-15T17:12:34Z", "closed_at": "2018-07-28T12:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a **Unit** table that has a ManyToMany relationship with **Activities**. \r\n\r\nWhen rendering the Activities in my Unit table, I want to have each Activity be a link to its own detail view. \r\n\r\nI have tried many methods of doing so, but have not been able to figure out the best method. \r\n\r\nI can get the URLs using a lambda:\r\n\r\n`activities = tables.ManyToManyColumn(verbose_name='Activities', transform=lambda obj: obj.get_absolute_url,)`\r\n\r\nBut I can not find a good solution for actually _rendering_ that link. \r\n\r\nIt seems like I should be able to customize the rendering of the link by accessing each item in a `render_activities()` method. But the value in `render_FOO()` methods when using `ManyToManyColumns` doesn't seem to work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/592", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/592/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/592/events", "html_url": "https://github.com/jieter/django-tables2/issues/592", "id": 343562662, "node_id": "MDU6SXNzdWUzNDM1NjI2NjI=", "number": 592, "title": "Install error", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T09:49:04Z", "updated_at": "2018-07-23T17:18:32Z", "closed_at": "2018-07-23T17:18:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI see this in CI, but not locally, it's new since a4, any clue please ?\r\n\r\n```\r\nCollecting django-tables2>=2.0.0a4 (from crudlfap==0.4.8->-r /code/requirements.txt (line 10))\r\n  Downloading https://files.pythonhosted.org/packages/f4/d5/a5ec102b71de1f52383b7e43bf17b69e82e104b389867349523a2480045d/django-tables2-2.0.0a4.tar.gz (3.1MB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-_pgdf7om/django-tables2/setup.py\", line 14, in <module>\r\n        long_description=open(\"README.rst\").read(),\r\n      File \"/usr/lib/python3.6/encodings/ascii.py\", line 26, in decode\r\n        return codecs.ascii_decode(input, self.errors)[0]\r\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 375: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/591", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/591/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/591/events", "html_url": "https://github.com/jieter/django-tables2/issues/591", "id": 340025970, "node_id": "MDU6SXNzdWUzNDAwMjU5NzA=", "number": 591, "title": "column attribute record allways returns None", "user": {"login": "roelbouwman", "id": 3629723, "node_id": "MDQ6VXNlcjM2Mjk3MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3629723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roelbouwman", "html_url": "https://github.com/roelbouwman", "followers_url": "https://api.github.com/users/roelbouwman/followers", "following_url": "https://api.github.com/users/roelbouwman/following{/other_user}", "gists_url": "https://api.github.com/users/roelbouwman/gists{/gist_id}", "starred_url": "https://api.github.com/users/roelbouwman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roelbouwman/subscriptions", "organizations_url": "https://api.github.com/users/roelbouwman/orgs", "repos_url": "https://api.github.com/users/roelbouwman/repos", "events_url": "https://api.github.com/users/roelbouwman/events{/privacy}", "received_events_url": "https://api.github.com/users/roelbouwman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300520808, "node_id": "MDU6TGFiZWwzMDA1MjA4MDg=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 300530712, "node_id": "MDU6TGFiZWwzMDA1MzA3MTI=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-10T22:15:38Z", "updated_at": "2018-07-14T19:31:50Z", "closed_at": "2018-07-11T17:34:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use this code to add attr to a column but the record allways returns None\r\ndjango-tables2 version = 1.11.0\r\n\r\n```\r\ndef data_pager_number(**kwargs):\r\n    pager_number = kwargs.get('pager_number', None)\r\n    if pager_number is None:\r\n        return 'header'\r\n    else:\r\n        return pager_number\r\n\r\n```\r\n```\r\nclass TableLoadUnloadEdit(Table):\r\n    \"\"\"\r\n        Dit is een aangepaste tabel voor het tonen en bewerken van load en unload module\r\n        In de meta class een attributes field voor het stylesheet class in Table\r\n        http://django-tables2.readthedocs.io/en/latest/pages/column-attributes.html\r\n    \"\"\"\r\n    pager_number = Column(attrs={\r\n        'td': {\r\n            'data-toggle': 'modal',\r\n            'onclick': 'setRefreshVar(1)',\r\n            'data-target': data_pager_number\r\n        }\r\n    })\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/589", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/589/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/589/events", "html_url": "https://github.com/jieter/django-tables2/issues/589", "id": 336886865, "node_id": "MDU6SXNzdWUzMzY4ODY4NjU=", "number": 589, "title": "Django-filter initial value only present when ?page=1 is appended to url? ", "user": {"login": "vincentwhales", "id": 28204629, "node_id": "MDQ6VXNlcjI4MjA0NjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28204629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentwhales", "html_url": "https://github.com/vincentwhales", "followers_url": "https://api.github.com/users/vincentwhales/followers", "following_url": "https://api.github.com/users/vincentwhales/following{/other_user}", "gists_url": "https://api.github.com/users/vincentwhales/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentwhales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentwhales/subscriptions", "organizations_url": "https://api.github.com/users/vincentwhales/orgs", "repos_url": "https://api.github.com/users/vincentwhales/repos", "events_url": "https://api.github.com/users/vincentwhales/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentwhales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-29T07:05:41Z", "updated_at": "2018-07-01T21:08:58Z", "closed_at": "2018-07-01T21:08:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the a view, `AccountList`, which is trying to render a django_table2 table. The view's source code:\r\n\r\n    class AccountList(SingleTableMixin, FilterView):\r\n        model = Account\r\n        table_class = AccountTable\r\n        template_name = 'accounts/account_list.html'\r\n        context_table_name = 'object_list'\r\n        ordering = ['vps']\r\n    \r\n        filterset_class = AccountFilter\r\n\r\n\r\nThis view is currently using this filterset (from django_filters): \r\n\r\n\r\n    import django_filters\r\n    from accounts.models import Account\r\n\r\n    class AccountFilter(django_filters.FilterSet):\r\n        class Meta:\r\n            model = Account\r\n            fields = ['is_suspended', 'is_abandoned']\r\n    \r\n        is_suspended = django_filters.BooleanFilter(name='is_suspended', initial='False')\r\n        is_abandoned = django_filters.BooleanFilter(name='is_abandoned', initial='False')\r\n    \r\n        def __init__(self, data=None, *args, **kwargs):\r\n            # if filterset is bound, use initial values as defaults\r\n            if data is not None:\r\n                # get a mutable copy of the QueryDict\r\n                data = data.copy()\r\n    \r\n                for name, f in self.base_filters.items():\r\n                    initial = f.extra.get('initial')\r\n    \r\n                    # filter param is either missing or empty, use initial as default\r\n                    if not data.get(name) and initial:\r\n                        data[name] = initial\r\n    \r\n            super().__init__(data, *args, **kwargs)\r\n\r\n\r\nUsing this template:\r\n\r\n\r\n    {% if filter %}\r\n        <form action=\"\" method=\"get\" class=\"form form-inline\">\r\n            {{ filter.form.as_p }}\r\n            <input type=\"submit\" />\r\n        </form>\r\n    {% endif %}\r\n    \r\n    {% render_table object_list %}\r\n    \r\n    {% endblock %}\r\n\r\n\r\nThis is my from my urls.py\r\n\r\n    path('', login_required(AccountList.as_view())),\r\n\r\nWhen I visit my page, `127.0.0.1:8000`, I see that the filters are not set:\r\n[![enter image description here][1]][1]\r\n\r\nBut then if i do `127.0.0.1:8000?page=1`, I see the filters are initialized properly:\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/nGmAz.png\r\n  [2]: https://i.stack.imgur.com/PDXBB.png\r\n\r\n\r\n## What is causing my filters to not have default value when I don't have page=1 appended to my url? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/588", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/588/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/588/events", "html_url": "https://github.com/jieter/django-tables2/issues/588", "id": 336010349, "node_id": "MDU6SXNzdWUzMzYwMTAzNDk=", "number": 588, "title": "Keeping filter form data or general data on the page when sorting by column", "user": {"login": "pedram7sd", "id": 5091724, "node_id": "MDQ6VXNlcjUwOTE3MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5091724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedram7sd", "html_url": "https://github.com/pedram7sd", "followers_url": "https://api.github.com/users/pedram7sd/followers", "following_url": "https://api.github.com/users/pedram7sd/following{/other_user}", "gists_url": "https://api.github.com/users/pedram7sd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedram7sd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedram7sd/subscriptions", "organizations_url": "https://api.github.com/users/pedram7sd/orgs", "repos_url": "https://api.github.com/users/pedram7sd/repos", "events_url": "https://api.github.com/users/pedram7sd/events{/privacy}", "received_events_url": "https://api.github.com/users/pedram7sd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-26T22:14:22Z", "updated_at": "2018-06-27T16:13:49Z", "closed_at": "2018-06-27T15:01:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the case that we have an orderable table\r\nand we also have a crispy-form which is our filter form and has the data\r\nonce we apply the filter and the page posts the data and loads the filtered data onto the table\r\nthen clicking on a column header to sort, resets the post data and the filters and sends a get request hence the filter options get lost.\r\nHow can we keep track of the data on the page especially crispy-form data so on column sort, the page does not reset ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/586", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/586/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/586/events", "html_url": "https://github.com/jieter/django-tables2/issues/586", "id": 334177501, "node_id": "MDU6SXNzdWUzMzQxNzc1MDE=", "number": 586, "title": "Highlight row based on conditional query set.", "user": {"login": "katsika", "id": 796021, "node_id": "MDQ6VXNlcjc5NjAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/796021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katsika", "html_url": "https://github.com/katsika", "followers_url": "https://api.github.com/users/katsika/followers", "following_url": "https://api.github.com/users/katsika/following{/other_user}", "gists_url": "https://api.github.com/users/katsika/gists{/gist_id}", "starred_url": "https://api.github.com/users/katsika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katsika/subscriptions", "organizations_url": "https://api.github.com/users/katsika/orgs", "repos_url": "https://api.github.com/users/katsika/repos", "events_url": "https://api.github.com/users/katsika/events{/privacy}", "received_events_url": "https://api.github.com/users/katsika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-20T17:22:38Z", "updated_at": "2018-06-20T20:28:00Z", "closed_at": "2018-06-20T20:28:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nhope I could get some help with rendering conditional table.\r\n\r\nSay I have such models (pseudo code):\r\n\r\n```\r\nBook\r\n  name = CharField\r\n\r\nUsersLibraries\r\n  user = PK\r\n  book = FK(Book)\r\n```\r\n\r\nI also have table `BooksTable()` which prints all Books. Is it possible to set `attr` for `tr` tag (say `class=\"owned\"`) for Books that match query like `UsersLibraries.objects.filter(user=current <and> has_book)`? Basically I want to highlight Books owned by user.\r\n\r\nAlso, how would I go about adding additional column which would count how many times given Book is recorded in UsersLibraries?\r\n\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/585", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/585/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/585/events", "html_url": "https://github.com/jieter/django-tables2/issues/585", "id": 333876725, "node_id": "MDU6SXNzdWUzMzM4NzY3MjU=", "number": 585, "title": "Possibility of using multiple rows for a record ", "user": {"login": "vincentwhales", "id": 28204629, "node_id": "MDQ6VXNlcjI4MjA0NjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28204629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentwhales", "html_url": "https://github.com/vincentwhales", "followers_url": "https://api.github.com/users/vincentwhales/followers", "following_url": "https://api.github.com/users/vincentwhales/following{/other_user}", "gists_url": "https://api.github.com/users/vincentwhales/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentwhales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentwhales/subscriptions", "organizations_url": "https://api.github.com/users/vincentwhales/orgs", "repos_url": "https://api.github.com/users/vincentwhales/repos", "events_url": "https://api.github.com/users/vincentwhales/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentwhales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-19T23:44:08Z", "updated_at": "2018-06-20T20:29:12Z", "closed_at": "2018-06-20T20:29:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As our tables gets more and more data, it becomes increasingly difficult to manage the real estate available for django-tables. \r\n\r\nIs it possible to use multiple rows for a record? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/584", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/584/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/584/events", "html_url": "https://github.com/jieter/django-tables2/issues/584", "id": 331137186, "node_id": "MDU6SXNzdWUzMzExMzcxODY=", "number": 584, "title": "Start using black for formatting?", "user": {"login": "jieter", "id": 1470389, "node_id": "MDQ6VXNlcjE0NzAzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1470389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieter", "html_url": "https://github.com/jieter", "followers_url": "https://api.github.com/users/jieter/followers", "following_url": "https://api.github.com/users/jieter/following{/other_user}", "gists_url": "https://api.github.com/users/jieter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieter/subscriptions", "organizations_url": "https://api.github.com/users/jieter/orgs", "repos_url": "https://api.github.com/users/jieter/repos", "events_url": "https://api.github.com/users/jieter/events{/privacy}", "received_events_url": "https://api.github.com/users/jieter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-11T10:46:13Z", "updated_at": "2018-06-27T15:00:55Z", "closed_at": "2018-06-27T15:00:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/583", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/583/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/583/events", "html_url": "https://github.com/jieter/django-tables2/issues/583", "id": 329339576, "node_id": "MDU6SXNzdWUzMjkzMzk1NzY=", "number": 583, "title": "New FAQ entry: How to create the search form?", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-05T07:50:42Z", "updated_at": "2018-06-11T05:49:40Z", "closed_at": "2018-06-11T05:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think in many cases you have some kind of search form. The search form gets used to create the interable, which gets used in django-table2.\r\n\r\nIt would be very kind, if you could provide some help for new comers how to create the search form.\r\n\r\nIs there some django app which helps you to create search forms?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/582", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/582/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/582/events", "html_url": "https://github.com/jieter/django-tables2/issues/582", "id": 328786339, "node_id": "MDU6SXNzdWUzMjg3ODYzMzk=", "number": 582, "title": "TypeError: [TABLE_OBJECT] not iterable", "user": {"login": "NeonDodongo", "id": 22924221, "node_id": "MDQ6VXNlcjIyOTI0MjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/22924221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeonDodongo", "html_url": "https://github.com/NeonDodongo", "followers_url": "https://api.github.com/users/NeonDodongo/followers", "following_url": "https://api.github.com/users/NeonDodongo/following{/other_user}", "gists_url": "https://api.github.com/users/NeonDodongo/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeonDodongo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeonDodongo/subscriptions", "organizations_url": "https://api.github.com/users/NeonDodongo/orgs", "repos_url": "https://api.github.com/users/NeonDodongo/repos", "events_url": "https://api.github.com/users/NeonDodongo/events{/privacy}", "received_events_url": "https://api.github.com/users/NeonDodongo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-02T23:48:01Z", "updated_at": "2018-06-03T06:15:00Z", "closed_at": "2018-06-03T06:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to render a table that is being passed a QuerySet by way of a directory search on an html page, but when the results page loads it gives an error saying that the table object is not iterable.\r\n\r\n\r\n**views.py**\r\n```python\r\nif search_field == 'practices':\r\n                or_lookup = (Q(name__icontains=query) |\r\n                             Q(address__icontains=query) |\r\n                             Q(city__icontains=query) |\r\n                             Q(state__icontains=query) |\r\n                             Q(zip_code__icontains=query) |\r\n                             Q(phone_number__icontains=query)|\r\n                             Q(website__icontains=query)\r\n                             )\r\n                #The error is here. To get the POST request to load,\r\n                #in the return statement, change table_qs to qs \r\n                #that will load the table in the standard, full field example\r\n                \r\n                qs = Practice.objects.filter(or_lookup).distinct()\r\n                table_qs = PracticeTable(qs)\r\n                return render(request, 'directory_results.html', {'qs':table_qs})\r\n```\r\n\r\n**directory_results.html**\r\n```html\r\n{% extends 'base.html' %}\r\n{% load render_table from django_tables2 %}\r\n{% block body %}\r\n<div class=\"jumbotron\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n        <h1>{{qs|length}} Search Result(s)</h1>\r\n        <hr/>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container bg-grey\">\r\n    {% render_table qs %}\r\n</div>\r\n```\r\n\r\n**tables.py**\r\n```python\r\nclass PracticeTable(tables.Table):\r\n    class Meta:\r\n        model = Practice\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/580", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/580/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/580/events", "html_url": "https://github.com/jieter/django-tables2/issues/580", "id": 326724121, "node_id": "MDU6SXNzdWUzMjY3MjQxMjE=", "number": 580, "title": "Add correct language attribute to all .po files.", "user": {"login": "jieter", "id": 1470389, "node_id": "MDQ6VXNlcjE0NzAzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1470389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieter", "html_url": "https://github.com/jieter", "followers_url": "https://api.github.com/users/jieter/followers", "following_url": "https://api.github.com/users/jieter/following{/other_user}", "gists_url": "https://api.github.com/users/jieter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieter/subscriptions", "organizations_url": "https://api.github.com/users/jieter/orgs", "repos_url": "https://api.github.com/users/jieter/repos", "events_url": "https://api.github.com/users/jieter/events{/privacy}", "received_events_url": "https://api.github.com/users/jieter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-26T09:22:18Z", "updated_at": "2018-05-29T15:07:21Z", "closed_at": "2018-05-29T15:07:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/579", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/579/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/579/events", "html_url": "https://github.com/jieter/django-tables2/issues/579", "id": 326012731, "node_id": "MDU6SXNzdWUzMjYwMTI3MzE=", "number": 579, "title": "Empty text cannot be translated? ", "user": {"login": "vincentwhales", "id": 28204629, "node_id": "MDQ6VXNlcjI4MjA0NjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28204629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentwhales", "html_url": "https://github.com/vincentwhales", "followers_url": "https://api.github.com/users/vincentwhales/followers", "following_url": "https://api.github.com/users/vincentwhales/following{/other_user}", "gists_url": "https://api.github.com/users/vincentwhales/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentwhales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentwhales/subscriptions", "organizations_url": "https://api.github.com/users/vincentwhales/orgs", "repos_url": "https://api.github.com/users/vincentwhales/repos", "events_url": "https://api.github.com/users/vincentwhales/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentwhales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-24T08:20:39Z", "updated_at": "2018-05-24T10:23:38Z", "closed_at": "2018-05-24T10:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following:\r\n\r\n```\r\nclass TaskTable(tables.Table):\r\n...\r\n    class Meta:\r\n        model = Task\r\n        empty_text = _('There are no tasks matching your criteria.')\r\n```\r\n\r\nI am getting `TypeError: TaskTable.empty_text = 'There are no tasks matching your criteria.' (type __proxy__), but type must be one of (str)` Any ideas? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/578", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/578/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/578/events", "html_url": "https://github.com/jieter/django-tables2/issues/578", "id": 324601644, "node_id": "MDU6SXNzdWUzMjQ2MDE2NDQ=", "number": 578, "title": "Table with data obtained from a foreignkey in reverse", "user": {"login": "mezitax", "id": 1774655, "node_id": "MDQ6VXNlcjE3NzQ2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1774655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mezitax", "html_url": "https://github.com/mezitax", "followers_url": "https://api.github.com/users/mezitax/followers", "following_url": "https://api.github.com/users/mezitax/following{/other_user}", "gists_url": "https://api.github.com/users/mezitax/gists{/gist_id}", "starred_url": "https://api.github.com/users/mezitax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mezitax/subscriptions", "organizations_url": "https://api.github.com/users/mezitax/orgs", "repos_url": "https://api.github.com/users/mezitax/repos", "events_url": "https://api.github.com/users/mezitax/events{/privacy}", "received_events_url": "https://api.github.com/users/mezitax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-19T05:02:01Z", "updated_at": "2018-05-22T19:51:32Z", "closed_at": "2018-05-22T19:51:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, I have been looking for a solution to my problem for some days without an answer\r\nI am trying to make a two-dimensional table with \"django-tables 2\" with data obtained from the same model.\r\nThe idea is to list the students in rows, the data in columns and the status in their respective cells.\r\n\r\n\r\n```\r\nclass DailyAttendanceStudent(models.Model):\r\n        ATTENDANCE_CHOICES = (\r\n            (None,''),\r\n            (True,'Presente'),\r\n            (False, 'Ausente')\r\n            )\r\n        date = models.DateField(default=datetime.datetime.now)\r\n        status = models.NullBooleanField(choices=ATTENDANCE_CHOICES)\r\n        student = models.ForeignKey('perfiles.Student')\r\n```\r\n\r\ni try to make this:\r\n![i-like-this](https://user-images.githubusercontent.com/1774655/40265061-cff02428-5afe-11e8-82d7-f964d9e06cc6.jpg)\r\n\r\nfor each additional date, add a new column to the table on its states", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/577", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/577/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/577/events", "html_url": "https://github.com/jieter/django-tables2/issues/577", "id": 324589169, "node_id": "MDU6SXNzdWUzMjQ1ODkxNjk=", "number": 577, "title": "Bootstrap4 template can't be rendered. ", "user": {"login": "vincentwhales", "id": 28204629, "node_id": "MDQ6VXNlcjI4MjA0NjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/28204629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentwhales", "html_url": "https://github.com/vincentwhales", "followers_url": "https://api.github.com/users/vincentwhales/followers", "following_url": "https://api.github.com/users/vincentwhales/following{/other_user}", "gists_url": "https://api.github.com/users/vincentwhales/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentwhales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentwhales/subscriptions", "organizations_url": "https://api.github.com/users/vincentwhales/orgs", "repos_url": "https://api.github.com/users/vincentwhales/repos", "events_url": "https://api.github.com/users/vincentwhales/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentwhales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-19T01:08:56Z", "updated_at": "2018-05-19T06:48:02Z", "closed_at": "2018-05-19T06:48:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. set `DJANGO_TABLES2_TEMPLATE='django_tables2/bootstrap4.html'`\r\n1. pasted `django_tables2/bootstrap4.html` from repo to my template directory. \r\n\r\nAnd this is the error I am getting:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 35, in inner\r\n    response = get_response(request)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/core/handlers/base.py\", line 158, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/core/handlers/base.py\", line 156, in _get_response\r\n    response = response.render()\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/response.py\", line 106, in render\r\n    self.content = self.rendered_content\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/response.py\", line 83, in rendered_content\r\n    content = template.render(context, self._request)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/backends/django.py\", line 61, in render\r\n    return self.template.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 175, in render\r\n    return self._render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 167, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 943, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 910, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loader_tags.py\", line 155, in render\r\n    return compiled_parent._render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 167, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 943, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 910, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loader_tags.py\", line 67, in render\r\n    result = block.nodelist.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 943, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 910, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django_tables2/templatetags/django_tables2.py\", line 155, in render\r\n    template = get_template(template_name)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loader.py\", line 15, in get_template\r\n    return engine.get_template(template_name)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/backends/django.py\", line 34, in get_template\r\n    return Template(self.engine.get_template(template_name), self)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/engine.py\", line 144, in get_template\r\n    template, origin = self.find_template(template_name)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/engine.py\", line 126, in find_template\r\n    template = loader.get_template(name, skip=skip)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loaders/base.py\", line 30, in get_template\r\n    contents, origin, origin.template_name, self.engine,\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 160, in __init__\r\n    self.nodelist = self.compile_nodelist()\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 198, in compile_nodelist\r\n    return parser.parse()\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 483, in parse\r\n    raise self.error(token, e)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 481, in parse\r\n    compiled_result = compile_func(self, token)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loader_tags.py\", line 233, in do_block\r\n    nodelist = parser.parse(('endblock',))\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 483, in parse\r\n    raise self.error(token, e)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 481, in parse\r\n    compiled_result = compile_func(self, token)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/loader_tags.py\", line 233, in do_block\r\n    nodelist = parser.parse(('endblock',))\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 477, in parse\r\n    self.invalid_block_tag(token, command, parse_until)\r\n  File \"/Users/vng/.virtualenvs/prometheus/lib/python3.6/site-packages/django/template/base.py\", line 533, in invalid_block_tag\r\n    get_text_list([\"'%s'\" % p for p in parse_until], 'or'),\r\ndjango.template.exceptions.TemplateSyntaxError: Invalid block tag on line 6: 'render_attrs', expected 'endblock'. Did you forget to register or load this tag?\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/575", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/575/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/575/events", "html_url": "https://github.com/jieter/django-tables2/issues/575", "id": 323928602, "node_id": "MDU6SXNzdWUzMjM5Mjg2MDI=", "number": 575, "title": "Can I use `django-tables2` to display a model's detail view?", "user": {"login": "waketzheng", "id": 35413830, "node_id": "MDQ6VXNlcjM1NDEzODMw", "avatar_url": "https://avatars1.githubusercontent.com/u/35413830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waketzheng", "html_url": "https://github.com/waketzheng", "followers_url": "https://api.github.com/users/waketzheng/followers", "following_url": "https://api.github.com/users/waketzheng/following{/other_user}", "gists_url": "https://api.github.com/users/waketzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/waketzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waketzheng/subscriptions", "organizations_url": "https://api.github.com/users/waketzheng/orgs", "repos_url": "https://api.github.com/users/waketzheng/repos", "events_url": "https://api.github.com/users/waketzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/waketzheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T08:51:15Z", "updated_at": "2018-05-19T07:52:25Z", "closed_at": "2018-05-19T07:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code is similar as follow:\r\n- models.py\r\n```py\r\nclass Person(models.Model):\r\n    name = models.CharField('Full Name', max_length=10)\r\n    phone = models.CharField('Tellphone', max_length=20)\r\n```\r\n- views.py\r\n```py\r\nclass PersonDetailView(DetailView):\r\n    model = Person\r\n```\r\n- person_detail.html\r\n```html\r\n<p>{{ object.name.verbose_name }}: {{ object.name }}</p>\r\n<p>{{ object.phone.verbose_name }}: {{ objects.phone }}</p>\r\n```\r\nOf course, the template not work. And I write some templatetags to fix it.\r\n Is there any way to use `django-tables2` to get the result?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/574", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/574/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/574/events", "html_url": "https://github.com/jieter/django-tables2/issues/574", "id": 323409442, "node_id": "MDU6SXNzdWUzMjM0MDk0NDI=", "number": 574, "title": "verbose_name  don't update with tables without model", "user": {"login": "ilizaran", "id": 6630049, "node_id": "MDQ6VXNlcjY2MzAwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6630049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilizaran", "html_url": "https://github.com/ilizaran", "followers_url": "https://api.github.com/users/ilizaran/followers", "following_url": "https://api.github.com/users/ilizaran/following{/other_user}", "gists_url": "https://api.github.com/users/ilizaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilizaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilizaran/subscriptions", "organizations_url": "https://api.github.com/users/ilizaran/orgs", "repos_url": "https://api.github.com/users/ilizaran/repos", "events_url": "https://api.github.com/users/ilizaran/events{/privacy}", "received_events_url": "https://api.github.com/users/ilizaran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-15T22:45:04Z", "updated_at": "2018-05-27T14:37:00Z", "closed_at": "2018-05-26T06:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before django-tables2==1.21.2\r\n\r\nit was possible:\r\n\r\n```python\r\nclass MyTable(tables.Table):\r\n    mycolumn = tables.Column(orderable=False)\r\n\r\n    def __init__(self, monday, *args, **kwargs):\r\n        super(MyTable, self).__init__(*args, **kwargs)\r\n        self.base_columns['mycolumn'].verbose_name='Monday (%s)' % monday.strftime(\"%d-%m-%Y\")\r\n```\r\nNow the header show 'mycolumn', don't take the new value.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/573", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/573/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/573/events", "html_url": "https://github.com/jieter/django-tables2/issues/573", "id": 322617414, "node_id": "MDU6SXNzdWUzMjI2MTc0MTQ=", "number": 573, "title": "Slow perfs of per_page option", "user": {"login": "ZuluPro", "id": 2029180, "node_id": "MDQ6VXNlcjIwMjkxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2029180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZuluPro", "html_url": "https://github.com/ZuluPro", "followers_url": "https://api.github.com/users/ZuluPro/followers", "following_url": "https://api.github.com/users/ZuluPro/following{/other_user}", "gists_url": "https://api.github.com/users/ZuluPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZuluPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZuluPro/subscriptions", "organizations_url": "https://api.github.com/users/ZuluPro/orgs", "repos_url": "https://api.github.com/users/ZuluPro/repos", "events_url": "https://api.github.com/users/ZuluPro/events{/privacy}", "received_events_url": "https://api.github.com/users/ZuluPro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-13T18:43:44Z", "updated_at": "2018-06-25T09:55:19Z", "closed_at": "2018-06-20T20:29:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I use the option `table_pagination` on my View, the page loading is very slow ~12sec\r\nI time it with Dj-Debug-Toolbar and the issue was really CPU time (80%), not SQL.\r\n```\r\nclass MyListView(tables.SingleTableMixin, ListView):\r\n    model = models.MyModel\r\n    table_pagination = {\r\n        'per_page': 500,\r\n    }\r\n```\r\n\r\nI try with `paginate_by` (default Django attribute) and it reduce to ~2sec.\r\n\r\n```\r\nclass MyListView(tables.SingleTableMixin, ListView):\r\n    model = models.MyModel\r\n    paginate_by = 500\r\n```\r\n\r\nSo I suggest (and I'll do if I have time) to use Django pagination system by default.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/572", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/572/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/572/events", "html_url": "https://github.com/jieter/django-tables2/issues/572", "id": 322400634, "node_id": "MDU6SXNzdWUzMjI0MDA2MzQ=", "number": 572, "title": "Table Prefix gets lost when using MultiTableMixin", "user": {"login": "ETinLV", "id": 13023250, "node_id": "MDQ6VXNlcjEzMDIzMjUw", "avatar_url": "https://avatars1.githubusercontent.com/u/13023250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ETinLV", "html_url": "https://github.com/ETinLV", "followers_url": "https://api.github.com/users/ETinLV/followers", "following_url": "https://api.github.com/users/ETinLV/following{/other_user}", "gists_url": "https://api.github.com/users/ETinLV/gists{/gist_id}", "starred_url": "https://api.github.com/users/ETinLV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ETinLV/subscriptions", "organizations_url": "https://api.github.com/users/ETinLV/orgs", "repos_url": "https://api.github.com/users/ETinLV/repos", "events_url": "https://api.github.com/users/ETinLV/events{/privacy}", "received_events_url": "https://api.github.com/users/ETinLV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-11T18:58:32Z", "updated_at": "2018-05-22T19:43:53Z", "closed_at": "2018-05-22T19:43:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a view that needs multiple tables, and they need to be rendered differently. When I get the tables, I pass the prefix for each type. But `get_context_data` overwrites the prefix [(line 208 in django_tables2/views.py)](https://github.com/jieter/django-tables2/blob/d1b6a616c5b88d9f6b452cccadc65b57cf50970e/django_tables2/views.py#L208), so they always come back as `table-x`  Am I missing something, or could line 208 be changed to `table.prefix = table.prefix or self.table_prefix.format(next(table_counter))`\r\n\r\n\r\nExample Code:\r\n```\r\nclass TableView(MultiTableMixin, generic.TemplateView):\r\n\r\n    def get_tables(self):\r\n        self.tables = [FooTable(queryset, name=name, user_app=self.user_app, prefix='foo-{}-'), \r\n                            BarTable(queryset, name=name, user_app=self.user_app, prefix='bar-{}-')]\r\n        return super(TableView, self).get_tables()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/570", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/570/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/570/events", "html_url": "https://github.com/jieter/django-tables2/issues/570", "id": 319636801, "node_id": "MDU6SXNzdWUzMTk2MzY4MDE=", "number": 570, "title": "Support passing Accessor to Linkcolumn text argument too", "user": {"login": "jieter", "id": 1470389, "node_id": "MDQ6VXNlcjE0NzAzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1470389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieter", "html_url": "https://github.com/jieter", "followers_url": "https://api.github.com/users/jieter/followers", "following_url": "https://api.github.com/users/jieter/following{/other_user}", "gists_url": "https://api.github.com/users/jieter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieter/subscriptions", "organizations_url": "https://api.github.com/users/jieter/orgs", "repos_url": "https://api.github.com/users/jieter/repos", "events_url": "https://api.github.com/users/jieter/events{/privacy}", "received_events_url": "https://api.github.com/users/jieter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 839217173, "node_id": "MDU6TGFiZWw4MzkyMTcxNzM=", "url": "https://api.github.com/repos/jieter/django-tables2/labels/Help%20wanted", "name": "Help wanted", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-02T17:06:29Z", "updated_at": "2018-07-16T08:45:27Z", "closed_at": "2018-07-16T08:45:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Should be relatively easy to fix, feel free to contribute!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/569", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/569/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/569/events", "html_url": "https://github.com/jieter/django-tables2/issues/569", "id": 315581037, "node_id": "MDU6SXNzdWUzMTU1ODEwMzc=", "number": 569, "title": "Pagination is not working on django_tables2", "user": {"login": "mahmudkabir", "id": 378412, "node_id": "MDQ6VXNlcjM3ODQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmudkabir", "html_url": "https://github.com/mahmudkabir", "followers_url": "https://api.github.com/users/mahmudkabir/followers", "following_url": "https://api.github.com/users/mahmudkabir/following{/other_user}", "gists_url": "https://api.github.com/users/mahmudkabir/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmudkabir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmudkabir/subscriptions", "organizations_url": "https://api.github.com/users/mahmudkabir/orgs", "repos_url": "https://api.github.com/users/mahmudkabir/repos", "events_url": "https://api.github.com/users/mahmudkabir/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmudkabir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T17:53:33Z", "updated_at": "2018-04-20T08:19:43Z", "closed_at": "2018-04-20T08:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code: \r\n\r\n```python\r\n    table = QuestionTrackTable(QuestionTrack.objects.filter(qt_weight__gt=0), prefix='1-')\r\n    RequestConfig(request, paginate={'per_page': 10}).configure(table)\r\n\r\n    export_format = request.GET.get('_export', None)\r\n    if TableExport.is_valid_format(export_format):\r\n        exporter = TableExport(export_format, qt_table)\r\n        return exporter.response('table.{}'.format(export_format))\r\n    return render(request, 'cmit/report_result.html', {'table': table})\r\n````\r\n\r\nProblem is that the output does not show the pagination rather it shows a pager only. \r\n\r\nhere is the screenshot:  https://i.stack.imgur.com/vYCdt.png", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/565", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/565/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/565/events", "html_url": "https://github.com/jieter/django-tables2/issues/565", "id": 313745229, "node_id": "MDU6SXNzdWUzMTM3NDUyMjk=", "number": 565, "title": "redo screenshots with consistent size ", "user": {"login": "jieter", "id": 1470389, "node_id": "MDQ6VXNlcjE0NzAzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1470389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieter", "html_url": "https://github.com/jieter", "followers_url": "https://api.github.com/users/jieter/followers", "following_url": "https://api.github.com/users/jieter/following{/other_user}", "gists_url": "https://api.github.com/users/jieter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieter/subscriptions", "organizations_url": "https://api.github.com/users/jieter/orgs", "repos_url": "https://api.github.com/users/jieter/repos", "events_url": "https://api.github.com/users/jieter/events{/privacy}", "received_events_url": "https://api.github.com/users/jieter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-12T14:12:39Z", "updated_at": "2018-04-12T16:04:45Z", "closed_at": "2018-04-12T16:04:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": " - remove ugly borders\r\n - consistent size\r\n - update sha's in rawgit links in README.rst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jieter/django-tables2/issues/563", "repository_url": "https://api.github.com/repos/jieter/django-tables2", "labels_url": "https://api.github.com/repos/jieter/django-tables2/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/jieter/django-tables2/issues/563/comments", "events_url": "https://api.github.com/repos/jieter/django-tables2/issues/563/events", "html_url": "https://github.com/jieter/django-tables2/issues/563", "id": 313338869, "node_id": "MDU6SXNzdWUzMTMzMzg4Njk=", "number": 563, "title": "Only \"Next\" is translate", "user": {"login": "Michelk12", "id": 34551286, "node_id": "MDQ6VXNlcjM0NTUxMjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/34551286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michelk12", "html_url": "https://github.com/Michelk12", "followers_url": "https://api.github.com/users/Michelk12/followers", "following_url": "https://api.github.com/users/Michelk12/following{/other_user}", "gists_url": "https://api.github.com/users/Michelk12/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michelk12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michelk12/subscriptions", "organizations_url": "https://api.github.com/users/Michelk12/orgs", "repos_url": "https://api.github.com/users/Michelk12/repos", "events_url": "https://api.github.com/users/Michelk12/events{/privacy}", "received_events_url": "https://api.github.com/users/Michelk12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-11T14:03:56Z", "updated_at": "2018-04-12T08:33:55Z", "closed_at": "2018-04-12T08:33:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error in django.mo ?\r\n\r\n`{% trans 'next' %}` **OK**\r\n\r\n`{% trans 'previous' %}` **KO**\r\n", "performed_via_github_app": null, "score": 1.0}]}