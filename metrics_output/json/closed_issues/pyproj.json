{"total_count": 343, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pyproj4/pyproj/issues/689", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/689/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/689/events", "html_url": "https://github.com/pyproj4/pyproj/issues/689", "id": 682889748, "node_id": "MDU6SXNzdWU2ODI4ODk3NDg=", "number": 689, "title": "Minimum PROJ version for pyproj 3 is now 7.2", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-20T16:37:04Z", "updated_at": "2020-08-21T01:11:15Z", "closed_at": "2020-08-21T01:11:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to #530 \r\n\r\nDue to the need for wheels to set the CA Bundle path in order for PROJ_NETWORK to work properly, the minimum PROJ version for pyproj will be 7.2 for version 3. Ref: https://github.com/OSGeo/PROJ/issues/2320\r\n\r\nWith this pin move, will also be able to use:\r\n- https://github.com/OSGeo/PROJ/pull/2274\r\n- https://github.com/OSGeo/PROJ/pull/2331\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/688", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/688/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/688/events", "html_url": "https://github.com/pyproj4/pyproj/issues/688", "id": 677790722, "node_id": "MDU6SXNzdWU2Nzc3OTA3MjI=", "number": 688, "title": "Transformation with incorrect z_in units", "user": {"login": "jmilloy", "id": 1051972, "node_id": "MDQ6VXNlcjEwNTE5NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1051972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmilloy", "html_url": "https://github.com/jmilloy", "followers_url": "https://api.github.com/users/jmilloy/followers", "following_url": "https://api.github.com/users/jmilloy/following{/other_user}", "gists_url": "https://api.github.com/users/jmilloy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmilloy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmilloy/subscriptions", "organizations_url": "https://api.github.com/users/jmilloy/orgs", "repos_url": "https://api.github.com/users/jmilloy/repos", "events_url": "https://api.github.com/users/jmilloy/events{/privacy}", "received_events_url": "https://api.github.com/users/jmilloy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-12T15:37:45Z", "updated_at": "2020-08-12T20:11:00Z", "closed_at": "2020-08-12T20:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample\r\n\r\n```\r\n>>> import pyproj\r\n>>> a = pyproj.Proj('+proj=merc +vunits=cm')\r\n>>> b = pyproj.Proj('+proj=longlat +datum=WGS84 +vunits=cm')\r\n>>> transformer = pyproj.Transformer.from_proj(a, b, always_xy=True)\r\n>>> transformer.transform(0, 0, 10)\r\n(0.0, 0.0, 1000.0)\r\n```\r\n\r\n#### Problem description\r\n\r\nThe vertical height units are both centimeters, but they are incorrectly converted by the transformer.\r\n\r\nNote that the transformer operation has the incorrect `z_in` units:\r\n\r\n```\r\n>>> transformer.operations[1]\r\n<Coordinate Operation: Other Coordinate Operation>\r\nName: Transformation from unknown to unknown + Transformation from unknown to unknown (ballpark vertical transformation, without ellipsoid height to vertical height correction)\r\nMethod: PROJ-based operation method (approximate): +proj=unitconvert +z_in=m +z_out=cm\r\nArea of Use:\r\n- name: World\r\n- bounds: (-180.0, -90.0, 180.0, 90.0)\r\n```\r\n\r\nBasically, `+proj=merc +vunits=cm` seems to be misinterpreted by the transformer, even though the height axis seem to be correct:\r\n\r\n```\r\n>>> pyproj.Proj('+proj=merc +vunits=cm')\r\nProj('+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +vunits=cm +no_defs', preserve_units=True)\r\n\r\n>>> pyproj.Proj('+proj=merc +vunits=cm').crs\r\n<Compound CRS: +proj=merc +vunits=cm +type=crs>\r\nName: unknown\r\nAxis Info [cartesian|vertical]:\r\n- E[east]: Easting (metre)\r\n- N[north]: Northing (metre)\r\n- H[up]: Gravity-related height (centimetre)\r\nArea of Use:\r\n- undefined\r\nDatum: World Geodetic System 1984\r\n- Ellipsoid: WGS 84\r\n- Prime Meridian: Greenwich\r\nSub CRS:\r\n- unknown\r\n- unknown\r\n```\r\n\r\n#### Expected Output\r\n\r\n```\r\n(0.0, 0.0, 10.0)\r\n```\r\n\r\n#### Environment Information\r\n\r\n```\r\n$ python -m pyproj -v\r\npyproj info:\r\n    pyproj: 2.6.1.post1\r\n      PROJ: 7.0.1\r\n  data dir: /home/jmilloy/Creare/Pipeline/_podpac38_/lib/python3.8/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.8.3 (default, May 14 2020, 20:11:43)  [GCC 7.5.0]\r\nexecutable: /home/jmilloy/Creare/Pipeline/_podpac38_/bin/python\r\n   machine: Linux-5.4.0-42-generic-x86_64-with-glibc2.27\r\n\r\nPython deps:\r\n       pip: 20.1.1\r\nsetuptools: 49.1.0\r\n    Cython: None\r\n(_podpac38_) jmilloy@o\r\n```\r\n\r\n#### Installation method\r\n - pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/685", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/685/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/685/events", "html_url": "https://github.com/pyproj4/pyproj/issues/685", "id": 660702732, "node_id": "MDU6SXNzdWU2NjA3MDI3MzI=", "number": 685, "title": "geodesiclinestogis.geodesicline2gisfile.ExportGeodesicLineError", "user": {"login": "Kris-wu-glut", "id": 66007137, "node_id": "MDQ6VXNlcjY2MDA3MTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/66007137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kris-wu-glut", "html_url": "https://github.com/Kris-wu-glut", "followers_url": "https://api.github.com/users/Kris-wu-glut/followers", "following_url": "https://api.github.com/users/Kris-wu-glut/following{/other_user}", "gists_url": "https://api.github.com/users/Kris-wu-glut/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kris-wu-glut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kris-wu-glut/subscriptions", "organizations_url": "https://api.github.com/users/Kris-wu-glut/orgs", "repos_url": "https://api.github.com/users/Kris-wu-glut/repos", "events_url": "https://api.github.com/users/Kris-wu-glut/events{/privacy}", "received_events_url": "https://api.github.com/users/Kris-wu-glut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-19T08:51:43Z", "updated_at": "2020-07-19T12:56:42Z", "closed_at": "2020-07-19T12:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "how should i solve this problem\r\n![image](https://user-images.githubusercontent.com/66007137/87871069-1c20f280-c9e0-11ea-8a82-d604760e204a.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/681", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/681/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/681/events", "html_url": "https://github.com/pyproj4/pyproj/issues/681", "id": 651575015, "node_id": "MDU6SXNzdWU2NTE1NzUwMTU=", "number": 681, "title": "Error when importing pyproj", "user": {"login": "MeldaS", "id": 33935846, "node_id": "MDQ6VXNlcjMzOTM1ODQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/33935846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MeldaS", "html_url": "https://github.com/MeldaS", "followers_url": "https://api.github.com/users/MeldaS/followers", "following_url": "https://api.github.com/users/MeldaS/following{/other_user}", "gists_url": "https://api.github.com/users/MeldaS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MeldaS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MeldaS/subscriptions", "organizations_url": "https://api.github.com/users/MeldaS/orgs", "repos_url": "https://api.github.com/users/MeldaS/repos", "events_url": "https://api.github.com/users/MeldaS/events{/privacy}", "received_events_url": "https://api.github.com/users/MeldaS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T14:14:49Z", "updated_at": "2020-07-06T14:47:23Z", "closed_at": "2020-07-06T14:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error when importing pyproj.\r\n\r\n#### Installation method/steps\r\nPyproj was installed in a virtual env along with Rasterio, Geopandas, gdal, and all their dependencies.\r\n\r\nThe environment was working fine until I updated Rasterio and tried to import geopandas or pyrpoj into the notebook. I get the following error:\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\npyproj/_crs.pyx in pyproj._crs.Datum.from_name()\r\n\r\nKeyError: 'URN:OGC:DEF:DATUM:EPSG::6326'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nCRSError                                  Traceback (most recent call last)\r\npyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\npyproj/_crs.pyx in pyproj._crs.Datum.from_name()\r\n\r\nCRSError: Invalid datum name: urn:ogc:def:datum:EPSG::6326\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nCRSError                                  Traceback (most recent call last)\r\n<ipython-input-5-98cb605ea9de> in <module>\r\n----> 1 import pyproj\r\n\r\n~/anaconda3/envs/flood/lib/python3.7/site-packages/pyproj/__init__.py in <module>\r\n     79 )\r\n     80 from pyproj._show_versions import show_versions  # noqa: F401\r\n---> 81 from pyproj.crs import CRS  # noqa: F401\r\n     82 from pyproj.exceptions import DataDirError, ProjError  # noqa: F401\r\n     83 from pyproj.geod import Geod, geodesic_version_str, pj_ellps  # noqa: F401\r\n\r\n~/anaconda3/envs/flood/lib/python3.7/site-packages/pyproj/crs/__init__.py in <module>\r\n     17     is_wkt,\r\n     18 )\r\n---> 19 from pyproj.crs.crs import (  # noqa: F401\r\n     20     CRS,\r\n     21     BoundCRS,\r\n\r\n~/anaconda3/envs/flood/lib/python3.7/site-packages/pyproj/crs/crs.py in <module>\r\n   1026 \r\n   1027 \r\n-> 1028 class ProjectedCRS(CRS):\r\n   1029     \"\"\"\r\n   1030     .. versionadded:: 2.5.0\r\n\r\n~/anaconda3/envs/flood/lib/python3.7/site-packages/pyproj/crs/crs.py in ProjectedCRS()\r\n   1038         name=\"undefined\",\r\n   1039         cartesian_cs=Cartesian2DCS(),\r\n-> 1040         geodetic_crs=GeographicCRS(),\r\n   1041     ):\r\n   1042         \"\"\"\r\n\r\n~/anaconda3/envs/flood/lib/python3.7/site-packages/pyproj/crs/crs.py in __init__(self, name, datum, ellipsoidal_cs)\r\n    977             \"type\": \"GeographicCRS\",\r\n    978             \"name\": name,\r\n--> 979             \"datum\": Datum.from_user_input(datum).to_json_dict(),\r\n    980             \"coordinate_system\": CoordinateSystem.from_user_input(\r\n    981                 ellipsoidal_cs\r\n\r\npyproj/_crs.pyx in pyproj._crs._CRSParts.from_user_input()\r\n\r\npyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\npyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\npyproj/_crs.pyx in pyproj._crs.Datum._from_string()\r\n\r\nCRSError: Invalid datum string: urn:ogc:def:datum:EPSG::6326: (Internal Proj Error: proj_create: SQLite error on SELECT name, ellipsoid_auth_name, ellipsoid_code, prime_meridian_auth_name, prime_meridian_code, area_of_use_auth_name, area_of_use_code, publication_date, deprecated FROM geodetic_datum WHERE auth_name = ? AND code = ?: no such column: publication_date)\r\n```\r\n\r\n\r\n\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install - The version that installed as a dependency when I installed the above packages is v2.5.0\r\n - PROJ version (Execute `proj` command and give version here.):\r\n`Rel. 6.3.0, January 1st, 2020\r\nusage: proj [-bdeEfiIlmorsStTvVwW [args]] [+opt[=arg] ...] [file ...]`\r\n - Python version (`python -c \"import sys; print(sys.version.replace('\\n', ' '))\"`):\r\n`3.7.6 | packaged by conda-forge | (default, Jun  1 2020, 18:33:30)  [Clang 9.0.1 ]`\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`):\r\nmacOS-10.15.4-x86_64-i386-64bit\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/678", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/678/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/678/events", "html_url": "https://github.com/pyproj4/pyproj/issues/678", "id": 650809004, "node_id": "MDU6SXNzdWU2NTA4MDkwMDQ=", "number": 678, "title": "Intermittent core dumping when instantiating multiple CRS objects", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-04T01:49:53Z", "updated_at": "2020-07-05T01:58:11Z", "closed_at": "2020-07-05T01:58:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pyproj, datetime\r\n\r\ntest_codes = pyproj.get_codes(\"EPSG\", pyproj.enums.PJType.PROJECTED_CRS, False)\r\nstart = datetime.datetime.now()\r\nprojs = [pyproj.CRS.from_epsg(code) for code in test_codes]\r\nprint(\r\n    f\"Instantiating {len(projs)} projs took {(datetime.datetime.now() - start).total_seconds()} seconds\"\r\n)\r\n```\r\n#### Problem description\r\nDoes not occur when `PYPROJ_GLOBAL_CONTEXT=ON`\r\n\r\n```bash\r\n$ python global_pyproj.py \r\nInstantiating 4500 projs took 85.85579 seconds\r\n$ python global_pyproj.py \r\nSegmentation fault (core dumped)\r\n$ python global_pyproj.py \r\nSegmentation fault (core dumped)\r\n```\r\n\r\nWith `gdb`:\r\n```\r\n$ gdb python\r\n,,,\r\n(gdb) run global_pyproj.py \r\nStarting program: ~/miniconda/envs/proj71/bin/python global_pyproj.py\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:62\r\n62\t../sysdeps/x86_64/multiarch/strlen-avx2.S: No such file or directory.\r\n```\r\n\r\n#### Environment Information\r\n- Latest pyproj master version\r\n- PROJ 7.1\r\n\r\n#### Installation method\r\n - conda & from source\r\n\r\n\r\nMore info:\r\n- Cannot re-produce with pyproj 2.6.1post1 & proj 7.1, so it is something changed in pyproj I think\r\n- Happened before the global context change\r\n\r\nProbably need to bisect this one ...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/672", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/672/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/672/events", "html_url": "https://github.com/pyproj4/pyproj/issues/672", "id": 646810300, "node_id": "MDU6SXNzdWU2NDY4MTAzMDA=", "number": 672, "title": "Support exporting temporal CRS to CF coordinate", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T01:42:06Z", "updated_at": "2020-07-04T01:35:22Z", "closed_at": "2020-07-04T01:35:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "WKT Reference:\r\n- [WKT representation of temporal CRSs](http://docs.opengeospatial.org/is/18-010r7/18-010r7.html#98)\r\n- [Conversion factor \u00be Temporal quantities](http://docs.opengeospatial.org/is/18-010r7/18-010r7.html#42)\r\n\r\nCF Reference:\r\n- [Time Coordinate](http://cfconventions.org/cf-conventions/cf-conventions.html#time-coordinate)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/670", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/670/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/670/events", "html_url": "https://github.com/pyproj4/pyproj/issues/670", "id": 646595133, "node_id": "MDU6SXNzdWU2NDY1OTUxMzM=", "number": 670, "title": "Add support for identifying engineering/parametric/temporal datums", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-27T03:02:28Z", "updated_at": "2020-06-28T12:37:16Z", "closed_at": "2020-06-28T12:37:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related: https://github.com/OSGeo/PROJ/issues/2273\r\n\r\nCurrently fails as it doesn't think it is a datum.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/668", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/668/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/668/events", "html_url": "https://github.com/pyproj4/pyproj/issues/668", "id": 645713198, "node_id": "MDU6SXNzdWU2NDU3MTMxOTg=", "number": 668, "title": "Problem while building Alpine Docker Image with pyproj module", "user": {"login": "mkdthanga", "id": 36918728, "node_id": "MDQ6VXNlcjM2OTE4NzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/36918728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkdthanga", "html_url": "https://github.com/mkdthanga", "followers_url": "https://api.github.com/users/mkdthanga/followers", "following_url": "https://api.github.com/users/mkdthanga/following{/other_user}", "gists_url": "https://api.github.com/users/mkdthanga/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkdthanga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkdthanga/subscriptions", "organizations_url": "https://api.github.com/users/mkdthanga/orgs", "repos_url": "https://api.github.com/users/mkdthanga/repos", "events_url": "https://api.github.com/users/mkdthanga/events{/privacy}", "received_events_url": "https://api.github.com/users/mkdthanga/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T16:52:43Z", "updated_at": "2020-06-27T03:18:33Z", "closed_at": "2020-06-27T03:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to buid an docker image with pyproj module.\r\n\r\n**Here is my requirements.txt:**\r\n\r\nnumpy==1.18\r\npandas==1.0.3\r\nsqlalchemy==1.3.16\r\npaho-mqtt==1.5.0\r\npsycopg2==2.8.4\r\nrequests==2.23.0\r\npyproj\r\nscipy==1.4.1\r\nstatistics==1.0.3\r\nmatplotlib== 3.2.1\r\n\r\n\r\n**Here is my Dockerfile:**\r\n\r\nFROM alpine:3.9 \r\n\r\nENV LC_ALL=C.UTF-8\r\nENV LANG=C.UTF-8\r\nENV PROJ_DIR=/usr/local\r\n\r\nRUN addgroup -S appuser ; adduser -S appuser -G appuser -h /app ;\\\r\n    chown appuser:appuser /app\r\n\t\r\nWORKDIR /app\r\nCOPY --chown=appuser:appuser / /app\r\n\r\nRUN apk add --update --no-cache python3 libpq uwsgi-python3;\\\r\n    apk add --no-cache python3-dev py3-pip alpine-sdk postgresql-dev postgresql;\\\r\n\tapk add proj proj-dev;\\\r\n\tapk add proj-util;\\\r\n    pip3 install --upgrade pip ;\\\r\n\tpip3 install pyproj;\\\r\n    pip3 install --no-cache-dir -r requirements.txt\r\n\r\nEXPOSE 5432\r\n\r\nCMD [\"python3\", \"/app/subscriber_db.py\"]\r\nCMD [\"python3\", \"/app/resolver.py\"]\r\n\r\n**I get the following error while building the docker image:**\r\n\r\nCollecting pyproj\r\n  Downloading pyproj-2.6.1.post1.tar.gz (545 kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'error'\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python3.6 /usr/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpacqi_fim\r\n       cwd: /tmp/pip-install-3lriikt9/pyproj\r\n  Complete output (34 lines):\r\n  PROJ_DIR is set, using existing proj4 installation..\r\n\r\n.....\r\n.....\r\n.....\r\n  ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python3.6 /usr/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpacqi_fim Check the logs for full command output.\r\n\r\nCan someone help me, please?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/666", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/666/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/666/events", "html_url": "https://github.com/pyproj4/pyproj/issues/666", "id": 644571602, "node_id": "MDU6SXNzdWU2NDQ1NzE2MDI=", "number": 666, "title": "proj_is_equivalent_to_with_ctx instead of proj_is_equivalent_to", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-24T12:21:27Z", "updated_at": "2020-06-25T01:37:08Z", "closed_at": "2020-06-25T01:37:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Difference: Possibly using database to check for name aliases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/664", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/664/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/664/events", "html_url": "https://github.com/pyproj4/pyproj/issues/664", "id": 642674143, "node_id": "MDU6SXNzdWU2NDI2NzQxNDM=", "number": 664, "title": "Crash/assertion failed in proj_crs_get_coordinate_system", "user": {"login": "TimoRoth", "id": 16896306, "node_id": "MDQ6VXNlcjE2ODk2MzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/16896306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimoRoth", "html_url": "https://github.com/TimoRoth", "followers_url": "https://api.github.com/users/TimoRoth/followers", "following_url": "https://api.github.com/users/TimoRoth/following{/other_user}", "gists_url": "https://api.github.com/users/TimoRoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimoRoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimoRoth/subscriptions", "organizations_url": "https://api.github.com/users/TimoRoth/orgs", "repos_url": "https://api.github.com/users/TimoRoth/repos", "events_url": "https://api.github.com/users/TimoRoth/events{/privacy}", "received_events_url": "https://api.github.com/users/TimoRoth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-22T00:42:30Z", "updated_at": "2020-06-27T15:05:48Z", "closed_at": "2020-06-27T15:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\nI have unfortunately not been able to reproduce this in any simple fashion. Even in our full test-suite it only seemingly happens at random, with no pattern as to what causes it.\r\n\r\nTo trigger it in the conda environment given below, run `pytest --pyargs oggm`.\r\n\r\n#### Problem description\r\n\r\nWhen running our tests, in some (a lot of them at the moment) cases we get the following:\r\n\r\n```\r\nAssertion failed: (crs), function proj_crs_get_coordinate_system, file iso19111/c_api.cpp, line 7587.\r\nFatal Python error: Aborted\r\n\r\nCurrent thread 0x0000000106e6fdc0 (most recent call first):\r\n  File \"/usr/local/miniconda/envs/oggm_env/lib/python3.7/site-packages/pyproj/crs/crs.py\", line 924 in __repr__\r\n```\r\n\r\nSee for example https://github.com/OGGM/OGGM-Anaconda/runs/793408792?check_suite_focus=true#step:4:756 for a full log.\r\n\r\nOSX is slightly more verbose about the issue. On Linux, it's just a plain segfault(that shows the exact same backtrace) with no further info, but it's likely the same assertion.\r\n\r\n#### Expected Output\r\n\r\nWell, not a crash.\r\n\r\n#### Environment Information\r\n```\r\n$ python -m pyproj -v\r\npyproj info:\r\n    pyproj: 2.6.1.post1\r\n      PROJ: 7.0.0\r\n  data dir: /home/users/timo/miniconda3/envs/oggm_env/share/proj\r\n\r\nSystem:\r\n    python: 3.7.6 | packaged by conda-forge | (default, Jun  1 2020, 18:57:50)  [GCC 7.5.0]\r\nexecutable: /home/users/timo/miniconda3/envs/oggm_env/bin/python\r\n   machine: Linux-4.19.124-gentoo-x86_64-Intel-R-_Xeon-R-_CPU_E5-2623_v4_@_2.60GHz-with-gentoo-2.6\r\n\r\nPython deps:\r\n       pip: 20.1.1\r\nsetuptools: 47.3.1.post20200616\r\n    Cython: 0.29.20\r\n```\r\n\r\n\r\n#### Installation method\r\nConda via conda-forge.\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list\r\n# packages in environment at /home/users/timo/miniconda3/envs/oggm_env:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                 conda_forge    conda-forge\r\n_openmp_mutex             4.5                      1_llvm    conda-forge\r\naffine                    2.3.0                      py_0    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nblosc                     1.19.0               he1b5a44_0    conda-forge\r\nbokeh                     2.1.0            py37hc8dfbb8_0    conda-forge\r\nboost-cpp                 1.72.0               h8e57a91_0    conda-forge\r\nbrotli                    1.0.7             he1b5a44_1002    conda-forge\r\nbrotlipy                  0.7.0           py37h8f50634_1000    conda-forge\r\nbzip2                     1.0.8                h516909a_2    conda-forge\r\nca-certificates           2020.6.20            hecda079_0    conda-forge\r\ncairo                     1.16.0            hcf35c78_1003    conda-forge\r\ncartopy                   0.18.0           py37h4b180d9_0    conda-forge\r\ncertifi                   2020.6.20        py37hc8dfbb8_0    conda-forge\r\ncffi                      1.14.0           py37hd463f26_0    conda-forge\r\ncfitsio                   3.470                h3eac812_5    conda-forge\r\ncftime                    1.1.3            py37h03ebfcd_0    conda-forge\r\nchardet                   3.0.4           py37hc8dfbb8_1006    conda-forge\r\ncharls                    2.1.0                he1b5a44_2    conda-forge\r\nclick                     7.1.2              pyh9f0ad1d_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncloudpickle               1.4.1                      py_0    conda-forge\r\nconfigobj                 5.0.6                      py_0    conda-forge\r\ncryptography              2.9.2            py37hb09aad4_0    conda-forge\r\ncurl                      7.69.1               h33f0ec9_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ncython                    0.29.20          py37h3340039_0    conda-forge\r\ncytoolz                   0.10.1           py37h516909a_0    conda-forge\r\ndask                      2.19.0                     py_0    conda-forge\r\ndask-core                 2.19.0                     py_0    conda-forge\r\ndbus                      1.13.6               he372182_0    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\ndistributed               2.19.0           py37hc8dfbb8_0    conda-forge\r\nexpat                     2.2.9                he1b5a44_2    conda-forge\r\nfilelock                  3.0.12             pyh9f0ad1d_0    conda-forge\r\nfiona                     1.8.13           py37h0492a4a_1    conda-forge\r\nfontconfig                2.13.1            h86ecdb6_1001    conda-forge\r\nfreetype                  2.10.2               he06d7ca_0    conda-forge\r\nfreexl                    1.0.5             h14c3975_1002    conda-forge\r\nfsspec                    0.7.4                      py_0    conda-forge\r\ngdal                      3.0.4           py37h4b180d9_10    conda-forge\r\ngeopandas                 0.7.0                      py_1    conda-forge\r\ngeos                      3.8.1                he1b5a44_0    conda-forge\r\ngeotiff                   1.6.0                h05acad5_0    conda-forge\r\ngettext                   0.19.8.1          hc5be6a0_1002    conda-forge\r\ngiflib                    5.2.1                h516909a_2    conda-forge\r\nglib                      2.64.3               h6f030ca_0    conda-forge\r\ngst-plugins-base          1.14.5               h0935bb2_2    conda-forge\r\ngstreamer                 1.14.5               h36ae1b5_2    conda-forge\r\nhdf4                      4.2.13            hf30be14_1003    conda-forge\r\nhdf5                      1.10.6          nompi_h3c11f04_100    conda-forge\r\nheapdict                  1.0.1                      py_0    conda-forge\r\nicu                       64.2                 he1b5a44_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\nimagecodecs               2020.5.30        py37hda6ee5b_1    conda-forge\r\nimageio                   2.8.0                      py_0    conda-forge\r\nimportlib-metadata        1.6.1            py37hc8dfbb8_0    conda-forge\r\nimportlib_metadata        1.6.1                         0    conda-forge\r\njinja2                    2.11.2             pyh9f0ad1d_0    conda-forge\r\njoblib                    0.15.1                     py_0    conda-forge\r\njpeg                      9d                   h516909a_0    conda-forge\r\njson-c                    0.13.1            hbfbb72e_1002    conda-forge\r\njxrlib                    1.1                  h516909a_2    conda-forge\r\nkealib                    1.4.13               h33137a7_1    conda-forge\r\nkiwisolver                1.2.0            py37h99015e2_0    conda-forge\r\nkrb5                      1.17.1               h2fd8d38_0    conda-forge\r\nlcms2                     2.11                 hbd6801e_0    conda-forge\r\nld_impl_linux-64          2.34                 h53a641e_5    conda-forge\r\nlibaec                    1.0.4                he1b5a44_1    conda-forge\r\nlibblas                   3.8.0               16_openblas    conda-forge\r\nlibcblas                  3.8.0               16_openblas    conda-forge\r\nlibclang                  9.0.1           default_hde54327_0    conda-forge\r\nlibcurl                   7.69.1               hf7181ac_0    conda-forge\r\nlibdap4                   3.20.6               h1d1bd15_0    conda-forge\r\nlibedit                   3.1.20191231         h46ee950_0    conda-forge\r\nlibffi                    3.2.1             he1b5a44_1007    conda-forge\r\nlibgcc-ng                 9.2.0                h24d8f2e_2    conda-forge\r\nlibgdal                   3.0.4               he6a97d6_10    conda-forge\r\nlibgfortran-ng            7.5.0                hdf63c60_6    conda-forge\r\nlibiconv                  1.15              h516909a_1006    conda-forge\r\nlibkml                    1.3.0             hb574062_1011    conda-forge\r\nliblapack                 3.8.0               16_openblas    conda-forge\r\nlibllvm9                  9.0.1                he513fc3_1    conda-forge\r\nlibnetcdf                 4.7.4           nompi_h84807e1_104    conda-forge\r\nlibopenblas               0.3.9                h5ec1e0e_0    conda-forge\r\nlibpng                    1.6.37               hed695b0_1    conda-forge\r\nlibpq                     12.2                 h5513abc_1    conda-forge\r\nlibspatialindex           1.9.3                he1b5a44_3    conda-forge\r\nlibspatialite             4.3.0a            h2482549_1038    conda-forge\r\nlibssh2                   1.9.0                hab1572f_2    conda-forge\r\nlibstdcxx-ng              9.2.0                hdf63c60_2    conda-forge\r\nlibtiff                   4.1.0                hc7e4089_6    conda-forge\r\nlibuuid                   2.32.1            h14c3975_1000    conda-forge\r\nlibwebp-base              1.1.0                h516909a_3    conda-forge\r\nlibxcb                    1.13              h14c3975_1002    conda-forge\r\nlibxkbcommon              0.10.0               he1b5a44_0    conda-forge\r\nlibxml2                   2.9.10               hee79883_0    conda-forge\r\nlibzopfli                 1.0.3                he1b5a44_0    conda-forge\r\nllvm-openmp               10.0.0               hc9558a2_0    conda-forge\r\nlocket                    0.2.0                      py_2    conda-forge\r\nlz4-c                     1.9.2                he1b5a44_1    conda-forge\r\nmarkupsafe                1.1.1            py37h8f50634_1    conda-forge\r\nmatplotlib                3.2.2                         0    conda-forge\r\nmatplotlib-base           3.2.2            py37h30547a4_0    conda-forge\r\nmore-itertools            8.4.0                      py_0    conda-forge\r\nmotionless                1.3.2                      py_5    oggm\r\nmsgpack-python            1.0.0            py37h99015e2_1    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.1               hf484d3e_1002    conda-forge\r\nnetcdf4                   1.5.3           nompi_py37hdc49583_105    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnspr                      4.25                 he1b5a44_0    conda-forge\r\nnss                       3.47                 he751ad9_0    conda-forge\r\nnumpy                     1.18.5           py37h8960a57_0    conda-forge\r\noggm                      1.3.1                      py_6    oggm\r\nolefile                   0.46                       py_0    conda-forge\r\nopenjpeg                  2.3.1                h981e76c_3    conda-forge\r\nopenssl                   1.1.1g               h516909a_0    conda-forge\r\nowslib                    0.20.0                     py_0    conda-forge\r\npackaging                 20.4               pyh9f0ad1d_0    conda-forge\r\npandas                    1.0.5            py37h0da4684_0    conda-forge\r\npartd                     1.1.0                      py_0    conda-forge\r\npcre                      8.44                 he1b5a44_0    conda-forge\r\npillow                    7.1.2            py37h718be6c_0    conda-forge\r\npip                       20.1.1                     py_1    conda-forge\r\npixman                    0.38.0            h516909a_1003    conda-forge\r\npluggy                    0.13.1           py37hc8dfbb8_1    conda-forge\r\npoppler                   0.87.0               h4190859_1    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.2                 h8573dbc_1    conda-forge\r\nprogressbar2              3.51.3             pyh9f0ad1d_0    conda-forge\r\nproj                      7.0.0                h966b41f_4    conda-forge\r\npsutil                    5.7.0            py37h8f50634_1    conda-forge\r\npthread-stubs             0.4               h14c3975_1001    conda-forge\r\npy                        1.8.2              pyh9f0ad1d_0    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npyepsg                    0.4.0                      py_0    conda-forge\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.7              pyh9f0ad1d_0    conda-forge\r\npyproj                    2.6.1.post1      py37h34dd122_0    conda-forge\r\npyqt                      5.12.3           py37h8685d9f_3    conda-forge\r\npyqt5-sip                 4.19.18                  pypi_0    pypi\r\npyqtchart                 5.12                     pypi_0    pypi\r\npyqtwebengine             5.12.1                   pypi_0    pypi\r\npyshp                     2.1.0                      py_0    conda-forge\r\npysocks                   1.7.1            py37hc8dfbb8_1    conda-forge\r\npytest                    5.4.3            py37hc8dfbb8_0    conda-forge\r\npytest-mpl                0.122.0.202006062112            py_0    oggm\r\npython                    3.7.6           cpython_h8356626_6    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython-utils              2.4.0                      py_0    conda-forge\r\npython_abi                3.7                     1_cp37m    conda-forge\r\npytz                      2020.1             pyh9f0ad1d_0    conda-forge\r\npywavelets                1.1.1            py37h03ebfcd_1    conda-forge\r\npyyaml                    5.3.1            py37h8f50634_0    conda-forge\r\nqt                        5.12.5               hd8c4c69_1    conda-forge\r\nrasterio                  1.1.5            py37h0492a4a_0    conda-forge\r\nreadline                  8.0                  hf8c457e_0    conda-forge\r\nrequests                  2.24.0             pyh9f0ad1d_0    conda-forge\r\nrtree                     0.9.4            py37h8526d28_1    conda-forge\r\nsalem                     0.2.4.202006062112            py_0    oggm\r\nscikit-image              0.17.2           py37h0da4684_1    conda-forge\r\nscipy                     1.4.1            py37ha3d9a3c_3    conda-forge\r\nsetuptools                47.3.1           py37hc8dfbb8_0    conda-forge\r\nshapely                   1.7.0            py37hc88ce51_3    conda-forge\r\nsix                       1.15.0             pyh9f0ad1d_0    conda-forge\r\nsnappy                    1.1.8                he1b5a44_2    conda-forge\r\nsnuggs                    1.4.7                      py_0    conda-forge\r\nsortedcontainers          2.2.2              pyh9f0ad1d_0    conda-forge\r\nsqlite                    3.30.1               hcee41ef_0    conda-forge\r\ntbb                       2020.1               hc9558a2_0    conda-forge\r\ntblib                     1.6.0                      py_0    conda-forge\r\ntifffile                  2020.6.3                   py_1    conda-forge\r\ntiledb                    1.7.7                h8efa9f0_3    conda-forge\r\ntk                        8.6.10               hed695b0_0    conda-forge\r\ntoolz                     0.10.0                     py_0    conda-forge\r\ntornado                   6.0.4            py37h8f50634_1    conda-forge\r\ntyping_extensions         3.7.4.2                    py_0    conda-forge\r\ntzcode                    2020a                h516909a_0    conda-forge\r\nurllib3                   1.25.9                     py_0    conda-forge\r\nwcwidth                   0.2.4              pyh9f0ad1d_0    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxarray                    0.15.1                     py_0    conda-forge\r\nxerces-c                  3.2.2             h8412b87_1004    conda-forge\r\nxorg-kbproto              1.0.7             h14c3975_1002    conda-forge\r\nxorg-libice               1.0.10               h516909a_0    conda-forge\r\nxorg-libsm                1.2.3             h84519dc_1000    conda-forge\r\nxorg-libx11               1.6.9                h516909a_0    conda-forge\r\nxorg-libxau               1.0.9                h14c3975_0    conda-forge\r\nxorg-libxdmcp             1.1.3                h516909a_0    conda-forge\r\nxorg-libxext              1.3.4                h516909a_0    conda-forge\r\nxorg-libxrender           0.9.10            h516909a_1002    conda-forge\r\nxorg-renderproto          0.11.1            h14c3975_1002    conda-forge\r\nxorg-xextproto            7.3.0             h14c3975_1002    conda-forge\r\nxorg-xproto               7.0.31            h14c3975_1007    conda-forge\r\nxz                        5.2.5                h516909a_0    conda-forge\r\nyaml                      0.2.5                h516909a_0    conda-forge\r\nzict                      2.0.0                      py_0    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h516909a_1006    conda-forge\r\nzstd                      1.4.4                h6597ccf_3    conda-forge\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n\r\n     active environment : oggm_env\r\n    active env location : /home/users/timo/miniconda3/envs/oggm_env\r\n            shell level : 1\r\n       user config file : /home/users/timo/.condarc\r\n populated config files : /home/users/timo/.condarc\r\n          conda version : 4.8.3\r\n    conda-build version : 3.19.2\r\n         python version : 3.7.6.final.0\r\n       virtual packages : __glibc=2.30\r\n       base environment : /home/users/timo/miniconda3  (writable)\r\n           channel URLs : https://repo.anaconda.com/pkgs/main/linux-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/linux-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /home/users/timo/miniconda3/pkgs\r\n                          /home/users/timo/.conda/pkgs\r\n       envs directories : /home/users/timo/miniconda3/envs\r\n                          /home/users/timo/.conda/envs\r\n               platform : linux-64\r\n             user-agent : conda/4.8.3 requests/2.23.0 CPython/3.7.6 Linux/4.19.124-gentoo gentoo/2.6 glibc/2.30\r\n                UID:GID : 10000:10000\r\n             netrc file : None\r\n           offline mode : False\r\n\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/661", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/661/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/661/events", "html_url": "https://github.com/pyproj4/pyproj/issues/661", "id": 640787743, "node_id": "MDU6SXNzdWU2NDA3ODc3NDM=", "number": 661, "title": "Instantiating many proj objects much slower than 1.9.6", "user": {"login": "dmahr1", "id": 8354515, "node_id": "MDQ6VXNlcjgzNTQ1MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8354515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmahr1", "html_url": "https://github.com/dmahr1", "followers_url": "https://api.github.com/users/dmahr1/followers", "following_url": "https://api.github.com/users/dmahr1/following{/other_user}", "gists_url": "https://api.github.com/users/dmahr1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmahr1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmahr1/subscriptions", "organizations_url": "https://api.github.com/users/dmahr1/orgs", "repos_url": "https://api.github.com/users/dmahr1/repos", "events_url": "https://api.github.com/users/dmahr1/events{/privacy}", "received_events_url": "https://api.github.com/users/dmahr1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-06-17T22:45:36Z", "updated_at": "2020-07-03T13:55:24Z", "closed_at": "2020-07-03T01:00:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a tool in pyproj 1.9.6 that I use for doing a \"reverse lookup\" of projections. Given an x/y in unknown CRS and a known longitude/latitude, this finds the projections which place that x/y closest to the known longitude/latitude. This is helpful when trying to track down an unknown coordinate system. \r\n\r\nThis requires instantiating thousand of `proj`/`Proj` objects, but it only takes a few seconds in pyproj 1.9.6. Recently I wanted to upgrade to more recent versions of PROJ and GDAL, but this tool is now taking a few minutes, about 50 times longer in pyproj 2.x:\r\n- [This gist](https://gist.github.com/dmahr1/a68dfa44f06d19a1aa2f1f81f64d5fb7) takes 2.32 seconds to run with pyproj 1.9.6.\r\n- [This nearly identical gist](https://gist.github.com/dmahr1/01b561b166068b755e034b6e9e18e01f) takes 168 seconds to run with pyproj 2.6.1\r\n\r\nI know that a lot changed in the underlying PROJ C++ library between pyproj 1.9.6 and 2.x. **But is there any way to restore the fast instantiation of the `proj`/`Proj` objects?** The projections don't have to be exact - just close enough to this reverse lookup tool. Also, I am willing to serialize/pickle the `proj` objects if that would help, though my understanding was that that didn't work with Python C extensions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/659", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/659/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/659/events", "html_url": "https://github.com/pyproj4/pyproj/issues/659", "id": 640437230, "node_id": "MDU6SXNzdWU2NDA0MzcyMzA=", "number": 659, "title": "Qgis crash when importing pyproj from plugin or console", "user": {"login": "jbeilin", "id": 5939561, "node_id": "MDQ6VXNlcjU5Mzk1NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5939561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeilin", "html_url": "https://github.com/jbeilin", "followers_url": "https://api.github.com/users/jbeilin/followers", "following_url": "https://api.github.com/users/jbeilin/following{/other_user}", "gists_url": "https://api.github.com/users/jbeilin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeilin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeilin/subscriptions", "organizations_url": "https://api.github.com/users/jbeilin/orgs", "repos_url": "https://api.github.com/users/jbeilin/repos", "events_url": "https://api.github.com/users/jbeilin/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeilin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-17T13:20:26Z", "updated_at": "2020-06-18T13:25:20Z", "closed_at": "2020-06-18T13:25:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed on ubuntu 18.04 : \r\n- Qgis 3.12.3\r\n- pyproj 2.6.1.post1 using pip3 \r\n\r\nEach time I try to import pyproj in a plugin or in a console script in Qgis console, Qgis crashes. This code works in spyder3. \r\n\r\n```\r\nimport pyproj\r\n#print(pyproj.proj_version_str, pyproj.show_versions())\r\ncrs4326 = pyproj.CRS.from_epsg(4326)\r\ncrs2154 = pyproj.CRS(2154)\r\np = pyproj.Proj(crs2154)\r\ntransformer = pyproj.Transformer.from_crs(crs2154, crs4326, always_xy=True)\r\nlo, la, h = transformer.transform(700000, 6600000, 0)\r\nmu = p.get_factors(lo, la).meridional_scale\r\nprint(mu)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/658", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/658/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/658/events", "html_url": "https://github.com/pyproj4/pyproj/issues/658", "id": 639850565, "node_id": "MDU6SXNzdWU2Mzk4NTA1NjU=", "number": 658, "title": "Raise exceptions instead of using sys.exit of setup.py", "user": {"login": "ocefpaf", "id": 950575, "node_id": "MDQ6VXNlcjk1MDU3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/950575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocefpaf", "html_url": "https://github.com/ocefpaf", "followers_url": "https://api.github.com/users/ocefpaf/followers", "following_url": "https://api.github.com/users/ocefpaf/following{/other_user}", "gists_url": "https://api.github.com/users/ocefpaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocefpaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocefpaf/subscriptions", "organizations_url": "https://api.github.com/users/ocefpaf/orgs", "repos_url": "https://api.github.com/users/ocefpaf/repos", "events_url": "https://api.github.com/users/ocefpaf/events{/privacy}", "received_events_url": "https://api.github.com/users/ocefpaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T17:35:52Z", "updated_at": "2020-07-14T17:03:49Z", "closed_at": "2020-07-14T17:03:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is not really a bug but using sys.exit in setup.py breaks some automated tools that inspect the package and/or build packages from it.\r\n\r\nWould you be open to a PR that changes them to exceptions instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/657", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/657/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/657/events", "html_url": "https://github.com/pyproj4/pyproj/issues/657", "id": 638155533, "node_id": "MDU6SXNzdWU2MzgxNTU1MzM=", "number": 657, "title": "Setting `accuracy` parameter in the `pyproj.Transformer` class", "user": {"login": "anisotropi4", "id": 27144121, "node_id": "MDQ6VXNlcjI3MTQ0MTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/27144121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisotropi4", "html_url": "https://github.com/anisotropi4", "followers_url": "https://api.github.com/users/anisotropi4/followers", "following_url": "https://api.github.com/users/anisotropi4/following{/other_user}", "gists_url": "https://api.github.com/users/anisotropi4/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisotropi4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisotropi4/subscriptions", "organizations_url": "https://api.github.com/users/anisotropi4/orgs", "repos_url": "https://api.github.com/users/anisotropi4/repos", "events_url": "https://api.github.com/users/anisotropi4/events{/privacy}", "received_events_url": "https://api.github.com/users/anisotropi4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-13T12:41:24Z", "updated_at": "2020-06-14T17:22:01Z", "closed_at": "2020-06-14T17:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a question about how to set the `accuracy` parameter in the `Transformer` class.\r\n\r\nI have UK Northing/Easting (EPSG:27700) data held in the variable `DATA` and would like to project this to WGS 84 (EPSG:4326) to a given level of accuracy using `pyproj` as set out in the following code snippet:\r\n\r\n``` \r\nfrom pyproj import Transformer, CRS\r\nfrom shapely.ops import transform\r\ntransformer = Transformer.from_crs(DATA.crs, CRS.from_epsg(4326), always_xy=True)\r\n```\r\nFrom the API I understand that the `Transformer` accuracy parameter is in metres and defaults to `-1.0`. If I wanted to set this accuracy to an arbitrary distance, say, 0.5m, how do I do this?\r\n\r\nMy na\u00efve attempts to set the value as below fail with a `can't set attribute` error:\r\n```>>> transformer.accuracy\r\n-1.0\r\n>>> transformer.accuracy = 0.5\r\nTraceback (most recent call last):\r\n  AttributeError: can't set attribute\r\n>>> transformer['accuracy'] = 0.5\r\nTraceback (most recent call last):\r\n  AttributeError: can't set attribute\r\n```\r\nI have looked and couldn't see answer in the usual places. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/656", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/656/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/656/events", "html_url": "https://github.com/pyproj4/pyproj/issues/656", "id": 637545523, "node_id": "MDU6SXNzdWU2Mzc1NDU1MjM=", "number": 656, "title": "CRS.to_dict()  for 'tmerc'   got key 'k' instead of 'k_0", "user": {"login": "phisan-chula", "id": 1092000, "node_id": "MDQ6VXNlcjEwOTIwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1092000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phisan-chula", "html_url": "https://github.com/phisan-chula", "followers_url": "https://api.github.com/users/phisan-chula/followers", "following_url": "https://api.github.com/users/phisan-chula/following{/other_user}", "gists_url": "https://api.github.com/users/phisan-chula/gists{/gist_id}", "starred_url": "https://api.github.com/users/phisan-chula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phisan-chula/subscriptions", "organizations_url": "https://api.github.com/users/phisan-chula/orgs", "repos_url": "https://api.github.com/users/phisan-chula/repos", "events_url": "https://api.github.com/users/phisan-chula/events{/privacy}", "received_events_url": "https://api.github.com/users/phisan-chula/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T07:26:59Z", "updated_at": "2020-06-12T12:24:22Z", "closed_at": "2020-06-12T12:19:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n(Pdb++) CRS.to_dict()\r\n{'proj': 'tmerc', 'lat_0': 15, 'lon_0': 100, 'k': 1, 'x_0': 0, 'y_0': 0, 'a': 6378137, 'b': 6356752.3142, 'units': 'm', 'no_defs': None, 'type': 'crs'}\r\n\r\n '+proj=tmerc +lat_0={lat_0} +lon_0={lon_0} +k_0={k_0} +x_0=0 +y_0=0 +a=6378137.0 +b=6356752.3142 +units=m +no_defs'\r\n\r\n#### Problem description\r\nI have define CRS with proj4 string.    'k_0\" was well defined , but when is dump back\r\nusing CRS.to_dict() .... then i got  'k' instead of 'k_0'\r\n\r\n#### Expected Output\r\ngot  'k' instead of 'k_0'\r\n\r\n#### Environment Information\r\nPdb++) pyproj.__version__\r\n'2.6.1'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/654", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/654/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/654/events", "html_url": "https://github.com/pyproj4/pyproj/issues/654", "id": 628635460, "node_id": "MDU6SXNzdWU2Mjg2MzU0NjA=", "number": 654, "title": "Southern Hemisphere Convergence Angle", "user": {"login": "wg1562", "id": 59520869, "node_id": "MDQ6VXNlcjU5NTIwODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/59520869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wg1562", "html_url": "https://github.com/wg1562", "followers_url": "https://api.github.com/users/wg1562/followers", "following_url": "https://api.github.com/users/wg1562/following{/other_user}", "gists_url": "https://api.github.com/users/wg1562/gists{/gist_id}", "starred_url": "https://api.github.com/users/wg1562/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wg1562/subscriptions", "organizations_url": "https://api.github.com/users/wg1562/orgs", "repos_url": "https://api.github.com/users/wg1562/repos", "events_url": "https://api.github.com/users/wg1562/events{/privacy}", "received_events_url": "https://api.github.com/users/wg1562/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-01T18:22:28Z", "updated_at": "2020-06-02T20:44:49Z", "closed_at": "2020-06-02T20:31:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This pertains to an issue noticed by  @kimollivier also in issue #503 \r\n\r\nI compared results obtained with the NGS NCAT tool: [https://www.ngs.noaa.gov/NCAT/index.xhtml ]\r\nfor points in the southern hemisphere, and I too am getting a UTM convergence angle with opposite sign of what that tool provides.\r\n\r\nMaybe this is just how proj is setup, or maybe this is a legitimate bug? \r\n\r\nI am using pyproj version 2.6.1post\r\n\r\nThanks.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/651", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/651/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/651/events", "html_url": "https://github.com/pyproj4/pyproj/issues/651", "id": 627645898, "node_id": "MDU6SXNzdWU2Mjc2NDU4OTg=", "number": 651, "title": "Python 3.7 intermittent core-dump", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-30T03:59:49Z", "updated_at": "2020-06-21T23:13:50Z", "closed_at": "2020-05-31T16:59:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Strangely only happens with Python 3.7\r\n\r\nFirst appearance: https://travis-ci.com/github/pyproj4/pyproj/jobs/341216820 (1 day ago)\r\nSuccess: https://travis-ci.com/github/pyproj4/pyproj/jobs/341643706\r\nFail: https://travis-ci.com/github/pyproj4/pyproj/jobs/341644980\r\n\r\n- `pyproj` issue?\r\n- `PROJ` issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/647", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/647/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/647/events", "html_url": "https://github.com/pyproj4/pyproj/issues/647", "id": 620079599, "node_id": "MDU6SXNzdWU2MjAwNzk1OTk=", "number": 647, "title": "Commit a88f6b23f62c broke the `python3 setup.py install && py.test` workflow", "user": {"login": "lpechacek", "id": 5584406, "node_id": "MDQ6VXNlcjU1ODQ0MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5584406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpechacek", "html_url": "https://github.com/lpechacek", "followers_url": "https://api.github.com/users/lpechacek/followers", "following_url": "https://api.github.com/users/lpechacek/following{/other_user}", "gists_url": "https://api.github.com/users/lpechacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpechacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpechacek/subscriptions", "organizations_url": "https://api.github.com/users/lpechacek/orgs", "repos_url": "https://api.github.com/users/lpechacek/repos", "events_url": "https://api.github.com/users/lpechacek/events{/privacy}", "received_events_url": "https://api.github.com/users/lpechacek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T10:03:50Z", "updated_at": "2020-05-19T12:30:50Z", "closed_at": "2020-05-19T12:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Installation method/steps\r\nI'm packaging pyproj for openSUSE project. The build and installation steps boil down to `python3 setup.py install` and `py.test`. Example build log can be found at https://build.opensuse.org/package/live_build_log/Application:Geo/python-pyproj/openSUSE_Tumbleweed/x86_64. Until v2.6.0 this installation procedure worked fine. Trying to upgrade to v2.6.1 resulted in tests failing to start. The corresponding log part is:\r\n```\r\n...\r\n[   17s] + py.test-3.8 --ignore=_build.python2 --ignore=_build.python3 --ignore=_build.pypy3 -v\r\n[   17s] ImportError while loading conftest '/home/abuild/rpmbuild/BUILD/pyproj-2.6.1.post1/test/conftest.py'.\r\n[   17s] test/conftest.py:4: in <module>\r\n[   17s]     from pyproj.datadir import get_data_dir\r\n[   17s] pyproj/__init__.py:50: in <module>\r\n[   17s]     from pyproj import _datadir\r\n[   17s] E   ImportError: cannot import name '_datadir' from partially initialized module 'pyproj' (most likely due to a circular import) (/home/abuild/rpmbuild/BUILD/pyproj-2.6.1.post1/pyproj/__init__.py)\r\n[   17s] error: Bad exit status from /var/tmp/rpm-tmp.BRrH1g (%check)\r\n...\r\n```\r\n\r\nGit bisect led to commit a88f6b23f62c (\"TST: Update tests with behavior with new PROJ grids (#594)\"). How to fix pyproj so that the above build procedure completes again, please?\r\n\r\n#### Environment Information\r\n - pyproj v2.6.1rel\r\n - PROJ 7.0.0\r\n - Python 3.8.2\r\n - Operation System Linux-5.6.11-1-default-x86_64-with-glibc2.2.5 (openSUSE Tumbleweed - rolling distro)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/645", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/645/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/645/events", "html_url": "https://github.com/pyproj4/pyproj/issues/645", "id": 619770396, "node_id": "MDU6SXNzdWU2MTk3NzAzOTY=", "number": 645, "title": "Radian flag is ignored", "user": {"login": "espg", "id": 3896161, "node_id": "MDQ6VXNlcjM4OTYxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3896161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/espg", "html_url": "https://github.com/espg", "followers_url": "https://api.github.com/users/espg/followers", "following_url": "https://api.github.com/users/espg/following{/other_user}", "gists_url": "https://api.github.com/users/espg/gists{/gist_id}", "starred_url": "https://api.github.com/users/espg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/espg/subscriptions", "organizations_url": "https://api.github.com/users/espg/orgs", "repos_url": "https://api.github.com/users/espg/repos", "events_url": "https://api.github.com/users/espg/events{/privacy}", "received_events_url": "https://api.github.com/users/espg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T18:40:35Z", "updated_at": "2020-05-17T20:10:00Z", "closed_at": "2020-05-17T20:10:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\nThe flag used to work in earlier versions, but currently does not (tested using 2.6.0).\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\n\r\nA \"Minimal, Complete and Verifiable Example\" will make it much easier for maintainers to help you:\r\nhttp://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n\r\n```python\r\n\r\nimport pyproj\r\n# tested with version 2.6.0\r\n\r\np1 = pyproj.Proj(proj='utm',zone=22,ellps='WGS84')\r\n\r\nprint(p1(511785.0, 7552515.0,inverse=True))\r\nprint(p1(511785.0, 7552515.0,inverse=True, radians=True))\r\n\r\n# should ***not*** evaluate to true\r\np1(511785.0, 7552515.0,inverse=True, radians=True) == p1(511785.0, 7552515.0,inverse=True)\r\n\r\n```\r\n#### Problem description\r\n\r\nRadians are needed for great circle distance calculations (i.e., haversine distances, such as when using the sklearn ball tree object). This behavior is new within the last ~2 years; found bug because old scripts stopped working after upgrading pyproj. \r\n\r\n#### Expected Output\r\n\r\nRadians. It's a simple calculation to do by hand... but for pipelines, it should continue to work as it used to. \r\n\r\n#### Environment Information\r\n\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /nix/store/pkzswj3kj7fbd8v28di06q6j7f1mn6ng-proj/share/proj\r\n\r\nSystem:\r\n    python: 3.7.6 (default, Dec 18 2019, 19:23:55)  [GCC 9.2.0]\r\nexecutable: /nix/store/nlgrx0cl1l87nx0w660lb3jksn9jdca9-python3-3.7.6/bin/python\r\n   machine: Linux-4.15.0-51-generic-x86_64-with-debian-buster-sid\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 44.0.0.post20200404\r\n    Cython: 0.29.14\r\n\r\n#### Installation method\r\n\r\nUsing nix; here is the [nix derivation](https://github.com/MinesGlaciology/cloudMasking/blob/master/default.nix), and [instructions](https://github.com/MinesGlaciology/cloudMasking/blob/master/README.txt). \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/632", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/632/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/632/events", "html_url": "https://github.com/pyproj4/pyproj/issues/632", "id": 616753931, "node_id": "MDU6SXNzdWU2MTY3NTM5MzE=", "number": 632, "title": "pyproj fails to import _datadir on appveyor", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T15:33:41Z", "updated_at": "2020-05-12T18:06:07Z", "closed_at": "2020-05-12T18:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just started getting this today:\r\n\r\n```\r\nC:\\Python38_64\\envs\\test\\lib\\site-packages\\pyresample\\geometry.py:34: in <module>\r\n    from pyproj import Geod, transform\r\nC:\\Python38_64\\envs\\test\\lib\\site-packages\\pyproj\\__init__.py:50: in <module>\r\n    from pyproj import _datadir\r\nE   ImportError: DLL load failed: %1 is not a valid Win32 application.\r\n```\r\n\r\nSee https://ci.appveyor.com/project/pytroll/satpy/builds/32822177 for full build.\r\n\r\nAs far as I can tell the pyproj and PROJ conda-forge packages haven't been updated for 8 days and this just started happening today.\r\n\r\n#### Installation method/steps\r\n - Installation method: conda-forge package\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install\r\n\r\n```\r\npyproj-2.6.1.post1         |   py38h1dd9442_0\r\n```\r\n\r\n - PROJ version (Execute `proj` command and give version here.)\r\n - Python version (`python -c \"import sys; print(sys.version.replace('\\n', ' '))\"`)\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`)\r\n\r\n\r\nNote: I just noticed I don't have strict channel priority set. I'll try that now but wanted to get this written down before heading in to a meeting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/630", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/630/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/630/events", "html_url": "https://github.com/pyproj4/pyproj/issues/630", "id": 615990703, "node_id": "MDU6SXNzdWU2MTU5OTA3MDM=", "number": 630, "title": "Building Compound CRS with WGS84 & EGM96?", "user": {"login": "glostis", "id": 25295717, "node_id": "MDQ6VXNlcjI1Mjk1NzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/25295717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glostis", "html_url": "https://github.com/glostis", "followers_url": "https://api.github.com/users/glostis/followers", "following_url": "https://api.github.com/users/glostis/following{/other_user}", "gists_url": "https://api.github.com/users/glostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/glostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glostis/subscriptions", "organizations_url": "https://api.github.com/users/glostis/orgs", "repos_url": "https://api.github.com/users/glostis/repos", "events_url": "https://api.github.com/users/glostis/events{/privacy}", "received_events_url": "https://api.github.com/users/glostis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}, {"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-11T15:51:08Z", "updated_at": "2020-05-11T18:01:52Z", "closed_at": "2020-05-11T18:01:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Disclaimer: I have read https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6 and am aware of the fact that PROJ now honors the axis order of a CRS when initialized with `EPSG:xxxx`.*\r\n\r\n#### Code Sample\r\n\r\nI think I have found an inconsistency in the way the axis order is interpreted with `EPSG:4326`.\r\nConsider the following snippet: \r\n\r\n```python\r\nimport pyproj\r\n\r\nellipsoid = pyproj.CRS.from_epsg(4326)  # WGS84\r\ngeoid = pyproj.CRS.from_epsg(5773)  # EGM96\r\nutm = pyproj.CRS.from_epsg(32610)  # UTM zone 10\r\n\r\nlat, lon = 45, -122\r\nfor name, trf in zip(\r\n    [\"WGS84 -> EGM96\", \"WGS84 -> UTM\"],\r\n    [pyproj.Transformer.from_crs(ellipsoid, geoid), pyproj.Transformer.from_crs(ellipsoid, utm)],\r\n):\r\n    print(name, \"lon, lat\", trf.transform(lon, lat, 10))\r\n    print(name, \"lat, lon\", trf.transform(lat, lon, 10))\r\n\r\n```\r\n\r\nIt prints the following output:\r\n\r\n```\r\nWGS84 -> EGM96 lon, lat (-122.0, 45.0, 30.38683319091797)\r\nWGS84 -> EGM96 lat, lon (45.0, -122.0, -inf)\r\nWGS84 -> UTM lon, lat (inf, inf, inf)\r\nWGS84 -> UTM lat, lon (578815.302916712, 4983436.768349296, 10.0)\r\n```\r\n\r\n#### Problem description\r\n\r\nSince the axis order of `EPSG:4326` is \r\n```\r\nAxis Info [ellipsoidal]:\r\n- Lat[north]: Geodetic latitude (degree)\r\n- Lon[east]: Geodetic longitude (degree)\r\n```\r\n\r\nI would expect to always have to pass `x=lat, y=lon` in a `Transformer.transform` call in order for everything to work correctly.\r\n\r\nHowever as shown with the snippet above:\r\n1. when transforming datums from WGS84 to EGM96, it is the call with `x=lon, y=lat` that gives the correct output\r\n2. when transforming coordinates from WGS84 to UTM zone 10, as expected it is the call with `x=lat, y=lon` that gives the correct output.\r\n\r\n#### Expected Output\r\n\r\nI would expect to always have to pass `x=lat, y=lon` in `Transformer.transform` when my `crs_from` is `EPSG:4326`, irrespective of what my `crs_to` is.\r\n\r\n#### Environment Information\r\n`2.6.1.post1`\r\n\r\n#### Installation method\r\npip wheel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/629", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/629/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/629/events", "html_url": "https://github.com/pyproj4/pyproj/issues/629", "id": 615232553, "node_id": "MDU6SXNzdWU2MTUyMzI1NTM=", "number": 629, "title": "ENH: Add network methods to Transformer", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T18:16:37Z", "updated_at": "2020-05-14T16:41:53Z", "closed_at": "2020-05-14T16:41:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to #530 \r\n\r\nWith [proj_context_set_enable_network](https://proj.org/development/reference/functions.html#_CPPv431proj_context_set_enable_networkP10PJ_CONTEXTi), and [proj_context_is_network_enabled](https://proj.org/development/reference/functions.html#_CPPv431proj_context_is_network_enabledP10PJ_CONTEXT), methods can be added for checking if networking is enabled and explicitly enabling/disabling the network.\r\n\r\nThe `Transformer` and `Proj`? classes are the only ones that need it. And since `Proj` inherits from `Transformer`, only need to add these to the `Transformer`\r\n\r\nThinking about:\r\n- `Transformer.is_network_enabled`\r\n- ~~`Transformer.enable_network()`~~\r\n- ~~`Transformer.disable_network()`~~\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/627", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/627/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/627/events", "html_url": "https://github.com/pyproj4/pyproj/issues/627", "id": 614616000, "node_id": "MDU6SXNzdWU2MTQ2MTYwMDA=", "number": 627, "title": "Erraneous area of use boundaries some EPSG codes ?", "user": {"login": "mraspaud", "id": 167802, "node_id": "MDQ6VXNlcjE2NzgwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/167802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraspaud", "html_url": "https://github.com/mraspaud", "followers_url": "https://api.github.com/users/mraspaud/followers", "following_url": "https://api.github.com/users/mraspaud/following{/other_user}", "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions", "organizations_url": "https://api.github.com/users/mraspaud/orgs", "repos_url": "https://api.github.com/users/mraspaud/repos", "events_url": "https://api.github.com/users/mraspaud/events{/privacy}", "received_events_url": "https://api.github.com/users/mraspaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T09:10:49Z", "updated_at": "2020-05-11T06:56:45Z", "closed_at": "2020-05-11T06:56:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nfrom pyproj import CRS\r\ncrs = CRS('EPSG:3034')\r\ncrs.area_of_use\r\n# produces AreaOfUse(name=Europe - LCC & LAEA, west=-35.58, south=24.6, east=44.83, north=84.17)\r\n```\r\n\r\n#### Problem description\r\n\r\nThe code above produces boundaries that are (-35.58, 24.6, 44.83, 84.17) while the description of the epsg (for example [here](https://epsg.io/3034)) says it should be (-16.1, 32.88, 40.18, 84.17).\r\nIt might not be the only faulty epsg as it seems 3035 is wrong too.\r\n\r\n#### Expected Output\r\nepsg (for example [here](https://epsg.io/3034)) says it should be (-16.1, 32.88, 40.18, 84.17)\r\n\r\n#### Environment Information\r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 7.0.0\r\n  data dir: /home/a001673/miniconda3/envs/satpy-dev/share/proj\r\n\r\nSystem:\r\n    python: 3.8.2 | packaged by conda-forge | (default, Apr 24 2020, 08:20:52)  [GCC 7.3.0]\r\nexecutable: /home/a001673/miniconda3/envs/satpy-dev/bin/python\r\n   machine: Linux-4.18.0-147.5.1.el8_1.x86_64-x86_64-with-glibc2.10\r\n\r\nPython deps:\r\n       pip: 20.1\r\nsetuptools: 46.1.3.post20200325\r\n    Cython: None\r\n```\r\n\r\n#### Installation method\r\n - conda\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list | grep -E \"proj|aenum\"\r\nproj                      7.0.0                h966b41f_3    conda-forge\r\npyproj                    2.6.0            py38h7521cb9_1    conda-forge\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n     active environment : satpy-dev\r\n    active env location : /home/a001673/miniconda3/envs/satpy-dev\r\n            shell level : 2\r\n       user config file : /home/a001673/.condarc\r\n populated config files : /home/a001673/.condarc\r\n          conda version : 4.8.3\r\n    conda-build version : not installed\r\n         python version : 3.7.4.final.0\r\n       virtual packages : __glibc=2.28\r\n       base environment : /home/a001673/miniconda3  (writable)\r\n           channel URLs : https://conda.anaconda.org/conda-forge/linux-64\r\n                          https://conda.anaconda.org/conda-forge/noarch\r\n                          https://repo.anaconda.com/pkgs/main/linux-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/linux-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /home/a001673/miniconda3/pkgs\r\n                          /home/a001673/.conda/pkgs\r\n       envs directories : /home/a001673/miniconda3/envs\r\n                          /home/a001673/.conda/envs\r\n               platform : linux-64\r\n             user-agent : conda/4.8.3 requests/2.23.0 CPython/3.7.4 Linux/4.18.0-147.5.1.el8_1.x86_64 rhel/8.1 glibc/2.28\r\n                UID:GID : 62310:2000\r\n             netrc file : None\r\n           offline mode : False\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/626", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/626/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/626/events", "html_url": "https://github.com/pyproj4/pyproj/issues/626", "id": 614257845, "node_id": "MDU6SXNzdWU2MTQyNTc4NDU=", "number": 626, "title": "How long does one have to be subjected to Future Warnings?", "user": {"login": "OldSubSailor", "id": 54075170, "node_id": "MDQ6VXNlcjU0MDc1MTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/54075170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OldSubSailor", "html_url": "https://github.com/OldSubSailor", "followers_url": "https://api.github.com/users/OldSubSailor/followers", "following_url": "https://api.github.com/users/OldSubSailor/following{/other_user}", "gists_url": "https://api.github.com/users/OldSubSailor/gists{/gist_id}", "starred_url": "https://api.github.com/users/OldSubSailor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OldSubSailor/subscriptions", "organizations_url": "https://api.github.com/users/OldSubSailor/orgs", "repos_url": "https://api.github.com/users/OldSubSailor/repos", "events_url": "https://api.github.com/users/OldSubSailor/events{/privacy}", "received_events_url": "https://api.github.com/users/OldSubSailor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1335880194, "node_id": "MDU6TGFiZWwxMzM1ODgwMTk0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/discussion", "name": "discussion", "color": "fef2c0", "default": false, "description": "An issue for having a discusssion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-07T18:29:23Z", "updated_at": "2020-05-13T13:19:15Z", "closed_at": "2020-05-13T13:18:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried searching for this but did not get a return.\r\n\r\nExample of problem\r\n\r\nI get a full terminal window of these comments when I start Ortho4XP.\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyproj/crs/crs.py:294: FutureWarning: '+init=:' syntax is deprecated. ':' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6 projstring = _prepare_from_string(\" \".join((projstring, projkwargs)))\r\n\r\n #### Problem description\r\nThis has been going on for a long time now.   I had expected it to be fixed(?)  How long does one have to be subjected to Future Warnings?\r\n\r\nif in_crs_string.startswith((\"+init\", \"init\")):\r\n            warnings.warn(\r\n                \"'+init=<authority>:<code>' syntax is deprecated. \"\r\n                \"'<authority>:<code>' is the preferred initialization method. \"\r\n                \"When making the change, be mindful of axis order changes: \"\r\n                \"https://pyproj4.github.io/pyproj/stable/gotchas.html\"\r\n                \"#axis-order-changes-in-proj-6\",\r\n                FutureWarning,\r\n                stacklevel=2,\r\n\r\n#### Expected Output\r\nNo warnings\r\n\r\n\r\n#### Environment Information\r\n - pyproj     2.6.1\r\n- proj Rel. 7.0.0, March 1st, 2020\r\n - macOS Catalina 10.15.4\r\n\r\n#### Installation method\r\n - I think that proj was installed when using the ruby based homebrew master install(?)\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/623", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/623/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/623/events", "html_url": "https://github.com/pyproj4/pyproj/issues/623", "id": 613023904, "node_id": "MDU6SXNzdWU2MTMwMjM5MDQ=", "number": 623, "title": "A transform and its inverse that are not behaving like such", "user": {"login": "mmodenesi", "id": 5569789, "node_id": "MDQ6VXNlcjU1Njk3ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5569789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmodenesi", "html_url": "https://github.com/mmodenesi", "followers_url": "https://api.github.com/users/mmodenesi/followers", "following_url": "https://api.github.com/users/mmodenesi/following{/other_user}", "gists_url": "https://api.github.com/users/mmodenesi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmodenesi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmodenesi/subscriptions", "organizations_url": "https://api.github.com/users/mmodenesi/orgs", "repos_url": "https://api.github.com/users/mmodenesi/repos", "events_url": "https://api.github.com/users/mmodenesi/events{/privacy}", "received_events_url": "https://api.github.com/users/mmodenesi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T03:20:53Z", "updated_at": "2020-05-06T12:27:13Z", "closed_at": "2020-05-06T12:26:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n\r\n#### Code Sample\r\n\r\n```python\r\nIn [1]: import pyproj\r\n\r\nIn [2]: PROJ_ECEF = pyproj.Proj({'init': 'EPSG:4978'})\r\n\r\nIn [3]: PROJ_GEO = pyproj.Proj({'init': 'EPSG:4326'})\r\n\r\nIn [4]: def geo_to_ecef(lon, lat, alt):\r\n   ...:     return list(pyproj.transform(PROJ_GEO, PROJ_ECEF, lon, lat, alt, radians=False))  # x, y, z\r\n   ...: \r\n   ...: \r\n\r\nIn [5]: def ecef_to_geo(x, y, z):\r\n   ...:     return list(pyproj.transform(PROJ_ECEF, PROJ_GEO, x, y, z, radians=False))  # lon, lat, alt\r\n   ...: \r\n   ...: \r\n\r\nIn [6]: ecef_to_geo(*geo_to_ecef(45, -1, 0.5))\r\nOut[6]: [44.99999999999999, -0.9999999999999998, 0.5000000018626451]\r\n\r\nIn [7]: ecef_to_geo(*geo_to_ecef(12, 12, 12))\r\nOut[7]: [12.000000000000002, 12.000000000000002, 11.999999999068677]\r\n\r\nIn [8]: # here comes the weird part\r\n\r\nIn [9]: ecef_to_geo(*geo_to_ecef(0, 90, 0))\r\nOut[9]: [0.0, 90.0, 0.0]\r\n\r\nIn [10]: ecef_to_geo(*geo_to_ecef(1, 90, 0))\r\nOut[10]: [0.0, 90.0, 0.0]\r\n\r\nIn [11]: ecef_to_geo(*geo_to_ecef(2, 90, 0))\r\nOut[11]: [0.0, 90.0, 0.0]\r\n\r\nIn [12]: ecef_to_geo(*geo_to_ecef(3, 90, 0))\r\nOut[12]: [0.0, 90.0, 0.0]\r\n\r\nIn [13]: ecef_to_geo(*geo_to_ecef(4, 90, 0))\r\nOut[13]: [0.0, 90.0, 0.0]\r\n```\r\n#### Problem description\r\n\r\nI am writing tests for a codebase I didn't develop. I found these two functions that I think are inverses (except float number representation and rounding errors). `hypothesis` quickly found counter examples of my claim.\r\n\r\n```python\r\nimport pytest\r\nfrom hypothesis import given\r\n\r\n@given(                                                                                                                                                                                                                                                                     \r\n    st.floats(min_value=-180, max_value=180),                                                                                                                                                                                                                               \r\n    st.floats(min_value=-90, max_value=90),                                                                                                                                                                                                                                 \r\n    st.floats(min_value=0, max_value=500 * 1000)  # 500 km                                                                                                                                                                                                                  \r\n)                                                                                                                                                                                                                                                                           \r\ndef test_coordinates_conversion(lon, lat, alt):                                                                                                                                                                                                                               \r\n    '''From Geodetic to ECEF to Geodetic, one expects to obtain (approx) the same values.'''                                                                                                                                                                                \r\n    _lon, _lat, _alt = gl.ecef_to_geo(*gl.geo_to_ecef(lon, lat, alt))                                                                                                                                                                                                       \r\n    assert (_lon, _lat, _alt) == pytest.approx((lon, lat, alt), abs=0.1) \r\n```\r\n\r\n#### Expected Output\r\n\r\ntest ok\r\n\r\n#### Environment Information\r\n\r\npyproj 1.9.5.1\r\npython 3.4.2\r\n\r\nI know... old stuff... let me know if you are willing to dig into it, I can try it out in a more modern setup.\r\n\r\n#### Installation method\r\npip\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/622", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/622/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/622/events", "html_url": "https://github.com/pyproj4/pyproj/issues/622", "id": 613017007, "node_id": "MDU6SXNzdWU2MTMwMTcwMDc=", "number": 622, "title": "Is this suspicious code correct?", "user": {"login": "mmodenesi", "id": 5569789, "node_id": "MDQ6VXNlcjU1Njk3ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5569789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmodenesi", "html_url": "https://github.com/mmodenesi", "followers_url": "https://api.github.com/users/mmodenesi/followers", "following_url": "https://api.github.com/users/mmodenesi/following{/other_user}", "gists_url": "https://api.github.com/users/mmodenesi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmodenesi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmodenesi/subscriptions", "organizations_url": "https://api.github.com/users/mmodenesi/orgs", "repos_url": "https://api.github.com/users/mmodenesi/repos", "events_url": "https://api.github.com/users/mmodenesi/events{/privacy}", "received_events_url": "https://api.github.com/users/mmodenesi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-06T02:56:16Z", "updated_at": "2020-05-18T00:36:19Z", "closed_at": "2020-05-18T00:36:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One would expect this line to make no references to `x`. I am not sure, though.\r\n\r\nhttps://github.com/pyproj4/pyproj/blob/f3156505d91ab05aca418c049d40be9f00ecbdc5/pyproj/transformer.py#L437\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/621", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/621/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/621/events", "html_url": "https://github.com/pyproj4/pyproj/issues/621", "id": 612790962, "node_id": "MDU6SXNzdWU2MTI3OTA5NjI=", "number": 621, "title": "Install issue against alpine linux", "user": {"login": "tomkralidis", "id": 910430, "node_id": "MDQ6VXNlcjkxMDQzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/910430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkralidis", "html_url": "https://github.com/tomkralidis", "followers_url": "https://api.github.com/users/tomkralidis/followers", "following_url": "https://api.github.com/users/tomkralidis/following{/other_user}", "gists_url": "https://api.github.com/users/tomkralidis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkralidis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkralidis/subscriptions", "organizations_url": "https://api.github.com/users/tomkralidis/orgs", "repos_url": "https://api.github.com/users/tomkralidis/repos", "events_url": "https://api.github.com/users/tomkralidis/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkralidis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-05T18:02:00Z", "updated_at": "2020-05-06T00:28:19Z", "closed_at": "2020-05-06T00:28:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\nHi: trying to install on Alpine Linux (via Docker) yields the following error:\r\n\r\n`ERROR: Could not build wheels for pyproj which use PEP 517 and cannot be installed directly`\r\n\r\n\r\n#### Installation method/steps\r\n - Installation method: `pip install pyproj`\r\n - How did you install PROJ? proj is installed to the entire system via alpine-linux \r\n\r\n\r\nPlease provide all commands/steps you used to install pyproj and PROJ.\r\n```bash\r\napk update && apk add geos-dev python3 python3-dev py3-pip proj proj-dev proj-util\r\npip3 install -U pip setuptools\r\npip3 install wheel\r\npip3 install pyproj\r\n```\r\n\r\n#### Environment Information\r\n- pyproj-2.6.1.post1 (current latest on [PyPI](https://pypi.org/project/pyproj/))\r\n - PROJ 6.2.1-r0\r\n - Python version: `3.8.2 (default, Feb 29 2020, 17:03:31)  [GCC 9.2.0]`\r\n - Operation System Information alpine linux 3.11.6 (`Linux-4.19.76-linuxkit-x86_64-with`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/619", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/619/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/619/events", "html_url": "https://github.com/pyproj4/pyproj/issues/619", "id": 612261357, "node_id": "MDU6SXNzdWU2MTIyNjEzNTc=", "number": 619, "title": "ENH: Use 'proj_get_units_from_database' in the `get_units_map()` function.", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T01:02:50Z", "updated_at": "2020-05-15T00:44:23Z", "closed_at": "2020-05-15T00:44:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to: OSGeo/PROJ#2065 (Add proj_get_units_from_database())\r\n-  This deprecates proj_list_angular_units and proj_list_linear_units\r\n\r\nThis means [get_angular_units_map()](https://github.com/pyproj4/pyproj/blob/d1cefcf6ee329cb7b0916090164d4a6895479a9c/pyproj/_list.pyx#L98) will be removed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/618", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/618/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/618/events", "html_url": "https://github.com/pyproj4/pyproj/issues/618", "id": 612258641, "node_id": "MDU6SXNzdWU2MTIyNTg2NDE=", "number": 618, "title": "Have `pyproj.Proj` inherit from `pyproj.Transformer`", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T00:52:11Z", "updated_at": "2020-05-07T12:41:21Z", "closed_at": "2020-05-07T12:41:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`pyproj.Proj` is essentially a special case of `pyproj.Transformer`\r\n\r\nBenefits:\r\n- Gives `Proj` additional methods/attributes of the `Transformer`\r\n- Reduces code", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/616", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/616/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/616/events", "html_url": "https://github.com/pyproj4/pyproj/issues/616", "id": 611804939, "node_id": "MDU6SXNzdWU2MTE4MDQ5Mzk=", "number": 616, "title": "'proj executable not found'", "user": {"login": "veenstrajelmer", "id": 60435591, "node_id": "MDQ6VXNlcjYwNDM1NTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/60435591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veenstrajelmer", "html_url": "https://github.com/veenstrajelmer", "followers_url": "https://api.github.com/users/veenstrajelmer/followers", "following_url": "https://api.github.com/users/veenstrajelmer/following{/other_user}", "gists_url": "https://api.github.com/users/veenstrajelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/veenstrajelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veenstrajelmer/subscriptions", "organizations_url": "https://api.github.com/users/veenstrajelmer/orgs", "repos_url": "https://api.github.com/users/veenstrajelmer/repos", "events_url": "https://api.github.com/users/veenstrajelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/veenstrajelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}, {"id": 1324294960, "node_id": "MDU6TGFiZWwxMzI0Mjk0OTYw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/windows", "name": "windows", "color": "1f3396", "default": false, "description": "Windows related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-04T11:33:45Z", "updated_at": "2020-05-04T14:51:57Z", "closed_at": "2020-05-04T14:37:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Installation method/steps\r\n - Installation method: ``pip install pyproj>=1.9.6`` from commandline in activated conda environment\r\n - How did you install PROJ? I did not, this was previously solved by pip\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install: latest\r\n - Python version: 3.7.7\r\n - Operation System Information: Windows-10-10.0.17134-SP0\r\n\r\nMy issue is solved when I ``pip install pyproj==2.6.0`` instead of ``pip install pyproj>=1.9.6`` (fetches 2.6.1), so this issue has occured in the last stable version.\r\n\r\nCollecting pyproj==2.6.1\r\n  Using cached pyproj-2.6.1.tar.gz (528 kB)\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: 'C:\\Users\\veenstra\\Anaconda3\\envs\\hatyan2_env\\python.exe' 'C:\\Users\\veenstra\\Anaconda3\\envs\\hatyan2_env\\lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py' get_requires_for_build_wheel 'C:\\Users\\veenstra\\AppData\\Local\\Temp\\tmpi19fhhbs'\r\n       cwd: C:\\Users\\veenstra\\AppData\\Local\\Temp\\pip-install-zs4h6bx4\\pyproj\r\n  Complete output (1 lines):\r\n  proj executable not found. Please set the PROJ_DIR variable.For more information see: https://pyproj4.github.io/pyproj/stable/installation.html\r\n  \r\nERROR: Command errored out with exit status 1: 'C:\\Users\\veenstra\\Anaconda3\\envs\\hatyan2_env\\python.exe' 'C:\\Users\\veenstra\\Anaconda3\\envs\\hatyan2_env\\lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py' get_requires_for_build_wheel 'C:\\Users\\veenstra\\AppData\\Local\\Temp\\tmpi19fhhbs' Check the logs for full command output.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/612", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/612/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/612/events", "html_url": "https://github.com/pyproj4/pyproj/issues/612", "id": 611229916, "node_id": "MDU6SXNzdWU2MTEyMjk5MTY=", "number": 612, "title": "ENH: Add support for `radians` for Proj & Transformer.from_pipeline", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T16:52:39Z", "updated_at": "2020-05-15T22:03:52Z", "closed_at": "2020-05-15T22:03:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With this addition: https://github.com/OSGeo/PROJ/pull/2144\r\n\r\nWe are able to support input as radians. Currently, only degrees are supported.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/611", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/611/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/611/events", "html_url": "https://github.com/pyproj4/pyproj/issues/611", "id": 611095070, "node_id": "MDU6SXNzdWU2MTEwOTUwNzA=", "number": 611, "title": "2.6.1 Release", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-02T03:08:29Z", "updated_at": "2020-05-04T12:36:34Z", "closed_at": "2020-05-04T02:12:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pyproj4/pyproj/releases/tag/2.6.1rc0\r\n\r\nThe plan is to release with PROJ 7.0.1 in the wheels\r\n\r\nRelease Candidate 0 Status:\r\n- [x] Linux/OSX wheels (https://github.com/pyproj4/pyproj-wheels/pull/24)\r\n- [x] Windows wheels (ping @cgohlke)\r\n- [x] Conda Forge (https://github.com/conda-forge/pyproj-feedstock/pull/71)\r\n- [x] Debian (ping @sebastic)\r\n\r\nPlan to release when testing is completed or May 4th. Testing is always appreciated, but definitely not required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/606", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/606/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/606/events", "html_url": "https://github.com/pyproj4/pyproj/issues/606", "id": 606808688, "node_id": "MDU6SXNzdWU2MDY4MDg2ODg=", "number": 606, "title": "ENH: Use `from_user_input` in __eq__ when comparing CRS sub-classes (i.e. PrimeMeridian, Datum, Ellipsoid, etc.).", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-25T16:43:31Z", "updated_at": "2020-05-16T19:29:00Z", "closed_at": "2020-05-16T19:29:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Ref: https://github.com/pyproj4/pyproj/pull/596#issuecomment-614448662\r\n\r\nCurrent behavior:\r\n```\r\nIn [12]: crs = CRS(\"epsg:4326\")    \r\n\r\nIn [13]: crs.datum   \r\nOut[13]: \r\nDATUM[\"World Geodetic System 1984\",\r\n    ELLIPSOID[\"WGS 84\",6378137,298.257223563,\r\n        LENGTHUNIT[\"metre\",1]],\r\n    ID[\"EPSG\",6326]]\r\n\r\nIn [14]: crs.datum == pyproj.crs.Datum.from_epsg(6326)   \r\nOut[14]: True\r\n\r\nIn [16]: crs.datum == \"EPSG:6326\"   \r\nOut[16]: False\r\n\r\nIn [17]: crs.datum == 6326     \r\nOut[17]: False\r\n```\r\n\r\nThings to watch out for:\r\n- `Datum.from_name` method could change behavior depending on the type of datum selected to create. So, it could say they aren't equal when they are or the other way around.\r\n  - One option would be to update behavior of `Datum.from_user_input` to iterate over the different datum types on failure. More investigation needed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/605", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/605/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/605/events", "html_url": "https://github.com/pyproj4/pyproj/issues/605", "id": 606218164, "node_id": "MDU6SXNzdWU2MDYyMTgxNjQ=", "number": 605, "title": "EPSG 32630 not working anymore", "user": {"login": "mraspaud", "id": 167802, "node_id": "MDQ6VXNlcjE2NzgwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/167802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraspaud", "html_url": "https://github.com/mraspaud", "followers_url": "https://api.github.com/users/mraspaud/followers", "following_url": "https://api.github.com/users/mraspaud/following{/other_user}", "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions", "organizations_url": "https://api.github.com/users/mraspaud/orgs", "repos_url": "https://api.github.com/users/mraspaud/repos", "events_url": "https://api.github.com/users/mraspaud/events{/privacy}", "received_events_url": "https://api.github.com/users/mraspaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291901924, "node_id": "MDU6TGFiZWwxMjkxOTAxOTI0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/documentation", "name": "documentation", "color": "0052cc", "default": true, "description": "Docs need updating"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-24T10:40:44Z", "updated_at": "2020-05-02T00:03:24Z", "closed_at": "2020-05-02T00:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pyproj                                                                                                                         \r\npyproj.__version__                                                                                                                    \r\n# '2.6.0'\r\n\r\nfrom pyproj import CRS                                                                                                                \r\nCRS('epsg:32630')\r\n```\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/a001673/miniconda3/envs/py3/lib/python3.8/site-packages/pyproj/crs/crs.py\", line 296, in __init__\r\n    super().__init__(projstring)\r\n  File \"pyproj/_crs.pyx\", line 2338, in pyproj._crs._CRS.__init__\r\npyproj.exceptions.CRSError: Invalid projection: epsg:32630: (Internal Proj Error: proj_create: cannot build projectedCRS 32630: cannot build geodeticCRS 4326: SQLite error on SELECT name, ellipsoid_auth_name, ellipsoid_code, prime_meridian_auth_name, prime_meridian_code, area_of_use_auth_name, area_of_use_code, publication_date, deprecated FROM geodetic_datum WHERE auth_name = ? AND code = ?: no such column: publication_date)\r\n```\r\n\r\n#### Problem description\r\n\r\nA year or 2 ago, we were working with this projection and it was working fine (ftr: Sentinel 2 level 1c files).\r\n\r\nHowever, there seems to be a problem with this projection now when creating a CRS with it.\r\n\r\n#### Expected Output\r\n\r\nA usable CRS object.\r\n\r\n#### Environment Information\r\n```\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /home/a001673/miniconda3/envs/py3/lib/python3.8/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.8.2 | packaged by conda-forge | (default, Apr 24 2020, 08:20:52)  [GCC 7.3.0]\r\nexecutable: /home/a001673/miniconda3/envs/py3/bin/python\r\n   machine: Linux-4.18.0-147.5.1.el8_1.x86_64-x86_64-with-glibc2.10\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 46.1.3.post20200325\r\n    Cython: 0.29.14\r\n```\r\n\r\n#### Installation method\r\n - conda\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list | grep -E \"proj|aenum\"\r\nproj                      6.3.1                hc80f0dc_1    conda-forge\r\npyproj                    2.6.0            py38h95a477d_0    conda-forge\r\n\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n     active environment : py3\r\n    active env location : /home/a001673/miniconda3/envs/py3\r\n            shell level : 2\r\n       user config file : /home/a001673/.condarc\r\n populated config files : /home/a001673/.condarc\r\n          conda version : 4.8.3\r\n    conda-build version : not installed\r\n         python version : 3.7.4.final.0\r\n       virtual packages : __glibc=2.28\r\n       base environment : /home/a001673/miniconda3  (writable)\r\n           channel URLs : https://conda.anaconda.org/conda-forge/linux-64\r\n                          https://conda.anaconda.org/conda-forge/noarch\r\n                          https://repo.anaconda.com/pkgs/main/linux-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/linux-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /home/a001673/miniconda3/pkgs\r\n                          /home/a001673/.conda/pkgs\r\n       envs directories : /home/a001673/miniconda3/envs\r\n                          /home/a001673/.conda/envs\r\n               platform : linux-64\r\n             user-agent : conda/4.8.3 requests/2.23.0 CPython/3.7.4 Linux/4.18.0-147.5.1.el8_1.x86_64 rhel/8.1 glibc/2.28\r\n                UID:GID : 62310:2000\r\n             netrc file : None\r\n           offline mode : False\r\n\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/604", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/604/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/604/events", "html_url": "https://github.com/pyproj4/pyproj/issues/604", "id": 601239651, "node_id": "MDU6SXNzdWU2MDEyMzk2NTE=", "number": 604, "title": "Does to_wkt use PROJ version to determine WKT version to use?", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-16T16:46:30Z", "updated_at": "2020-04-16T17:14:49Z", "closed_at": "2020-04-16T17:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm in the process of converting the pyresample project to use WKT internally by calling `CRS.to_wkt()`. We've had issues in the past with other projects where we would pass `pyproj.CRS.to_wkt()` to rasterio's CRS object. Rasterio seemed to depend on the version of GDAL installed (GDAL 3 -> WKT2 supported, otherwise WKT1). So I'm wondering, does pyproj's support of WKT2 depend on the version of PROJ? Is there ever a chance for a user to install current pyproj with an old-ish PROJ and get errors when `to_wkt` tries to convert to WKT2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/600", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/600/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/600/events", "html_url": "https://github.com/pyproj4/pyproj/issues/600", "id": 599850950, "node_id": "MDU6SXNzdWU1OTk4NTA5NTA=", "number": 600, "title": ".get_factors() returns lon/lat limit errors", "user": {"login": "wg1562", "id": 59520869, "node_id": "MDQ6VXNlcjU5NTIwODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/59520869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wg1562", "html_url": "https://github.com/wg1562", "followers_url": "https://api.github.com/users/wg1562/followers", "following_url": "https://api.github.com/users/wg1562/following{/other_user}", "gists_url": "https://api.github.com/users/wg1562/gists{/gist_id}", "starred_url": "https://api.github.com/users/wg1562/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wg1562/subscriptions", "organizations_url": "https://api.github.com/users/wg1562/orgs", "repos_url": "https://api.github.com/users/wg1562/repos", "events_url": "https://api.github.com/users/wg1562/events{/privacy}", "received_events_url": "https://api.github.com/users/wg1562/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T20:50:47Z", "updated_at": "2020-04-15T01:40:31Z", "closed_at": "2020-04-15T01:40:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed 2.6.0 think I got .get_factors() to work. However, if I submit coordinates (lam,phi) as decimal degrees, I get an \"latitude or longitude exceeded limits\" error. If I convert coordinates to radians, I get results, but they are far off from what is expected. Am I using the function correctly? Please see code below.\r\n\r\nThanks.\r\n```\r\nimport pyproj\r\nfrom pyproj import CRS\r\nimport math\r\n\r\nlam = -120 \r\nphi = 34   \r\nlam_r = lam * math.pi/180\r\nphi_r = phi * math.pi/180   \r\n#epsg='2770' #2770 is CA 5 ZONE SPC\r\nepsg = '3717'  #3717 is UTM 10N for WGS84\r\ncrs_data = CRS.from_epsg(epsg)\r\nprint (crs_data.get_geod)\r\nepsg_str = 'EPSG:'+ epsg\r\nproj_used = pyproj.Proj(epsg_str) \r\nx,y = proj_used(lam, phi)\r\nprint(lam, phi)\r\nprint(lam_r, phi_r)\r\nprint (x, y)\r\nfactors = proj_used.get_factors(lam,phi,False,True)\r\nprint (factors)\r\n#Results from NCAT:\r\n#https://www.ngs.noaa.gov/NCAT/\r\n#LLH = (-120,34,100)  #test coordinates\r\n#epsg = 3717 is UTM 10N for WGS84\r\n#Northing (m)= 3,766,214.716\r\n#Easting (m)= 777,091.295\r\n#convDMS = 01 40 43.13\r\n#convRAD = 0.02929792\r\n#gridSF = 1.00054660\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/599", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/599/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/599/events", "html_url": "https://github.com/pyproj4/pyproj/issues/599", "id": 599217492, "node_id": "MDU6SXNzdWU1OTkyMTc0OTI=", "number": 599, "title": "PROJ 7.1.0", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-14T00:37:14Z", "updated_at": "2020-07-01T13:15:17Z", "closed_at": "2020-07-01T13:15:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/OSGeo/PROJ/milestone/22\r\n\r\nExpected release: July 01, 2020\r\n\r\nRelevant to `pyproj`\r\n\r\n- https://github.com/OSGeo/PROJ/pull/2144 (`Add proj_degree_input() and proj_degree_output() `)\r\n- https://github.com/OSGeo/PROJ/pull/2065 (`Add proj_get_units_from_database()`)\r\n  - This deprecates `proj_list_angular_units` and `proj_list_linear_units`\r\n\r\n\r\nCurrently, `pyproj` is using these deprecated methods `proj_list_angular_units` and `proj_list_linear_units`. So, I think that `pyproj` 3 should require `PROJ` 7.1+, and update to be future compatible.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/598", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/598/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/598/events", "html_url": "https://github.com/pyproj4/pyproj/issues/598", "id": 599040507, "node_id": "MDU6SXNzdWU1OTkwNDA1MDc=", "number": 598, "title": "Bound CRS does not roundtrip through WKT", "user": {"login": "brendan-ward", "id": 3375604, "node_id": "MDQ6VXNlcjMzNzU2MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3375604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendan-ward", "html_url": "https://github.com/brendan-ward", "followers_url": "https://api.github.com/users/brendan-ward/followers", "following_url": "https://api.github.com/users/brendan-ward/following{/other_user}", "gists_url": "https://api.github.com/users/brendan-ward/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendan-ward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendan-ward/subscriptions", "organizations_url": "https://api.github.com/users/brendan-ward/orgs", "repos_url": "https://api.github.com/users/brendan-ward/repos", "events_url": "https://api.github.com/users/brendan-ward/events{/privacy}", "received_events_url": "https://api.github.com/users/brendan-ward/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-13T18:03:56Z", "updated_at": "2020-04-14T00:32:22Z", "closed_at": "2020-04-14T00:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\nUsing the Bound CRS example from the [geopandas docs](https://geopandas.readthedocs.io/en/latest/projections.html#i-get-a-bound-crs):\r\n\r\n```\r\n>>> import pyproj\r\n>>> crs = pyproj.CRS(\"+proj=lcc +lat_1=51.16666723333333 +lat_2=49.8333339 +lat_0=90 +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438 +ellps=intl +towgs84=106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1 +units=m +no_defs\")\r\n>>> crs.to_wkt()\r\n'BOUNDCRS[SOURCECRS[PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"Unknown based on International 1909 (Hayford) ellipsoid\",ELLIPSOID[\"International 1909 (Hayford)\",6378388,297,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Lambert Conic Conformal (2SP)\",ID[\"EPSG\",9802]],PARAMETER[\"Latitude of false origin\",90,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8821]],PARAMETER[\"Longitude of false origin\",4.36748666666667,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8822]],PARAMETER[\"Latitude of 1st standard parallel\",51.1666672333333,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8823]],PARAMETER[\"Latitude of 2nd standard parallel\",49.8333339,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8824]],PARAMETER[\"Easting at false origin\",150000.013,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8826]],PARAMETER[\"Northing at false origin\",5400088.438,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8827]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]],TARGETCRS[GEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],CS[ellipsoidal,2],AXIS[\"latitude\",north,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433]],AXIS[\"longitude\",east,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]]],ABRIDGEDTRANSFORMATION[\"Transformation from unknown to WGS84\",METHOD[\"Position Vector transformation (geog2D domain)\",ID[\"EPSG\",9606]],PARAMETER[\"X-axis translation\",106.869,ID[\"EPSG\",8605]],PARAMETER[\"Y-axis translation\",-52.2978,ID[\"EPSG\",8606]],PARAMETER[\"Z-axis translation\",103.724,ID[\"EPSG\",8607]],PARAMETER[\"X-axis rotation\",-0.33657,ID[\"EPSG\",8608]],PARAMETER[\"Y-axis rotation\",0.456955,ID[\"EPSG\",8609]],PARAMETER[\"Z-axis rotation\",-1.84218,ID[\"EPSG\",8610]],PARAMETER[\"Scale difference\",1.000001,ID[\"EPSG\",8611]]]]'\r\n```\r\n\r\nConverting through WKT does not return the original CRS:\r\n\r\n```\r\n>>> crs2 = pyproj.CRS(crs.to_wkt())\r\n>>> crs2 == crs\r\nFalse\r\n>>> crs.to_wkt() == crs2.to_wkt()\r\nFalse\r\n>>> crs2.to_wkt()\r\n'BOUNDCRS[SOURCECRS[PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"Unknown based on International 1909 (Hayford) ellipsoid\",ELLIPSOID[\"International 1909 (Hayford)\",6378388,297,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Lambert Conic Conformal (2SP)\",ID[\"EPSG\",9802]],PARAMETER[\"Latitude of false origin\",90,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8821]],PARAMETER[\"Longitude of false origin\",4.36748666666667,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8822]],PARAMETER[\"Latitude of 1st standard parallel\",51.1666672333333,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8823]],PARAMETER[\"Latitude of 2nd standard parallel\",49.8333339,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8824]],PARAMETER[\"Easting at false origin\",150000.013,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8826]],PARAMETER[\"Northing at false origin\",5400088.438,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8827]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]],TARGETCRS[GEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],CS[ellipsoidal,2],AXIS[\"geodetic latitude (Lat)\",north,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433]],AXIS[\"geodetic longitude (Lon)\",east,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]]],ABRIDGEDTRANSFORMATION[\"Transformation from unknown to WGS84\",METHOD[\"Position Vector transformation (geog2D domain)\",ID[\"EPSG\",9606]],PARAMETER[\"X-axis translation\",106.869,ID[\"EPSG\",8605]],PARAMETER[\"Y-axis translation\",-52.2978,ID[\"EPSG\",8606]],PARAMETER[\"Z-axis translation\",103.724,ID[\"EPSG\",8607]],PARAMETER[\"X-axis rotation\",-0.33657,ID[\"EPSG\",8608]],PARAMETER[\"Y-axis rotation\",0.456955,ID[\"EPSG\",8609]],PARAMETER[\"Z-axis rotation\",-1.84218,ID[\"EPSG\",8610]],PARAMETER[\"Scale difference\",1.000001,ID[\"EPSG\",8611]]]]'\r\n```\r\n\r\nThe WKT derived from each is a bit different:\r\n```\r\n>>> len(crs.to_wkt())\r\n2020\r\n>>> len(crs2.to_wkt())\r\n2050\r\n```\r\n\r\n\r\n#### Expected Output\r\n\r\nBound CRS information should roundtrip through WKT, right?  I didn't see anything in the docs to suggest that this should be lossy.\r\n\r\n\r\n#### Environment Information\r\n```\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /Users/bcward/opt/miniconda3/envs/geopandas/lib/python3.8/site-packages/pyproj-2.6.0-py3.8-macosx-10.9-x86_64.egg/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.8.2 (default, Mar 26 2020, 10:43:30)  [Clang 4.0.1 (tags/RELEASE_401/final)]\r\nexecutable: /Users/bcward/opt/miniconda3/envs/geopandas/bin/python\r\n   machine: macOS-10.15.3-x86_64-i386-64bit\r\n```\r\n\r\n#### Installation method\r\nconda\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/597", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/597/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/597/events", "html_url": "https://github.com/pyproj4/pyproj/issues/597", "id": 598629304, "node_id": "MDU6SXNzdWU1OTg2MjkzMDQ=", "number": 597, "title": "Undefined symbol: proj_context_set_autoclose_database", "user": {"login": "Nqabz", "id": 16774903, "node_id": "MDQ6VXNlcjE2Nzc0OTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/16774903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nqabz", "html_url": "https://github.com/Nqabz", "followers_url": "https://api.github.com/users/Nqabz/followers", "following_url": "https://api.github.com/users/Nqabz/following{/other_user}", "gists_url": "https://api.github.com/users/Nqabz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nqabz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nqabz/subscriptions", "organizations_url": "https://api.github.com/users/Nqabz/orgs", "repos_url": "https://api.github.com/users/Nqabz/repos", "events_url": "https://api.github.com/users/Nqabz/events{/privacy}", "received_events_url": "https://api.github.com/users/Nqabz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-13T02:20:03Z", "updated_at": "2020-04-13T17:40:54Z", "closed_at": "2020-04-13T17:40:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In trying to install and work with [sentinelhub](https://pypi.org/project/sentinelhub/#files) there is a dependency to `pyproj` package. Any tips to what could be going wrong with `pyproj`\r\n```\r\nfrom pyproj import _datadir\r\nImportError: lib/python3.6/site-packages/pyproj-2.6.0-py3.6-linux-ppc64le.egg/pyproj/_datadir.cpython-36m-powerpc64le-linux-gnu.so: undefined symbol: proj_context_set_autoclose_database\r\n```\r\n\r\n```\r\nfrom sentinelhub.common import BBox, CRS\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"lib/python3.6/site-packages/sentinelhub-3.0.2-py3.6.egg/sentinelhub/__init__.py\", line 5, in <module>\r\n    from .data_request import WmsRequest, WcsRequest, FisRequest, GeopediaWmsRequest, GeopediaImageRequest, \\\r\n  File \"lib/python3.6/site-packages/sentinelhub-3.0.2-py3.6.egg/sentinelhub/data_request.py\", line 13, in <module>\r\n    from .ogc import OgcImageService\r\n  File \"/lib/python3.6/site-packages/sentinelhub-3.0.2-py3.6.egg/sentinelhub/ogc.py\", line 11, in <module>\r\n    from .constants import ServiceType, DataSource, MimeType, CRS, SHConstants, CustomUrlParam\r\n  File \"/lib/python3.6/site-packages/sentinelhub-3.0.2-py3.6.egg/sentinelhub/constants.py\", line 12, in <module>\r\n    import pyproj\r\n  File \"lib/python3.6/site-packages/pyproj-2.6.0-py3.6-linux-ppc64le.egg/pyproj/__init__.py\", line 51, in <module>\r\n    from pyproj import _datadir\r\nImportError: lib/python3.6/site-packages/pyproj-2.6.0-py3.6-linux-ppc64le.egg/pyproj/_datadir.cpython-36m-powerpc64le-linux-gnu.so: undefined symbol: proj_context_set_autoclose_database\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/593", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/593/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/593/events", "html_url": "https://github.com/pyproj4/pyproj/issues/593", "id": 595309782, "node_id": "MDU6SXNzdWU1OTUzMDk3ODI=", "number": 593, "title": "Add CRS.to_rasterio()", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291901924, "node_id": "MDU6TGFiZWwxMjkxOTAxOTI0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/documentation", "name": "documentation", "color": "0052cc", "default": true, "description": "Docs need updating"}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T17:53:26Z", "updated_at": "2020-04-16T00:24:49Z", "closed_at": "2020-04-16T00:24:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to:\r\n- https://github.com/mapbox/rasterio/issues/1898\r\n- https://github.com/corteva/rioxarray/issues/92\r\n\r\nIt would only work if you have `rasterio` installed (import rasterio in the method). Essentially, it would return a `rasterio.crs.CRS` object using the WKT format based on the `__gdal_version__`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/592", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/592/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/592/events", "html_url": "https://github.com/pyproj4/pyproj/issues/592", "id": 592829700, "node_id": "MDU6SXNzdWU1OTI4Mjk3MDA=", "number": 592, "title": "CRS conversion between PROJ and WKT loses lat_ts parameter", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-04-02T18:11:04Z", "updated_at": "2020-04-14T00:30:49Z", "closed_at": "2020-04-14T00:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a case where I'm converting from a PROJ dict to a CRS object then storing it as WKT. When I then request the PROJ back from the WKT (WKT -> CRS object -> PROJ dict) I lose the `+lat_ts` parameter.\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\nA \"Minimal, Complete and Verifiable Example\" will make it much easier for maintainers to help you:\r\nhttp://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n\r\n```python\r\nfrom pyproj import CRS\r\ncrs = CRS({'a': '6378144.0', 'b': '6356759.0', 'lat_0': '50.00', 'lat_ts': '50.00', 'lon_0': '8.00', 'proj': 'stere'})\r\ncrs.to_proj4()\r\n# '+proj=stere +a=6378144.0 +b=6356759.0 +lat_0=50.00 +lat_ts=50.00 +lon_0=8.00 +type=crs'\r\nCRS(crs.to_wkt()).to_proj4()\r\n# '+proj=stere +lat_0=50 +lon_0=8 +k=1 +x_0=0 +y_0=0 +a=6378144 +rf=298.253168108487 +units=m +no_defs +type=crs'\r\n\r\ncrs.to_wkt()\r\n# 'PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",6378144,298.253168108487,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Stereographic\"],PARAMETER[\"Latitude of natural origin\",50,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",8,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"Scale factor at natural origin\",1,SCALEUNIT[\"unity\",1],ID[\"EPSG\",8805]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]'\r\n```\r\n#### Problem description\r\n\r\nThe `lat_ts` parameter disappears. I think this is a valid PROJ definition but the WKT seems to lose the parameter.\r\n\r\n#### Expected Output\r\n\r\nKeep the `lat_ts` parameter.\r\n\r\n#### Environment Information\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python -m pyproj -v`\r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.5.0\r\n      PROJ: 6.3.1\r\n  data dir: /home/davidh/miniconda3/envs/satpy_py37/share/proj\r\n\r\nSystem:\r\n    python: 3.7.6 | packaged by conda-forge | (default, Jan  7 2020, 22:33:48)  [GCC 7.3.0]\r\nexecutable: /home/davidh/miniconda3/envs/satpy_py37/bin/python\r\n   machine: Linux-5.3.0-7642-generic-x86_64-with-debian-buster-sid\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 46.0.0.post20200311\r\n    Cython: 0.29.15\r\n```\r\n\r\n\r\n#### Installation method\r\nconda with conda-forge\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list | grep -E \"proj|aenum\"\r\n\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/589", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/589/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/589/events", "html_url": "https://github.com/pyproj4/pyproj/issues/589", "id": 592125319, "node_id": "MDU6SXNzdWU1OTIxMjUzMTk=", "number": 589, "title": "UnicodeDecodeError when run multithreaded", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-01T18:41:54Z", "updated_at": "2020-04-16T16:38:45Z", "closed_at": "2020-04-16T16:38:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\n# TODO: working on it\r\n```\r\n#### Problem description\r\n\r\nThis is something that's been noticed in Satpy specifically and is being tracked here: https://github.com/pytroll/satpy/issues/1114\r\n\r\nThe bottom line is that a couple of our users have been getting UnicodeDecodeErrors or errors about bad proj definitions. The really annoying bit is that is seems to be some sort of race condition or other multi-threading related issue. We are using xarray+dask and have a pyproj CRS object in the `.coords` of our DataArrays. We get errors like:\r\n\r\n```\r\n    return [_execute_task(a, cache) for a in arg]\r\n  File \"/work/geo2grid/lib/python3.7/site-packages/dask/core.py\", line 122, in _execute_task\r\n    elif arg in cache:\r\n  File \"/work/geo2grid/lib/python3.7/site-packages/pyproj/crs/crs.py\", line 869, in __hash__\r\n    return hash(self.to_wkt())\r\n  File \"pyproj/_crs.pyx\", line 451, in pyproj._crs.Base.to_wkt\r\n  File \"pyproj/_crs.pyx\", line 120, in pyproj._crs._to_wkt\r\n  File \"pyproj/_crs.pyx\", line 24, in pyproj._crs.cstrdecode\r\n  File \"/work/geo2grid/lib/python3.7/site-packages/pyproj/compat.py\", line 21, in pystrdecode\r\n    return cstr.decode(\"utf-8\")\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\nCommand exited with non-zero status 1\r\n```\r\n\r\nOr:\r\n\r\n```\r\n  File \"C:\\ProgramData\\Miniconda3\\lib\\site-packages\\pyresample\\geometry.py\", line 1012, in invproj\r\n    target_proj = Proj(proj_dict)\r\n  File \"C:\\ProgramData\\Miniconda3\\lib\\site-packages\\pyresample\\_spatial_mp.py\", line 121, in __init__\r\n    **kwargs)\r\n  File \"C:\\ProgramData\\Miniconda3\\lib\\site-packages\\pyproj\\proj.py\", line 171, in __init__\r\n    super().__init__(cstrencode(projstring.strip()))\r\n  File \"pyproj/_proj.pyx\", line 30, in pyproj._proj.Proj.__init__\r\npyproj.exceptions.ProjError: Invalid projection b'C'.: (Internal Proj Error: proj_create: unrecognized format / unknown name)\r\n```\r\n\r\nAnd other times it will print out the invalid projection with characters mixed in where they shouldn't be. Like very clearly wrong changes where `+proj=merc` is changed to some odd unicode character in place of the `p` in `proj`.\r\n\r\nI'm trying my best to reproduce this, but so far have been unsuccessful which is why I don't have a reproducible example yet. I've only ever noticed this in logs.\r\n\r\n#### Expected Output\r\n\r\nNo error.\r\n\r\n#### Environment Information\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python -m pyproj -v`\r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.5.0\r\n      PROJ: 6.3.0\r\n  data dir: /data1/users/davidh/miniconda3/envs/geo2grid_dist/share/proj\r\n\r\nSystem:\r\n    python: 3.7.6 | packaged by conda-forge | (default, Jan  7 2020, 22:33:48)  [GCC 7.3.0]\r\nexecutable: /data1/users/davidh/miniconda3/envs/geo2grid_dist/bin/python\r\n   machine: Linux-2.6.32-573.12.1.el6.x86_64-x86_64-with-centos-6.10-Final\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 45.2.0.post20200209\r\n    Cython: None\r\n```\r\n\r\nSpecific conda-forge builds:\r\n\r\n```\r\nproj                      6.3.0                hc80f0dc_0    conda-forge\r\npyproj                    2.5.0            py37h8ff28aa_0    conda-forge\r\n```\r\n\r\n#### Installation method\r\n - conda, pip wheel, from source, etc...\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\nI mentioned specific conda packages above, but we've seen this now on Ubuntu, Windows, and a CentOS 7 docker container running a conda-pack'd version of a conda-forge environment.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/586", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/586/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/586/events", "html_url": "https://github.com/pyproj4/pyproj/issues/586", "id": 590686049, "node_id": "MDU6SXNzdWU1OTA2ODYwNDk=", "number": 586, "title": "What does \"accuracy\" mean for a Transformer or CoordinateOperation?", "user": {"login": "alpha-beta-soup", "id": 5925045, "node_id": "MDQ6VXNlcjU5MjUwNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5925045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alpha-beta-soup", "html_url": "https://github.com/alpha-beta-soup", "followers_url": "https://api.github.com/users/alpha-beta-soup/followers", "following_url": "https://api.github.com/users/alpha-beta-soup/following{/other_user}", "gists_url": "https://api.github.com/users/alpha-beta-soup/gists{/gist_id}", "starred_url": "https://api.github.com/users/alpha-beta-soup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alpha-beta-soup/subscriptions", "organizations_url": "https://api.github.com/users/alpha-beta-soup/orgs", "repos_url": "https://api.github.com/users/alpha-beta-soup/repos", "events_url": "https://api.github.com/users/alpha-beta-soup/events{/privacy}", "received_events_url": "https://api.github.com/users/alpha-beta-soup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T00:13:01Z", "updated_at": "2020-04-14T00:29:23Z", "closed_at": "2020-04-14T00:29:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "- [pyproj.crs.CoordinateOperation.accuracy](https://pyproj4.github.io/pyproj/stable/api/crs/coordinate_operation.html?highlight=accuracy#pyproj.crs.CoordinateOperation.accuracy)\r\n- [pyproj.transformer.Transformer.accuracy](https://pyproj4.github.io/pyproj/stable/api/transformer.html?highlight=accuracy#pyproj.transformer.Transformer.accuracy)\r\n\r\nThe documentation is unclear (to me) about what \"accuracy\" refers to in these contexts. All that is stated is that the value is of type float and that it represents:\r\n>  The accuracy (in metre) of a coordinate operation.\r\n\r\nI understand that the accuracy is used as part of the sorting algorithm to find the best available transformation. But for what else can I use this value? Is it useful to help identify false precision resulting from a transformation?\r\n\r\nAn example:\r\n- Input: `POINT(174.8 -41.3)` (interpreted via `shapely.wkt.loads` - I can add code if requested) \r\n- Input CRS: `EPSG:4326`\r\n- Output CRS: `EPSG:2193`\r\n- pyproj-generated transformation description: `axis order change (2D) + Inverse of NZGD2000 to WGS 84 (1) + New Zealand Transverse Mercator 2000 + axis order change (2D)`\r\n- **Transformation accuracy: 1.0 metres**\r\n- Output: `POINT (1750697.5213341913186014 5426376.6231682747602463)` (`shapely.ops.transform` with a `pyproj.transformer.Transformer` then `shapely.wkt.dumps`)\r\n\r\nI can limit the output to a particular precision using `rounding_precision` when calling the transformation computation, but my underlying query is whether I can use the reported accuracy of the transformation to help decide whether/how I should truncate the output to avoid reporting false precision, i.e. precision which is not supported by the input's precision \u2014 or is this based on some faulty interpretation of `accuracy` in this context?\r\n\r\nIn any case, it would be valuable to have a bit more text about what the accuracy property means in practical   terms", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/585", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/585/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/585/events", "html_url": "https://github.com/pyproj4/pyproj/issues/585", "id": 590574839, "node_id": "MDU6SXNzdWU1OTA1NzQ4Mzk=", "number": 585, "title": "`geographic_crs_name` missing from the CF version of a CRS", "user": {"login": "mraspaud", "id": 167802, "node_id": "MDQ6VXNlcjE2NzgwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/167802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraspaud", "html_url": "https://github.com/mraspaud", "followers_url": "https://api.github.com/users/mraspaud/followers", "following_url": "https://api.github.com/users/mraspaud/following{/other_user}", "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions", "organizations_url": "https://api.github.com/users/mraspaud/orgs", "repos_url": "https://api.github.com/users/mraspaud/repos", "events_url": "https://api.github.com/users/mraspaud/events{/privacy}", "received_events_url": "https://api.github.com/users/mraspaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-30T20:30:50Z", "updated_at": "2020-04-02T12:22:48Z", "closed_at": "2020-04-02T12:22:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nfrom pyproj import CRS                                                                                                                \r\ncrs = CRS.from_proj4('+proj=omerc +alpha=8.998112717187938 +lat_0=0.0 +lonc=13.809602948622212 +gamma=0 +ellps=sphere')               \r\nprint(crs.to_cf())                                                                                                                           \r\n```\r\n\r\n#### Problem description\r\n\r\nWhen using the latest cfchecker (4.0.0) on a netcdf file containing the output of `crs.to_cf`, we get an error:\r\n```\r\n------------------\r\nChecking variable: oblique_mercator\r\n------------------\r\nINFO: (5.6): CF checker currently does not verify the syntax of the crs_wkt attribute which must conform to the CRS WKT specification\r\nERROR: (5.6): reference_ellipsoid_name, prime_meridian_name, horizontal_datum_name and geographic_crs_name must all be definied if any one is defined\r\n```\r\n\r\nIndeed, the output from `to_cf` in this case is:\r\n```python\r\n{'crs_wkt': 'PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\",ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Hotine Oblique Mercator (variant B)\",ID[\"EPSG\",9815]],PARAMETER[\"Latitude of projection centre\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8811]],PARAMETER[\"Longitude of projection centre\",13.8096029486222,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8812]],PARAMETER[\"Azimuth of initial line\",8.99811271718794,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8813]],PARAMETER[\"Angle from Rectified to Skew Grid\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8814]],PARAMETER[\"Scale factor on initial line\",1,SCALEUNIT[\"unity\",1],ID[\"EPSG\",8815]],PARAMETER[\"Easting at projection centre\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8816]],PARAMETER[\"Northing at projection centre\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8817]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]',\r\n 'semi_major_axis': 6370997.0,\r\n 'semi_minor_axis': 6370997.0,\r\n 'inverse_flattening': 0.0,\r\n 'reference_ellipsoid_name': 'Normal Sphere (r=6370997)',\r\n 'longitude_of_prime_meridian': 0.0,\r\n 'prime_meridian_name': 'Greenwich',\r\n 'horizontal_datum_name': 'Unknown based on Normal Sphere (r=6370997) ellipsoid',\r\n 'grid_mapping_name': 'oblique_mercator',\r\n 'latitude_of_projection_origin': 0.0,\r\n 'longitude_of_projection_origin': 13.809602948622212,\r\n 'azimuth_of_central_line': 8.998112717187938,\r\n 'scale_factor_at_projection_origin': 1.0,\r\n 'false_easting': 0.0,\r\n 'false_northing': 0.0}\r\n\r\n```\r\n\r\nAs you can see, `geographic_crs_name` is missing. As the CF document says: \r\n> Corresponds to a OGC WKT GEOGCS node name\r\n\r\nand I don't see one in the wkt attached.\r\n\r\nSo in conclusion, with this projection definition, it looks like to me that the `to_cf` method isn't generating a CF compliant grid mapping.\r\n\r\n#### Expected Output\r\n\r\nI would expect `geographic_crs_name` to be present in the keys of the returned dict.\r\n\r\n#### Environment Information\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /home/a001673/miniconda3/envs/py3/lib/python3.8/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.8.2 | packaged by conda-forge | (default, Mar 23 2020, 18:16:37)  [GCC 7.3.0]\r\nexecutable: /home/a001673/miniconda3/envs/py3/bin/python\r\n   machine: Linux-4.18.0-147.5.1.el8_1.x86_64-x86_64-with-glibc2.10\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 46.1.3.post20200325\r\n    Cython: 0.29.14\r\n\r\n\r\n#### Installation method\r\n - conda\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list | grep -E \"proj|aenum\"\r\nproj                      6.3.1                hc80f0dc_1    conda-forge\r\npyproj                    2.6.0            py38h95a477d_0    conda-forge\r\n\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n     active environment : py3\r\n    active env location : /home/a001673/miniconda3/envs/py3\r\n            shell level : 2\r\n       user config file : /home/a001673/.condarc\r\n populated config files : /home/a001673/.condarc\r\n          conda version : 4.8.3\r\n    conda-build version : not installed\r\n         python version : 3.7.4.final.0\r\n       virtual packages : __glibc=2.28\r\n       base environment : /home/a001673/miniconda3  (writable)\r\n           channel URLs : https://conda.anaconda.org/conda-forge/linux-64\r\n                          https://conda.anaconda.org/conda-forge/noarch\r\n                          https://repo.anaconda.com/pkgs/main/linux-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/linux-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /home/a001673/miniconda3/pkgs\r\n                          /home/a001673/.conda/pkgs\r\n       envs directories : /home/a001673/miniconda3/envs\r\n                          /home/a001673/.conda/envs\r\n               platform : linux-64\r\n             user-agent : conda/4.8.3 requests/2.23.0 CPython/3.7.4 Linux/4.18.0-147.5.1.el8_1.x86_64 rhel/8.1 glibc/2.28\r\n                UID:GID : 62310:2000\r\n             netrc file : None\r\n           offline mode : False\r\n\r\n\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/584", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/584/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/584/events", "html_url": "https://github.com/pyproj4/pyproj/issues/584", "id": 589742755, "node_id": "MDU6SXNzdWU1ODk3NDI3NTU=", "number": 584, "title": "class Proj throws errors when other keywords are in constructor", "user": {"login": "mwtoews", "id": 895458, "node_id": "MDQ6VXNlcjg5NTQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/895458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwtoews", "html_url": "https://github.com/mwtoews", "followers_url": "https://api.github.com/users/mwtoews/followers", "following_url": "https://api.github.com/users/mwtoews/following{/other_user}", "gists_url": "https://api.github.com/users/mwtoews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwtoews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwtoews/subscriptions", "organizations_url": "https://api.github.com/users/mwtoews/orgs", "repos_url": "https://api.github.com/users/mwtoews/repos", "events_url": "https://api.github.com/users/mwtoews/events{/privacy}", "received_events_url": "https://api.github.com/users/mwtoews/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291901924, "node_id": "MDU6TGFiZWwxMjkxOTAxOTI0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/documentation", "name": "documentation", "color": "0052cc", "default": true, "description": "Docs need updating"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-29T08:12:23Z", "updated_at": "2020-04-02T14:25:16Z", "closed_at": "2020-04-02T14:25:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Out in the wild, I see code snippets like this:\r\n```python\r\nfrom pyproj import Proj\r\n\r\ncrs = Proj('epsg:4326', preserve_units=True, errcheck=True)\r\n```\r\n#### Problem description\r\nWith pyproj<=2.5.0 there is no issue with this line, and I would guess `errcheck` was put here by the upstream user as it seems to be [documented](http://pyproj4.github.io/pyproj/stable/api/proj.html#pyproj-proj). I suspect these keyword options (including `inverse`) are actually ignored, as I don't see any difference with the behaviour of the resulting object.\r\n\r\nWith pyproj==2.6.0, any keyword option is passed to PROJ, e.g. `errcheck=True`, `inverse=True` or `bazoom=True` throws:\r\n```\r\n>>> pyproj.Proj('epsg:4326', preserve_units=True, errcheck=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/proj.py\", line 126, in __init__\r\n    self.crs = CRS.from_user_input(projparams, **kwargs)\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 440, in from_user_input\r\n    return CRS(value, **kwargs)\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 296, in __init__\r\n    super().__init__(projstring)\r\n  File \"pyproj/_crs.pyx\", line 2338, in pyproj._crs._CRS.__init__\r\npyproj.exceptions.CRSError: Invalid projection: epsg:4326 +errcheck: (Internal Proj Error: proj_create: crs not found)\r\n```\r\nor similar, but different error:\r\n```\r\n>>> pyproj.Proj('epsg:4326', preserve_units=True, errcheck=False)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/proj.py\", line 126, in __init__\r\n    self.crs = CRS.from_user_input(projparams, **kwargs)\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 440, in from_user_input\r\n    return CRS(value, **kwargs)\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 293, in __init__\r\n    projkwargs = _prepare_from_dict(kwargs, allow_json=False)\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 53, in _prepare_from_dict\r\n    return _prepare_from_string(\" \".join(pjargs))\r\n  File \"/tmp/venv/lib/python3.6/site-packages/pyproj/crs/crs.py\", line 58, in _prepare_from_string\r\n    raise CRSError(\"CRS is empty or invalid: {!r}\".format(in_crs_string))\r\npyproj.exceptions.CRSError: CRS is empty or invalid: ''\r\n```\r\n\r\n#### Expected Output\r\nEither use documented keywords (like `errcheck`) or perhaps a warning should be shown: \"ignored keywords: {'bazoom': True}\". As previous version did not throw an exceptions, new versions should also avoid throwing exceptions. If these keywords are no longer accepted, then remove them from the documentation, where appropriate.\r\n\r\n#### Environment Information\r\n - Output from: `python -m pyproj -v`\r\n<details>\r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /tmp/venv/lib/python3.6/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]\r\nexecutable: /tmp/venv/bin/python\r\n   machine: Linux-4.15.0-91-generic-x86_64-with-Ubuntu-18.04-bionic\r\n\r\nPython deps:\r\n       pip: 9.0.1\r\nsetuptools: 39.0.1\r\n    Cython: None\r\n```\r\n</details>\r\n\r\n#### Installation method\r\n - pip (via venv)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/583", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/583/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/583/events", "html_url": "https://github.com/pyproj4/pyproj/issues/583", "id": 588129663, "node_id": "MDU6SXNzdWU1ODgxMjk2NjM=", "number": 583, "title": "Tests failing on Alpine Linux", "user": {"login": "russkel", "id": 1073606, "node_id": "MDQ6VXNlcjEwNzM2MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1073606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/russkel", "html_url": "https://github.com/russkel", "followers_url": "https://api.github.com/users/russkel/followers", "following_url": "https://api.github.com/users/russkel/following{/other_user}", "gists_url": "https://api.github.com/users/russkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/russkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/russkel/subscriptions", "organizations_url": "https://api.github.com/users/russkel/orgs", "repos_url": "https://api.github.com/users/russkel/repos", "events_url": "https://api.github.com/users/russkel/events{/privacy}", "received_events_url": "https://api.github.com/users/russkel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1936398131, "node_id": "MDU6TGFiZWwxOTM2Mzk4MTMx", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/test", "name": "test", "color": "d62c32", "default": false, "description": "Test related issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-26T03:33:17Z", "updated_at": "2020-03-27T04:20:22Z", "closed_at": "2020-03-27T04:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\nHi, I am trying to compile the pyproj library on Alpine Linux. I filed a few bug fixes with the proj project (and musl libc) that were all fixed enabling the proj library to compile and pass tests on Alpine Linux 32/64b on a number of architectures. I am not having similar luck with pyproj though.\r\n\r\n\r\n#### Problem description\r\nPlease see the attached build and test log, there are a number of failures:\r\n\r\n[job.log](https://github.com/pyproj4/pyproj/files/4384847/job.log)\r\n\r\n### Failures\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n_______________________________ test_datum[Proj] _______________________________\r\n\r\nproj_class = <class 'pyproj.proj.Proj'>, aoi_data_directory = None\r\n\r\n    @pytest.mark.parametrize(\"proj_class\", [Proj, CRS])\r\n    def test_datum(proj_class, aoi_data_directory):\r\n        p1 = proj_class(proj=\"latlong\", datum=\"WGS84\")\r\n        s_1 = -111.5\r\n        s_2 = 45.25919444444\r\n        p2 = proj_class(proj=\"utm\", zone=10, datum=\"NAD27\")\r\n        x2, y2 = transform(p1, p2, s_1, s_2)\r\n        if LooseVersion(proj_version_str) < LooseVersion(\"6.3.0\"):\r\n            assert_almost_equal((x2, y2), (1402291.0833290431, 5076289.591846835))\r\n        else:\r\n            # https://github.com/OSGeo/PROJ/issues/1808\r\n>           assert_almost_equal((x2, y2), (1402285.9829252, 5076292.4212746))\r\nE           AssertionError: \r\nE           Arrays are not almost equal to 7 decimals\r\nE           \r\nE           Mismatched elements: 2 / 2 (100%)\r\nE           Max absolute difference: 4.21450818\r\nE           Max relative difference: 1.82410064e-06\r\nE            x: array([1402288.540836 , 5076296.6357828])\r\nE            y: array([1402285.9829252, 5076292.4212746])\r\n\r\ntest/test_datum.py:20: AssertionError\r\n_______________________________ test_datum[CRS] ________________________________\r\n\r\nproj_class = <class 'pyproj.crs.crs.CRS'>, aoi_data_directory = None\r\n\r\n    @pytest.mark.parametrize(\"proj_class\", [Proj, CRS])\r\n    def test_datum(proj_class, aoi_data_directory):\r\n        p1 = proj_class(proj=\"latlong\", datum=\"WGS84\")\r\n        s_1 = -111.5\r\n        s_2 = 45.25919444444\r\n        p2 = proj_class(proj=\"utm\", zone=10, datum=\"NAD27\")\r\n        x2, y2 = transform(p1, p2, s_1, s_2)\r\n        if LooseVersion(proj_version_str) < LooseVersion(\"6.3.0\"):\r\n            assert_almost_equal((x2, y2), (1402291.0833290431, 5076289.591846835))\r\n        else:\r\n            # https://github.com/OSGeo/PROJ/issues/1808\r\n>           assert_almost_equal((x2, y2), (1402285.9829252, 5076292.4212746))\r\nE           AssertionError: \r\nE           Arrays are not almost equal to 7 decimals\r\nE           \r\nE           Mismatched elements: 2 / 2 (100%)\r\nE           Max absolute difference: 4.21450818\r\nE           Max relative difference: 1.82410064e-06\r\nE            x: array([1402288.540836 , 5076296.6357828])\r\nE            y: array([1402285.9829252, 5076292.4212746])\r\n\r\ntest/test_datum.py:20: AssertionError\r\n________________________________ test_doctests _________________________________\r\n\r\naoi_data_directory = None\r\n\r\n    def test_doctests(aoi_data_directory):\r\n        \"\"\"run the examples in the docstrings using the doctest module\"\"\"\r\n    \r\n        with warnings.catch_warnings():\r\n            warnings.filterwarnings(\r\n                \"ignore\",\r\n                \"You will likely lose important projection information when\",\r\n                UserWarning,\r\n            )\r\n    \r\n            failure_count_proj, test_count = doctest.testmod(pyproj.proj, verbose=True)\r\n            failure_count_crs, test_count_crs = doctest.testmod(pyproj.crs, verbose=True)\r\n            failure_count_geod, test_count_geod = doctest.testmod(pyproj.geod, verbose=True)\r\n            failure_count_transform, test_count_transform = doctest.testmod(\r\n                pyproj.transformer, verbose=True\r\n            )\r\n    \r\n        failure_count = (\r\n            failure_count_proj\r\n            + failure_count_crs\r\n            + failure_count_geod\r\n            + failure_count_transform\r\n        )\r\n        # Missing shapely wheels for Windows, non x86_64 platforms, and python 3.8\r\n        expected_failure_count = 0\r\n        try:\r\n            import shapely  # noqa\r\n        except ImportError:\r\n            if (\r\n                os.name == \"nt\"\r\n                or platform.uname()[4] != \"x86_64\"\r\n                or (sys.version_info.major, sys.version_info.minor) >= (3, 8)\r\n            ):\r\n                expected_failure_count = 6\r\n    \r\n        # if the below line fails, doctests have failed\r\n>       assert (\r\n            failure_count == expected_failure_count\r\n        ), \"{0} of the doctests in \" \"lib/pyproj/__init__.py failed\".format(failure_count)\r\nE       AssertionError: 9 of the doctests in lib/pyproj/__init__.py failed\r\nE       assert 9 == 6\r\n\r\ntest/test_doctest_wrapper.py:50: AssertionError\r\n```\r\n\r\n```\r\n2 items had failures:\r\n   3 of   5 in pyproj.geod.Geod.geometry_area_perimeter\r\n   3 of   5 in pyproj.geod.Geod.geometry_length\r\n2 items had failures:\r\n   1 of   3 in pyproj.transformer.TransformerGroup.__init__\r\n   2 of  19 in pyproj.transformer.transform\r\n```\r\n```\r\nFAILED test/test_datum.py::test_datum[Proj] - AssertionError: \r\nFAILED test/test_datum.py::test_datum[CRS] - AssertionError: \r\nFAILED test/test_doctest_wrapper.py::test_doctests - AssertionError: 9 of the...\r\nFAILED test/test_transformer.py::test_transform_wgs84_to_alaska - AssertionEr...\r\nFAILED test/test_transformer.py::test_repr - AssertionError: assert '<Concate...\r\nFAILED test/test_transformer.py::test_transformer_group__unavailable - assert...\r\nFAILED test/test_transformer.py::test_transform_group__missing_best - assert ...\r\nFAILED test/crs/test_crs.py::test_coordinate_operation_grids__alternative_grid_name\r\n```\r\n\r\n#### Expected Output\r\nAll tests passing =)\r\n\r\n#### Environment Information\r\nShown in build log. Errors also occur on other architectures.\r\n\r\n```\r\n(9/39) Installing python3 (3.8.2-r0)\r\n(17/39) Installing proj-datumgrid (7.0.0-r0)\r\n(20/39) Installing proj (7.0.0-r0)\r\n(21/39) Installing proj-dev (7.0.0-r0)\r\n```\r\n\r\n#### Installation method\r\nFrom source\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/582", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/582/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/582/events", "html_url": "https://github.com/pyproj4/pyproj/issues/582", "id": 586997830, "node_id": "MDU6SXNzdWU1ODY5OTc4MzA=", "number": 582, "title": "Alpine with proj executable not found. Please set the PROJ_DIR variable", "user": {"login": "maynewong", "id": 2445540, "node_id": "MDQ6VXNlcjI0NDU1NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2445540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maynewong", "html_url": "https://github.com/maynewong", "followers_url": "https://api.github.com/users/maynewong/followers", "following_url": "https://api.github.com/users/maynewong/following{/other_user}", "gists_url": "https://api.github.com/users/maynewong/gists{/gist_id}", "starred_url": "https://api.github.com/users/maynewong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maynewong/subscriptions", "organizations_url": "https://api.github.com/users/maynewong/orgs", "repos_url": "https://api.github.com/users/maynewong/repos", "events_url": "https://api.github.com/users/maynewong/events{/privacy}", "received_events_url": "https://api.github.com/users/maynewong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-24T14:23:32Z", "updated_at": "2020-06-26T16:49:05Z", "closed_at": "2020-03-26T13:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dockerfile\r\n\r\n```\r\nFROM python3.7-alpine\r\n\r\nRUN apk add proj proj-dev\r\nRUN pip install pyproj\r\n```\r\nget error\r\n```\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/local/bin/python /usr/local/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmp_8k0qhw3\r\n       cwd: /tmp/pip-install-zzif953y/pyproj\r\n  Complete output (1 lines):\r\n  proj executable not found. Please set the PROJ_DIR variable.For more information see: https://pyproj4.github.io/pyproj/stable/installation.html\r\n  ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/local/bin/python /usr/local/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmp_8k0qhw3 Check the logs for full command output.\r\n```\r\n\r\n`apk add proj` installed PROJ sucessful, but I can\u2018t get PROJ_DIR ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/581", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/581/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/581/events", "html_url": "https://github.com/pyproj4/pyproj/issues/581", "id": 586274403, "node_id": "MDU6SXNzdWU1ODYyNzQ0MDM=", "number": 581, "title": "Use from_epsg and from_proj4, coordinate must be reversal, why?", "user": {"login": "guyanf", "id": 9711184, "node_id": "MDQ6VXNlcjk3MTExODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9711184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyanf", "html_url": "https://github.com/guyanf", "followers_url": "https://api.github.com/users/guyanf/followers", "following_url": "https://api.github.com/users/guyanf/following{/other_user}", "gists_url": "https://api.github.com/users/guyanf/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyanf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyanf/subscriptions", "organizations_url": "https://api.github.com/users/guyanf/orgs", "repos_url": "https://api.github.com/users/guyanf/repos", "events_url": "https://api.github.com/users/guyanf/events{/privacy}", "received_events_url": "https://api.github.com/users/guyanf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-23T14:58:27Z", "updated_at": "2020-03-24T05:45:59Z", "closed_at": "2020-03-24T05:45:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n# epsg:4547\r\n# +proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \r\n\r\nfrom pyproj import Transformer, CRS\r\n\r\nx, y = 520652.4602542225, 2433813.9805720625\r\ntar = CRS.from_epsg(4326)\r\n\r\ncrs1 = CRS.from_epsg(4547)\r\nt_cs1 = Transformer.from_crs(crs1, tar) \r\nnew_x1, new_y1 = t_cs1.transform(y, x)\r\nprint(new_x1, new_y1)\r\n\r\nprint('-'*80)\r\ncrs2 = CRS.from_proj4(\"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs\")\r\nt_cs2 = Transformer.from_crs(crs2, tar)\r\nnew_x2, new_y2 = t_cs2.transform(x, y)\r\nprint(new_x2, new_y2)\r\n\r\n\r\nWhen is used t_cs1, coordinate is y x, but t_cs2, coordinate must x y?\r\nWhy the coorinate must be reversal?\r\nHow can I do?\r\n\r\nTKS.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/580", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/580/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/580/events", "html_url": "https://github.com/pyproj4/pyproj/issues/580", "id": 584747622, "node_id": "MDU6SXNzdWU1ODQ3NDc2MjI=", "number": 580, "title": "geometry_area_perimeter returns negative values", "user": {"login": "martinfleis", "id": 36797143, "node_id": "MDQ6VXNlcjM2Nzk3MTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/36797143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinfleis", "html_url": "https://github.com/martinfleis", "followers_url": "https://api.github.com/users/martinfleis/followers", "following_url": "https://api.github.com/users/martinfleis/following{/other_user}", "gists_url": "https://api.github.com/users/martinfleis/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinfleis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinfleis/subscriptions", "organizations_url": "https://api.github.com/users/martinfleis/orgs", "repos_url": "https://api.github.com/users/martinfleis/repos", "events_url": "https://api.github.com/users/martinfleis/events{/privacy}", "received_events_url": "https://api.github.com/users/martinfleis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-19T22:59:11Z", "updated_at": "2020-06-18T01:28:25Z", "closed_at": "2020-06-18T01:28:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n```python\r\nimport geopandas as gpd\r\n\r\ngdf = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\r\ngdf.crs\r\n```\r\n```\r\n<Geographic 2D CRS: EPSG:4326>\r\nName: WGS 84\r\nAxis Info [ellipsoidal]:\r\n- Lat[north]: Geodetic latitude (degree)\r\n- Lon[east]: Geodetic longitude (degree)\r\nArea of Use:\r\n- name: World\r\n- bounds: (-180.0, -90.0, 180.0, 90.0)\r\nDatum: World Geodetic System 1984\r\n- Ellipsoid: WGS 84\r\n- Prime Meridian: Greenwich\r\n```\r\n```py\r\ngeod = gdf.crs.get_geod()\r\ngeod.geometry_area_perimeter(gdf.geometry[0])\r\n```\r\n```\r\n(-19289970732.97646, 972693.0358897616)\r\n```\r\n#### Problem description\r\n\r\nI wanted to start implementing better support for distances and areas for unprojected CRS in geopandas using `Geod`, but using `naturalearth_lowres` data I am getting negative values for area. I assume it is related to x-y order, isn't it? Is there a way how to avoid this behaviour?\r\n\r\n\r\n#### Environment Information\r\n```\r\npyproj info:\r\n    pyproj: 2.6.0\r\n      PROJ: 6.3.1\r\n  data dir: /Users/martin/anaconda3/envs/pygeos/share/proj\r\n\r\nSystem:\r\n    python: 3.8.2 | packaged by conda-forge | (default, Mar  5 2020, 16:54:44)  [Clang 9.0.1 ]\r\nexecutable: /Users/martin/anaconda3/envs/pygeos/bin/python\r\n   machine: macOS-10.15.3-x86_64-i386-64bit\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 46.0.0.post20200311\r\n    Cython: None\r\n```\r\n\r\n\r\n#### Installation method\r\n - conda-forge\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n\r\n<details>\r\n\r\n```\r\n# Name                    Version                   Build  Channel\r\nappnope                   0.1.0                 py38_1000    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbeautifulsoup4            4.8.2                    py38_0    conda-forge\r\nbleach                    3.1.1                      py_0    conda-forge\r\nboost-cpp                 1.72.0               hdf9ef73_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            he1c11cd_1002    conda-forge\r\ncertifi                   2019.11.28       py38h32f6830_1    conda-forge\r\ncffi                      1.14.0           py38h356ff06_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.1              pyh8c360ce_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                    pypi_0    pypi\r\ncryptography              2.8              py38hafa8578_1    conda-forge\r\ncurl                      7.68.0               h8754def_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndeprecated                1.2.7                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3             py38h32f6830_1001    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.4            py38h9f7df5a_2    conda-forge\r\ngeopandas                 0.7.0+23.g6a044ff           dev_0    <develop>\r\ngeos                      3.8.1                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                h4bdff65_9    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_2    conda-forge\r\nglib                      2.58.3          py38h338c551_1003    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\nimportlib-metadata        1.5.0            py38h32f6830_1    conda-forge\r\nimportlib_metadata        1.5.0                         1    conda-forge\r\nipykernel                 5.1.4            py38h5ca1d4c_0    conda-forge\r\nipython                   7.13.0           py38h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.16.0           py38h32f6830_1    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\njson5                     0.9.0                      py_0    conda-forge\r\njsonschema                3.2.0                    py38_0    conda-forge\r\njupyter_client            6.0.0                      py_0    conda-forge\r\njupyter_core              4.6.3            py38h32f6830_1    conda-forge\r\njupyterlab                2.0.1                      py_0    conda-forge\r\njupyterlab_server         1.0.7                      py_0    conda-forge\r\nkealib                    1.4.12               h2324030_0    conda-forge\r\nkiwisolver                1.1.0            py38ha0d09dd_1    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               16_openblas    conda-forge\r\nlibcblas                  3.8.0               16_openblas    conda-forge\r\nlibcurl                   7.68.0               h709d2b2_0    conda-forge\r\nlibcxx                    9.0.1                         1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgdal                   3.0.4                hbf8f8d6_2    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nlibkml                    1.3.0             h169b8f9_1011    conda-forge\r\nliblapack                 3.8.0               16_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hda4e5f1_101    conda-forge\r\nlibopenblas               0.3.9                h3d69b6c_0    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibpq                     12.2                 h554dc5a_0    conda-forge\r\nlibpysal                  4.2.2                      py_0    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_3    conda-forge\r\nlibspatialite             4.3.0a            hbcd37d4_1037    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_3    conda-forge\r\nlibwebp                   1.0.2                hd3bf737_5    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.1                h28b9765_2    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmapclassify               2.2.0                      py_0    conda-forge\r\nmarkupsafe                1.1.1            py38h64e0658_1    conda-forge\r\nmatplotlib                3.2.0                         1    conda-forge\r\nmatplotlib-base           3.2.0            py38h11da6c2_1    conda-forge\r\nmistune                   0.8.4           py38h0b31af3_1000    conda-forge\r\nmomepy                    0.1.1+18.g49cf013.dirty           dev_0    <develop>\r\nmore-itertools            8.2.0                      py_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnbconvert                 5.6.1                    py38_0    conda-forge\r\nnbformat                  5.0.4                      py_0    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnotebook                  6.0.3                    py38_0    conda-forge\r\nnumpy                     1.18.1           py38hde6bac1_0    conda-forge\r\nopenjpeg                  2.3.1                hcdae239_3    conda-forge\r\nopenssl                   1.1.1e               h0b31af3_0    conda-forge\r\npackaging                 20.1                       py_0    conda-forge\r\npandas                    1.0.2            py38h5fc983b_0    conda-forge\r\npandoc                    2.9.2                         0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.6.2                      py_0    conda-forge\r\npcre                      8.44                 h4a8c4bd_0    conda-forge\r\npexpect                   4.8.0                    py38_0    conda-forge\r\npickleshare               0.7.5                 py38_1000    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npluggy                    0.13.1                   py38_0    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.2                 h16d8c28_0    conda-forge\r\nproj                      6.3.1                h773a61f_1    conda-forge\r\nprometheus_client         0.7.1                      py_0    conda-forge\r\nprompt-toolkit            3.0.4                      py_0    conda-forge\r\nprompt_toolkit            3.0.4                         0    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npy                        1.8.1                      py_0    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npygeos                    0.6+8.g3863014           pypi_0    pypi\r\npygments                  2.6.1                      py_0    conda-forge\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.6.0            py38hfccf04c_0    conda-forge\r\npyrsistent                0.15.7           py38h0b31af3_0    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npytest                    5.4.1            py38h32f6830_0    conda-forge\r\npython                    3.8.2           hdc38147_4_cpython    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npyzmq                     19.0.0           py38h4bf09a9_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.23.0                   py38_0    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.22.2.post1     py38h3dc85bc_0    conda-forge\r\nscipy                     1.4.1            py38h82752d6_0    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                46.0.0           py38h32f6830_2    conda-forge\r\nshapely                   1.7.0            py38h5b1fbde_2    conda-forge\r\nsix                       1.14.0                     py_1    conda-forge\r\nsoupsieve                 1.9.4                    py38_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\nterminado                 0.8.3                    py38_0    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.4            py38h64e0658_1    conda-forge\r\ntqdm                      4.43.0                     py_0    conda-forge\r\ntraitlets                 4.3.3            py38h32f6830_1    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nwcwidth                   0.1.8                      py_0    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nwrapt                     1.12.1           py38h64e0658_1    conda-forge\r\nxerces-c                  3.2.2             h8f8adb3_1004    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                he7fca8b_1    conda-forge\r\n\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n\r\n\r\n<details>\r\n\r\n```\r\n active environment : pygeos\r\n    active env location : /Users/martin/anaconda3/envs/pygeos\r\n            shell level : 8\r\n       user config file : /Users/martin/.condarc\r\n populated config files : /Users/martin/.condarc\r\n                          /Users/martin/anaconda3/envs/pygeos/.condarc\r\n          conda version : 4.8.2\r\n    conda-build version : 3.18.9\r\n         python version : 3.6.9.final.0\r\n       virtual packages : __osx=10.15.3\r\n       base environment : /Users/martin/anaconda3  (writable)\r\n           channel URLs : https://conda.anaconda.org/conda-forge/osx-64\r\n                          https://conda.anaconda.org/conda-forge/noarch\r\n                          https://repo.anaconda.com/pkgs/main/osx-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/osx-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n                          https://conda.anaconda.org/udst/osx-64\r\n                          https://conda.anaconda.org/udst/noarch\r\n          package cache : /Users/martin/anaconda3/pkgs\r\n                          /Users/martin/.conda/pkgs\r\n       envs directories : /Users/martin/anaconda3/envs\r\n                          /Users/martin/.conda/envs\r\n               platform : osx-64\r\n             user-agent : conda/4.8.2 requests/2.22.0 CPython/3.6.9 Darwin/19.3.0 OSX/10.15.3\r\n                UID:GID : 501:20\r\n             netrc file : None\r\n           offline mode : False\r\n\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/579", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/579/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/579/events", "html_url": "https://github.com/pyproj4/pyproj/issues/579", "id": 584629800, "node_id": "MDU6SXNzdWU1ODQ2Mjk4MDA=", "number": 579, "title": "problem pip installing under msys2", "user": {"login": "tjwilli58", "id": 36856761, "node_id": "MDQ6VXNlcjM2ODU2NzYx", "avatar_url": "https://avatars0.githubusercontent.com/u/36856761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjwilli58", "html_url": "https://github.com/tjwilli58", "followers_url": "https://api.github.com/users/tjwilli58/followers", "following_url": "https://api.github.com/users/tjwilli58/following{/other_user}", "gists_url": "https://api.github.com/users/tjwilli58/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjwilli58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjwilli58/subscriptions", "organizations_url": "https://api.github.com/users/tjwilli58/orgs", "repos_url": "https://api.github.com/users/tjwilli58/repos", "events_url": "https://api.github.com/users/tjwilli58/events{/privacy}", "received_events_url": "https://api.github.com/users/tjwilli58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680572, "node_id": "MDU6TGFiZWwxNjE2ODA1NzI=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}, {"id": 1324294960, "node_id": "MDU6TGFiZWwxMzI0Mjk0OTYw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/windows", "name": "windows", "color": "1f3396", "default": false, "description": "Windows related issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-19T18:57:22Z", "updated_at": "2020-03-20T14:16:34Z", "closed_at": "2020-03-19T22:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n#### Installation method/steps\r\n - Installation method: pip\r\n   I also tried downloading the wheel from [ Christoph Gohlke](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyproj)  , but  I got\r\n\r\n`ERROR: pyproj-2.6.0-cp37-cp37m-win_amd64.whl is not a supported wheel on this platform.`\r\n\r\n- How did you install PROJ? Where is it installed?\r\nI didn't. I was hoping pip would handle that.\r\n\r\n - Please provide all commands/steps you used to install pyproj and PROJ.\r\n\r\n`pip install pyproj --no-color`\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install\r\n2.6.0\r\n - PROJ version (Execute `proj` command and give version here.)\r\n\r\n - Python version (`python -c \"import sys; print(sys.version.replace('\\n', ' '))\"`)\r\n`3.7.4 (default, Aug 15 2019, 18:17:27)  [GCC 9.2.0 64 bit (AMD64)]`\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`)\r\n```\r\n$ python -c \"import platform; print(platform.platform())\"\r\nWindows-10-10.0.18362-SP0\r\n```\r\n\r\nResult of pip install:\r\n\r\n```\r\n$ pip install pyproj --no-color\r\nCollecting pyproj\r\n  Using cached https://files.pythonhosted.org/packages/c0/c2/8c7f27e57835782563715970ec73da41dffc5bb93622f86cc7c3626a9317/pyproj-2.6.0.tar.gz\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... error\r\n  ERROR: Complete output from command C:/msys64/mingw64/bin/python3.exe C:/msys64/mingw64/lib/python3.7/site-packages/pep517/_in_process.py get_requires_for_build_wheel C:/Users/Tim/AppData/Local/Temp/tmpc_uc3hgi:\r\n  ERROR: C:/Users/Tim/AppData/Local/Temp/pip-build-env-5i2z1bc4/overlay/lib/python3.7/site-packages\\Cython\\Distutils\\old_build_ext.py:41: UserWarning: Cython.Distutils.old_build_ext does not properly handle dependencies and is deprecated.\r\n    \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\n  proj executable not found. Please set the PROJ_DIR variable.For more information see: https://pyproj4.github.io/pyproj/stable/installation.html\r\n  ----------------------------------------\r\nERROR: Command \"C:/msys64/mingw64/bin/python3.exe C:/msys64/mingw64/lib/python3.7/site-packages/pep517/_in_process.py get_requires_for_build_wheel C:/Users/Tim/AppData/Local/Temp/tmpc_uc3hgi\" failed with error code 1 in C:/Users/Tim/AppData/Local/Temp/pip-install-r417pjmi/pyproj\r\n\r\n```\r\n\r\nI guess the bottom line is, how do I get this installed under msys2 (MINGW64)\r\n\r\n```\r\n$ uname -a\r\nMINGW64_NT-10.0-18362 TIM-ACER-E15 3.0.7-338.x86_64 2019-07-11 10:58 UTC x86_64 Msys\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/576", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/576/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/576/events", "html_url": "https://github.com/pyproj4/pyproj/issues/576", "id": 580331533, "node_id": "MDU6SXNzdWU1ODAzMzE1MzM=", "number": 576, "title": "2.6.0 Release", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-13T02:32:52Z", "updated_at": "2020-03-18T01:14:33Z", "closed_at": "2020-03-18T01:14:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pyproj4/pyproj/releases/tag/2.6.0rc0\r\n\r\nThe plan is to release with PROJ 6.3.1 in the wheels (ref #574).\r\n\r\nRelease Candidate 0 Status:\r\n- [x] Linux/OSX wheels (https://github.com/pyproj4/pyproj-wheels/pull/22)\r\n- [ ] Windows wheels (ping @cgohlke)\r\n- [x] Conda Forge (https://github.com/conda-forge/pyproj-feedstock/pull/67)\r\n- [x] Debian (ping @sebastic)\r\n\r\nTesting is definitely appreciated, but not required (if nothing else, this is for your awareness). If you are unable to test this release, just let me know in the comments. The plan is to release once all testing is successfully completed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/574", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/574/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/574/events", "html_url": "https://github.com/pyproj4/pyproj/issues/574", "id": 580316454, "node_id": "MDU6SXNzdWU1ODAzMTY0NTQ=", "number": 574, "title": "PROJ 7.0.1", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-13T01:33:41Z", "updated_at": "2020-05-01T13:40:12Z", "closed_at": "2020-05-01T13:40:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Expected [release](https://github.com/OSGeo/PROJ/milestone/21) May 01, 2020\r\n\r\nCannot include 7.0.0 in manylinux1 wheels due to https://github.com/OSGeo/PROJ/pull/2063\r\nSee: https://travis-ci.com/github/pyproj4/pyproj-wheels/builds/153108078\r\n\r\nWill have to wait until 7.0.1 for that.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/573", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/573/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/573/events", "html_url": "https://github.com/pyproj4/pyproj/issues/573", "id": 579287491, "node_id": "MDU6SXNzdWU1NzkyODc0OTE=", "number": 573, "title": "ENH: Support obects with __array__ method", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-11T14:02:30Z", "updated_at": "2020-05-08T01:37:22Z", "closed_at": "2020-05-08T01:37:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://docs.scipy.org/doc/numpy/reference/arrays.interface.html\r\n\r\nHad the thought, putting here to look into.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/572", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/572/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/572/events", "html_url": "https://github.com/pyproj4/pyproj/issues/572", "id": 578983567, "node_id": "MDU6SXNzdWU1Nzg5ODM1Njc=", "number": 572, "title": "ENH: Replicate `projsync` for pyproj", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680571, "node_id": "MDU6TGFiZWwxNjE2ODA1NzE=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-11T03:23:55Z", "updated_at": "2020-05-29T01:13:53Z", "closed_at": "2020-05-29T01:13:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to: https://github.com/OSGeo/PROJ/issues/2028\r\n\r\nTwo parts:\r\n1. Python API\r\n2. CLI\r\n\r\nCurrently, without `pj_context_set_user_writable_directory`, this means that the download can only go to the user writable directory via the `PROJ` API.\r\n\r\nThe alternative would be to create a python based downloader, but the logic may differ from PROJ.\r\n - To get the user writable directory, could use https://github.com/ActiveState/appdirs\r\n - To download the file, have many options available and can manually download to user directory, the data directory, or whichever is specified by the user.\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/571", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/571/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/571/events", "html_url": "https://github.com/pyproj4/pyproj/issues/571", "id": 578482589, "node_id": "MDU6SXNzdWU1Nzg0ODI1ODk=", "number": 571, "title": "pyproj 2.5.0 does not convert from epsg:4326 to epsg:4267", "user": {"login": "aleksanderczeszyk-intive", "id": 53084146, "node_id": "MDQ6VXNlcjUzMDg0MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/53084146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksanderczeszyk-intive", "html_url": "https://github.com/aleksanderczeszyk-intive", "followers_url": "https://api.github.com/users/aleksanderczeszyk-intive/followers", "following_url": "https://api.github.com/users/aleksanderczeszyk-intive/following{/other_user}", "gists_url": "https://api.github.com/users/aleksanderczeszyk-intive/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksanderczeszyk-intive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksanderczeszyk-intive/subscriptions", "organizations_url": "https://api.github.com/users/aleksanderczeszyk-intive/orgs", "repos_url": "https://api.github.com/users/aleksanderczeszyk-intive/repos", "events_url": "https://api.github.com/users/aleksanderczeszyk-intive/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksanderczeszyk-intive/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-10T10:34:29Z", "updated_at": "2020-03-11T00:37:48Z", "closed_at": "2020-03-11T00:35:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\nI may have found a problem with latest version of pyproj. I am designing test cases that involve converting geojson geometries from epsg:4326 to epsg:4267. The example GeoJson polygon is here:\r\n```\r\n{\r\n            \"type\": \"Polygon\",\r\n            \"coordinates\": [\r\n                [\r\n                    [\r\n                        32.794189453125,\r\n                        3.995780512963038\r\n                    ],\r\n                    [\r\n                        30.064086914062496,\r\n                        3.5572827265412794\r\n                    ],\r\n                    [\r\n                        29.086303710937504,\r\n                        0.4394488164139768\r\n                    ],\r\n                    [\r\n                        33.013916015625,\r\n                        -0.42296979098860243\r\n                    ],\r\n                    [\r\n                        35.0079345703125,\r\n                        0.6921218386632358\r\n                    ],\r\n                    [\r\n                        34.8101806640625,\r\n                        3.2556928748506118\r\n                    ],\r\n                    [\r\n                        32.794189453125,\r\n                        3.995780512963038\r\n                    ]\r\n                ]\r\n            ]\r\n        }\r\n```\r\nAfter that the polygons are converted to WKT. The result for pyproj 2.4.2 looks like this:\r\n\r\n```\r\n('POLYGON ((32.794189453125 3.995780512963038, 30.064086914062496 '\r\n '3.5572827265412794, 29.086303710937504 0.4394488164139768, 33.013916015625 '\r\n '-0.42296979098860243, 35.0079345703125 0.6921218386632358, 34.8101806640625 '\r\n '3.2556928748506118, 32.794189453125 3.995780512963038))')\r\n('POLYGON ((32.79472783719299 3.9940903934167866, 30.064484089015565 '\r\n '3.5556408566034987, 29.086611305198623 0.4378252001668296, 33.01440476269899 '\r\n '-0.4246599023882488, 35.00852518517081 0.6903896943025318, '\r\n '34.810799463983386 3.253962650695694, 32.79472783719299 3.9940903934167866))')\r\n```\r\n\r\nThe first polygon is epsg:4326 and second epsg:4267.\r\n\r\nHowever after updating pyproj the transformation does not occur. conversion to epsg:4267 does not make any effect and the polygon stays the same. The method used for conversion looks like this:\r\n```\r\n    def convert_from_epsg_4326_to_different_projection(self, geometry, projection):\r\n        new_geometry = copy.deepcopy(geometry)\r\n        epsg_4326 = pyproj.Proj(\"epsg:4326\")\r\n        new_projection = pyproj.Proj(projection, preserve_units=True)\r\n        if new_geometry[\"type\"] == \"Point\":\r\n            new_geometry[\"coordinates\"] = list(pyproj.transform(\r\n                epsg_4326,\r\n                new_projection,\r\n                new_geometry[\"coordinates\"][0],\r\n                new_geometry[\"coordinates\"][1]\r\n            ))\r\n        elif new_geometry[\"type\"] == \"LineString\":\r\n            for point_id in range(len(new_geometry[\"coordinates\"])):\r\n                new_geometry[\"coordinates\"][point_id] = list(pyproj.transform(\r\n                    epsg_4326,\r\n                    new_projection,\r\n                    new_geometry[\"coordinates\"][point_id][0],\r\n                    new_geometry[\"coordinates\"][point_id][1]\r\n                ))\r\n        elif new_geometry[\"type\"] == \"Polygon\":\r\n            for point_id in range(len(new_geometry[\"coordinates\"][0])):\r\n                new_geometry[\"coordinates\"][0][point_id] = list(pyproj.transform(\r\n                    epsg_4326,\r\n                    new_projection,\r\n                    new_geometry[\"coordinates\"][0][point_id][0],\r\n                    new_geometry[\"coordinates\"][0][point_id][1]\r\n                ))\r\n\r\n        return new_geometry\r\n```\r\nIs my thinking right? is that an issue or maybe 2.4.2 did something it shouldn't?\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/565", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/565/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/565/events", "html_url": "https://github.com/pyproj4/pyproj/issues/565", "id": 575706498, "node_id": "MDU6SXNzdWU1NzU3MDY0OTg=", "number": 565, "title": "Pipeline transformations return inf", "user": {"login": "tfilppula", "id": 13709365, "node_id": "MDQ6VXNlcjEzNzA5MzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/13709365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfilppula", "html_url": "https://github.com/tfilppula", "followers_url": "https://api.github.com/users/tfilppula/followers", "following_url": "https://api.github.com/users/tfilppula/following{/other_user}", "gists_url": "https://api.github.com/users/tfilppula/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfilppula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfilppula/subscriptions", "organizations_url": "https://api.github.com/users/tfilppula/orgs", "repos_url": "https://api.github.com/users/tfilppula/repos", "events_url": "https://api.github.com/users/tfilppula/events{/privacy}", "received_events_url": "https://api.github.com/users/tfilppula/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T19:37:34Z", "updated_at": "2020-03-06T13:04:55Z", "closed_at": "2020-03-06T13:04:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that pipelines don't work properly. A simple CCT example:\r\n```\r\necho 50 25 0 | cct +proj=pipeline +ellps=GRS80 +step +proj=cart\r\n```\r\nWill result in:\r\n```\r\n3717892.6072   4430811.8715  2679074.4629           inf\r\n```\r\n\r\nThe same in pyproj:\r\n```python\r\nfrom pyproj import Transformer\r\n\r\nstring = \"+proj=pipeline +ellps=GRS80 +step +proj=cart\"\r\npipe = Transformer.from_pipeline(string)\r\npipe.transform(50, 25, 0, errcheck=True)\r\n```\r\n\r\nWill result in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/pyproj/transformer.py\", line 446, in transform\r\n    errcheck=errcheck,\r\n  File \"pyproj/_transformer.pyx\", line 463, in pyproj._transformer._Transformer._transform\r\npyproj.exceptions.ProjError: transform error: latitude or longitude exceeded limits\r\n```\r\n\r\nWhere do these limits originate from?\r\n\r\n#### Environment Information\r\npyproj info:\r\n    pyproj: 2.5.0\r\n      PROJ: 6.3.1\r\n  data dir: /usr/local/lib/python3.7/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.7.6 (default, Dec 30 2019, 19:38:26)  [Clang 11.0.0 (clang-1100.0.33.16)]\r\nexecutable: /usr/local/opt/python/bin/python3.7\r\n   machine: Darwin-19.3.0-x86_64-i386-64bit\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 42.0.2\r\n    Cython: None\r\n\r\n#### Installation method\r\n- pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/564", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/564/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/564/events", "html_url": "https://github.com/pyproj4/pyproj/issues/564", "id": 575686467, "node_id": "MDU6SXNzdWU1NzU2ODY0Njc=", "number": 564, "title": "numpy.bool_ comparison yields incorrect results", "user": {"login": "jranalli", "id": 7864460, "node_id": "MDQ6VXNlcjc4NjQ0NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7864460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jranalli", "html_url": "https://github.com/jranalli", "followers_url": "https://api.github.com/users/jranalli/followers", "following_url": "https://api.github.com/users/jranalli/following{/other_user}", "gists_url": "https://api.github.com/users/jranalli/gists{/gist_id}", "starred_url": "https://api.github.com/users/jranalli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jranalli/subscriptions", "organizations_url": "https://api.github.com/users/jranalli/orgs", "repos_url": "https://api.github.com/users/jranalli/repos", "events_url": "https://api.github.com/users/jranalli/events{/privacy}", "received_events_url": "https://api.github.com/users/jranalli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-04T19:13:07Z", "updated_at": "2020-03-06T02:50:28Z", "closed_at": "2020-03-06T02:50:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n```python\r\nfrom pyproj import Proj  # pyproj 2.5.0\r\nimport numpy as np  # numpy 1.18.1\r\n\r\nsouth = np.array(50) < 0\r\n\r\np = Proj(proj='utm', zone=32, ellipsis='WGS84', datum='WGS84', units='m', south=south)\r\nprint(p)\r\n```\r\nOutputs\r\n```Proj('+proj=utm +zone=32 +south +datum=WGS84 +units=m +no_defs', preserve_units=True)```\r\n\r\n#### Problem description\r\n\r\nWhen passing numpy.bool_(False) to Proj( ... ,south=south), it activates the south flag anyway. I believe this relates to [CRS.py Line 51-56](https://github.com/pyproj4/pyproj/blob/65105c8f5e8ac76dcca5a19c8e227c9c2eb0fd19/pyproj/crs/crs.py#L51). I think this is because comparing numpy.bool_ types with ```is``` [results in unexpected results](https://github.com/numpy/numpy/issues/5942). \r\n\r\n#### Expected Output\r\nNo +south flag\r\n``Proj('+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs', preserve_units=True)``\r\n\r\n#### Environment Information\r\n```python\r\n    pyproj: 2.5.0\r\n      PROJ: 6.3.1\r\n  data dir: <>\r\n\r\nSystem:\r\n    python: 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: <>\r\n   machine: Windows-10-10.0.17763-SP0\r\n\r\nPython deps:\r\n       pip: 19.2.3\r\nsetuptools: 41.2.0\r\n    Cython: 0.29.15\r\n\r\n```\r\n#### Installation method\r\n - pip wheel\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/561", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/561/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/561/events", "html_url": "https://github.com/pyproj4/pyproj/issues/561", "id": 575063524, "node_id": "MDU6SXNzdWU1NzUwNjM1MjQ=", "number": 561, "title": "Add CRS.is_utm", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-04T00:58:57Z", "updated_at": "2020-03-04T13:11:37Z", "closed_at": "2020-03-04T13:11:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/UDST/osmnet/issues/19#issuecomment-594249195", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/556", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/556/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/556/events", "html_url": "https://github.com/pyproj4/pyproj/issues/556", "id": 573947971, "node_id": "MDU6SXNzdWU1NzM5NDc5NzE=", "number": 556, "title": "transform yielding different results for same Proj parameters", "user": {"login": "moon63", "id": 61692829, "node_id": "MDQ6VXNlcjYxNjkyODI5", "avatar_url": "https://avatars0.githubusercontent.com/u/61692829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moon63", "html_url": "https://github.com/moon63", "followers_url": "https://api.github.com/users/moon63/followers", "following_url": "https://api.github.com/users/moon63/following{/other_user}", "gists_url": "https://api.github.com/users/moon63/gists{/gist_id}", "starred_url": "https://api.github.com/users/moon63/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moon63/subscriptions", "organizations_url": "https://api.github.com/users/moon63/orgs", "repos_url": "https://api.github.com/users/moon63/repos", "events_url": "https://api.github.com/users/moon63/events{/privacy}", "received_events_url": "https://api.github.com/users/moon63/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T12:41:10Z", "updated_at": "2020-03-02T15:02:01Z", "closed_at": "2020-03-02T13:37:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "#Issue:\r\n\r\nPython    3.7.3\r\nIPython   7.4.0\r\npyproj     2.5.0 [PROJ verion: 6.3.1]\r\n\r\nNot sure what I'm doing wrong but I'm trying to convert longlat Nad83 to KY State Plane South Nad83.  If set the input Prog to pyproj.Proj(proj='longlat', datum ='NAD83') I get a different result than if I set it to pyproj.Proj('epsg:4269').  These should be the same and when i print them out , the are the same.  However I'm getting much different results.\r\n\r\n#Code:\r\n\r\nimport pyproj\r\n\r\ninProj1        = pyproj.Proj(proj='longlat', datum ='NAD83')     \r\ninProj2        = pyproj.Proj('epsg:4269')      \r\n\r\noutProj  = pyproj.Proj(\"epsg:6474\") \r\n   \r\nprint('\\ninProj1 = ',inProj1,'\\ninProj2 = ',inProj2)\r\n    \r\nlong, latt = -83.88259259, 36.49333333\r\n\r\nx1,y1 = pyproj.transform(inProj1, outProj ,long ,latt)\r\nx2,y2 = pyproj.transform(inProj2, outProj ,long ,latt)\r\n    \r\nprint('\\nx1 = ', x1, 'y1 = ', y1,\r\n      '\\nx2 = ', x2, 'y2 = ', y2)\r\n\r\n\r\n#Results:  \r\n\r\ninProj1 =  Proj('+proj=longlat +datum=NAD83 +no_defs', preserve_units=True) \r\ninProj2 =  Proj('+proj=longlat +datum=NAD83 +no_defs', preserve_units=True)\r\n\r\nx1 =  667315.2681430576 y1 =  519409.6151513982           \r\nx2 =  72927331.14729036 y2 =  -11599224.291812904      ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/554", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/554/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/554/events", "html_url": "https://github.com/pyproj4/pyproj/issues/554", "id": 573422204, "node_id": "MDU6SXNzdWU1NzM0MjIyMDQ=", "number": 554, "title": "BUG: version 2.5 crashing in notebook that uses a different kernel with conda env", "user": {"login": "jorisvandenbossche", "id": 1020496, "node_id": "MDQ6VXNlcjEwMjA0OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisvandenbossche", "html_url": "https://github.com/jorisvandenbossche", "followers_url": "https://api.github.com/users/jorisvandenbossche/followers", "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}", "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions", "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs", "repos_url": "https://api.github.com/users/jorisvandenbossche/repos", "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-29T22:22:48Z", "updated_at": "2020-03-01T02:55:22Z", "closed_at": "2020-03-01T02:55:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When importing pyproj in a notebook that uses a kernel from a conda env that is not the base env (or the env in which jupyter was started), I get the following error:\r\n\r\n```\r\nimport pyproj\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum.from_name()\r\n\r\nKeyError: 'URN:OGC:DEF:DATUM:EPSG::6326'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nCRSError                                  Traceback (most recent call last)\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum.from_name()\r\n\r\nCRSError: Invalid datum name: urn:ogc:def:datum:EPSG::6326\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nCRSError                                  Traceback (most recent call last)\r\n<ipython-input-1-98cb605ea9de> in <module>\r\n----> 1 import pyproj\r\n\r\n~/scipy/repos/pyproj/pyproj/__init__.py in <module>\r\n     79 )\r\n     80 from pyproj._show_versions import show_versions  # noqa: F401\r\n---> 81 from pyproj.crs import CRS  # noqa: F401\r\n     82 from pyproj.exceptions import DataDirError, ProjError  # noqa: F401\r\n     83 from pyproj.geod import Geod, geodesic_version_str, pj_ellps  # noqa: F401\r\n\r\n~/scipy/repos/pyproj/pyproj/crs/__init__.py in <module>\r\n     17     is_wkt,\r\n     18 )\r\n---> 19 from pyproj.crs.crs import (  # noqa: F401\r\n     20     CRS,\r\n     21     BoundCRS,\r\n\r\n~/scipy/repos/pyproj/pyproj/crs/crs.py in <module>\r\n   1026 \r\n   1027 \r\n-> 1028 class ProjectedCRS(CRS):\r\n   1029     \"\"\"\r\n   1030     .. versionadded:: 2.5.0\r\n\r\n~/scipy/repos/pyproj/pyproj/crs/crs.py in ProjectedCRS()\r\n   1038         name=\"undefined\",\r\n   1039         cartesian_cs=Cartesian2DCS(),\r\n-> 1040         geodetic_crs=GeographicCRS(),\r\n   1041     ):\r\n   1042         \"\"\"\r\n\r\n~/scipy/repos/pyproj/pyproj/crs/crs.py in __init__(self, name, datum, ellipsoidal_cs)\r\n    977             \"type\": \"GeographicCRS\",\r\n    978             \"name\": name,\r\n--> 979             \"datum\": Datum.from_user_input(datum).to_json_dict(),\r\n    980             \"coordinate_system\": CoordinateSystem.from_user_input(\r\n    981                 ellipsoidal_cs\r\n\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs._CRSParts.from_user_input()\r\n\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum.from_string()\r\n\r\n~/scipy/repos/pyproj/pyproj/_crs.pyx in pyproj._crs.Datum._from_string()\r\n\r\nCRSError: Invalid datum string: urn:ogc:def:datum:EPSG::6326: (Internal Proj Error: proj_create: SQLite error on SELECT name, ellipsoid_auth_name, ellipsoid_code, prime_meridian_auth_name, prime_meridian_code, area_of_use_auth_name, area_of_use_code, publication_date, deprecated FROM geodetic_datum WHERE auth_name = ? AND code = ?: no such column: publication_date)\r\n```\r\n\r\nSo it seems that pyproj (starting with version 2.5, in 2.4 I didn't have the issue) already interacts with the proj database on import, so even before you have the chance to set the datadir with `pyproj.datadir.set_data_dir`. \r\n(I specifically get the error because my base environment also has pyproj/proj installed, but an incompatible one, and pyproj tries to use the db from there)\r\n\r\nI think ideally, importing pyproj doesn't yet interact with the database on import (so you can inspect it more easily if something is wrong)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/552", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/552/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/552/events", "html_url": "https://github.com/pyproj4/pyproj/issues/552", "id": 572493920, "node_id": "MDU6SXNzdWU1NzI0OTM5MjA=", "number": 552, "title": "Keyword arguments to Proj() are silently ignored when projparams are specified", "user": {"login": "gberardinelli", "id": 13799588, "node_id": "MDQ6VXNlcjEzNzk5NTg4", "avatar_url": "https://avatars0.githubusercontent.com/u/13799588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gberardinelli", "html_url": "https://github.com/gberardinelli", "followers_url": "https://api.github.com/users/gberardinelli/followers", "following_url": "https://api.github.com/users/gberardinelli/following{/other_user}", "gists_url": "https://api.github.com/users/gberardinelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/gberardinelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gberardinelli/subscriptions", "organizations_url": "https://api.github.com/users/gberardinelli/orgs", "repos_url": "https://api.github.com/users/gberardinelli/repos", "events_url": "https://api.github.com/users/gberardinelli/events{/privacy}", "received_events_url": "https://api.github.com/users/gberardinelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-28T03:19:05Z", "updated_at": "2020-03-11T19:43:15Z", "closed_at": "2020-03-11T19:43:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I came across this when trying to initialize a `Proj()` and include `geoidgrids`:\r\n\r\n```\r\nproj = pyproj.Proj('EPSG:3162', geoidgrids='CGG2013an83.gtx')\r\nproj.crs.is_vertical\r\n>>> False\r\n```\r\n\r\nThis is confusing.  Why is it not taking my geoidgrids?  Did I get the file name/path wrong?\r\n\r\nTurns out the positional argument `projparams` is mutually exclusive with any passed `**kwargs`:\r\n\r\nhttps://github.com/pyproj4/pyproj/blob/632c39818e77f8226bbec0db2a3fbe7fc02f7d33/pyproj/proj.py#L143\r\n\r\nYet there is no indication that this is not a valid way to initialize it.\r\n\r\nIn my opinion it should throw an exception, and it could perhaps be made clearer in the documentation as well.  It's a minor user experience thing, but still something I had to spend time troubleshooting.  Happy to attempt a PR if others agree.\r\n\r\n[(stackexchange thread that spawned this)](https://gis.stackexchange.com/q/352277/64255)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/549", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/549/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/549/events", "html_url": "https://github.com/pyproj4/pyproj/issues/549", "id": 570407566, "node_id": "MDU6SXNzdWU1NzA0MDc1NjY=", "number": 549, "title": "BUG: error creating a Transformer from WKT CRS (\"Internal Proj Error: proj_create_operations: geodeticCRS not found\")", "user": {"login": "jorisvandenbossche", "id": 1020496, "node_id": "MDQ6VXNlcjEwMjA0OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisvandenbossche", "html_url": "https://github.com/jorisvandenbossche", "followers_url": "https://api.github.com/users/jorisvandenbossche/followers", "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}", "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions", "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs", "repos_url": "https://api.github.com/users/jorisvandenbossche/repos", "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-25T08:52:59Z", "updated_at": "2020-02-25T13:55:54Z", "closed_at": "2020-02-25T13:55:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\nSee https://gis.stackexchange.com/questions/351735/in-to-crs-of-geopandas-init-proj4-string-works-but-new-style-doesnt\r\n\r\nReading that file with geopandas and trying to change to another CRS gives an error:\r\n\r\n```\r\nIn [39]: gdf = geopandas.read_file(\"../Downloads/bnd_emd_2012\") \r\n\r\nIn [40]: gdf.crs\r\nOut[40]: \r\n<Projected CRS: PROJCS[\"PCS_ITRF2000_TM\",GEOGCS[\"ITRF2000\",DATUM[\" ...>\r\nName: PCS_ITRF2000_TM\r\nAxis Info [cartesian]:\r\n- [east]: Easting (metre)\r\n- [north]: Northing (metre)\r\nArea of Use:\r\n- undefined\r\nCoordinate Operation:\r\n- name: unnamed\r\n- method: Transverse Mercator\r\nDatum: International Terrestrial Reference Frame 2000\r\n- Ellipsoid: GRS 1980\r\n- Prime Meridian: Greenwich\r\n\r\nIn [41]: gdf.to_crs(\"EPSG:4326\")   \r\n...\r\nProjError: Error creating Transformer from CRS.: (Internal Proj Error: proj_create_operations: geodeticCRS not found)\r\n```\r\n\r\nI boiled it down to a pure pyproj example:\r\n\r\nUsing the WKT from the .prj file works fine:\r\n\r\n```python\r\ncrs = pyproj.CRS(\"\"\"PROJCS[\"PCS_ITRF2000_TM\",GEOGCS[\"GCS_ITRF_2000\",DATUM[\"D_ITRF_2000\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",1000000.0],PARAMETER[\"False_Northing\",2000000.0],PARAMETER[\"Central_Meridian\",127.5],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",38.0],UNIT[\"Meter\",1.0]]\"\"\")\r\ntransformer = pyproj.Transformer.from_crs(crs, \"EPSG:4326\", always_xy=True)\r\ntransformer.transform(197628.390, 452882.814) \r\n```\r\n\r\nBut, when reading the file with fiona, the `meta[\"crs_wkt\"]` is slightly different (after a pass through GDAL I suppose), so using that WKT here below gives the same error as shown above with geopandas:\r\n\r\n```python\r\ncrs = pyproj.CRS(\"\"\"PROJCS[\"PCS_ITRF2000_TM\",GEOGCS[\"ITRF2000\",DATUM[\"International_Terrestrial_Reference_Frame_2000\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6656\"]],PRIMEM[\"Greenwich\",0],UNIT[\"Degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4656\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",38],PARAMETER[\"central_meridian\",127.5],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",1000000],PARAMETER[\"false_northing\",2000000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]\"\"\")\r\ntransformer = pyproj.Transformer.from_crs(crs, \"EPSG:4326\", always_xy=True)\r\ntransformer.transform(197628.390, 452882.814) \r\n```\r\n\r\n\r\n#### Environment Information\r\n\r\nIt's failing with \r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.5.0\r\n      PROJ: 6.3.0\r\n  data dir: /home/joris/miniconda3/envs/geo-dev/share/proj\r\n\r\nSystem:\r\n    python: 3.8.1 | packaged by conda-forge | (default, Jan 29 2020, 14:55:04)  [GCC 7.3.0]\r\nexecutable: /home/joris/miniconda3/envs/geo-dev/bin/python\r\n   machine: Linux-4.15.0-1073-oem-x86_64-with-glibc2.10\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 45.1.0.post20200119\r\n    Cython: 0.29.14\r\n```\r\n\r\nand it is working with an older version of pyproj / proj (but so can also be due to proj)\r\n\r\n```\r\nSystem:\r\n    python: 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 21:52:21)  [GCC 7.3.0]\r\nexecutable: /home/joris/miniconda3/bin/python\r\n   machine: Linux-4.15.0-1073-oem-x86_64-with-debian-buster-sid\r\n\r\nPROJ:\r\n      PROJ: 6.1.0\r\n  data dir: /home/joris/miniconda3/share/proj\r\n\r\nPython deps:\r\n    pyproj: 2.2.1\r\n       pip: 20.0.2\r\nsetuptools: 45.2.0.post20200209\r\n    Cython: None\r\n     aenum: None\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/547", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/547/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/547/events", "html_url": "https://github.com/pyproj4/pyproj/issues/547", "id": 568598643, "node_id": "MDU6SXNzdWU1Njg1OTg2NDM=", "number": 547, "title": "2.5.0 Release", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-20T21:54:45Z", "updated_at": "2020-02-22T01:10:09Z", "closed_at": "2020-02-22T01:10:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pyproj4/pyproj/releases/tag/2.5.rc0\r\n\r\nThe plan is to release with PROJ 6.3.1 in the wheels.\r\n\r\nRelease Candidate 0 Status:\r\n- [x] Linux/OSX wheels (https://github.com/pyproj4/pyproj-wheels/pull/21)\r\n- [x] Windows wheels (ping @cgohlke)\r\n- [x] Conda Forge (https://github.com/conda-forge/pyproj-feedstock/pull/64)\r\n- [x] Debian (ping @sebastic)\r\n\r\nTesting is definitely appreciated, but not required (if nothing else, this is for your awareness). If you are unable to test this release, just let me know in the comments. The plan is to release once all testing is successfully completed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/542", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/542/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/542/events", "html_url": "https://github.com/pyproj4/pyproj/issues/542", "id": 567861505, "node_id": "MDU6SXNzdWU1Njc4NjE1MDU=", "number": 542, "title": "Incorrect Transformation depending on initialisation on Proj EPSG:4326", "user": {"login": "system123", "id": 91509, "node_id": "MDQ6VXNlcjkxNTA5", "avatar_url": "https://avatars1.githubusercontent.com/u/91509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/system123", "html_url": "https://github.com/system123", "followers_url": "https://api.github.com/users/system123/followers", "following_url": "https://api.github.com/users/system123/following{/other_user}", "gists_url": "https://api.github.com/users/system123/gists{/gist_id}", "starred_url": "https://api.github.com/users/system123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/system123/subscriptions", "organizations_url": "https://api.github.com/users/system123/orgs", "repos_url": "https://api.github.com/users/system123/repos", "events_url": "https://api.github.com/users/system123/events{/privacy}", "received_events_url": "https://api.github.com/users/system123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T21:34:15Z", "updated_at": "2020-02-20T00:58:15Z", "closed_at": "2020-02-20T00:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport pyproj\r\n\r\npyproj.transform(pyproj.Proj({\"init\":\"EPSG:4326\"}), pyproj.Proj(\"EPSG:32617\"), -76.41920282446627, 43.03112479318123)\r\n>> /lib/python3.7/site-packages/pyproj/crs.py:77: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method.\r\n  return _prepare_from_string(\" \".join(pjargs))\r\n>> (873212.4112437204, 4774463.236922473)\r\n\r\npyproj.transform(pyproj.Proj(\"EPSG:4326\"), pyproj.Proj(\"EPSG:32617\"), -76.41920282446627, 43.03112479318123)\r\n>> (1760709.0560872303, -10857425.102759218)\r\n```\r\n#### Problem description\r\nDepending on how I initialize the 4326 CRS I get different results for the projection of a point in EPSG:4326 to UTM EPSG:32617. The result of the old initialization is correct, while using the new/preferred method yields an incorrect transformation.\r\n\r\n#### Expected Output\r\n```>> (873212.4112437204, 4774463.236922473)```\r\n\r\n#### Environment Information\r\npyproj info:\r\n    pyproj: 2.4.2.post1\r\n      PROJ: 6.2.1\r\n  data dir: /Users/lloyd/anaconda3/envs/torch/lib/python3.7/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.7.5 (default, Oct 25 2019, 10:52:18)  [Clang 4.0.1 (tags/RELEASE_401/final)]\r\nexecutable: /Users/lloyd/anaconda3/envs/torch/bin/python\r\n   machine: Darwin-16.7.0-x86_64-i386-64bit\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 42.0.2.post20191203\r\n    Cython: None\r\n\r\n#### Installation method\r\n - conda, pip wheel, from source, etc...\r\n\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\nproj                      6.2.1                hfd5b9e3_0  \r\npyproj                    2.4.2.post1              pypi_0    pypi\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n\r\n     active environment : torch\r\n    active env location : /Users/lloyd/anaconda3/envs/torch\r\n            shell level : 1\r\n       user config file : /Users/lloyd/.condarc\r\n populated config files : \r\n          conda version : 4.8.0\r\n    conda-build version : not installed\r\n         python version : 3.6.8.final.0\r\n       virtual packages : __osx=10.12.6\r\n       base environment : /Users/lloyd/anaconda3  (writable)\r\n           channel URLs : https://repo.anaconda.com/pkgs/main/osx-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/osx-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /Users/lloyd/anaconda3/pkgs\r\n                          /Users/lloyd/.conda/pkgs\r\n       envs directories : /Users/lloyd/anaconda3/envs\r\n                          /Users/lloyd/.conda/envs\r\n               platform : osx-64\r\n             user-agent : conda/4.8.0 requests/2.22.0 CPython/3.6.8 Darwin/16.7.0 OSX/10.12.6\r\n                UID:GID : 501:20\r\n             netrc file : None\r\n           offline mode : False\r\n\r\n```\r\n</details>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/538", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/538/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/538/events", "html_url": "https://github.com/pyproj4/pyproj/issues/538", "id": 564646546, "node_id": "MDU6SXNzdWU1NjQ2NDY1NDY=", "number": 538, "title": "Inconsistent coordinate transformations after droping \"+init\" from initialization", "user": {"login": "timtei", "id": 61011396, "node_id": "MDQ6VXNlcjYxMDExMzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/61011396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timtei", "html_url": "https://github.com/timtei", "followers_url": "https://api.github.com/users/timtei/followers", "following_url": "https://api.github.com/users/timtei/following{/other_user}", "gists_url": "https://api.github.com/users/timtei/gists{/gist_id}", "starred_url": "https://api.github.com/users/timtei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timtei/subscriptions", "organizations_url": "https://api.github.com/users/timtei/orgs", "repos_url": "https://api.github.com/users/timtei/repos", "events_url": "https://api.github.com/users/timtei/events{/privacy}", "received_events_url": "https://api.github.com/users/timtei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T12:20:36Z", "updated_at": "2020-02-13T17:21:30Z", "closed_at": "2020-02-13T17:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the init argument in Proj or CRS classes gives me a warning:\r\n`FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method.`\r\n\r\nSo I tried to drop it, but this changes the results of a coordinate transformation.\r\n\r\n\r\n#### Code Sample\r\n\r\n```python\r\nimport pyproj\r\n\r\n\r\nif __name__ == '__main__':\r\n    epsg_str_from = f'epsg:4326'\r\n    epsg_str_to = f'epsg:32632'\r\n\r\n    ## How I used it before\r\n    crs_from_old = pyproj.CRS(init=epsg_str_from)\r\n    crs_to_old = pyproj.CRS(init=epsg_str_to)\r\n\r\n   ## How I think I should use it now\r\n    crs_from_new = pyproj.CRS(epsg_str_from)\r\n    crs_to_new = pyproj.CRS(epsg_str_to)\r\n\r\n    ## Coordinate transformations\r\n    print(pyproj.Transformer.from_crs(crs_from_old, crs_to_old).transform(52., 5.))\r\n    # output: (5783719.117142345, 756201.8924663304)\r\n    print(pyproj.Transformer.from_crs(crs_from_new, crs_to_new).transform(52., 5.))\r\n    # output: (225451.74033262377, 5768595.563692021)\r\n\r\n    ## Old and new CRS objects are not equal\r\n    # assert crs_from_old == crs_from_new  # Would fail\r\n    # assert crs_to_old == crs_to_new  # Would fail\r\n \r\n\r\n    ## Bonus: Old and new Proj objects say they are equal, but their internal CRS objects are not.\r\n    proj_old = pyproj.Proj(init=epsg_str_from)\r\n    proj_new = pyproj.Proj(projparams=epsg_str_from)\r\n    assert proj_new == proj_old\r\n    assert proj_new.crs == proj_old.crs  # Fails, but why does the one above work?\r\n```\r\n\r\n\r\n#### Problem description / Expected output\r\n\r\n- The coordinate transformation should be the same independent of whether I use the old or the new syntax for the initializer. (I think the old one was correct.)\r\n- In my opinion the CRS objects should compare equal if they are equal (which they don't seem not to be here).\r\n- Proj objects should not compare equal if their crs properties don't.\r\n\r\n\r\n#### Environment Information\r\n\r\n```\r\npyproj info:\r\n    pyproj: 2.4.2.post1\r\n      PROJ: 6.2.1\r\n  data dir: D:\\wind_and_site\\Python_381\\lib\\site-packages\\pyproj\\proj_dir\\share\\proj\r\n\r\nSystem:\r\n    python: 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)]\r\nexecutable: D:\\wind_and_site\\Python_381\\python.exe\r\n   machine: Windows-7-6.1.7601-SP1\r\n\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 41.2.0\r\n    Cython: 0.29.15\r\n```\r\n\r\n\r\n#### Installation method\r\n\r\n`python -m pip install pyproj`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/537", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/537/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/537/events", "html_url": "https://github.com/pyproj4/pyproj/issues/537", "id": 564071097, "node_id": "MDU6SXNzdWU1NjQwNzEwOTc=", "number": 537, "title": "Conversion from EPSG:2451 is not correct", "user": {"login": "Isa-rentacs", "id": 1147443, "node_id": "MDQ6VXNlcjExNDc0NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1147443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Isa-rentacs", "html_url": "https://github.com/Isa-rentacs", "followers_url": "https://api.github.com/users/Isa-rentacs/followers", "following_url": "https://api.github.com/users/Isa-rentacs/following{/other_user}", "gists_url": "https://api.github.com/users/Isa-rentacs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Isa-rentacs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Isa-rentacs/subscriptions", "organizations_url": "https://api.github.com/users/Isa-rentacs/orgs", "repos_url": "https://api.github.com/users/Isa-rentacs/repos", "events_url": "https://api.github.com/users/Isa-rentacs/events{/privacy}", "received_events_url": "https://api.github.com/users/Isa-rentacs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-12T15:19:47Z", "updated_at": "2020-02-22T01:05:59Z", "closed_at": "2020-02-21T01:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\n# Your code here\r\n>>> from pyproj import Proj, transform\r\n>>> p = Proj(\"epsg:2451\")\r\n>>> p\r\nProj('+proj=tmerc +lat_0=36 +lon_0=139.833333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs', preserve_units=True)\r\n>>> p2 = Proj(\"+proj=tmerc +lat_0=36 +lon_0=139.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\")\r\n>>> p_to = Proj(\"epsg:4326\")\r\n>>> transform(p, p_to, -7000, -35000)\r\n(35.93628025299981, 139.44542437678555)\r\n>>> transform(p2, p_to, -7000, -35000)\r\n(35.68450348643748, 139.7559958666358)\r\n```\r\n#### Problem description\r\n\r\n[this should explain **why** the current behavior is a problem and why the expected output is a better solution.]\r\n\r\nAccording to https://epsg.io/2451, The Proj4 definition for epsg:2451 is\r\n```\r\n+proj=tmerc +lat_0=36 +lon_0=139.8333333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\r\n```\r\nHowever, when I instantiate a proj as ```p = Proj(\"epsg:2451\")```, it shows\r\n```\r\n+proj=tmerc +lat_0=36 +lon_0=139.833333333333 +k=0.9999 +x_0=0 +y_0=0 +ellps=GRS80 +units=m +no_defs\r\n```\r\nand ```+towgs84=0,0,0,0,0,0,0``` part is missing, which ended up with wrong lat/long after the conversion to epsg:4326.\r\n\r\n#### Expected Output\r\n```Proj(\"epsg:2451\")``` creates a Proj object with the correct definition.\r\n\r\n#### Environment Information\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python -m pyproj -v`\r\n```\r\npyproj info:\r\n    pyproj: 2.4.2.post1\r\n      PROJ: 6.2.1\r\n```\r\n\r\n\r\n#### Installation method\r\n - conda, pip wheel, from source, etc...\r\n  * pip\r\n    * pip install pyproj\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/536", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/536/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/536/events", "html_url": "https://github.com/pyproj4/pyproj/issues/536", "id": 563683938, "node_id": "MDU6SXNzdWU1NjM2ODM5Mzg=", "number": 536, "title": "Add support for building coordinate system with from_cf/to_cf", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-12T01:53:32Z", "updated_at": "2020-06-18T01:08:10Z", "closed_at": "2020-06-18T01:08:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since WKT (or PROJ JSON) is the backend for the CF conversions, additional support for different units and axis order are now possible. Currently the x/y axis order and units of meters for projected degrees for geographic are assumed.\r\n\r\nhttp://cfconventions.org/cf-conventions/cf-conventions.html#coordinate-system\r\n\r\nExamples of input units can be accessed from the coordinates:\r\nhttp://cfconventions.org/cf-conventions/cf-conventions.html#coordinate-types\r\n```\r\n  double y(y);\r\n    y:units = \"km\";\r\n    y:long_name = \"y coordinate of projection\";\r\n    y:standard_name = \"projection_y_coordinate\";\r\n  double x(x);\r\n    x:units = \"km\";\r\n    x:long_name = \"x coordinate of projection\";\r\n    x:standard_name = \"projection_x_coordinate\";\r\n  double lat(y, x);\r\n    lat:units = \"degrees_north\";\r\n    lat:long_name = \"latitude coordinate\";\r\n    lat:standard_name = \"latitude\";\r\n  double lon(y, x);\r\n    lon:units = \"degrees_east\";\r\n    lon:long_name = \"longitude coordinate\";\r\n    lon:standard_name = \"longitude\";\r\n```\r\n\r\nAdditionally, the vertical component can be supported:\r\nhttp://cfconventions.org/cf-conventions/cf-conventions.html#vertical-coordinate\r\n```\r\naxis_name:units = \"meters\" ;\r\naxis_name:positive = \"down\" ;\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/535", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/535/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/535/events", "html_url": "https://github.com/pyproj4/pyproj/issues/535", "id": 563669662, "node_id": "MDU6SXNzdWU1NjM2Njk2NjI=", "number": 535, "title": "Appveyor build issues", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T01:15:24Z", "updated_at": "2020-02-20T02:10:34Z", "closed_at": "2020-02-20T02:10:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://ci.appveyor.com/project/jswhit/pyproj-0e5a7/builds/30737116\r\n```\r\nvcpkg install sqlite3:\"%platform%\"-windows\r\nWarning: Different source is available for vcpkg (2019.9.12 -> 2020.2.4). Use .\\bootstrap-vcpkg.bat to update.\r\nYour feedback is important to improve Vcpkg! Please take 3 minutes to complete our survey by running: vcpkg contact --survey\r\nThe following packages will be built and installed:\r\n    sqlite3[core]:x64-windows\r\nStarting package 1/1: sqlite3:x64-windows\r\nBuilding package sqlite3[core]:x64-windows...\r\nCMake Error: Error processing file: C:/Tools/vcpkg/scripts/get_triplet_environment.cmake\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/533", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/533/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/533/events", "html_url": "https://github.com/pyproj4/pyproj/issues/533", "id": 562064608, "node_id": "MDU6SXNzdWU1NjIwNjQ2MDg=", "number": 533, "title": "Drop pyproj.Proj", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-08T19:13:13Z", "updated_at": "2020-02-24T02:25:38Z", "closed_at": "2020-02-24T02:25:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is currently around for backwards compatibility with pyproj 1.x. However, no new features will be likely be added.\r\n\r\nThis is superseded by use of `CRS` and `Transformer` classes:\r\n\r\n```python\r\ncc = CRS(...)\r\ntransformer = Transformer.from_crs(cc.geodetic_crs, cc)\r\ntransformer.transform(...)\r\n```\r\n\r\nIt is also requires conversion to a PROJ string, which may or may not be reliable:\r\nhttps://github.com/pyproj4/pyproj/blob/ae074ee4be00e245e23d1e26d0a06c0205af1dae/pyproj/proj.py#L161-L168\r\n\r\nThe plan would be to deprecate its usage in a 2.x release with deprecation/future warning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/532", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/532/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/532/events", "html_url": "https://github.com/pyproj4/pyproj/issues/532", "id": 562064150, "node_id": "MDU6SXNzdWU1NjIwNjQxNTA=", "number": 532, "title": "Deprecate pyproj.transform & pyproj.itransform", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-08T19:09:23Z", "updated_at": "2020-05-14T13:00:16Z", "closed_at": "2020-05-14T12:59:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "These are around for purposes of backwards compatibility with pyproj 1.x only. I don't plan to add anything new to them. Also, they are not optimal for use for repeated transformations. http://pyproj4.github.io/pyproj/stable/advanced_examples.html#advanced-examples\r\n\r\nThey have been superseded by pyproj.Transformer. The plan would be to add deprecation/future warnings in a 2.x release to warn users beforehand.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/531", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/531/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/531/events", "html_url": "https://github.com/pyproj4/pyproj/issues/531", "id": 562063648, "node_id": "MDU6SXNzdWU1NjIwNjM2NDg=", "number": 531, "title": "PROJ 7.0.0", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-08T19:05:30Z", "updated_at": "2020-03-13T01:38:51Z", "closed_at": "2020-03-13T01:38:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/OSGeo/PROJ/milestone/13\r\n\r\nRelease date March 1, 2020", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/530", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/530/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/530/events", "html_url": "https://github.com/pyproj4/pyproj/issues/530", "id": 562063533, "node_id": "MDU6SXNzdWU1NjIwNjM1MzM=", "number": 530, "title": "pyproj 3.0.0 release ideas", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-08T19:04:34Z", "updated_at": "2020-05-18T02:19:10Z", "closed_at": "2020-05-18T02:19:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am thinking about doing a breaking release for pyproj that better supports the new features in PROJ 7.0 (#574 ). It will probably be a while before it happens as I would like to get a 2.5.0 release and some bugfix releases afterwards first. But, I want to get this out in the open to hear some thoughts and ideas. I plan to open individual issues for each of the bullet points below.\r\n\r\nNew Featues\r\n- Better support for PROJ RFC 4 (https://proj.org/community/rfc/rfc-4.html) through c-api (#572)\r\n- ENH: Use 'proj_get_units_from_database' in the `get_units_map()` function. (#619)\r\n- ENH: Add support for `radians` for Proj & Transformer.from_pipeline enhancement (#612)\r\n- ENH: Add network methods to Transformer (#629)\r\n\r\nFeatures to drop:\r\n- PROJ datumgrids in wheels because not needed with RFC 4 (#628)\r\n- Deprecate pyproj.transform & pyproj.itransform (#532)\r\n- Support for PROJ < 7.1 (better enables support for new features & future compatibility) (#599)\r\n- Python 3.5 support (#499)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/529", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/529/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/529/events", "html_url": "https://github.com/pyproj4/pyproj/issues/529", "id": 562062412, "node_id": "MDU6SXNzdWU1NjIwNjI0MTI=", "number": 529, "title": "PROJ 6.3.1", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-08T18:56:40Z", "updated_at": "2020-02-13T22:27:36Z", "closed_at": "2020-02-13T22:27:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/OSGeo/PROJ/milestone/19\r\n\r\nIt says March 1, 2020, but it may come sooner.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/526", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/526/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/526/events", "html_url": "https://github.com/pyproj4/pyproj/issues/526", "id": 558810522, "node_id": "MDU6SXNzdWU1NTg4MTA1MjI=", "number": 526, "title": "Add enumeration for WKT2_2019", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T02:51:59Z", "updated_at": "2020-02-04T03:20:25Z", "closed_at": "2020-02-04T03:20:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/OSGeo/PROJ/issues/1578", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/523", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/523/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/523/events", "html_url": "https://github.com/pyproj4/pyproj/issues/523", "id": 557771671, "node_id": "MDU6SXNzdWU1NTc3NzE2NzE=", "number": 523, "title": "pyproj.CRS.from_epsg() not working", "user": {"login": "jheilbro", "id": 32622860, "node_id": "MDQ6VXNlcjMyNjIyODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/32622860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jheilbro", "html_url": "https://github.com/jheilbro", "followers_url": "https://api.github.com/users/jheilbro/followers", "following_url": "https://api.github.com/users/jheilbro/following{/other_user}", "gists_url": "https://api.github.com/users/jheilbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/jheilbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jheilbro/subscriptions", "organizations_url": "https://api.github.com/users/jheilbro/orgs", "repos_url": "https://api.github.com/users/jheilbro/repos", "events_url": "https://api.github.com/users/jheilbro/events{/privacy}", "received_events_url": "https://api.github.com/users/jheilbro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-30T21:41:11Z", "updated_at": "2020-01-30T22:48:20Z", "closed_at": "2020-01-30T22:48:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the following versions of pyproj and Python: \r\n```\r\npyproj.show_versions()\r\npyproj info:\r\n    pyproj: 2.4.2.post1\r\n      PROJ: 6.3.0\r\n  data dir: /Users/.../miniconda3/share/proj\r\nSystem:\r\n    python: 3.7.6 | packaged by conda-forge | (default, Jan  7 2020, 22:05:27)  [Clang 9.0.1 ]\r\nexecutable: /Users/.../miniconda3/envs/Mort_MktPwr/bin/python\r\n   machine: Darwin-19.2.0-x86_64-i386-64bit\r\nPython deps:\r\n       pip: 20.0.2\r\nsetuptools: 45.1.0.post20200119\r\n    Cython: None\r\n```\r\n\r\nI can't seem to construct simple CRS, as follows: \r\n\r\n```\r\npyproj.CRS.from_epsg(4326)\r\nTraceback (most recent call last):\r\n...\r\n  File \"pyproj/_crs.pyx\", line 1738, in pyproj._crs._CRS.__init__\r\npyproj.exceptions.CRSError: Invalid projection: epsg:4326: (Internal Proj Error: proj_create: cannot build geodeticCRS 4326: SQLite error on SELECT name, ellipsoid_auth_name, ellipsoid_code, prime_meridian_auth_name, prime_meridian_code, area_of_use_auth_name, area_of_use_code, publication_date, deprecated FROM geodetic_datum WHERE auth_name = ? AND code = ?: no such column: publication_date)\r\n```\r\n\r\nUltimately, this is preventing me from changing CRS in GeoPandas. \r\n\r\n```\r\ndfTrans.to_crs('epsg:4326')\r\nTraceback (most recent call last):\r\n...\r\n  File \"pyproj/_crs.pyx\", line 1738, in pyproj._crs._CRS.__init__\r\npyproj.exceptions.CRSError: Invalid projection: epsg:4326: (Internal Proj Error: proj_create: cannot build geodeticCRS 4326: SQLite error on SELECT name, ellipsoid_auth_name, ellipsoid_code, prime_meridian_auth_name, prime_meridian_code, area_of_use_auth_name, area_of_use_code, publication_date, deprecated FROM geodetic_datum WHERE auth_name = ? AND code = ?: no such column: publication_date)\r\n```\r\n\r\nI'm not very familiar with these packages, so I could be missing something simple. Any suggestions? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/521", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/521/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/521/events", "html_url": "https://github.com/pyproj4/pyproj/issues/521", "id": 555629098, "node_id": "MDU6SXNzdWU1NTU2MjkwOTg=", "number": 521, "title": "Has pyproj.crs accidentally removed from the pyproj?", "user": {"login": "OldSubSailor", "id": 54075170, "node_id": "MDQ6VXNlcjU0MDc1MTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/54075170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OldSubSailor", "html_url": "https://github.com/OldSubSailor", "followers_url": "https://api.github.com/users/OldSubSailor/followers", "following_url": "https://api.github.com/users/OldSubSailor/following{/other_user}", "gists_url": "https://api.github.com/users/OldSubSailor/gists{/gist_id}", "starred_url": "https://api.github.com/users/OldSubSailor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OldSubSailor/subscriptions", "organizations_url": "https://api.github.com/users/OldSubSailor/orgs", "repos_url": "https://api.github.com/users/OldSubSailor/repos", "events_url": "https://api.github.com/users/OldSubSailor/events{/privacy}", "received_events_url": "https://api.github.com/users/OldSubSailor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-01-27T14:55:47Z", "updated_at": "2020-08-14T12:18:44Z", "closed_at": "2020-01-28T04:15:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Has pyproj.crs accidentally removed from the pyproj?\r\nI think that pyproj was correctly installed:\r\nBuilding wheels for collected packages: pyproj\r\nBuilding wheel for pyproj (PEP 517) ... done\r\nCreated wheel for pyproj: filename=pyproj-2.4.2.post1-cp38-cp38-macosx_10_9_x86_64.whl size=385567 sha256=eeec09d7d31b88693003831cb3950bb675b5c95ec80822371aed705ac2ad7d58\r\nStored in directory: /private/var/folders/81/dknbj9t122v60nzlhfx5sspc0000gn/T/pip-ephem-wheel-cache-96kl54dd/wheels/cd/4d/b5/3ee84377669dbd035549164debd46ef4b88baabb8c99f8900e\r\nSuccessfully built pyproj\r\n\r\nThis error has suddenly appeared when trying to run Ortho4xp; it was working fine until I reinstalled files last night.\r\n\r\nfrom pyproj.crs import CRS\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in \r\nFile \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyproj/init.py\", line 81, in \r\nfrom pyproj.crs import CRS # noqa: F401\r\nModuleNotFoundError: No module named 'pyproj.crs'**\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/520", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/520/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/520/events", "html_url": "https://github.com/pyproj4/pyproj/issues/520", "id": 555545757, "node_id": "MDU6SXNzdWU1NTU1NDU3NTc=", "number": 520, "title": "Change in results from pyproj 2.2 to 2.3", "user": {"login": "astrofrog", "id": 314716, "node_id": "MDQ6VXNlcjMxNDcxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/314716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astrofrog", "html_url": "https://github.com/astrofrog", "followers_url": "https://api.github.com/users/astrofrog/followers", "following_url": "https://api.github.com/users/astrofrog/following{/other_user}", "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions", "organizations_url": "https://api.github.com/users/astrofrog/orgs", "repos_url": "https://api.github.com/users/astrofrog/repos", "events_url": "https://api.github.com/users/astrofrog/events{/privacy}", "received_events_url": "https://api.github.com/users/astrofrog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-27T12:35:41Z", "updated_at": "2020-01-28T12:48:26Z", "closed_at": "2020-01-28T01:27:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing issues after upgrading to pyproj 2.3 (and 2.4) - if I download the following file:\r\n\r\nhttps://raw.githubusercontent.com/glue-viz/glue-geospatial/master/glue_geospatial/tests/data/simplegeo.tif\r\n\r\nand run this:\r\n\r\n```python\r\nimport rasterio\r\nfrom pyproj import Proj\r\n\r\nwith rasterio.open('simplegeo.tif') as src:\r\n    crs_dict = src.crs.to_dict()\r\n    coords = (9, 12)\r\n    coords = src.transform * coords\r\n    print(coords)\r\n    proj = Proj(**crs_dict)\r\n    print(proj(*coords, inverse=True))\r\n```\r\n\r\nThe output in pyproj 2.2 is:\r\n\r\n```\r\n(-3.971666666666667, 2.9616666666666664)\r\n(132.440262367208, 169.6910003245788)\r\n```\r\n\r\nand in 2.3 and 2.4 is:\r\n\r\n```\r\n(-3.971666666666667, 2.9616666666666664)\r\n(-3.9716666666666676, 2.9616666666666664)\r\n```\r\n\r\nso it looks like Proj is now acting like an identity transform. Bisecting leads to  5dc911f433fa7901559d52000ad0da836db015e1 as being the first bad commit (cc @snowman2)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/515", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/515/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/515/events", "html_url": "https://github.com/pyproj4/pyproj/issues/515", "id": 554287432, "node_id": "MDU6SXNzdWU1NTQyODc0MzI=", "number": 515, "title": "Unexpected geostationary CF conversion", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-01-23T17:04:22Z", "updated_at": "2020-02-13T14:59:35Z", "closed_at": "2020-02-13T13:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\nA \"Minimal, Complete and Verifiable Example\" will make it much easier for maintainers to help you:\r\nhttp://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n\r\n```python\r\nfrom pyproj import CRS                                                                                                                                                                                       \r\na = 6378169.\r\nb = 6356583.8\r\nh = 35785831.\r\n\r\nCRS.from_dict({'proj': 'geos', 'h': h, 'a': a, 'b': b}).to_cf()\r\n# Output\r\n{'crs_wkt': 'PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",6378169,295.488065897001,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Geostationary Satellite (Sweep Y)\"],PARAMETER[\"Longitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"Satellite Height\",35785831,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]',\r\n 'grid_mapping_name': 'geostationary',\r\n 'longitude_of_projection_origin': 0,\r\n 'perspective_point_height': 35785831,\r\n 'false_easting': 0,\r\n 'false_northing': 0,\r\n 'semi_major_axis': 6378169,\r\n 'semi_minor_axis': 6356583.8,\r\n 'unit': 'm'}\r\n\r\nCRS.from_dict({'proj': 'geos', 'h': h, 'a': a, 'b': b, 'lat_0': 0}).to_cf()\r\n# Output\r\n{'crs_wkt': 'PROJCRS[\"unknown\",BASEGEOGCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",6378169,295.488065897001,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]]],CONVERSION[\"unknown\",METHOD[\"Geostationary Satellite (Sweep Y)\"],PARAMETER[\"Longitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"Satellite Height\",35785831,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]',\r\n 'grid_mapping_name': 'geostationary',\r\n 'perspective_point_height': 35785831.0,\r\n 'semi_major_axis': 6378169.0,\r\n 'semi_minor_axis': 6356583.8,\r\n 'latitude_of_projection_origin': 0}\r\n\r\n```\r\n\r\n#### Problem description\r\n\r\nAs seen in the output above, when `lon_0` and `lat_0` are missing in the PROJ definition, `to_cf` is providing a default `longitude_of_projection_origin`, `false_easting`, and `false_northing`, but no `latitude_of_projection_origin` (default of 0). When we add a `lat_0` parameter the `longitude_of_projection_origin`, `false_easting`, and `false_northing` are removed.\r\n\r\n#### Expected Output\r\n\r\nI'm not sure. It is not completely unreasonable to me that a descriptive PROJ description has to be provided to get the related CF attributes to come out on the other end. However, there are some parameters for CF that are missing if they are not provided and have known defaults. That said, I understand with the way the CF conversion is implemented there is no way to know how to convert a parameter that doesn't exist.\r\n\r\nAny idea if CF considers parameters like `latitude_of_projection_origin` optional? What about `sweep_angle_axis`? I didn't see a mention of them as being optional in the CF spec. Maybe they should be?\r\n\r\nJust wanted to point this all out in case it was unexpected for you.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/511", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/511/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/511/events", "html_url": "https://github.com/pyproj4/pyproj/issues/511", "id": 553261523, "node_id": "MDU6SXNzdWU1NTMyNjE1MjM=", "number": 511, "title": "Add documentation for multiprocessing", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291901924, "node_id": "MDU6TGFiZWwxMjkxOTAxOTI0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/documentation", "name": "documentation", "color": "0052cc", "default": true, "description": "Docs need updating"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-22T01:55:31Z", "updated_at": "2020-03-08T01:14:29Z", "closed_at": "2020-03-08T01:14:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Mostly just say that you shouldn't pass the Proj. CRS, Geod, Transformer objects across threads. Each needs to be contained in a single thread.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/510", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/510/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/510/events", "html_url": "https://github.com/pyproj4/pyproj/issues/510", "id": 552840653, "node_id": "MDU6SXNzdWU1NTI4NDA2NTM=", "number": 510, "title": "transformer.from_crs flips X and Y in output when transforming", "user": {"login": "prinsniels", "id": 8694100, "node_id": "MDQ6VXNlcjg2OTQxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8694100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prinsniels", "html_url": "https://github.com/prinsniels", "followers_url": "https://api.github.com/users/prinsniels/followers", "following_url": "https://api.github.com/users/prinsniels/following{/other_user}", "gists_url": "https://api.github.com/users/prinsniels/gists{/gist_id}", "starred_url": "https://api.github.com/users/prinsniels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prinsniels/subscriptions", "organizations_url": "https://api.github.com/users/prinsniels/orgs", "repos_url": "https://api.github.com/users/prinsniels/repos", "events_url": "https://api.github.com/users/prinsniels/events{/privacy}", "received_events_url": "https://api.github.com/users/prinsniels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T12:16:16Z", "updated_at": "2020-01-21T12:54:36Z", "closed_at": "2020-01-21T12:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Issue**:\r\nWhen creating a transformer via transformer.from_proj and calling transform on a coordinate set, I expect the same result as calling transform via a transformer created by transformer.from_crs. This does not hold. When creating a transformer via .from_crs the X and Y are switched. See code below.\r\n\r\n**using**:\r\npython 3.7\r\npyproj 2.4.2.post1\r\n\r\n**Code**:\r\n```python\r\nprint(__version__)\r\nRDX = 103392.0\r\nRDY = 468608.6\r\np1 = 'epsg:28992'\r\np2 = 'epsg:4326'\r\nt_proj = Transformer.from_proj(proj_from=Proj(init=p1), proj_to=Proj(init=p2))\r\nt_crs = Transformer.from_crs(crs_from=p1, crs_to=p2)\r\nprint(f\"FROM_PROJ => {t_proj.transform(xx=RDX, yy=RDY)}\")\r\nprint(f\"FROM_CRS => {t_crs.transform(xx=RDX, yy=RDY)}\")\r\ncoords_proj = t_proj.transform(xx=RDX, yy=RDY)\r\ncoords_crs = t_crs.transform(xx=RDX, yy=RDY)\r\nprint(\"Equal\",  coords_crs == coords_proj)\r\nprint(\"Flipped\", coords_crs[0] == coords_proj[1] and coords_crs[1] == coords_proj[0])\r\n```\r\n\r\n**Result**:\r\n2.4.2.post1\r\nFROM_PROJ => (4.632256139162482, 52.20316882027802)\r\nFROM_CRS => (52.20316882027802, 4.632256139162482)\r\nEqual False\r\nFlipped True\r\n\r\n\r\nI tried this for multiple epsg codes, all show the same result.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/504", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/504/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/504/events", "html_url": "https://github.com/pyproj4/pyproj/issues/504", "id": 545667799, "node_id": "MDU6SXNzdWU1NDU2Njc3OTk=", "number": 504, "title": "Wrong coordinates computed if the 'init=' string if removed in pyproj.Proj() definitions", "user": {"login": "swiss-knight", "id": 19967599, "node_id": "MDQ6VXNlcjE5OTY3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/19967599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiss-knight", "html_url": "https://github.com/swiss-knight", "followers_url": "https://api.github.com/users/swiss-knight/followers", "following_url": "https://api.github.com/users/swiss-knight/following{/other_user}", "gists_url": "https://api.github.com/users/swiss-knight/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiss-knight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiss-knight/subscriptions", "organizations_url": "https://api.github.com/users/swiss-knight/orgs", "repos_url": "https://api.github.com/users/swiss-knight/repos", "events_url": "https://api.github.com/users/swiss-knight/events{/privacy}", "received_events_url": "https://api.github.com/users/swiss-knight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T10:58:34Z", "updated_at": "2020-01-07T13:48:15Z", "closed_at": "2020-01-07T01:08:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered wrong coordinates computed with `shapely.ops.transform()` when given a partial with `pyproj.transform()` if the `'init='` string if removed from `pyproj.Proj()` definitions.\r\n\r\n(\r\nIf I let the \"init=\" prefix, I meet this warning, that why I way trying to remove it:    \r\n```/usr/local/lib/python3.6/dist-packages/pyproj/crs.py:422: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method.```\r\n)\r\n\r\nI'm not 100% sure it's a `pyproj` issue, if not, please let me know.\r\n\r\nHere is a complete example:\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nfrom shapely.geometry import Point\r\nimport shapely.ops as sp_ops\r\nimport pyproj\r\nimport functools\r\ninit_str = 'init='\r\nscrs = 4326 # EPSG code (from)\r\ntcrs = 21781 # EPSG code (to)\r\nif False: # Set to True to run the experiment. \r\n    init_str = ''\r\n\r\nproject = functools.partial(pyproj.transform, \r\n                            pyproj.Proj(init_str+'EPSG:'+str(scrs)),\r\n                            pyproj.Proj(init_str+'EPSG:'+str(tcrs)))\r\n#print(project)\r\n\r\nmy_point_wgs84 = (8.839914681035225, 46.669436346362076, 2388.378981723203)\r\ngeom = Point(my_point_wgs84)\r\ngeom_transformed = sp_ops.transform(project, geom)\r\nprint(geom_transformed.x, geom_transformed.y, geom_transformed.z)\r\n\r\n```\r\n#### Problem description\r\nIf the `If` trigger is set to False, the output is:\r\n`707227.4416038939 169646.7022298526 2388.378981723203`\r\nWhich is what I expect.\r\n\r\nIf the `If` trigger is set to True, the output computed position is wrong:\r\n`5554005.956645905 -2908770.7917148615 2388.378981723203`\r\n\r\n#### Expected Output\r\n`707227.4416038939 169646.7022298526 2388.378981723203`\r\n\r\n#### Environment Information\r\nUbuntu 18.04 64 bit: `5.0.0-37-generic x86_64 GNU/Linux`\r\nPython: `3.6.9 (default, Nov  7 2019, 10:44:02)`\r\npyproj: `'2.4.2.post1'`\r\n\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python3 -m pyproj -v`\r\n```\r\npyproj info:\r\n    pyproj: 2.4.2.post1\r\n      PROJ: 6.2.1\r\n  data dir: /usr/local/lib/python3.6/dist-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]\r\nexecutable: /usr/bin/python3\r\n   machine: Linux-5.0.0-37-generic-x86_64-with-Ubuntu-18.04-bionic\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 41.2.0\r\n    Cython: 0.26.1\r\n\r\n```\r\n\r\n - pyproj version (`python3 -c \"import pyproj; print(pyproj.__version__)\"`)\r\n`2.4.2.post1`\r\n\r\n - PROJ version (`python3 -c \"import pyproj; print(pyproj.proj_version_str)\"`)\r\n`6.2.1`\r\n\r\n - PROJ data directory (`python3 -c \"import pyproj; print(pyproj.datadir.get_data_dir())\"`)\r\n`/usr/local/lib/python3.6/dist-packages/pyproj/proj_dir/share/proj`\r\n\r\n - Python version (`python3 -c \"import sys; print(sys.version.replace('\\n', ' '))\"`)\r\n`3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]\r\n`\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`)\r\n`Linux-5.0.0-37-generic-x86_64-with-Ubuntu-18.04-bionic`\r\n\r\n#### Installation method\r\npip\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/503", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/503/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/503/events", "html_url": "https://github.com/pyproj4/pyproj/issues/503", "id": 545362516, "node_id": "MDU6SXNzdWU1NDUzNjI1MTY=", "number": 503, "title": "Meridian Convergence and Scale Factor", "user": {"login": "wg1562", "id": 59520869, "node_id": "MDQ6VXNlcjU5NTIwODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/59520869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wg1562", "html_url": "https://github.com/wg1562", "followers_url": "https://api.github.com/users/wg1562/followers", "following_url": "https://api.github.com/users/wg1562/following{/other_user}", "gists_url": "https://api.github.com/users/wg1562/gists{/gist_id}", "starred_url": "https://api.github.com/users/wg1562/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wg1562/subscriptions", "organizations_url": "https://api.github.com/users/wg1562/orgs", "repos_url": "https://api.github.com/users/wg1562/repos", "events_url": "https://api.github.com/users/wg1562/events{/privacy}", "received_events_url": "https://api.github.com/users/wg1562/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-01-05T03:20:45Z", "updated_at": "2020-05-13T21:53:03Z", "closed_at": "2020-02-24T02:40:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI joined GitHub to get help with this issue, related to:\r\nhttps://github.com/pyproj4/pyproj/issues/144\r\n\r\nI want to use pyproj in python to convert coordinates and get the meridian convergence angle and grid scale factor. I figured out from the proj command line to use the -V flag to get these values, but it would be great to be able to get these values directly with pyproj in python.\r\n\r\nThere was talk of adding this feature into pyproj, but snooping through the scripts I didn't see anything. Is there any plans of still adding it? \r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/499", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/499/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/499/events", "html_url": "https://github.com/pyproj4/pyproj/issues/499", "id": 533392334, "node_id": "MDU6SXNzdWU1MzMzOTIzMzQ=", "number": 499, "title": "Drop Python 3.5 support", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1335880194, "node_id": "MDU6TGFiZWwxMzM1ODgwMTk0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/discussion", "name": "discussion", "color": "fef2c0", "default": false, "description": "An issue for having a discusssion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T14:38:24Z", "updated_at": "2020-05-05T13:35:53Z", "closed_at": "2020-05-05T13:35:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seems Python 3.5 support is being dropped in the community.\r\n- [numpy](https://numpy.org/neps/nep-0029-deprecation_policy.html)\r\n- [pandas](https://github.com/pandas-dev/pandas/pull/29212)\r\n- [rasterio](https://github.com/mapbox/rasterio/issues/1813)\r\n- [xarray](https://github.com/pydata/xarray/pull/3358)\r\n- [datacube](https://github.com/opendatacube/datacube-core/issues/828)\r\n- [Django 3](https://docs.djangoproject.com/en/dev/releases/3.0/#python-compatibility)\r\n\r\nAlso 3.5 has not been supported by conda/conda-forge for a while.\r\n\r\nI am wondering how many Python 3.5 users are out there and how long pyproj should continue support. Anyone have insight they would like to share?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/495", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/495/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/495/events", "html_url": "https://github.com/pyproj4/pyproj/issues/495", "id": 530844851, "node_id": "MDU6SXNzdWU1MzA4NDQ4NTE=", "number": 495, "title": "warning: \u2018PyObject_AsWriteBuffer\u2019 is deprecated [-Wdeprecated-declarations]", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T02:03:15Z", "updated_at": "2019-12-05T03:06:43Z", "closed_at": "2019-12-05T03:06:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://docs.python.org/3/c-api/objbuffer.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/494", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/494/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/494/events", "html_url": "https://github.com/pyproj4/pyproj/issues/494", "id": 530819088, "node_id": "MDU6SXNzdWU1MzA4MTkwODg=", "number": 494, "title": "Pyproj 2.4.2[.post1] causes odd multiprocessing error", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-12-01T23:50:45Z", "updated_at": "2019-12-03T19:35:32Z", "closed_at": "2019-12-03T19:35:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Satpy has recently started crashing and I'm trying to narrow it down. It only happens on python 3.8 from what I can tell so far, but could be simply related to pyproj 2.4.2 and the old python 3.7 environments we have not being updated (like I said still investigating).\r\n\r\nThis could also be related to how conda-forge is combining the 2.4.2 builds with other libraries but as far as I can tell the only differences between a python 3.8 environment that works and a python 3.8 environment that doesn't is pyopenssl, ipython, and pyproj. Forcing pyproj to 2.4.1 fixes our tests.\r\n\r\nOriginally working test: https://travis-ci.org/pytroll/satpy/jobs/619073023?utm_medium=notification&utm_source=slack\r\n\r\nFailing test (pyproj 2.4.2.post1 from conda-forge): https://travis-ci.org/pytroll/satpy/jobs/619335006?utm_medium=notification&utm_source=slack\r\n\r\nPassing test (pyproj 2.4.1 forced from conda-forge): https://travis-ci.org/pytroll/satpy/jobs/619350332\r\n\r\nI am having the user who originally reported the issue test out the pip version of pyproj along with the dependencies installed from conda-forge (those pinned to pyproj 2.4.1).\r\n\r\n```\r\nException ignored in: <function Pool.__del__ at 0x7fd6472faa60>\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.8/multiprocessing/pool.py\", line 268, in __del__\r\n\r\n  File \"/home/travis/miniconda/envs/test/lib/python3.8/multiprocessing/queues.py\", line 362, in put\r\n\r\nAttributeError: 'NoneType' object has no attribute 'dumps'\r\n```\r\n\r\nAny idea if there is anything that changed in 2.4.2 or 2.4.2.post1 that may have caused these issues?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/493", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/493/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/493/events", "html_url": "https://github.com/pyproj4/pyproj/issues/493", "id": 530656722, "node_id": "MDU6SXNzdWU1MzA2NTY3MjI=", "number": 493, "title": "ENH: Add option to use proj_normalize_for_visualization with CRS class", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1275216000, "node_id": "MDU6TGFiZWwxMjc1MjE2MDAw", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proposal", "name": "proposal", "color": "266084", "default": false, "description": "Idea for a new feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-01T02:07:49Z", "updated_at": "2019-12-10T04:25:52Z", "closed_at": "2019-12-10T04:25:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "According to PROJ [docstring](https://github.com/OSGeo/PROJ/blob/43a6c1535c4d06abeb4f56b676e1bf403ae13822/src/iso19111/c_api.cpp#L7672-L7691), it can be used with CRS class:\r\n\r\nRelated to https://github.com/geopandas/geopandas/pull/1101#issuecomment-559812870\r\n\r\n- potentially useful for comparisons of CRS with different axis order (if it works)\r\n\r\nIdeas:\r\n1. Add `is_equivalent()` method to CRS and add `ignore_axis_order=False` kwarg to both `is_equivalent()` and `is_exact_same()` methods.\r\n2. Add `set_traditional_axis_order()` method to CRS class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/492", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/492/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/492/events", "html_url": "https://github.com/pyproj4/pyproj/issues/492", "id": 528449650, "node_id": "MDU6SXNzdWU1Mjg0NDk2NTA=", "number": 492, "title": "2.4.2 Release", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T02:34:31Z", "updated_at": "2019-12-01T05:14:20Z", "closed_at": "2019-12-01T01:08:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Release Candidate 0 Status:\r\n\r\nhttps://github.com/pyproj4/pyproj/releases/tag/2.4.2.rc0\r\n\r\n- [x] Linux/OSX wheels (https://github.com/pyproj4/pyproj-wheels/pull/20)\r\n- [ ] Windows wheels (ping @cgohlke)\r\n- [x] Conda Forge (https://github.com/conda-forge/pyproj-feedstock/pull/59)\r\n- [x] Debian (ping @sebastic)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/488", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/488/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/488/events", "html_url": "https://github.com/pyproj4/pyproj/issues/488", "id": 526277361, "node_id": "MDU6SXNzdWU1MjYyNzczNjE=", "number": 488, "title": "HARN projection round trip yields a non-HARN based projection", "user": {"login": "koshy1123", "id": 12819087, "node_id": "MDQ6VXNlcjEyODE5MDg3", "avatar_url": "https://avatars3.githubusercontent.com/u/12819087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koshy1123", "html_url": "https://github.com/koshy1123", "followers_url": "https://api.github.com/users/koshy1123/followers", "following_url": "https://api.github.com/users/koshy1123/following{/other_user}", "gists_url": "https://api.github.com/users/koshy1123/gists{/gist_id}", "starred_url": "https://api.github.com/users/koshy1123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koshy1123/subscriptions", "organizations_url": "https://api.github.com/users/koshy1123/orgs", "repos_url": "https://api.github.com/users/koshy1123/repos", "events_url": "https://api.github.com/users/koshy1123/events{/privacy}", "received_events_url": "https://api.github.com/users/koshy1123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680574, "node_id": "MDU6TGFiZWwxNjE2ODA1NzQ=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T23:37:05Z", "updated_at": "2019-11-21T01:59:28Z", "closed_at": "2019-11-21T01:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be solved when `geopandas` migrates to using `pyproj`'s CRS class (Looking forward to it!: https://github.com/geopandas/geopandas/pull/1101) but I wanted to make sure this isn't a bug.\r\n\r\nWhile migrating our codebase to consistently use `pyproj`'s CRS class for all projection instances, I noticed this odd rountrip issue with a HARN-based DC projection ([EPSG:2926](http://epsg.io/2926)). On the round trip from `dict` to an integer EPSG code, I get [EPSG:2285](http://epsg.io/2285) which is a non-HARN based datum. \r\n\r\n```\r\n>> gdf.crs\r\n{'init': 'epsg:2926', 'no_defs': True}\r\n>> CRS.from_dict(gdf.crs).to_epsg()\r\n2285\r\n```\r\n\r\nTo me, this looks like a bug but wanted to see if others have thoughts.\r\n\r\nUsing `pyproj` version 2.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/487", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/487/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/487/events", "html_url": "https://github.com/pyproj4/pyproj/issues/487", "id": 523025330, "node_id": "MDU6SXNzdWU1MjMwMjUzMzA=", "number": 487, "title": "PROJ 6.3.0", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-14T18:18:28Z", "updated_at": "2020-02-13T22:28:11Z", "closed_at": "2020-02-13T22:28:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Jan. 2020\r\n\r\nhttps://github.com/OSGeo/PROJ/milestone/18", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/484", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/484/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/484/events", "html_url": "https://github.com/pyproj4/pyproj/issues/484", "id": 522536685, "node_id": "MDU6SXNzdWU1MjI1MzY2ODU=", "number": 484, "title": "pyproj.transform() 2.2.0 running 11,000 times slower than pyproj.transform() 1.9.5.1", "user": {"login": "wrwetzel", "id": 898959, "node_id": "MDQ6VXNlcjg5ODk1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/898959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrwetzel", "html_url": "https://github.com/wrwetzel", "followers_url": "https://api.github.com/users/wrwetzel/followers", "following_url": "https://api.github.com/users/wrwetzel/following{/other_user}", "gists_url": "https://api.github.com/users/wrwetzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrwetzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrwetzel/subscriptions", "organizations_url": "https://api.github.com/users/wrwetzel/orgs", "repos_url": "https://api.github.com/users/wrwetzel/repos", "events_url": "https://api.github.com/users/wrwetzel/events{/privacy}", "received_events_url": "https://api.github.com/users/wrwetzel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-13T23:41:25Z", "updated_at": "2019-11-14T00:54:47Z", "closed_at": "2019-11-14T00:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pyproj\r\nfrom itertools import repeat\r\nimport sys\r\nimport time\r\n\r\nwgs84     = pyproj.Proj(\"+init=EPSG:4326\")\r\nNewJersey = pyproj.Proj(\"+init=EPSG:3424\")\r\n\r\npoint = [ 621214, 547761 ]   \r\ncount = 1000000.    # 100. for 2.2.2 or 2.4.0\r\nstart = time.time()\r\nfor i in repeat(None, int(count) ):\r\n    tpoint = pyproj.transform( NewJersey, wgs84,  point[0] * .3048, point[1] * .3048)\r\n\r\nruntime = time.time() - start\r\n\r\nprint( \"pyproj version:\", pyproj.__version__ )\r\nprint( \"python version:\", sys.version )\r\nprint( \"count:\", count )\r\nprint( \"time:\", runtime )\r\nprint( \"per iteration:\", runtime/count )\r\n```\r\n#### Problem description\r\nWith release 1.9.5.1 the above programs takes 5.457669973373413e-06 sec/iteration\r\nWith release 2.2.2 it takes 0.060466268062591554 sec/iteration, ~11,000 times slower.\r\n\r\nWhy such a huge decrease in performance?\r\nThanks,\r\nBill\r\n\r\nResults shown are for python2.7 I got similar results with pyproj 2.4.0 on python3.7.\r\n#### Expected Output\r\n```\r\n('pyproj version:', '2.2.2')\r\n('python version:', '2.7.17 (default, Oct 22 2019, 09:14:09) \\n[GCC 9.2.0]')\r\n('count:', 100.0)\r\n('time:', 6.046626806259155)\r\n('per iteration:', 0.060466268062591554)\r\n---------------------------------------------------------------\r\n('pyproj version:', '1.9.5.1')\r\n('python version:', '2.7.17 (default, Oct 22 2019, 09:14:09) \\n[GCC 9.2.0]')\r\n('count:', 1000000.0)\r\n('time:', 5.457669973373413)\r\n('per iteration:', 5.457669973373413e-06)\r\n```\r\n\r\n#### Environment Information\r\nShown above and...\r\nLinux-5.3.8-arch1-1-x86_64-with-arch\r\n\r\n#### Installation method\r\npip2 for python2.7\r\npacman -S for python3.7\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/483", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/483/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/483/events", "html_url": "https://github.com/pyproj4/pyproj/issues/483", "id": 521872023, "node_id": "MDU6SXNzdWU1MjE4NzIwMjM=", "number": 483, "title": "to_epsg() returning `None` in `2.4.1` but same code worked for `2.4.0`", "user": {"login": "koshy1123", "id": 12819087, "node_id": "MDQ6VXNlcjEyODE5MDg3", "avatar_url": "https://avatars3.githubusercontent.com/u/12819087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koshy1123", "html_url": "https://github.com/koshy1123", "followers_url": "https://api.github.com/users/koshy1123/followers", "following_url": "https://api.github.com/users/koshy1123/following{/other_user}", "gists_url": "https://api.github.com/users/koshy1123/gists{/gist_id}", "starred_url": "https://api.github.com/users/koshy1123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koshy1123/subscriptions", "organizations_url": "https://api.github.com/users/koshy1123/orgs", "repos_url": "https://api.github.com/users/koshy1123/repos", "events_url": "https://api.github.com/users/koshy1123/events{/privacy}", "received_events_url": "https://api.github.com/users/koshy1123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-12T23:58:33Z", "updated_at": "2019-11-13T01:07:14Z", "closed_at": "2019-11-13T00:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\nI'm trying to upgrade from pyproj `2.4.0` to `2.4.1` and I see this odd behavior. In `2.4.0`, this works:\r\n\r\n```python\r\n>>> import pyproj\r\n>>> test_crs = {'init': 'epsg:4326', 'no_defs': True}\r\n>>> pyproj.crs.CRS.from_dict(test_crs).to_epsg()\r\n4326\r\n```\r\nBut in `2.4.1`, I'm getting a `None` for `to_epsg()`\r\n\r\n#### Problem description\r\n\r\nI needed this roundtrip so that I can use it in a function that takes a geodataframe's `crs` dict attribute and get an EPSG code from it.\r\n\r\n\r\n#### Environment Information\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python -m pyproj -v`\r\n```\r\npyproj info:\r\n    pyproj: 2.4.1\r\n      PROJ: 6.2.1\r\n  data dir: /usr/local/lib/python3.7/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.7.5 (default, Oct 19 2019, 00:03:48)  [GCC 8.3.0]\r\nexecutable: /usr/local/bin/python\r\n   machine: Linux-4.19.76-linuxkit-x86_64-with-debian-10.1\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 41.4.0\r\n    Cython: 0.29.14\r\n```\r\n\r\n#### Installation method\r\n - pip\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/481", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/481/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/481/events", "html_url": "https://github.com/pyproj4/pyproj/issues/481", "id": 520455083, "node_id": "MDU6SXNzdWU1MjA0NTUwODM=", "number": 481, "title": "6 failing test cases for i686 platform during fedora 32/rawhide build", "user": {"login": "jdkloe", "id": 1906112, "node_id": "MDQ6VXNlcjE5MDYxMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1906112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdkloe", "html_url": "https://github.com/jdkloe", "followers_url": "https://api.github.com/users/jdkloe/followers", "following_url": "https://api.github.com/users/jdkloe/following{/other_user}", "gists_url": "https://api.github.com/users/jdkloe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdkloe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdkloe/subscriptions", "organizations_url": "https://api.github.com/users/jdkloe/orgs", "repos_url": "https://api.github.com/users/jdkloe/repos", "events_url": "https://api.github.com/users/jdkloe/events{/privacy}", "received_events_url": "https://api.github.com/users/jdkloe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-09T15:17:51Z", "updated_at": "2019-11-23T13:20:29Z", "closed_at": "2019-11-23T13:20:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Problem description\r\n\r\nDuring the build of pyproj for Fedora rawhide (32) for pyproj release 2.4.1 I switched on the new pytest test system.\r\nThe build went well for all supported platforms, but running the test suite failed on the i686 platform because of 6 failed test cases.\r\nThe log file for this build is available on:\r\nhttps://koji.fedoraproject.org/koji/taskinfo?taskID=38858317\r\n\r\nDetails for failing tests start at line 631 in the build.log file.\r\n\r\n#### Expected Output\r\n\r\nall tests should pass\r\n\r\n#### Environment Information\r\npy.test-3 output\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.8.0, pytest-4.6.6, py-1.8.0, pluggy-0.12.0\r\nrootdir: /builddir/build/BUILD/pyproj-2.4.1\r\ncollected 325 items\r\n...\r\n\r\nproj version 6.2.0 (as packaged for fedora-rawhide)\r\n\r\n#### Installation method\r\n\r\nfrom source: pyproj-2.4.1.tar.gz as downloaded from pypi\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/480", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/480/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/480/events", "html_url": "https://github.com/pyproj4/pyproj/issues/480", "id": 520425100, "node_id": "MDU6SXNzdWU1MjA0MjUxMDA=", "number": 480, "title": "Raspbian wheel/improved install instructions", "user": {"login": "proximous", "id": 8294191, "node_id": "MDQ6VXNlcjgyOTQxOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8294191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/proximous", "html_url": "https://github.com/proximous", "followers_url": "https://api.github.com/users/proximous/followers", "following_url": "https://api.github.com/users/proximous/following{/other_user}", "gists_url": "https://api.github.com/users/proximous/gists{/gist_id}", "starred_url": "https://api.github.com/users/proximous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/proximous/subscriptions", "organizations_url": "https://api.github.com/users/proximous/orgs", "repos_url": "https://api.github.com/users/proximous/repos", "events_url": "https://api.github.com/users/proximous/events{/privacy}", "received_events_url": "https://api.github.com/users/proximous/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291901924, "node_id": "MDU6TGFiZWwxMjkxOTAxOTI0", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/documentation", "name": "documentation", "color": "0052cc", "default": true, "description": "Docs need updating"}, {"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-09T13:22:49Z", "updated_at": "2019-11-14T01:06:59Z", "closed_at": "2019-11-14T01:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if you could offer a Raspbian wheel.\r\n\r\nBarring that, it would be nice if you could update your install instructions to indicate that when installing from pip without a wheel, PROJ needs to be installed and a reference to https://proj.org/install.html provided. \r\n\r\nIt would also be nice for a clearer error message about this. I got:\r\n\r\n>ERROR: ...\r\n  Proj executable not found. Please set PROJ_DIR variable.\r\n\r\nPrehaps something like:\r\n>ERROR: ...\r\n  Proj executable not found. Please install Proj (https://proj.org/install.html) and/or set PROJ_DIR variable.\r\n\r\n\r\nFurther, it would also be nice to list the PROJ version compatibility for the different pyproj releases. After running `apt install proj-bin`, my `pip install pyproj` still failed with:\r\n>ERROR: Minimum supported proj version is 6.2.0, installed version is 4.9.3.\r\n\r\nIt took a bit of digging through commits to find that I needed `pip install pyproj==1.9.6` for compatibility with 4.9.3. Some simple compatibility chart would be nice.\r\n\r\nAnyway, not complaints. Just hoping to inspire some enhanced install instructions to help others with this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/478", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/478/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/478/events", "html_url": "https://github.com/pyproj4/pyproj/issues/478", "id": 519159533, "node_id": "MDU6SXNzdWU1MTkxNTk1MzM=", "number": 478, "title": "2.4.1 version installation with pip does not work", "user": {"login": "eeromakiesko", "id": 19694670, "node_id": "MDQ6VXNlcjE5Njk0Njcw", "avatar_url": "https://avatars2.githubusercontent.com/u/19694670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eeromakiesko", "html_url": "https://github.com/eeromakiesko", "followers_url": "https://api.github.com/users/eeromakiesko/followers", "following_url": "https://api.github.com/users/eeromakiesko/following{/other_user}", "gists_url": "https://api.github.com/users/eeromakiesko/gists{/gist_id}", "starred_url": "https://api.github.com/users/eeromakiesko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eeromakiesko/subscriptions", "organizations_url": "https://api.github.com/users/eeromakiesko/orgs", "repos_url": "https://api.github.com/users/eeromakiesko/repos", "events_url": "https://api.github.com/users/eeromakiesko/events{/privacy}", "received_events_url": "https://api.github.com/users/eeromakiesko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-07T09:56:50Z", "updated_at": "2019-11-11T11:32:49Z", "closed_at": "2019-11-08T01:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Installation method/steps\r\nInstallation with pip inside docker container does not work.\r\npip install pyproj\r\n\r\nproduces:\r\nCollecting pyproj (from geopandas==0.4.1->-r /requirements_php.txt (line 5))\r\n  Downloading ... (462kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n    Complete output from command python setup.py egg_info:\r\n    Proj executable not found. Please set PROJ_DIR variable.\r\n\r\nThis was done inside docker base image:\r\nphp:7.3-apache\r\n\r\n#### Environment Information\r\n - pyproj 2.4.1 fails 2.4.0 works fine\r\n - Python version 3.7\r\n - Operation System Information docker image php:7.3-apache (alpine based linux)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/477", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/477/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/477/events", "html_url": "https://github.com/pyproj4/pyproj/issues/477", "id": 519149428, "node_id": "MDU6SXNzdWU1MTkxNDk0Mjg=", "number": 477, "title": "Linux pip install gives \"Proj executable not found. Please set PROJ_DIR variable.\"", "user": {"login": "Wim-De-Clercq", "id": 4599667, "node_id": "MDQ6VXNlcjQ1OTk2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4599667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wim-De-Clercq", "html_url": "https://github.com/Wim-De-Clercq", "followers_url": "https://api.github.com/users/Wim-De-Clercq/followers", "following_url": "https://api.github.com/users/Wim-De-Clercq/following{/other_user}", "gists_url": "https://api.github.com/users/Wim-De-Clercq/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wim-De-Clercq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wim-De-Clercq/subscriptions", "organizations_url": "https://api.github.com/users/Wim-De-Clercq/orgs", "repos_url": "https://api.github.com/users/Wim-De-Clercq/repos", "events_url": "https://api.github.com/users/Wim-De-Clercq/events{/privacy}", "received_events_url": "https://api.github.com/users/Wim-De-Clercq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-11-07T09:38:55Z", "updated_at": "2019-11-08T01:53:12Z", "closed_at": "2019-11-08T01:53:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Installation method/steps\r\n```\r\npip install pyproj\r\n```\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install: 2.4.1 (this is not an issue for 2.4.0)\r\n - Tested with 3.5 and 3.6\r\n - Tested with Linux Mint 18 and Ubuntu Xenial\r\n\r\n#### Error\r\n```\r\n Running setup.py (path:/tmp/pip-install-qfelb_w6/pyproj/setup.py) egg_info for package pyproj\r\n    Running command python setup.py egg_info\r\n    Proj executable not found. Please set PROJ_DIR variable.\r\n```\r\nSince 2.4.1 release pip install won't work unless you have a more recent version of pip.\r\npip `18.1` for example will fail because it refuses to download the wheel packages and then will try to compile the sources.\r\n```\r\nSkipping link https://files.pythonhosted.org/packages/a5/b3/a3e00996681ef6e2e19cf367ff57e5e83ad8357f398b0cb71dab5cc8b756/pyproj-2.4.1-cp35-cp35m-manylinux2010_x86_64.whl#sha256=a1422da59673ca5bf56d89cf8e2a3cb2c9868bea27bbee6600ae603d322316a8 \r\n (from https://pypi.org/simple/pyproj/) (requires-python:>=3.5); it is not compatible with this Python\r\n```\r\n#### Fix\r\n**The solution is to upgrade pip to a later version** (`pip install --upgrade pip`)\r\n\r\nYou can close this issue if you think this is not a bug worth fixing. I created it mostly so users with the same issue may hopefully find this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/475", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/475/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/475/events", "html_url": "https://github.com/pyproj4/pyproj/issues/475", "id": 518308155, "node_id": "MDU6SXNzdWU1MTgzMDgxNTU=", "number": 475, "title": "WKT1 format for CRS84 from GDAL results in EPSG:4326 with lon/lat axis order", "user": {"login": "jorisvandenbossche", "id": 1020496, "node_id": "MDQ6VXNlcjEwMjA0OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisvandenbossche", "html_url": "https://github.com/jorisvandenbossche", "followers_url": "https://api.github.com/users/jorisvandenbossche/followers", "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}", "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions", "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs", "repos_url": "https://api.github.com/users/jorisvandenbossche/repos", "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-06T08:11:35Z", "updated_at": "2019-11-06T13:00:55Z", "closed_at": "2019-11-06T13:00:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From https://github.com/Toblerity/Fiona/issues/816#issuecomment-550191494, I noticed that the WKT that was produced by Fiona / GDAL for the \"urn:ogc:def:crs:OGC:1.3:CRS84\" has a strange behaviour when read in pyproj:\r\n\r\n```\r\nIn [11]: crs = pyproj.CRS('GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]')                                     \r\n\r\nIn [12]: crs                                                                                                                                                                                                       \r\nOut[12]: \r\n<Geographic 2D CRS: EPSG:4326>\r\nName: WGS 84\r\nAxis Info [ellipsoidal]:\r\n- lon[east]: Longitude (Degree)\r\n- lat[north]: Latitude (Degree)\r\nArea of Use:\r\n- undefined\r\nDatum: World Geodetic System 1984\r\n- Ellipsoid: WGS 84\r\n- Prime Meridian: Greenwich\r\n\r\nIn [13]: crs.to_authority()                                                                                                                                                                                        \r\nOut[13]: ('EPSG', '4326')\r\n```\r\n\r\nSo you can see that the axis order is correct I think (lon, lat), as this is coming from CRS84 (which should be EPSG:4326 but with swapped axis). But it still directly recognizes this as EPSG:4326 (it's even in the first line of the repr). \r\nWhich seemingly gives a CRS that contradicts itself? (this probably is a behaviour defined by PROJ though)\r\n\r\n---\r\n\r\n```\r\nIn [16]: pyproj.show_versions()   \r\npyproj info:\r\n    pyproj: 2.4.0\r\n      PROJ: 6.2.0\r\n  data dir: /home/joris/miniconda3/envs/test-fiona-189/share/proj\r\n\r\nSystem:\r\n    python: 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 21:52:21)  [GCC 7.3.0]\r\nexecutable: /home/joris/miniconda3/envs/test-fiona-189/bin/python\r\n   machine: Linux-4.15.0-1059-oem-x86_64-with-debian-buster-sid\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 41.6.0.post20191101\r\n    Cython: None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/474", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/474/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/474/events", "html_url": "https://github.com/pyproj4/pyproj/issues/474", "id": 516417053, "node_id": "MDU6SXNzdWU1MTY0MTcwNTM=", "number": 474, "title": "2.4.1 Release", "user": {"login": "snowman2", "id": 8699967, "node_id": "MDQ6VXNlcjg2OTk5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman2", "html_url": "https://github.com/snowman2", "followers_url": "https://api.github.com/users/snowman2/followers", "following_url": "https://api.github.com/users/snowman2/following{/other_user}", "gists_url": "https://api.github.com/users/snowman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman2/subscriptions", "organizations_url": "https://api.github.com/users/snowman2/orgs", "repos_url": "https://api.github.com/users/snowman2/repos", "events_url": "https://api.github.com/users/snowman2/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-02T00:36:14Z", "updated_at": "2019-11-06T16:32:20Z", "closed_at": "2019-11-06T13:28:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Release Candidate 0 Status:\r\n\r\nhttps://github.com/pyproj4/pyproj/releases/tag/2.4.1.rc0\r\n\r\n- [x] Linux/OSX wheels (https://github.com/pyproj4/pyproj-wheels/pull/18)\r\n- [x] Windows wheels (ping @cgohlke)\r\n- [x] Conda Forge (https://github.com/conda-forge/pyproj-feedstock/pull/53)\r\n- [x] Debian (ping @sebastic)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/470", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/470/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/470/events", "html_url": "https://github.com/pyproj4/pyproj/issues/470", "id": 512249940, "node_id": "MDU6SXNzdWU1MTIyNDk5NDA=", "number": 470, "title": "Inverse projection gives different results for pyproj 1.9.6 and 2.4.0", "user": {"login": "suneeta-mall", "id": 25972660, "node_id": "MDQ6VXNlcjI1OTcyNjYw", "avatar_url": "https://avatars0.githubusercontent.com/u/25972660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suneeta-mall", "html_url": "https://github.com/suneeta-mall", "followers_url": "https://api.github.com/users/suneeta-mall/followers", "following_url": "https://api.github.com/users/suneeta-mall/following{/other_user}", "gists_url": "https://api.github.com/users/suneeta-mall/gists{/gist_id}", "starred_url": "https://api.github.com/users/suneeta-mall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suneeta-mall/subscriptions", "organizations_url": "https://api.github.com/users/suneeta-mall/orgs", "repos_url": "https://api.github.com/users/suneeta-mall/repos", "events_url": "https://api.github.com/users/suneeta-mall/events{/privacy}", "received_events_url": "https://api.github.com/users/suneeta-mall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 161680569, "node_id": "MDU6TGFiZWwxNjE2ODA1Njk=", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-25T01:02:32Z", "updated_at": "2019-11-03T22:24:56Z", "closed_at": "2019-10-30T12:35:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\nThis python code is refered as `./pypro_bug.py` in the descrption of issue.\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom pyproj import Proj\r\nEPSG_3857_PROJ4 = '+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +a=6378137 +b=6378137 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs'\r\n\r\nmercator_projection = Proj(EPSG_3857_PROJ4)\r\nmetres_x, metres_y = 3640945.346538976, -9059984.893837836\r\nlon, lat = mercator_projection(metres_x, metres_y, inverse=True)\r\nprint(f\"Projected long lat are:  ({lon}, {lat}) \")\r\n\r\n```\r\n#### Problem description\r\n`pyproj` gives different results across two versions of pyproj (1.9.6 and 2.4.0).Please see this image <img width=\"1037\" alt=\"Projbug\" src=\"https://user-images.githubusercontent.com/25972660/67535564-e552d000-f71e-11e9-9c4a-b8a302cc2dc7.png\"> and following commands for more details.\r\n\r\n```bash\r\nconda create --quiet --yes --channel conda-forge --name kidmenot python=3.6 pyproj=1.9.6\r\nconda activate kidmenot\r\n# content of ./pypro_bug.py is detailed above\r\n./pypro_bug.py\r\n conda install --yes -q pyproj=2.4.0\r\n./pypro_bug.py\r\n```\r\n\r\n#### Expected Output\r\nI expected the projected long, lat to be same with pyproj 1.9.6 or 2.4.0.\r\n\r\n\r\n#### Environment Information\r\n<!-- If you have pyproj>=2.4.0 -->\r\n - Output from: `python -m pyproj -v`\r\npyproj info:\r\n    pyproj: 2.4.0\r\n      PROJ: 6.2.0\r\n  data dir: /Users/suneeta.mall/miniconda3/envs/kidmenot/lib/python3.6/site-packages/pyproj/proj_dir/share/proj\r\n\r\nSystem:\r\n    python: 3.6.7 | packaged by conda-forge | (default, Jul  2 2019, 02:07:37)  [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\r\nexecutable: /Users/suneeta.mall/miniconda3/envs/kidmenot/bin/python\r\n   machine: Darwin-19.0.0-x86_64-i386-64bit\r\n\r\nPython deps:\r\n       pip: 19.3.1\r\nsetuptools: 41.4.0\r\n    Cython: None\r\n<!-- If you have pyproj<2.2.1 -->\r\n - pyproj version (`python -c \"import pyproj; print(pyproj.__version__)\"`)\r\n - PROJ version (`python -c \"import pyproj; print(pyproj.proj_version_str)\"`)\r\n - PROJ data directory (`python -c \"import pyproj; print(pyproj.datadir.get_data_dir())\"`)\r\n - Python version (`python -c \"import sys; print(sys.version.replace('\\n', ' '))\"`)\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`)\r\n$python -c \"import pyproj; print(pyproj.__version__)\"\r\n1.9.6\r\n$python -c \"import pyproj; print(pyproj.proj_version_str)\"\r\n4.9.3\r\n$python -c \"import pyproj; print(pyproj.datadir.get_data_dir())\"\r\n/Users/suneeta.mall/miniconda3/envs/kidmenot/share/proj\r\n$python -c \"import sys; print(sys.version.replace('\\n', ' '))\"\r\n3.6.7 | packaged by conda-forge | (default, Jul  2 2019, 02:07:37)  [GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]\r\n$python -c \"import platform; print(platform.platform())\"\r\nDarwin-19.0.0-x86_64-i386-64bit\r\n\r\n\r\n#### Installation method\r\n - conda, pip wheel, from source, etc...\r\nconda\r\n#### Conda environment information (if you installed with conda):\r\n\r\n<br/>\r\nEnvironment (<code>conda list</code>):\r\n<details>\r\n\r\n```\r\n$ conda list | grep -E \"proj|aenum\"\r\n\r\n```\r\n</details>\r\n\r\n<br/>\r\nDetails about  <code>conda</code> and system ( <code>conda info</code> ):\r\n<details>\r\n\r\n```\r\n$ conda info\r\n\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/468", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/468/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/468/events", "html_url": "https://github.com/pyproj4/pyproj/issues/468", "id": 509234641, "node_id": "MDU6SXNzdWU1MDkyMzQ2NDE=", "number": 468, "title": "Installation failed on Juno for iPad \u2014\u00a0Installation from source failed", "user": {"login": "sjinko", "id": 8132989, "node_id": "MDQ6VXNlcjgxMzI5ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8132989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjinko", "html_url": "https://github.com/sjinko", "followers_url": "https://api.github.com/users/sjinko/followers", "following_url": "https://api.github.com/users/sjinko/following{/other_user}", "gists_url": "https://api.github.com/users/sjinko/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjinko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjinko/subscriptions", "organizations_url": "https://api.github.com/users/sjinko/orgs", "repos_url": "https://api.github.com/users/sjinko/repos", "events_url": "https://api.github.com/users/sjinko/events{/privacy}", "received_events_url": "https://api.github.com/users/sjinko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1285923975, "node_id": "MDU6TGFiZWwxMjg1OTIzOTc1", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/installation-issues", "name": "installation-issues", "color": "8f34bc", "default": false, "description": "Issue related to installation problems."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T18:07:01Z", "updated_at": "2019-10-19T02:10:21Z", "closed_at": "2019-10-19T02:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n#### Installation method/steps\r\n - Installation method (conda, pip wheel, from source, etc...)\r\nJuno PyPi package installer: https://juno.sh/juno-pypi-package-installer/\r\n\r\n - How did you install PROJ? Where is it installed?\r\nUsing the package installer from Juno app 1.1.0 for iPadOS.\r\n\r\n - Please provide all commands/steps you used to install pyproj and PROJ.\r\nGUI installer\r\n\r\n#### Environment Information\r\n - pyproj version you are attempting to install\r\n2.4.0, 2.3.1, 2.0.0\r\n\r\n - PROJ version (Execute `proj` command and give version here.)\r\n\u2014\r\n\r\n - Python version (`python -c \"import sys; print(sys.version.replace('\\n', ' '))\"`)\r\nPython 3.6.1\r\n\r\n - Operation System Information (`python -c \"import platform; print(platform.platform())\"`)\r\niPadOS 13.1.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pyproj4/pyproj/issues/467", "repository_url": "https://api.github.com/repos/pyproj4/pyproj", "labels_url": "https://api.github.com/repos/pyproj4/pyproj/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/pyproj4/pyproj/issues/467/comments", "events_url": "https://api.github.com/repos/pyproj4/pyproj/issues/467/events", "html_url": "https://github.com/pyproj4/pyproj/issues/467", "id": 506796624, "node_id": "MDU6SXNzdWU1MDY3OTY2MjQ=", "number": 467, "title": "pyproj 1.9.6 and 2.4.0 different result?", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1277157732, "node_id": "MDU6TGFiZWwxMjc3MTU3NzMy", "url": "https://api.github.com/repos/pyproj4/pyproj/labels/proj-bug", "name": "proj-bug", "color": "fc83d2", "default": false, "description": "Bug or issue related to PROJ"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-14T18:01:49Z", "updated_at": "2019-10-14T18:47:52Z", "closed_at": "2019-10-14T18:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there something wrong in my setup/call? \r\nI am seeing different results between 1.9.6 and 2.4.0 and gdaltransform\r\nThank you.\r\n\r\n1.9.6 1000000.0 222222.0 -139.39761609113293 44.080492363411594\r\n2.4.0 1000000.0 222222.0 -147.00340364988153 41.00866868443963\r\n\r\n```\r\nimport pyproj\r\nx1,y1=1000000.000,222222.000\r\nx2,y2 = pyproj.transform(pyproj.Proj(init='epsg:2913'), pyproj.Proj(init='epsg:4326'), x1, y1)\r\nprint(pyproj.__version__,x1,y1,x2,y2)\r\n1.9.6 1000000.0 222222.0 -139.39761609113293 44.080492363411594\r\n```\r\n\r\n\r\n```\r\nimport pyproj\r\nx1,y1=1000000.000,222222.000\r\nx2,y2 = pyproj.transform(pyproj.Proj(init='epsg:2913'), pyproj.Proj(init='epsg:4326'), x1, y1)\r\nprint(pyproj.__version__,x1,y1,x2,y2)\r\n2.4.0 1000000.0 222222.0 -147.00340364988153 41.00866868443963\r\n```\r\n\r\n```\r\n> gdaltransform -s_srs EPSG:2913 -t_srs EPSG:4326\r\n1000000.0 222222.0\r\n-147.003403649882 41.0086686844396 0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}