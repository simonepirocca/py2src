{"total_count": 137, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/518", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/518/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/518/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/518", "id": 674707925, "node_id": "MDU6SXNzdWU2NzQ3MDc5MjU=", "number": 518, "title": "Isolation Forest converter", "user": {"login": "sv-youn", "id": 58833784, "node_id": "MDQ6VXNlcjU4ODMzNzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/58833784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sv-youn", "html_url": "https://github.com/sv-youn", "followers_url": "https://api.github.com/users/sv-youn/followers", "following_url": "https://api.github.com/users/sv-youn/following{/other_user}", "gists_url": "https://api.github.com/users/sv-youn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sv-youn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sv-youn/subscriptions", "organizations_url": "https://api.github.com/users/sv-youn/orgs", "repos_url": "https://api.github.com/users/sv-youn/repos", "events_url": "https://api.github.com/users/sv-youn/events{/privacy}", "received_events_url": "https://api.github.com/users/sv-youn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979602, "node_id": "MDU6TGFiZWwxMTY1OTc5NjAy", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T02:18:36Z", "updated_at": "2020-08-07T13:41:05Z", "closed_at": "2020-08-07T13:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please implement the converter for Isolation Forest? This algorithm is very good for anomaly detection. Thanks.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/509", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/509/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/509/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/509", "id": 653633280, "node_id": "MDU6SXNzdWU2NTM2MzMyODA=", "number": 509, "title": "CastTransformer does not work with dataframes", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T22:21:39Z", "updated_at": "2020-07-14T17:15:50Z", "closed_at": "2020-07-14T17:15:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/503", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/503/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/503/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/503", "id": 651031444, "node_id": "MDU6SXNzdWU2NTEwMzE0NDQ=", "number": 503, "title": "Handle sub operator with algebra", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979605, "node_id": "MDU6TGFiZWwxMTY1OTc5NjA1", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-05T09:05:45Z", "updated_at": "2020-08-10T20:25:11Z", "closed_at": "2020-08-10T20:25:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/502", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/502/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/502/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/502", "id": 650966073, "node_id": "MDU6SXNzdWU2NTA5NjYwNzM=", "number": 502, "title": "Removes dtype parameter, it is redondant with other information", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2035909753, "node_id": "MDU6TGFiZWwyMDM1OTA5NzUz", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/refactoring", "name": "refactoring", "color": "f94abc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-04T22:34:22Z", "updated_at": "2020-08-21T16:31:05Z", "closed_at": "2020-08-21T16:31:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/500", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/500/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/500/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/500", "id": 649980578, "node_id": "MDU6SXNzdWU2NDk5ODA1Nzg=", "number": 500, "title": "CalibratedClassifier fails for scikit-learn 0.24", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2127816193, "node_id": "MDU6TGFiZWwyMTI3ODE2MTkz", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.24", "name": "0.24", "color": "f91be3", "default": false, "description": ""}, {"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-02T14:35:07Z", "updated_at": "2020-07-10T22:52:09Z", "closed_at": "2020-07-10T22:52:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/498", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/498/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/498/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/498", "id": 649831564, "node_id": "MDU6SXNzdWU2NDk4MzE1NjQ=", "number": 498, "title": "Converter fail when the target_opset is a dictionary", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-02T10:46:29Z", "updated_at": "2020-08-11T13:42:10Z", "closed_at": "2020-08-11T13:42:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/490", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/490/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/490/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/490", "id": 638827356, "node_id": "MDU6SXNzdWU2Mzg4MjczNTY=", "number": 490, "title": "Implement decision_path for TreeEnsemble", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T12:49:38Z", "updated_at": "2020-07-22T20:56:24Z", "closed_at": "2020-07-22T20:56:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/482", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/482/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/482/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/482", "id": 636009167, "node_id": "MDU6SXNzdWU2MzYwMDkxNjc=", "number": 482, "title": "Error converting KNeighborsClassifier with numeric features", "user": {"login": "marinagre-px", "id": 59528768, "node_id": "MDQ6VXNlcjU5NTI4NzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/59528768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marinagre-px", "html_url": "https://github.com/marinagre-px", "followers_url": "https://api.github.com/users/marinagre-px/followers", "following_url": "https://api.github.com/users/marinagre-px/following{/other_user}", "gists_url": "https://api.github.com/users/marinagre-px/gists{/gist_id}", "starred_url": "https://api.github.com/users/marinagre-px/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marinagre-px/subscriptions", "organizations_url": "https://api.github.com/users/marinagre-px/orgs", "repos_url": "https://api.github.com/users/marinagre-px/repos", "events_url": "https://api.github.com/users/marinagre-px/events{/privacy}", "received_events_url": "https://api.github.com/users/marinagre-px/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2128126959, "node_id": "MDU6TGFiZWwyMTI4MTI2OTU5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/cannot%20replicate", "name": "cannot replicate", "color": "6e16b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-10T07:37:20Z", "updated_at": "2020-06-11T05:38:26Z", "closed_at": "2020-06-11T05:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When converting KNN Classifier with numeric features, i.e.\r\n```python\r\n    numeric_features = ['path_len']\r\n    numeric_transformer = Pipeline(steps=[\r\n        ('imputer', SimpleImputer(strategy='median')),\r\n        ('scaler', StandardScaler())])\r\n```\r\nAND\r\n\r\n```python\r\n classifier = KNeighborsClassifier(n_neighbors=5, weights='distance')\r\n```\r\n\r\nthe following error is thrown:\r\n```\r\n2020-06-09 14:12:16.709549 [E:onnxruntime:, sequential_executor.cc:281 Execute] Non-zero status code returned while running Scan node. Name:'Sc_Scan' Status Message: Subgraph must have the shape set for all outputs but next_out did not.\r\nTraceback (most recent call last):\r\n  File \"/Users/marinagrechuhin/Development/Development-Tests/test_onnx/plot_complex_pipeline.py\", line 349, in <module>\r\n    pred_onx = sess.run(None, inputs)\r\n  File \"/Users/marinagrechuhin/Development/Development-Tests/test_onnx/venv/lib/python3.8/site-packages/onnxruntime/capi/session.py\", line 111, in run\r\n    return self._sess.run(output_names, input_feed, run_options)\r\nonnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Non-zero status code returned while running Scan node. Name:'Sc_Scan' Status Message: Subgraph must have the shape set for all outputs but next_out did not.\r\n```\r\nIf using LinearRegression classifier, it works", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/479", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/479/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/479/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/479", "id": 635214920, "node_id": "MDU6SXNzdWU2MzUyMTQ5MjA=", "number": 479, "title": "Investigate a way to fix discrepencies in StandardScaler on the converter side", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-09T08:21:01Z", "updated_at": "2020-06-24T08:20:29Z", "closed_at": "2020-06-24T08:20:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://github.com/microsoft/onnxruntime/issues/4130.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/478", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/478/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/478/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/478", "id": 635204134, "node_id": "MDU6SXNzdWU2MzUyMDQxMzQ=", "number": 478, "title": "Isssue in converting a tfidf-SVM pipeline", "user": {"login": "123gkc", "id": 5730588, "node_id": "MDQ6VXNlcjU3MzA1ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5730588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/123gkc", "html_url": "https://github.com/123gkc", "followers_url": "https://api.github.com/users/123gkc/followers", "following_url": "https://api.github.com/users/123gkc/following{/other_user}", "gists_url": "https://api.github.com/users/123gkc/gists{/gist_id}", "starred_url": "https://api.github.com/users/123gkc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/123gkc/subscriptions", "organizations_url": "https://api.github.com/users/123gkc/orgs", "repos_url": "https://api.github.com/users/123gkc/repos", "events_url": "https://api.github.com/users/123gkc/events{/privacy}", "received_events_url": "https://api.github.com/users/123gkc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-09T08:04:18Z", "updated_at": "2020-06-16T21:51:34Z", "closed_at": "2020-06-16T21:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all -- Recently ran into onnx project in a conference. Trying to export some of my legacy systems to onnx so I can host them on model-server platforms directly.\r\n \r\nI am trying to convert a sklearn pipeline that takes text as input and classifies it using tfidf feature extraction followed by SvmClassifier.\r\nMy code -> \r\n```\r\n    print(X_train.shape)\r\n    print(X_train.head())\r\n    model_pipeline = Pipeline([\r\n        ('vectorizer', TfidfVectorizer(stop_words=stopwords, lowercase=True, use_idf=True, ngram_range=(1,3), max_features=30000)),\r\n        ('feature_selector', SelectKBest(chi2, k=1000)),\r\n        ('classifier', SVC(class_weight='balanced', C=args.C, decision_function_shape='ovo', kernel='rbf', gamma='scale'))  \r\n    ])\r\n    \r\n    model_pipeline.fit(X_train, y_train)\r\n    initial_type = [('left_wing', StringTensorType([None, 1]))]\r\n    onx = convert_sklearn(model_pipeline, \"cv\", initial_types=initial_type)\r\n```\r\n\r\nStdout and stack trace -> \r\n```\r\n(8320,)\r\n0    in david i l c i a l one two zero seven at hot...\r\n1    three payments i can make it three monthly pay...\r\n2    if she's available at if he would like yeah ok...\r\n3    be twenty eight dollars and fifty four cents t...\r\n4    let me can i you on a brief hold really quick ...\r\nName: left_wing, dtype: object\r\nTraceback (most recent call last):\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/common/_container.py\", line 380, in add_node\r\n    node = make_node(op_type, inputs, outputs, name=name, **attrs)\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/proto/onnx_helper_modified.py\", line 58, in make_node\r\n    for key, value in sorted(kwargs.items()))\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/proto/onnx_helper_modified.py\", line 58, in <genexpr>\r\n    for key, value in sorted(kwargs.items()))\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/proto/onnx_helper_modified.py\", line 173, in make_attribute\r\n    [type(_) for _, __ in zip(value, range(0, 5))]))\r\nValueError: You passed in an iterable attribute but I cannot figure out its applicable type, key='coefficients', type=<class 'scipy.sparse.csr.csr_matrix'>, types=[<class 'scipy.sparse.csr.csr_matrix'>, <class 'scipy.sparse.csr.csr_matrix'>].\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 112, in <module>\r\n    onx = convert_sklearn(model_pipeline, \"cv\", initial_types=initial_type)\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/convert.py\", line 138, in convert_sklearn\r\n    dtype=dtype, options=options)\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/common/_topology.py\", line 977, in convert_topology\r\n    conv(scope, operator, container)\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/operator_converters/support_vector_machines.py\", line 95, in convert_sklearn_svm\r\n    op_domain='ai.onnx.ml', **svm_attrs)\r\n  File \"/home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/skl2onnx/common/_container.py\", line 383, in add_node\r\n    \"\".format(op_type, name)) from e\r\nValueError: Unable to create node 'SVMClassifier' with name='SVM'.\r\n```\r\n\r\nI am using skl2onnx==1.6.1 and sklearn==0.20.3\r\n\r\nAny pointers/help will be greatly appreciated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/476", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/476/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/476/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/476", "id": 633308723, "node_id": "MDU6SXNzdWU2MzMzMDg3MjM=", "number": 476, "title": "AttributeError: 'numpy.uint8' object has no attribute 'encode'", "user": {"login": "sufiaji", "id": 7789546, "node_id": "MDQ6VXNlcjc3ODk1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7789546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sufiaji", "html_url": "https://github.com/sufiaji", "followers_url": "https://api.github.com/users/sufiaji/followers", "following_url": "https://api.github.com/users/sufiaji/following{/other_user}", "gists_url": "https://api.github.com/users/sufiaji/gists{/gist_id}", "starred_url": "https://api.github.com/users/sufiaji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sufiaji/subscriptions", "organizations_url": "https://api.github.com/users/sufiaji/orgs", "repos_url": "https://api.github.com/users/sufiaji/repos", "events_url": "https://api.github.com/users/sufiaji/events{/privacy}", "received_events_url": "https://api.github.com/users/sufiaji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T11:06:39Z", "updated_at": "2020-06-11T07:32:54Z", "closed_at": "2020-06-11T07:32:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nI got such error when trying to convert ExtraTreesClassifier. This classifier was trained by another person in internet and I downloaded it as a pkl format, loaded using joblib. \r\nPlease advise. Thank you.\r\n\r\n![image](https://user-images.githubusercontent.com/7789546/83967196-8b87ca80-a8e9-11ea-9b42-2d4a83cda27d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/466", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/466/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/466/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/466", "id": 621628605, "node_id": "MDU6SXNzdWU2MjE2Mjg2MDU=", "number": 466, "title": "BaggingClassifier does not support option zipmap: False", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-20T09:57:40Z", "updated_at": "2020-05-22T08:23:41Z", "closed_at": "2020-05-22T08:23:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/462", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/462/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/462/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/462", "id": 618029001, "node_id": "MDU6SXNzdWU2MTgwMjkwMDE=", "number": 462, "title": "Possible bug in convert_sklearn_array_feature_extractor(), operator.inputs not reshaped", "user": {"login": "ubomuc", "id": 65332226, "node_id": "MDQ6VXNlcjY1MzMyMjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/65332226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubomuc", "html_url": "https://github.com/ubomuc", "followers_url": "https://api.github.com/users/ubomuc/followers", "following_url": "https://api.github.com/users/ubomuc/following{/other_user}", "gists_url": "https://api.github.com/users/ubomuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubomuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubomuc/subscriptions", "organizations_url": "https://api.github.com/users/ubomuc/orgs", "repos_url": "https://api.github.com/users/ubomuc/repos", "events_url": "https://api.github.com/users/ubomuc/events{/privacy}", "received_events_url": "https://api.github.com/users/ubomuc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-14T08:25:23Z", "updated_at": "2020-06-01T23:39:12Z", "closed_at": "2020-06-01T23:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nbefore the issue report: skl2onnx is just great, so much better than pickling sklearn models.\r\n\r\n/Users/XXXX/.conda/envs/cfserver/lib/python3.7/site-packages/sklearn/mixture/gaussian_mixture.py:366: RuntimeWarning: divide by zero encountered in log n_components, -1)[:, ::n_features + 1]), 1)) \r\ncame up when I converted a pipeline. The resulting onnx model does not work properly and returns '0' as prediction results. I think it is caused when converting a ColumnTransformer in a \r\npipeline because convert_sklearn_array_feature_extractor() does not reshape the inputs variable size as in other converters. \r\n\r\nI'm by no means an onnx expert but tried to dig through the code and attached an explanation of what I think happens and a code snippet that in essence replicates the issue.\r\n\r\nCheers\r\n\r\n[column_transformer_bug.txt](https://github.com/onnx/sklearn-onnx/files/4626917/column_transformer_bug.txt)\r\n[column_transformer_snippet_py.txt](https://github.com/onnx/sklearn-onnx/files/4626918/column_transformer_snippet_py.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/460", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/460/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/460/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/460", "id": 617993734, "node_id": "MDU6SXNzdWU2MTc5OTM3MzQ=", "number": 460, "title": "Update sklearn-onnx for opset 12", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2027582454, "node_id": "MDU6TGFiZWwyMDI3NTgyNDU0", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/Opset%2012", "name": "Opset 12", "color": "fff8ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-14T07:30:44Z", "updated_at": "2020-05-19T09:28:03Z", "closed_at": "2020-05-19T09:28:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/458", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/458/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/458/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/458", "id": 617245886, "node_id": "MDU6SXNzdWU2MTcyNDU4ODY=", "number": 458, "title": "Fix discrepencies introduced by sciki-learn 0.23", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}, {"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-13T08:21:28Z", "updated_at": "2020-05-13T17:20:03Z", "closed_at": "2020-05-13T17:20:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/455", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/455/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/455/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/455", "id": 611904873, "node_id": "MDU6SXNzdWU2MTE5MDQ4NzM=", "number": 455, "title": "Refactor _supported_operators.py", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2035909753, "node_id": "MDU6TGFiZWwyMDM1OTA5NzUz", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/refactoring", "name": "refactoring", "color": "f94abc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-04T14:09:33Z", "updated_at": "2020-05-13T13:41:29Z", "closed_at": "2020-05-13T13:41:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "diff are not readable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/453", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/453/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/453/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/453", "id": 610259276, "node_id": "MDU6SXNzdWU2MTAyNTkyNzY=", "number": 453, "title": "Add converter for RadiusNeighborsClassifier, Regressor", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-30T17:31:00Z", "updated_at": "2020-06-24T11:49:27Z", "closed_at": "2020-06-24T11:49:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/451", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/451/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/451/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/451", "id": 610082418, "node_id": "MDU6SXNzdWU2MTAwODI0MTg=", "number": 451, "title": "Possibility to Customize Conversion Based on Operator", "user": {"login": "alexivaner", "id": 57290644, "node_id": "MDQ6VXNlcjU3MjkwNjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/57290644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexivaner", "html_url": "https://github.com/alexivaner", "followers_url": "https://api.github.com/users/alexivaner/followers", "following_url": "https://api.github.com/users/alexivaner/following{/other_user}", "gists_url": "https://api.github.com/users/alexivaner/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexivaner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexivaner/subscriptions", "organizations_url": "https://api.github.com/users/alexivaner/orgs", "repos_url": "https://api.github.com/users/alexivaner/repos", "events_url": "https://api.github.com/users/alexivaner/events{/privacy}", "received_events_url": "https://api.github.com/users/alexivaner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979605, "node_id": "MDU6TGFiZWwxMTY1OTc5NjA1", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1165979608, "node_id": "MDU6TGFiZWwxMTY1OTc5NjA4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2020-04-30T14:40:34Z", "updated_at": "2020-05-22T10:39:46Z", "closed_at": "2020-05-22T10:39:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, as you already add scoring method in GMM model for sklearn. The scoring method worked well when I used OnnxRuntime.\r\n\r\nNow I got a new problem when I implemented my model to the new platform in this case Unity, where Unity could only load ONNX using Baraccuda with a limited type of operator.\r\n\r\nBaraccuda in Unity doesn't contain operator of ReduceLogSumExp and ReduceSumSquare that appear in my model. For now, Baraccuda then suggest me to change this operator in onnx model to:\r\n\r\nx -> y = exp(x) -> z = reduce_sum(y) -> log(z) for ReduceLogSumExp\r\nand\r\nx -> y = x^2 -> z = reduce_sum(y) for ReduceSumSquare\r\n\r\nCould I customize the conversion so ReduceLogSumExp automatically just only used Exp and reduce_sum and reducesumsquare used square and reduce sum?\r\n\r\nThank You for your kind support.\r\n\r\nAnd here I attached the visualization of my onnx model:\r\n![image](https://user-images.githubusercontent.com/57290644/80723542-568e9800-8b33-11ea-8918-d7c14a4abc3d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/448", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/448/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/448/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/448", "id": 608898336, "node_id": "MDU6SXNzdWU2MDg4OTgzMzY=", "number": 448, "title": "OneVsRestClassifier prediction mismatch when raw_scores=True", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T09:11:08Z", "updated_at": "2020-05-17T16:06:26Z", "closed_at": "2020-05-17T16:06:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nimport numpy as np\r\nfrom sklearn.datasets import make_classification\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\n\r\nX, y = make_classification(n_classes=2, n_samples=1000, random_state=42, n_features=100, n_informative=7)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = OneVsRestClassifier(estimator=GradientBoostingClassifier(random_state=42)).fit(X_train, y_train)\r\n\r\noptions = {id(model): {'raw_scores': True}}\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\nsave_model(onnx_model, 'ovr.onnx')\r\nsess = InferenceSession('ovr.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\nprint(np.mean(res[0] == model.predict(X_test)))\r\n```\r\n>> 0.514\r\n\r\nONNX model always predicts 1 here as it does an argmax on decision function scores, not probabilities(when raw_scores=True).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/447", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/447/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/447/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/447", "id": 608883767, "node_id": "MDU6SXNzdWU2MDg4ODM3Njc=", "number": 447, "title": "Setting output name", "user": {"login": "yannickspill", "id": 3792565, "node_id": "MDQ6VXNlcjM3OTI1NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3792565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickspill", "html_url": "https://github.com/yannickspill", "followers_url": "https://api.github.com/users/yannickspill/followers", "following_url": "https://api.github.com/users/yannickspill/following{/other_user}", "gists_url": "https://api.github.com/users/yannickspill/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickspill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickspill/subscriptions", "organizations_url": "https://api.github.com/users/yannickspill/orgs", "repos_url": "https://api.github.com/users/yannickspill/repos", "events_url": "https://api.github.com/users/yannickspill/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickspill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979605, "node_id": "MDU6TGFiZWwxMTY1OTc5NjA1", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-29T08:47:30Z", "updated_at": "2020-05-12T21:51:04Z", "closed_at": "2020-05-12T21:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying a simple example\r\n```\r\npipe = Pipeline([ (\"lm\",linear_model.LinearRegression()) ])\r\npipe.fit(X,y)\r\ninitial_type = [(\"in_data\", FloatTensorType([ None, X.shape[1] ]) )]\r\nonx = convert_sklearn(pipe, initial_types=initial_type)\r\nwith open(\"model.onnx\", \"wb\") as f:\r\n    f.write(onx.SerializeToString())\r\n```\r\nI can call the input variable \"in_data\". I would like to know how to change the name of the output variable.\r\n```\r\nsess = onnxruntime.InferenceSession(\"model.onnx\")\r\nprint(\"input_name\", sess.get_inputs()[0].name)\r\nprint(\"output_name\", sess.get_outputs()[0].name)\r\n```\r\n```\r\ninput_name in_data\r\noutput_name variable\r\n```\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/438", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/438/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/438/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/438", "id": 606301055, "node_id": "MDU6SXNzdWU2MDYzMDEwNTU=", "number": 438, "title": "Add converter for GaussianRandomProjection", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-24T13:09:07Z", "updated_at": "2020-05-13T13:41:29Z", "closed_at": "2020-05-13T13:41:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/435", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/435/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/435/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/435", "id": 606297769, "node_id": "MDU6SXNzdWU2MDYyOTc3Njk=", "number": 435, "title": "Add converter for IncrementalPCA", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-24T13:03:54Z", "updated_at": "2020-04-27T12:29:01Z", "closed_at": "2020-04-27T12:29:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/433", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/433/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/433/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/433", "id": 605425286, "node_id": "MDU6SXNzdWU2MDU0MjUyODY=", "number": 433, "title": "Implement converter for BayesianGaussianMixture", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-23T10:35:16Z", "updated_at": "2020-08-11T14:54:08Z", "closed_at": "2020-08-11T14:54:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/431", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/431/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/431/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/431", "id": 602404817, "node_id": "MDU6SXNzdWU2MDI0MDQ4MTc=", "number": 431, "title": "How to have .scores method instead only _predict_proba in our ONNX model converted from GMM Sklearn", "user": {"login": "alexivaner", "id": 57290644, "node_id": "MDQ6VXNlcjU3MjkwNjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/57290644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexivaner", "html_url": "https://github.com/alexivaner", "followers_url": "https://api.github.com/users/alexivaner/followers", "following_url": "https://api.github.com/users/alexivaner/following{/other_user}", "gists_url": "https://api.github.com/users/alexivaner/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexivaner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexivaner/subscriptions", "organizations_url": "https://api.github.com/users/alexivaner/orgs", "repos_url": "https://api.github.com/users/alexivaner/repos", "events_url": "https://api.github.com/users/alexivaner/events{/privacy}", "received_events_url": "https://api.github.com/users/alexivaner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-04-18T08:05:40Z", "updated_at": "2020-04-23T14:51:51Z", "closed_at": "2020-04-23T14:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I need scoring method from GMM Sklearn, I succed convert the model to onnx, but there is no scoring method inside onnx model. How to have that method in our ONNX model? I only have .predict  and predict_proba in onnx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/430", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/430/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/430/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/430", "id": 598334241, "node_id": "MDU6SXNzdWU1OTgzMzQyNDE=", "number": 430, "title": "Understanding initial types", "user": {"login": "mohamedzayan19", "id": 6787552, "node_id": "MDQ6VXNlcjY3ODc1NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6787552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohamedzayan19", "html_url": "https://github.com/mohamedzayan19", "followers_url": "https://api.github.com/users/mohamedzayan19/followers", "following_url": "https://api.github.com/users/mohamedzayan19/following{/other_user}", "gists_url": "https://api.github.com/users/mohamedzayan19/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohamedzayan19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohamedzayan19/subscriptions", "organizations_url": "https://api.github.com/users/mohamedzayan19/orgs", "repos_url": "https://api.github.com/users/mohamedzayan19/repos", "events_url": "https://api.github.com/users/mohamedzayan19/events{/privacy}", "received_events_url": "https://api.github.com/users/mohamedzayan19/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011474127, "node_id": "MDU6TGFiZWwyMDExNDc0MTI3", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/documentation", "name": "documentation", "color": "f2ac4b", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-11T19:24:47Z", "updated_at": "2020-04-29T12:45:20Z", "closed_at": "2020-04-29T12:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could someone please shortly explain initial types?. Is there a way to programmatically infer the initial types from a given sklearn model?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/429", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/429/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/429/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/429", "id": 597632388, "node_id": "MDU6SXNzdWU1OTc2MzIzODg=", "number": 429, "title": "Converter for sklearn.naive_bayes.CategoricalNB", "user": {"login": "minglonglam", "id": 63432612, "node_id": "MDQ6VXNlcjYzNDMyNjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/63432612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minglonglam", "html_url": "https://github.com/minglonglam", "followers_url": "https://api.github.com/users/minglonglam/followers", "following_url": "https://api.github.com/users/minglonglam/following{/other_user}", "gists_url": "https://api.github.com/users/minglonglam/gists{/gist_id}", "starred_url": "https://api.github.com/users/minglonglam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minglonglam/subscriptions", "organizations_url": "https://api.github.com/users/minglonglam/orgs", "repos_url": "https://api.github.com/users/minglonglam/repos", "events_url": "https://api.github.com/users/minglonglam/events{/privacy}", "received_events_url": "https://api.github.com/users/minglonglam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T00:47:31Z", "updated_at": "2020-04-27T12:41:05Z", "closed_at": "2020-04-27T12:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The sklearn.naive_bayes.CategoricalNB is new in version 0.22.2.  Please develop a convert for it.  Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/412", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/412/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/412/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/412", "id": 570685022, "node_id": "MDU6SXNzdWU1NzA2ODUwMjI=", "number": 412, "title": "Support option cdist in converters for KNNImputer, NeighborhoodComponentsAnalysis", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2026622867, "node_id": "MDU6TGFiZWwyMDI2NjIyODY3", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/Performance", "name": "Performance", "color": "37cec7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-25T16:15:43Z", "updated_at": "2020-05-22T08:23:41Z", "closed_at": "2020-05-22T08:23:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/409", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/409/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/409/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/409", "id": 568875564, "node_id": "MDU6SXNzdWU1Njg4NzU1NjQ=", "number": 409, "title": "LinearRegressor conversion generates invalid shape", "user": {"login": "skottmckay", "id": 979079, "node_id": "MDQ6VXNlcjk3OTA3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/979079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skottmckay", "html_url": "https://github.com/skottmckay", "followers_url": "https://api.github.com/users/skottmckay/followers", "following_url": "https://api.github.com/users/skottmckay/following{/other_user}", "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions", "organizations_url": "https://api.github.com/users/skottmckay/orgs", "repos_url": "https://api.github.com/users/skottmckay/repos", "events_url": "https://api.github.com/users/skottmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/skottmckay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-21T10:38:57Z", "updated_at": "2020-04-27T12:46:51Z", "closed_at": "2020-04-27T12:46:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "onnx_test_runner.exe for model from SklearnLinearRegression-Dec4 fails.\r\n\r\n> Tensor shape mismatch, model file expects '{,1}', real output is [500, 2]\r\n\r\nUnit test involved is test_model_multi_linear_regression\r\n\r\nLooks like the output shape needs to take into account the number of targets as it's 2 in this unit test not 1, so probably the output shape should be {,2}.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/408", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/408/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/408/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/408", "id": 568068475, "node_id": "MDU6SXNzdWU1NjgwNjg0NzU=", "number": 408, "title": "Duplicate unit test names in test_sklearn_nearest_neighbour_converter.py", "user": {"login": "skottmckay", "id": 979079, "node_id": "MDQ6VXNlcjk3OTA3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/979079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skottmckay", "html_url": "https://github.com/skottmckay", "followers_url": "https://api.github.com/users/skottmckay/followers", "following_url": "https://api.github.com/users/skottmckay/following{/other_user}", "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions", "organizations_url": "https://api.github.com/users/skottmckay/orgs", "repos_url": "https://api.github.com/users/skottmckay/repos", "events_url": "https://api.github.com/users/skottmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/skottmckay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T05:53:43Z", "updated_at": "2020-02-21T14:36:17Z", "closed_at": "2020-02-21T14:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are a couple of test names that look like that haven't been updated after being pasted from elsewhere. This leads to multiple tests dumping a model and expected input/output data in the same directory, so the last one to run overwrites the first one.\r\n\r\nSklearnGradientBoostingRegressionInt-Dec4\r\nSklearnNaiveMultiNoCl\r\n\r\nNot sure what the best corrected name would be though. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/407", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/407/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/407/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/407", "id": 568067380, "node_id": "MDU6SXNzdWU1NjgwNjczODA=", "number": 407, "title": "Invalid output shape from _parse_sklearn_classifier ", "user": {"login": "skottmckay", "id": 979079, "node_id": "MDQ6VXNlcjk3OTA3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/979079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skottmckay", "html_url": "https://github.com/skottmckay", "followers_url": "https://api.github.com/users/skottmckay/followers", "following_url": "https://api.github.com/users/skottmckay/following{/other_user}", "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions", "organizations_url": "https://api.github.com/users/skottmckay/orgs", "repos_url": "https://api.github.com/users/skottmckay/repos", "events_url": "https://api.github.com/users/skottmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/skottmckay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-20T05:50:26Z", "updated_at": "2020-04-27T15:40:42Z", "closed_at": "2020-04-27T15:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The output shape for the labels created by _parse_sklearn_classifier doesn't take into account whether there is a batch involved, and is always {1} instead of {batch_size}. e.g. model from SklearnKNeighborsClassifierBinary unit test is affected.\r\n\r\nThe following seems to fix it by creating a rank 1 shape with unknown dimension, but there may be a better way to determine if there's a batch involved.\r\n\r\n![image](https://user-images.githubusercontent.com/979079/74904788-73eb0b80-53f8-11ea-8cc4-2b0d9afb1787.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/402", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/402/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/402/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/402", "id": 564014876, "node_id": "MDU6SXNzdWU1NjQwMTQ4NzY=", "number": 402, "title": "Support drop option of OneHotEncoder", "user": {"login": "victornoel", "id": 160975, "node_id": "MDQ6VXNlcjE2MDk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/160975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victornoel", "html_url": "https://github.com/victornoel", "followers_url": "https://api.github.com/users/victornoel/followers", "following_url": "https://api.github.com/users/victornoel/following{/other_user}", "gists_url": "https://api.github.com/users/victornoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/victornoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victornoel/subscriptions", "organizations_url": "https://api.github.com/users/victornoel/orgs", "repos_url": "https://api.github.com/users/victornoel/repos", "events_url": "https://api.github.com/users/victornoel/events{/privacy}", "received_events_url": "https://api.github.com/users/victornoel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-02-12T13:53:17Z", "updated_at": "2020-02-21T14:11:09Z", "closed_at": "2020-02-21T14:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried to use a `OneHotEncoder` with `drop` option set to `first` but when I do so, running the generated model with onnxruntime gives me  the following error during prediction:\r\n```\r\nonnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Non-zero status code returned while running OneHotEncoder node. Name:'OneHotEncoder7' Status Message: Unknown Category and zeros = 0.\r\n```\r\n\r\nSee https://github.com/onnx/sklearn-onnx/issues/321#issuecomment-584052819 for an example of code used to generate and convert the model.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/400", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/400/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/400/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/400", "id": 562712473, "node_id": "MDU6SXNzdWU1NjI3MTI0NzM=", "number": 400, "title": "Nightly build is broken.", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-10T17:26:25Z", "updated_at": "2020-02-17T13:26:50Z", "closed_at": "2020-02-17T13:26:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is due to the fact onnxruntime now checks an operator cannot be used as is for a opset higher than the last one declared. Many unit test needs to be updated. One example, the Following code fails with current Onnxruntime from master branch due to ``onnxruntime.capi.onnxruntime_pybind11_state.InvalidGraph: [ONNXRuntimeError] : 10 : INVALID_GRAPH : This is an invalid model. Error in Node: : No Op registered for Add with domain_version of 12``.\r\n\r\n```\r\n        sum_in = onnx.helper.make_tensor_value_info(\r\n            'sum_in', onnx.TensorProto.FLOAT, [2])\r\n        next = onnx.helper.make_tensor_value_info(\r\n            'next', onnx.TensorProto.FLOAT, [2])\r\n        sum_out = onnx.helper.make_tensor_value_info(\r\n            'sum_out', onnx.TensorProto.FLOAT, [2])\r\n        scan_out = onnx.helper.make_tensor_value_info(\r\n            'scan_out', onnx.TensorProto.FLOAT, [2])\r\n        add_node = onnx.helper.make_node(\r\n            'Add',\r\n            inputs=['sum_in', 'next'],\r\n            outputs=['sum_out']\r\n        )\r\n        id_node = onnx.helper.make_node(\r\n            'Identity',\r\n            inputs=['sum_out'],\r\n            outputs=['scan_out']\r\n        )\r\n        scan_body = onnx.helper.make_graph(\r\n            [add_node, id_node],\r\n            'scan_body',\r\n            [sum_in, next],\r\n            [sum_out, scan_out]\r\n        )\r\n        node = onnx.helper.make_node(\r\n            'Scan',\r\n            inputs=['initial', 'x'],\r\n            outputs=['y', 'z'],\r\n            num_scan_inputs=1,\r\n            body=scan_body\r\n        )\r\n\r\n        initial = helper.make_tensor_value_info(\r\n            'initial', TensorProto.FLOAT, [2, ])\r\n        X = helper.make_tensor_value_info('x', TensorProto.FLOAT, [3, 2])\r\n        Y = helper.make_tensor_value_info('y', TensorProto.FLOAT, [2, ])\r\n        Z = helper.make_tensor_value_info('z', TensorProto.FLOAT, [3, 2])\r\n\r\n        graph_def = helper.make_graph(\r\n            [node],\r\n            'test-model',\r\n            [initial, X],\r\n            [Y, Z],\r\n        )\r\n\r\n        model_def = helper.make_model(graph_def, producer_name='onnx-example')\r\n\r\n        initial = np.array([0, 0]).astype(np.float32).reshape((2,))\r\n        x = np.array([1, 2, 3, 4, 5, 6]).astype(np.float32).reshape((3, 2))\r\n\r\n        sess = InferenceSession(model_def.SerializeToString())\r\n        res = sess.run(None, {'initial': initial, 'x': x})\r\n\r\n        y = np.array([9, 12]).astype(np.float32).reshape((2,))\r\n        z = np.array([1, 2, 4, 6, 9, 12]).astype(np.float32).reshape((3, 2))\r\n        assert_almost_equal(y, res[0])\r\n        assert_almost_equal(z, res[1])\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/399", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/399/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/399/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/399", "id": 561073081, "node_id": "MDU6SXNzdWU1NjEwNzMwODE=", "number": 399, "title": "BooleanTensorType not supported?", "user": {"login": "victornoel", "id": 160975, "node_id": "MDQ6VXNlcjE2MDk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/160975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victornoel", "html_url": "https://github.com/victornoel", "followers_url": "https://api.github.com/users/victornoel/followers", "following_url": "https://api.github.com/users/victornoel/following{/other_user}", "gists_url": "https://api.github.com/users/victornoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/victornoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victornoel/subscriptions", "organizations_url": "https://api.github.com/users/victornoel/orgs", "repos_url": "https://api.github.com/users/victornoel/repos", "events_url": "https://api.github.com/users/victornoel/events{/privacy}", "received_events_url": "https://api.github.com/users/victornoel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-02-06T15:06:45Z", "updated_at": "2020-05-12T17:46:33Z", "closed_at": "2020-05-12T16:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried using `convert_sklearn()` with one of my `initial_types` set to `BooleanTensorType([None, 1])`: the conversion works but then when I try to load the model with onnxruntime, I get the following error:\r\n```\r\nonnxruntime.capi.onnxruntime_pybind11_state.InvalidGraph: [ONNXRuntimeError] : 10 : INVALID_GRAPH : This is an invalid model. Type Error: Type 'tensor(bool)' of input parameter (input1) of operator (ArrayFeatureExtractor) in node (ArrayFeatureExtractor) is invalid.\r\n```\r\n\r\nIs that expected?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/394", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/394/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/394/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/394", "id": 559395711, "node_id": "MDU6SXNzdWU1NTkzOTU3MTE=", "number": 394, "title": "KNN converters doesn't work with double input type", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-03T23:25:44Z", "updated_at": "2020-05-25T12:58:36Z", "closed_at": "2020-05-25T12:58:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "---------------------------------------------------------------------------\r\nFail                                      Traceback (most recent call last)\r\n<ipython-input-31-dd613077b353> in <module>\r\n      7 model_onnx = convert_sklearn(model, 'knn', [('input', DoubleTensorType([None, X_test.shape[1]]))])\r\n      8 save_model(model_onnx, 'knn.onnx')\r\n----> 9 sess = InferenceSession('knn.onnx')\r\n     10 res = sess.run(None, {'input': np.array(X_test)})\r\n     11 np.mean(np.isclose(res[0], model.transform(X_test).toarray(), atol=1e-4))\r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n     23         self._path_or_bytes = path_or_bytes\r\n     24         self._sess_options = sess_options\r\n---> 25         self._load_model(providers)\r\n     26         self._enable_fallback = True\r\n     27 \r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n     41             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n     42 \r\n---> 43         self._sess.load_model(providers)\r\n     44 \r\n     45         self._session_options = self._sess.session_options\r\n\r\nFail: [ONNXRuntimeError] : 1 : FAIL : Node (Sc_Scan) Op (Scan) [TypeInferenceError] Graph attribute inferencing failed: Node:Sc_Scan Tensor element type mismatch. 11 != 1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/393", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/393/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/393/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/393", "id": 558959942, "node_id": "MDU6SXNzdWU1NTg5NTk5NDI=", "number": 393, "title": "Options ['nocl'] are not registerd for model 'LGBMClassifier'", "user": {"login": "gargayush792", "id": 4210199, "node_id": "MDQ6VXNlcjQyMTAxOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4210199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gargayush792", "html_url": "https://github.com/gargayush792", "followers_url": "https://api.github.com/users/gargayush792/followers", "following_url": "https://api.github.com/users/gargayush792/following{/other_user}", "gists_url": "https://api.github.com/users/gargayush792/gists{/gist_id}", "starred_url": "https://api.github.com/users/gargayush792/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gargayush792/subscriptions", "organizations_url": "https://api.github.com/users/gargayush792/orgs", "repos_url": "https://api.github.com/users/gargayush792/repos", "events_url": "https://api.github.com/users/gargayush792/events{/privacy}", "received_events_url": "https://api.github.com/users/gargayush792/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-03T09:39:43Z", "updated_at": "2020-02-10T16:13:37Z", "closed_at": "2020-02-10T16:13:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to convert an SkLearn pipeline with LightGBM classifier to ONNX. \r\n\r\n```\r\npreprocessor = ColumnTransformer(\r\n    transformers=[\r\n        ('cat_encode', OrdinalEncoder(categories = cat_encodings), [0,1,2,3,4,5,6,7]),\r\n        ],\r\n    remainder='passthrough'\r\n)\r\n\r\nclf = Pipeline(steps=[('preprocessor', preprocessor),\r\n                      ('train', LGBMClassifier(num_leaves = 31, objective ='binary', max_depth = 6, n_estimators = 200))])\r\n\r\nclf.fit(X_train, y_train)\r\n\r\nupdate_registered_converter(LGBMClassifier, 'LightGbmLGBMClassifier',\r\n                            calculate_linear_classifier_output_shapes,\r\n                            convert_lightgbm)\r\n\r\nmodel_onnx = convert_sklearn(clf, 'pipeline_unfunded', [('input', FloatTensorType(shape=[None, 27]))])\r\n```\r\n\r\nThis gives me the error - \r\nOptions ['nocl'] are not registerd for model 'LGBMClassifier'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/392", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/392/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/392/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/392", "id": 558130012, "node_id": "MDU6SXNzdWU1NTgxMzAwMTI=", "number": 392, "title": "Converted TfidfVectorizer can't be run with dtype float64", "user": {"login": "interplanetaryDB", "id": 40740930, "node_id": "MDQ6VXNlcjQwNzQwOTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/40740930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/interplanetaryDB", "html_url": "https://github.com/interplanetaryDB", "followers_url": "https://api.github.com/users/interplanetaryDB/followers", "following_url": "https://api.github.com/users/interplanetaryDB/following{/other_user}", "gists_url": "https://api.github.com/users/interplanetaryDB/gists{/gist_id}", "starred_url": "https://api.github.com/users/interplanetaryDB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/interplanetaryDB/subscriptions", "organizations_url": "https://api.github.com/users/interplanetaryDB/orgs", "repos_url": "https://api.github.com/users/interplanetaryDB/repos", "events_url": "https://api.github.com/users/interplanetaryDB/events{/privacy}", "received_events_url": "https://api.github.com/users/interplanetaryDB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-31T13:24:12Z", "updated_at": "2020-02-04T18:08:18Z", "closed_at": "2020-02-04T18:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to convert a tfidf Vectorizer followed by naive bayes to onnx and run it. I had discrepancies in the results between sklearn and onnx for some test sets, which were far worse than the usual difference in the 6th decimal point. Then i tried switching to dtype=numpy.float64 in the convert_sklearn method but running that in onnxruntime fails.\r\n\r\n`import numpy as np`\r\n`from sklearn.feature_extraction.text import TfidfVectorizer`\r\n`import onnxruntime`\r\n`from skl2onnx import convert_sklearn`\r\n`from skl2onnx.common.data_types import StringTensorType`\r\n\r\n`data = np.array([\"ksd f i o osp  p posfj jp pas jj\",`\r\n`                \"jfio psjfpisaj jfsaidfsfipjfp p gfdg asf\",`\r\n`                   \"soh fo fsf dnp fdfjkdpfl f fpgpplf\"],`\r\n`                dtype=object)`\r\n\r\n`initial_type = [('string_input', StringTensorType([None]))]`\r\n\r\n`tfidf = TfidfVectorizer()`\r\n\r\n`tfidf.fit(data)`\r\n\r\n`onx = convert_sklearn(tfidf, initial_types=initial_type, dtype=np.float64)`\r\n\r\n`sess = onnxruntime.InferenceSession(onx.SerializeToString())`\r\n\r\n---------------------------------------------------------------------------\r\nFail                                      Traceback (most recent call last)\r\n<ipython-input-1-d80a1d2a9a91> in <module>\r\n     20 onx = convert_sklearn(tfidf, initial_types=initial_type, dtype=np.float64)\r\n     21 \r\n---> 22 sess = onnxruntime.InferenceSession(onx.SerializeToString())\r\n\r\nc:\\users\\u733825\\appdata\\local\\continuum\\miniconda2\\envs\\classifly_from_yml\\lib\\site-packages\\onnxruntime\\capi\\session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n     23         self._path_or_bytes = path_or_bytes\r\n     24         self._sess_options = sess_options\r\n---> 25         self._load_model(providers)\r\n     26         self._enable_fallback = True\r\n     27 \r\n\r\nc:\\users\\u733825\\appdata\\local\\continuum\\miniconda2\\envs\\classifly_from_yml\\lib\\site-packages\\onnxruntime\\capi\\session.py in _load_model(self, providers)\r\n     41             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n     42 \r\n---> 43         self._sess.load_model(providers)\r\n     44 \r\n     45         self._session_options = self._sess.session_options\r\n\r\nFail: [ONNXRuntimeError] : 1 : FAIL : Type Error: Type parameter (T) bound to different types (tensor(float) and tensor(double) in node (Mul).\r\n\r\n\r\n---------------------------------------------------------------------------\r\n\r\nIf the dtype of the convert method is chnaged to float32\r\n`convert_sklearn(tfidf, initial_types=initial_type, dtype=np.float32)`\r\nthere is no error. The sklearn TfidfVectorizer has a default dtype argument of numpy.float64\r\n\r\nUsed versions:\r\nnumpy.__version__: 1.17.0\r\nsklearn.__version__: 0.22.1\r\nonnxruntime.__version__: 1.1.0\r\nskl2onnx.__version__: 1.6.0\r\nPython.version: 3.7.6\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/386", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/386/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/386/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/386", "id": 556423653, "node_id": "MDU6SXNzdWU1NTY0MjM2NTM=", "number": 386, "title": "Calling KNeighbours on NearestNeighbours model returns negative distance values", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-28T19:38:25Z", "updated_at": "2020-01-28T20:28:24Z", "closed_at": "2020-01-28T20:28:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nX, y = make_classification(n_samples=1000, n_features=100, n_classes=2, random_state=42, n_informative=5)\r\nX = X.astype(np.int64)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=0)\r\n\r\nmodel = NearestNeighbors().fit(X_train, y_train)\r\n\r\nmodel_onnx = convert_sklearn(model, 'knn', [('input', Int64TensorType([None, X_test.shape[1]]))])\r\nsave_model(model_onnx, 'knn.onnx')\r\nsess = InferenceSession('knn.onnx')\r\nres = sess.run(None, {'input': np.array(X_test)})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/378", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/378/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/378/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/378", "id": 553495015, "node_id": "MDU6SXNzdWU1NTM0OTUwMTU=", "number": 378, "title": "skl2onnx silently fails if an option is mispelled.", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-22T12:00:11Z", "updated_at": "2020-01-24T17:07:43Z", "closed_at": "2020-01-24T17:07:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some converter use options to modify the converted ONNX but options are not taken into account if it is mispelled.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/376", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/376/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/376/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/376", "id": 552853117, "node_id": "MDU6SXNzdWU1NTI4NTMxMTc=", "number": 376, "title": "support for PowerTransformer", "user": {"login": "msteijaert", "id": 8099328, "node_id": "MDQ6VXNlcjgwOTkzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8099328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msteijaert", "html_url": "https://github.com/msteijaert", "followers_url": "https://api.github.com/users/msteijaert/followers", "following_url": "https://api.github.com/users/msteijaert/following{/other_user}", "gists_url": "https://api.github.com/users/msteijaert/gists{/gist_id}", "starred_url": "https://api.github.com/users/msteijaert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msteijaert/subscriptions", "organizations_url": "https://api.github.com/users/msteijaert/orgs", "repos_url": "https://api.github.com/users/msteijaert/repos", "events_url": "https://api.github.com/users/msteijaert/events{/privacy}", "received_events_url": "https://api.github.com/users/msteijaert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T12:42:04Z", "updated_at": "2020-04-06T15:26:29Z", "closed_at": "2020-04-06T15:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that there is not yet support for PowerTransformer. Is anybody working on this?\r\n\r\nIf not, I will see if I can solve this on my end. I'm new to this package, but here is my naive understanding of what needs to happen (feel free to correct or comment):\r\n\r\n1) creation of a scaler (at first glance the new converter can be almost identical to calculate_sklearn_function_transformer_output_shapes or calculate_sklearn_scaler_output_shapes)\r\n\r\n2) creation of a converter, which reimplements PowerTransformer.transform(), and makes use of the method name and fitted lambda values stored in operator object\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/370", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/370/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/370/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/370", "id": 550142074, "node_id": "MDU6SXNzdWU1NTAxNDIwNzQ=", "number": 370, "title": "OneVsRestClassifier decision function scores", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-15T11:56:25Z", "updated_at": "2020-05-20T00:08:34Z", "closed_at": "2020-05-20T00:08:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) GradientBoosting scores\r\nCase of missing -ve sign.\r\n```\r\n[{0: 4.671645641326904, 1: 1.2985249757766724, 2: 0.15375956892967224},\r\n {0: 2.9476842880249023, 1: 0.08662216365337372, 2: 0.7380042672157288},\r\n {0: 1.8866238594055176, 1: 1.9071242809295654, 2: 2.294301986694336},\r\n {0: 4.315114974975586, 1: 2.8787195682525635, 2: 0.8129686713218689},\r\n {0: 4.378331184387207, 1: 3.141411542892456, 2: 2.2736568450927734},\r\n {0: 2.8893022537231445, 1: 2.5618557929992676, 2: 0.9095399975776672},\r\n {0: 1.0374414920806885, 1: 0.4696103036403656, 2: 2.2530879974365234},\r\n {0: 5.633243560791016, 1: 5.3710761070251465, 2: 3.726047992706299},\r\n {0: 3.398409366607666, 1: 3.024177312850952, 2: 2.127986431121826},\r\n {0: 3.6029438972473145, 1: 4.508012771606445, 2: 2.455275535583496}]\r\nvs\r\narray([[-4.67164604, -1.29852479, -0.15375963],\r\n       [-2.94768387, -0.08662199, -0.73800438],\r\n       [ 1.88662356, -1.90712483, -2.29430263],\r\n       [-4.3151148 ,  2.87871917, -0.81296864],\r\n       [-4.37833006, -3.14141124,  2.27365647],\r\n       [-2.88930144, -2.56185562, -0.90954061],\r\n       [ 1.03744173, -0.46961042, -2.25308828],\r\n       [-5.63324376,  5.37107616, -3.72604803],\r\n       [-3.39840824, -3.02417704, -2.12798654],\r\n       [ 3.60294374, -4.50801249, -2.45527536]])\r\n```\r\n2) Binary classification:\r\nClass 0 scores are off by 1:\r\n```\r\n[{0: 36.40080261230469, 1: -35.40080261230469},\r\n {0: 27.81466293334961, 1: -26.81466293334961},\r\n {0: 44.88618469238281, 1: -43.88618469238281},\r\n {0: -52.44716262817383, 1: 53.44716262817383},\r\n {0: -40.588985443115234, 1: 41.588985443115234},\r\n {0: -16.969009399414062, 1: 17.969009399414062},\r\n {0: -5.629312515258789, 1: 6.629312515258789},\r\n {0: -42.50645446777344, 1: 43.50645446777344},\r\n {0: -24.756114959716797, 1: 25.756114959716797},\r\n {0: 43.83158874511719, 1: -42.83158874511719}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/365", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/365/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/365/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/365", "id": 549785040, "node_id": "MDU6SXNzdWU1NDk3ODUwNDA=", "number": 365, "title": "BaggingClassifier returns raw scores when base_estimator doesn't support predict_proba", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-14T19:58:13Z", "updated_at": "2020-01-14T23:53:31Z", "closed_at": "2020-01-14T23:53:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nX, y = make_classification(n_features=100, n_classes=3, n_samples=1000, random_state=42, n_informative=7)\r\nX = X.astype(np.float32)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = BaggingClassifier(base_estimator=SGDClassifier(random_state=42), random_state=42).fit(X_train, y_train)\r\noptions = {id(model): {'raw_scores': False}}\r\nmodel_onnx = convert_sklearn(model, 'bagging classifier', [('input1', FloatTensorType([None, X_test.shape[1]]))],\r\n                             options=options)\r\nsave_model(model_onnx, 'bc.onnx')\r\nsess = InferenceSession('bc.onnx')\r\nres = sess.run(None, input_feed={'input1': X_test})\r\nprint(np.mean(res[0][100:] == model.predict(X_test[100:])))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/359", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/359/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/359/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/359", "id": 546787616, "node_id": "MDU6SXNzdWU1NDY3ODc2MTY=", "number": 359, "title": "Unable to find a shape calculater for OwnTransformer", "user": {"login": "drvshavva", "id": 28480288, "node_id": "MDQ6VXNlcjI4NDgwMjg4", "avatar_url": "https://avatars1.githubusercontent.com/u/28480288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drvshavva", "html_url": "https://github.com/drvshavva", "followers_url": "https://api.github.com/users/drvshavva/followers", "following_url": "https://api.github.com/users/drvshavva/following{/other_user}", "gists_url": "https://api.github.com/users/drvshavva/gists{/gist_id}", "starred_url": "https://api.github.com/users/drvshavva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drvshavva/subscriptions", "organizations_url": "https://api.github.com/users/drvshavva/orgs", "repos_url": "https://api.github.com/users/drvshavva/repos", "events_url": "https://api.github.com/users/drvshavva/events{/privacy}", "received_events_url": "https://api.github.com/users/drvshavva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T10:56:11Z", "updated_at": "2020-01-13T16:41:53Z", "closed_at": "2020-01-13T13:48:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHello ,\r\nI wrote my own transformer sklearn according to the summer support, but we can not convert the transformer we created onnx. So is there any onnx format to convert??\r\n\r\nProblem:\r\nskl2onnx.common.exceptions.MissingShapeCalculator: Unable to find a shape calculator for type '<class 'newBackend.feature_engineering.normalize_MinMaxScaler_class.normalizeMinMaxScaler'>'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/353", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/353/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/353/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/353", "id": 543957573, "node_id": "MDU6SXNzdWU1NDM5NTc1NzM=", "number": 353, "title": "Multi-label classification issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-30T17:42:58Z", "updated_at": "2020-01-07T19:17:55Z", "closed_at": "2020-01-07T19:17:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) MLPClassifier:\r\nFail                                      Traceback (most recent call last)\r\n<ipython-input-3-8f31611a7150> in <module>\r\n      7 model_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\n      8 save_model(model_onnx, 'mlp.onnx')\r\n----> 9 sess = InferenceSession('mlp.onnx')\r\n     10 res = sess.run(None, input_feed={'input': X_test})\r\n     11 #print(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n     23         self._path_or_bytes = path_or_bytes\r\n     24         self._sess_options = sess_options\r\n---> 25         self._load_model(providers)\r\n     26         self._enable_fallback = True\r\n     27 \r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n     41             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n     42 \r\n---> 43         self._sess.load_model(providers)\r\n     44 \r\n     45         self._session_options = self._sess.session_options\r\n\r\nFail: [ONNXRuntimeError] : 1 : FAIL : Type Error: Type (tensor(int64)) of output arg (label) of node (N8) does not match expected type (tensor(float)).\r\n2) RandomForestClassifier\r\n```\r\nX, y = make_multilabel_classification(n_labels=1, n_classes=5, random_state=9, n_samples=4)\r\nX = X.astype(np.float32)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = RandomForestClassifier().fit(X_train, y_train)\r\noptions = {id(model): {'zipmap': False}}\r\nmodel_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\nsave_model(model_onnx, 'mlp.onnx')\r\nsess = InferenceSession('mlp.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\nprint(np.mean(res[0] == model.predict(X_test)))\r\n```\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-61-6e0708955095> in <module>\r\n      8 save_model(model_onnx, 'mlp.onnx')\r\n      9 sess = InferenceSession('mlp.onnx')\r\n---> 10 res = sess.run(None, input_feed={'input': X_test})\r\n     11 #print(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n     12 #                                                      list(map(lambda y: x[y], x)), res[1])), atol=1e-3)))\r\n\r\n~/Documents/MachineLearning/onnx_projects/skl_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    140             output_names = [output.name for output in self._outputs_meta]\r\n    141         try:\r\n--> 142             return self._sess.run(output_names, input_feed, run_options)\r\n    143         except C.EPFail as err:\r\n    144             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running ArrayFeatureExtractor node. Name:'ArrayFeatureExtractor9' Status Message: Invalid Y argument: index is out of range: Y[0] (1) >=1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/343", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/343/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/343/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/343", "id": 535621879, "node_id": "MDU6SXNzdWU1MzU2MjE4Nzk=", "number": 343, "title": "Error with multi-label classification and zipmap set to False", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}, {"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-10T10:04:57Z", "updated_at": "2020-04-29T08:53:38Z", "closed_at": "2020-04-29T08:53:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "MLPClassifier and OneVsRestClassifier converters throw error with multi-label classification when zipmap is set to False.\r\n```\r\nX, y = make_multilabel_classification(n_labels=5, n_classes=10)\r\nX = X.astype(np.float32)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = MLPClassifier().fit(X_train, y_train)\r\noptions = {id(model): {'zipmap': False}}\r\nmodel_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\nsave_model(model_onnx, 'mlp.onnx')\r\nsess = InferenceSession('mlp.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n```\r\n\r\nFail                                      Traceback (most recent call last)\r\n<ipython-input-22-501a013b9cdb> in <module>\r\n      7 model_onnx = convert_sklearn(model, 'mlp', [('input', FloatTensorType([None, X_test.shape[1]]))], options=options)\r\n      8 save_model(model_onnx, 'mlp.onnx')\r\n----> 9 sess = InferenceSession('mlp.onnx')\r\n     10 res = sess.run(None, input_feed={'input': X_test})\r\n     11 print(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options)\r\n     21         self._path_or_bytes = path_or_bytes\r\n     22         self._sess_options = sess_options\r\n---> 23         self._load_model()\r\n     24         self._enable_fallback = True\r\n     25 \r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n     33 \r\n     34         if isinstance(self._path_or_bytes, str):\r\n---> 35             self._sess.load_model(self._path_or_bytes, providers)\r\n     36         elif isinstance(self._path_or_bytes, bytes):\r\n     37             self._sess.read_bytes(self._path_or_bytes, providers)\r\n\r\nFail: [ONNXRuntimeError] : 1 : FAIL : Load model from mlp.onnx failed:Type Error: Type (tensor(int64)) of output arg (label) of node (N8) does not match expected type (tensor(float)).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/339", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/339/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/339/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/339", "id": 534782227, "node_id": "MDU6SXNzdWU1MzQ3ODIyMjc=", "number": 339, "title": "OneVsRestClassifier issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-09T08:57:40Z", "updated_at": "2019-12-10T08:05:09Z", "closed_at": "2019-12-10T08:05:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) Error with binary classification\r\n```\r\nimport numpy as np\r\nfrom sklearn.datasets import make_classification\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\n\r\nX, y = make_classification(n_classes=2, n_samples=100, random_state=42, n_features=100, n_informative=7)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = OneVsRestClassifier(estimator=LogisticRegression()).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr1.onnx')\r\nsess = InferenceSession('lr1.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.predict_proba(X_test),\r\n                         list(map(lambda x: list(map(lambda y: x[y], x)), res[1])), atol=1e-5)))\r\nprint(np.mean(model.predict(X_test) == res[0]))\r\n```\r\n\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-42-d5433f9eb125> in <module>\r\n     17 save_model(onnx_model, 'lr1.onnx')\r\n     18 sess = InferenceSession('lr1.onnx')\r\n---> 19 res = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n     20 \r\n     21 print(np.mean(np.isclose(model.predict_proba(X_test),\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    134             output_names = [output.name for output in self._outputs_meta]\r\n    135         try:\r\n--> 136             return self._sess.run(output_names, input_feed, run_options)\r\n    137         except C.EPFail as err:\r\n    138             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running ZipMap node. Name:'ZipMap' Status Message: Input features_per_batch[1] != number of classlabels[2]\r\n\r\n\r\n2) Error with MLPRegressor, GradientBoostingRegressor, etc.\r\n\r\n```\r\nimport numpy as np\r\nfrom sklearn.datasets import make_classification\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.neural_network import MLPRegressor\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\n\r\nX, y = make_classification(n_classes=2, n_samples=100, random_state=42, n_features=100, n_informative=7)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = OneVsRestClassifier(estimator=MLPRegressor()).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr1.onnx')\r\nsess = InferenceSession('lr1.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.predict_proba(X_test),\r\n                         list(map(lambda x: list(map(lambda y: x[y], x)), res[1])), atol=1e-5)))\r\nprint(np.mean(model.predict(X_test) == res[0]))\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-47-6547d8cf2f71> in <module>\r\n     14 model = OneVsRestClassifier(estimator=MLPRegressor()).fit(X_train, y_train)\r\n     15 \r\n---> 16 onnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([None, X_test.shape[1]]))])\r\n     17 save_model(onnx_model, 'lr1.onnx')\r\n     18 sess = InferenceSession('lr1.onnx')\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, dtype, intermediate)\r\n    136     # Convert our Topology object into ONNX. The outcome is an ONNX model.\r\n    137     onnx_model = convert_topology(topology, name, doc_string, target_opset,\r\n--> 138                                   dtype=dtype, options=options)\r\n    139 \r\n    140     return (onnx_model, topology) if intermediate else onnx_model\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/common/_topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs, dtype, options)\r\n    963                     \"\".format(operator.type,\r\n    964                               type(getattr(operator, 'raw_model', None))))\r\n--> 965         conv(scope, operator, container)\r\n    966 \r\n    967     # Create a graph from its main components\r\n\r\n~/Documents/MachineLearning/onnx_projects/tmp_env/lib/python3.6/site-packages/skl2onnx-1.6.0-py3.6.egg/skl2onnx/operator_converters/one_vs_rest_classifier.py in convert_one_vs_rest_classifier(scope, operator, container)\r\n     37             this_operator.outputs.append(score_name)\r\n     38 \r\n---> 39             if len(estimator.coef_.shape) == 2:\r\n     40                 raise RuntimeError(\"OneVsRestClassifier accepts \"\r\n     41                                    \"regressor with only one target.\")\r\n\r\nAttributeError: 'MLPRegressor' object has no attribute 'coef_'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/336", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/336/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/336/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/336", "id": 534221376, "node_id": "MDU6SXNzdWU1MzQyMjEzNzY=", "number": 336, "title": "python 2.7 compatibility", "user": {"login": "psathyrella", "id": 2960243, "node_id": "MDQ6VXNlcjI5NjAyNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2960243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psathyrella", "html_url": "https://github.com/psathyrella", "followers_url": "https://api.github.com/users/psathyrella/followers", "following_url": "https://api.github.com/users/psathyrella/following{/other_user}", "gists_url": "https://api.github.com/users/psathyrella/gists{/gist_id}", "starred_url": "https://api.github.com/users/psathyrella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psathyrella/subscriptions", "organizations_url": "https://api.github.com/users/psathyrella/orgs", "repos_url": "https://api.github.com/users/psathyrella/repos", "events_url": "https://api.github.com/users/psathyrella/events{/privacy}", "received_events_url": "https://api.github.com/users/psathyrella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T19:34:31Z", "updated_at": "2019-12-14T00:33:21Z", "closed_at": "2019-12-14T00:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if this is covered somewhere, but is there a python 2 version of sklearn-onnx? The version I install with pip3 works fine. pip2 also happily installs a version of sklearn-onnx (1.6.0) into my python 2.7 local dir, but the version it installs seems to be python 3 code (it crashes on import in a number of places due to python 3-specific syntax).\r\n\r\nI realize we're not even a month from python 2.7 deprecation, so I can't complain if sklearn-onnx only supports python 3, but if so maybe it would be possible to have pypi reflect this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/335", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/335/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/335/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/335", "id": 534091098, "node_id": "MDU6SXNzdWU1MzQwOTEwOTg=", "number": 335, "title": "target_opset is not properly set", "user": {"login": "mbaelde", "id": 43513562, "node_id": "MDQ6VXNlcjQzNTEzNTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/43513562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbaelde", "html_url": "https://github.com/mbaelde", "followers_url": "https://api.github.com/users/mbaelde/followers", "following_url": "https://api.github.com/users/mbaelde/following{/other_user}", "gists_url": "https://api.github.com/users/mbaelde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbaelde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbaelde/subscriptions", "organizations_url": "https://api.github.com/users/mbaelde/orgs", "repos_url": "https://api.github.com/users/mbaelde/repos", "events_url": "https://api.github.com/users/mbaelde/events{/privacy}", "received_events_url": "https://api.github.com/users/mbaelde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-06T15:48:38Z", "updated_at": "2020-01-22T11:39:13Z", "closed_at": "2020-01-22T11:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to convert a fitted `sklearn.svm.SVC` model to onnx using `skl2onnx.convert_sklearn` and I wanted to fix the `target_opset` in order to remove the `onnxruntime` warning about opset. I set the target opset to 7 like this:\r\n\r\n```python\r\nonx = convert_sklearn(clf, initial_types=initial_type, target_opset=7)\r\n```\r\n\r\nBut when I check the converted model opset with `converted_model.opset_import` it was always 1. \r\n\r\nIs this a normal behaviour?\r\n\r\nI use Python3.6, sklearn version 0.22 and skl2onnx version 1.6.0 on Ubuntu 18.04.3 LTS.\r\n\r\nFIY this is the `onnxruntime` warning:\r\n```python\r\n2019-12-06 16:19:05.741171855 [W:onnxruntime:Default, model.cc:114 Model] ONNX Runtime only *guarantees* support for models stamped with opset version 7 or above for opset domain 'ai.onnx'. Please upgrade your model to opset 7 or higher. For now, this opset 1 model may run depending upon legacy support of some older opset version operators.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/333", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/333/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/333/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/333", "id": 530694626, "node_id": "MDU6SXNzdWU1MzA2OTQ2MjY=", "number": 333, "title": "AdaBoostClassifier probabilities is changed in scikit-learn 0.22", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T08:31:21Z", "updated_at": "2019-12-05T19:01:55Z", "closed_at": "2019-12-05T19:01:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See PR https://github.com/scikit-learn/scikit-learn/pull/14114", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/324", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/324/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/324/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/324", "id": 526649047, "node_id": "MDU6SXNzdWU1MjY2NDkwNDc=", "number": 324, "title": "Deviations between the predicted probabilities of sklearn and ONNX runtime", "user": {"login": "PatrickSager", "id": 37688286, "node_id": "MDQ6VXNlcjM3Njg4Mjg2", "avatar_url": "https://avatars1.githubusercontent.com/u/37688286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatrickSager", "html_url": "https://github.com/PatrickSager", "followers_url": "https://api.github.com/users/PatrickSager/followers", "following_url": "https://api.github.com/users/PatrickSager/following{/other_user}", "gists_url": "https://api.github.com/users/PatrickSager/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatrickSager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatrickSager/subscriptions", "organizations_url": "https://api.github.com/users/PatrickSager/orgs", "repos_url": "https://api.github.com/users/PatrickSager/repos", "events_url": "https://api.github.com/users/PatrickSager/events{/privacy}", "received_events_url": "https://api.github.com/users/PatrickSager/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-21T15:00:06Z", "updated_at": "2019-12-09T08:08:19Z", "closed_at": "2019-12-09T08:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all\r\n\r\nUsing skl2onnx 1.6:\r\nI've trained an AdaBoost model on the Iris data set (once using the \"SAMME\" and once the \"SAMME.R\" algorithm).\r\nThen let the model predict the probabilities for class 1 on the testing set.\r\nI've then exported the model to ONNX, created an inference session on it, and used it to predict the same probabilities.\r\nComparing the results, I've noted the following differences between the probabilities predicted by sklearn and the probabilities predicted by ONNX runtime:\r\n- SAMME algorithm: \r\n  -- max deviation: 2.5E-7\r\n  -- average deviation: 2.9E-8\r\n- SAMME.R algorithm:\r\n  -- max deviation: 1.5E-2\r\n  -- average deviation: 7.6E-3\r\n\r\nDeviations in the area of 1E-7 seem to be expected and be based on rounding errors. \r\nHowever, deviations of about 1E-2 are in my opinion too significant to be ignored.\r\n\r\nBesides, using skl2onnx 1.5.1, I'm getting a max deviation of 4.2E-8 for \"SAMME\".\r\n(The max deviation for SAMME.R, did not change).\r\n\r\nI suspect that this might be an issue that was introduced with skl2onnx 1.5.2.\r\n\r\nAttached the example code based on the Iris data set.\r\n[simple_AdaBoost.zip](https://github.com/onnx/sklearn-onnx/files/3875288/simple_AdaBoost.zip)\r\n\r\nOne additional question: What kind of deviations in the predicted probability between sklearn and ONNX runtime do I usually have to expect and is assumed to be acceptable?\r\n\r\nThanks for any help\r\n-- Patrick", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/321", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/321/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/321/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/321", "id": 522403235, "node_id": "MDU6SXNzdWU1MjI0MDMyMzU=", "number": 321, "title": "Predictions seem wrong a scikit pipeline with OneHotEncoder", "user": {"login": "ivannp", "id": 1331156, "node_id": "MDQ6VXNlcjEzMzExNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivannp", "html_url": "https://github.com/ivannp", "followers_url": "https://api.github.com/users/ivannp/followers", "following_url": "https://api.github.com/users/ivannp/following{/other_user}", "gists_url": "https://api.github.com/users/ivannp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivannp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivannp/subscriptions", "organizations_url": "https://api.github.com/users/ivannp/orgs", "repos_url": "https://api.github.com/users/ivannp/repos", "events_url": "https://api.github.com/users/ivannp/events{/privacy}", "received_events_url": "https://api.github.com/users/ivannp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-11-13T18:43:33Z", "updated_at": "2020-04-21T16:44:05Z", "closed_at": "2020-04-21T16:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have a simple model with two predictors:\r\n* int64, plugged into a OneHot transform\r\n* float32/float64, plugged into a RobustScaler\r\n\r\nThe model is created fine, but all predictions come out as 0s. None of them comes out as 0 in the original scikit model.\r\n\r\nRemoving the OneHot transform solves the issue - predictions are similar to the scikit model.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/320", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/320/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/320/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/320", "id": 522401718, "node_id": "MDU6SXNzdWU1MjI0MDE3MTg=", "number": 320, "title": "OneHotEncoder works only with int64", "user": {"login": "ivannp", "id": 1331156, "node_id": "MDQ6VXNlcjEzMzExNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivannp", "html_url": "https://github.com/ivannp", "followers_url": "https://api.github.com/users/ivannp/followers", "following_url": "https://api.github.com/users/ivannp/following{/other_user}", "gists_url": "https://api.github.com/users/ivannp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivannp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivannp/subscriptions", "organizations_url": "https://api.github.com/users/ivannp/orgs", "repos_url": "https://api.github.com/users/ivannp/repos", "events_url": "https://api.github.com/users/ivannp/events{/privacy}", "received_events_url": "https://api.github.com/users/ivannp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-13T18:40:08Z", "updated_at": "2019-11-15T07:47:07Z", "closed_at": "2019-11-15T07:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Converting a scikit pipeline, I am able to use _OneHotEncoder_ only on a _int64_ column, but not on a _int32_. It should work on all column types supported by ONNX.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/313", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/313/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/313/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/313", "id": 519324997, "node_id": "MDU6SXNzdWU1MTkzMjQ5OTc=", "number": 313, "title": "Converter for PLSRegression", "user": {"login": "msteijaert", "id": 8099328, "node_id": "MDQ6VXNlcjgwOTkzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8099328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msteijaert", "html_url": "https://github.com/msteijaert", "followers_url": "https://api.github.com/users/msteijaert/followers", "following_url": "https://api.github.com/users/msteijaert/following{/other_user}", "gists_url": "https://api.github.com/users/msteijaert/gists{/gist_id}", "starred_url": "https://api.github.com/users/msteijaert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msteijaert/subscriptions", "organizations_url": "https://api.github.com/users/msteijaert/orgs", "repos_url": "https://api.github.com/users/msteijaert/repos", "events_url": "https://api.github.com/users/msteijaert/events{/privacy}", "received_events_url": "https://api.github.com/users/msteijaert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-07T15:08:19Z", "updated_at": "2019-11-26T09:35:51Z", "closed_at": "2019-11-15T16:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is anybody working on a converter for sklearn.cross_decomposition.PLSRegression or does anybody know if one of the existing converters can be used for that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/312", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/312/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/312/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/312", "id": 519128319, "node_id": "MDU6SXNzdWU1MTkxMjgzMTk=", "number": 312, "title": "Output Shape", "user": {"login": "XciD", "id": 6586344, "node_id": "MDQ6VXNlcjY1ODYzNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6586344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XciD", "html_url": "https://github.com/XciD", "followers_url": "https://api.github.com/users/XciD/followers", "following_url": "https://api.github.com/users/XciD/following{/other_user}", "gists_url": "https://api.github.com/users/XciD/gists{/gist_id}", "starred_url": "https://api.github.com/users/XciD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XciD/subscriptions", "organizations_url": "https://api.github.com/users/XciD/orgs", "repos_url": "https://api.github.com/users/XciD/repos", "events_url": "https://api.github.com/users/XciD/events{/privacy}", "received_events_url": "https://api.github.com/users/XciD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}, {"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-07T08:58:10Z", "updated_at": "2020-04-27T15:40:27Z", "closed_at": "2020-04-27T15:40:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI've followed the tutorial to Convert your scikit-learn model into ONNX,\r\n\r\nIf I understand well, the shape `[None, 4]` means that the first dimension is dynamic. In order to batch calls to the model.\r\n\r\nThe thing I don't understand is why the output tensor has a shape of `[1]` and not `[None]`\r\n\r\n```python\r\ninput name='float_input' and shape=[None, 4]\r\nNodeArg(name='output_label', type='tensor(int64)', shape=[1])\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/307", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/307/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/307/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/307", "id": 517267623, "node_id": "MDU6SXNzdWU1MTcyNjc2MjM=", "number": 307, "title": "select_model_inputs_outputs clears metadata", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-04T16:35:04Z", "updated_at": "2019-11-15T14:54:29Z", "closed_at": "2019-11-15T14:54:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Model metadata is lost after a call to `select_model_inputs_outputs`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/303", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/303/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/303/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/303", "id": 515546049, "node_id": "MDU6SXNzdWU1MTU1NDYwNDk=", "number": 303, "title": "Example does not work with onnxruntime 1.0", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T15:53:56Z", "updated_at": "2019-11-13T11:26:35Z", "closed_at": "2019-11-13T11:26:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The example in the docs landing page throws this error with onnxruntime 1.0:\r\n\r\n```\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-2-3cce4c8fc66e> in <module>\r\n     22 input_name = sess.get_inputs()[0].name\r\n     23 label_name = sess.get_outputs()[0].name\r\n---> 24 pred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]\r\n\r\n~/.local/anaconda3/lib/python3.7/site-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    134             output_names = [output.name for output in self._outputs_meta]\r\n    135         try:\r\n--> 136             return self._sess.run(output_names, input_feed, run_options)\r\n    137         except C.EPFail as err:\r\n    138             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Got invalid dimensions for input: float_input for the following indices\r\n index: 0 Got: 38 Expected: 1\r\n Please fix either the inputs or the model.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/302", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/302/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/302/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/302", "id": 514577777, "node_id": "MDU6SXNzdWU1MTQ1Nzc3Nzc=", "number": 302, "title": "SVC decision function support", "user": {"login": "konabuta", "id": 3815677, "node_id": "MDQ6VXNlcjM4MTU2Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3815677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konabuta", "html_url": "https://github.com/konabuta", "followers_url": "https://api.github.com/users/konabuta/followers", "following_url": "https://api.github.com/users/konabuta/following{/other_user}", "gists_url": "https://api.github.com/users/konabuta/gists{/gist_id}", "starred_url": "https://api.github.com/users/konabuta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konabuta/subscriptions", "organizations_url": "https://api.github.com/users/konabuta/orgs", "repos_url": "https://api.github.com/users/konabuta/repos", "events_url": "https://api.github.com/users/konabuta/events{/privacy}", "received_events_url": "https://api.github.com/users/konabuta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-30T11:06:28Z", "updated_at": "2020-05-12T21:56:32Z", "closed_at": "2020-05-12T21:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any roadmap to support output of[ decision_function](https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC.decision_function) of SVC  ? or Any workaround ?\r\n\r\nRegards,\r\nKeita", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/301", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/301/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/301/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/301", "id": 514022757, "node_id": "MDU6SXNzdWU1MTQwMjI3NTc=", "number": 301, "title": "CalibratedClassifierCV returns wrong predictions when used in pipeline", "user": {"login": "PatrickSager", "id": 37688286, "node_id": "MDQ6VXNlcjM3Njg4Mjg2", "avatar_url": "https://avatars1.githubusercontent.com/u/37688286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatrickSager", "html_url": "https://github.com/PatrickSager", "followers_url": "https://api.github.com/users/PatrickSager/followers", "following_url": "https://api.github.com/users/PatrickSager/following{/other_user}", "gists_url": "https://api.github.com/users/PatrickSager/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatrickSager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatrickSager/subscriptions", "organizations_url": "https://api.github.com/users/PatrickSager/orgs", "repos_url": "https://api.github.com/users/PatrickSager/repos", "events_url": "https://api.github.com/users/PatrickSager/events{/privacy}", "received_events_url": "https://api.github.com/users/PatrickSager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-29T15:46:45Z", "updated_at": "2020-01-29T23:47:00Z", "closed_at": "2020-01-29T23:47:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the CalibratedClassifierCV in a Pipeline that is exported to ONNX, then running the ONNX session returns completely different results than running the pipeline directly.\r\n\r\nTo reproduce the issue, take the tutorial example \"Convert a pipeline with ColumnTransformer\" (http://onnx.ai/sklearn-onnx/auto_examples/plot_complex_pipeline.html) and replace\r\n\r\nclf = Pipeline(steps=[('preprocessor', preprocessor),\r\n                      ('classifier', LogisticRegression(solver='lbfgs'))])\r\n\r\nwith \r\n\r\nclf = Pipeline(steps=[('preprocessor', preprocessor),\r\n                      ('calibrator', CalibratedClassifierCV(base_estimator=LogisticRegression(solver='lbfgs', random_state=42), method='sigmoid', cv='warn'))])  \r\n\r\nThen predict the same row once using the classifier and once using the ONNX model. The predicted probabilities are completely different.\r\n\r\n(Attached is also the complete code).\r\n[titanic.zip](https://github.com/onnx/sklearn-onnx/files/3784470/titanic.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/300", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/300/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/300/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/300", "id": 513925043, "node_id": "MDU6SXNzdWU1MTM5MjUwNDM=", "number": 300, "title": "OneClassSVM predicts wrong number of classes + wrong predictions", "user": {"login": "amir0r", "id": 24477374, "node_id": "MDQ6VXNlcjI0NDc3Mzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/24477374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir0r", "html_url": "https://github.com/amir0r", "followers_url": "https://api.github.com/users/amir0r/followers", "following_url": "https://api.github.com/users/amir0r/following{/other_user}", "gists_url": "https://api.github.com/users/amir0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir0r/subscriptions", "organizations_url": "https://api.github.com/users/amir0r/orgs", "repos_url": "https://api.github.com/users/amir0r/repos", "events_url": "https://api.github.com/users/amir0r/events{/privacy}", "received_events_url": "https://api.github.com/users/amir0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-29T13:40:49Z", "updated_at": "2020-01-22T11:58:39Z", "closed_at": "2020-01-22T11:58:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the [scikit-learn documentation](https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html#sklearn.svm.OneClassSVM.predict), the `predict` method of `OneClassSVM`  should return  **+1** or **-1**.\r\n\r\nHowever, when I run this model with `onnxruntime`, **it returns 0 also !**\r\n\r\nSpecially when the specified kernel is `sigmoid` and sometimes when the kernel is `linear` or `poly`.\r\n\r\nOn the other hand, saved model doesn't give the same results as the predict method. \r\nExample:\r\n\r\n```python\r\nfrom skl2onnx.common.data_types import Int64TensorType\r\nfrom skl2onnx import convert_sklearn\r\nfrom sklearn.svm import OneClassSVM\r\nimport onnxruntime as rt\r\nimport numpy as np\r\n\r\nX = np.array([[0, 1, 2], [44, 36, 18], [-45, -78, -46]])\r\n\r\nlinearOCSVM = OneClassSVM(kernel='sigmoid').fit(X)\r\nprint(linearOCSVM.predict(X)) # [ 1  1 -1]\r\n\r\n# Convert into ONNX format with onnxmltools\r\ninitial_type = [('int64_input', Int64TensorType([None, X.shape[1]]))]\r\nonx = convert_sklearn(linearOCSVM, initial_types=initial_type)\r\n\r\n# Export model into ONNX format\r\nwith open(\"linearOCSVM.onnx\", \"wb\") as f:\r\n    f.write(onx.SerializeToString())\r\n\r\n# Compute the prediction with ONNX Runtime\r\nsess = rt.InferenceSession(\"linearOCSVM.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\nlabel_name = sess.get_outputs()[0].name\r\npred_onx = sess.run([label_name], {input_name: X})[0]\r\nprint(pred_onx) # [[ -1] [ 1 ] [ 1 ]]\r\n```\r\n\r\n> Not a native speaker, please forgive me if I made english mistakes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/287", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/287/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/287/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/287", "id": 505576681, "node_id": "MDU6SXNzdWU1MDU1NzY2ODE=", "number": 287, "title": "Support for installing with conda", "user": {"login": "sgreene", "id": 545568, "node_id": "MDQ6VXNlcjU0NTU2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/545568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgreene", "html_url": "https://github.com/sgreene", "followers_url": "https://api.github.com/users/sgreene/followers", "following_url": "https://api.github.com/users/sgreene/following{/other_user}", "gists_url": "https://api.github.com/users/sgreene/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgreene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgreene/subscriptions", "organizations_url": "https://api.github.com/users/sgreene/orgs", "repos_url": "https://api.github.com/users/sgreene/repos", "events_url": "https://api.github.com/users/sgreene/events{/privacy}", "received_events_url": "https://api.github.com/users/sgreene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-11T00:35:45Z", "updated_at": "2020-04-24T12:50:03Z", "closed_at": "2020-04-24T12:50:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "sklearn-onnx can be installed with pip. It would be nice if it could also be installed with conda. Even trying to build a conda recipe using `conda skeleton pypi skl2onnx` fails because the source url cannot be found. I'm assuming only a binary exists in the pypi repo?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/271", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/271/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/271/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/271", "id": 498326831, "node_id": "MDU6SXNzdWU0OTgzMjY4MzE=", "number": 271, "title": "OneHotEncoder dtype=np.int64 gives float output instead of int", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-25T14:32:52Z", "updated_at": "2019-09-25T14:55:35Z", "closed_at": "2019-09-25T14:55:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/266", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/266/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/266/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/266", "id": 497042745, "node_id": "MDU6SXNzdWU0OTcwNDI3NDU=", "number": 266, "title": "Unable to find a shape calculator for OneClassSVM", "user": {"login": "amir0r", "id": 24477374, "node_id": "MDQ6VXNlcjI0NDc3Mzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/24477374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir0r", "html_url": "https://github.com/amir0r", "followers_url": "https://api.github.com/users/amir0r/followers", "following_url": "https://api.github.com/users/amir0r/following{/other_user}", "gists_url": "https://api.github.com/users/amir0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir0r/subscriptions", "organizations_url": "https://api.github.com/users/amir0r/orgs", "repos_url": "https://api.github.com/users/amir0r/repos", "events_url": "https://api.github.com/users/amir0r/events{/privacy}", "received_events_url": "https://api.github.com/users/amir0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T11:33:46Z", "updated_at": "2019-10-21T20:17:28Z", "closed_at": "2019-10-21T20:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nThank you for your amazing job.\r\n\r\nI saw on [sklearn-onnx website](http://onnx.ai/sklearn-onnx/supported.html) that the [`OneClassSVM`](https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html) model from `sklearn`  is not supported yet.\r\n\r\nMy questions are:\r\n\r\n1. Is there any way to export this model into **ONNX** format ? \r\n\r\n> _By using  **libsvm** for instance ?_\r\n\r\n2. Will this model be supported by `sklearn-onnx` ?\r\n___\r\n\r\nHere is my code:\r\n```py\r\nfrom sklearn.svm import OneClassSVM\r\nfrom skl2onnx import convert_sklearn\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\n\r\nX = [[0], [0.44], [0.45], [0.46], [1]]\r\n\r\nclf = OneClassSVM(gamma='auto')\r\nclf.fit(X)\r\n\r\n# Convert into ONNX format with onnxmltools\r\ninitial_type = [('float_input', FloatTensorType([1, 4]))]\r\nnx = convert_sklearn(clf, initial_types=initial_type)\r\n# Export model into ONNX format\r\nwith open(\"SVM.onnx\", \"w\") as f:\r\n    f.write(onx.SerializeToString())\r\n```\r\n\r\nThe error, I've got:\r\n```py\r\nskl2onnx.common.exceptions.MissingShapeCalculator: Unable to find a shape calculator for type '<class 'sklearn.svm.classes.OneClassSVM'>'.\r\n\r\nIt usually means the pipeline being converted contains a\r\ntransformer or a predictor with no corresponding converter\r\nimplemented in sklearn-onnx. If the converted is implemented\r\nin another library (ie: onnxmltools), you need to register\r\nthe converted so that it can be used by sklearn-onnx (function\r\nupdate_registered_converter). If the model is not yet covered\r\nby sklearn-onnx, you may raise an issue to\r\nhttps://github.com/onnx/sklearn-onnx/issues\r\nto get the converter implemented or even contribute to the\r\nproject. If the model is a custom model, a new converter must\r\nbe implemented. Examples can be found in the gallery.\r\n```\r\n\r\n> Sorry if it is a dumb question, I'm still a beginner.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/260", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/260/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/260/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/260", "id": 495210939, "node_id": "MDU6SXNzdWU0OTUyMTA5Mzk=", "number": 260, "title": "Run time error: Parameter name cannot be empty and must be a string.", "user": {"login": "varshakirani", "id": 3057235, "node_id": "MDQ6VXNlcjMwNTcyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varshakirani", "html_url": "https://github.com/varshakirani", "followers_url": "https://api.github.com/users/varshakirani/followers", "following_url": "https://api.github.com/users/varshakirani/following{/other_user}", "gists_url": "https://api.github.com/users/varshakirani/gists{/gist_id}", "starred_url": "https://api.github.com/users/varshakirani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varshakirani/subscriptions", "organizations_url": "https://api.github.com/users/varshakirani/orgs", "repos_url": "https://api.github.com/users/varshakirani/repos", "events_url": "https://api.github.com/users/varshakirani/events{/privacy}", "received_events_url": "https://api.github.com/users/varshakirani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-18T13:00:29Z", "updated_at": "2020-04-21T16:45:55Z", "closed_at": "2020-04-21T16:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to convert sklearn pipeline to onnx and end up getting runtime error. The code looks like this:\r\n\r\n`update_registered_converter(XGBClassifier, 'XGBClassifier', calculate_xgboost_classifier_output_shapes, convert_xgboost)`  \r\n\r\n\r\n`pipeline = Pipeline(steps=[\r\n    ('preprocessor' , preprocessor),\r\n    ('classifier', xgb_model)\r\n])\r\n`\r\n\r\n\r\n`pipeline.fit(X_train_down, y_train_down, \r\n             **params_fit)`\r\n\r\n\r\n`model_onnx = convert_sklearn(pipeline, name='pipeline_xgb', initial_types=inputs)`\r\n\r\nThe error stacktrace:\r\n\r\n![image](https://user-images.githubusercontent.com/3057235/65150573-b2813200-da24-11e9-9deb-2dc46a98aded.png)\r\n\r\n\r\nEven though I have passed parameter _name=\"pipeline_xgb\"_ I am getting runtime error. \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/254", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/254/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/254/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/254", "id": 493126211, "node_id": "MDU6SXNzdWU0OTMxMjYyMTE=", "number": 254, "title": "Adaboost classifier and regressor throw error with non-default base_estimator hyper-parameter", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-13T04:06:01Z", "updated_at": "2019-09-19T14:17:06Z", "closed_at": "2019-09-19T14:17:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "data = load_iris()\r\nX, y = data.data, data.target\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = AdaBoostClassifier(base_estimator=RandomForestClassifier())\r\nmodel.fit(X_train, y_train)\r\n\r\nonnx_fs = convert_sklearn(model, 'ada', [('float_input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_fs, 'ada_cla.onnx')\r\nsess = InferenceSession('ada_cla.onnx')\r\nres = sess.run('', input_feed={'float_input': X_test.astype('float32')})\r\nprint(np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n                                                         list(map(lambda y: x[y], x)), res[1])), atol=1e-7)))\r\nprint(np.mean(res[0] == np.argmax(model.predict_proba(X_test), axis=1)))\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/skl2onnx-1.5.1-py3.6.egg/skl2onnx/operator_converters/ada_boost.py in convert_sklearn_ada_boost_classifier(scope, operator, container)\r\n    160             attrs['classlabels_strings'] = classes\r\n    161 \r\n--> 162         add_tree_to_attribute_pairs(attrs, True, op.estimators_[tree_id].tree_,\r\n    163                                     0, 1, 0, True, True, dtype=container.dtype)\r\n    164         container.add_node(\r\n\r\nAttributeError: 'RandomForestClassifier' object has no attribute 'tree_'\r\n\r\n\r\ndata = load_diabetes()\r\nX = data.data\r\ny = data.target\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = AdaBoostRegressor(base_estimator=LinearRegression(), n_estimators=5, learning_rate=1,\r\nloss='exponential', random_state=42).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0][0][0], res)), rtol=1e-5)))\r\n\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/skl2onnx-1.5.1-py3.6.egg/skl2onnx/operator_converters/ada_boost.py in _get_estimators_label(scope, operator, container, model)\r\n    232         attrs = get_default_tree_regressor_attribute_pairs()\r\n    233         attrs['name'] = scope.get_unique_operator_name(op_type)\r\n--> 234         attrs['n_targets'] = int(model.estimators_[tree_id].n_outputs_)\r\n    235         add_tree_to_attribute_pairs(attrs, False,\r\n    236                                     model.estimators_[tree_id].tree_,\r\n\r\nAttributeError: 'LinearRegression' object has no attribute 'n_outputs_'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/252", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/252/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/252/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/252", "id": 492391324, "node_id": "MDU6SXNzdWU0OTIzOTEzMjQ=", "number": 252, "title": "Convert MultinomialNB Model to ONNX Prediction Error", "user": {"login": "ikestevens", "id": 12886679, "node_id": "MDQ6VXNlcjEyODg2Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/12886679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikestevens", "html_url": "https://github.com/ikestevens", "followers_url": "https://api.github.com/users/ikestevens/followers", "following_url": "https://api.github.com/users/ikestevens/following{/other_user}", "gists_url": "https://api.github.com/users/ikestevens/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikestevens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikestevens/subscriptions", "organizations_url": "https://api.github.com/users/ikestevens/orgs", "repos_url": "https://api.github.com/users/ikestevens/repos", "events_url": "https://api.github.com/users/ikestevens/events{/privacy}", "received_events_url": "https://api.github.com/users/ikestevens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-11T18:16:03Z", "updated_at": "2019-09-13T20:15:36Z", "closed_at": "2019-09-12T18:46:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When converting a MultinomialNB model to ONNX, I'm able to convert the model, but when trying to get a prediction, I get the error:\r\n\r\n**Method run failed due to: [ONNXRuntimeError] : 1 : GENERAL ERROR : Non-zero status code returned while running No de: MatMul Status Message: Not satsified: K_ == right_shape[right_num_dims - 2] matmul_helper.h:38 onnxruntime::MatMulComputeHelper::ComputeMatMul dimension mismatch**\r\n\r\nThe dimension of the FloatTensorType is correct, because if I change it, I get a different error (about incompatible dimensions for matrix multiplication). If I use my same data with a LinearSVC model, the prediction works fine. Also, when I create a small dummy model (7 samples, 5 features) the MultinomialNB model works fine (I get a prediction).\r\n\r\nI've compared the inputs (train_X, train_y) of both the dummy MultinomialNB and my model, and they are both sparse matrix in csr (train X). So I'm not sure why one works fine, and the other does not. My model has 10,000 features and 10 million samples. I've also made a medium size model with 1000 samples and 20 features and that one doesn't work either.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/251", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/251/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/251/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/251", "id": 492238277, "node_id": "MDU6SXNzdWU0OTIyMzgyNzc=", "number": 251, "title": "How is the sklearn version managed ?", "user": {"login": "alexandreCameron", "id": 12397890, "node_id": "MDQ6VXNlcjEyMzk3ODkw", "avatar_url": "https://avatars0.githubusercontent.com/u/12397890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandreCameron", "html_url": "https://github.com/alexandreCameron", "followers_url": "https://api.github.com/users/alexandreCameron/followers", "following_url": "https://api.github.com/users/alexandreCameron/following{/other_user}", "gists_url": "https://api.github.com/users/alexandreCameron/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandreCameron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandreCameron/subscriptions", "organizations_url": "https://api.github.com/users/alexandreCameron/orgs", "repos_url": "https://api.github.com/users/alexandreCameron/repos", "events_url": "https://api.github.com/users/alexandreCameron/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandreCameron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979610, "node_id": "MDU6TGFiZWwxMTY1OTc5NjEw", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-11T13:27:55Z", "updated_at": "2020-02-05T12:29:27Z", "closed_at": "2020-02-05T12:29:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSorry, I'm a newbie with onnx, I'm not sure I understand how the sklearn version is managed by skl2onnx.\r\n\r\nMy problem is the following:\r\n\r\nIf I export a sklearn pipeline created on an environment with a version V-sklearn_1 of sklearn and V-onnx_1 of onnx, is it possible to reload the same pipeline on an environment with a version V-sklearn_2 of sklearn V-onnx_2 of onnx or can I only use an environment with the same requirements ?\r\n\r\nThank you for taking the time", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/249", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/249/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/249/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/249", "id": 489941714, "node_id": "MDU6SXNzdWU0ODk5NDE3MTQ=", "number": 249, "title": "skl2onnx converter for OrdinalEncoder", "user": {"login": "shihclin", "id": 15250880, "node_id": "MDQ6VXNlcjE1MjUwODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/15250880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shihclin", "html_url": "https://github.com/shihclin", "followers_url": "https://api.github.com/users/shihclin/followers", "following_url": "https://api.github.com/users/shihclin/following{/other_user}", "gists_url": "https://api.github.com/users/shihclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shihclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shihclin/subscriptions", "organizations_url": "https://api.github.com/users/shihclin/orgs", "repos_url": "https://api.github.com/users/shihclin/repos", "events_url": "https://api.github.com/users/shihclin/events{/privacy}", "received_events_url": "https://api.github.com/users/shihclin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-05T19:00:11Z", "updated_at": "2019-09-27T18:32:35Z", "closed_at": "2019-09-27T18:32:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am currently using ColumnTransformer which includes an Ordinal Encoder to encode categorical features. However, it looks like there is not an available converter for ordinal encoder, am I correct? If so, is there any workaround? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/245", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/245/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/245/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/245", "id": 488856078, "node_id": "MDU6SXNzdWU0ODg4NTYwNzg=", "number": 245, "title": "min and max are now arguments and not parameters for operator Clip in ONNX opset=11", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T22:38:05Z", "updated_at": "2019-10-22T14:16:08Z", "closed_at": "2019-10-22T14:16:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/229", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/229/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/229/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/229", "id": 477859416, "node_id": "MDU6SXNzdWU0Nzc4NTk0MTY=", "number": 229, "title": "Label binariser converter doesn't work on 2-D data", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-07T11:03:35Z", "updated_at": "2020-04-29T13:16:41Z", "closed_at": "2020-04-29T13:16:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "X1 = np.array([[0, 1, 1], [1, 0, 0]])\r\nmodel = LabelBinarizer().fit(X1)\r\nprint(model.transform(X1))\r\n\r\nonnx_fs = convert_sklearn(model, 'lb', [('float_input', Int64TensorType(X1.shape))])\r\nonnxmltools.utils.save_model(onnx_fs, 'lb.onnx')\r\nsess = InferenceSession('lb.onnx')\r\nres = sess.run('', input_feed={'float_input': X1.astype(np.int64)})\r\nres\r\n\r\n[[0 1 1]\r\n [1 0 0]]\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-110ffb7fb0ed> in <module>\r\n      5 onnx_fs = convert_sklearn(model, 'lb', [('float_input', Int64TensorType(X1.shape))])\r\n      6 onnxmltools.utils.save_model(onnx_fs, 'lb.onnx')\r\n----> 7 sess = InferenceSession('lb.onnx')\r\n      8 res = sess.run('', input_feed={'float_input': X1.astype(np.int64)})\r\n      9 res\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options)\r\n     27 \r\n     28         if isinstance(path_or_bytes, str):\r\n---> 29             self._sess.load_model(path_or_bytes)\r\n     30         elif isinstance(path_or_bytes, bytes):\r\n     31             self._sess.read_bytes(path_or_bytes)\r\n\r\nRuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from lb.onnx failed:Node:Cast Output:variable [ShapeInferenceError] Can't merge shape info. Both source and target dimension have values but they differ. Source=6 Target=2 Dimension=0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/221", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/221/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/221/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/221", "id": 468995477, "node_id": "MDU6SXNzdWU0Njg5OTU0Nzc=", "number": 221, "title": "Fix wrong parameter name in OneHotEncoder converter", "user": {"login": "scnakandala", "id": 1334376, "node_id": "MDQ6VXNlcjEzMzQzNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1334376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scnakandala", "html_url": "https://github.com/scnakandala", "followers_url": "https://api.github.com/users/scnakandala/followers", "following_url": "https://api.github.com/users/scnakandala/following{/other_user}", "gists_url": "https://api.github.com/users/scnakandala/gists{/gist_id}", "starred_url": "https://api.github.com/users/scnakandala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scnakandala/subscriptions", "organizations_url": "https://api.github.com/users/scnakandala/orgs", "repos_url": "https://api.github.com/users/scnakandala/repos", "events_url": "https://api.github.com/users/scnakandala/events{/privacy}", "received_events_url": "https://api.github.com/users/scnakandala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-17T05:37:38Z", "updated_at": "2019-07-18T12:44:11Z", "closed_at": "2019-07-18T12:44:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In https://github.com/onnx/sklearn-onnx/blob/master/skl2onnx/operator_converters/one_hot_encoder.py#L151 mutiple should be multiple\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/218", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/218/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/218/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/218", "id": 465091475, "node_id": "MDU6SXNzdWU0NjUwOTE0NzU=", "number": 218, "title": "Remove ZipMap from every classifier converter", "user": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-08T07:10:04Z", "updated_at": "2020-01-22T11:43:22Z", "closed_at": "2020-01-22T11:43:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "ZipMap is highly inefficient in its current implementation (see Issue https://github.com/onnx/onnx/issues/2153). It should be removed and replaced by a constant storing the labels.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/215", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/215/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/215/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/215", "id": 463629507, "node_id": "MDU6SXNzdWU0NjM2Mjk1MDc=", "number": 215, "title": "Does Batch predictions support for KNeighborsClassifier in onnx ?", "user": {"login": "yeyinthtoon", "id": 51197689, "node_id": "MDQ6VXNlcjUxMTk3Njg5", "avatar_url": "https://avatars2.githubusercontent.com/u/51197689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeyinthtoon", "html_url": "https://github.com/yeyinthtoon", "followers_url": "https://api.github.com/users/yeyinthtoon/followers", "following_url": "https://api.github.com/users/yeyinthtoon/following{/other_user}", "gists_url": "https://api.github.com/users/yeyinthtoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeyinthtoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeyinthtoon/subscriptions", "organizations_url": "https://api.github.com/users/yeyinthtoon/orgs", "repos_url": "https://api.github.com/users/yeyinthtoon/repos", "events_url": "https://api.github.com/users/yeyinthtoon/events{/privacy}", "received_events_url": "https://api.github.com/users/yeyinthtoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xadupre", "id": 22452781, "node_id": "MDQ6VXNlcjIyNDUyNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/22452781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xadupre", "html_url": "https://github.com/xadupre", "followers_url": "https://api.github.com/users/xadupre/followers", "following_url": "https://api.github.com/users/xadupre/following{/other_user}", "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}", "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions", "organizations_url": "https://api.github.com/users/xadupre/orgs", "repos_url": "https://api.github.com/users/xadupre/repos", "events_url": "https://api.github.com/users/xadupre/events{/privacy}", "received_events_url": "https://api.github.com/users/xadupre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-07-03T08:57:43Z", "updated_at": "2019-11-13T11:27:31Z", "closed_at": "2019-11-13T11:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "`from sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nimport numpy\r\nfrom skl2onnx import convert_sklearn\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\nimport onnxruntime as rt\r\n\r\niris = load_iris()\r\nX, y = iris.data, iris.target\r\nX_train, X_test, y_train, y_test = train_test_split(X, y)\r\nneigh = KNeighborsClassifier(n_neighbors=3)\r\nneigh.fit(X_train, y_train)\r\nneigh.predict(X_test)\r\n\r\ninitial_type = [('float_input', FloatTensorType([1, 4]))]\r\nonx = convert_sklearn(neigh, initial_types=initial_type)\r\nwith open(\"knn_iris.onnx\", \"wb\") as f:\r\n  f.write(onx.SerializeToString())\r\n\r\nsess = rt.InferenceSession(\"knn_iris.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\nlabel_name = sess.get_outputs()[0].name\r\nsess.run([label_name], {input_name: X_test.astype(numpy.float32)})`\r\nIt produce the following error.\r\n**RuntimeError: Method run failed due to: [ONNXRuntimeError] : 1 : GENERAL ERROR : ..\\onnxruntime\\core/providers/cpu/math/element_wise_ops.h:349 onnxruntime::BroadcastIterator::Append axis == 1 || axis == largest was false. Attempting to broadcast an axis by a dimension other than 1. 38 by 112**\r\nAlthough the above error is produced with batch inference, it successfully return the prediction for single data input.\r\n`sess.run([label_name], {input_name: numpy.atleast_2d(X_test[0]).astype(numpy.float32)})` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/214", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/214/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/214/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/214", "id": 462134735, "node_id": "MDU6SXNzdWU0NjIxMzQ3MzU=", "number": 214, "title": "How to populate onnx model with custom meta data map ?", "user": {"login": "ac4922", "id": 43257237, "node_id": "MDQ6VXNlcjQzMjU3MjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/43257237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ac4922", "html_url": "https://github.com/ac4922", "followers_url": "https://api.github.com/users/ac4922/followers", "following_url": "https://api.github.com/users/ac4922/following{/other_user}", "gists_url": "https://api.github.com/users/ac4922/gists{/gist_id}", "starred_url": "https://api.github.com/users/ac4922/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ac4922/subscriptions", "organizations_url": "https://api.github.com/users/ac4922/orgs", "repos_url": "https://api.github.com/users/ac4922/repos", "events_url": "https://api.github.com/users/ac4922/events{/privacy}", "received_events_url": "https://api.github.com/users/ac4922/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-28T17:23:56Z", "updated_at": "2019-07-31T11:06:21Z", "closed_at": "2019-07-31T11:06:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an array which I intend to append in the onnx file itself. \r\n\r\nIn my opninion,  onnxruntime provides an option to retrieve custom meta data map/\r\n\r\nfrom onnxruntime import InferenceSession\r\nsess = InferenceSession(example)\r\nmeta = sess.get_modelmeta()\r\nprint(\"custom_metadata_map={}\".format(meta.custom_metadata_map))\r\nsource - https://microsoft.github.io/onnxruntime/auto_examples/plot_metadata.html#sphx-glr-auto-examples-plot-metadata-py\r\n\r\n\r\nHowever, it is always populated empty. My goal is to append some custom_metadata when I convert a scikit learn model to onnx which is available when the onnx is read by onnxruntime. \r\n\r\nPlease suggest if that is possible and how.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/212", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/212/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/212/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/212", "id": 461579204, "node_id": "MDU6SXNzdWU0NjE1NzkyMDQ=", "number": 212, "title": "Multi Output Support", "user": {"login": "magnetilo", "id": 10993772, "node_id": "MDQ6VXNlcjEwOTkzNzcy", "avatar_url": "https://avatars3.githubusercontent.com/u/10993772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magnetilo", "html_url": "https://github.com/magnetilo", "followers_url": "https://api.github.com/users/magnetilo/followers", "following_url": "https://api.github.com/users/magnetilo/following{/other_user}", "gists_url": "https://api.github.com/users/magnetilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/magnetilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magnetilo/subscriptions", "organizations_url": "https://api.github.com/users/magnetilo/orgs", "repos_url": "https://api.github.com/users/magnetilo/repos", "events_url": "https://api.github.com/users/magnetilo/events{/privacy}", "received_events_url": "https://api.github.com/users/magnetilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-27T14:56:15Z", "updated_at": "2019-12-30T17:36:58Z", "closed_at": "2019-12-30T17:36:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\nI would like to convert a multi output random forest classifier to ONNX format. This is not supported at the moment, right?\r\n\r\nHere a simple example:\r\n```python\r\nfrom sklearn.datasets import make_multilabel_classification\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom skl2onnx import convert_sklearn\r\nfrom skl2onnx.common.data_types import FloatTensorType\r\n\r\n# Create multilabel classification dataset:\r\nX, Y = make_multilabel_classification(n_samples=3, n_features=20, n_classes=3, n_labels=2, length=50)\r\n\r\nprint(X)\r\n#[[2. 1. 1. 1. 0. 2. 3. 2. 0. 0. 1. 2. 2. 3. 1. 2. 2. 2. 4. 4.]\r\n# [2. 4. 4. 1. 0. 0. 4. 1. 2. 4. 2. 2. 0. 6. 3. 6. 6. 4. 7. 0.]\r\n# [4. 2. 4. 3. 1. 1. 2. 5. 2. 1. 0. 6. 1. 3. 4. 3. 8. 4. 4. 3.]]\r\n\r\nprint(Y)\r\n#[[1 0 0]\r\n# [1 1 1]\r\n# [0 0 1]]\r\n\r\n\r\n# Train random forest multiple output classifier:\r\nrf = RandomForestClassifier(n_estimators=50, max_depth=5)\r\nrf.fit(X, Y)\r\nY_pred = rf.predict_proba(X) # List of three arrays containing output probabilities \r\n                             # for classes 0 an 1 for each data point\r\n\r\nprint(Y_pred)\r\n#[array([[0.1 , 0.9 ],\r\n#        [0.1 , 0.9 ],\r\n#        [0.66, 0.34]]), \r\n# array([[0.92, 0.08],\r\n#        [0.28, 0.72],\r\n#        [0.9 , 0.1 ]]), \r\n# array([[0.92, 0.08],\r\n#        [0.28, 0.72],\r\n#        [0.9 , 0.1 ]])]\r\n\r\n\r\n# Convert model to ONNX:\r\nonnx = convert_sklearn(rf, initial_types=[('float_input', FloatTensorType([1, X.shape[1]]))])\r\n```\r\n\r\nThe last line throws the following error (for a single-ouput-problem, i.e., n_classes=1, this error does not occur):\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-22-da96fa363e05> in <module>\r\n     37 \r\n     38 # Convert model to ONNX:\r\n---> 39 onnx = convert_sklearn(rf, initial_types=[('float_input', FloatTensorType([1, X.shape[1]]))])\r\n\r\n~\\.conda\\envs\\nn_env\\lib\\site-packages\\skl2onnx\\convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, intermediate)\r\n    121     topology = parse_sklearn_model(model, initial_types, target_opset,\r\n    122                                    custom_conversion_functions,\r\n--> 123                                    custom_shape_calculators, custom_parsers)\r\n    124 \r\n    125     # Infer variable shapes\r\n\r\n~\\.conda\\envs\\nn_env\\lib\\site-packages\\skl2onnx\\_parse.py in parse_sklearn_model(model, initial_types, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers)\r\n    361     # Parse the input scikit-learn model as a Topology object.\r\n    362     outputs = parse_sklearn(scope, model, inputs,\r\n--> 363                             custom_parsers=custom_parsers)\r\n    364 \r\n    365     # The object raw_model_container is a part of the topology we're\r\n\r\n~\\.conda\\envs\\nn_env\\lib\\site-packages\\skl2onnx\\_parse.py in parse_sklearn(scope, model, inputs, custom_parsers)\r\n    297     elif tmodel in sklearn_parsers_map:\r\n    298         outputs = sklearn_parsers_map[tmodel](scope, model, inputs,\r\n--> 299                                               custom_parsers=custom_parsers)\r\n    300     elif isinstance(model, pipeline.Pipeline):\r\n    301         parser = sklearn_parsers_map[pipeline.Pipeline]\r\n\r\n~\\.conda\\envs\\nn_env\\lib\\site-packages\\skl2onnx\\_parse.py in _parse_sklearn_classifier(scope, model, inputs, custom_parsers)\r\n    256     label_type = Int64Type()\r\n    257 \r\n--> 258     if np.issubdtype(model.classes_.dtype, np.floating):\r\n    259         classes = np.array(list(map(lambda x: int(x), classes)))\r\n    260         this_operator.classlabels_int64s = classes\r\n\r\nAttributeError: 'list' object has no attribute 'dtype'\r\n```\r\n\r\n\r\nA similar issue for onnx-tensorflow was reported here: https://github.com/onnx/onnx-tensorflow/issues/203 \r\nWill multi ouput models be supported by sklearn-onnx in the future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/206", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/206/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/206/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/206", "id": 460980400, "node_id": "MDU6SXNzdWU0NjA5ODA0MDA=", "number": 206, "title": "NearestNeighbours converter mismatches", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-26T13:44:48Z", "updated_at": "2019-08-30T13:08:52Z", "closed_at": "2019-08-30T13:06:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "from sklearn.neighbors import NearestNeighbors\r\nfrom onnxmltools import save_model\r\nfrom onnxruntime import InferenceSession\r\nfrom skl2onnx.common.data_types import FloatTensorType, Int64TensorType, StringTensorType\r\nfrom skl2onnx.convert import convert_sklearn\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\n\r\ndata = load_iris()\r\nX, y = data.data, data.target\r\nX_train, X_test, *_ = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = NearestNeighbors().fit(X_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', Int64TensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr2.onnx')\r\nsess = InferenceSession('lr2.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.int64)}))\r\n\r\nprint(np.mean(model.kneighbors(X_test)[1] == list(map(lambda x: x[0][0], res))))\r\nprint(np.mean(np.isclose(model.kneighbors(X_test)[0], list(map(lambda x: x[1][0], res)))))\r\n\r\n0.050666666666666665\r\n0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/204", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/204/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/204/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/204", "id": 460577956, "node_id": "MDU6SXNzdWU0NjA1Nzc5NTY=", "number": 204, "title": "KNeighboursRegressor converter issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T18:36:09Z", "updated_at": "2019-08-28T18:53:04Z", "closed_at": "2019-08-28T18:53:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) class probability mismatches with int features:\r\nX, y = make_regression(n_features=10, n_samples=1000, random_state=42)\r\nX = X.astype(np.int64)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = KNeighborsRegressor().fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', Int64TensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr2.onnx')\r\nsess = InferenceSession('lr2.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.int64)}))\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0][0][0], res)), rtol=1e-5)))\r\n\r\n0.264\r\n\r\n2) Probability score mismatches with the following combination of (algorithm, metric) hyper-parameters:\r\n\r\nball_tree, p | ball_tree, chebyshev | ball_tree, infinity | ball_tree, hamming | ball_tree, canberra | ball_tree, braycurtis | ball_tree, matching | ball_tree, jaccard | ball_tree, dice | ball_tree, kulsinski | ball_tree, rogerstanimoto | ball_tree, russellrao | ball_tree, sokalmichener | ball_tree, sokalsneath | kd_tree, p | kd_tree, chebyshev | kd_tree, infinity | brute, cosine | brute, braycurtis | brute, canberra | brute, chebyshev | brute, correlation | brute, cosine | brute, dice | brute, hamming | brute, jaccard | brute, kulsinski | brute, mahalanobis | brute, matching | brute, rogerstanimoto | brute, russellrao | brute, seuclidean | brute, sokalmichener | brute, sokalsneath | brute, sqeuclidean | brute, yule\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/203", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/203/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/203/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/203", "id": 460387060, "node_id": "MDU6SXNzdWU0NjAzODcwNjA=", "number": 203, "title": "KNeighboursClassifier converter issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T12:12:06Z", "updated_at": "2019-08-28T18:53:29Z", "closed_at": "2019-08-28T18:53:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Probability score mismatches with the following combination of (algorithm, metric) hyper-parameters:\r\nball_tree, p | ball_tree, cityblock | ball_tree, l1 | ball_tree, chebyshev | ball_tree, infinity | ball_tree, hamming | ball_tree, canberra | ball_tree, braycurtis | ball_tree, matching | ball_tree, jaccard | ball_tree, dice | ball_tree, kulsinski | ball_tree, rogerstanimoto | ball_tree, russellrao | ball_tree, sokalmichener | ball_tree, sokalsneath | kd_tree, p | kd_tree, cityblock | kd_tree, l1 | kd_tree, chebyshev | kd_tree, infinity | brute, cityblock | brute, cosine | brute, manhattan | brute, braycurtis | brute, canberra | brute, chebyshev | brute, correlation | brute, cosine | brute, dice | brute, hamming | brute, jaccard | brute, kulsinski | brute, mahalanobis | brute, matching | brute, rogerstanimoto | brute, russellrao | brute, seuclidean | brute, sokalmichener | brute, sokalsneath | brute, sqeuclidean | brute, yule\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/202", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/202/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/202/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/202", "id": 460335115, "node_id": "MDU6SXNzdWU0NjAzMzUxMTU=", "number": 202, "title": "Use numpy arrays for scores returned by RandomForestClassifier", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-25T10:14:34Z", "updated_at": "2019-06-26T10:47:19Z", "closed_at": "2019-06-26T10:47:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Why are the scores returned by `output_probability` a list of dictioniaries?\r\nThat is different from the sklearn api and much less efiicient for larger datasets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/201", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/201/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/201/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/201", "id": 460127618, "node_id": "MDU6SXNzdWU0NjAxMjc2MTg=", "number": 201, "title": "GradientBoostingClassifier converter issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T22:41:51Z", "updated_at": "2019-08-08T22:53:41Z", "closed_at": "2019-08-08T22:53:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) predicted probability mismatches\r\nX, y = make_classification(n_features=100, n_samples=1000, n_classes=2, n_informative=8)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = GradientBoostingClassifier().fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr2', [('input', FloatTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'lr2.onnx')\r\nsess = InferenceSession('lr2.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nr1 = np.mean(np.isclose(model.predict_proba(X_test), list(map(lambda x:\r\n                                                         list(map(lambda y: x[y], x)), res[1])), atol=1e-4))\r\nr2 = np.mean(res[0] == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\n0.0 0.992\r\n\r\n2) learning_rate affects probability scores\r\n3) n_estimators affects probability scores", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/200", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/200/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/200/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/200", "id": 460103774, "node_id": "MDU6SXNzdWU0NjAxMDM3NzQ=", "number": 200, "title": "CalibratedClassifierCV converter probability scores have some mismatches with Scikit's predict_proba() results when method is set to isotonic", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T21:26:24Z", "updated_at": "2019-09-12T19:33:50Z", "closed_at": "2019-09-12T19:33:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "data = load_iris()\r\nX = data.data\r\ny = data.target\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = CalibratedClassifierCV(MLPClassifier(), method='isotonic', cv='warn').fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nr1 = np.mean(np.isclose(model.predict_proba(X_test),\r\n                        list(map(lambda x: list(map(lambda y: x[1][0][y], x[1][0])), res)), atol=1e-4))\r\nr2 = np.mean(list(map(lambda x: x[0][0], res)) == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\nX, y = make_classification(n_features=100, n_samples=10000, n_classes=2)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = CalibratedClassifierCV(MLPClassifier(), method='isotonic', cv='warn').fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nr1 = np.mean(np.isclose(model.predict_proba(X_test),\r\n                        list(map(lambda x: list(map(lambda y: x[1][0][y], x[1][0])), res)), atol=1e-4))\r\nr2 = np.mean(list(map(lambda x: x[0][0], res)) == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\ndata = load_digits()\r\nX = data.data\r\ny = data.target.astype(np.str)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = CalibratedClassifierCV(MLPClassifier(), method='isotonic', cv='warn').fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', Int64TensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.int64)}))\r\n    \r\nr1 = np.mean(np.isclose(model.predict_proba(X_test),\r\n                        list(map(lambda x: list(map(lambda y: x[1][0][y], x[1][0])), res)), atol=1e-4))\r\nr2 = np.mean(list(map(lambda x: x[0][0], res)) == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\ndata = load_digits()\r\nX = data.data\r\ny = data.target.astype(np.str)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = CalibratedClassifierCV(MLPClassifier(), method='isotonic', cv='warn').fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', Int64TensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.int64)}))\r\n    \r\nr1 = np.mean(np.isclose(model.predict_proba(X_test),\r\n                        list(map(lambda x: list(map(lambda y: x[1][0][y], x[1][0])), res)), atol=1e-4))\r\nr2 = np.mean(list(map(lambda x: x[0][0], res)) == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\n\r\n0.9466666666666667 1.0\r\n0.9283 1.0\r\n0.9400444938820912 0.996662958843159\r\n0.949833147942158 0.9944382647385984", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/199", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/199/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/199/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/199", "id": 460096860, "node_id": "MDU6SXNzdWU0NjAwOTY4NjA=", "number": 199, "title": "KMeans and MiniBathKMeans converters don't support int features", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T21:08:28Z", "updated_at": "2019-08-19T12:33:52Z", "closed_at": "2019-08-19T12:33:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/198", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/198/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/198/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/198", "id": 460082886, "node_id": "MDU6SXNzdWU0NjAwODI4ODY=", "number": 198, "title": "DictVectoriser converter with string/int values throw error", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-24T20:34:08Z", "updated_at": "2020-06-24T08:25:43Z", "closed_at": "2020-06-24T08:25:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "key_value_map = [{1: '1.0', 2: '2.0'}, {1: '11.1', 3: '13.1'}]\r\nmodel = DictVectorizer(sparse=False).fit(key_value_map)\r\nprint(model.transform(key_value_map))\r\n\r\nmodel_onnx = convert_sklearn(model, 'dv', [(\"input\", DictionaryType(Int64TensorType([1]), StringTensorType([1])\r\n                                                                                           ))])\r\nonnxmltools.utils.save_model(model_onnx, 'dv.onnx')\r\nsess = InferenceSession('dv.onnx')\r\nres = sess.run(None, input_feed={'input': key_value_map[0]})\r\nres\r\n\r\n[[1. 0. 1. 0.]\r\n [0. 1. 0. 1.]]\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-9-8428ad49d288> in <module>\r\n      6                                                                                            ))])\r\n      7 onnxmltools.utils.save_model(model_onnx, 'dv.onnx')\r\n----> 8 sess = InferenceSession('dv.onnx')\r\n      9 res = sess.run(None, input_feed={'input': key_value_map[0]})\r\n     10 res\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options)\r\n     27 \r\n     28         if isinstance(path_or_bytes, str):\r\n---> 29             self._sess.load_model(path_or_bytes)\r\n     30         elif isinstance(path_or_bytes, bytes):\r\n     31             self._sess.read_bytes(path_or_bytes)\r\n\r\nRuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from dv.onnx failed:Type Error: Type (tensor(float)) of output arg (variable) of node (DictVectorizer) does not match expected type (tensor(string)).\r\n\r\nkey_value_map = [{1: 1, 2: 2}, {1: 4, 3: 123}]\r\nmodel = DictVectorizer(sparse=False).fit(key_value_map)\r\nprint(model.transform(key_value_map))\r\n\r\nmodel_onnx = convert_sklearn(model, 'dv', [(\"input\", DictionaryType(Int64TensorType([1]), Int64TensorType([1])\r\n                                                                                           ))])\r\nonnxmltools.utils.save_model(model_onnx, 'dv.onnx')\r\nsess = InferenceSession('dv.onnx')\r\nres = sess.run(None, input_feed={'input': key_value_map[0]})\r\nres\r\n\r\n[[  1.   2.   0.]\r\n [  4.   0. 123.]]\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-10-3aa8f86fb3cc> in <module>\r\n      6                                                                                            ))])\r\n      7 onnxmltools.utils.save_model(model_onnx, 'dv.onnx')\r\n----> 8 sess = InferenceSession('dv.onnx')\r\n      9 res = sess.run(None, input_feed={'input': key_value_map[0]})\r\n     10 res\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options)\r\n     27 \r\n     28         if isinstance(path_or_bytes, str):\r\n---> 29             self._sess.load_model(path_or_bytes)\r\n     30         elif isinstance(path_or_bytes, bytes):\r\n     31             self._sess.read_bytes(path_or_bytes)\r\n\r\nRuntimeError: [ONNXRuntimeError] : 10 : INVALID_GRAPH : Load model from dv.onnx failed:Type Error: Type 'map(int64,tensor(int64))' of input parameter (input) of operator (DictVectorizer) in node (DictVectorizer) is invalid.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/197", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/197/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/197/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/197", "id": 460073035, "node_id": "MDU6SXNzdWU0NjAwNzMwMzU=", "number": 197, "title": "TfidfVectoriser converter issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T20:10:22Z", "updated_at": "2020-05-25T10:52:02Z", "closed_at": "2020-05-25T10:52:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) NaN values\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer().fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.971024886272411 / 0.05691196146641691 (Number of NaN outputs vary a lot in different runs)\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.0390878 , 0.        , ..., 0.        , 0.02345268,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.0268699 , 0.        , ..., 0.        , 0.        ,\r\n        0.        ]])\r\n\r\nres[0]\r\n\r\narray([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       ...,\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [nan, nan, nan, ..., nan, nan, nan]], dtype=float32)\r\n\r\n2) lowercase=False\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer(lowercase=False).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.19266698024459078\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.04067757, 0.        , ..., 0.        , 0.        ,\r\n        0.02440654],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03138701, 0.        , ..., 0.        , 0.        ,\r\n        0.        ]])\r\n\r\n\r\nres[0]\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03395877, 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ]], dtype=float32)\r\n\r\n\r\n3) analyzer='char'\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer(analyzer='char').fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.2504225352112676\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.04540119, 0.62653648, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.07204533, 0.57293189, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.01663145, 0.61892768, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.03520802, 0.46474592, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03261331, 0.34787535, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.02589324, 0.61991454, ..., 0.        , 0.00645606,\r\n        0.        ]])\r\n\r\nres[0]\r\n\r\narray([[0.16190134, 0.10120933, 0.74220175, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        ,        nan, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [0.        ,        nan,        nan, ..., 0.        , 0.        ,\r\n        0.        ]], dtype=float32)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/196", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/196/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/196/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/196", "id": 460072953, "node_id": "MDU6SXNzdWU0NjAwNzI5NTM=", "number": 196, "title": "TfidfVectoriser converter issues", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T20:10:07Z", "updated_at": "2019-06-24T22:05:07Z", "closed_at": "2019-06-24T22:05:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) NaN values\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer().fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.971024886272411 / 0.05691196146641691 (Number of NaN outputs vary a lot in different runs)\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.0390878 , 0.        , ..., 0.        , 0.02345268,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.0268699 , 0.        , ..., 0.        , 0.        ,\r\n        0.        ]])\r\n\r\nres[0]\r\n\r\narray([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       ...,\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [nan, nan, nan, ..., nan, nan, nan],\r\n       [nan, nan, nan, ..., nan, nan, nan]], dtype=float32)\r\n\r\n2) lowercase=False\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer(lowercase=False).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.19266698024459078\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.04067757, 0.        , ..., 0.        , 0.        ,\r\n        0.02440654],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03138701, 0.        , ..., 0.        , 0.        ,\r\n        0.        ]])\r\n\r\n\r\nres[0]\r\n\r\narray([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03395877, 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ]], dtype=float32)\r\n\r\n\r\n3) analyzer='char'\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = TfidfVectorizer(analyzer='char').fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.2504225352112676\r\n\r\nmodel.transform(X_test).toarray()\r\n\r\narray([[0.        , 0.04540119, 0.62653648, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.07204533, 0.57293189, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.01663145, 0.61892768, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.03520802, 0.46474592, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.03261331, 0.34787535, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.02589324, 0.61991454, ..., 0.        , 0.00645606,\r\n        0.        ]])\r\n\r\nres[0]\r\n\r\narray([[0.16190134, 0.10120933, 0.74220175, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [0.        , 0.        ,        nan, ..., 0.        , 0.        ,\r\n        0.        ],\r\n       ...,\r\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\r\n        0.        ],\r\n       [       nan,        nan,        nan, ...,        nan,        nan,\r\n               nan],\r\n       [0.        ,        nan,        nan, ..., 0.        , 0.        ,\r\n        0.        ]], dtype=float32)\r\n\r\n4)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/195", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/195/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/195/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/195", "id": 460059489, "node_id": "MDU6SXNzdWU0NjAwNTk0ODk=", "number": 195, "title": "CountVectoriser converter issue", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T19:35:17Z", "updated_at": "2019-09-10T23:03:13Z", "closed_at": "2019-09-10T23:03:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) lowercase=False throws onnxruntime error.\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = CountVectorizer(input='content', lowercase=False).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\nRuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from cv.onnx failed:Node:TfIdfVectorizer Output:variable [ShapeInferenceError] Can't merge shape info. Both source and target dimension have values but they differ. Source=50 Target=1 Dimension=0\r\n\r\n2) binary=True is not handled.\r\n\r\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\r\nfrom sklearn.datasets import fetch_20newsgroups\r\n\r\ndata = fetch_20newsgroups()\r\nX, y = np.array(data.data)[:100], np.array(data.target)[:100]\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = CountVectorizer(input='content', max_df=.5, min_df=0.3, max_features=5, binary=True).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'cv', [('input', StringTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'cv.onnx')\r\nsess = InferenceSession('cv.onnx')\r\nres = sess.run(None, input_feed={'input': X_test})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test).toarray(), res[0], atol=1e-5)))\r\n\r\n0.76", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/194", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/194/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/194/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/194", "id": 459932742, "node_id": "MDU6SXNzdWU0NTk5MzI3NDI=", "number": 194, "title": "ColumnTransformer converter doesn't handle transformer_weights and remainder='passthrough'", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-24T14:43:00Z", "updated_at": "2019-09-20T13:22:15Z", "closed_at": "2019-09-20T13:22:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Mismatch with non-default transformer_weights\r\n\r\nX, y = make_classification(n_features=100, n_samples=1000, random_state=42, n_classes=4, n_informative=8)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = ColumnTransformer([('pca', PCA(), slice(0, 10)), ('svd', TruncatedSVD(), slice(10, 100))],\r\n                     transformer_weights={'pca': 10, 'svd': 3}).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'pca', [('input', FloatTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'pca3.onnx')\r\nsess = InferenceSession('pca3.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test), res[0], atol=1e-5)))\r\n\r\n0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/193", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/193/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/193/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/193", "id": 459892677, "node_id": "MDU6SXNzdWU0NTk4OTI2Nzc=", "number": 193, "title": "FeatureUnion converter doesn't handle transformer_weights.", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T13:29:29Z", "updated_at": "2019-07-17T15:53:52Z", "closed_at": "2019-07-17T15:53:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Mismatch with non-default transformer_weights\r\n\r\nX, y = make_classification(n_features=100, n_samples=1000, random_state=42, n_classes=4, n_informative=8)\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\n\r\nmodel = FeatureUnion([('pca', PCA()), ('svd', TruncatedSVD())],\r\n                     transformer_weights={'pca': 100, 'svd': 3}).fit(X_train)\r\nonnx_model = convert_sklearn(model, 'pca', [('input', FloatTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'pca3.onnx')\r\nsess = InferenceSession('pca3.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.transform(X_test), res[0], atol=1e-5)))\r\n\r\n0.0196078431372549\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/192", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/192/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/192/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/192", "id": 459880398, "node_id": "MDU6SXNzdWU0NTk4ODAzOTg=", "number": 192, "title": "FunctionTransformer converter doesn't work with int features", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T13:04:46Z", "updated_at": "2019-06-26T14:06:05Z", "closed_at": "2019-06-26T14:06:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "RuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from pca3.onnx failed:Type Error: Type (tensor(float)) of output arg (variable) of node (Identity) does not match expected type (tensor(int64)).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/191", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/191/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/191/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/191", "id": 459632955, "node_id": "MDU6SXNzdWU0NTk2MzI5NTU=", "number": 191, "title": "SimpleImputer/Imputer converter's output mismatches with Scikit's output", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-24T00:01:04Z", "updated_at": "2019-08-05T12:40:50Z", "closed_at": "2019-08-05T12:40:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/190", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/190/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/190/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/190", "id": 459624408, "node_id": "MDU6SXNzdWU0NTk2MjQ0MDg=", "number": 190, "title": "LabelBinariser output format for binary data different from Scikit's output", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-23T22:18:34Z", "updated_at": "2019-08-06T13:25:56Z", "closed_at": "2019-08-06T13:25:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Scikit output:\r\narray([[0],\r\n       [0],\r\n       [1]])\r\n\r\nonnx model's output:\r\narray([[1, 0],\r\n       [1, 0],\r\n       [0, 1]], dtype=int64)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/189", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/189/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/189/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/189", "id": 459623522, "node_id": "MDU6SXNzdWU0NTk2MjM1MjI=", "number": 189, "title": "Label Encoder doesn\u2019t work with int and float features", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-23T22:07:54Z", "updated_at": "2019-08-19T16:37:47Z", "closed_at": "2019-08-19T16:37:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/186", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/186/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/186/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/186", "id": 456566555, "node_id": "MDU6SXNzdWU0NTY1NjY1NTU=", "number": 186, "title": "SelectFromModel converted model with threshold such that no features selected give error", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011444178, "node_id": "MDU6TGFiZWwyMDExNDQ0MTc4", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/0.23", "name": "0.23", "color": "fcf2ba", "default": false, "description": ""}, {"id": 1165979599, "node_id": "MDU6TGFiZWwxMTY1OTc5NTk5", "url": "https://api.github.com/repos/onnx/sklearn-onnx/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-15T19:01:52Z", "updated_at": "2020-04-27T15:07:40Z", "closed_at": "2020-04-27T15:07:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "SelectFromModel model in Scikit with threshold such that no features are selected returns an array of shape (M, 0), where M is the number of test instances, onnx converter however can't handle it.\r\n\r\nRuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from pca1.onnx failed:[ShapeInferenceError] Shape input must be a one-dimensional tensor. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/184", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/184/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/184/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/184", "id": 456004197, "node_id": "MDU6SXNzdWU0NTYwMDQxOTc=", "number": 184, "title": "GradientBoostingClassifier converter predicted probabilities don't match with Scikit predicitons. ", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T00:08:30Z", "updated_at": "2019-07-30T20:29:45Z", "closed_at": "2019-07-30T20:29:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "data = load_iris()\r\nX = data.data\r\ny = data.target\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = GradientBoostingClassifier(loss='deviance', learning_rate=0.21, n_estimators=10, subsample=1.0,\r\n                                   criterion='friedman_mse', min_samples_split=2, min_samples_leaf=1,\r\n                                   min_weight_fraction_leaf=0.0, max_depth=3, min_impurity_decrease=0.0,\r\n                                   min_impurity_split=None, init=None, random_state=None, max_features=None,\r\n                                   verbose=0, max_leaf_nodes=None, warm_start=False, presort='auto',\r\n                                   validation_fraction=0.1, n_iter_no_change=None, tol=0.0001).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'lr1.onnx')\r\nsess = InferenceSession('lr1.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nr1 = np.mean(np.isclose(model.predict_proba(X_test)[:10], list(map(lambda x:\r\n                                                         list(map(lambda y: x[y], x)), res[1][:10])), atol=1e-4))\r\nr2 = np.mean(res[0] == model.predict(X_test))\r\nprint(f'{r1} {r2}')\r\n\r\nResult: 0.03333333333333333 1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/183", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/183/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/183/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/183", "id": 455998037, "node_id": "MDU6SXNzdWU0NTU5OTgwMzc=", "number": 183, "title": "BernoulliNB gives NaN probability scores with alpha=0", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T23:39:11Z", "updated_at": "2019-08-28T18:29:54Z", "closed_at": "2019-08-28T18:29:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/182", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/182/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/182/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/182", "id": 455997565, "node_id": "MDU6SXNzdWU0NTU5OTc1NjU=", "number": 182, "title": "SGDClassifier, MultinomialNB and BernoulliNB convertes fail with integer features", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T23:36:57Z", "updated_at": "2019-06-26T14:16:47Z", "closed_at": "2019-06-26T14:16:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "RuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from lr3.onnx failed:Type Error: Type parameter (T) bound to different types (tensor(int64) and tensor(float) in node (MatMul).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/176", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/176/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/176/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/176", "id": 454356901, "node_id": "MDU6SXNzdWU0NTQzNTY5MDE=", "number": 176, "title": "SVC converter's probability score format", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T20:27:22Z", "updated_at": "2019-07-15T12:40:55Z", "closed_at": "2019-07-15T12:40:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "SVC converter gives probability scores as a list of lists instead of a list of dictionaries like other converters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/174", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/174/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/174/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/174", "id": 454091082, "node_id": "MDU6SXNzdWU0NTQwOTEwODI=", "number": 174, "title": "GradientBoosting converter loops around passed n_estimators instead of fit n_estimators_", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T09:58:49Z", "updated_at": "2019-07-15T12:08:29Z", "closed_at": "2019-07-15T12:08:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-67-43c29c0779b6> in <module>\r\n     11                                   validation_fraction=0.2, n_iter_no_change=3, tol=0.0001).fit(X_train, y_train)\r\n     12 \r\n---> 13 onnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType(X_test.shape))])\r\n     14 save_model(onnx_model, 'lr0.onnx')\r\n     15 sess = InferenceSession('lr0.onnx')\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/skl2onnx-1.4.9-py3.6.egg/skl2onnx/convert.py in convert_sklearn(model, name, initial_types, doc_string, target_opset, custom_conversion_functions, custom_shape_calculators, custom_parsers, options, intermediate)\r\n    128     # Convert our Topology object into ONNX. The outcome is an ONNX model.\r\n    129     onnx_model = convert_topology(topology, name, doc_string, target_opset,\r\n--> 130                                   options=options)\r\n    131 \r\n    132     return (onnx_model, topology) if intermediate else onnx_model\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/skl2onnx-1.4.9-py3.6.egg/skl2onnx/common/_topology.py in convert_topology(topology, model_name, doc_string, target_opset, channel_first_inputs, options)\r\n   1017                     \"'{}'.\".format(operator.type,\r\n   1018                                    type(getattr(operator, 'raw_model', None))))\r\n-> 1019         conv(scope, operator, container)\r\n   1020 \r\n   1021     # Create a graph from its main components\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/skl2onnx-1.4.9-py3.6.egg/skl2onnx/operator_converters/gradient_boosting.py in convert_sklearn_gradient_boosting_regressor(scope, operator, container)\r\n    102     tree_weight = op.learning_rate\r\n    103     for i in range(op.n_estimators):\r\n--> 104         tree = op.estimators_[i][0].tree_\r\n    105         tree_id = i\r\n    106         add_tree_to_attribute_pairs(attrs, False, tree, tree_id, tree_weight,\r\n\r\nIndexError: index 4 is out of bounds for axis 0 with size 4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/171", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/171/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/171/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/171", "id": 453189707, "node_id": "MDU6SXNzdWU0NTMxODk3MDc=", "number": 171, "title": "AdaBoost Classifier/Regressor converter predictions don't match with Scikit predictions for non-default learning rate", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T19:01:02Z", "updated_at": "2019-07-18T21:21:41Z", "closed_at": "2019-07-18T21:21:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "data = load_diabetes()\r\nX = data.data\r\ny = data.target\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = AdaBoostRegressor(base_estimator=None, n_estimators=5, learning_rate=1.2,\r\n                          loss='exponential', random_state=42).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0][0][0], res)), rtol=1e-2)))\r\n\r\nX, y = make_regression(n_features=100, n_samples=10000)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = AdaBoostRegressor(base_estimator=None, n_estimators=42, learning_rate=1.1,\r\n                          loss='exponential', random_state=42).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0][0][0], res)))))\r\n\r\nX, y = make_regression(n_features=10, n_samples=1000, random_state=42)\r\nX = X.astype(np.int64)\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = AdaBoostRegressor(base_estimator=None, n_estimators=10, learning_rate=0.9,\r\n                          loss='exponential', random_state=42).fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType([1, X_test.shape[1]]))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = []\r\nfor x in X_test:\r\n    res.append(sess.run(None, input_feed={'input': x.astype(np.float32)}))\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0][0][0], res)))))\r\n\r\noutput:\r\n0.0\r\n0.0\r\n0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/166", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/166/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/166/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/166", "id": 452701105, "node_id": "MDU6SXNzdWU0NTI3MDExMDU=", "number": 166, "title": "RandomForestRegressor converter prediction mismatch with Scikit output", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-05T20:28:48Z", "updated_at": "2019-08-29T12:15:13Z", "closed_at": "2019-08-29T12:15:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "data = load_diabetes()\r\nX = data.data\r\ny = data.target\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)\r\nmodel = RandomForestRegressor().fit(X_train, y_train)\r\n\r\nonnx_model = convert_sklearn(model, 'lr', [('input', FloatTensorType(X_test.shape))])\r\nsave_model(onnx_model, 'lr.onnx')\r\nsess = InferenceSession('lr.onnx')\r\nres = sess.run(None, input_feed={'input': X_test.astype(np.float32)})\r\n\r\nprint(np.mean(np.isclose(model.predict(X_test), list(map(lambda x: x[0], res[0])))))\r\n\r\n>> 0.9411764705882353\r\n\r\nWith n_estimators=3 however, prediction matches go upto 0.99.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/165", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/165/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/165/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/165", "id": 452250738, "node_id": "MDU6SXNzdWU0NTIyNTA3Mzg=", "number": 165, "title": "Issues in OneHotEncoder converter", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T23:25:43Z", "updated_at": "2019-09-10T05:28:40Z", "closed_at": "2019-09-10T05:28:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "1) Doesn't work when categorical_features is set to a subset of feature indices\r\n \r\nenc = OneHotEncoder(categorical_features=[1])\r\nX = np.array([[2, 1], [3, 3], [4, 2]])\r\nenc.fit(X)\r\n\r\nConverting this model gives error because of a typo in call to get_column_indices() [multiple spelled as mutiple]. After fixing this typo:\r\nmodel_onnx = convert_sklearn(enc, 'ohe', [('input', Int64TensorType([1, 2]))])\r\nsave_model(model_onnx, 'ohe.onnx')\r\nsess = InferenceSession('ohe.onnx')\r\nres = sess.run(None, input_feed={'input': np.array([[1, 3]], dtype=np.int64)}) \r\n\r\nModel loading gives the following error:\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-11-0bad425bfdff> in <module>\r\n      1 model_onnx = convert_sklearn(enc, 'ohe', [('input', Int64TensorType([1, 2]))])\r\n      2 save_model(model_onnx, 'ohe.onnx')\r\n----> 3 sess = InferenceSession('ohe.onnx')\r\n      4 res = sess.run(None, input_feed={'input': np.array([[1, 3]], dtype=np.int64)})\r\n      5 res\r\n\r\n~/Documents/MachineLearning/onnx_projects/onnx_env/lib/python3.6/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options)\r\n     27 \r\n     28         if isinstance(path_or_bytes, str):\r\n---> 29             self._sess.load_model(path_or_bytes)\r\n     30         elif isinstance(path_or_bytes, bytes):\r\n     31             self._sess.read_bytes(path_or_bytes)\r\n\r\nRuntimeError: [ONNXRuntimeError] : 1 : GENERAL ERROR : Load model from ohe.onnx failed:Type Error: Type parameter (T1) bound to different types (tensor(float) and tensor(int64) in node (FeatureVectorizer).\r\n\r\nAlso, using float instead of int(or string) features results in output mismatch.\r\n\r\n2) Doesn't work when categorical_features is set with boolean masks.\r\n\r\n3) Doesn't work for string features.\r\n\r\n4) drop='first' or list doesn't work.\r\n\r\n5) dtype=np.str check is not there with int features.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/163", "repository_url": "https://api.github.com/repos/onnx/sklearn-onnx", "labels_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/163/comments", "events_url": "https://api.github.com/repos/onnx/sklearn-onnx/issues/163/events", "html_url": "https://github.com/onnx/sklearn-onnx/issues/163", "id": 451743179, "node_id": "MDU6SXNzdWU0NTE3NDMxNzk=", "number": 163, "title": "GradientBoostingRegressor converter fails with init set to an estimator object.", "user": {"login": "prabhat00155", "id": 7043157, "node_id": "MDQ6VXNlcjcwNDMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7043157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhat00155", "html_url": "https://github.com/prabhat00155", "followers_url": "https://api.github.com/users/prabhat00155/followers", "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}", "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions", "organizations_url": "https://api.github.com/users/prabhat00155/orgs", "repos_url": "https://api.github.com/users/prabhat00155/repos", "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhat00155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T00:21:37Z", "updated_at": "2019-07-15T21:59:54Z", "closed_at": "2019-07-15T21:59:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "model = GradientBoostingRegressor(random_state=42, init=Lasso(), loss='lad').fit(X_train, y_train)\r\n\r\nAttributeError: 'Lasso' object has no attribute 'quantile'\r\n\r\n\r\nmodel = GradientBoostingRegressor(random_state=42, init=Lasso(), loss='ls').fit(X_train, y_train)\r\n\r\nAttributeError: 'Lasso' object has no attribute 'mean'", "performed_via_github_app": null, "score": 1.0}]}