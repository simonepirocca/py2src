{"total_count": 161, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/462", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/462/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/462/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/462", "id": 683449387, "node_id": "MDU6SXNzdWU2ODM0NDkzODc=", "number": 462, "title": "Release for django 3.1 support?", "user": {"login": "AdamDonna", "id": 13944590, "node_id": "MDQ6VXNlcjEzOTQ0NTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/13944590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamDonna", "html_url": "https://github.com/AdamDonna", "followers_url": "https://api.github.com/users/AdamDonna/followers", "following_url": "https://api.github.com/users/AdamDonna/following{/other_user}", "gists_url": "https://api.github.com/users/AdamDonna/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamDonna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamDonna/subscriptions", "organizations_url": "https://api.github.com/users/AdamDonna/orgs", "repos_url": "https://api.github.com/users/AdamDonna/repos", "events_url": "https://api.github.com/users/AdamDonna/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamDonna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-21T10:04:31Z", "updated_at": "2020-08-21T10:19:31Z", "closed_at": "2020-08-21T10:19:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like there's a lot of great features and improvements merged in master that would be excellent for a release\r\n\r\n- [x] [Parent admin performance increases](https://github.com/django-polymorphic/django-polymorphic/commit/8b35063f58ceade5d5af42f955ae2c0fdb7128fc)\r\n- [x] [Fix field does not exist fix](https://github.com/django-polymorphic/django-polymorphic/commit/b6921baedee140ba3a5622080e6b8c5860f527f1)\r\n- [x] [Fix for django 3.2](https://github.com/django-polymorphic/django-polymorphic/commit/c005410da7a138a756d5a89fc9c5083f38b34b3e)\r\n\r\nAnd probably more I haven't identified\r\n\r\nDo we have a timeline, or target date for a release? \r\nAnd if there's anything preventing a release what do we need to do to get a release out?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/458", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/458/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/458/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/458", "id": 680955258, "node_id": "MDU6SXNzdWU2ODA5NTUyNTg=", "number": 458, "title": "Django 3.1 support", "user": {"login": "ivlevdenis", "id": 7171587, "node_id": "MDQ6VXNlcjcxNzE1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7171587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivlevdenis", "html_url": "https://github.com/ivlevdenis", "followers_url": "https://api.github.com/users/ivlevdenis/followers", "following_url": "https://api.github.com/users/ivlevdenis/following{/other_user}", "gists_url": "https://api.github.com/users/ivlevdenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivlevdenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivlevdenis/subscriptions", "organizations_url": "https://api.github.com/users/ivlevdenis/orgs", "repos_url": "https://api.github.com/users/ivlevdenis/repos", "events_url": "https://api.github.com/users/ivlevdenis/events{/privacy}", "received_events_url": "https://api.github.com/users/ivlevdenis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-18T11:12:37Z", "updated_at": "2020-08-18T12:04:03Z", "closed_at": "2020-08-18T12:04:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have exception after update Django version to 3.1.\r\n`ImportError: cannot import name 'FieldDoesNotExist' from 'django.db.models'`\r\nhttps://docs.djangoproject.com/en/3.1/releases/3.1/#id1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/455", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/455/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/455/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/455", "id": 679252776, "node_id": "MDU6SXNzdWU2NzkyNTI3NzY=", "number": 455, "title": "Failures on 3.2", "user": {"login": "yakky", "id": 714711, "node_id": "MDQ6VXNlcjcxNDcxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/714711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yakky", "html_url": "https://github.com/yakky", "followers_url": "https://api.github.com/users/yakky/followers", "following_url": "https://api.github.com/users/yakky/following{/other_user}", "gists_url": "https://api.github.com/users/yakky/gists{/gist_id}", "starred_url": "https://api.github.com/users/yakky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yakky/subscriptions", "organizations_url": "https://api.github.com/users/yakky/orgs", "repos_url": "https://api.github.com/users/yakky/repos", "events_url": "https://api.github.com/users/yakky/events{/privacy}", "received_events_url": "https://api.github.com/users/yakky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T16:00:39Z", "updated_at": "2020-08-21T09:34:29Z", "closed_at": "2020-08-21T09:34:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently this change https://github.com/django/django/commit/9c9a3fe1180fc92fbd4c3302dbe0b3e083bf0381 in django master broke custom version of PolymorphicQuerySet._filter_or_exclude\r\n\r\nUpstream change is weird, and we need to investigate the rationale before adapting our code", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/449", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/449/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/449/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/449", "id": 667230980, "node_id": "MDU6SXNzdWU2NjcyMzA5ODA=", "number": 449, "title": "No longer actively maintained? ", "user": {"login": "dmastylo", "id": 2275125, "node_id": "MDQ6VXNlcjIyNzUxMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2275125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmastylo", "html_url": "https://github.com/dmastylo", "followers_url": "https://api.github.com/users/dmastylo/followers", "following_url": "https://api.github.com/users/dmastylo/following{/other_user}", "gists_url": "https://api.github.com/users/dmastylo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmastylo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmastylo/subscriptions", "organizations_url": "https://api.github.com/users/dmastylo/orgs", "repos_url": "https://api.github.com/users/dmastylo/repos", "events_url": "https://api.github.com/users/dmastylo/events{/privacy}", "received_events_url": "https://api.github.com/users/dmastylo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2020-07-28T17:03:36Z", "updated_at": "2020-08-21T13:14:01Z", "closed_at": "2020-08-21T10:20:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThis library has been a great help on projects I've worked on, but it looks like the last true merged PR was a very minor admin fix in July, 2019, and issues and open PRs are piling up. \r\n\r\n@vdboor are you planning on returning to active maintenance or would you be fine with passing off active maintenance of this library to someone else? Are there any actively maintained forks that could be leveraged?\r\n\r\nThis library is fantastic, but could use some loving.\r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/444", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/444/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/444/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/444", "id": 634280895, "node_id": "MDU6SXNzdWU2MzQyODA4OTU=", "number": 444, "title": "Python 3.8 support", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-08T07:19:57Z", "updated_at": "2020-08-14T09:20:36Z", "closed_at": "2020-08-14T09:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.8 was [released](https://www.python.org/downloads/release/python-380/) quite long ago (October 14, 2019 - **8 months ago** at the moment of writing). The support of Python 3.8 has long been needed. Is django-polymorphic going to support it?\r\n\r\nIf yes, then at least the following must be done:\r\n1. Update [the test configuration](https://github.com/django-polymorphic/django-polymorphic/blob/37403c7421f08c96634f46d970acde969a60f454/.travis.yml#L11-L39) to run tests with Python 3.8. See PR #425.\r\n2. Update [the metadata](https://github.com/django-polymorphic/django-polymorphic/blob/37403c7421f08c96634f46d970acde969a60f454/setup.cfg#L24-L28) of the [`django-polymorphic`](https://pypi.org/project/django-polymorphic/) project on PyPi. Now it states the following:\r\n\r\n\t> Programming Language\r\n\t> * Python :: 2.7\r\n\t> * Python :: 3\r\n\t> * Python :: 3.5\r\n\t> * Python :: 3.6\r\n\t> * Python :: 3.7\r\n\r\n\tThe following is expected:\r\n\t\r\n\t> Programming Language\r\n\t> * Python :: 2\r\n\t> * Python :: 2.7\r\n\t> * Python :: 3\r\n\t> * Python :: 3.5\r\n\t> * Python :: 3.6\r\n\t> * Python :: 3.7\r\n\t> * Python :: 3.8\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/443", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/443/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/443/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/443", "id": 634187676, "node_id": "MDU6SXNzdWU2MzQxODc2NzY=", "number": 443, "title": "Django 3.0 support", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-08T05:47:58Z", "updated_at": "2020-08-18T12:07:39Z", "closed_at": "2020-08-18T12:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 3.0 was [released](https://docs.djangoproject.com/en/3.0/releases/3.0/) quite long ago (December 2, 2019 - **half year ago** at the moment of writing). The support of Django 3.0 has long been needed. Is django-polymorphic going to support it?\r\n\r\nIf yes, then at least the following must be done:\r\n1. Update [the test configuration](https://github.com/django-polymorphic/django-polymorphic/blob/37403c7421f08c96634f46d970acde969a60f454/.travis.yml#L11-L39) to run tests with Django 3.0. See PR #425.\r\n2. Fix #424. (This bug is about `RemovedInDjango40Warning: django.utils.translation.ugettext_lazy() is deprecated in favor of django.utils.translation.gettext_lazy()`.)\r\n3. Fix #432. (This bug is about `ImportError: cannot import name 'FieldDoesNotExist' from 'django.db.models'`.)\r\n4. ... (Are there any other know bugs related to Django 3.0? List them here, please.)\r\n5. Update [README.rst](https://github.com/django-polymorphic/django-polymorphic/blob/37403c7421f08c96634f46d970acde969a60f454/README.rst#features). Now it states that:\r\n\r\n\t> The current release of django-polymorphic supports Django 1.11, 2.0, 2.1, 2.2\r\n\r\n6. Update [the documentation](https://django-polymorphic.readthedocs.io/en/stable/quickstart.html#quickstart). Now it states that:\r\n\r\n\t> The current release of django-polymorphic supports Django 1.11, 2.0 \r\n\r\n7. Update [the metadata](https://github.com/django-polymorphic/django-polymorphic/blob/37403c7421f08c96634f46d970acde969a60f454/setup.cfg#L16-L20) of the [`django-polymorphic`](https://pypi.org/project/django-polymorphic/) project on PyPi. Now it states the following:\r\n\r\n\t> Framework\r\n\t> * Django\r\n\t> * Django :: 1.11\r\n\t> * Django :: 2.0\r\n\t> * Django :: 2.1\r\n\t> * Django :: 2.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/439", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/439/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/439/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/439", "id": 623625475, "node_id": "MDU6SXNzdWU2MjM2MjU0NzU=", "number": 439, "title": "`tox -e docs` fails", "user": {"login": "berhoel", "id": 5843469, "node_id": "MDQ6VXNlcjU4NDM0Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5843469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berhoel", "html_url": "https://github.com/berhoel", "followers_url": "https://api.github.com/users/berhoel/followers", "following_url": "https://api.github.com/users/berhoel/following{/other_user}", "gists_url": "https://api.github.com/users/berhoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/berhoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berhoel/subscriptions", "organizations_url": "https://api.github.com/users/berhoel/orgs", "repos_url": "https://api.github.com/users/berhoel/repos", "events_url": "https://api.github.com/users/berhoel/events{/privacy}", "received_events_url": "https://api.github.com/users/berhoel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-23T10:05:30Z", "updated_at": "2020-08-14T09:11:54Z", "closed_at": "2020-08-14T09:11:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`tox -e docs` fails with:\r\n\r\n```\r\nWarning, treated as error:\r\nhtml_static_path entry '_static' does not exist\r\n```\r\n\r\nA `mkdir docs/_static` fixes the command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/434", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/434/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/434/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/434", "id": 618118863, "node_id": "MDU6SXNzdWU2MTgxMTg4NjM=", "number": 434, "title": "PolymorphicModel's save() method does return anything", "user": {"login": "kamilturek", "id": 22010517, "node_id": "MDQ6VXNlcjIyMDEwNTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/22010517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamilturek", "html_url": "https://github.com/kamilturek", "followers_url": "https://api.github.com/users/kamilturek/followers", "following_url": "https://api.github.com/users/kamilturek/following{/other_user}", "gists_url": "https://api.github.com/users/kamilturek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamilturek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamilturek/subscriptions", "organizations_url": "https://api.github.com/users/kamilturek/orgs", "repos_url": "https://api.github.com/users/kamilturek/repos", "events_url": "https://api.github.com/users/kamilturek/events{/privacy}", "received_events_url": "https://api.github.com/users/kamilturek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-14T10:35:52Z", "updated_at": "2020-07-20T20:57:25Z", "closed_at": "2020-07-20T20:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The implementation of PolymorphicModel's save() method has return statement despite save() methods of its base classes never return any value. It can be misleading when overriding.\r\n\r\n```python\r\nclass PolymorphicModel(with_metaclass(PolymorphicModelBase, models.Model)):\r\n    ...\r\n\r\n    def save(self, *args, **kwargs):\r\n        \"\"\"Calls :meth:`pre_save_polymorphic` and saves the model.\"\"\"\r\n        using = kwargs.get(\"using\", self._state.db or DEFAULT_DB_ALIAS)\r\n        self.pre_save_polymorphic(using=using)\r\n        return super(PolymorphicModel, self).save(*args, **kwargs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/433", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/433/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/433/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/433", "id": 616274373, "node_id": "MDU6SXNzdWU2MTYyNzQzNzM=", "number": 433, "title": "TypeError: issubclass() arg 1 must be a class", "user": {"login": "vladdoster", "id": 10052309, "node_id": "MDQ6VXNlcjEwMDUyMzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/10052309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladdoster", "html_url": "https://github.com/vladdoster", "followers_url": "https://api.github.com/users/vladdoster/followers", "following_url": "https://api.github.com/users/vladdoster/following{/other_user}", "gists_url": "https://api.github.com/users/vladdoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladdoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladdoster/subscriptions", "organizations_url": "https://api.github.com/users/vladdoster/orgs", "repos_url": "https://api.github.com/users/vladdoster/repos", "events_url": "https://api.github.com/users/vladdoster/events{/privacy}", "received_events_url": "https://api.github.com/users/vladdoster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T00:33:43Z", "updated_at": "2020-06-16T14:30:13Z", "closed_at": "2020-06-16T14:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**When I try to boot the application with the following Admin models which I tried to follow from docs**:\r\n```\r\nclass SubmissionChildAdmin(PolymorphicChildModelAdmin, VersionAdmin):\r\n    base_model = Submission\r\n    base_form = \"__all__\"\r\n    base_fieldsets = \"__all__\"\r\n\r\nclass ContainerFileAdmin(SubmissionChildAdmin):\r\n    base_model = ContainerFile\r\n    show_in_index = True\r\n    fields = (\"id\", \"user\", \"file\", \"container_name\", \"status\", \"report\")\r\n    list_display = (\"user\", \"file\", \"container_name\", \"status\", \"submitted\", \"report\")\r\n    readonly_fields = [\"id\", \"submitted\"]\r\n\r\nclass ContainerUriAdmin(ContainerFileAdmin):\r\n    base_model = ContainerUri\r\n    show_in_index = True\r\n    fields = (\"id\", \"user\", \"uri\", \"container_name\", \"status\", \"report\")\r\n    list_display = (\"user\", \"uri\", \"container_name\", \"status\", \"submitted\", \"report\")\r\n    readonly_fields = [\"id\", \"submitted\"]\r\n\r\nclass SubmissionParentAdmin(PolymorphicParentModelAdmin):\r\n    base_model = Submission\r\n    child_models = (\r\n        (ContainerFile, ContainerFileAdmin),\r\n        (ContainerUri, ContainerUriAdmin),\r\n    )\r\n\r\nrevisions.register(ContainerFile, follow=['submission_ptr'])\r\nrevisions.register(ContainerUri, follow=['containerfile_ptr'])\r\nadmin.site.register(Submission, SubmissionParentAdmin)\r\n```\r\nand models are:\r\n```\r\nclass Submission(PolymorphicModel, ShowFieldType, StatusModel):\r\n    # Model fields\r\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False, auto_created=True)\r\n    user = CharField(max_length=25)\r\n    container_name = CharField(max_length=50)\r\n    STATUS = Choices(\"Submitted\", \"In progress\", \"Error\", \"See an O2 admin\", \"Successful\")\r\n    submitted = DateTimeField(auto_now_add=True)\r\n    finished = DateTimeField(null=True, blank=True)\r\n    report = FileField(storage=settings.REPORT_STORAGE_LOCATION, blank=True, null=True)\r\n\r\n    def __str__(self):\r\n        return humanize(f\"{self.user}'s {self.container_name}\")\r\n\r\n    def __repr__(self):\r\n        return humanize(f\"{self.user}'s {self.container_name}\")\r\n\r\nclass ContainerUri(Submission):\r\n    uri = CharField(max_length=200)\r\n\r\nclass ContainerFile(Submission):\r\n    file = FileField(storage=settings.CONTAINER_SUBMISSION_STORAGE_LOCATION, editable=True)\r\n```\r\n**The traceback**:\r\n```\r\nFile \"/usr/local/lib/python3.8/site-packages/django/utils/functional.py\", line 225, in inner\r\n  return func(self._wrapped, *args)\r\nFile \"/usr/local/lib/python3.8/site-packages/django/contrib/admin/sites.py\", line 293, in urls\r\n  return self.get_urls(), 'admin', self.name\r\nFile \"/usr/local/lib/python3.8/site-packages/django/contrib/admin/sites.py\", line 277, in get_urls\r\n  path('%s/%s/' % (model._meta.app_label, model._meta.model_name), include(model_admin.urls)),\r\nFile \"/usr/local/lib/python3.8/site-packages/django/contrib/admin/options.py\", line 628, in urls\r\n  return self.get_urls()\r\nFile \"/usr/local/lib/python3.8/site-packages/reversion/admin.py\", line 135, in get_urls\r\n  urls = super().get_urls()\r\nFile \"/usr/local/lib/python3.8/site-packages/polymorphic/admin/parentadmin.py\", line 282, in get_urls\r\n  self._lazy_setup()\r\nFile \"/usr/local/lib/python3.8/site-packages/polymorphic/admin/parentadmin.py\", line 94, in _lazy_setup\r\n  if self._child_models and not issubclass(self._child_models[0], models.Model):\r\npeError: issubclass() arg 1 must be a class\r\n20-05-11 19:26:00,475 celery.utils.dispatch.signal ERROR    Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7f209410ef10>> raised: TypeError('issubclass() arg 1 must be a class')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/432", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/432/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/432/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/432", "id": 611039984, "node_id": "MDU6SXNzdWU2MTEwMzk5ODQ=", "number": 432, "title": "Django 3.0/master django.db.models.FieldDoesNotExist has moved", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T23:26:36Z", "updated_at": "2020-08-14T09:28:43Z", "closed_at": "2020-08-14T09:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\nTraceback:\r\n    from polymorphic.models import PolymorphicModel\r\n.tox/py38-djmaster/lib/python3.8/site-packages/polymorphic/models.py:17: in <module>\r\n    from .base import PolymorphicModelBase\r\n.tox/py38-djmaster/lib/python3.8/site-packages/polymorphic/base.py:18: in <module>\r\n    from .managers import PolymorphicManager\r\n.tox/py38-djmaster/lib/python3.8/site-packages/polymorphic/managers.py:10: in <module>\r\n    from polymorphic.query import PolymorphicQuerySet\r\n.tox/py38-djmaster/lib/python3.8/site-packages/polymorphic/query.py:11: in <module>\r\n    from django.db.models import FieldDoesNotExist\r\nE   ImportError: cannot import name 'FieldDoesNotExist' from 'django.db.models'\r\n```\r\n\r\nIt has moved to `django.core.exceptions`\r\n\r\nhttps://github.com/django-polymorphic/django-polymorphic/pull/425 doesnt cover this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/424", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/424/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/424/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/424", "id": 540867637, "node_id": "MDU6SXNzdWU1NDA4Njc2Mzc=", "number": 424, "title": "Django 3.0.1 support", "user": {"login": "daneb255", "id": 4355806, "node_id": "MDQ6VXNlcjQzNTU4MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4355806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daneb255", "html_url": "https://github.com/daneb255", "followers_url": "https://api.github.com/users/daneb255/followers", "following_url": "https://api.github.com/users/daneb255/following{/other_user}", "gists_url": "https://api.github.com/users/daneb255/gists{/gist_id}", "starred_url": "https://api.github.com/users/daneb255/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daneb255/subscriptions", "organizations_url": "https://api.github.com/users/daneb255/orgs", "repos_url": "https://api.github.com/users/daneb255/repos", "events_url": "https://api.github.com/users/daneb255/events{/privacy}", "received_events_url": "https://api.github.com/users/daneb255/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-20T08:54:34Z", "updated_at": "2020-08-18T12:07:39Z", "closed_at": "2020-08-18T12:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django 3.0.1 there is a DeprecationWarning with the ugettext_lazy function.\r\n\r\nRemovedInDjango40Warning: django.utils.translation.ugettext_lazy() is deprecated in favor of django.utils.translation.gettext_lazy().\r\n\r\nchanged to:\r\nfrom django.utils.translation import gettext_lazy as _\r\n\r\nI would be very happy about a fix :) I can not create a new branch :/\r\n\r\nGreetings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/408", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/408/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/408/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/408", "id": 509852617, "node_id": "MDU6SXNzdWU1MDk4NTI2MTc=", "number": 408, "title": "Adding cripsy form bootstrap class name and also getting all  fields of the child model", "user": {"login": "kimutaiRop", "id": 33074564, "node_id": "MDQ6VXNlcjMzMDc0NTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/33074564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimutaiRop", "html_url": "https://github.com/kimutaiRop", "followers_url": "https://api.github.com/users/kimutaiRop/followers", "following_url": "https://api.github.com/users/kimutaiRop/following{/other_user}", "gists_url": "https://api.github.com/users/kimutaiRop/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimutaiRop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimutaiRop/subscriptions", "organizations_url": "https://api.github.com/users/kimutaiRop/orgs", "repos_url": "https://api.github.com/users/kimutaiRop/repos", "events_url": "https://api.github.com/users/kimutaiRop/events{/privacy}", "received_events_url": "https://api.github.com/users/kimutaiRop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T09:47:39Z", "updated_at": "2019-10-22T18:04:13Z", "closed_at": "2019-10-22T18:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello need help I will really appreciate. I Have been using crispy form rendering in my normal model where i could just add class names to divs to be rendered in the template i then switched to Django-polymorphic and I now cannot find a way to alter the classes,\r\nI also have some child models that I would love to only get it's fields and not including tht of parent, is there a way to do this,, will really appreciate the help thanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/394", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/394/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/394/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/394", "id": 473205509, "node_id": "MDU6SXNzdWU0NzMyMDU1MDk=", "number": 394, "title": "PolymorphicParentModelAdmin ignore django ModelAdmin fields", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-26T06:51:13Z", "updated_at": "2019-08-01T11:52:04Z", "closed_at": "2019-08-01T11:52:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `PolymorphicParentModelAdmin` some fields seems not working. In my case that fields are: `autocomplete_fields`, `readonly_fields`. Is it proper behaviour?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/392", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/392/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/392/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/392", "id": 466230724, "node_id": "MDU6SXNzdWU0NjYyMzA3MjQ=", "number": 392, "title": "[bug] Inline model admin: wrong hiding of add button", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-10T10:29:43Z", "updated_at": "2019-07-11T19:42:25Z", "closed_at": "2019-07-11T19:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Checkout the [example](https://github.com/django-polymorphic/django-polymorphic/tree/6d27bb3334c62dd07f2adc6625ef3f8984ea38a6/example) app.\r\n2. In [example/orders/models.py:30](https://github.com/django-polymorphic/django-polymorphic/blob/6d27bb3334c62dd07f2adc6625ef3f8984ea38a6/example/orders/models.py#L30) change `ForeignKey` to `OneToOneField`.\r\n3. Run the app:\r\n    ~~~\r\n    cd example\r\n    python manage.py migrate\r\n    python manage.py runserver\r\n    ~~~\r\n4. Add organisation (<http://127.0.0.1:8000/admin/orders/order/add/>).\r\n5. Click *Add another Payment*.\r\n6. Click *Add another Payment* again.\r\n\r\n#### Actual result\r\nAfter step 5 the button *Add another Payment* is still not hidden.\r\nAfter step 6 empty dropdown list is shown.\r\n\r\n#### Expected result\r\nAfter step 5 the button *Add another Payment* is hidden.\r\n\r\n### Root cause\r\n[polymorphic/static/polymorphic/js/polymorphic_inlines.js:131](https://github.com/django-polymorphic/django-polymorphic/blob/6d27bb3334c62dd07f2adc6625ef3f8984ea38a6/polymorphic/static/polymorphic/js/polymorphic_inlines.js#L131)\r\n[polymorphic/static/polymorphic/js/polymorphic_inlines.js:149](https://github.com/django-polymorphic/django-polymorphic/blob/6d27bb3334c62dd07f2adc6625ef3f8984ea38a6/polymorphic/static/polymorphic/js/polymorphic_inlines.js#L149)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/391", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/391/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/391/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/391", "id": 463624268, "node_id": "MDU6SXNzdWU0NjM2MjQyNjg=", "number": 391, "title": "AttributeError \"can't set attribute\" when trying to display a polymorphic form", "user": {"login": "TiphaineLAURENT", "id": 25824254, "node_id": "MDQ6VXNlcjI1ODI0MjU0", "avatar_url": "https://avatars3.githubusercontent.com/u/25824254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiphaineLAURENT", "html_url": "https://github.com/TiphaineLAURENT", "followers_url": "https://api.github.com/users/TiphaineLAURENT/followers", "following_url": "https://api.github.com/users/TiphaineLAURENT/following{/other_user}", "gists_url": "https://api.github.com/users/TiphaineLAURENT/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiphaineLAURENT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiphaineLAURENT/subscriptions", "organizations_url": "https://api.github.com/users/TiphaineLAURENT/orgs", "repos_url": "https://api.github.com/users/TiphaineLAURENT/repos", "events_url": "https://api.github.com/users/TiphaineLAURENT/events{/privacy}", "received_events_url": "https://api.github.com/users/TiphaineLAURENT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-03T08:47:28Z", "updated_at": "2019-07-11T19:39:53Z", "closed_at": "2019-07-11T19:39:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The traceback :\r\n```py\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: https://<domain>/admin/tutorials/tutorial/add/\r\n\r\nDjango Version: 2.2.1\r\nPython Version: 3.5.3\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'debug_toolbar',\r\n 'tiphainelaurent.staticfiles.MyStaticFilesConfig',\r\n 'rest_framework',\r\n 'rest_framework.authtoken',\r\n 'nested_admin',\r\n 'polymorphic',\r\n 'django_user_agents',\r\n 'api',\r\n 'showcase',\r\n 'tutorials',\r\n 'games',\r\n 'cvs']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n 'debug_toolbar.middleware.DebugToolbarMiddleware',\r\n 'django_user_agents.middleware.UserAgentMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/core/handlers/exception.py\" in inner\r\n  34.             response = get_response(request)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\r\n  115.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\r\n  113.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/contrib/admin/options.py\" in wrapper\r\n  606.                 return self.admin_site.admin_view(view)(*args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/utils/decorators.py\" in _wrapped_view\r\n  142.                     response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  44.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/contrib/admin/sites.py\" in inner\r\n  223.             return view(request, *args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/contrib/admin/options.py\" in add_view\r\n  1634.         return self.changeform_view(request, None, form_url, extra_context)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/utils/decorators.py\" in _wrapper\r\n  45.         return bound_method(*args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/utils/decorators.py\" in _wrapped_view\r\n  142.                     response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/contrib/admin/options.py\" in changeform_view\r\n  1522.             return self._changeform_view(request, object_id, form_url, extra_context)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/django/contrib/admin/options.py\" in _changeform_view\r\n  1596.             media = media + inline_formset.media\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/nested_admin/nested.py\" in media\r\n  109.                 media = media + inline.media\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/nested_admin/nested.py\" in media\r\n  105.         media = media + self.formset.media\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/polymorphic/formsets/models.py\" in media\r\n  236.             add_media(media, form.media)\r\n\r\nFile \"/home/web/venv/lib/python3.5/site-packages/polymorphic/formsets/utils.py\" in add_media\r\n  15.         dest._css = combined._css\r\n\r\nException Type: AttributeError at /admin/tutorials/tutorial/add/\r\nException Value: can't set attribute\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/389", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/389/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/389/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/389", "id": 459582653, "node_id": "MDU6SXNzdWU0NTk1ODI2NTM=", "number": 389, "title": "Documentation is wrong about how to set polymorhpic_ctype_id in migrations", "user": {"login": "atleta", "id": 6267837, "node_id": "MDQ6VXNlcjYyNjc4Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6267837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atleta", "html_url": "https://github.com/atleta", "followers_url": "https://api.github.com/users/atleta/followers", "following_url": "https://api.github.com/users/atleta/following{/other_user}", "gists_url": "https://api.github.com/users/atleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/atleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atleta/subscriptions", "organizations_url": "https://api.github.com/users/atleta/orgs", "repos_url": "https://api.github.com/users/atleta/repos", "events_url": "https://api.github.com/users/atleta/events{/privacy}", "received_events_url": "https://api.github.com/users/atleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-23T14:34:08Z", "updated_at": "2019-06-23T23:42:34Z", "closed_at": "2019-06-23T23:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is described in https://django-polymorphic.readthedocs.io/en/latest/migrating.html , but the example code is bogus as it tries to call custom manager methods on a historic model. (A model class generated using `Apps.get_model`): \r\n\r\n```\r\nContentType = apps.get_model('contenttypes', 'ContentType')\r\nnew_ct = ContentType.objects.get_for_model(MyModel)\r\n```\r\n\r\nThis doesn't work as explained in https://docs.djangoproject.com/es/2.2/topics/migrations/#historical-models . \r\n\r\nYou can do two things instead:\r\n1. manually do the lookup (i.e. do what `get_for_model` does). This is the safe bet, having your migrations ordered correctly, it should always work.\r\n2. importing ContentType (as opposed to getting the historic model). This is the quick way that will work as long as Django doesn't change how ContentTypes work (and/or you don't upgrade to that version)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/385", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/385/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/385/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/385", "id": 443971931, "node_id": "MDU6SXNzdWU0NDM5NzE5MzE=", "number": 385, "title": "ManyToMany inline get_real_instance_class AttributeError when using `through` for InlineModel", "user": {"login": "SamStudio8", "id": 1105722, "node_id": "MDQ6VXNlcjExMDU3MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1105722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamStudio8", "html_url": "https://github.com/SamStudio8", "followers_url": "https://api.github.com/users/SamStudio8/followers", "following_url": "https://api.github.com/users/SamStudio8/following{/other_user}", "gists_url": "https://api.github.com/users/SamStudio8/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamStudio8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamStudio8/subscriptions", "organizations_url": "https://api.github.com/users/SamStudio8/orgs", "repos_url": "https://api.github.com/users/SamStudio8/repos", "events_url": "https://api.github.com/users/SamStudio8/events{/privacy}", "received_events_url": "https://api.github.com/users/SamStudio8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-14T15:10:08Z", "updated_at": "2019-08-12T10:40:43Z", "closed_at": "2019-08-12T10:40:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "django seems to return a `ModelBase`-like object when using [`through`](https://docs.djangoproject.com/en/2.2/ref/models/fields/#django.db.models.ManyToManyField.through), which causes `django-polymorphic` to raise an `AttributeError` when trying to create a `StackedPolymorphicInline`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/384", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/384/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/384/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/384", "id": 440999868, "node_id": "MDU6SXNzdWU0NDA5OTk4Njg=", "number": 384, "title": "Does `polymorphic` have to come before `django.contrib.contenttypes` in `INSTALLED_APPS`?", "user": {"login": "ksze", "id": 381556, "node_id": "MDQ6VXNlcjM4MTU1Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/381556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksze", "html_url": "https://github.com/ksze", "followers_url": "https://api.github.com/users/ksze/followers", "following_url": "https://api.github.com/users/ksze/following{/other_user}", "gists_url": "https://api.github.com/users/ksze/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksze/subscriptions", "organizations_url": "https://api.github.com/users/ksze/orgs", "repos_url": "https://api.github.com/users/ksze/repos", "events_url": "https://api.github.com/users/ksze/events{/privacy}", "received_events_url": "https://api.github.com/users/ksze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T02:44:41Z", "updated_at": "2019-07-12T16:12:00Z", "closed_at": "2019-07-12T16:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation shows `polymorphic` comes before `django.contrib.contenttypes` in `INSTALLED_APPS`: https://github.com/django-polymorphic/django-polymorphic/blame/388d0e12c04f29578e4492ddb3507b1b7eee8431/docs/quickstart.rst#L10-L13\r\n\r\nDoes it _have_ to be this way? It's a little ugly to have to disturb the default ordering of Django's built-in apps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/382", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/382/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/382/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/382", "id": 436422216, "node_id": "MDU6SXNzdWU0MzY0MjIyMTY=", "number": 382, "title": "Django 2.2 possible showstopper", "user": {"login": "ShaheedHaque", "id": 4881193, "node_id": "MDQ6VXNlcjQ4ODExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4881193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaheedHaque", "html_url": "https://github.com/ShaheedHaque", "followers_url": "https://api.github.com/users/ShaheedHaque/followers", "following_url": "https://api.github.com/users/ShaheedHaque/following{/other_user}", "gists_url": "https://api.github.com/users/ShaheedHaque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaheedHaque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaheedHaque/subscriptions", "organizations_url": "https://api.github.com/users/ShaheedHaque/orgs", "repos_url": "https://api.github.com/users/ShaheedHaque/repos", "events_url": "https://api.github.com/users/ShaheedHaque/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaheedHaque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T22:48:30Z", "updated_at": "2019-07-11T19:39:44Z", "closed_at": "2019-07-11T19:39:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe that there is a showstopper incompatibility between Django 2.2 and django-polymorphic 2.0.3 as follows:\r\n\r\n```\r\n...\r\n/usr/local/lib/python3.7/dist-packages/django/contrib/admin/options.py:1596: in _changeform_view\r\n    media = media + inline_formset.media\r\n/usr/local/lib/python3.7/dist-packages/django/contrib/admin/helpers.py:324: in media\r\n    media = self.opts.media + self.formset.media\r\n/usr/local/lib/python3.7/dist-packages/polymorphic/formsets/models.py:236: in media\r\n    add_media(media, form.media)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ndest = Media(css={}, js=[]), media = Media(css={}, js=[])\r\n\r\n    def add_media(dest, media):\r\n        \"\"\"\r\n        Optimized version of django.forms.Media.__add__() that doesn't create new objects.\r\n    \r\n        Only required for Django < 2.0\r\n        \"\"\"\r\n        if django.VERSION >= (2, 0):\r\n            combined = dest + media\r\n>           dest._css = combined._css\r\nE           AttributeError: can't set attribute\r\n\r\ncombined   = Media(css={}, js=[])\r\ndest       = Media(css={}, js=[])\r\nmedia      = Media(css={}, js=[])\r\n\r\n/usr/local/lib/python3.7/dist-packages/polymorphic/formsets/utils.py:15: AttributeError\r\n```\r\nThis is because _css and _js are properties (I presume they were not previously):\r\n```\r\n    @property\r\n    def _css(self):\r\n        css = defaultdict(list)\r\n        for css_list in self._css_lists:\r\n            for medium, sublist in css_list.items():\r\n                css[medium].append(sublist)\r\n        return {medium: self.merge(*lists) for medium, lists in css.items()}\r\n\r\n    @property\r\n    def _js(self):\r\n        return self.merge(*self._js_lists)\r\n``` \r\nSo - without knowing much about what this code is doing - I guess the code needs to change to use the _css_lists and _js_lists.\r\n\r\nI could really use a fix for this, but would be happy to help with a PR if that would move things along. Please advise...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/377", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/377/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/377/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/377", "id": 411204475, "node_id": "MDU6SXNzdWU0MTEyMDQ0NzU=", "number": 377, "title": "Filter by exact Model, not is_instance", "user": {"login": "Hugo-Trentesaux", "id": 18427584, "node_id": "MDQ6VXNlcjE4NDI3NTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/18427584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hugo-Trentesaux", "html_url": "https://github.com/Hugo-Trentesaux", "followers_url": "https://api.github.com/users/Hugo-Trentesaux/followers", "following_url": "https://api.github.com/users/Hugo-Trentesaux/following{/other_user}", "gists_url": "https://api.github.com/users/Hugo-Trentesaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hugo-Trentesaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hugo-Trentesaux/subscriptions", "organizations_url": "https://api.github.com/users/Hugo-Trentesaux/orgs", "repos_url": "https://api.github.com/users/Hugo-Trentesaux/repos", "events_url": "https://api.github.com/users/Hugo-Trentesaux/events{/privacy}", "received_events_url": "https://api.github.com/users/Hugo-Trentesaux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-17T16:15:51Z", "updated_at": "2019-07-12T16:13:18Z", "closed_at": "2019-07-12T16:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to filter objects by exact Model?\r\n\r\ni.e. if C inherits from B and B from A, \r\n\r\n```python\r\nA.objects.instance_of(B)\r\n```\r\nwill return all instances of B and C. How can I only get the instances of B?\r\n\r\nIs\r\n\r\n```python\r\nB_content_type = ContentType.objects.get_for_model(B)\r\nb = A.objects.filter( Q(polymorphic_ctype=B_content_type))\r\n```\r\n\r\nthe only way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/373", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/373/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/373/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/373", "id": 404727254, "node_id": "MDU6SXNzdWU0MDQ3MjcyNTQ=", "number": 373, "title": "Wrong behavior of get_real_instances on empty queryset", "user": {"login": "gtors", "id": 9943520, "node_id": "MDQ6VXNlcjk5NDM1MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9943520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtors", "html_url": "https://github.com/gtors", "followers_url": "https://api.github.com/users/gtors/followers", "following_url": "https://api.github.com/users/gtors/following{/other_user}", "gists_url": "https://api.github.com/users/gtors/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtors/subscriptions", "organizations_url": "https://api.github.com/users/gtors/orgs", "repos_url": "https://api.github.com/users/gtors/repos", "events_url": "https://api.github.com/users/gtors/events{/privacy}", "received_events_url": "https://api.github.com/users/gtors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T11:30:53Z", "updated_at": "2019-07-12T16:10:04Z", "closed_at": "2019-07-12T16:10:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Current result:\r\n```\r\n>>> ModelA.objects.get_real_instances([])\r\n[ <ModelA: id 1, field1 (CharField)>,\r\n  <ModelB: id 2, field1 (CharField), field2 (CharField)>,\r\n  <ModelC: id 3, field1 (CharField), field2 (CharField), field3 (CharField)> ]\r\n```\r\n\r\nExpected result:\r\n```\r\n>>> ModelA.objects.get_real_instances([])\r\n[ ]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/372", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/372/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/372/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/372", "id": 391433284, "node_id": "MDU6SXNzdWUzOTE0MzMyODQ=", "number": 372, "title": "'empty_form' is not used in polymorphic formsets, use 'empty_forms' instead.", "user": {"login": "gradywoodruff", "id": 748199, "node_id": "MDQ6VXNlcjc0ODE5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/748199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gradywoodruff", "html_url": "https://github.com/gradywoodruff", "followers_url": "https://api.github.com/users/gradywoodruff/followers", "following_url": "https://api.github.com/users/gradywoodruff/following{/other_user}", "gists_url": "https://api.github.com/users/gradywoodruff/gists{/gist_id}", "starred_url": "https://api.github.com/users/gradywoodruff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gradywoodruff/subscriptions", "organizations_url": "https://api.github.com/users/gradywoodruff/orgs", "repos_url": "https://api.github.com/users/gradywoodruff/repos", "events_url": "https://api.github.com/users/gradywoodruff/events{/privacy}", "received_events_url": "https://api.github.com/users/gradywoodruff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-16T04:03:20Z", "updated_at": "2018-12-16T04:54:13Z", "closed_at": "2018-12-16T04:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I almost have my polymorphic inlines set up, but am running into an error:\r\n`'empty_form' is not used in polymorphic formsets, use 'empty_forms' instead.`\r\n\r\nI have looked through the docs and files, and related questions and was unable to find anything. Here is my set up. I'd appreciate any advice\r\n```\r\nclass ContentInline(StackedPolymorphicInline):\r\n    class TextContentInline(StackedPolymorphicInline.Child):\r\n        model = Text\r\n        fieldsets = [(None, {\r\n                'fields': (('body',)),\r\n            })]\r\n\r\n    child_inlines = (TextContentInline,)\r\n    model = Content\r\n    extra = 1\r\n    min_num = 1\r\n    fieldsets = [(None, {\r\n            'fields': (('post',)),\r\n        })]\r\n\r\nclass PostAdmin(admin.ModelAdmin, PolymorphicInlineSupportMixin):\r\n    save_on_top = True\r\n    list_display = ['title', 'author', get_post_url, 'created']\r\n    readonly_fields = [get_post_url, 'created',]\r\n\r\n@admin.register(Article)\r\nclass ArticleAdmin(PostAdmin):\r\n    inlines = [CoverPictureInline, ContentInline, ContextInline]\r\n    fieldsets_and_inlines_order = ('f', 'i', 'i', 'f', 'i')\r\n    fieldsets = tuple(primary_sets\r\n        + [('Text', {\r\n            'fields': (('body',),),\r\n        })]\r\n        + meta_sets)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/368", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/368/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/368/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/368", "id": 378724437, "node_id": "MDU6SXNzdWUzNzg3MjQ0Mzc=", "number": 368, "title": "Migrating polymorphic models to new app causes queryset to be empty", "user": {"login": "filipweidemann", "id": 13511576, "node_id": "MDQ6VXNlcjEzNTExNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/13511576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/filipweidemann", "html_url": "https://github.com/filipweidemann", "followers_url": "https://api.github.com/users/filipweidemann/followers", "following_url": "https://api.github.com/users/filipweidemann/following{/other_user}", "gists_url": "https://api.github.com/users/filipweidemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/filipweidemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/filipweidemann/subscriptions", "organizations_url": "https://api.github.com/users/filipweidemann/orgs", "repos_url": "https://api.github.com/users/filipweidemann/repos", "events_url": "https://api.github.com/users/filipweidemann/events{/privacy}", "received_events_url": "https://api.github.com/users/filipweidemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-08T13:10:16Z", "updated_at": "2020-03-13T14:01:05Z", "closed_at": "2020-03-13T14:01:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently in the middle of refactoring an old Django monolith into small and reusable apps. Some of those old models are inheriting from a polymorphic parent called `Asset`. \r\n\r\nSince the app is already running in production, I wanted to use the `db_table` Meta attribute when moving the individual models to the new app's `models.py`, so that they keep using their old table and therefore won't need new ones with data migrations or other fun like this.\r\n\r\nThis works perfectly when those moved models inherit from Django's `models.Model`, however those which are polymorhic seem to produce strange issues. \r\nWhenever you query one of those models, the returned `PolymorphicQueryset` is empty, even though the table is populated exactly as it was before. \r\n\r\nIt gets stranger. When querying the `Asset` model directly, you would expect the children objects to show up. They don't. Even `Asset.objects.all()` doesn't return them. \r\n\r\nIs this some kind of bug, unexpected behaviour or maybe my own fault for implementing it incorrectly? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/367", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/367/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/367/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/367", "id": 375125857, "node_id": "MDU6SXNzdWUzNzUxMjU4NTc=", "number": 367, "title": "contrib/extra_views.py is not compatible with django-extra-views 0.11.0 or later", "user": {"login": "ShaheedHaque", "id": 4881193, "node_id": "MDQ6VXNlcjQ4ODExOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4881193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaheedHaque", "html_url": "https://github.com/ShaheedHaque", "followers_url": "https://api.github.com/users/ShaheedHaque/followers", "following_url": "https://api.github.com/users/ShaheedHaque/following{/other_user}", "gists_url": "https://api.github.com/users/ShaheedHaque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaheedHaque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaheedHaque/subscriptions", "organizations_url": "https://api.github.com/users/ShaheedHaque/orgs", "repos_url": "https://api.github.com/users/ShaheedHaque/repos", "events_url": "https://api.github.com/users/ShaheedHaque/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaheedHaque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-29T17:16:22Z", "updated_at": "2019-07-11T20:04:59Z", "closed_at": "2019-07-11T20:04:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are API changes in django-extra-views 0.11.0 or later which break compatibility with contrib/extra_views.py:\r\n\r\n- 0.11.0 removed the ability to specify 'extra' in the class as in PolymorphicFormSetMixin.\r\n- 0.12.0 renamed InlineFormSet to InlineFormSetFactory.\r\n\r\nWould a PR that addressed these two issues be acceptable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/360", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/360/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/360/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/360", "id": 351470719, "node_id": "MDU6SXNzdWUzNTE0NzA3MTk=", "number": 360, "title": "Django 2.1 raises exception in admin", "user": {"login": "mikedingjan", "id": 1440264, "node_id": "MDQ6VXNlcjE0NDAyNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1440264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedingjan", "html_url": "https://github.com/mikedingjan", "followers_url": "https://api.github.com/users/mikedingjan/followers", "following_url": "https://api.github.com/users/mikedingjan/following{/other_user}", "gists_url": "https://api.github.com/users/mikedingjan/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedingjan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedingjan/subscriptions", "organizations_url": "https://api.github.com/users/mikedingjan/orgs", "repos_url": "https://api.github.com/users/mikedingjan/repos", "events_url": "https://api.github.com/users/mikedingjan/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedingjan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-17T06:19:50Z", "updated_at": "2018-08-23T22:12:34Z", "closed_at": "2018-08-23T15:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of Django 2.1 Django started to raise an exception when a form has the ``empty_permitted`` and ``use_required_attribute``. In the admin of django-polymorpic these attributes are used together, which makes it impossible to use the Django admin interface\r\n\r\nRelated Django ticket: https://code.djangoproject.com/ticket/28171?cversion=1&cnum_hist=3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/354", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/354/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/354/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/354", "id": 343222449, "node_id": "MDU6SXNzdWUzNDMyMjI0NDk=", "number": 354, "title": "Question about filter", "user": {"login": "csarcom", "id": 1779633, "node_id": "MDQ6VXNlcjE3Nzk2MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csarcom", "html_url": "https://github.com/csarcom", "followers_url": "https://api.github.com/users/csarcom/followers", "following_url": "https://api.github.com/users/csarcom/following{/other_user}", "gists_url": "https://api.github.com/users/csarcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/csarcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csarcom/subscriptions", "organizations_url": "https://api.github.com/users/csarcom/orgs", "repos_url": "https://api.github.com/users/csarcom/repos", "events_url": "https://api.github.com/users/csarcom/events{/privacy}", "received_events_url": "https://api.github.com/users/csarcom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-20T19:29:10Z", "updated_at": "2018-08-14T13:26:18Z", "closed_at": "2018-08-14T13:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not find out in the docs.\r\nI have:\r\n\r\n```\r\nclass Supply(PolymorphicModel):\r\n    pass\r\n\r\nclass Water(Supply):\r\n    pass\r\n\r\nclass Beer(Supply):\r\n    pass\r\n\r\nclass Soda(Supply):\r\n    pass\r\n\r\nclass Consumption():\r\n    supply = Supply()\r\n```\r\n\r\nI can create Consumptions with Water, Beer or Soda, but how  can I filter it?\r\nSomething like this:\r\n`Consumption.objects.filter(supply__in=[Beer, Water])`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/351", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/351/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/351/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/351", "id": 326461544, "node_id": "MDU6SXNzdWUzMjY0NjE1NDQ=", "number": 351, "title": "Proxy Model Support", "user": {"login": "LeonardoGentile", "id": 412061, "node_id": "MDQ6VXNlcjQxMjA2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/412061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeonardoGentile", "html_url": "https://github.com/LeonardoGentile", "followers_url": "https://api.github.com/users/LeonardoGentile/followers", "following_url": "https://api.github.com/users/LeonardoGentile/following{/other_user}", "gists_url": "https://api.github.com/users/LeonardoGentile/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeonardoGentile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeonardoGentile/subscriptions", "organizations_url": "https://api.github.com/users/LeonardoGentile/orgs", "repos_url": "https://api.github.com/users/LeonardoGentile/repos", "events_url": "https://api.github.com/users/LeonardoGentile/events{/privacy}", "received_events_url": "https://api.github.com/users/LeonardoGentile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-25T10:08:03Z", "updated_at": "2018-08-23T20:03:03Z", "closed_at": "2018-08-23T15:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nin the doc introduction it says: \r\n\r\n> Support for proxy models.\r\n\r\nbut then it's the only place where proxies are mentioned, or maybe I did not look carefully. \r\n\r\nIt's not clear to me if this package uses multi-table inheritance or not. In that case would be always true even when we want to establish inheritance using Proxies models only? In this case of course all the sub-types will have the same fields, only methods would change.\r\n\r\nI've posted a more detail [question on SO](https://stackoverflow.com/questions/50525301/django-inheritance-and-polymorphism-with-proxy-models?noredirect=1#comment88064445_50525301) on the argument.\r\n\r\nIn short: is this package capable of providing this functionality?\r\nGiven a model A and its children **proxy** models B and C, can we get back the specific subtype B and C from the generic queryset on A?\r\n\r\nMeaning, given `A.objects.all()` can weget back the specific subtype `B` and `C` without the extra DB queries or multi-table inheritance?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/349", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/349/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/349/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/349", "id": 324417065, "node_id": "MDU6SXNzdWUzMjQ0MTcwNjU=", "number": 349, "title": "OneToOne `_ptr` fields to base model should set editable=False", "user": {"login": "AlanCoding", "id": 1385596, "node_id": "MDQ6VXNlcjEzODU1OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1385596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlanCoding", "html_url": "https://github.com/AlanCoding", "followers_url": "https://api.github.com/users/AlanCoding/followers", "following_url": "https://api.github.com/users/AlanCoding/following{/other_user}", "gists_url": "https://api.github.com/users/AlanCoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlanCoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlanCoding/subscriptions", "organizations_url": "https://api.github.com/users/AlanCoding/orgs", "repos_url": "https://api.github.com/users/AlanCoding/repos", "events_url": "https://api.github.com/users/AlanCoding/events{/privacy}", "received_events_url": "https://api.github.com/users/AlanCoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-18T13:45:17Z", "updated_at": "2018-08-23T15:46:18Z", "closed_at": "2018-08-23T15:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe you can see this behavior in the models from tests, such as:\r\n\r\nhttps://github.com/django-polymorphic/django-polymorphic/blob/7fe7861f45ce42c4ced014d8f58c5c5f8603d203/polymorphic/tests/migrations/0001_initial.py#L880-L891\r\n\r\n\r\nThe field kwargs are\r\n\r\n```\r\nauto_created=True,\r\non_delete=django.db.models.deletion.CASCADE,\r\nparent_link=True,\r\nprimary_key=True,\r\nserialize=False,\r\nto='tests.Middle'\r\n```\r\n\r\nI believe that when the field is created, the `editable` field is not provided, leaving it to default to `True`.\r\n\r\nI have observed this in [AWX](https://github.com/ansible/awx) (a Django/DRF app that uses django-polymorphic) models as such:\r\n\r\n```python\r\nIn [6]: JobTemplate._meta.get_field('unifiedjobtemplate_ptr').editable\r\nOut[6]: True\r\n```\r\n\r\nHere, `JobTemplate` is a subclass of the polymorphic base model `UnifiedJobTemplate`, and `JobTemplate.unifiedjobtemplate_ptr` is the automatically-created reference from the subclass table to the base class table.\r\n\r\nI think it would be pretty widely agreed that this field should not be editable? This could probably be accomplished by simply adding that kwarg wherever the field is generated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/341", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/341/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/341/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/341", "id": 298432529, "node_id": "MDU6SXNzdWUyOTg0MzI1Mjk=", "number": 341, "title": "ForeignKey returns parent model instead of child", "user": {"login": "mumumumu", "id": 1393482, "node_id": "MDQ6VXNlcjEzOTM0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1393482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mumumumu", "html_url": "https://github.com/mumumumu", "followers_url": "https://api.github.com/users/mumumumu/followers", "following_url": "https://api.github.com/users/mumumumu/following{/other_user}", "gists_url": "https://api.github.com/users/mumumumu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mumumumu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mumumumu/subscriptions", "organizations_url": "https://api.github.com/users/mumumumu/orgs", "repos_url": "https://api.github.com/users/mumumumu/repos", "events_url": "https://api.github.com/users/mumumumu/events{/privacy}", "received_events_url": "https://api.github.com/users/mumumumu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-20T00:01:33Z", "updated_at": "2018-04-12T19:20:57Z", "closed_at": "2018-03-02T22:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm in the process of upgrading from 1.3 to 2.0.2 and noticed something strange -- ForeignKeys to polymorphic models are returning the parent model instead of the child. \r\n\r\nExample scenario:\r\n```\r\n class FKTest(models.Model):\r\n     party = models.ForeignKey('parties.Party', related_name='fk_party')\r\n     person = models.ForeignKey('parties.Person', related_name='fk_person')\r\n\r\nparty = person = Person.objects.first()\r\nfktest = FKTest(party=party, person=person)\r\nfktest.save()\r\n\r\n# things look good before re-fetching from db\r\nfktest.party\r\n>> <Person:  Person object>\r\nfktest.person\r\n>> <Person:  Person object>\r\n\r\n# after re-fetching from db\r\nfktest = FKTest.objects.get(pk=fktest.pk)\r\nfktest.party\r\n>> <Party: Party object>\r\nfktest.person\r\n>> <Person:  Person object>\r\n```\r\n\r\nI'm on Django 1.11.10. It might turn out to be something specific to my code (and I'll continue debugging), buy any help would be appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/337", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/337/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/337/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/337", "id": 290378451, "node_id": "MDU6SXNzdWUyOTAzNzg0NTE=", "number": 337, "title": "Restrict fields to sub_class models", "user": {"login": "maruthi8", "id": 28389220, "node_id": "MDQ6VXNlcjI4Mzg5MjIw", "avatar_url": "https://avatars0.githubusercontent.com/u/28389220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maruthi8", "html_url": "https://github.com/maruthi8", "followers_url": "https://api.github.com/users/maruthi8/followers", "following_url": "https://api.github.com/users/maruthi8/following{/other_user}", "gists_url": "https://api.github.com/users/maruthi8/gists{/gist_id}", "starred_url": "https://api.github.com/users/maruthi8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maruthi8/subscriptions", "organizations_url": "https://api.github.com/users/maruthi8/orgs", "repos_url": "https://api.github.com/users/maruthi8/repos", "events_url": "https://api.github.com/users/maruthi8/events{/privacy}", "received_events_url": "https://api.github.com/users/maruthi8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T07:58:40Z", "updated_at": "2018-02-05T13:12:35Z", "closed_at": "2018-02-02T08:52:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nclass StudyPlanTemplateModel(PolymorphicModel):\r\n    \"\"\"\r\n    It's a Polymorphic base model, which as all the fields related to sub class\r\n    \"\"\"\r\n    abusable_tags = ArrayField(\r\n        models.CharField(max_length=100),\r\n        blank=True,\r\n        null=True,\r\n        default=list,\r\n        help_text='\"Abusable\" tags that the Authors want to (ab)use. :-)',\r\n    )\r\n\r\n    exam = models.CharField(choices=ChoiceFields.EXAM_TYPE, max_length=5)  # GRE, SAT etc...\r\n    engine = models.CharField(choices=ChoiceFields.ENGINE_TYPE, max_length=5)\r\n    flavour = models.CharField(choices=ChoiceFields.FLAVOUR_TYPE, max_length=5)\r\n    \"\"\"CharFiled with choices\"\"\"\r\n    subject = models.CharField(max_length=50)\r\n    title = models.CharField(max_length=50)\r\n\r\n    created_at = models.DateTimeField(auto_now_add=True, help_text=\"Timestamp when the object was created\")\r\n    updated_at = models.DateTimeField(auto_now=True, help_text=\"Timestamp when the object was modified\")\r\n\r\n    estimated_duration = models.DurationField()\r\n\r\n\r\nclass StaticStudyPlanTemplateModel(StudyPlanTemplateModel):\r\n    \"\"\"\r\n    Proxy model for static study plan, which inherit from StudyPlanTemplateModel\r\n    \"\"\"\r\n    class Meta:\r\n        proxy = True\r\n\r\nclass DynamicStudyPlanTemplateModel(StudyPlanTemplateModel):\r\n    \"\"\"\r\n    Proxy model for dynamic study plan, which inherit from StudyPlanTemplateModel\r\n    \"\"\"\r\n    class Meta:\r\n        proxy = True\r\n```\r\n\r\nHow can i restrict fields to subclass proxy models i.e I need only some fields from StudyPlanTemplateModel to create object for StaticStudyPlanTemplateModel other fields that not required for this class should be None but that fields may require while creating DynamicStudyPlanTemplateModel object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/335", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/335/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/335/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/335", "id": 281442066, "node_id": "MDU6SXNzdWUyODE0NDIwNjY=", "number": 335, "title": "Django 1.10 Polymorphic 1.3 AppRegistryNotReady", "user": {"login": "jweinstein92", "id": 6655992, "node_id": "MDQ6VXNlcjY2NTU5OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6655992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jweinstein92", "html_url": "https://github.com/jweinstein92", "followers_url": "https://api.github.com/users/jweinstein92/followers", "following_url": "https://api.github.com/users/jweinstein92/following{/other_user}", "gists_url": "https://api.github.com/users/jweinstein92/gists{/gist_id}", "starred_url": "https://api.github.com/users/jweinstein92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jweinstein92/subscriptions", "organizations_url": "https://api.github.com/users/jweinstein92/orgs", "repos_url": "https://api.github.com/users/jweinstein92/repos", "events_url": "https://api.github.com/users/jweinstein92/events{/privacy}", "received_events_url": "https://api.github.com/users/jweinstein92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T16:11:22Z", "updated_at": "2017-12-13T15:54:06Z", "closed_at": "2017-12-13T15:54:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am in the process of upgrading my Django project and noticed during the process of upgrading from Django 1.8.3 to 1.10.8 (with steps for Django 1.9 in the middle) I am no longer able to runserver due to Apps not being loaded. Here is the stack trace:\r\n\r\n```\r\nFile \"/opt/code/webserver/booksmart/booksmart/base/__init__.py\", line 2, in <module>\r\n    from models import *\r\n  File \"/opt/code/webserver/booksmart/booksmart/base/models.py\", line 9, in <module>\r\n    from polymorphic.models import PolymorphicModel\r\n  File \"/usr/local/lib/python2.7/dist-packages/polymorphic/models.py\", line 7, in <module>\r\n    from django.contrib.contenttypes.models import ContentType\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/contenttypes/models.py\", line 138, in <module>\r\n    class ContentType(models.Model):\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 105, in __new__\r\n    app_config = apps.get_containing_app_config(module)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 237, in get_containing_app_config\r\n    self.check_apps_ready()\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 124, in check_apps_ready\r\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\r\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/333", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/333/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/333/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/333", "id": 279859131, "node_id": "MDU6SXNzdWUyNzk4NTkxMzE=", "number": 333, "title": "Committing directly to master", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-06T18:30:18Z", "updated_at": "2018-01-16T16:17:10Z", "closed_at": "2018-01-16T16:17:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've probably spent hours of time today digging into CI issues that could have been avoided by not committing directly to master. Also, I am partly at fault :smile:, I should have checked PR's closer.\r\n\r\nIn these two cases: 02b71d8 , 80b4f2b would begin breaking CI, which causes other PR's (#318 #322) to not have a baseline to go against. This hurt me because I would end up trying to QA both their PR's, and I have to rule out it's not their changes breaking it.\r\n\r\nFunnily enough, both those refs look innocuous. Heh.\r\n\r\nI think it'd be a better procedure now to put changes into a PR, wait for CI to wrap up, then merge it in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/332", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/332/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/332/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/332", "id": 279850085, "node_id": "MDU6SXNzdWUyNzk4NTAwODU=", "number": 332, "title": "Python 2.7 + Django 1.11 breaking", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-06T17:59:37Z", "updated_at": "2018-01-22T09:23:21Z", "closed_at": "2018-01-22T09:23:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is blocking CI #331\r\n\r\nFound while QA'ing #318: https://github.com/django-polymorphic/django-polymorphic/pull/318#issuecomment-349707486\r\n\r\n9500a21f82dd1b31f88d88e46bf8aa2411a701e9 works\r\n\r\nbreak starts here: 80b4f2bb41423d6131e2e39ef5c6b212ce5a7b56", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/331", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/331/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/331/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/331", "id": 279781297, "node_id": "MDU6SXNzdWUyNzk3ODEyOTc=", "number": 331, "title": "Travis failing", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-06T14:52:38Z", "updated_at": "2018-01-15T13:58:28Z", "closed_at": "2018-01-15T13:58:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's difficult to get a proper feedback loop going if CI isn't update\r\n\r\nEven with the benefit of the admin typo fix at #330, [tests still fail](https://travis-ci.org/django-polymorphic/django-polymorphic/builds/312453794).\r\n\r\nThis needs to get squared away so new contributions can be verified", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/329", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/329/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/329/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/329", "id": 279777291, "node_id": "MDU6SXNzdWUyNzk3NzcyOTE=", "number": 329, "title": "Syntax error testing admin", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T14:42:34Z", "updated_at": "2018-01-22T09:23:35Z", "closed_at": "2018-01-22T09:23:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "master 02b71d8\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 81, in <module>\r\n    runtests()\r\n  File \"runtests.py\", line 77, in runtests\r\n    execute_from_command_line(argv)\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/core/management/__init__.py\", line 338, in execute\r\n    django.setup()\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/apps/registry.py\", line 116, in populate\r\n    app_config.ready()\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/contrib/admin/apps.py\", line 23, in ready\r\n    self.module.autodiscover()\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/contrib/admin/__init__.py\", line 26, in autodiscover\r\n    autodiscover_modules('admin', register_to=site)\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/site-packages/django/utils/module_loading.py\", line 50, in autodiscover_modules\r\n    import_module('%s.%s' % (app_config.name, module_to_search))\r\n  File \"/Users/me/work/python/django-polymorphic/.tox/py36-django111/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/me/work/python/django-polymorphic/polymorphic/admin/__init__.py\", line 9, in <module>\r\n    from .childadmin import PolymorphicChildModelAdmin                                                                                                                                                               File \"/Users/me/work/python/django-polymorphic/polymorphic/admin/childadmin.py\", line 186\r\n    if self.fieldsets or or self.fields or not self.base_fieldsets:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/326", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/326/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/326/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/326", "id": 279772257, "node_id": "MDU6SXNzdWUyNzk3NzIyNTc=", "number": 326, "title": "Drop support for 1.10?", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T14:28:24Z", "updated_at": "2018-01-22T09:22:25Z", "closed_at": "2018-01-22T09:22:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "source: https://docs.djangoproject.com/en/2.0/releases/2.0/\r\n\r\n> Following the release of Django 2.0, we suggest that third-party app authors drop support for all versions of Django prior to 1.11. At that time, you should be able to run your package\u2019s tests using python -Wd so that deprecation warnings do appear. After making the deprecation warning fixes, your app should be compatible with Django 2.0.\r\n\r\nBackstory is Django 1.11 is LTS (Supported until April 2020).\r\n\r\nRelated #325", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/325", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/325/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/325/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/325", "id": 279770783, "node_id": "MDU6SXNzdWUyNzk3NzA3ODM=", "number": 325, "title": "Update travis for Django 2.0", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T14:24:09Z", "updated_at": "2018-01-22T09:22:16Z", "closed_at": "2018-01-22T09:22:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related #324", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/324", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/324/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/324/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/324", "id": 278743818, "node_id": "MDU6SXNzdWUyNzg3NDM4MTg=", "number": 324, "title": "django 2.0 needs support (urls)", "user": {"login": "tony", "id": 26336, "node_id": "MDQ6VXNlcjI2MzM2", "avatar_url": "https://avatars0.githubusercontent.com/u/26336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony", "html_url": "https://github.com/tony", "followers_url": "https://api.github.com/users/tony/followers", "following_url": "https://api.github.com/users/tony/following{/other_user}", "gists_url": "https://api.github.com/users/tony/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony/subscriptions", "organizations_url": "https://api.github.com/users/tony/orgs", "repos_url": "https://api.github.com/users/tony/repos", "events_url": "https://api.github.com/users/tony/events{/privacy}", "received_events_url": "https://api.github.com/users/tony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-03T04:37:03Z", "updated_at": "2018-01-22T09:21:43Z", "closed_at": "2018-01-22T09:21:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n  File \"/Users/me/.local/share/virtualenvs/develtech-oQr_FNyw/lib/python3.6/site-packages/polymorphic/admin/__init__.py\", line 8, in <module>\r\n    from .parentadmin import PolymorphicParentModelAdmin\r\n  File \"/Users/me/.local/share/virtualenvs/develtech-oQr_FNyw/lib/python3.6/site-packages/polymorphic/admin/parentadmin.py\", line 14, in <module>\r\n    from django.core.urlresolvers import RegexURLResolver\r\nModuleNotFoundError: No module named 'django.core.urlresolvers'\r\n```\r\n\r\n```\r\nName: django-polymorphic\r\nVersion: 1.3\r\nSummary: Seamless Polymorphic Inheritance for Django Models\r\nHome-page: https://github.com/django-polymorphic/django-polymorphic\r\nAuthor: Christopher Glass\r\nAuthor-email: tribaal@gmail.com\r\nLicense: BSD\r\n```\r\n\r\nhttps://docs.djangoproject.com/en/2.0/releases/2.0/#simplified-url-routing-syntax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/320", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/320/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/320/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/320", "id": 269650029, "node_id": "MDU6SXNzdWUyNjk2NTAwMjk=", "number": 320, "title": "TypeError: 'parent_inline' is an invalid keyword argument for this function", "user": {"login": "apirobot", "id": 9641784, "node_id": "MDQ6VXNlcjk2NDE3ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9641784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apirobot", "html_url": "https://github.com/apirobot", "followers_url": "https://api.github.com/users/apirobot/followers", "following_url": "https://api.github.com/users/apirobot/following{/other_user}", "gists_url": "https://api.github.com/users/apirobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/apirobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apirobot/subscriptions", "organizations_url": "https://api.github.com/users/apirobot/orgs", "repos_url": "https://api.github.com/users/apirobot/repos", "events_url": "https://api.github.com/users/apirobot/events{/privacy}", "received_events_url": "https://api.github.com/users/apirobot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-30T15:46:54Z", "updated_at": "2017-10-30T16:10:43Z", "closed_at": "2017-10-30T16:10:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```bash\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x7fbb65e49158>\r\nTraceback (most recent call last):\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/utils/autoreload.py\", line 228, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 125, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/core/management/base.py\", line 359, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/core/management/base.py\", line 346, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/core/checks/registry.py\", line 81, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/checks.py\", line 25, in check_admin_app\r\n    errors.extend(site.check(app_configs))\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/sites.py\", line 81, in check\r\n    errors.extend(modeladmin.check())\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/options.py\", line 117, in check\r\n    return self.checks_class().check(self, **kwargs)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/checks.py\", line 523, in check\r\n    errors.extend(self._check_inlines(admin_obj))\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/checks.py\", line 561, in _check_inlines\r\n    for index, item in enumerate(obj.inlines)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/checks.py\", line 561, in <listcomp>\r\n    for index, item in enumerate(obj.inlines)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/contrib/admin/checks.py\", line 589, in _check_inlines_item\r\n    return inline(model, obj.admin_site).check()\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/polymorphic/admin/inlines.py\", line 67, in __init__\r\n    self.child_inline_instances = self.get_child_inline_instances()\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/polymorphic/admin/inlines.py\", line 80, in get_child_inline_instances\r\n    instances.append(ChildInlineType(parent_inline=self))\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/polymorphic/models.py\", line 151, in __init__\r\n    super(PolymorphicModel, self).__init__(*args, ** kwargs)\r\n  File \"/home/apirobot/.virtualenvs/codemonkey-back/lib/python3.6/site-packages/django/db/models/base.py\", line 573, in __init__\r\n    raise TypeError(\"'%s' is an invalid keyword argument for this function\" % list(kwargs)[0])\r\nTypeError: 'parent_inline' is an invalid keyword argument for this function\r\n```\r\n\r\nMy code almost the same as the code from example (except for model names):\r\n\r\n```python\r\n# models.py\r\n\r\nclass Level(models.Model):\r\n    ...\r\n\r\n\r\nclass Step(PolymorphicModel):\r\n    ...\r\n    level = models.ForeignKey(\r\n        'Level',\r\n        related_name='steps',\r\n        on_delete=models.CASCADE,\r\n        verbose_name=_('level')\r\n    )\r\n\r\n\r\nclass File(Step):\r\n    ...\r\n\r\n\r\nclass Challenge(Step):\r\n    ...\r\n\r\n\r\n# admin.py\r\n\r\nclass ChallengeInline(StackedPolymorphicInline.Child):\r\n    model = Challenge\r\n\r\n\r\nclass FileInline(StackedPolymorphicInline.Child):\r\n    model = File\r\n\r\n\r\nclass StepInline(StackedPolymorphicInline):\r\n    model = Step\r\n    child_inlines = (\r\n        Challenge,\r\n        File,\r\n    )\r\n\r\n\r\n@admin.register(Level)\r\nclass LevelAdmin(PolymorphicInlineSupportMixin, admin.ModelAdmin):\r\n    inlines = (StepInline, )\r\n\r\n```\r\n\r\nVersions\r\ndjango=1.11\r\npython=3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/317", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/317/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/317/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/317", "id": 266708696, "node_id": "MDU6SXNzdWUyNjY3MDg2OTY=", "number": 317, "title": "[Question] Declare polymorphic on custom field.", "user": {"login": "lsnk", "id": 2228806, "node_id": "MDQ6VXNlcjIyMjg4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2228806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsnk", "html_url": "https://github.com/lsnk", "followers_url": "https://api.github.com/users/lsnk/followers", "following_url": "https://api.github.com/users/lsnk/following{/other_user}", "gists_url": "https://api.github.com/users/lsnk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsnk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsnk/subscriptions", "organizations_url": "https://api.github.com/users/lsnk/orgs", "repos_url": "https://api.github.com/users/lsnk/repos", "events_url": "https://api.github.com/users/lsnk/events{/privacy}", "received_events_url": "https://api.github.com/users/lsnk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-19T03:22:29Z", "updated_at": "2017-11-20T13:59:00Z", "closed_at": "2017-11-20T13:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I want to make a code similar to SQLAlchemy one like this. I've read the documentation but haven't found such thing. Is this possible in django-polymorphic?\r\n\r\n```\r\nclass Employee(Base):\r\n    __tablename__ = 'employee'\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String(50))\r\n    type = Column(String(20))\r\n\r\n    __mapper_args__ = {\r\n        'polymorphic_on':type,\r\n        'polymorphic_identity':'employee'\r\n    }\r\n\r\nclass Manager(Employee):\r\n    manager_data = Column(String(50))\r\n\r\n    __mapper_args__ = {\r\n        'polymorphic_identity':'manager'\r\n    }\r\n\r\nclass Engineer(Employee):\r\n    engineer_info = Column(String(50))\r\n\r\n    __mapper_args__ = {\r\n        'polymorphic_identity':'engineer'\r\n    }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/315", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/315/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/315/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/315", "id": 262440205, "node_id": "MDU6SXNzdWUyNjI0NDAyMDU=", "number": 315, "title": "StackedPolymorphicInline.Child and modeltranslation: how to set?", "user": {"login": "rocchidavide", "id": 4699633, "node_id": "MDQ6VXNlcjQ2OTk2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4699633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocchidavide", "html_url": "https://github.com/rocchidavide", "followers_url": "https://api.github.com/users/rocchidavide/followers", "following_url": "https://api.github.com/users/rocchidavide/following{/other_user}", "gists_url": "https://api.github.com/users/rocchidavide/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocchidavide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocchidavide/subscriptions", "organizations_url": "https://api.github.com/users/rocchidavide/orgs", "repos_url": "https://api.github.com/users/rocchidavide/repos", "events_url": "https://api.github.com/users/rocchidavide/events{/privacy}", "received_events_url": "https://api.github.com/users/rocchidavide/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-03T14:01:14Z", "updated_at": "2018-03-13T09:27:00Z", "closed_at": "2017-11-20T14:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation example:\r\n```\r\nclass PaymentInline(StackedPolymorphicInline):\r\n    \"\"\"\r\n    An inline for a polymorphic model.\r\n    The actual form appearance of each row is determined by\r\n    the child inline that corresponds with the actual model type.\r\n    \"\"\"\r\n    class CreditCardPaymentInline(StackedPolymorphicInline.Child):\r\n        model = CreditCardPayment\r\n\r\n    class BankPaymentInline(StackedPolymorphicInline.Child):\r\n        model = BankPayment\r\n\r\n    class SepaPaymentInline(StackedPolymorphicInline.Child):\r\n        model = SepaPayment\r\n\r\n    model = Payment\r\n    child_inlines = (\r\n        CreditCardPaymentInline,\r\n        BankPaymentInline,\r\n        SepaPaymentInline,\r\n    )\r\n```\r\n\r\nHow can I set inlines childs to be used with modeltranslation?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/314", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/314/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/314/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/314", "id": 261848268, "node_id": "MDU6SXNzdWUyNjE4NDgyNjg=", "number": 314, "title": "RegexURLResolver usage", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-30T14:44:12Z", "updated_at": "2017-11-20T13:46:54Z", "closed_at": "2017-11-20T13:46:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RegexURLResolver has been renamed in Django 2.1, this is causing failures on Travis.\r\n\r\nOne of the django devs noted that it's a private API and we could use url() instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/310", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/310/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/310/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/310", "id": 248547604, "node_id": "MDU6SXNzdWUyNDg1NDc2MDQ=", "number": 310, "title": "Failing test on django master // python 3.6", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-07T22:19:56Z", "updated_at": "2017-09-06T19:41:14Z", "closed_at": "2017-09-06T19:41:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://travis-ci.org/django-polymorphic/django-polymorphic/jobs/262018540\r\n\r\nI don't know why this happens, but should look at it at some point.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/309", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/309/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/309/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/309", "id": 246954396, "node_id": "MDU6SXNzdWUyNDY5NTQzOTY=", "number": 309, "title": "Create Release v1.3", "user": {"login": "jstarcher", "id": 1258156, "node_id": "MDQ6VXNlcjEyNTgxNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1258156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstarcher", "html_url": "https://github.com/jstarcher", "followers_url": "https://api.github.com/users/jstarcher/followers", "following_url": "https://api.github.com/users/jstarcher/following{/other_user}", "gists_url": "https://api.github.com/users/jstarcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstarcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstarcher/subscriptions", "organizations_url": "https://api.github.com/users/jstarcher/orgs", "repos_url": "https://api.github.com/users/jstarcher/repos", "events_url": "https://api.github.com/users/jstarcher/events{/privacy}", "received_events_url": "https://api.github.com/users/jstarcher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-01T04:50:38Z", "updated_at": "2017-08-01T09:44:04Z", "closed_at": "2017-08-01T09:44:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you please consider creating a release so that the djstripe project can officially pickup some changes sitting in master? The project is blocked on their release from this specifically.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/308", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/308/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/308/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/308", "id": 245742092, "node_id": "MDU6SXNzdWUyNDU3NDIwOTI=", "number": 308, "title": "Proxies in django polymorphic", "user": {"login": "Kurdakov", "id": 5281586, "node_id": "MDQ6VXNlcjUyODE1ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5281586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kurdakov", "html_url": "https://github.com/Kurdakov", "followers_url": "https://api.github.com/users/Kurdakov/followers", "following_url": "https://api.github.com/users/Kurdakov/following{/other_user}", "gists_url": "https://api.github.com/users/Kurdakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kurdakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kurdakov/subscriptions", "organizations_url": "https://api.github.com/users/Kurdakov/orgs", "repos_url": "https://api.github.com/users/Kurdakov/repos", "events_url": "https://api.github.com/users/Kurdakov/events{/privacy}", "received_events_url": "https://api.github.com/users/Kurdakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-26T14:31:20Z", "updated_at": "2017-11-20T13:49:38Z", "closed_at": "2017-11-20T13:49:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Proxies in Django  are usually used for separating admin interface for some subsets of objects\r\n\r\nlet's take django-polymorphic pexp example \r\nI'd like to have Projects to be grouped in separate admin, so, additionally to pexp example define\r\n\r\nin models.py\r\n```\r\nclass ProjectProxy(Project):\r\n    class Meta:\r\n        proxy = True\r\n```\r\nin admin.py\r\n```\r\nclass ProjectProxyAdmin(admin.ModelAdmin):\r\n    model = ProjectProxy\r\nadmin.site.register(ProjectProxy, ProjectProxyAdmin)\r\n```\r\nafter creating\r\nProxyProject objects are safe in separate admin,\r\nProxyProject objects are also listed in Project admin,\r\nbut when they are clicked - there is 403 Forbidden message.\r\n\r\nnow it is possible to add ProxyProject  to\r\n```\r\nclass ProjectAdmin(PolymorphicParentModelAdmin):\r\n    base_model = Project\r\n    list_filter = (PolymorphicChildModelFilter,)\r\n    child_models = (Project, ArtProject, ResearchProject,ProjectProxy)\r\n```\r\nbut then - ProjectProxy is listed in admin/pexp/project/add/ types,  but is absolutely not needed here - if I want to have new Project objects - it does not mean I want to clutter the admin interface with spurious proxy objects\r\n\r\nso is it possible to have either\r\n\r\n1) not raise forbidden for objects in Projects at /admin/pexp/project/ ( if model is not listed as child_models,but for proxy it's base is in child models)\r\n2) ability to explicitly exclude models registered child_models from a list of available models in admin/pexp/project/add/\r\n\r\nthe second option can be achieved by  having PolymorphicParentModelAdmin field skipProxies\r\nand then in def get_child_type_choices(self, request, action):\r\nhave\r\n```\r\nif skipProxies and model._meta.proxy == True:\r\n                continue\r\n```\r\nP.S. in above illustrative example it makes no sense to have all Projects in both Proxy admin and in normal polymorphic admin, but it really makes sense if a desire is  to place all ArtProject objects in a separate admin:\r\n```\r\nclass ArtProjectProxy(ArtProject):\r\n    class Meta:\r\n        proxy = True\r\n\r\nclass ArtProjectProxyAdmin(admin.ModelAdmin):\r\n    model = ArtProjectProxy\r\n    def get_queryset(self, request):\r\n        return ArtProject.objects.all()\r\n```\r\nstill - it will cause above mentioned problems ( 403 error or list of additional ArtProjectProxy in polymorphic admin )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/302", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/302/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/302/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/302", "id": 242524634, "node_id": "MDU6SXNzdWUyNDI1MjQ2MzQ=", "number": 302, "title": "AttributeError: type object 'FeedbackBase' has no attribute 'polymorphic_primary_key_name'", "user": {"login": "vosi", "id": 758024, "node_id": "MDQ6VXNlcjc1ODAyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/758024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vosi", "html_url": "https://github.com/vosi", "followers_url": "https://api.github.com/users/vosi/followers", "following_url": "https://api.github.com/users/vosi/following{/other_user}", "gists_url": "https://api.github.com/users/vosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vosi/subscriptions", "organizations_url": "https://api.github.com/users/vosi/orgs", "repos_url": "https://api.github.com/users/vosi/repos", "events_url": "https://api.github.com/users/vosi/events{/privacy}", "received_events_url": "https://api.github.com/users/vosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-12T21:42:48Z", "updated_at": "2017-11-20T14:08:15Z", "closed_at": "2017-11-20T14:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nThe following content types are stale and need to be deleted:\r\n\r\n    app | deleted_model1\r\n    app | deleted_model2\r\n\r\nAny objects related to these content types by a foreign key will also\r\nbe deleted. Are you sure you want to delete these content types?\r\nIf you're unsure, answer 'no'.\r\n\r\n    Type 'yes' to continue, or 'no' to cancel: yes\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 14, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 294, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 345, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/commands/migrate.py\", line 224, in handle\r\n    self.verbosity, self.interactive, connection.alias, apps=post_migrate_apps, plan=plan,\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/sql.py\", line 53, in emit_post_migrate_signal\r\n    **kwargs\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/dispatch/dispatcher.py\", line 191, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/contenttypes/management.py\", line 166, in update_contenttypes\r\n    ct.delete()\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 957, in delete\r\n    collector.collect([self], keep_parents=keep_parents)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/deletion.py\", line 226, in collect\r\n    elif sub_objs:\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/query.py\", line 264, in __nonzero__\r\n    return type(self).__bool__(self)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/query.py\", line 260, in __bool__\r\n    self._fetch_all()\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/query.py\", line 1087, in _fetch_all\r\n    self._result_cache = list(self.iterator())\r\n  File \"/usr/local/lib/python2.7/dist-packages/polymorphic/query.py\", line 53, in _polymorhic_iterator\r\n    real_results = queryset._get_real_instances(base_result_objects)\r\n  File \"/usr/local/lib/python2.7/dist-packages/polymorphic/query.py\", line 362, in _get_real_instances\r\n    pk_name = self.model.polymorphic_primary_key_name\r\nAttributeError: type object 'FeedbackBase' has no attribute 'polymorphic_primary_key_name'\r\n```\r\n\r\napp.deleted_model1, app.deleted_model2 has nothing to do with PolymorphicModel\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/297", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/297/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/297/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/297", "id": 238277888, "node_id": "MDU6SXNzdWUyMzgyNzc4ODg=", "number": 297, "title": "DeprecationWarning: on_delete will be a required arg for ForeignKey", "user": {"login": "langston-barrett", "id": 4294323, "node_id": "MDQ6VXNlcjQyOTQzMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4294323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/langston-barrett", "html_url": "https://github.com/langston-barrett", "followers_url": "https://api.github.com/users/langston-barrett/followers", "following_url": "https://api.github.com/users/langston-barrett/following{/other_user}", "gists_url": "https://api.github.com/users/langston-barrett/gists{/gist_id}", "starred_url": "https://api.github.com/users/langston-barrett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/langston-barrett/subscriptions", "organizations_url": "https://api.github.com/users/langston-barrett/orgs", "repos_url": "https://api.github.com/users/langston-barrett/repos", "events_url": "https://api.github.com/users/langston-barrett/events{/privacy}", "received_events_url": "https://api.github.com/users/langston-barrett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-23T23:53:27Z", "updated_at": "2017-08-07T22:21:22Z", "closed_at": "2017-08-07T22:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there: When testing this with `python3 -Wall`, I get the following warning:\r\n```\r\n/nix/store/5r7yazk3z29584sfrzn80l8bxla953x4-python3.6-django-polymorphic-1.2/lib/python3.6/site-packages/polymorphic/models.py:41: RemovedInDjango20Warning: on_delete will be a required arg for ForeignKey in Django 2.0. Set it to models.CASCADE on models and in existing migrations if you want to maintain the current default behavior. See https://docs.djangoproject.com/en/1.11/ref/models/fields/#django.db.models.ForeignKey.on_delete\r\n  related_name='polymorphic_%(app_label)s.%(class)s_set+')\r\n```\r\nMight be good to future-proof the code that uses `ForeignKey` in this project!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/292", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/292/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/292/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/292", "id": 233428736, "node_id": "MDU6SXNzdWUyMzM0Mjg3MzY=", "number": 292, "title": "Django 2.0 warning", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-04T11:49:47Z", "updated_at": "2018-02-05T13:11:20Z", "closed_at": "2018-02-05T13:11:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I figure it's best raise this early.\r\n\r\nAfter #289, we get the following warning on Django 1.11:\r\n\r\n> `if not opts.managers or cls._requires_legacy_default_manager():`\r\n> /home/adys/src/django/django-polymorphic/.tox/py27-django111/lib/python2.7/site-packages/django/db/models/base.py:363: RemovedInDjango20Warning: Managers from concrete parents will soon qualify as default managers. As a result, the 'objects' manager won't be created (or recreated) automatically anymore on 'polymorphic.MgrInheritC' and 'mgrB' declared on 'polymorphic.MgrInheritB' will be promoted to default manager. You can declare explicitly `objects = models.Manager()` on 'MgrInheritC' to keep things the way they are or you can switch to the new behavior right away by setting `Meta.manager_inheritance_from_future` to `True`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/287", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/287/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/287/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/287", "id": 228999653, "node_id": "MDU6SXNzdWUyMjg5OTk2NTM=", "number": 287, "title": "Drop support for old Django versions?", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-16T11:29:56Z", "updated_at": "2017-08-29T16:41:43Z", "closed_at": "2017-08-29T16:41:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Anyone opposed to dropping support for Django versions older than 1.10? Django 1.11 is now supported in the latest version, 1.10 and 1.11 are the only versions which are still supported upstream, and it looks like there's actually a lot of hacks for these old versions.\r\n\r\nThis would also mean dropping Python 2.6 support.\r\n\r\nI can work on a PR for it if accepted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/286", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/286/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/286/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/286", "id": 228524257, "node_id": "MDU6SXNzdWUyMjg1MjQyNTc=", "number": 286, "title": "Querying by model type specifing query doesn't work", "user": {"login": "faxioman", "id": 943944, "node_id": "MDQ6VXNlcjk0Mzk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/943944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faxioman", "html_url": "https://github.com/faxioman", "followers_url": "https://api.github.com/users/faxioman/followers", "following_url": "https://api.github.com/users/faxioman/following{/other_user}", "gists_url": "https://api.github.com/users/faxioman/gists{/gist_id}", "starred_url": "https://api.github.com/users/faxioman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faxioman/subscriptions", "organizations_url": "https://api.github.com/users/faxioman/orgs", "repos_url": "https://api.github.com/users/faxioman/repos", "events_url": "https://api.github.com/users/faxioman/events{/privacy}", "received_events_url": "https://api.github.com/users/faxioman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-14T07:25:09Z", "updated_at": "2017-11-20T14:19:15Z", "closed_at": "2017-11-20T14:19:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI'm trying a query like:\r\n\r\n```\r\nmy_polymorphic_qs.filter(myapplabel__MyModel___myfield='something')\r\n```\r\nbut I get this error:\r\n\r\n```\r\nmodule 'django.db.models' has no attribute 'get_model'\r\n```\r\n\r\nI see in query_translate.py/translate_polymorphic_field_path method that you are using models.get_model ... maybe is not working in recent django versions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/283", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/283/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/283/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/283", "id": 226883847, "node_id": "MDU6SXNzdWUyMjY4ODM4NDc=", "number": 283, "title": "Anyone using this with django 1.11 and python 3.5? ", "user": {"login": "Ryanb58", "id": 3086302, "node_id": "MDQ6VXNlcjMwODYzMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3086302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryanb58", "html_url": "https://github.com/Ryanb58", "followers_url": "https://api.github.com/users/Ryanb58/followers", "following_url": "https://api.github.com/users/Ryanb58/following{/other_user}", "gists_url": "https://api.github.com/users/Ryanb58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryanb58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryanb58/subscriptions", "organizations_url": "https://api.github.com/users/Ryanb58/orgs", "repos_url": "https://api.github.com/users/Ryanb58/repos", "events_url": "https://api.github.com/users/Ryanb58/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryanb58/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-07T18:48:17Z", "updated_at": "2017-05-07T20:06:50Z", "closed_at": "2017-05-07T20:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has this library been updated to support django 1.11 and python 3.5 yet? I've only seen one PR go through about the subject. Has anyone else gotten it working? \r\n\r\nOn my local machine, migrations aren't identified for creation.\r\ni.e.:\r\n```\r\n$ python manage.py makemigrations\r\nNo changes detected\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/281", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/281/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/281/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/281", "id": 226152425, "node_id": "MDU6SXNzdWUyMjYxNTI0MjU=", "number": 281, "title": "Preferred method to create an object with a PolymorphicModel field through code?", "user": {"login": "mdhari", "id": 810521, "node_id": "MDQ6VXNlcjgxMDUyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/810521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdhari", "html_url": "https://github.com/mdhari", "followers_url": "https://api.github.com/users/mdhari/followers", "following_url": "https://api.github.com/users/mdhari/following{/other_user}", "gists_url": "https://api.github.com/users/mdhari/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdhari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdhari/subscriptions", "organizations_url": "https://api.github.com/users/mdhari/orgs", "repos_url": "https://api.github.com/users/mdhari/repos", "events_url": "https://api.github.com/users/mdhari/events{/privacy}", "received_events_url": "https://api.github.com/users/mdhari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-04T00:42:59Z", "updated_at": "2017-11-20T14:24:21Z", "closed_at": "2017-11-20T14:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have my models setup like this:\r\n```\r\nclass Response(PolymorphicModel):\r\n    pass\r\n\r\nclass RadioResponse(Response):\r\n    pass\r\n\r\nclass LongTextResponse(Response):\r\n    pass\r\n\r\nclass Question(models.Model):\r\n    response_type = models.ForeignKey(Response, related_name=\"+\")\r\n```\r\nWhat's the preferred way to create an object with a PolymorphicModel. I thought this would work:\r\n```\r\nQuestion.objects.get_or_create(\r\n    response_type = LongTextResponse.objects.create(),\r\n)\r\n```\r\nBut I'm getting a `ContentType matching query does not exist.` in the admin panel.\r\n\r\nWhen I use the Parent/Child Admin panel, I'm able to create it easily. But I need to do this through code. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/272", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/272/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/272/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/272", "id": 213752046, "node_id": "MDU6SXNzdWUyMTM3NTIwNDY=", "number": 272, "title": "Order for first()/last() is reversed when getting polymorphic objects.", "user": {"login": "antwan", "id": 3027728, "node_id": "MDQ6VXNlcjMwMjc3Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3027728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antwan", "html_url": "https://github.com/antwan", "followers_url": "https://api.github.com/users/antwan/followers", "following_url": "https://api.github.com/users/antwan/following{/other_user}", "gists_url": "https://api.github.com/users/antwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/antwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antwan/subscriptions", "organizations_url": "https://api.github.com/users/antwan/orgs", "repos_url": "https://api.github.com/users/antwan/repos", "events_url": "https://api.github.com/users/antwan/events{/privacy}", "received_events_url": "https://api.github.com/users/antwan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-13T12:27:17Z", "updated_at": "2017-03-13T12:28:11Z", "closed_at": "2017-03-13T12:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "`.last()` is meant to return the last object from the queryset, ie the one with the highest PK by default, but it's returning the first instead.\r\n\r\nSame goes for `.first()` which returns the last.\r\n\r\nThis is not the case when dealing with non polymorphic objects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/270", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/270/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/270/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/270", "id": 211362348, "node_id": "MDU6SXNzdWUyMTEzNjIzNDg=", "number": 270, "title": "PolymorphicModel fails if swapped with another Model in Django 1.10", "user": {"login": "angelkenneth", "id": 8890692, "node_id": "MDQ6VXNlcjg4OTA2OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8890692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelkenneth", "html_url": "https://github.com/angelkenneth", "followers_url": "https://api.github.com/users/angelkenneth/followers", "following_url": "https://api.github.com/users/angelkenneth/following{/other_user}", "gists_url": "https://api.github.com/users/angelkenneth/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelkenneth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelkenneth/subscriptions", "organizations_url": "https://api.github.com/users/angelkenneth/orgs", "repos_url": "https://api.github.com/users/angelkenneth/repos", "events_url": "https://api.github.com/users/angelkenneth/events{/privacy}", "received_events_url": "https://api.github.com/users/angelkenneth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-02T11:21:18Z", "updated_at": "2018-04-16T10:30:49Z", "closed_at": "2018-04-16T09:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I developed a reusable app called `alpha` that provides the `Alpha` model (that is expected to get inherited by another model `AnotherAlpha`) using `django-polymorphic` and `swapper`.  Then created the `beta` app that inherits `alpha`'s `AlphaAbstract` so that users can decide to use a different Model instead of the default.  After swapping to `beta`'s implementation of `Alpha` i get this error:\r\n\r\n```\r\n  [...]\r\n  File \"/home/ghelo/PycharmProjects/capricorn/PolySwapper/alpha/models.py\", line 10, in <module>\r\n    class Alpha(AlphaAbstract):\r\n  File \"/home/ghelo/PycharmProjects/capricorn/lib/python3.6/site-packages/polymorphic/base.py\", line 99, in __new__\r\n    self.validate_model_manager(new_class.objects, model_name, 'objects')\r\n  File \"/home/ghelo/PycharmProjects/capricorn/lib/python3.6/site-packages/django/db/models/manager.py\", line 198, in __get__\r\n    cls._meta.swapped,\r\n\r\nAttributeError: Manager isn't available; 'alpha.Alpha' has been swapped for 'beta.Beta'\r\n```\r\n\r\n---------------------\r\n## Replication\r\n\r\n**1.** Run these commands:\r\n```bash\r\npip install Django\r\ndjango-admin startproject PolySwapper\r\ncd PolySwapper\r\ndjango-admin startapp alpha\r\ndjango-admin startapp beta\r\npip install django-polymorphic swapper\r\n```\r\nAs of reporting this issue the package versions are:\r\n```\r\nDjango==1.10.6\r\nswapper==1.0.0\r\ndjango-polymorphic==1.1\r\n```\r\n**2.** Create models Alpha and Beta\r\n```python\r\n# alpha/models.py\r\nimport swapper\r\nfrom polymorphic.models import PolymorphicModel\r\nclass AlphaAbstract(PolymorphicModel):\r\n    class Meta:\r\n        abstract = True\r\nclass Alpha(AlphaAbstract):\r\n    class Meta:\r\n        swappable = swapper.swappable_setting('alpha', \"Alpha\")\r\nclass AnotherAlpha(Alpha):\r\n    pass\r\n\r\n# beta/models.py\r\nfrom alpha.models import AlphaAbstract\r\nclass Beta(AlphaAbstract):\r\n    pass\r\n```\r\n**3.** Run `./manage.py makemigrations`\r\n**4.** Add `alpha` and `beta` to `settings.py`:\r\n```python\r\nINSTALLED_APPS = [\r\n    ...\r\n    'alpha',\r\n    'beta',\r\n]\r\n```\r\n**5.** Append the following to `settings.py` like so:\r\n```python\r\nALPHA_ALPHA_MODEL = \"beta.Beta\"\r\n```\r\n\r\n**6.** Run `./manage.py shell`  (or any command) and you'll get the error:\r\n```\r\nAttributeError: Manager isn't available; 'alpha.Alpha' has been swapped for 'beta.Beta'\r\n```\r\n\r\n## Note on Django 1.9\r\n\r\nI tried replicating this issue using `Django~1.9` and i get a different error, but i think this is a bug with Django:\r\n```\r\nalpha.AnotherAlpha.alpha_ptr: (fields.E301) Field defines a relation with the model 'alpha.Alpha', which has been swapped out.\r\n\tHINT: Update the relation to point at 'settings.ALPHA_ALPHA_MODEL'.\r\n```\r\n\r\nThis can be fixed by explicitly declaring the parent_link, like so:\r\n```python\r\nclass AnotherAlpha(Alpha):\r\n    alpha_ptr = models.OneToOneField(\r\n        auto_created=True, on_delete=CASCADE,\r\n        parent_link=True, primary_key=True, serialize=False,\r\n        to=swapper.get_model_name('alpha', \"Alpha\"))\r\n```\r\n\r\nAfter that the issue never gets raised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/267", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/267/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/267/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/267", "id": 209105710, "node_id": "MDU6SXNzdWUyMDkxMDU3MTA=", "number": 267, "title": "Only base classes provided in Django 1.11b1", "user": {"login": "adamcharnock", "id": 138215, "node_id": "MDQ6VXNlcjEzODIxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/138215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcharnock", "html_url": "https://github.com/adamcharnock", "followers_url": "https://api.github.com/users/adamcharnock/followers", "following_url": "https://api.github.com/users/adamcharnock/following{/other_user}", "gists_url": "https://api.github.com/users/adamcharnock/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcharnock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcharnock/subscriptions", "organizations_url": "https://api.github.com/users/adamcharnock/orgs", "repos_url": "https://api.github.com/users/adamcharnock/repos", "events_url": "https://api.github.com/users/adamcharnock/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcharnock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-21T10:42:51Z", "updated_at": "2017-04-26T14:33:31Z", "closed_at": "2017-04-26T14:33:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm testing a project against Django 1.11b1 and it seems that only the base model is being returned in the resulting ``PolymorphicQuerySet``. Only upon calling ``get_real_instances()`` to I get the actual model instances.\r\n\r\nHere is my working:\r\n\r\n```python\r\n>>> Action.objects.all()\r\n# 'Action' is the base class\r\n<PolymorphicQuerySet [<Action: Action object>, <Action: Action object>, <Action: Action object>, <Action: Action object>]>\r\n>>> Action.objects.all().get_real_instances()\r\n# Now the resolution works\r\n[<EmailAction: Email toby@example.com>, <EmailAction: Email adam@example.com>, <EmailAction: Email foo@example.com>, <EmailAction: Email bar@example.com>]\r\n```\r\n\r\nThis seemed to work when testing against Django 1.10.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/265", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/265/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/265/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/265", "id": 206112494, "node_id": "MDU6SXNzdWUyMDYxMTI0OTQ=", "number": 265, "title": "oops", "user": {"login": "DDevine", "id": 913394, "node_id": "MDQ6VXNlcjkxMzM5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/913394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DDevine", "html_url": "https://github.com/DDevine", "followers_url": "https://api.github.com/users/DDevine/followers", "following_url": "https://api.github.com/users/DDevine/following{/other_user}", "gists_url": "https://api.github.com/users/DDevine/gists{/gist_id}", "starred_url": "https://api.github.com/users/DDevine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DDevine/subscriptions", "organizations_url": "https://api.github.com/users/DDevine/orgs", "repos_url": "https://api.github.com/users/DDevine/repos", "events_url": "https://api.github.com/users/DDevine/events{/privacy}", "received_events_url": "https://api.github.com/users/DDevine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-08T06:56:01Z", "updated_at": "2017-02-08T06:56:35Z", "closed_at": "2017-02-08T06:56:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/263", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/263/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/263/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/263", "id": 205765392, "node_id": "MDU6SXNzdWUyMDU3NjUzOTI=", "number": 263, "title": "TypeError: Can't convert 'bytes' object to str implicitly", "user": {"login": "DDevine", "id": 913394, "node_id": "MDQ6VXNlcjkxMzM5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/913394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DDevine", "html_url": "https://github.com/DDevine", "followers_url": "https://api.github.com/users/DDevine/followers", "following_url": "https://api.github.com/users/DDevine/following{/other_user}", "gists_url": "https://api.github.com/users/DDevine/gists{/gist_id}", "starred_url": "https://api.github.com/users/DDevine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DDevine/subscriptions", "organizations_url": "https://api.github.com/users/DDevine/orgs", "repos_url": "https://api.github.com/users/DDevine/repos", "events_url": "https://api.github.com/users/DDevine/events{/privacy}", "received_events_url": "https://api.github.com/users/DDevine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-07T02:10:37Z", "updated_at": "2017-04-06T12:14:03Z", "closed_at": "2017-04-06T12:14:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a new object via Django Admin which triggers a pop-up interface I ran into this Python3 incompatible implicit type conversion. \r\n```\r\nRequest Method: \tGET\r\nRequest URL: \thttp://127.0.0.1/admin/example/scene/add/?_to_field=id&_popup=1\r\nDjango Version: \t1.10.5\r\nException Type: \tTypeError\r\nException Value: \t\r\n\r\nCan't convert 'bytes' object to str implicitly\r\n\r\nException Location: \t/opt/example-env/lib/python3.5/site-packages/polymorphic/admin/parentadmin.py in add_type_view, line 362\r\nPython Executable: \t/opt/example-env/bin/python\r\nPython Version: \t3.5.2\r\n````\r\nThe problematic line is:\r\n```\r\nextra_qs = ''\r\nif request.META['QUERY_STRING']:\r\n    extra_qs = '&' + request.META['QUERY_STRING']\r\n```\r\n\r\nThe value of META[QUERY_STRING] is:\r\n```b'_to_field=id&_popup=1'```\r\nWhich as you can see is a byte object, and it is being concatinated with the '+' operator which is trigging an invalid implicit conversion in Python 3. The fix I used is to use string substitution...\r\n```\r\nextra_qs = \"&%s\" % request.META['QUERY_STRING']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/261", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/261/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/261/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/261", "id": 205610668, "node_id": "MDU6SXNzdWUyMDU2MTA2Njg=", "number": 261, "title": "Polymorphic menu is not entirely visible when there are >2 choices and multiple inlines in Django Admin", "user": {"login": "pawelad", "id": 7062874, "node_id": "MDQ6VXNlcjcwNjI4NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7062874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawelad", "html_url": "https://github.com/pawelad", "followers_url": "https://api.github.com/users/pawelad/followers", "following_url": "https://api.github.com/users/pawelad/following{/other_user}", "gists_url": "https://api.github.com/users/pawelad/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawelad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawelad/subscriptions", "organizations_url": "https://api.github.com/users/pawelad/orgs", "repos_url": "https://api.github.com/users/pawelad/repos", "events_url": "https://api.github.com/users/pawelad/events{/privacy}", "received_events_url": "https://api.github.com/users/pawelad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-06T15:05:50Z", "updated_at": "2017-04-06T12:15:46Z", "closed_at": "2017-04-06T12:15:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hiya,\r\n\r\nI noticed a rendering bug when Django Admin has more then two polymophic inline models and the first inline model has more then two choices. The screenshot should make it clearer:\r\n![screen shot 2017-02-06 at 15 00 20](https://cloud.githubusercontent.com/assets/7062874/22652212/89548158-ec7d-11e6-92fe-81b9ae7e4181.png)\r\n\r\nThe menu has three entries, but only two are visible, as the third one is rendered 'below' the second inline form.\r\n\r\nI fixed it by adding `z-index: 1000` to `.polymorphic-type-menu` class:\r\n\r\n![screen shot 2017-02-06 at 15 00 51](https://cloud.githubusercontent.com/assets/7062874/22652250/a9e8a9da-ec7d-11e6-8954-04c875767150.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/260", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/260/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/260/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/260", "id": 204897279, "node_id": "MDU6SXNzdWUyMDQ4OTcyNzk=", "number": 260, "title": "How to get base class?", "user": {"login": "Kurdakov", "id": 5281586, "node_id": "MDQ6VXNlcjUyODE1ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5281586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kurdakov", "html_url": "https://github.com/Kurdakov", "followers_url": "https://api.github.com/users/Kurdakov/followers", "following_url": "https://api.github.com/users/Kurdakov/following{/other_user}", "gists_url": "https://api.github.com/users/Kurdakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kurdakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kurdakov/subscriptions", "organizations_url": "https://api.github.com/users/Kurdakov/orgs", "repos_url": "https://api.github.com/users/Kurdakov/repos", "events_url": "https://api.github.com/users/Kurdakov/events{/privacy}", "received_events_url": "https://api.github.com/users/Kurdakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-02T14:58:06Z", "updated_at": "2017-11-20T14:30:32Z", "closed_at": "2017-11-20T14:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for just a basic question - but I searched and did not find answer.\r\n\r\nI have something like:\r\n```\r\nclass Project(PolymorphicModel):\r\n   topic = models.CharField(max_length=30)\r\n\r\nclass ArtProject(Project):\r\n    artist = models.CharField(max_length=30)\r\n\r\nclass ResearchProject(Project):\r\n    supervisor =  models.CharField(max_length=30)\r\n```\r\n\r\nnow I create ArtProject or ResearchProject  via gui, but later in I need to access objects via another gui which lists only base object types. So while I create ArtProject I need to know  base  object type to associate base type and concrete object, but there is no way to obtain it \r\nbecause\r\nContentType.objects.get_for_id(object.polymorphic_ctype_id) gives me current type, \r\nbut I need base type and there is no something like base_ctype_id\r\n\r\nso how to get base type ( class Project(PolymorphicModel) ) from  derived object of class ArtProject or class ResearchProject?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/257", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/257/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/257/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/257", "id": 201135424, "node_id": "MDU6SXNzdWUyMDExMzU0MjQ=", "number": 257, "title": "Expressions don't work with order_by", "user": {"login": "hornn", "id": 11283944, "node_id": "MDQ6VXNlcjExMjgzOTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/11283944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hornn", "html_url": "https://github.com/hornn", "followers_url": "https://api.github.com/users/hornn/followers", "following_url": "https://api.github.com/users/hornn/following{/other_user}", "gists_url": "https://api.github.com/users/hornn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hornn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hornn/subscriptions", "organizations_url": "https://api.github.com/users/hornn/orgs", "repos_url": "https://api.github.com/users/hornn/repos", "events_url": "https://api.github.com/users/hornn/events{/privacy}", "received_events_url": "https://api.github.com/users/hornn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-16T22:51:56Z", "updated_at": "2017-05-22T10:54:44Z", "closed_at": "2017-05-22T10:53:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django-1.8 expressions are supported by order_by(), in addition to field names.\r\nFor example:\r\n`no_poly = no_poly.order_by(Lower('name').desc())`\r\nis translated to `ORDER BY LOWER(\"no_poly_table_name\".\"name\") DESC`\r\n\r\nHowever, when the model is polymorphic the same commands fail with parsing exceptions:\r\n```\r\nfrom django.db.models.functions import Lower\r\n\r\npoly = poly.order_by(Lower('name'))\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"lib/python2.7/site-packages/polymorphic/query.py\", line 121, in order_by\r\n    new_args = [translate_polymorphic_field_path(self.model, a) for a in args]\r\n  File \"lib/python2.7/site-packages/polymorphic/query_translate.py\", line 151, in translate_polymorphic_field_path\r\n    classname, sep, pure_field_path = field_path.partition('___')\r\nAttributeError: 'Lower' object has no attribute 'partition'\r\n```\r\n```\r\nfrom django.db.models import F\r\n\r\npoly = poly.order_by('name')  # old syntax works\r\npoly = poly.order_by(F('name'))  # expression fails\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"lib/python2.7/site-packages/polymorphic/query.py\", line 121, in order_by\r\n    new_args = [translate_polymorphic_field_path(self.model, a) for a in args]\r\n  File \"lib/python2.7/site-packages/polymorphic/query_translate.py\", line 151, in translate_polymorphic_field_path\r\n    classname, sep, pure_field_path = field_path.partition('___')\r\nAttributeError: 'F' object has no attribute 'partition'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/255", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/255/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/255/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/255", "id": 194634595, "node_id": "MDU6SXNzdWUxOTQ2MzQ1OTU=", "number": 255, "title": "AttributeError: 'tuple' object has no attribute 'clone'", "user": {"login": "Mild-error", "id": 24479781, "node_id": "MDQ6VXNlcjI0NDc5Nzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/24479781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mild-error", "html_url": "https://github.com/Mild-error", "followers_url": "https://api.github.com/users/Mild-error/followers", "following_url": "https://api.github.com/users/Mild-error/following{/other_user}", "gists_url": "https://api.github.com/users/Mild-error/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mild-error/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mild-error/subscriptions", "organizations_url": "https://api.github.com/users/Mild-error/orgs", "repos_url": "https://api.github.com/users/Mild-error/repos", "events_url": "https://api.github.com/users/Mild-error/events{/privacy}", "received_events_url": "https://api.github.com/users/Mild-error/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-09T16:13:51Z", "updated_at": "2016-12-19T09:57:40Z", "closed_at": "2016-12-19T09:57:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "this comes up every time i try and run but i have no idea why.\r\n\r\n    rectangle1 = Rectangle((0,6.3) , ((63-6.3),63))\r\n    rectangle1.draw(win)\r\n\r\nthis is the bit of code its having a problem with, and this is the error that comes up:\r\n\r\n\r\n  File \"<console>\", line 1, in <module>\r\n  File \"N:\\Downloads\\Chrome Downloads\\up785066 Python Project.py\", line 7, in main\r\n    draw1(winsize, win)\r\n  File \"N:\\Downloads\\Chrome Downloads\\up785066 Python Project.py\", line 56, in draw1\r\n    rectangle1 = Rectangle((0,6.3) , ((63-6.3),63))\r\n  File \"c:\\python34\\lib\\site-packages\\graphics.py\", line 565, in __init__\r\n    _BBox.__init__(self, p1, p2)\r\n  File \"c:\\python34\\lib\\site-packages\\graphics.py\", line 544, in __init__\r\n    self.p1 = p1.clone()\r\nAttributeError: 'tuple' object has no attribute 'clone'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/253", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/253/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/253/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/253", "id": 190453622, "node_id": "MDU6SXNzdWUxOTA0NTM2MjI=", "number": 253, "title": "PolymorphicChildModelAdmin does not fix breadcrumbs", "user": {"login": "randomshinichi", "id": 9956122, "node_id": "MDQ6VXNlcjk5NTYxMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9956122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randomshinichi", "html_url": "https://github.com/randomshinichi", "followers_url": "https://api.github.com/users/randomshinichi/followers", "following_url": "https://api.github.com/users/randomshinichi/following{/other_user}", "gists_url": "https://api.github.com/users/randomshinichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/randomshinichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randomshinichi/subscriptions", "organizations_url": "https://api.github.com/users/randomshinichi/orgs", "repos_url": "https://api.github.com/users/randomshinichi/repos", "events_url": "https://api.github.com/users/randomshinichi/events{/privacy}", "received_events_url": "https://api.github.com/users/randomshinichi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-19T00:29:45Z", "updated_at": "2017-11-20T14:33:39Z", "closed_at": "2017-11-20T14:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a list display of Transactions, so far so good.\r\n![1](https://cloud.githubusercontent.com/assets/9956122/20451228/6081a2b6-adf7-11e6-980b-18cb84251288.png)\r\n\r\nHowever once I click on a particular Transaction, the breadcrumb becomes the child model, and there's no way to go back to the Transaction list display - only the TransactionNordea list display.\r\n![2](https://cloud.githubusercontent.com/assets/9956122/20451252/8a8ed844-adf7-11e6-8d7d-f7cc788492e3.png)\r\n\r\nThis is my code so far, did I do everything right? Should I use inlines after all?\r\n```\r\n@admin.register(models.Transaction)\r\nclass TransactionParentAdmin(PolymorphicParentModelAdmin):\r\n    base_model = models.Transaction\r\n    child_models = [models.TransactionNordea]\r\n    base_list_display = (\"id\", \"payer\", \"amount_received\", \"client\")\r\n\r\n\r\nclass TransactionChildAdmin(PolymorphicChildModelAdmin):\r\n    base_model = models.Transaction\r\n\r\n\r\n@admin.register(models.TransactionNordea)\r\nclass TransactionNordeaAdmin(TransactionChildAdmin):\r\n    base_model = models.TransactionNordea\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/251", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/251/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/251/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/251", "id": 187747093, "node_id": "MDU6SXNzdWUxODc3NDcwOTM=", "number": 251, "title": "Inline formset fields have 'required' attribute (Django 1.10 issue)", "user": {"login": "adamcharnock", "id": 138215, "node_id": "MDQ6VXNlcjEzODIxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/138215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcharnock", "html_url": "https://github.com/adamcharnock", "followers_url": "https://api.github.com/users/adamcharnock/followers", "following_url": "https://api.github.com/users/adamcharnock/following{/other_user}", "gists_url": "https://api.github.com/users/adamcharnock/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcharnock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcharnock/subscriptions", "organizations_url": "https://api.github.com/users/adamcharnock/orgs", "repos_url": "https://api.github.com/users/adamcharnock/repos", "events_url": "https://api.github.com/users/adamcharnock/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcharnock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-07T15:49:37Z", "updated_at": "2018-08-28T12:39:31Z", "closed_at": "2018-08-28T12:39:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using ``polymorphic_inlineformset_factory()`` it seems that the resulting forms have the ``required`` HTML attribute set, even though they should actually be optional.\r\n\r\nI tracked this as far as the ``Form.use_required_attribute``, [which was added in Django 1.10](https://github.com/django/django/commit/ec6121693f112ae33b653b4364e812722d2eb567). This is now set in Django's own formset code, but isn't set by django-polymorphic.\r\n\r\nHowever, I couldn't quite figure out how to actually fix this. I also only have so much time available so unfortunately I need to move on. I hope that this will help someone find a solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/248", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/248/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/248/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/248", "id": 183002330, "node_id": "MDU6SXNzdWUxODMwMDIzMzA=", "number": 248, "title": "PIP update", "user": {"login": "BenDevelopment", "id": 6674194, "node_id": "MDQ6VXNlcjY2NzQxOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6674194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenDevelopment", "html_url": "https://github.com/BenDevelopment", "followers_url": "https://api.github.com/users/BenDevelopment/followers", "following_url": "https://api.github.com/users/BenDevelopment/following{/other_user}", "gists_url": "https://api.github.com/users/BenDevelopment/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenDevelopment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenDevelopment/subscriptions", "organizations_url": "https://api.github.com/users/BenDevelopment/orgs", "repos_url": "https://api.github.com/users/BenDevelopment/repos", "events_url": "https://api.github.com/users/BenDevelopment/events{/privacy}", "received_events_url": "https://api.github.com/users/BenDevelopment/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-14T09:21:35Z", "updated_at": "2016-10-14T10:22:08Z", "closed_at": "2016-10-14T09:28:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When will be the PIP installer updated with the last version? I need it to deploy my application :-).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/247", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/247/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/247/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/247", "id": 182829945, "node_id": "MDU6SXNzdWUxODI4Mjk5NDU=", "number": 247, "title": "when will be pip install updated?", "user": {"login": "BenDevelopment", "id": 6674194, "node_id": "MDQ6VXNlcjY2NzQxOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6674194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenDevelopment", "html_url": "https://github.com/BenDevelopment", "followers_url": "https://api.github.com/users/BenDevelopment/followers", "following_url": "https://api.github.com/users/BenDevelopment/following{/other_user}", "gists_url": "https://api.github.com/users/BenDevelopment/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenDevelopment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenDevelopment/subscriptions", "organizations_url": "https://api.github.com/users/BenDevelopment/orgs", "repos_url": "https://api.github.com/users/BenDevelopment/repos", "events_url": "https://api.github.com/users/BenDevelopment/events{/privacy}", "received_events_url": "https://api.github.com/users/BenDevelopment/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-13T15:56:33Z", "updated_at": "2016-10-13T16:06:41Z", "closed_at": "2016-10-13T16:06:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run pip install, the version is not the last one (no module named django-polymorphic during the migration). I have to copy manually the files from this github repo.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/245", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/245/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/245/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/245", "id": 181194142, "node_id": "MDU6SXNzdWUxODExOTQxNDI=", "number": 245, "title": "\"Edit on GitHub\" link in the docs returns a 404", "user": {"login": "YPCrumble", "id": 12019216, "node_id": "MDQ6VXNlcjEyMDE5MjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12019216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YPCrumble", "html_url": "https://github.com/YPCrumble", "followers_url": "https://api.github.com/users/YPCrumble/followers", "following_url": "https://api.github.com/users/YPCrumble/following{/other_user}", "gists_url": "https://api.github.com/users/YPCrumble/gists{/gist_id}", "starred_url": "https://api.github.com/users/YPCrumble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YPCrumble/subscriptions", "organizations_url": "https://api.github.com/users/YPCrumble/orgs", "repos_url": "https://api.github.com/users/YPCrumble/repos", "events_url": "https://api.github.com/users/YPCrumble/events{/privacy}", "received_events_url": "https://api.github.com/users/YPCrumble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-05T15:52:01Z", "updated_at": "2017-11-20T14:38:36Z", "closed_at": "2017-11-20T14:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I click to the docs I often want to go back to github - the \"Edit on GitHub\" link is broken, it links to https://github.com/django-polymorphic/django-polymorphic/blob/88a9c743af320644f14ece87936c9b3e292ef333/docs/index.rst currently\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/243", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/243/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/243/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/243", "id": 179230206, "node_id": "MDU6SXNzdWUxNzkyMzAyMDY=", "number": 243, "title": "modelformset_factory() got an unexpected keyword argument 'fk_name'", "user": {"login": "brigantino2", "id": 2971657, "node_id": "MDQ6VXNlcjI5NzE2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2971657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brigantino2", "html_url": "https://github.com/brigantino2", "followers_url": "https://api.github.com/users/brigantino2/followers", "following_url": "https://api.github.com/users/brigantino2/following{/other_user}", "gists_url": "https://api.github.com/users/brigantino2/gists{/gist_id}", "starred_url": "https://api.github.com/users/brigantino2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brigantino2/subscriptions", "organizations_url": "https://api.github.com/users/brigantino2/orgs", "repos_url": "https://api.github.com/users/brigantino2/repos", "events_url": "https://api.github.com/users/brigantino2/events{/privacy}", "received_events_url": "https://api.github.com/users/brigantino2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-26T13:35:20Z", "updated_at": "2016-10-04T08:34:29Z", "closed_at": "2016-10-04T08:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `polymorphic.formsets.polymorphic_modelformset_factory`, we have\n\n```\n    kwargs = {\n        ...\n        'fk_name': fk_name,\n        ...\n    }\n    FormSet = modelformset_factory(**kwargs)\n```\n\nwhile django's `modelformset_factory` does not have a `fk_name` argument, at least in the recent versions. Therefore I'm getting `modelformset_factory() got an unexpected keyword argument 'fk_name'`\nSee\nhttps://docs.djangoproject.com/en/1.10/ref/forms/models/#modelformset-factory\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/237", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/237/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/237/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/237", "id": 174825111, "node_id": "MDU6SXNzdWUxNzQ4MjUxMTE=", "number": 237, "title": "AttributeError: 'tuple' object has no attribute 'clone'", "user": {"login": "iraycd", "id": 1450984, "node_id": "MDQ6VXNlcjE0NTA5ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1450984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iraycd", "html_url": "https://github.com/iraycd", "followers_url": "https://api.github.com/users/iraycd/followers", "following_url": "https://api.github.com/users/iraycd/following{/other_user}", "gists_url": "https://api.github.com/users/iraycd/gists{/gist_id}", "starred_url": "https://api.github.com/users/iraycd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iraycd/subscriptions", "organizations_url": "https://api.github.com/users/iraycd/orgs", "repos_url": "https://api.github.com/users/iraycd/repos", "events_url": "https://api.github.com/users/iraycd/events{/privacy}", "received_events_url": "https://api.github.com/users/iraycd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 755952891, "node_id": "MDU6TGFiZWw3NTU5NTI4OTE=", "url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/labels/needs-more-info", "name": "needs-more-info", "color": "e8ba14", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-02T18:49:57Z", "updated_at": "2017-11-20T14:38:54Z", "closed_at": "2017-11-20T14:38:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "'tuple' object has no attribute 'clone'\n\nThis happens when I am using [django-ordered-model](https://github.com/bfirsh/django-ordered-model) with `PolymorphicModel` and `OrderedModel` together.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/236", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/236/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/236/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/236", "id": 174649464, "node_id": "MDU6SXNzdWUxNzQ2NDk0NjQ=", "number": 236, "title": "TemplateDoesNotExist", "user": {"login": "iraycd", "id": 1450984, "node_id": "MDQ6VXNlcjE0NTA5ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1450984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iraycd", "html_url": "https://github.com/iraycd", "followers_url": "https://api.github.com/users/iraycd/followers", "following_url": "https://api.github.com/users/iraycd/following{/other_user}", "gists_url": "https://api.github.com/users/iraycd/gists{/gist_id}", "starred_url": "https://api.github.com/users/iraycd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iraycd/subscriptions", "organizations_url": "https://api.github.com/users/iraycd/orgs", "repos_url": "https://api.github.com/users/iraycd/repos", "events_url": "https://api.github.com/users/iraycd/events{/privacy}", "received_events_url": "https://api.github.com/users/iraycd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-01T23:31:32Z", "updated_at": "2016-09-02T10:53:28Z", "closed_at": "2016-09-02T10:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "`admin/polymorphic/edit_inline/stacked.html`\nIt's not coming with the package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/227", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/227/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/227/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/227", "id": 164388227, "node_id": "MDU6SXNzdWUxNjQzODgyMjc=", "number": 227, "title": "TypeError: 'PolymorphicModelBase' object is not iterable", "user": {"login": "mekhami", "id": 8022111, "node_id": "MDQ6VXNlcjgwMjIxMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8022111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mekhami", "html_url": "https://github.com/mekhami", "followers_url": "https://api.github.com/users/mekhami/followers", "following_url": "https://api.github.com/users/mekhami/following{/other_user}", "gists_url": "https://api.github.com/users/mekhami/gists{/gist_id}", "starred_url": "https://api.github.com/users/mekhami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mekhami/subscriptions", "organizations_url": "https://api.github.com/users/mekhami/orgs", "repos_url": "https://api.github.com/users/mekhami/repos", "events_url": "https://api.github.com/users/mekhami/events{/privacy}", "received_events_url": "https://api.github.com/users/mekhami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-07T19:27:22Z", "updated_at": "2016-08-12T20:20:56Z", "closed_at": "2016-07-07T19:47:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://dpaste.com/2Z3RH41\n\n`TypeError: 'PolymorphicModelBase' object is not iterable`\n\nI am getting this error when trying to set up the admin for my polymorphic models. Here's a link to the admin for those models: https://gist.github.com/mekhami/07288765ad1b6d72ed4bda10022a0581\n\nAnd here's a link to the models themselves: https://gist.github.com/mekhami/c27333c7c217e1da07f618f8a29ed517\n\nAny insight? I think I've followed the documentation to a letter..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/225", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/225/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/225/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/225", "id": 162938034, "node_id": "MDU6SXNzdWUxNjI5MzgwMzQ=", "number": 225, "title": "Compatibility with Django 1.10: Attribute error", "user": {"login": "PetrDlouhy", "id": 156755, "node_id": "MDQ6VXNlcjE1Njc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/156755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrDlouhy", "html_url": "https://github.com/PetrDlouhy", "followers_url": "https://api.github.com/users/PetrDlouhy/followers", "following_url": "https://api.github.com/users/PetrDlouhy/following{/other_user}", "gists_url": "https://api.github.com/users/PetrDlouhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrDlouhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrDlouhy/subscriptions", "organizations_url": "https://api.github.com/users/PetrDlouhy/orgs", "repos_url": "https://api.github.com/users/PetrDlouhy/repos", "events_url": "https://api.github.com/users/PetrDlouhy/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrDlouhy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2016-06-29T14:21:21Z", "updated_at": "2016-09-12T07:50:34Z", "closed_at": "2016-09-12T07:50:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running django-polymorphic on upcoming Django 1.10, following error is raised:\n\n```\nTraceback (most recent call last):\n  File \"runtests.py\", line 83, in <module>\n    runtests()\n  File \"runtests.py\", line 80, in runtests\n    execute_from_command_line(argv)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/core/management/__init__.py\", line 341, in execute\n    django.setup()\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/apps/config.py\", line 206, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/opt/python/2.7.9/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/home/travis/build/PetrDlouhy/django-polymorphic/polymorphic/models.py\", line 31, in <module>\n    class PolymorphicModel(six.with_metaclass(PolymorphicModelBase, models.Model)):\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/django/utils/six.py\", line 808, in __new__\n    return meta(name, bases, d)\n  File \"/home/travis/build/PetrDlouhy/django-polymorphic/polymorphic/base.py\", line 90, in __new__\n    new_class._default_manager = user_manager._copy_to_model(new_class)\nAttributeError: 'PolymorphicManager' object has no attribute '_copy_to_model'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/224", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/224/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/224/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/224", "id": 162569059, "node_id": "MDU6SXNzdWUxNjI1NjkwNTk=", "number": 224, "title": "Field type incorrect in child class vs parent class", "user": {"login": "earthfront", "id": 2332095, "node_id": "MDQ6VXNlcjIzMzIwOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2332095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earthfront", "html_url": "https://github.com/earthfront", "followers_url": "https://api.github.com/users/earthfront/followers", "following_url": "https://api.github.com/users/earthfront/following{/other_user}", "gists_url": "https://api.github.com/users/earthfront/gists{/gist_id}", "starred_url": "https://api.github.com/users/earthfront/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earthfront/subscriptions", "organizations_url": "https://api.github.com/users/earthfront/orgs", "repos_url": "https://api.github.com/users/earthfront/repos", "events_url": "https://api.github.com/users/earthfront/events{/privacy}", "received_events_url": "https://api.github.com/users/earthfront/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-27T23:13:23Z", "updated_at": "2017-12-21T00:24:47Z", "closed_at": "2017-11-20T14:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry, don't have time to submit _exact_ reproduction steps.\n\n**Environment:**\nI have an abstract class with a JSONField:\nclass A:\n    json = JSONField()\n    class Meta:\n       abstract = True\n\nA polymorphic base class, and a child class:\nclass Doc(Polymorphic..., A):\n    ....\nclass ChildDoc(Doc):\n   ....\n\n**Expected behavior:**\nGet an instance of ChildDoc, use json member as a JSONField.\n\n**Actual behavior:**\nWhen I get the child class, the type of \"json\" is unicode object. Accessed via the embedded parent_ptr, it's the correct (ish) type.\n\n``` python\nIn [52]: a = Doc.objects.all().first()\nIn [53]: a?\nType:           ChildDoc\nIn [54]: a.json?\nType:        unicode\nIn [55]: a.doc_ptr.json?\nType:        dict\n```\n\nThe documentation doesn't mention any caveats like this. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/219", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/219/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/219/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/219", "id": 158851030, "node_id": "MDU6SXNzdWUxNTg4NTEwMzA=", "number": 219, "title": "PolymorphicModel's __str__", "user": {"login": "andgein", "id": 1853477, "node_id": "MDQ6VXNlcjE4NTM0Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1853477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andgein", "html_url": "https://github.com/andgein", "followers_url": "https://api.github.com/users/andgein/followers", "following_url": "https://api.github.com/users/andgein/following{/other_user}", "gists_url": "https://api.github.com/users/andgein/gists{/gist_id}", "starred_url": "https://api.github.com/users/andgein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andgein/subscriptions", "organizations_url": "https://api.github.com/users/andgein/orgs", "repos_url": "https://api.github.com/users/andgein/repos", "events_url": "https://api.github.com/users/andgein/events{/privacy}", "received_events_url": "https://api.github.com/users/andgein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-07T06:47:32Z", "updated_at": "2016-06-15T08:38:28Z", "closed_at": "2016-06-15T08:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I propose to implement default __str__ for PolymorphicModel as follow or something like:\n\n```\ndef __str__(self):\n    instance = self.get_real_instance()\n    if self.__str__ != instance.__str__:\n         return str(self.get_real_instance())\n    return str(super())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/214", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/214/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/214/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/214", "id": 154491342, "node_id": "MDU6SXNzdWUxNTQ0OTEzNDI=", "number": 214, "title": "0.9.2 didn't get a .tar.gz uploaded to PyPI correctly", "user": {"login": "kwilcox", "id": 13939, "node_id": "MDQ6VXNlcjEzOTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/13939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwilcox", "html_url": "https://github.com/kwilcox", "followers_url": "https://api.github.com/users/kwilcox/followers", "following_url": "https://api.github.com/users/kwilcox/following{/other_user}", "gists_url": "https://api.github.com/users/kwilcox/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwilcox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwilcox/subscriptions", "organizations_url": "https://api.github.com/users/kwilcox/orgs", "repos_url": "https://api.github.com/users/kwilcox/repos", "events_url": "https://api.github.com/users/kwilcox/events{/privacy}", "received_events_url": "https://api.github.com/users/kwilcox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-12T14:06:30Z", "updated_at": "2016-05-23T12:29:28Z", "closed_at": "2016-05-23T12:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "_shrug_\n\n`0.9.2` - no `.tar.gz`: https://pypi.python.org/pypi/django_polymorphic/0.9.2\n\n`0.9.1` (and all other releases) - has `.tar.gz`: https://pypi.python.org/pypi/django_polymorphic/0.9.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/213", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/213/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/213/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/213", "id": 154325935, "node_id": "MDU6SXNzdWUxNTQzMjU5MzU=", "number": 213, "title": "Don't Mutate Q Objects in Polymorphic Query _filter_or_exclude", "user": {"login": "alexander-alvarez", "id": 11779993, "node_id": "MDQ6VXNlcjExNzc5OTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/11779993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexander-alvarez", "html_url": "https://github.com/alexander-alvarez", "followers_url": "https://api.github.com/users/alexander-alvarez/followers", "following_url": "https://api.github.com/users/alexander-alvarez/following{/other_user}", "gists_url": "https://api.github.com/users/alexander-alvarez/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexander-alvarez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexander-alvarez/subscriptions", "organizations_url": "https://api.github.com/users/alexander-alvarez/orgs", "repos_url": "https://api.github.com/users/alexander-alvarez/repos", "events_url": "https://api.github.com/users/alexander-alvarez/events{/privacy}", "received_events_url": "https://api.github.com/users/alexander-alvarez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46510286, "node_id": "MDU6TGFiZWw0NjUxMDI4Ng==", "url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-11T19:43:04Z", "updated_at": "2016-06-06T13:24:13Z", "closed_at": "2016-06-06T13:24:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using a global (what I thought was constant) Q object, and it turns out that if you reuse it bad things may happen.\n\n**The culprit**\nhttps://github.com/chrisglass/django_polymorphic/blob/master/polymorphic/query.py#L115\n\n**Potential fix**\nFollow the paradigm of  [Django's QuerySet._filter_or_exclude](https://github.com/django/django/blob/7ec330eeb96d0874949eacb8ed1bbb97e11807e1/django/db/models/query.py#L802) where the Q objects are copied. In our case we'd copy them before transforming them, that way the original object is not modified.\n\n**TestCase**\n\n``` py\n\ndef test_query_filter_exclude_is_immutable(self):\n    # given \n    q_to_reuse = Q(Model2B___field2='something')\n    untouched_q_object = Q(Model2B___field2='something')\n    # when\n    Model2A.objects.filter(q_to_reuse).all()\n    # then\n\n    # will fail now because q_to_reuse.children[0] is now ('field2', 'something')\n    # and will fail if used again since field2 doesn't exist in Model2A\n    self.assertListEquals(q_to_reuse.children, untouched_q_object.children)\n\n    #given\n    q_to_reuse = Q(Model2B___field2='something')\n    untouched_q_object = Q(Model2B___field2='something')\n    # when\n    Model2B.objects.filter(q_to_reuse).all()\n    # then\n    self.assertListEquals(q_to_reuse.children, untouched_q_object.children)\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/212", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/212/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/212/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/212", "id": 154062881, "node_id": "MDU6SXNzdWUxNTQwNjI4ODE=", "number": 212, "title": "Making Migration access to inherited objects", "user": {"login": "erramuzpe", "id": 6176948, "node_id": "MDQ6VXNlcjYxNzY5NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6176948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erramuzpe", "html_url": "https://github.com/erramuzpe", "followers_url": "https://api.github.com/users/erramuzpe/followers", "following_url": "https://api.github.com/users/erramuzpe/following{/other_user}", "gists_url": "https://api.github.com/users/erramuzpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/erramuzpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erramuzpe/subscriptions", "organizations_url": "https://api.github.com/users/erramuzpe/orgs", "repos_url": "https://api.github.com/users/erramuzpe/repos", "events_url": "https://api.github.com/users/erramuzpe/events{/privacy}", "received_events_url": "https://api.github.com/users/erramuzpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-10T17:30:08Z", "updated_at": "2016-12-15T11:41:12Z", "closed_at": "2016-12-15T11:41:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \n\nI'm trying to make a Migration and I get different querysets depending on where I am (Django shell or Migration script). When running the code in the Django shell, it works; when running `./manage.py migrate` it does not. The problem is that when querying for objects, say...\n\n```\nmodel = apps.get_model(\"myapp\", \"mymodel\")\nmodel_queryset = model.objects.all()\n```\n\nthe returned queryset is different. \n\nSpecifically I have the following schema:\n\n```\nclass BaseCollectionItem(PolymorphicModel, models.Model)\nclass Image(BaseCollectionItem)\nclass BaseStatisticMap(Image)\nclass StatisticMap(BaseStatisticMap)\n```\n\n```\nImage = apps.get_model(\"statmaps\", \"Image\")\nImage.objects.all()\n```\n\nIn the Django shell I get `[<StatisticMap: zstat old young>, <StatisticMap: zstat old>, <StatisticMap: zstat young old>, <StatisticMap: zstat young>, <StatisticMap: MNI maxprob thr50 2mm>, <StatisticMap: MNI maxprob thr0 1mm> ... ]`\n\nBut in the Migration script seems not to be working in the same way, I get: \n`[<Image: Image object>, <Image: Image object>, <Image: Image object>, <Image: Image object>, <Image: Image object>, <Image: Image object>, <Image: Image object>, <Image: Image object> ...]`\n\nand I can not access the inherited attributes from BaseCollectionItem.\n\nAny help would be highly appreciated, thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/207", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/207/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/207/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/207", "id": 149960556, "node_id": "MDU6SXNzdWUxNDk5NjA1NTY=", "number": 207, "title": "get_real_instance() maybe using a lot of connections", "user": {"login": "variable", "id": 558175, "node_id": "MDQ6VXNlcjU1ODE3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/558175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/variable", "html_url": "https://github.com/variable", "followers_url": "https://api.github.com/users/variable/followers", "following_url": "https://api.github.com/users/variable/following{/other_user}", "gists_url": "https://api.github.com/users/variable/gists{/gist_id}", "starred_url": "https://api.github.com/users/variable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/variable/subscriptions", "organizations_url": "https://api.github.com/users/variable/orgs", "repos_url": "https://api.github.com/users/variable/repos", "events_url": "https://api.github.com/users/variable/events{/privacy}", "received_events_url": "https://api.github.com/users/variable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-21T04:10:27Z", "updated_at": "2016-04-21T05:12:03Z", "closed_at": "2016-04-21T05:11:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if it's a bug, but I think it's good to report this behaviour though.\n\nI have polymorphic models:\n\n```\nfrom django.db import connections\nclass Receiver(PolymorphicModel):\n    ...\n\nclass Database(Receiver):\n    name = models.CharField(max_length=255)\n    def get_data_source(self):\n        return connections[name]\n```\n\nFeed model:\n\n```\nclass Feed(models.Model):\n    receiver = models.ForeignKey('Receiver')\n\n    def get_data_source(self):\n        return self.receiver.get_real_instance().get_data_source()\n```\n\nI have a feed record that points to database receiver:\n\n`Feed.objects.create(receiver=Database.objects.create(name='legacy'))`\n\nThe problem arises when I have more than 10 threads calling `feed.get_data_source()`, basically it raises  `Too many connection` error.\n\nWhat I have tried to prove is change `Feed.get_data_source` to:\n\n```\nclass Feed(models.Model):\n    receiver = models.ForeignKey('Receiver')\n\n    def get_data_source(self):\n        return connections['legacy']\n        # return self.receiver.get_real_instance().get_data_source()\n```\n\nAnd the problem went away.\n\nI believe it's django openning a new connection on each thread when I access the ORM. I believe adding connection.close() in get_data_source() should fix the issue:\n\n```\nfrom django.db import connection\n\nclass Feed(models.Model):\n    receiver = models.ForeignKey('Receiver')\n\n    def get_data_source(self):\n        conn = return self.receiver.get_real_instance().get_data_source()\n        connection.close()\n        return conn\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/205", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/205/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/205/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/205", "id": 144671958, "node_id": "MDU6SXNzdWUxNDQ2NzE5NTg=", "number": 205, "title": "Admin not showing anything", "user": {"login": "krisavi", "id": 1912568, "node_id": "MDQ6VXNlcjE5MTI1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1912568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krisavi", "html_url": "https://github.com/krisavi", "followers_url": "https://api.github.com/users/krisavi/followers", "following_url": "https://api.github.com/users/krisavi/following{/other_user}", "gists_url": "https://api.github.com/users/krisavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/krisavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krisavi/subscriptions", "organizations_url": "https://api.github.com/users/krisavi/orgs", "repos_url": "https://api.github.com/users/krisavi/repos", "events_url": "https://api.github.com/users/krisavi/events{/privacy}", "received_events_url": "https://api.github.com/users/krisavi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-30T17:54:13Z", "updated_at": "2016-04-04T07:46:56Z", "closed_at": "2016-04-04T07:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am not sure if it is only my problem, but the admin area is not able to show anything to me.\n\nmodels.py:\n\n```\nfrom django.db import models\nfrom django.utils import timezone\nfrom location_field.models.plain import PlainLocationField\nfrom geoposition.fields import GeopositionField\nfrom django.utils.translation import ugettext as _\nfrom django.db.models import Q\nfrom auditlog.models import AuditlogHistoryField\nfrom polymorphic.models import PolymorphicModel\nfrom polymorphic.showfields import ShowFieldTypeAndContent\n\n\nclass Manufacturer(models.Model):\n    name = models.CharField(max_length=20, unique=True)\n    def __unicode__(self):              # __unicode__ on Python 2\n        return self.name\n\nclass SerialObject(models.Model):\n    device_id = models.CharField(max_length=30, unique=True, db_index=True)\n    manufacturer = models.ForeignKey(Manufacturer)\n    def __unicode__(self):              # __unicode__ on Python 2\n        return self.device_id \n\n... Location, DeviceModel, DeviceType, MAC models ...\n\nclass Device(ShowFieldTypeAndContent, PolymorphicModel, SerialObject):\n    dev_model = models.ForeignKey(DeviceModel)\n    location = models.ForeignKey(Location, null=True, blank=True)\n    COMMTYPES = (\n        ('R', 'Radio'),\n        ('I', 'IP'),\n        ('G', 'GPRS'),\n        ('O', _('Other')),\n    )\n    communication = models.CharField(max_length=1, choices=COMMTYPES)\n    history = AuditlogHistoryField()\n    device_type = models.ForeignKey(DeviceType, null = True, blank = True)\n    comment = models.CharField(max_length=255, blank = True)\n    success_rate = models.CharField(max_length=10, blank= True, null = True)\n\n    def __unicode__(self):              # __unicode__ on Python 2\n        return self.device_id \n    def get_absolute_url(self):\n        return u'/device/%d' % self.device_id \n\nclass Area1Device(Device):\n    MAC = models.ForeignKey(MAC, null=True, blank = True)\n    EAN = models.CharField(max_length=20)\n    class Meta:\n        verbose_name = _('Area 1 device')\n\nclass Area2Device(Device):\n    gsm_number = models.CharField(max_length=20)\n    username = models.CharField(max_length=20)\n    password = models.CharField(max_length=20)\n\nfrom auditlog.registry import auditlog\nauditlog.register(Meter, include_fields=['comment', 'success_rate'])\n```\n\nadmin.py:\n\n```\nfrom django.contrib import admin\nfrom polymorphic.admin import PolymorphicChildModelAdmin, PolymorphicParentModelAdmin, PolymorphicChildModelFilter\nfrom .models import *\n\nclass DeviceChildAdmin(PolymorphicChildModelAdmin):\n    base_model = Device\n\n    base_fieldset = (\n        (\"Base Fields\", {\n            'fields': ('comment',)\n        }),\n    )\n\n#class Area1DeviceAdmin(DeviceChildAdmin):\n#    base_model = Area1Device\n\n#class Area2Device(DeviceChildAdmin):\n#    base_model = Area2Device\n\nclass DeviceParentAdmin(PolymorphicParentModelAdmin):\n    base_model = Device\n    list_filter = (PolymorphicChildModelFilter,)\n    child_models = (\n        (Device, DeviceChildAdmin),\n        (Area1Device, DeviceChildAdmin),\n        (Area2Device, DeviceChildAdmin),\n        #(Area1Device, Area1DeviceAdmin),\n        #(Area2Device, Area2DeviceAdmin),\n    )\n\nadmin.register(Device, DeviceParentAdmin)\n\nclass Area1DeviceInline(admin.StackedInline):\n    model = Area1Device\n    fk_name = 'area1device'\n    readonly_fields = ['device_ptr']\n\nclass StandardModelAdmin(admin.ModelAdmin):\n    inlines = [Area1DeviceInline]\n\nadmin.register(SerialObject, StandardModelAdmin)\nadmin.site.register(Manufacturer)\n```\n\nI have part of the admin commented there because of various testings. Only area I see in admin is the Manufacturer admin part. I have even no idea what else to check any more and there are no errors. I tried downgrading from Django 1.9.4 to 1.8.11, but it gave no results. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/203", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/203/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/203/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/203", "id": 141804968, "node_id": "MDU6SXNzdWUxNDE4MDQ5Njg=", "number": 203, "title": "Is it possible to duplicate element?", "user": {"login": "michalwerner", "id": 9198026, "node_id": "MDQ6VXNlcjkxOTgwMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9198026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michalwerner", "html_url": "https://github.com/michalwerner", "followers_url": "https://api.github.com/users/michalwerner/followers", "following_url": "https://api.github.com/users/michalwerner/following{/other_user}", "gists_url": "https://api.github.com/users/michalwerner/gists{/gist_id}", "starred_url": "https://api.github.com/users/michalwerner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michalwerner/subscriptions", "organizations_url": "https://api.github.com/users/michalwerner/orgs", "repos_url": "https://api.github.com/users/michalwerner/repos", "events_url": "https://api.github.com/users/michalwerner/events{/privacy}", "received_events_url": "https://api.github.com/users/michalwerner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-18T08:35:14Z", "updated_at": "2016-05-04T09:15:29Z", "closed_at": "2016-05-04T09:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the first thing I want to say thank you, for brilliant package, for me absolute must have, for bigger projects.\n\nNow, the actual question: Is it possible to duplicate polymorphic object? I tried:\n\n```\nobj.pk = None\nobj.save()\n```\n\nbut it just saves `obj`, not creating new one.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/201", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/201/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/201/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/201", "id": 136671423, "node_id": "MDU6SXNzdWUxMzY2NzE0MjM=", "number": 201, "title": "AttributeError: 'NoneType' object has no attribute 'name'", "user": {"login": "jhg", "id": 1288711, "node_id": "MDQ6VXNlcjEyODg3MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1288711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhg", "html_url": "https://github.com/jhg", "followers_url": "https://api.github.com/users/jhg/followers", "following_url": "https://api.github.com/users/jhg/following{/other_user}", "gists_url": "https://api.github.com/users/jhg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhg/subscriptions", "organizations_url": "https://api.github.com/users/jhg/orgs", "repos_url": "https://api.github.com/users/jhg/repos", "events_url": "https://api.github.com/users/jhg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-26T11:30:02Z", "updated_at": "2016-05-04T09:30:22Z", "closed_at": "2016-05-04T09:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n  File \"/opt/Dev_env/lib/python3.4/site-packages/django/contrib/admin/templatetags/admin_list.py\", line 378, in date_hierarchy\n    months = getattr(months, dates_or_datetimes)(field_name, 'month')\n  File \"/opt/Dev_env/lib/python3.4/site-packages/django/db/models/query.py\", line 650, in datetimes\n    plain_field=F(field_name)\n  File \"/opt/Dev_env/lib/python3.4/site-packages/polymorphic/query.py\", line 238, in annotate\n    self._process_aggregate_args(args, kwargs)\n  File \"/opt/Dev_env/lib/python3.4/site-packages/polymorphic/query.py\", line 233, in _process_aggregate_args\n    patch_lookup(a)\n  File \"/opt/Dev_env/lib/python3.4/site-packages/polymorphic/query.py\", line 197, in patch_lookup_gte_18\n    patch_lookup_gte_18(source_expression)\n  File \"/opt/Dev_env/lib/python3.4/site-packages/polymorphic/query.py\", line 199, in patch_lookup_gte_18\n    a.name = translate_polymorphic_field_path(self.model, a.name)\nAttributeError: 'NoneType' object has no attribute 'name'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/200", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/200/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/200/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/200", "id": 134933898, "node_id": "MDU6SXNzdWUxMzQ5MzM4OTg=", "number": 200, "title": "Including super-types of proxy models", "user": {"login": "andrewdodd", "id": 1559603, "node_id": "MDQ6VXNlcjE1NTk2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1559603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewdodd", "html_url": "https://github.com/andrewdodd", "followers_url": "https://api.github.com/users/andrewdodd/followers", "following_url": "https://api.github.com/users/andrewdodd/following{/other_user}", "gists_url": "https://api.github.com/users/andrewdodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewdodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewdodd/subscriptions", "organizations_url": "https://api.github.com/users/andrewdodd/orgs", "repos_url": "https://api.github.com/users/andrewdodd/repos", "events_url": "https://api.github.com/users/andrewdodd/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewdodd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46510293, "node_id": "MDU6TGFiZWw0NjUxMDI5Mw==", "url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/labels/enhancement", "name": "enhancement", "color": "c7def8", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-19T18:06:19Z", "updated_at": "2016-06-15T08:40:41Z", "closed_at": "2016-06-15T08:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am not sure if this is an issue or not. I have investigated if there are existing open or closed issues about this and have searched the docs to see if this is 'desired' behaviour, but I can't find an answer.\n\nThe issue I am seeing is that the querysets returned by 'proxy' sub-types includes objects from the super type.\n\nFor example, if I have the following models:\n\n```\nclass Drink(PolymorphicModel):\n    name = models.CharField(max_length=50)\n    colour = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name\n\n\nclass AlcoholicDrink(Drink):\n    strength = models.FloatField()\n\n\nclass HotDrink(Drink):\n    class Meta:\n        proxy = True\n\n    def __str__(self):\n        return '{}, really gets you going!'.format(self.name)\n```\n\nAnd I create the following objects:\n- Drinks => Water, Coke\n- HotDrinks => Coffee\n- AlcoholicDrinks => Beer\n\nVia shell:\n\n```\n>>> Drink.objects.create(name='Water', colour='Clear')\n<Drink: Water>\n\n>>> Drink.objects.create(name='Coke', colour='Black')\n<Drink: Coke>\n\n>>> HotDrink.objects.create(name='Coffee', colour='Black')\n<HotDrink: Coffee, really gets you going!>\n\n>>> AlcoholicDrink.objects.create(name='Beer', colour='Golden', strength=6.7)\n<AlcoholicDrink: Beer>\n```\n\nAnd then I query the various sets:\n\n```\n>>> Drink.objects.all()\n[<Drink: Water>, <Drink: Coke>, <HotDrink: Coffee, really gets you going!>, <AlcoholicDrink: Beer>]\n\n... correctly returns all the drinks with their types resolved\n\n>>> AlcoholicDrink.objects.all()\n[<AlcoholicDrink: Beer>]\n\n... correctly returns the sub-types from AlcholicDrinks\n```\n\nHowever, if I query on the 'HotDrinks' type, I get all of the 'Drinks' instead of **just** the 'HotDrinks':\n\n```\n>>> HotDrink.objects.all()\n[<Drink: Water>, <Drink: Coke>, <HotDrink: Coffee, really gets you going!>, <AlcoholicDrink: Beer>]\n```\n\nI can get around this by using the following:\n\n```\n>>> HotDrink.objects.instance_of(HotDrink)\n[<HotDrink: Coffee, really gets you going!>]\n```\n\nIs this an issue (it seems like an issue to me)? Or is it by design?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/199", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/199/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/199/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/199", "id": 133719447, "node_id": "MDU6SXNzdWUxMzM3MTk0NDc=", "number": 199, "title": "Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': 'mychildmodel'}' not found. 1 pattern(s) tried: [u'admin/(?Pmyparentmodel|auth|othermodels|etc)/$']", "user": {"login": "jhg-tgu", "id": 13555249, "node_id": "MDQ6VXNlcjEzNTU1MjQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/13555249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhg-tgu", "html_url": "https://github.com/jhg-tgu", "followers_url": "https://api.github.com/users/jhg-tgu/followers", "following_url": "https://api.github.com/users/jhg-tgu/following{/other_user}", "gists_url": "https://api.github.com/users/jhg-tgu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhg-tgu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhg-tgu/subscriptions", "organizations_url": "https://api.github.com/users/jhg-tgu/orgs", "repos_url": "https://api.github.com/users/jhg-tgu/repos", "events_url": "https://api.github.com/users/jhg-tgu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhg-tgu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-15T13:59:28Z", "updated_at": "2016-02-17T11:29:12Z", "closed_at": "2016-02-17T11:28:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reverse for 'app_list' with arguments '()' and keyword arguments '{u'app_label': 'mychildmodel'}' not found. 1 pattern(s) tried: [u'admin/(?Pmyparentmodel|auth|othermodels|etc)/$']\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/197", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/197/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/197/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/197", "id": 131645691, "node_id": "MDU6SXNzdWUxMzE2NDU2OTE=", "number": 197, "title": "polymorphic_ctype_id empty after adding data in migration", "user": {"login": "TZanke", "id": 1613368, "node_id": "MDQ6VXNlcjE2MTMzNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1613368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TZanke", "html_url": "https://github.com/TZanke", "followers_url": "https://api.github.com/users/TZanke/followers", "following_url": "https://api.github.com/users/TZanke/following{/other_user}", "gists_url": "https://api.github.com/users/TZanke/gists{/gist_id}", "starred_url": "https://api.github.com/users/TZanke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TZanke/subscriptions", "organizations_url": "https://api.github.com/users/TZanke/orgs", "repos_url": "https://api.github.com/users/TZanke/repos", "events_url": "https://api.github.com/users/TZanke/events{/privacy}", "received_events_url": "https://api.github.com/users/TZanke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-05T13:33:52Z", "updated_at": "2016-02-17T10:38:55Z", "closed_at": "2016-02-17T10:38:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a new model based on Django-Polymorphic. Now i try to move data from an other model to the new polymorphic model within a migration.\n\n```\ndef forwards_func(apps, schema_editor):\n    scanable = apps.get_model('xyz', 'Scanable')\n    scanable.objects.create(can_scan=xy.for_scan)\n```\n\nBut after manage.py migrate, the polymorphic_ctype_id column is empty.\n\nWhat i am doing wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/195", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/195/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/195/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/195", "id": 128019859, "node_id": "MDU6SXNzdWUxMjgwMTk4NTk=", "number": 195, "title": "SystemCheckError when using Model and FK Field of same name", "user": {"login": "scottfisk", "id": 7396393, "node_id": "MDQ6VXNlcjczOTYzOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7396393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottfisk", "html_url": "https://github.com/scottfisk", "followers_url": "https://api.github.com/users/scottfisk/followers", "following_url": "https://api.github.com/users/scottfisk/following{/other_user}", "gists_url": "https://api.github.com/users/scottfisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottfisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottfisk/subscriptions", "organizations_url": "https://api.github.com/users/scottfisk/orgs", "repos_url": "https://api.github.com/users/scottfisk/repos", "events_url": "https://api.github.com/users/scottfisk/events{/privacy}", "received_events_url": "https://api.github.com/users/scottfisk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-21T21:08:48Z", "updated_at": "2018-10-23T00:38:04Z", "closed_at": "2016-01-22T15:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I set up the following situation I am getting errors where I previously have not. It does not seem like `Base` should have a collision `sub`, but perhaps that is something new with how polymorphism is handled?\n\n``` python\nclass Base(PolymorphicModel):\n    pass\n\nclass Sub(Base):\n    pass\n\nclass SubB(Base):\n    sub = models.ForeignKey(Sub, null=True, editable=False)\n```\n\nYields a Django `SystemCheckError`\n\n```\nERRORS:\npexp.SubB.sub: (models.E006) The field 'sub' clashes with the field 'sub' from model 'pexp.base'.\n```\n\nThis broke during my upgrade to django-polymorphic 0.8.1 and Django 1.9.1.  This exact case worked with django-polymorphic 0.7.2 + Django 1.8\n\nI fiddled around a bit but was unable to write a test that triggers this issue. I guess because it is part of the Django system checker. I also wasn't 100% sure if this was an issue with this library or django. I am still digging on that. \n\nEDIT: Looks like it works fine with 0.8.1 & Django 1.8.5 so it may be that django changed something with model inheritance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/193", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/193/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/193/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/193", "id": 126615495, "node_id": "MDU6SXNzdWUxMjY2MTU0OTU=", "number": 193, "title": "Assertion is always true", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-14T09:41:40Z", "updated_at": "2016-02-17T11:02:09Z", "closed_at": "2016-02-17T11:02:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Python 3.5:\n\n```\npolymorphic/query_translate.py:215: SyntaxWarning: assertion is always true, perhaps remove parentheses?\n  assert(\npolymorphic/query_translate.py:271: SyntaxWarning: assertion is always true, perhaps remove parentheses?\n  assert(\n```\n\nI believe the syntax has changed in Python 3, the correct way is `assert <expr>, <msg>` rather than `assert (<expr>, <msg>)`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/191", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/191/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/191/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/191", "id": 125240752, "node_id": "MDU6SXNzdWUxMjUyNDA3NTI=", "number": 191, "title": "Local primary key on children", "user": {"login": "lorinkoz", "id": 3628106, "node_id": "MDQ6VXNlcjM2MjgxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3628106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorinkoz", "html_url": "https://github.com/lorinkoz", "followers_url": "https://api.github.com/users/lorinkoz/followers", "following_url": "https://api.github.com/users/lorinkoz/following{/other_user}", "gists_url": "https://api.github.com/users/lorinkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorinkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorinkoz/subscriptions", "organizations_url": "https://api.github.com/users/lorinkoz/orgs", "repos_url": "https://api.github.com/users/lorinkoz/repos", "events_url": "https://api.github.com/users/lorinkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/lorinkoz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T19:08:38Z", "updated_at": "2016-02-17T11:08:39Z", "closed_at": "2016-02-17T11:08:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use a local pk in the child model instead of having it always point to the parent's pk?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/189", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/189/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/189/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/189", "id": 124210332, "node_id": "MDU6SXNzdWUxMjQyMTAzMzI=", "number": 189, "title": "ImportError: cannot import name 'PolymorphicModel'", "user": {"login": "mkane848", "id": 7328780, "node_id": "MDQ6VXNlcjczMjg3ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7328780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkane848", "html_url": "https://github.com/mkane848", "followers_url": "https://api.github.com/users/mkane848/followers", "following_url": "https://api.github.com/users/mkane848/following{/other_user}", "gists_url": "https://api.github.com/users/mkane848/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkane848/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkane848/subscriptions", "organizations_url": "https://api.github.com/users/mkane848/orgs", "repos_url": "https://api.github.com/users/mkane848/repos", "events_url": "https://api.github.com/users/mkane848/events{/privacy}", "received_events_url": "https://api.github.com/users/mkane848/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-29T13:24:07Z", "updated_at": "2016-02-17T11:33:21Z", "closed_at": "2016-02-17T11:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the upgrade to v0.8, I began getting this error while using polumorphic in conjunction with django-filer. Reverting back to v0.7.2 fixed the issue, but here's the error output. I'm on Windows 10 using Python 3.5\n\n```\n(env) U:\\project\\intranet>python manage.py runserver\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x0000003437941BF8>\nTraceback (most recent call last):\n  File \"U:\\project\\env\\lib\\site-packages\\django\\utils\\autoreload.py\", line 229, in wrapper\n    fn(*args, **kwargs)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 107, in inner_run\n    autoreload.raise_last_exception()\n  File \"U:\\project\\env\\lib\\site-packages\\django\\utils\\autoreload.py\", line 252, in raise_last_exception\n    six.reraise(*_exception)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\utils\\six.py\", line 685, in reraise\n    raise value.with_traceback(tb)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\utils\\autoreload.py\", line 229, in wrapper\n    fn(*args, **kwargs)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\apps\\registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"U:\\project\\env\\lib\\site-packages\\django\\apps\\config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"U:\\project\\env\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 662, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"U:\\project\\env\\lib\\site-packages\\filer\\models\\__init__.py\", line 3, in <module>\n    from filer.models.clipboardmodels import *  # flake8: noqa\n  File \"U:\\project\\env\\lib\\site-packages\\filer\\models\\clipboardmodels.py\", line 9, in <module>\n    from filer.models import filemodels\n  File \"U:\\project\\env\\lib\\site-packages\\filer\\models\\filemodels.py\", line 14, in <module>\n    from polymorphic import PolymorphicModel, PolymorphicManager\nImportError: cannot import name 'PolymorphicModel'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/187", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/187/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/187/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/187", "id": 123898518, "node_id": "MDU6SXNzdWUxMjM4OTg1MTg=", "number": 187, "title": "`AppRegistryNotReady` while updating to Django 1.9", "user": {"login": "bbirand", "id": 334435, "node_id": "MDQ6VXNlcjMzNDQzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbirand", "html_url": "https://github.com/bbirand", "followers_url": "https://api.github.com/users/bbirand/followers", "following_url": "https://api.github.com/users/bbirand/following{/other_user}", "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions", "organizations_url": "https://api.github.com/users/bbirand/orgs", "repos_url": "https://api.github.com/users/bbirand/repos", "events_url": "https://api.github.com/users/bbirand/events{/privacy}", "received_events_url": "https://api.github.com/users/bbirand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-25T21:40:01Z", "updated_at": "2016-02-17T11:09:14Z", "closed_at": "2016-02-17T11:09:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to upgrade my Django project from 1.8.2 to 1.9.  When I go forward with the upgrade and do `runserver`, I get this error:\n\n```\n  File \"/code/web/ve/lib/python3.5/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n\nSince this is a very cryptic error, I figured it was a pretty deep issue. I uncommented every app in my `INSTALLED_APPS`, and started recommenting all of them. The only app that is causing the problem is `django-polymorphic`; when I remove it, the server runs fine.\n\nDid anybody else have this issue? Anybody know how I can try to debug this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/185", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/185/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/185/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/185", "id": 123571434, "node_id": "MDU6SXNzdWUxMjM1NzE0MzQ=", "number": 185, "title": "Broken in Django 1.9", "user": {"login": "burritoIand", "id": 230757, "node_id": "MDQ6VXNlcjIzMDc1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/230757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burritoIand", "html_url": "https://github.com/burritoIand", "followers_url": "https://api.github.com/users/burritoIand/followers", "following_url": "https://api.github.com/users/burritoIand/following{/other_user}", "gists_url": "https://api.github.com/users/burritoIand/gists{/gist_id}", "starred_url": "https://api.github.com/users/burritoIand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burritoIand/subscriptions", "organizations_url": "https://api.github.com/users/burritoIand/orgs", "repos_url": "https://api.github.com/users/burritoIand/repos", "events_url": "https://api.github.com/users/burritoIand/events{/privacy}", "received_events_url": "https://api.github.com/users/burritoIand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-22T22:50:03Z", "updated_at": "2015-12-24T00:47:17Z", "closed_at": "2015-12-24T00:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I just upgraded from django 1.8 to 1.9 and am getting this error when I try to run `py.test`\n\n```\nvagrant@coachlogix-dev:~/cl-platform$ py.test common\nTraceback (most recent call last):\n  File \"/usr/local/bin/py.test\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/config.py\", line 38, in main\n    config = _prepareconfig(args, plugins)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/config.py\", line 117, in _prepareconfig\n    pluginmanager=pluginmanager, args=args)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\n    return _wrapped_call(hook_impl.function(*args), self.execute)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 249, in _wrapped_call\n    wrap_controller.send(call_outcome)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/helpconfig.py\", line 28, in pytest_cmdline_parse\n    config = outcome.get_result()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\n    _reraise(*ex)  # noqa\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\n    self.result = func()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/config.py\", line 852, in pytest_cmdline_parse\n    self.parse(args)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/config.py\", line 957, in parse\n    self._preparse(args)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/config.py\", line 928, in _preparse\n    args=args, parser=self._parser)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\n    return _wrapped_call(hook_impl.function(*args), self.execute)\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\n    return call_outcome.get_result()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\n    _reraise(*ex)  # noqa\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\n    self.result = func()\n  File \"/usr/local/lib/python2.7/dist-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python2.7/dist-packages/pytest_django/plugin.py\", line 238, in pytest_load_initial_conftests\n    _setup_django()\n  File \"/usr/local/lib/python2.7/dist-packages/pytest_django/plugin.py\", line 134, in _setup_django\n    django.setup()\n  File \"/usr/local/lib/python2.7/dist-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/config.py\", line 90, in create\n    module = import_module(entry)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/usr/local/lib/python2.7/dist-packages/polymorphic/__init__.py\", line 11, in <module>\n    from .polymorphic_model import PolymorphicModel\n  File \"/usr/local/lib/python2.7/dist-packages/polymorphic/polymorphic_model.py\", line 19, in <module>\n    from django.contrib.contenttypes.models import ContentType\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/contenttypes/models.py\", line 159, in <module>\n    class ContentType(models.Model):\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 94, in __new__\n    app_config = apps.get_containing_app_config(module)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 239, in get_containing_app_config\n    self.check_apps_ready()\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n\nany ideas? is this compatible with django 1.9? thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/184", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/184/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/184/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/184", "id": 123369829, "node_id": "MDU6SXNzdWUxMjMzNjk4Mjk=", "number": 184, "title": "Django 1.9: ImportError: cannot import name SingleRelatedObjectDescriptor ", "user": {"login": "matias-hhh", "id": 7799504, "node_id": "MDQ6VXNlcjc3OTk1MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7799504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matias-hhh", "html_url": "https://github.com/matias-hhh", "followers_url": "https://api.github.com/users/matias-hhh/followers", "following_url": "https://api.github.com/users/matias-hhh/following{/other_user}", "gists_url": "https://api.github.com/users/matias-hhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/matias-hhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matias-hhh/subscriptions", "organizations_url": "https://api.github.com/users/matias-hhh/orgs", "repos_url": "https://api.github.com/users/matias-hhh/repos", "events_url": "https://api.github.com/users/matias-hhh/events{/privacy}", "received_events_url": "https://api.github.com/users/matias-hhh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T22:13:43Z", "updated_at": "2015-12-22T10:12:22Z", "closed_at": "2015-12-22T10:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using version 0.7.2 (as dependency for django-filer) with Django 1.9, and have been getting this error randomly from time to time, and when i refresh page it just goes away.\n\nThe exception happens in polymorphic_model.py in __init__, line 176, where it tries to import the SingleRelatedObjectDescriptor\n\nI think the issue is because of the Django 1.9 api change, from the release notes:\n\nThe related model object descriptor classes in django.db.models.fields.related (private API) are moved from the related module to related_descriptors and renamed as follows:\n- ReverseSingleRelatedObjectDescriptor is ForwardManyToOneDescriptor\n- SingleRelatedObjectDescriptor is ReverseOneToOneDescriptor\n- ForeignRelatedObjectsDescriptor is ReverseManyToOneDescriptor\n- ManyRelatedObjectsDescriptor is ManyToManyDescriptor\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/183", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/183/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/183/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/183", "id": 123305650, "node_id": "MDU6SXNzdWUxMjMzMDU2NTA=", "number": 183, "title": "Django 1.10 compatibility: RemovedInDjango110Warning", "user": {"login": "PetrDlouhy", "id": 156755, "node_id": "MDQ6VXNlcjE1Njc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/156755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrDlouhy", "html_url": "https://github.com/PetrDlouhy", "followers_url": "https://api.github.com/users/PetrDlouhy/followers", "following_url": "https://api.github.com/users/PetrDlouhy/following{/other_user}", "gists_url": "https://api.github.com/users/PetrDlouhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrDlouhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrDlouhy/subscriptions", "organizations_url": "https://api.github.com/users/PetrDlouhy/orgs", "repos_url": "https://api.github.com/users/PetrDlouhy/repos", "events_url": "https://api.github.com/users/PetrDlouhy/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrDlouhy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46510286, "node_id": "MDU6TGFiZWw0NjUxMDI4Ng==", "url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T16:03:12Z", "updated_at": "2016-05-04T09:30:47Z", "closed_at": "2016-05-04T09:30:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is warning about future incompatibility with Django 1.10:\n\n```\n/home/petr/soubory/programovani/Auto-mat/DPNK/dpnk/env/src/django-polymorphic/polymorphic/admin.py:421: RemovedInDjango110Warning: The current_app argument of RequestContext is deprecated. Set the current_app attribute of its request instead.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/181", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/181/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/181/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/181", "id": 123039945, "node_id": "MDU6SXNzdWUxMjMwMzk5NDU=", "number": 181, "title": "model with a boolean field filtering by this field = True in the admin.", "user": {"login": "gilgamezh", "id": 1496486, "node_id": "MDQ6VXNlcjE0OTY0ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1496486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilgamezh", "html_url": "https://github.com/gilgamezh", "followers_url": "https://api.github.com/users/gilgamezh/followers", "following_url": "https://api.github.com/users/gilgamezh/following{/other_user}", "gists_url": "https://api.github.com/users/gilgamezh/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilgamezh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilgamezh/subscriptions", "organizations_url": "https://api.github.com/users/gilgamezh/orgs", "repos_url": "https://api.github.com/users/gilgamezh/repos", "events_url": "https://api.github.com/users/gilgamezh/events{/privacy}", "received_events_url": "https://api.github.com/users/gilgamezh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-18T22:56:08Z", "updated_at": "2015-12-23T19:27:09Z", "closed_at": "2015-12-23T19:15:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hi! I have a model with a boolean field `pending` and I'm only getting objects with pending=True in the admin view.\n\n```\nclass ModelA(PolymorphicModel)\n    field... \n    field ...\n    pending = models.BooleanField(help_text=\"help text\")\n\n\nclass ModelB(ModelA):\n    other_field = \n\nclass Modelc(ModelA):\n    foo_field = ... \n\n\n#  in the admin:\n\nclass ModelAChildAdmin(PolymorphicChildModelAdmin):\n    base_model = ModelA\n\n\nclass ModelBAdmin(ModelAChildAdmin):\n    base_model = ModelB\n\n\nclass ModelCAdmin(ModelAChildAdmin):\n    base_model = ModelC\n\n\nclass ModelAParentAdmin(PolymorphicParentModelAdmin):\n    base_model = ModelA\n    child_models = (\n        (ModelB, ModelBAdmin),\n        (ModelC, ModelCAdmin),\n    )\n\n    list_display = ('field1', 'field2' 'pending')\n    list_filter = ['pending']\n\n```\n\nWhen I go to `/admin/my_app/modela/`\n\nIn the where condition of the query I found a `WHERE \"my_app.modela\".\"pending\" = true` condition\n\nAny idea? is it a bug?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/180", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/180/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/180/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/180", "id": 122824667, "node_id": "MDU6SXNzdWUxMjI4MjQ2Njc=", "number": 180, "title": "Tiny bug in docs!", "user": {"login": "vsoch", "id": 814322, "node_id": "MDQ6VXNlcjgxNDMyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsoch", "html_url": "https://github.com/vsoch", "followers_url": "https://api.github.com/users/vsoch/followers", "following_url": "https://api.github.com/users/vsoch/following{/other_user}", "gists_url": "https://api.github.com/users/vsoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsoch/subscriptions", "organizations_url": "https://api.github.com/users/vsoch/orgs", "repos_url": "https://api.github.com/users/vsoch/repos", "events_url": "https://api.github.com/users/vsoch/events{/privacy}", "received_events_url": "https://api.github.com/users/vsoch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-17T21:16:18Z", "updated_at": "2015-12-28T16:34:37Z", "closed_at": "2015-12-28T16:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is probably verison specific, but the line [in the docs](https://django-polymorphic.readthedocs.org/en/latest/quickstart.html):\n\n```\n from polymorphic.models import PolymorphicModel\n```\n\ndid not work for me, instead:\n\n```\n  from polymorphic.polymorphic_model import PolymorphicModel\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/179", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/179/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/179/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/179", "id": 122731246, "node_id": "MDU6SXNzdWUxMjI3MzEyNDY=", "number": 179, "title": "clear M2M references", "user": {"login": "eriktelepovsky", "id": 2685808, "node_id": "MDQ6VXNlcjI2ODU4MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2685808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriktelepovsky", "html_url": "https://github.com/eriktelepovsky", "followers_url": "https://api.github.com/users/eriktelepovsky/followers", "following_url": "https://api.github.com/users/eriktelepovsky/following{/other_user}", "gists_url": "https://api.github.com/users/eriktelepovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriktelepovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriktelepovsky/subscriptions", "organizations_url": "https://api.github.com/users/eriktelepovsky/orgs", "repos_url": "https://api.github.com/users/eriktelepovsky/repos", "events_url": "https://api.github.com/users/eriktelepovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/eriktelepovsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-17T13:08:21Z", "updated_at": "2016-02-17T12:20:46Z", "closed_at": "2016-02-17T12:16:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple M2M relationship to Polymorphic model `Product`:\n\n```\nclass User(AbstractBaseUser, PermissionsMixin):\n    products = models.ManyToManyField(Product)\n```\n\nWhen I call `user.products.clear()` it works fine, it removes all references from user products.\n\nBut when I call `user.products.instance_of(Membership).clear()` it raises error:\n\n```\nAttributeError: 'PolymorphicQuerySet' object has no attribute 'clear'\n```\n\nRight now, I'm using this workaround:\n\n```\nfor membership in self.products.instance_of(Membership).all():\n    self.products.remove(membership)\n```\n\nIs there any better solution/fix for this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/174", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/174/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/174/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/174", "id": 120656576, "node_id": "MDU6SXNzdWUxMjA2NTY1NzY=", "number": 174, "title": "getting an error", "user": {"login": "kodeine", "id": 8620059, "node_id": "MDQ6VXNlcjg2MjAwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kodeine", "html_url": "https://github.com/kodeine", "followers_url": "https://api.github.com/users/kodeine/followers", "following_url": "https://api.github.com/users/kodeine/following{/other_user}", "gists_url": "https://api.github.com/users/kodeine/gists{/gist_id}", "starred_url": "https://api.github.com/users/kodeine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kodeine/subscriptions", "organizations_url": "https://api.github.com/users/kodeine/orgs", "repos_url": "https://api.github.com/users/kodeine/repos", "events_url": "https://api.github.com/users/kodeine/events{/privacy}", "received_events_url": "https://api.github.com/users/kodeine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-06T20:13:41Z", "updated_at": "2016-01-03T09:25:59Z", "closed_at": "2016-01-03T09:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am kinda new to python/django. I get the following error, \n`django.db.utils.OperationalError: (1054, \"Unknown column 'models_request.polymorphic_ctype_id' in 'field list'\")`\n\n``` python\n\nclass Request(PolymorphicModel):\n    TYPES = (\n        ('twitter', 'Twitter'),\n        ('facebook', 'Facebook'),\n        ('text', 'Text'),\n    )\n    STATUSES = (\n        ('active', 'Active'),\n        ('pending', 'Pending'),\n        ('cancelled', 'Cancelled'),\n    )\n    phone = models.CharField(max_length=15)\n    type = models.CharField(max_length=15, choices=TYPES)\n    status = models.CharField(max_length=15, choices=STATUSES, default='active')\n    updated_at = models.DateTimeField(auto_now=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    # communication = models.ManyToManyField(Communication, related_name='communication')\n\n    #objects = RequestQuerySet.as_manager()\n\n    class Meta:\n        unique_together = ('phone', 'type',)\n\n    def __unicode__(self):\n            return u\"%s %s\" % (self.phone, self.type)\n\n\n\nclass Communication(Request):\n    text = models.TextField()\n    expect = models.CharField(max_length=75, default='')\n\n    def __unicode__(self):\n            return u\"%s : %s\" % (self.text, self.expect)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/173", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/173/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/173/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/173", "id": 119686067, "node_id": "MDU6SXNzdWUxMTk2ODYwNjc=", "number": 173, "title": "Using Primary Key in Polymorphic Models", "user": {"login": "mjnaderi", "id": 2115303, "node_id": "MDQ6VXNlcjIxMTUzMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjnaderi", "html_url": "https://github.com/mjnaderi", "followers_url": "https://api.github.com/users/mjnaderi/followers", "following_url": "https://api.github.com/users/mjnaderi/following{/other_user}", "gists_url": "https://api.github.com/users/mjnaderi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjnaderi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjnaderi/subscriptions", "organizations_url": "https://api.github.com/users/mjnaderi/orgs", "repos_url": "https://api.github.com/users/mjnaderi/repos", "events_url": "https://api.github.com/users/mjnaderi/events{/privacy}", "received_events_url": "https://api.github.com/users/mjnaderi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-01T10:17:57Z", "updated_at": "2016-01-03T09:28:17Z", "closed_at": "2016-01-03T09:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two models:\n\n``` py\nclass A(PolymorphicModel):\n    pass\n\nclass B(A):\n    t = models.IntegerField(primary_key=True)\n```\n\nI have two instances of A and B in my database:\n\n```\n     b                                  a\n------------                       -----------\na_ptr_id = 7       --------->      id = 7\nt  (PK)  = 9\n```\n\nWhen I try to delete b:\n\n```\nB.objects.get(pk=9).delete()\n```\n\nthe delete command raises following exception:\n\n```\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/home/abc/test/.venv/lib/python2.7/site-packages/django/db/models/base.py\", line 895, in delete\n    collector.collect([self])\n  File \"/home/abc/test/.venv/lib/python2.7/site-packages/django/db/models/deletion.py\", line 212, in collect\n    parent_objs = [getattr(obj, ptr.name) for obj in new_objs]\n  File \"/home/abc/test/.venv/lib/python2.7/site-packages/polymorphic/polymorphic_model.py\", line 172, in accessor_function\n    attr = model.base_objects.get(pk=self.pk)\n  File \"/home/abc/test/.venv/lib/python2.7/site-packages/django/db/models/manager.py\", line 127, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/home/abc/test/.venv/lib/python2.7/site-packages/django/db/models/query.py\", line 334, in get\n    self.model._meta.object_name\nDoesNotExist: A matching query does not exist.\n```\n\nI found out that it is trying to delete the A object with id=9, instead of id=7. It uses `b.pk` to find id of related A object. But the primary key in B, is not a_ptr_id, I have used my own PK.\n\nI think it is good to add a note in documentation that says it is wrong to use a field as primary key in child models. Because the library creates and uses `*_ptr_id` as primary key.\n\nOr maybe it can be solved in another way.\n\nIt can cause serious problems (In this example, it can delete the wrong A object, if A with id=9 exists)\n\nFor now, I changed `primary_key=True` to `unique=True` in my code.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/171", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/171/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/171/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/171", "id": 115028780, "node_id": "MDU6SXNzdWUxMTUwMjg3ODA=", "number": 171, "title": "Does polymorphic support conditional expressions ?", "user": {"login": "EliotBerriot", "id": 1970915, "node_id": "MDQ6VXNlcjE5NzA5MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1970915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliotBerriot", "html_url": "https://github.com/EliotBerriot", "followers_url": "https://api.github.com/users/EliotBerriot/followers", "following_url": "https://api.github.com/users/EliotBerriot/following{/other_user}", "gists_url": "https://api.github.com/users/EliotBerriot/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliotBerriot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliotBerriot/subscriptions", "organizations_url": "https://api.github.com/users/EliotBerriot/orgs", "repos_url": "https://api.github.com/users/EliotBerriot/repos", "events_url": "https://api.github.com/users/EliotBerriot/events{/privacy}", "received_events_url": "https://api.github.com/users/EliotBerriot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-04T11:05:38Z", "updated_at": "2016-02-17T10:12:23Z", "closed_at": "2016-02-17T10:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assuming the following model:\n\n``` python\nclass Thing(PolymorphicModel):\n    NATURE_CHOICES = (\n        ('apple', 'apple'),\n        ('banana', 'banana'),\n    )\n    nature = models.CharField(choices=NATURE_CHOICES)\n\nclass ThingChild1(Thing):\n    pass    \n\nclass ThingChild2(Thing):\n    pass    \n```\n\nI would like to use django's 1.8 new [conditional expressions](http://django.readthedocs.org/en/latest/ref/models/conditional-expressions.html) to do some fancy aggregation.\n\nIt works perfectly with a non polymorphic `User` model:\n\n``` python\nfrom users.models import User\nfrom django.db import models\n\nqs = User.objects.all()\nqs.aggregate(\n    is_staff=models.Sum(models.Case(models.When(is_staff=True, then=1), output_field=models.IntegerField())),\n    not_staff=models.Sum(models.Case(models.When(is_staff=False, then=1), output_field=models.IntegerField())),\n)\n>>> {'is_staff': 9, 'not_staff': 123}\n```\n\nHowever using it with my polymorphic models defined above raise an exception:\n\n``` python\nqs = Thing.objects.all()\nqs.aggregate(\n    apple=models.Sum(models.Case(models.When(nature='apple', then=1), output_field=models.IntegerField())),\n    store=models.Sum(models.Case(models.When(nature='banana', then=1), output_field=models.IntegerField())),\n)\n```\n\nAnd the stack trace is:\n\n```\nAttributeError                            Traceback (most recent call last)\n<ipython-input-10-0d694a684284> in <module>()\n      7     apple=models.Sum(models.Case(models.When(nature='apple', then=1), output_field=models.IntegerField())),\n      8     store=models.Sum(models.Case(models.When(nature='banana', then=1), output_field=models.IntegerField())),\n      9 )\n\n/home/project/venv/lib/python3.4/site-packages/polymorphic/query.py in aggregate(self, *args, **kwargs)\n    134         \"\"\"translate the polymorphic field paths in the kwargs, then call vanilla aggregate.\n    135         We need no polymorphic object retrieval for aggregate => switch it off.\"\"\"\n--> 136         self._process_aggregate_args(args, kwargs)\n    137         qs = self.non_polymorphic()\n    138         return super(PolymorphicQuerySet, qs).aggregate(*args, **kwargs)\n\n/home/project/venv/lib/python3.4/site-packages/polymorphic/query.py in _process_aggregate_args(self, args, kwargs)\n    123             assert '___' not in get_lookup(a), 'PolymorphicModel: annotate()/aggregate(): ___ model lookup supported for keyword arguments only'\n    124         for a in six.itervalues(kwargs):\n--> 125             patch_lookup(a)\n    126 \n    127     def annotate(self, *args, **kwargs):\n\n/home/project/venv/lib/python3.4/site-packages/polymorphic/query.py in patch_lookup(a)\n    116                 if hasattr(a, 'source_expressions'):\n    117                     a.source_expressions[0].name = translate_polymorphic_field_path(\n--> 118                         self.model, a.source_expressions[0].name)\n    119 \n    120         get_lookup = lambda a: a.lookup if django.VERSION < (1, 8) else a.source_expressions[0].name\n\nAttributeError: 'Case' object has no attribute 'name'\n```\n\nI did not find any mention of conditional expressions in the docs, is this feature supported by polymorphic ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/169", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/169/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/169/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/169", "id": 112404922, "node_id": "MDU6SXNzdWUxMTI0MDQ5MjI=", "number": 169, "title": "force_insert=True seems to be ignored", "user": {"login": "numjcp", "id": 7204451, "node_id": "MDQ6VXNlcjcyMDQ0NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7204451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/numjcp", "html_url": "https://github.com/numjcp", "followers_url": "https://api.github.com/users/numjcp/followers", "following_url": "https://api.github.com/users/numjcp/following{/other_user}", "gists_url": "https://api.github.com/users/numjcp/gists{/gist_id}", "starred_url": "https://api.github.com/users/numjcp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/numjcp/subscriptions", "organizations_url": "https://api.github.com/users/numjcp/orgs", "repos_url": "https://api.github.com/users/numjcp/repos", "events_url": "https://api.github.com/users/numjcp/events{/privacy}", "received_events_url": "https://api.github.com/users/numjcp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-20T16:12:54Z", "updated_at": "2016-01-03T09:30:09Z", "closed_at": "2016-01-03T09:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When loading several objects(polymorphic ones), I've noticed that the force_insert=True kwarg in the save method was ignored when inserting data in parents tables. \nThe final object is directly inserted (as expected) but the ORM\u00a0still triggers updates on parents models.\nThe update fails and then an insert occurs wich is not what I expect.\n\nI guess behavior is the same with force_update.\n\nRegards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/168", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/168/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/168/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/168", "id": 111623465, "node_id": "MDU6SXNzdWUxMTE2MjM0NjU=", "number": 168, "title": "Missing add_type_form.html?", "user": {"login": "alfetopito", "id": 43217, "node_id": "MDQ6VXNlcjQzMjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/43217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfetopito", "html_url": "https://github.com/alfetopito", "followers_url": "https://api.github.com/users/alfetopito/followers", "following_url": "https://api.github.com/users/alfetopito/following{/other_user}", "gists_url": "https://api.github.com/users/alfetopito/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfetopito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfetopito/subscriptions", "organizations_url": "https://api.github.com/users/alfetopito/orgs", "repos_url": "https://api.github.com/users/alfetopito/repos", "events_url": "https://api.github.com/users/alfetopito/events{/privacy}", "received_events_url": "https://api.github.com/users/alfetopito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-15T14:02:25Z", "updated_at": "2015-10-15T17:15:14Z", "closed_at": "2015-10-15T14:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\n\nFirst of all, awesome tool, saves me bunch of time, thanks!\n\nJust one thing I couldn't find mention in the docs, so I'm not sure it should be there or I would have to do it by myself.\n\nOn the [example](https://django-polymorphic.readthedocs.org/en/latest/admin.html?highlight=template#example), you add two sub models to a parent model admin.\n\nWhen I do that, I get a `TemplateDoesNotExist`, since it can't find the `add_type_form.html` file in the following locations:\n\n```\nadmin/events/event/add_type_form.html, admin/events/add_type_form.html, admin/polymorphic/add_type_form.html, admin/add_type_form.html\n```\n\nWhen I register a single child model it works fine though.\n\nI do have to manually create it, right?\n\nUsing Django 1.8.5, python 2.7.9 and django_polymorphic 0.7.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/166", "repository_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic", "labels_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/166/comments", "events_url": "https://api.github.com/repos/django-polymorphic/django-polymorphic/issues/166/events", "html_url": "https://github.com/django-polymorphic/django-polymorphic/issues/166", "id": 109613249, "node_id": "MDU6SXNzdWUxMDk2MTMyNDk=", "number": 166, "title": "Django 1.9 support", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-10-03T09:00:38Z", "updated_at": "2015-12-25T15:27:05Z", "closed_at": "2015-12-16T14:57:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django 1.9 support probably needs multiple small changes here and there, but one of the first issues to be solved is how to deal with Django 1.9's new app loading behaviour. Since Django 1.8, loading models directly or indirectly from an app's `__init__.py` is deprecated. As of Django 1.9, it's not working anymore at all. See this thread: https://groups.google.com/forum/#!topic/django-developers/26GdwpmU6KQ\n\nThe `shortcuts` workaround seems like a good idea for me.\n\nI'm happy to come up with a patch.\n", "performed_via_github_app": null, "score": 1.0}]}