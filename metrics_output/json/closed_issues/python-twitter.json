{"total_count": 301, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bear/python-twitter/issues/671", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/671/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/671/events", "html_url": "https://github.com/bear/python-twitter/issues/671", "id": 639267294, "node_id": "MDU6SXNzdWU2MzkyNjcyOTQ=", "number": 671, "title": " l", "user": {"login": "Quagga11", "id": 66971306, "node_id": "MDQ6VXNlcjY2OTcxMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/66971306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quagga11", "html_url": "https://github.com/Quagga11", "followers_url": "https://api.github.com/users/Quagga11/followers", "following_url": "https://api.github.com/users/Quagga11/following{/other_user}", "gists_url": "https://api.github.com/users/Quagga11/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quagga11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quagga11/subscriptions", "organizations_url": "https://api.github.com/users/Quagga11/orgs", "repos_url": "https://api.github.com/users/Quagga11/repos", "events_url": "https://api.github.com/users/Quagga11/events{/privacy}", "received_events_url": "https://api.github.com/users/Quagga11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-16T00:01:14Z", "updated_at": "2020-06-16T00:02:35Z", "closed_at": "2020-06-16T00:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/670", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/670/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/670/events", "html_url": "https://github.com/bear/python-twitter/issues/670", "id": 639251586, "node_id": "MDU6SXNzdWU2MzkyNTE1ODY=", "number": 670, "title": "Dar-Twitter", "user": {"login": "Quagga11", "id": 66971306, "node_id": "MDQ6VXNlcjY2OTcxMzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/66971306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quagga11", "html_url": "https://github.com/Quagga11", "followers_url": "https://api.github.com/users/Quagga11/followers", "following_url": "https://api.github.com/users/Quagga11/following{/other_user}", "gists_url": "https://api.github.com/users/Quagga11/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quagga11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quagga11/subscriptions", "organizations_url": "https://api.github.com/users/Quagga11/orgs", "repos_url": "https://api.github.com/users/Quagga11/repos", "events_url": "https://api.github.com/users/Quagga11/events{/privacy}", "received_events_url": "https://api.github.com/users/Quagga11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T23:26:35Z", "updated_at": "2020-06-16T00:01:42Z", "closed_at": "2020-06-16T00:01:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/664", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/664/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/664/events", "html_url": "https://github.com/bear/python-twitter/issues/664", "id": 617883025, "node_id": "MDU6SXNzdWU2MTc4ODMwMjU=", "number": 664, "title": "Can TwitterError be more code friendly?", "user": {"login": "Kyu", "id": 8260745, "node_id": "MDQ6VXNlcjgyNjA3NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8260745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kyu", "html_url": "https://github.com/Kyu", "followers_url": "https://api.github.com/users/Kyu/followers", "following_url": "https://api.github.com/users/Kyu/following{/other_user}", "gists_url": "https://api.github.com/users/Kyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kyu/subscriptions", "organizations_url": "https://api.github.com/users/Kyu/orgs", "repos_url": "https://api.github.com/users/Kyu/repos", "events_url": "https://api.github.com/users/Kyu/events{/privacy}", "received_events_url": "https://api.github.com/users/Kyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T02:49:30Z", "updated_at": "2020-05-14T03:36:04Z", "closed_at": "2020-05-14T03:36:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could the class possibly have an `error_code` param so that one could just do a check for `TwitterError.error_code` ?\r\n\r\nI could make a PR for such if it's accepted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/653", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/653/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/653/events", "html_url": "https://github.com/bear/python-twitter/issues/653", "id": 577578230, "node_id": "MDU6SXNzdWU1Nzc1NzgyMzA=", "number": 653, "title": "ModuleNotFoundError: No module named 'twitter'", "user": {"login": "orjanj", "id": 47573432, "node_id": "MDQ6VXNlcjQ3NTczNDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/47573432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orjanj", "html_url": "https://github.com/orjanj", "followers_url": "https://api.github.com/users/orjanj/followers", "following_url": "https://api.github.com/users/orjanj/following{/other_user}", "gists_url": "https://api.github.com/users/orjanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/orjanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orjanj/subscriptions", "organizations_url": "https://api.github.com/users/orjanj/orgs", "repos_url": "https://api.github.com/users/orjanj/repos", "events_url": "https://api.github.com/users/orjanj/events{/privacy}", "received_events_url": "https://api.github.com/users/orjanj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-08T22:37:24Z", "updated_at": "2020-03-15T21:18:53Z", "closed_at": "2020-03-15T21:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "After following the installation, I integrated the test code to check the connection to Twitter.\r\nIt seems like there's a issue with python3 running python-twitter, since I get the correct response when running python2.\r\n\r\n```\r\n# python3 Twitter.py\r\nTraceback (most recent call last):\r\n  File \"Twitter.py\", line 2, in <module>\r\n    import twitter\r\nModuleNotFoundError: No module named 'twitter'\r\n\r\n# python2 Twitter.py\r\n{\"created_at\": \"Sun Jan 30 hh:mm:ss +0000 2020\", \"default_profile\": true, \"default_profile_image\": true, \"friends_count\": n, \"id\": 1234567890123456789, \"id_str\": \"1234567890123456789\", \"name\": \"accname\", \"profile_background_color\": \"FFFFFF\", \"profile_image_url\": \"http://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png\", \"profile_image_url_https\": \"https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png\", \"profile_link_color\": \"000000\", \"profile_sidebar_border_color\": \"C0DEED\", \"profile_sidebar_fill_color\": \"DDEEF6\", \"profile_text_color\": \"333333\", \"profile_use_background_image\": true, \"screen_name\": \"screenname\"}\r\n```\r\n\r\nHave tried to uninstall earlier versions of `twitter` and `python-twitter`, reinstalled it and everything, does not seems like it's working.\r\n\r\nPython-versions:\r\n```\r\n# python2 --version && python3 --version && pip --version\r\nPython 2.7.17\r\nPython 3.6.9\r\npip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\r\n```\r\n\r\nAny idea of what the issue might be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/649", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/649/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/649/events", "html_url": "https://github.com/bear/python-twitter/issues/649", "id": 564203557, "node_id": "MDU6SXNzdWU1NjQyMDM1NTc=", "number": 649, "title": "Twitter Test", "user": {"login": "TSCodes", "id": 39629371, "node_id": "MDQ6VXNlcjM5NjI5Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/39629371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TSCodes", "html_url": "https://github.com/TSCodes", "followers_url": "https://api.github.com/users/TSCodes/followers", "following_url": "https://api.github.com/users/TSCodes/following{/other_user}", "gists_url": "https://api.github.com/users/TSCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/TSCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TSCodes/subscriptions", "organizations_url": "https://api.github.com/users/TSCodes/orgs", "repos_url": "https://api.github.com/users/TSCodes/repos", "events_url": "https://api.github.com/users/TSCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/TSCodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-12T19:03:13Z", "updated_at": "2020-02-12T19:11:30Z", "closed_at": "2020-02-12T19:11:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/643", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/643/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/643/events", "html_url": "https://github.com/bear/python-twitter/issues/643", "id": 525238005, "node_id": "MDU6SXNzdWU1MjUyMzgwMDU=", "number": 643, "title": "Add support for subtitle endpoints", "user": {"login": "danielthepope", "id": 5173183, "node_id": "MDQ6VXNlcjUxNzMxODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5173183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielthepope", "html_url": "https://github.com/danielthepope", "followers_url": "https://api.github.com/users/danielthepope/followers", "following_url": "https://api.github.com/users/danielthepope/following{/other_user}", "gists_url": "https://api.github.com/users/danielthepope/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielthepope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielthepope/subscriptions", "organizations_url": "https://api.github.com/users/danielthepope/orgs", "repos_url": "https://api.github.com/users/danielthepope/repos", "events_url": "https://api.github.com/users/danielthepope/events{/privacy}", "received_events_url": "https://api.github.com/users/danielthepope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-19T20:09:16Z", "updated_at": "2019-12-15T15:36:01Z", "closed_at": "2019-12-15T15:36:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's possible to use the Twitter API to upload SRT subtitles and attach them to an already-uploaded video.\r\n\r\nThe guide to upload and attach subtitles is part of the API documentation for [media/subtitles/create](https://developer.twitter.com/en/docs/media/upload-media/api-reference/post-media-subtitles-create). The guide suggests uploading an SRT file through the chunked media upload endpoint. After a quick look it looks like `twitter_utils.parse_media_file` returns `None` for the `media_type` if you try a file that has an `.srt` extension.\r\n\r\nThere also needs to be helper functions implemented for [media/subtitles/create](https://developer.twitter.com/en/docs/media/upload-media/api-reference/post-media-subtitles-create) and [media/subtitles/delete](https://developer.twitter.com/en/docs/media/upload-media/api-reference/post-media-subtitles-delete)\r\n\r\nI'm happy to implement this myself. I have a working proof of concept for /create and I've made some changes to the `parse_media_file` function that will make `UploadMediaChunked` happy with uploading SRT files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/639", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/639/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/639/events", "html_url": "https://github.com/bear/python-twitter/issues/639", "id": 516234155, "node_id": "MDU6SXNzdWU1MTYyMzQxNTU=", "number": 639, "title": "The use of TwitterError", "user": {"login": "webtweakers", "id": 1565277, "node_id": "MDQ6VXNlcjE1NjUyNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webtweakers", "html_url": "https://github.com/webtweakers", "followers_url": "https://api.github.com/users/webtweakers/followers", "following_url": "https://api.github.com/users/webtweakers/following{/other_user}", "gists_url": "https://api.github.com/users/webtweakers/gists{/gist_id}", "starred_url": "https://api.github.com/users/webtweakers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webtweakers/subscriptions", "organizations_url": "https://api.github.com/users/webtweakers/orgs", "repos_url": "https://api.github.com/users/webtweakers/repos", "events_url": "https://api.github.com/users/webtweakers/events{/privacy}", "received_events_url": "https://api.github.com/users/webtweakers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-01T17:01:05Z", "updated_at": "2019-11-07T00:54:10Z", "closed_at": "2019-11-07T00:54:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Throughout the python-twitter library, TwitterError has been used in a few different ways: for value errors, for type errors, for http errors and for Twitter's API errors. And in all cases TwitterError will be instantiated in different ways. TwitterError contains either a string, list or dict. Some examples:\r\n\r\nString:\r\n`raise TwitterError(\"The twitter.Api instance must be authenticated.\")`\r\n\r\nList:\r\n`raise TwitterError(data['errors'])`\r\n\r\nDict:\r\n`raise TwitterError({'message': \"Image data could not be processed\"})`\r\n\r\nAdditionally the Twitter API regularly returns an HTTP status code, like 420, which is not properly caught by python-twitter. It will simply do: \r\n`raise TwitterError({'Unknown error': '{0}'.format(json_data)})`\r\n\r\nA similar issue has been raised before: https://github.com/bear/python-twitter/issues/569\r\n\r\nTwitter is keen on returning errors when trying to use their API, so catching and being able to handle those errors properly is really crucial. The suggested method in issue 569 is insufficient.\r\n\r\nI would propose to let ValueErrors and TypeErrors just be - don't cast them to TwitterError.\r\n\r\nFrom the [Python documentation](https://docs.python.org/3/library/exceptions.html#TypeError):\r\n\r\n> Passing arguments of the wrong type (e.g. passing a list when an int is expected) should result in a TypeError, but passing arguments with the wrong value (e.g. a number outside expected boundaries) should result in a ValueError.\r\n\r\nSo a case like this:\r\n\r\n```\r\ntry:\r\n    total_count = int(total_count)\r\nexcept ValueError:\r\n    raise TwitterError({'message': \"total_count must be an integer\"})\r\n```\r\n\r\nWould become this:\r\n\r\n```\r\ntry:\r\n    total_count = int(total_count)\r\nexcept ValueError:\r\n    raise TypeError(\"total_count must be an integer\")\r\n```\r\n\r\nAnother example - this:\r\n\r\n```\r\nif len(uids) > 100:\r\n    raise TwitterError(\"No more than 100 users may be requested per request.\")\r\n```\r\n\r\nWould become this:\r\n\r\n```\r\nif len(uids) > 100:\r\n    raise ValueError(\"No more than 100 users may be requested per request.\")\r\n```\r\n\r\nWhat is left are the actual API errors, returned by Twitter's API. Here it would be REALLY helpful if a thing like TwitterAPIError existed, containing a single error with a `message` and `code` attribute.\r\n\r\nAdditionally it would be extremely helpful if the HTTP errors were not swept under the carpet as an \"Unknown error\", but bubbled up so they could be properly handled as well. Maybe introduce an additional TwitterHTTPError for those cases.\r\n\r\nI'm realising these changes would make python-twitter not backward compatible, but that's something I personally can live with. I will probably create a branch and do this myself. Would a Pull-Request be appreciated, when/if I get to that point?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/637", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/637/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/637/events", "html_url": "https://github.com/bear/python-twitter/issues/637", "id": 509615810, "node_id": "MDU6SXNzdWU1MDk2MTU4MTA=", "number": 637, "title": "Documentation to help new users avoid \"Only unicode objects are escapable\" error", "user": {"login": "chmreid", "id": 53452777, "node_id": "MDQ6VXNlcjUzNDUyNzc3", "avatar_url": "https://avatars3.githubusercontent.com/u/53452777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmreid", "html_url": "https://github.com/chmreid", "followers_url": "https://api.github.com/users/chmreid/followers", "following_url": "https://api.github.com/users/chmreid/following{/other_user}", "gists_url": "https://api.github.com/users/chmreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmreid/subscriptions", "organizations_url": "https://api.github.com/users/chmreid/orgs", "repos_url": "https://api.github.com/users/chmreid/repos", "events_url": "https://api.github.com/users/chmreid/events{/privacy}", "received_events_url": "https://api.github.com/users/chmreid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-20T16:11:15Z", "updated_at": "2019-11-19T02:15:05Z", "closed_at": "2019-11-19T02:15:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### The problem with the current documentation\r\n\r\nOn this page of the documentation (<https://python-twitter.readthedocs.io/en/latest/getting_started.html#getting-your-application-tokens>), the following bit of example code is given:\r\n\r\n```\r\nimport twitter\r\napi = twitter.Api(consumer_key=[consumer key],\r\n                  consumer_secret=[consumer secret],\r\n                  access_token_key=[access token],\r\n                  access_token_secret=[access token secret])\r\n```\r\n\r\nThe use of the square brackets is overloaded, as `[consumer key]` in Python indicates a list containing a variable with your consumer key, whereas the intention of the documentation is for the entire bit, square brackets too, to be replaced with a string. \r\n\r\n### The not-good outcome\r\n\r\nThe not-good outcome is that if a new user trying to use twitter-api for the first time accidentally puts `[\"AAAAAAAA\"]` instead of `\"AAAAAAAAAA\"` for their consumer/access token key/secret, they get a very cryptic error message that gives no indication of how to fix the problem:\r\n\r\n```\r\n<...very long traceback...>\r\n\r\n~/.pyenv/versions/miniconda3-4.3.30/lib/python3.6/site-packages/oauthlib/oauth1/rfc5849/utils.py in escape(u)\r\n     55     if not isinstance(u, unicode_type):\r\n     56         raise ValueError('Only unicode objects are escapable. ' +\r\n---> 57                          'Got %r of type %s.' % (u, type(u)))\r\n     58     # Letters, digits, and the characters '_.-' are already treated as safe\r\n     59     # by urllib.quote(). We need to add '~' to fully support rfc5849.\r\n\r\nValueError: Only unicode objects are escapable. Got <generator object to_unicode.<locals>.<genexpr> at 0x111411518> of type <class 'generator'>.\r\n```\r\n\r\n### Proposed solution\r\n\r\nI propose replacing this code example with:\r\n\r\n```\r\nimport twitter\r\napi = twitter.Api(consumer_key=<consumer key>,\r\n                  consumer_secret=<consumer secret>,\r\n                  access_token_key=<access token],\r\n                  access_token_secret=<access token>)\r\n```\r\n\r\nor better yet include some code from one of the examples: https://github.com/bear/python-twitter/blob/master/examples/view_friends.py\r\n\r\n```\r\nimport twitter\r\n\r\nCONSUMER_KEY = 'WWWWWWWW'\r\nCONSUMER_SECRET = 'XXXXXXXX'\r\nACCESS_TOKEN = 'YYYYYYYY'\r\nACCESS_TOKEN_SECRET = 'ZZZZZZZZ'\r\n\r\napi = twitter.Api(consumer_key=CONSUMER_KEY,\r\n                  consumer_secret=CONSUMER_SECRET,\r\n                  access_token_key=ACCESS_TOKEN,\r\n                  acces\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/632", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/632/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/632/events", "html_url": "https://github.com/bear/python-twitter/issues/632", "id": 499072007, "node_id": "MDU6SXNzdWU0OTkwNzIwMDc=", "number": 632, "title": "Tons of errors when running script for the first time.", "user": {"login": "Flipp3rrr", "id": 33151653, "node_id": "MDQ6VXNlcjMzMTUxNjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/33151653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flipp3rrr", "html_url": "https://github.com/Flipp3rrr", "followers_url": "https://api.github.com/users/Flipp3rrr/followers", "following_url": "https://api.github.com/users/Flipp3rrr/following{/other_user}", "gists_url": "https://api.github.com/users/Flipp3rrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flipp3rrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flipp3rrr/subscriptions", "organizations_url": "https://api.github.com/users/Flipp3rrr/orgs", "repos_url": "https://api.github.com/users/Flipp3rrr/repos", "events_url": "https://api.github.com/users/Flipp3rrr/events{/privacy}", "received_events_url": "https://api.github.com/users/Flipp3rrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-26T19:25:55Z", "updated_at": "2019-10-05T13:24:36Z", "closed_at": "2019-10-05T13:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Problem\r\nWhen I tried using this library for my Twitter application I immediately ran into problems; tons of errors. I have put the code and error log below.\r\n\r\n# Code\r\n```py\r\nimport twitter\r\n\r\napi = twitter.Api(consumer_key=[\"NO U\"],\r\n                  consumer_secret=[\"NO U\"],\r\n                  access_token_key=[\"NO U\"],\r\n                  access_token_secret=[\"NO U\"])\r\n\r\nstatuses = api.GetUserTimeline(screen_name=\"Flipp3rrr\")\r\nprint([s.text for s in statuses])\r\n```\r\nNB: In the real script \"NO U\" is replaced with the token.\r\n\r\n# Error log\r\nhttps://pastebin.com/RHTfT7Z5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/625", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/625/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/625/events", "html_url": "https://github.com/bear/python-twitter/issues/625", "id": 473209147, "node_id": "MDU6SXNzdWU0NzMyMDkxNDc=", "number": 625, "title": "sleep_on_rate_limit still returning exception?", "user": {"login": "aaronn", "id": 1653630, "node_id": "MDQ6VXNlcjE2NTM2MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1653630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronn", "html_url": "https://github.com/aaronn", "followers_url": "https://api.github.com/users/aaronn/followers", "following_url": "https://api.github.com/users/aaronn/following{/other_user}", "gists_url": "https://api.github.com/users/aaronn/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronn/subscriptions", "organizations_url": "https://api.github.com/users/aaronn/orgs", "repos_url": "https://api.github.com/users/aaronn/repos", "events_url": "https://api.github.com/users/aaronn/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T07:03:08Z", "updated_at": "2019-08-06T02:17:00Z", "closed_at": "2019-08-06T02:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the `sleep_on_rate_limit` flag and it's generally working but very rarely for some reason in my logs I'm still seeing a failed error come through with `[{'message': 'Rate limit exceeded', 'code': 88}]`.\r\n\r\nAny reason why this might happen, and any way I can get it to still continue the scheduled work and just go back to sleep? I could try / catch the `Exception` but it would just skip the loop of scheduled work right? (FWIW I'm looping through results returned from getFollowerID then UsersLookup.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/624", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/624/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/624/events", "html_url": "https://github.com/bear/python-twitter/issues/624", "id": 470673187, "node_id": "MDU6SXNzdWU0NzA2NzMxODc=", "number": 624, "title": "Get tweets from Tweet ID", "user": {"login": "Nitrama", "id": 16880671, "node_id": "MDQ6VXNlcjE2ODgwNjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/16880671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nitrama", "html_url": "https://github.com/Nitrama", "followers_url": "https://api.github.com/users/Nitrama/followers", "following_url": "https://api.github.com/users/Nitrama/following{/other_user}", "gists_url": "https://api.github.com/users/Nitrama/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nitrama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nitrama/subscriptions", "organizations_url": "https://api.github.com/users/Nitrama/orgs", "repos_url": "https://api.github.com/users/Nitrama/repos", "events_url": "https://api.github.com/users/Nitrama/events{/privacy}", "received_events_url": "https://api.github.com/users/Nitrama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768676, "node_id": "MDU6TGFiZWwxMzc2ODY3Ng==", "url": "https://api.github.com/repos/bear/python-twitter/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-20T13:10:16Z", "updated_at": "2019-07-23T01:11:28Z", "closed_at": "2019-07-23T01:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nis there a way to get all the data from tweets?\r\nSo Likes/Retweets/comments?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/623", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/623/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/623/events", "html_url": "https://github.com/bear/python-twitter/issues/623", "id": 466820992, "node_id": "MDU6SXNzdWU0NjY4MjA5OTI=", "number": 623, "title": "Increase number of records for Friends / Followers retrieved to match new limit", "user": {"login": "davidmanheim", "id": 1664046, "node_id": "MDQ6VXNlcjE2NjQwNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1664046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmanheim", "html_url": "https://github.com/davidmanheim", "followers_url": "https://api.github.com/users/davidmanheim/followers", "following_url": "https://api.github.com/users/davidmanheim/following{/other_user}", "gists_url": "https://api.github.com/users/davidmanheim/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmanheim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmanheim/subscriptions", "organizations_url": "https://api.github.com/users/davidmanheim/orgs", "repos_url": "https://api.github.com/users/davidmanheim/repos", "events_url": "https://api.github.com/users/davidmanheim/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmanheim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T10:57:53Z", "updated_at": "2019-07-15T06:54:33Z", "closed_at": "2019-07-15T06:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The twitter API now allows 5,000 records at a time, but the code, in GetFriendsPaged and GetFollowersPaged, sets count to 200, the old limit. This should presumably be increased.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/622", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/622/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/622/events", "html_url": "https://github.com/bear/python-twitter/issues/622", "id": 460530371, "node_id": "MDU6SXNzdWU0NjA1MzAzNzE=", "number": 622, "title": "Is it possible to get stream data separated by expressions?", "user": {"login": "dhsdshdhk", "id": 28062763, "node_id": "MDQ6VXNlcjI4MDYyNzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/28062763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhsdshdhk", "html_url": "https://github.com/dhsdshdhk", "followers_url": "https://api.github.com/users/dhsdshdhk/followers", "following_url": "https://api.github.com/users/dhsdshdhk/following{/other_user}", "gists_url": "https://api.github.com/users/dhsdshdhk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhsdshdhk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhsdshdhk/subscriptions", "organizations_url": "https://api.github.com/users/dhsdshdhk/orgs", "repos_url": "https://api.github.com/users/dhsdshdhk/repos", "events_url": "https://api.github.com/users/dhsdshdhk/events{/privacy}", "received_events_url": "https://api.github.com/users/dhsdshdhk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768676, "node_id": "MDU6TGFiZWwxMzc2ODY3Ng==", "url": "https://api.github.com/repos/bear/python-twitter/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T16:44:11Z", "updated_at": "2019-06-27T01:05:53Z", "closed_at": "2019-06-27T01:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\ndef main():\r\n    with open('output.txt', 'a') as f:\r\n        # api.GetStreamFilter will return a generator that yields one status\r\n        # message (i.e., Tweet) at a time as a JSON dictionary.\r\n        for line in api.GetStreamFilter(track=['expA', 'expB'], languages=LANGUAGES):\r\n            f.write(json.dumps(line))\r\n            f.write('\\n')\r\n```\r\n\r\nThe above code will group all my tracked tweets matching either expression into a single json file. Is it possible to separate them so each expression goes into its own file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/621", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/621/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/621/events", "html_url": "https://github.com/bear/python-twitter/issues/621", "id": 457228617, "node_id": "MDU6SXNzdWU0NTcyMjg2MTc=", "number": 621, "title": "Bad Link in Wiki", "user": {"login": "HEHenson", "id": 7622251, "node_id": "MDQ6VXNlcjc2MjIyNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7622251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HEHenson", "html_url": "https://github.com/HEHenson", "followers_url": "https://api.github.com/users/HEHenson/followers", "following_url": "https://api.github.com/users/HEHenson/following{/other_user}", "gists_url": "https://api.github.com/users/HEHenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/HEHenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HEHenson/subscriptions", "organizations_url": "https://api.github.com/users/HEHenson/orgs", "repos_url": "https://api.github.com/users/HEHenson/repos", "events_url": "https://api.github.com/users/HEHenson/events{/privacy}", "received_events_url": "https://api.github.com/users/HEHenson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T02:27:52Z", "updated_at": "2019-06-25T01:51:10Z", "closed_at": "2019-06-25T01:51:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is similar to (Wiki points to wrong url #470)\r\n\r\nIf I click on the documentation in the wiki\r\nthe last release API documentation at: http://dev.twitter.com/doc \r\n\r\n\"I get sorry that page doesn't exist\"\r\n\r\nThis is June 17 in the evening", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/617", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/617/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/617/events", "html_url": "https://github.com/bear/python-twitter/issues/617", "id": 453162196, "node_id": "MDU6SXNzdWU0NTMxNjIxOTY=", "number": 617, "title": "Need to obtain specific info from api.VerifyCredentials()", "user": {"login": "adrielav2", "id": 50597523, "node_id": "MDQ6VXNlcjUwNTk3NTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/50597523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrielav2", "html_url": "https://github.com/adrielav2", "followers_url": "https://api.github.com/users/adrielav2/followers", "following_url": "https://api.github.com/users/adrielav2/following{/other_user}", "gists_url": "https://api.github.com/users/adrielav2/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrielav2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrielav2/subscriptions", "organizations_url": "https://api.github.com/users/adrielav2/orgs", "repos_url": "https://api.github.com/users/adrielav2/repos", "events_url": "https://api.github.com/users/adrielav2/events{/privacy}", "received_events_url": "https://api.github.com/users/adrielav2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768676, "node_id": "MDU6TGFiZWwxMzc2ODY3Ng==", "url": "https://api.github.com/repos/bear/python-twitter/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T17:53:54Z", "updated_at": "2019-06-12T22:24:18Z", "closed_at": "2019-06-12T22:24:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem is that I need to get specific info from the user that logs in with my app, so when using VerifyCredentials I am trying to get for example his username, but I can't get specific info because it returns an user.Twitter and I need it as a dictionary or JSON, is there anyway around this? I am new at programming, sorry if it is kind of dumb.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/616", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/616/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/616/events", "html_url": "https://github.com/bear/python-twitter/issues/616", "id": 451930459, "node_id": "MDU6SXNzdWU0NTE5MzA0NTk=", "number": 616, "title": "API's tweet_mode should default to extended, not truncated", "user": {"login": "davidmanheim", "id": 1664046, "node_id": "MDQ6VXNlcjE2NjQwNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1664046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmanheim", "html_url": "https://github.com/davidmanheim", "followers_url": "https://api.github.com/users/davidmanheim/followers", "following_url": "https://api.github.com/users/davidmanheim/following{/other_user}", "gists_url": "https://api.github.com/users/davidmanheim/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmanheim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmanheim/subscriptions", "organizations_url": "https://api.github.com/users/davidmanheim/orgs", "repos_url": "https://api.github.com/users/davidmanheim/repos", "events_url": "https://api.github.com/users/davidmanheim/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmanheim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T10:58:02Z", "updated_at": "2019-06-06T11:14:38Z", "closed_at": "2019-06-06T11:14:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems problematic to have the default behavior be **_not_** to get the full tweet text. Can this be changed?\r\n\r\n(It was personally very frustrating to have done large amounts of work and find I needed to re-do everything to get the data. I'm sure there are backwards compatibility questions, but they should be minor.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/611", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/611/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/611/events", "html_url": "https://github.com/bear/python-twitter/issues/611", "id": 419207097, "node_id": "MDU6SXNzdWU0MTkyMDcwOTc=", "number": 611, "title": "AttributeError: module 'twitter' has no attribute 'Api'", "user": {"login": "datascienceconsultingllc", "id": 47695903, "node_id": "MDQ6VXNlcjQ3Njk1OTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/47695903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datascienceconsultingllc", "html_url": "https://github.com/datascienceconsultingllc", "followers_url": "https://api.github.com/users/datascienceconsultingllc/followers", "following_url": "https://api.github.com/users/datascienceconsultingllc/following{/other_user}", "gists_url": "https://api.github.com/users/datascienceconsultingllc/gists{/gist_id}", "starred_url": "https://api.github.com/users/datascienceconsultingllc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datascienceconsultingllc/subscriptions", "organizations_url": "https://api.github.com/users/datascienceconsultingllc/orgs", "repos_url": "https://api.github.com/users/datascienceconsultingllc/repos", "events_url": "https://api.github.com/users/datascienceconsultingllc/events{/privacy}", "received_events_url": "https://api.github.com/users/datascienceconsultingllc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-10T16:54:30Z", "updated_at": "2019-07-08T01:14:03Z", "closed_at": "2019-07-08T01:14:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError: module 'twitter' has no attribute 'Api' \r\n\r\nThis is similar to other issues and I've read through them all, but I am still having issues. I understand there is a twitter and a python-twitter library. I've tried pip uninstall twitter pip install python-twitter and I've also tried pip install python-twitter==3.1.  **Update** I've also tried to install directly from git through anaconda prompt and still running into issues. \r\n\r\nBasically it works on my first install of Anaconda.  When I close it down and reopen it for a second time I am getting this error. I have uninstalled Anaconda and then reinstalled it and my code worked until I closed and reopened it.  \r\n\r\n`#import packages and connect to Twitter API\r\nimport twitter\r\nimport pandas as pd\r\n\r\napi = twitter.Api(consumer_key='hidden',\r\nconsumer_secret='hidden',\r\naccess_token_key='hidden',\r\naccess_token_secret='hidden')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/609", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/609/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/609/events", "html_url": "https://github.com/bear/python-twitter/issues/609", "id": 418662189, "node_id": "MDU6SXNzdWU0MTg2NjIxODk=", "number": 609, "title": "twitter.error.TwitterError: {'code': 44, 'message': 'attachment_url parameter is invalid.'}] #597", "user": {"login": "hsmatis", "id": 3781179, "node_id": "MDQ6VXNlcjM3ODExNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3781179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsmatis", "html_url": "https://github.com/hsmatis", "followers_url": "https://api.github.com/users/hsmatis/followers", "following_url": "https://api.github.com/users/hsmatis/following{/other_user}", "gists_url": "https://api.github.com/users/hsmatis/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsmatis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsmatis/subscriptions", "organizations_url": "https://api.github.com/users/hsmatis/orgs", "repos_url": "https://api.github.com/users/hsmatis/repos", "events_url": "https://api.github.com/users/hsmatis/events{/privacy}", "received_events_url": "https://api.github.com/users/hsmatis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-08T07:13:35Z", "updated_at": "2019-03-08T20:44:32Z", "closed_at": "2019-03-08T13:11:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue was closed.  However, I am getting the same problem and whatever I try gives me a 44 error.\r\n\r\nI used the line\r\nurl= \"https://www.google.com\"\r\n`twitter.error.TwitterError: [{'code': 44, 'message': 'attachment_url parameter is invalid.'}]`\r\nI have tried many other urls and they all fail with the save error. Can anyone give me a url that actually works?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/608", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/608/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/608/events", "html_url": "https://github.com/bear/python-twitter/issues/608", "id": 418473911, "node_id": "MDU6SXNzdWU0MTg0NzM5MTE=", "number": 608, "title": "Working with `urllib.parse.quote`", "user": {"login": "csbrown", "id": 1459444, "node_id": "MDQ6VXNlcjE0NTk0NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1459444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csbrown", "html_url": "https://github.com/csbrown", "followers_url": "https://api.github.com/users/csbrown/followers", "following_url": "https://api.github.com/users/csbrown/following{/other_user}", "gists_url": "https://api.github.com/users/csbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/csbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csbrown/subscriptions", "organizations_url": "https://api.github.com/users/csbrown/orgs", "repos_url": "https://api.github.com/users/csbrown/repos", "events_url": "https://api.github.com/users/csbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/csbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-07T19:25:12Z", "updated_at": "2019-03-10T21:10:47Z", "closed_at": "2019-03-10T21:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per the [docs](https://python-twitter.readthedocs.io/en/latest/searching.html), we can use this to perform a raw query search:\r\n\r\n```\r\nresults = api.GetSearch(\r\n    raw_query=\"q=twitter%20&result_type=recent&since=2014-07-19&count=100\")\r\n```\r\n\r\nHowever, sometimes it is necessary to url encode the various weird symbols that go into a query.  Python provides a handy function for this, `urllib.parse.quote`.  However, it does not play well with `api.GetSearch`:\r\n\r\n```\r\nresults = api.GetSearch(\r\n        raw_query=urllib.parse.quote(\"q=twitter%20&result_type=recent&since=2014-07-19&count=100\"))\r\n```\r\n\r\ngives\r\n\r\n```\r\ntwitter.error.TwitterError: [{'code': 25, 'message': 'Query parameters are missing.'}]\r\n```\r\n\r\nHow do I get the api to play well with url encoded parameters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/600", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/600/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/600/events", "html_url": "https://github.com/bear/python-twitter/issues/600", "id": 393891208, "node_id": "MDU6SXNzdWUzOTM4OTEyMDg=", "number": 600, "title": "DirectMessage: KeyError: 'event'", "user": {"login": "webtweakers", "id": 1565277, "node_id": "MDQ6VXNlcjE1NjUyNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webtweakers", "html_url": "https://github.com/webtweakers", "followers_url": "https://api.github.com/users/webtweakers/followers", "following_url": "https://api.github.com/users/webtweakers/following{/other_user}", "gists_url": "https://api.github.com/users/webtweakers/gists{/gist_id}", "starred_url": "https://api.github.com/users/webtweakers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webtweakers/subscriptions", "organizations_url": "https://api.github.com/users/webtweakers/orgs", "repos_url": "https://api.github.com/users/webtweakers/repos", "events_url": "https://api.github.com/users/webtweakers/events{/privacy}", "received_events_url": "https://api.github.com/users/webtweakers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-24T14:30:08Z", "updated_at": "2018-12-31T15:26:24Z", "closed_at": "2018-12-31T15:26:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In reference to issue: https://github.com/bear/python-twitter/issues/587\r\n\r\nA little follow-up on this... It is possible that the Twitter API returns in error and that 'event' is not returned in the response.  Trying to create the DirectMessage object as the response of the PostDirectMessage call will then fail:\r\n\r\n```python\r\ndm = DirectMessage(\r\n    created_at=data['event']['created_timestamp'],\r\n    id=data['event']['id'],\r\n    recipient_id=data['event']['message_create']['target']['recipient_id'],\r\n    sender_id=data['event']['message_create']['sender_id'],\r\n    text=data['event']['message_create']['message_data']['text'],\r\n)\r\n```\r\n\r\nThis code fails with a `KeyError: 'event'`.\r\n\r\nThis happens, for example, when attempting to send a direct message to a user that is not following you.\r\n\r\nWhen setting return_json=True, the returned data will then be something like this:\r\n\r\n```\r\n{'errors': [{'code': 150,\r\n   'message': 'You cannot send messages to users who are not following you.'}]}\r\n```\r\n\r\nClearly 'event' is missing.\r\n\r\nI think the return data of the call to the Twitter API needs to be checked for cases like this, before naively trying to create the DirectMessage object.\r\n\r\nUPDATE: actually it looks like this line is simply missing after calling the Twitter API:\r\n\r\n```python\r\ndata = self._ParseAndCheckTwitter(resp.content.decode('utf-8'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/598", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/598/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/598/events", "html_url": "https://github.com/bear/python-twitter/issues/598", "id": 390820272, "node_id": "MDU6SXNzdWUzOTA4MjAyNzI=", "number": 598, "title": "Max count for GetUserTimeline from 200 to 3200", "user": {"login": "ChiefMateStarbuck", "id": 23060145, "node_id": "MDQ6VXNlcjIzMDYwMTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/23060145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChiefMateStarbuck", "html_url": "https://github.com/ChiefMateStarbuck", "followers_url": "https://api.github.com/users/ChiefMateStarbuck/followers", "following_url": "https://api.github.com/users/ChiefMateStarbuck/following{/other_user}", "gists_url": "https://api.github.com/users/ChiefMateStarbuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChiefMateStarbuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChiefMateStarbuck/subscriptions", "organizations_url": "https://api.github.com/users/ChiefMateStarbuck/orgs", "repos_url": "https://api.github.com/users/ChiefMateStarbuck/repos", "events_url": "https://api.github.com/users/ChiefMateStarbuck/events{/privacy}", "received_events_url": "https://api.github.com/users/ChiefMateStarbuck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-13T19:14:44Z", "updated_at": "2018-12-31T19:47:43Z", "closed_at": "2018-12-31T19:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm certain I have an idea as to how to increase the GetUserTimeline function from 200 to 3200 tweets.\r\nIs there a specific reason as to why it hasn't increased as of yet?\r\nIf I can get a confirmation, I'll get started coding the solution up. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/597", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/597/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/597/events", "html_url": "https://github.com/bear/python-twitter/issues/597", "id": 384859653, "node_id": "MDU6SXNzdWUzODQ4NTk2NTM=", "number": 597, "title": "twitter.error.TwitterError: {'code': 44, 'message': 'attachment_url parameter is invalid.'}]", "user": {"login": "acupoftee", "id": 15068267, "node_id": "MDQ6VXNlcjE1MDY4MjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/15068267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acupoftee", "html_url": "https://github.com/acupoftee", "followers_url": "https://api.github.com/users/acupoftee/followers", "following_url": "https://api.github.com/users/acupoftee/following{/other_user}", "gists_url": "https://api.github.com/users/acupoftee/gists{/gist_id}", "starred_url": "https://api.github.com/users/acupoftee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acupoftee/subscriptions", "organizations_url": "https://api.github.com/users/acupoftee/orgs", "repos_url": "https://api.github.com/users/acupoftee/repos", "events_url": "https://api.github.com/users/acupoftee/events{/privacy}", "received_events_url": "https://api.github.com/users/acupoftee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T15:48:23Z", "updated_at": "2019-03-08T07:04:52Z", "closed_at": "2018-11-27T17:14:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use `PostUpdate(text, attachment_url)`method in order to share a quoted tweet by using Twitter's shortened URL `https://t.co/` followed by a status ID. Here's my code below:\r\n\r\n`api.PostUpdate(hashtags, attachment_url=\"https://t.co/AbcDe13gg\")`\r\n\r\nHere is the traceback below:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"bot.py\", line 83, in <module>\r\n    send_quoted_tweet(new_tweet)\r\n  File \"sombra_bugs.py\", line 65, in send_quoted_tweet\r\n    api.PostUpdate(hashtags, attachment_url=\"https:\\/\\/t.co\\/FzTADy3Zgg\")\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/twitter/api.py\", line 1177, in PostUpdate\r\n    data = self._ParseAndCheckTwitter(resp.content.decode('utf-8'))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/twitter/api.py\", line 4908, in _ParseAndCheckTwitter\r\n    self._CheckForTwitterError(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/twitter/api.py\", line 4928, in _CheckForTwitterError\r\n    raise TwitterError(data['errors'])\r\ntwitter.error.TwitterError: [{'code': 44, 'message': 'attachment_url parameter is invalid.'}]\r\n```\r\nI've also tried using escape characters in case that was the issue and it still raised the error. What is considered a bad URL? Thank you for your time\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/596", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/596/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/596/events", "html_url": "https://github.com/bear/python-twitter/issues/596", "id": 383007090, "node_id": "MDU6SXNzdWUzODMwMDcwOTA=", "number": 596, "title": "twitter.error.TwitterError: Not authorized", "user": {"login": "n2k3bu1", "id": 15161417, "node_id": "MDQ6VXNlcjE1MTYxNDE3", "avatar_url": "https://avatars1.githubusercontent.com/u/15161417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2k3bu1", "html_url": "https://github.com/n2k3bu1", "followers_url": "https://api.github.com/users/n2k3bu1/followers", "following_url": "https://api.github.com/users/n2k3bu1/following{/other_user}", "gists_url": "https://api.github.com/users/n2k3bu1/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2k3bu1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2k3bu1/subscriptions", "organizations_url": "https://api.github.com/users/n2k3bu1/orgs", "repos_url": "https://api.github.com/users/n2k3bu1/repos", "events_url": "https://api.github.com/users/n2k3bu1/events{/privacy}", "received_events_url": "https://api.github.com/users/n2k3bu1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-21T08:32:09Z", "updated_at": "2020-06-07T10:21:59Z", "closed_at": "2019-07-24T03:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nAs I turn on \"**[X] Protect your Tweets**\" my profile setting at https://twitter.com/settings/safety \r\nI got an exception error such as **twitter.error.TwitterError: Not authorized** when making a call APIs\r\nMaybe I have a something wrong as request API for twitter?\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/595", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/595/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/595/events", "html_url": "https://github.com/bear/python-twitter/issues/595", "id": 380056419, "node_id": "MDU6SXNzdWUzODAwNTY0MTk=", "number": 595, "title": "examples", "user": {"login": "Jamiil92", "id": 34279395, "node_id": "MDQ6VXNlcjM0Mjc5Mzk1", "avatar_url": "https://avatars0.githubusercontent.com/u/34279395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jamiil92", "html_url": "https://github.com/Jamiil92", "followers_url": "https://api.github.com/users/Jamiil92/followers", "following_url": "https://api.github.com/users/Jamiil92/following{/other_user}", "gists_url": "https://api.github.com/users/Jamiil92/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jamiil92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jamiil92/subscriptions", "organizations_url": "https://api.github.com/users/Jamiil92/orgs", "repos_url": "https://api.github.com/users/Jamiil92/repos", "events_url": "https://api.github.com/users/Jamiil92/events{/privacy}", "received_events_url": "https://api.github.com/users/Jamiil92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-13T04:37:03Z", "updated_at": "2020-02-28T21:53:22Z", "closed_at": "2020-02-28T21:53:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi dear big teams\r\n\r\nKudos for excellent work...\r\n\r\nI am using python 3.6.5 on a win-64\r\n\r\nMay I have some guidances on how the streaming example work ... \r\n\r\nafter putting my credentials (consumer_key , ......) details no streaming is observed neither is the output.txt file been updated.\r\n\r\nCould you please take a look at for me ?\r\n\r\nYour comments are very much appreciated.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/592", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/592/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/592/events", "html_url": "https://github.com/bear/python-twitter/issues/592", "id": 378216853, "node_id": "MDU6SXNzdWUzNzgyMTY4NTM=", "number": 592, "title": "`twitter.error.TwitterError: [{'message': 'Sorry, that page does not exist.', 'code': 34}]` while trying to get direct messages", "user": {"login": "bastbnl", "id": 5901491, "node_id": "MDQ6VXNlcjU5MDE0OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5901491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bastbnl", "html_url": "https://github.com/bastbnl", "followers_url": "https://api.github.com/users/bastbnl/followers", "following_url": "https://api.github.com/users/bastbnl/following{/other_user}", "gists_url": "https://api.github.com/users/bastbnl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bastbnl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bastbnl/subscriptions", "organizations_url": "https://api.github.com/users/bastbnl/orgs", "repos_url": "https://api.github.com/users/bastbnl/repos", "events_url": "https://api.github.com/users/bastbnl/events{/privacy}", "received_events_url": "https://api.github.com/users/bastbnl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-07T09:58:39Z", "updated_at": "2019-03-19T23:01:04Z", "closed_at": "2018-11-27T16:36:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a `twitter.error.TwitterError: [{'code': 34, 'message': 'Sorry, that page does not exist'}]` on python 3.5 using `python-twitter==3.5.0`. I've been reading through an older issue #587 and that doesn't seem to work properly.\r\n\r\n`Api.GetDirectMessages` uses  `url = '%s/direct_messages.json' % self.base_url` (https://github.com/bear/python-twitter/blob/v3.5/twitter/api.py#L2920), which appears to be the old url. \r\n\r\nI changed it to `url = '%s/direct_messages/events/list.json' % self.base_url` and now run into this:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/var/www/brownpapersession/alpha/brownpapersession/various/tweet.py\", line 62, in get_direct_messages\r\n    messages = twitter.GetDirectMessages()\r\n  File \"/var/www/brownpapersession/alpha/env/lib/python3.5/site-packages/twitter/api.py\", line 2943, in GetDirectMessages\r\n    return [DirectMessage.NewFromJsonDict(x) for x in data]\r\n  File \"/var/www/brownpapersession/alpha/env/lib/python3.5/site-packages/twitter/api.py\", line 2943, in <listcomp>\r\n    return [DirectMessage.NewFromJsonDict(x) for x in data]\r\n  File \"/var/www/brownpapersession/alpha/env/lib/python3.5/site-packages/twitter/models.py\", line 88, in NewFromJsonDict\r\n    json_data = data.copy()\r\nAttributeError: 'str' object has no attribute 'copy'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/586", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/586/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/586/events", "html_url": "https://github.com/bear/python-twitter/issues/586", "id": 359137507, "node_id": "MDU6SXNzdWUzNTkxMzc1MDc=", "number": 586, "title": "Status.text only returns 140 characters", "user": {"login": "SamelCamel", "id": 20620791, "node_id": "MDQ6VXNlcjIwNjIwNzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/20620791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamelCamel", "html_url": "https://github.com/SamelCamel", "followers_url": "https://api.github.com/users/SamelCamel/followers", "following_url": "https://api.github.com/users/SamelCamel/following{/other_user}", "gists_url": "https://api.github.com/users/SamelCamel/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamelCamel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamelCamel/subscriptions", "organizations_url": "https://api.github.com/users/SamelCamel/orgs", "repos_url": "https://api.github.com/users/SamelCamel/repos", "events_url": "https://api.github.com/users/SamelCamel/events{/privacy}", "received_events_url": "https://api.github.com/users/SamelCamel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-11T17:04:20Z", "updated_at": "2018-10-13T01:47:07Z", "closed_at": "2018-09-13T11:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I get tweets using `GetUserTimeline`, the returned tweets' `text` attribute only contains the first 140 characters, plus an ellipsis character (...). Is there a way to get the complete tweet if it's over 140 characters?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/585", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/585/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/585/events", "html_url": "https://github.com/bear/python-twitter/issues/585", "id": 354094813, "node_id": "MDU6SXNzdWUzNTQwOTQ4MTM=", "number": 585, "title": "How to get URL of tweet?", "user": {"login": "Endogen", "id": 226475, "node_id": "MDQ6VXNlcjIyNjQ3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/226475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Endogen", "html_url": "https://github.com/Endogen", "followers_url": "https://api.github.com/users/Endogen/followers", "following_url": "https://api.github.com/users/Endogen/following{/other_user}", "gists_url": "https://api.github.com/users/Endogen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Endogen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Endogen/subscriptions", "organizations_url": "https://api.github.com/users/Endogen/orgs", "repos_url": "https://api.github.com/users/Endogen/repos", "events_url": "https://api.github.com/users/Endogen/events{/privacy}", "received_events_url": "https://api.github.com/users/Endogen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-26T13:25:51Z", "updated_at": "2018-08-27T20:07:37Z", "closed_at": "2018-08-27T13:54:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `api.GetUserTimeline` but i don't see any way to get the URL of the returned `Status` items?\r\n\r\nEDIT: I mean the URL to the actual Tweet on Twitter", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/584", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/584/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/584/events", "html_url": "https://github.com/bear/python-twitter/issues/584", "id": 353596475, "node_id": "MDU6SXNzdWUzNTM1OTY0NzU=", "number": 584, "title": "Exception: _RequestUrl breaks fi no data and no json", "user": {"login": "cgthayer", "id": 265677, "node_id": "MDQ6VXNlcjI2NTY3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/265677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgthayer", "html_url": "https://github.com/cgthayer", "followers_url": "https://api.github.com/users/cgthayer/followers", "following_url": "https://api.github.com/users/cgthayer/following{/other_user}", "gists_url": "https://api.github.com/users/cgthayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgthayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgthayer/subscriptions", "organizations_url": "https://api.github.com/users/cgthayer/orgs", "repos_url": "https://api.github.com/users/cgthayer/repos", "events_url": "https://api.github.com/users/cgthayer/events{/privacy}", "received_events_url": "https://api.github.com/users/cgthayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-24T00:00:19Z", "updated_at": "2018-11-03T13:27:27Z", "closed_at": "2018-11-03T13:27:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minor, some cases set `resp = 0` which causes an exception if the rate_limit is set\r\n\r\n`        if url and self.rate_limit:\r\n`\r\nshould be\r\n\r\n`     if url and self.rate_limit and resp:\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/577", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/577/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/577/events", "html_url": "https://github.com/bear/python-twitter/issues/577", "id": 341251882, "node_id": "MDU6SXNzdWUzNDEyNTE4ODI=", "number": 577, "title": "\ud83d\udc35 is counted as two characters", "user": {"login": "designbyadrian", "id": 2064558, "node_id": "MDQ6VXNlcjIwNjQ1NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2064558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/designbyadrian", "html_url": "https://github.com/designbyadrian", "followers_url": "https://api.github.com/users/designbyadrian/followers", "following_url": "https://api.github.com/users/designbyadrian/following{/other_user}", "gists_url": "https://api.github.com/users/designbyadrian/gists{/gist_id}", "starred_url": "https://api.github.com/users/designbyadrian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/designbyadrian/subscriptions", "organizations_url": "https://api.github.com/users/designbyadrian/orgs", "repos_url": "https://api.github.com/users/designbyadrian/repos", "events_url": "https://api.github.com/users/designbyadrian/events{/privacy}", "received_events_url": "https://api.github.com/users/designbyadrian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-14T17:21:15Z", "updated_at": "2018-07-14T19:07:22Z", "closed_at": "2018-07-14T19:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Same with \ud83d\udc36 and probably many more emojis, even if they don't have gender or skin tones.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/576", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/576/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/576/events", "html_url": "https://github.com/bear/python-twitter/issues/576", "id": 339313016, "node_id": "MDU6SXNzdWUzMzkzMTMwMTY=", "number": 576, "title": "TwitterError", "user": {"login": "sharma-ji", "id": 17575809, "node_id": "MDQ6VXNlcjE3NTc1ODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/17575809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharma-ji", "html_url": "https://github.com/sharma-ji", "followers_url": "https://api.github.com/users/sharma-ji/followers", "following_url": "https://api.github.com/users/sharma-ji/following{/other_user}", "gists_url": "https://api.github.com/users/sharma-ji/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharma-ji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharma-ji/subscriptions", "organizations_url": "https://api.github.com/users/sharma-ji/orgs", "repos_url": "https://api.github.com/users/sharma-ji/repos", "events_url": "https://api.github.com/users/sharma-ji/events{/privacy}", "received_events_url": "https://api.github.com/users/sharma-ji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-09T05:48:56Z", "updated_at": "2018-07-09T18:00:32Z", "closed_at": "2018-07-09T18:00:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to send image as direct message on twitter. How to do that??\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/575", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/575/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/575/events", "html_url": "https://github.com/bear/python-twitter/issues/575", "id": 338769569, "node_id": "MDU6SXNzdWUzMzg3Njk1Njk=", "number": 575, "title": "Oauth not working: NameError: name '$mykey' is not defined", "user": {"login": "improvethings", "id": 16601027, "node_id": "MDQ6VXNlcjE2NjAxMDI3", "avatar_url": "https://avatars2.githubusercontent.com/u/16601027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/improvethings", "html_url": "https://github.com/improvethings", "followers_url": "https://api.github.com/users/improvethings/followers", "following_url": "https://api.github.com/users/improvethings/following{/other_user}", "gists_url": "https://api.github.com/users/improvethings/gists{/gist_id}", "starred_url": "https://api.github.com/users/improvethings/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/improvethings/subscriptions", "organizations_url": "https://api.github.com/users/improvethings/orgs", "repos_url": "https://api.github.com/users/improvethings/repos", "events_url": "https://api.github.com/users/improvethings/events{/privacy}", "received_events_url": "https://api.github.com/users/improvethings/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-06T00:47:58Z", "updated_at": "2018-07-06T18:30:00Z", "closed_at": "2018-07-06T18:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": ">>> api = twitter.Api(consumer_key=[$mykey],\r\n...                   consumer_secret=[hfsjdkfhjdf],\r\n...                   access_token_key=[1234-fjkdsfjsdsdf],\r\n...                   access_token_secret=[fsdfhjdks])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nNameError: name '$mykey' is not defined # obviously I've removed my key and replaced it here with $mykey so as to not share my key with all you folks. Same issue with the helper script:\r\n\r\n$ python get_access_token.py \r\nEnter your consumer key: $mykey\r\nTraceback (most recent call last):\r\n  File \"get_access_token.py\", line 77, in <module>\r\n    main()\r\n  File \"get_access_token.py\", line 71, in main\r\n    consumer_key = input('Enter your consumer key: ')\r\n  File \"<string>\", line 1, in <module>\r\nNameError: name '$mykey' is not defined", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/569", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/569/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/569/events", "html_url": "https://github.com/bear/python-twitter/issues/569", "id": 331067947, "node_id": "MDU6SXNzdWUzMzEwNjc5NDc=", "number": 569, "title": "Is there a documented, standard way of checking for an error code when TwitterError is raised?", "user": {"login": "nachogoro", "id": 15671779, "node_id": "MDQ6VXNlcjE1NjcxNzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/15671779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachogoro", "html_url": "https://github.com/nachogoro", "followers_url": "https://api.github.com/users/nachogoro/followers", "following_url": "https://api.github.com/users/nachogoro/following{/other_user}", "gists_url": "https://api.github.com/users/nachogoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachogoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachogoro/subscriptions", "organizations_url": "https://api.github.com/users/nachogoro/orgs", "repos_url": "https://api.github.com/users/nachogoro/repos", "events_url": "https://api.github.com/users/nachogoro/events{/privacy}", "received_events_url": "https://api.github.com/users/nachogoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-11T07:07:01Z", "updated_at": "2018-06-12T10:30:04Z", "closed_at": "2018-06-11T10:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I managed to write code that seems to work in order to check Twitter's error code when catching a `TwitterError`. I am not sure if this is the right way of doing it (maybe it can be done with less checking) and if it could fail with certain `TwitterError`s (e.g. because not all the raised `TwitterError`s use a list as a message):\r\n\r\n```\r\n        try:\r\n            return api.GetSearch(query)\r\n        except twitter.error.TwitterError as e:\r\n            # Check whether it was a rate-limit-exceeded error\r\n            if (isinstance(e.message[0], dict)\r\n                    and 'code' in e.message[0]\r\n                    and e.message[0]['code'] == 88):\r\n                print('Exceeded rate limit!)\r\n```\r\n\r\nI find the code tedious to write, and unintuitive (it took me a bit to realise `TwitterError.message` is not a `str`, but a `list` with the first element being a `dict`, at least for the exception I was getting). I could not find anything about this in the official documentation, so I'd like to know if there is an easier way. It is also a request to document this in the official `readthedocs` if it is not already.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/568", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/568/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/568/events", "html_url": "https://github.com/bear/python-twitter/issues/568", "id": 330957433, "node_id": "MDU6SXNzdWUzMzA5NTc0MzM=", "number": 568, "title": "The new character limit is 280, not 140", "user": {"login": "nachogoro", "id": 15671779, "node_id": "MDQ6VXNlcjE1NjcxNzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/15671779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachogoro", "html_url": "https://github.com/nachogoro", "followers_url": "https://api.github.com/users/nachogoro/followers", "following_url": "https://api.github.com/users/nachogoro/following{/other_user}", "gists_url": "https://api.github.com/users/nachogoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachogoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachogoro/subscriptions", "organizations_url": "https://api.github.com/users/nachogoro/orgs", "repos_url": "https://api.github.com/users/nachogoro/repos", "events_url": "https://api.github.com/users/nachogoro/events{/privacy}", "received_events_url": "https://api.github.com/users/nachogoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-10T10:30:43Z", "updated_at": "2018-06-10T11:16:51Z", "closed_at": "2018-06-10T11:16:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just got an exception when trying to post a 169-character-long status:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./twitterbot.py\", line 208, in <module>\r\n    main()\r\n  File \"./twitterbot.py\", line 198, in main\r\n    to_reply.id)\r\n  File \"./twitterbot.py\", line 90, in _safe_reply\r\n    raise e\r\n  File \"./twitterbot.py\", line 82, in _safe_reply\r\n    in_reply_to_status_id=in_reply_to)\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 1044, in PostUpdate\r\n    raise TwitterError(\"Text must be less than or equal to 140 characters.\")\r\ntwitter.error.TwitterError: Text must be less than or equal to 140 characters.\r\n```\r\nHowever, Twitter has been allowing 280-character-long messages for a while now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/567", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/567/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/567/events", "html_url": "https://github.com/bear/python-twitter/issues/567", "id": 330914026, "node_id": "MDU6SXNzdWUzMzA5MTQwMjY=", "number": 567, "title": "GetFollowers() does not handle rate-limit correctly", "user": {"login": "nachogoro", "id": 15671779, "node_id": "MDQ6VXNlcjE1NjcxNzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/15671779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachogoro", "html_url": "https://github.com/nachogoro", "followers_url": "https://api.github.com/users/nachogoro/followers", "following_url": "https://api.github.com/users/nachogoro/following{/other_user}", "gists_url": "https://api.github.com/users/nachogoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachogoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachogoro/subscriptions", "organizations_url": "https://api.github.com/users/nachogoro/orgs", "repos_url": "https://api.github.com/users/nachogoro/repos", "events_url": "https://api.github.com/users/nachogoro/events{/privacy}", "received_events_url": "https://api.github.com/users/nachogoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-09T19:40:17Z", "updated_at": "2018-07-18T10:24:24Z", "closed_at": "2018-07-18T10:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was testing a simple tool I've written (see [here](https://github.com/nachogoro/simpletwitterbot/blob/2d14f4d116a22b9aa39239e3553be32e1ef28b22/twitterbot.py#L83)) and I am using `sleep_on_rate_limit`. However, I just had `GetFollowers()` throw a `code 88` error:\r\n```\r\n  File \"/tmp/twitter-bot/simpletwitter-bot/twitterbot.py\", line 105, in <module>\r\n    main()\r\n  File \"/tmp/twitter-bot/simpletwitter-bot/twitterbot.py\", line 86, in main\r\n    total_count=200)) >= MIN_FOLLOWERS_FOR_REPLY):\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 2802, in GetFollowers\r\n    include_user_entities)\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 2745, in _GetFriendsFollowers\r\n    include_user_entities)\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 2573, in _GetFriendsFollowersPaged\r\n    data = self._ParseAndCheckTwitter(resp.content.decode('utf-8'))\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 4894, in _ParseAndCheckTwitter\r\n    self._CheckForTwitterError(data)\r\n  File \"/home/nacho/.pyenv/versions/twitter-bot/lib/python3.5/site-packages/twitter/api.py\", line 4914, in _CheckForTwitterError\r\n    raise TwitterError(data['errors'])\r\n```\r\nUsing `python-twitter 3.3`.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/566", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/566/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/566/events", "html_url": "https://github.com/bear/python-twitter/issues/566", "id": 328820484, "node_id": "MDU6SXNzdWUzMjg4MjA0ODQ=", "number": 566, "title": "Can I use the Twitter API Premium with your library? Or just an API standard?", "user": {"login": "GalTzemach", "id": 23153785, "node_id": "MDQ6VXNlcjIzMTUzNzg1", "avatar_url": "https://avatars3.githubusercontent.com/u/23153785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GalTzemach", "html_url": "https://github.com/GalTzemach", "followers_url": "https://api.github.com/users/GalTzemach/followers", "following_url": "https://api.github.com/users/GalTzemach/following{/other_user}", "gists_url": "https://api.github.com/users/GalTzemach/gists{/gist_id}", "starred_url": "https://api.github.com/users/GalTzemach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GalTzemach/subscriptions", "organizations_url": "https://api.github.com/users/GalTzemach/orgs", "repos_url": "https://api.github.com/users/GalTzemach/repos", "events_url": "https://api.github.com/users/GalTzemach/events{/privacy}", "received_events_url": "https://api.github.com/users/GalTzemach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-03T11:24:27Z", "updated_at": "2019-01-16T09:05:25Z", "closed_at": "2018-06-09T11:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/559", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/559/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/559/events", "html_url": "https://github.com/bear/python-twitter/issues/559", "id": 317831709, "node_id": "MDU6SXNzdWUzMTc4MzE3MDk=", "number": 559, "title": "TrendTwitter", "user": {"login": "alejandroRjaime", "id": 24658395, "node_id": "MDQ6VXNlcjI0NjU4Mzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/24658395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alejandroRjaime", "html_url": "https://github.com/alejandroRjaime", "followers_url": "https://api.github.com/users/alejandroRjaime/followers", "following_url": "https://api.github.com/users/alejandroRjaime/following{/other_user}", "gists_url": "https://api.github.com/users/alejandroRjaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/alejandroRjaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alejandroRjaime/subscriptions", "organizations_url": "https://api.github.com/users/alejandroRjaime/orgs", "repos_url": "https://api.github.com/users/alejandroRjaime/repos", "events_url": "https://api.github.com/users/alejandroRjaime/events{/privacy}", "received_events_url": "https://api.github.com/users/alejandroRjaime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-25T23:53:13Z", "updated_at": "2018-04-25T23:53:27Z", "closed_at": "2018-04-25T23:53:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/558", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/558/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/558/events", "html_url": "https://github.com/bear/python-twitter/issues/558", "id": 313603149, "node_id": "MDU6SXNzdWUzMTM2MDMxNDk=", "number": 558, "title": "Is there any way to get over 140 character text response from GetHomeTimeline?", "user": {"login": "yell0wu", "id": 23087635, "node_id": "MDQ6VXNlcjIzMDg3NjM1", "avatar_url": "https://avatars3.githubusercontent.com/u/23087635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yell0wu", "html_url": "https://github.com/yell0wu", "followers_url": "https://api.github.com/users/yell0wu/followers", "following_url": "https://api.github.com/users/yell0wu/following{/other_user}", "gists_url": "https://api.github.com/users/yell0wu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yell0wu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yell0wu/subscriptions", "organizations_url": "https://api.github.com/users/yell0wu/orgs", "repos_url": "https://api.github.com/users/yell0wu/repos", "events_url": "https://api.github.com/users/yell0wu/events{/privacy}", "received_events_url": "https://api.github.com/users/yell0wu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-12T07:13:01Z", "updated_at": "2020-08-08T18:22:05Z", "closed_at": "2018-04-12T11:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Excuse me if this is the wrong place to ask, I'm new to github.\r\n\r\nWith twitter's changes to support statuses over 140 characters, is there any way to get the untruncated version of a status using GetHomeTimeline?\r\n\r\n`\r\na = api.GetHomeTimeline(contributor_details=True)    \r\n`\r\n`\r\nhome_timeline= [i.text for i in a]\r\n`\r\n\r\nThe text returned from this is truncated to 140 characters, cutting off the rest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/557", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/557/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/557/events", "html_url": "https://github.com/bear/python-twitter/issues/557", "id": 313561898, "node_id": "MDU6SXNzdWUzMTM1NjE4OTg=", "number": 557, "title": "Package name is same as the another twitter package called \"python twitter tool\"", "user": {"login": "jasonyanwenl", "id": 34975811, "node_id": "MDQ6VXNlcjM0OTc1ODEx", "avatar_url": "https://avatars3.githubusercontent.com/u/34975811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonyanwenl", "html_url": "https://github.com/jasonyanwenl", "followers_url": "https://api.github.com/users/jasonyanwenl/followers", "following_url": "https://api.github.com/users/jasonyanwenl/following{/other_user}", "gists_url": "https://api.github.com/users/jasonyanwenl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonyanwenl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonyanwenl/subscriptions", "organizations_url": "https://api.github.com/users/jasonyanwenl/orgs", "repos_url": "https://api.github.com/users/jasonyanwenl/repos", "events_url": "https://api.github.com/users/jasonyanwenl/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonyanwenl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-12T03:13:48Z", "updated_at": "2018-04-12T17:23:59Z", "closed_at": "2018-04-12T11:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is issue cannot be avoided if someone want to install both of them and make some comparison. For me, both this package and the `python twitter tool` will be installed into the same directory named `twitter`. Then some method like `twitter.Api()` cannot be called due to conflict.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/555", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/555/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/555/events", "html_url": "https://github.com/bear/python-twitter/issues/555", "id": 311913661, "node_id": "MDU6SXNzdWUzMTE5MTM2NjE=", "number": 555, "title": "make dev fails with OpenSSL 1.1: please bump Makefile Python 2.7 version to at least 2.7.13", "user": {"login": "jeromecc", "id": 6979021, "node_id": "MDQ6VXNlcjY5NzkwMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6979021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeromecc", "html_url": "https://github.com/jeromecc", "followers_url": "https://api.github.com/users/jeromecc/followers", "following_url": "https://api.github.com/users/jeromecc/following{/other_user}", "gists_url": "https://api.github.com/users/jeromecc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeromecc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeromecc/subscriptions", "organizations_url": "https://api.github.com/users/jeromecc/orgs", "repos_url": "https://api.github.com/users/jeromecc/repos", "events_url": "https://api.github.com/users/jeromecc/events{/privacy}", "received_events_url": "https://api.github.com/users/jeromecc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-06T09:47:19Z", "updated_at": "2018-05-18T20:17:39Z", "closed_at": "2018-05-18T20:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n * Debian 9 is using OpenSSL 1.1.0.\r\n * OpenSSL 1.1.0 support in the ssl module was only added to Python 2.7.13, 3.5.3 and 3.6.0\r\n\r\nOn Debian Stable and Testing, make dev cannot build Python 2.7.11\r\n\r\nIs it possible to set the version to at least 2.7.12? It will make contributions easier for users of recent GNU/Linux distros. Thanks!\r\n\r\nSee https://github.com/pyenv/pyenv/issues/945", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/554", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/554/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/554/events", "html_url": "https://github.com/bear/python-twitter/issues/554", "id": 309944942, "node_id": "MDU6SXNzdWUzMDk5NDQ5NDI=", "number": 554, "title": "Twitter Stream re-connect best practices", "user": {"login": "dubielt1", "id": 11619193, "node_id": "MDQ6VXNlcjExNjE5MTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/11619193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dubielt1", "html_url": "https://github.com/dubielt1", "followers_url": "https://api.github.com/users/dubielt1/followers", "following_url": "https://api.github.com/users/dubielt1/following{/other_user}", "gists_url": "https://api.github.com/users/dubielt1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dubielt1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dubielt1/subscriptions", "organizations_url": "https://api.github.com/users/dubielt1/orgs", "repos_url": "https://api.github.com/users/dubielt1/repos", "events_url": "https://api.github.com/users/dubielt1/events{/privacy}", "received_events_url": "https://api.github.com/users/dubielt1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-30T00:40:46Z", "updated_at": "2018-04-02T03:39:29Z", "closed_at": "2018-04-02T03:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a project that will consume a long-running twitter stream, and the documentation doesn't mention what will happen when a disconnect occurs. Looking at the code, a requests exception might get caught, at which point python-twitter would raise its own exception?\r\n\r\nI want to be sure that I take the best approach for guaranteeing a re-connect after being disconnected.\r\n\r\nI apologize if I overlooked anything in the documentation, or if this behaviour is inherent to `requests` in some way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/552", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/552/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/552/events", "html_url": "https://github.com/bear/python-twitter/issues/552", "id": 304721822, "node_id": "MDU6SXNzdWUzMDQ3MjE4MjI=", "number": 552, "title": "Twitter", "user": {"login": "eulersim", "id": 35031794, "node_id": "MDQ6VXNlcjM1MDMxNzk0", "avatar_url": "https://avatars3.githubusercontent.com/u/35031794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulersim", "html_url": "https://github.com/eulersim", "followers_url": "https://api.github.com/users/eulersim/followers", "following_url": "https://api.github.com/users/eulersim/following{/other_user}", "gists_url": "https://api.github.com/users/eulersim/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulersim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulersim/subscriptions", "organizations_url": "https://api.github.com/users/eulersim/orgs", "repos_url": "https://api.github.com/users/eulersim/repos", "events_url": "https://api.github.com/users/eulersim/events{/privacy}", "received_events_url": "https://api.github.com/users/eulersim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-13T11:14:53Z", "updated_at": "2018-03-13T12:59:48Z", "closed_at": "2018-03-13T12:59:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/551", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/551/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/551/events", "html_url": "https://github.com/bear/python-twitter/issues/551", "id": 304720492, "node_id": "MDU6SXNzdWUzMDQ3MjA0OTI=", "number": 551, "title": "Python Twitter API stuff", "user": {"login": "mona-timmermann", "id": 33896612, "node_id": "MDQ6VXNlcjMzODk2NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/33896612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mona-timmermann", "html_url": "https://github.com/mona-timmermann", "followers_url": "https://api.github.com/users/mona-timmermann/followers", "following_url": "https://api.github.com/users/mona-timmermann/following{/other_user}", "gists_url": "https://api.github.com/users/mona-timmermann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mona-timmermann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mona-timmermann/subscriptions", "organizations_url": "https://api.github.com/users/mona-timmermann/orgs", "repos_url": "https://api.github.com/users/mona-timmermann/repos", "events_url": "https://api.github.com/users/mona-timmermann/events{/privacy}", "received_events_url": "https://api.github.com/users/mona-timmermann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-13T11:10:32Z", "updated_at": "2018-03-13T12:59:41Z", "closed_at": "2018-03-13T12:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/549", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/549/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/549/events", "html_url": "https://github.com/bear/python-twitter/issues/549", "id": 301667019, "node_id": "MDU6SXNzdWUzMDE2NjcwMTk=", "number": 549, "title": "Documentation: Error in UsersLookup", "user": {"login": "skilfullycurled", "id": 950291, "node_id": "MDQ6VXNlcjk1MDI5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/950291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skilfullycurled", "html_url": "https://github.com/skilfullycurled", "followers_url": "https://api.github.com/users/skilfullycurled/followers", "following_url": "https://api.github.com/users/skilfullycurled/following{/other_user}", "gists_url": "https://api.github.com/users/skilfullycurled/gists{/gist_id}", "starred_url": "https://api.github.com/users/skilfullycurled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skilfullycurled/subscriptions", "organizations_url": "https://api.github.com/users/skilfullycurled/orgs", "repos_url": "https://api.github.com/users/skilfullycurled/repos", "events_url": "https://api.github.com/users/skilfullycurled/events{/privacy}", "received_events_url": "https://api.github.com/users/skilfullycurled/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-02T06:32:12Z", "updated_at": "2018-03-02T15:41:48Z", "closed_at": "2018-03-02T12:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Documentation for [UsersLookup](https://python-twitter.readthedocs.io/en/latest/twitter.html#twitter.api.Api.UsersLookup) states:\r\n\r\n```\r\nuser_id (int, list, optional) \u2013 A list of user_ids to retrieve extended information. \r\nscreen_name (str, optional) \u2013 A list of screen_names to retrieve extended information.\r\n```\r\n\r\nHowever, I think both the user_id and screen_name parameters need to be lists.\r\n\r\n```\r\nuser_id (int, list, optional) \u2013 A list of user_ids to retrieve extended information. \r\nscreen_name (str, list, optional) \u2013 A list of screen_names to retrieve extended information.\r\n```\r\n\r\nI think the API may have once been a long comma separated string, but that doesn't appear to be working for me where as a list of strings does.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/548", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/548/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/548/events", "html_url": "https://github.com/bear/python-twitter/issues/548", "id": 301168550, "node_id": "MDU6SXNzdWUzMDExNjg1NTA=", "number": 548, "title": "UnicodeEncodeError", "user": {"login": "chasen-bettinger", "id": 24480592, "node_id": "MDQ6VXNlcjI0NDgwNTky", "avatar_url": "https://avatars0.githubusercontent.com/u/24480592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chasen-bettinger", "html_url": "https://github.com/chasen-bettinger", "followers_url": "https://api.github.com/users/chasen-bettinger/followers", "following_url": "https://api.github.com/users/chasen-bettinger/following{/other_user}", "gists_url": "https://api.github.com/users/chasen-bettinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/chasen-bettinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chasen-bettinger/subscriptions", "organizations_url": "https://api.github.com/users/chasen-bettinger/orgs", "repos_url": "https://api.github.com/users/chasen-bettinger/repos", "events_url": "https://api.github.com/users/chasen-bettinger/events{/privacy}", "received_events_url": "https://api.github.com/users/chasen-bettinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-28T20:19:54Z", "updated_at": "2018-03-01T00:00:03Z", "closed_at": "2018-02-28T21:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am receiving an error after searching for the hashtag 'Pink Ribbon'.\r\n\r\nHere is the error: \r\n\r\n`Traceback (most recent call last):\r\n  File \"c:\\Users\\betti\\Desktop\\pink-ribbon\\pink-ribbon\\twitter-analysis.py\", line 12, in <module>\r\n    print(tweet.text)\r\n  File \"C:\\Users\\betti\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\encodings\\cp1252.py\", line 19, in encode\r\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\r\nUnicodeEncodeError: 'charmap' codec can't encode characters in position 12-45: character maps to <undefined>\r\n`\r\n\r\nHere is my code:\r\n\r\n```\r\nresponse = api.GetSearch(term=\"PinkRibbon\") \r\n\r\nfor tweet in response:\r\n    print(tweet.text)\r\n```\r\n\r\nVersion of python: Python 3.6.4\r\nOperating System: Windows 10\r\n\r\nI have tried .unicode(\"utf-8\") along with other things and have no luck - my code still isn't working. I think a correction was attempted in #330 but I am still receiving this error. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/547", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/547/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/547/events", "html_url": "https://github.com/bear/python-twitter/issues/547", "id": 299631116, "node_id": "MDU6SXNzdWUyOTk2MzExMTY=", "number": 547, "title": "response code 215 when use api.VerifyCredentials?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-23T08:17:23Z", "updated_at": "2018-02-23T09:08:10Z", "closed_at": "2018-02-23T09:08:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the developer twitter  account `consumer_key` and `consumer_secret` and  with access token from client. `access_token_key` and `access_token_key`  got from Android like this:\r\n\r\n      token = result.data.getAuthToken();\r\n      token_key = authToken.token;\r\n      token_secret = authToken.secret;\r\n\r\n\r\nusing : \r\n\r\n     api = twitter.Api(consumer_key=consumer_key,\r\n                           consumer_secret=consumer_secret,\r\n                           access_token_key=access_token_key,\r\n                           access_token_secret=access_token_secret\r\n     )\r\n     print(api.VerifyCredentials())\r\n\r\nI got : \r\n\r\n    {'code': 215, 'message': 'Bad Authentication data.'}]\r\n\r\n\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/546", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/546/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/546/events", "html_url": "https://github.com/bear/python-twitter/issues/546", "id": 298757606, "node_id": "MDU6SXNzdWUyOTg3NTc2MDY=", "number": 546, "title": "PostUpdate broken on python 2.7 when using str (byte) message", "user": {"login": "h3llrais3r", "id": 1945295, "node_id": "MDQ6VXNlcjE5NDUyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1945295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h3llrais3r", "html_url": "https://github.com/h3llrais3r", "followers_url": "https://api.github.com/users/h3llrais3r/followers", "following_url": "https://api.github.com/users/h3llrais3r/following{/other_user}", "gists_url": "https://api.github.com/users/h3llrais3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/h3llrais3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h3llrais3r/subscriptions", "organizations_url": "https://api.github.com/users/h3llrais3r/orgs", "repos_url": "https://api.github.com/users/h3llrais3r/repos", "events_url": "https://api.github.com/users/h3llrais3r/events{/privacy}", "received_events_url": "https://api.github.com/users/h3llrais3r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-20T21:36:11Z", "updated_at": "2018-02-22T12:28:04Z", "closed_at": "2018-02-22T12:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've just upgraded to the last version 3.4 but I'm encountering the following issue:\r\nI cannot longer do a PostUpdate in Python 2.7 when the message is a str(byte) string.\r\nWhen using a unicode string, it works.\r\n\r\n```\r\napi = Api(consumer_key=CONSUMER_KEY,\r\n          consumer_secret=CONSUMER_SECRET,\r\n          access_token_key=TWITTERKEY,\r\n          access_token_secret=TWITTERSECRET)\r\n\r\napi.PostUpdate(message[:280])\r\n```\r\n\r\nI assume that you want to work with unicode string internally, but the code below does not seem to convert a byte string to a unicode string in all cases.\r\n\r\n![image](https://user-images.githubusercontent.com/1945295/36450089-24aaf56c-168d-11e8-8470-3aeabdee6e74.png)\r\n\r\nIt seems that https://github.com/bear/python-twitter/blob/master/twitter/api.py#L1106-L1109 is only for Python 3 (where `str` is unicode). In Python 2 this is a byte string.\r\nYou may want to use the `six` library here to support both Python 2 and 3.\r\n\r\nSince there is no conversion to unicode, it results in the following error:\r\n````\r\nFile \"C:\\Tools\\GitHub\\Auto-Subliminal\\lib\\twitter\\api.py\", line 1111, in PostUpdate\r\n    if verify_status_length and calc_expected_status_length(u_status) > CHARACTER_LIMIT:\r\n  File \"C:\\Tools\\GitHub\\Auto-Subliminal\\lib\\twitter\\twitter_utils.py\", line 185, in calc_expected_status_length\r\n    if any([ord(normalize(\"NFC\", character)) in char_range for char_range in CHAR_RANGES]):\r\nTypeError: must be unicode, not str\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/543", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/543/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/543/events", "html_url": "https://github.com/bear/python-twitter/issues/543", "id": 294205149, "node_id": "MDU6SXNzdWUyOTQyMDUxNDk=", "number": 543, "title": "Estimated status length for \"\u2026\" is 1 but twitter counts it as 2", "user": {"login": "d3d9", "id": 9254305, "node_id": "MDQ6VXNlcjkyNTQzMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9254305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d3d9", "html_url": "https://github.com/d3d9", "followers_url": "https://api.github.com/users/d3d9/followers", "following_url": "https://api.github.com/users/d3d9/following{/other_user}", "gists_url": "https://api.github.com/users/d3d9/gists{/gist_id}", "starred_url": "https://api.github.com/users/d3d9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d3d9/subscriptions", "organizations_url": "https://api.github.com/users/d3d9/orgs", "repos_url": "https://api.github.com/users/d3d9/repos", "events_url": "https://api.github.com/users/d3d9/events{/privacy}", "received_events_url": "https://api.github.com/users/d3d9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768672, "node_id": "MDU6TGFiZWwxMzc2ODY3Mg==", "url": "https://api.github.com/repos/bear/python-twitter/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 831296540, "node_id": "MDU6TGFiZWw4MzEyOTY1NDA=", "url": "https://api.github.com/repos/bear/python-twitter/labels/regex", "name": "regex", "color": "dfffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T15:25:16Z", "updated_at": "2018-02-17T16:55:48Z", "closed_at": "2018-02-17T16:55:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Twitter counts \"\u2026\" as two characters but python-twitter counts it as one.\r\nPosting a tweet where this is a problem returns twitter response 186 instead of the usually expected \"Text must be less than or equal to CHARACTER_LIMIT characters.\" error. (it doesn't matter where in the tweet the ellipsis is)\r\n\r\n```\r\nteststr = \"testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttes\u2026\"\r\nprint(len(teststr))\r\nprint(twitter.twitter_utils.calc_expected_status_length(teststr))\r\nstatus = api.PostUpdate(teststr)\r\n```\r\ngives\r\n```\r\n280\r\n280\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 35, in <module>\r\n    status = api.PostUpdate(teststr)\r\n  File \"/usr/local/lib/python3.4/dist-packages/python_twitter-3.3.1-py3.4.egg/twitter/api.py\", line 1111, in PostUpdate\r\n  File \"/usr/local/lib/python3.4/dist-packages/python_twitter-3.3.1-py3.4.egg/twitter/api.py\", line 4996, in _ParseAndCheckTwitter\r\n  File \"/usr/local/lib/python3.4/dist-packages/python_twitter-3.3.1-py3.4.egg/twitter/api.py\", line 5016, in _CheckForTwitterError\r\ntwitter.error.TwitterError: [{'code': 186, 'message': 'Tweet needs to be a bit shorter.'}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/541", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/541/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/541/events", "html_url": "https://github.com/bear/python-twitter/issues/541", "id": 294202689, "node_id": "MDU6SXNzdWUyOTQyMDI2ODk=", "number": 541, "title": "\"L.512+MVG\" is a URL?", "user": {"login": "d3d9", "id": 9254305, "node_id": "MDQ6VXNlcjkyNTQzMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9254305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d3d9", "html_url": "https://github.com/d3d9", "followers_url": "https://api.github.com/users/d3d9/followers", "following_url": "https://api.github.com/users/d3d9/following{/other_user}", "gists_url": "https://api.github.com/users/d3d9/gists{/gist_id}", "starred_url": "https://api.github.com/users/d3d9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d3d9/subscriptions", "organizations_url": "https://api.github.com/users/d3d9/orgs", "repos_url": "https://api.github.com/users/d3d9/repos", "events_url": "https://api.github.com/users/d3d9/events{/privacy}", "received_events_url": "https://api.github.com/users/d3d9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768672, "node_id": "MDU6TGFiZWwxMzc2ODY3Mg==", "url": "https://api.github.com/repos/bear/python-twitter/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 831296540, "node_id": "MDU6TGFiZWw4MzEyOTY1NDA=", "url": "https://api.github.com/repos/bear/python-twitter/labels/regex", "name": "regex", "color": "dfffb2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T14:51:48Z", "updated_at": "2018-02-18T15:02:51Z", "closed_at": "2018-02-18T15:02:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The beginning of the tweet looks like this: \"Sperrung der Selbeckerstr L.512+MVG Linie 84\".\r\nThe estimated character count is too high because \"L.512+MVG\" is seen as a URL requiring 23 characters.\r\nThis ended up giving me an error because the overall tweet length was too much.\r\n\r\nI tried some other strings, it seems like `(any string containing an alphabetic character and not starting with a dot)+\".\"+(any string starting with a number)` is seen as a URL.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/539", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/539/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/539/events", "html_url": "https://github.com/bear/python-twitter/issues/539", "id": 293776123, "node_id": "MDU6SXNzdWUyOTM3NzYxMjM=", "number": 539, "title": "140 character error even in tweet_mode=extended ", "user": {"login": "focusaurus", "id": 482377, "node_id": "MDQ6VXNlcjQ4MjM3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/482377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/focusaurus", "html_url": "https://github.com/focusaurus", "followers_url": "https://api.github.com/users/focusaurus/followers", "following_url": "https://api.github.com/users/focusaurus/following{/other_user}", "gists_url": "https://api.github.com/users/focusaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/focusaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/focusaurus/subscriptions", "organizations_url": "https://api.github.com/users/focusaurus/orgs", "repos_url": "https://api.github.com/users/focusaurus/repos", "events_url": "https://api.github.com/users/focusaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/focusaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-02T05:18:34Z", "updated_at": "2018-02-08T15:21:01Z", "closed_at": "2018-02-08T15:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have code to tweet via PostUpdate:\r\n\r\n```py\r\n    api = twitter.Api(\r\n        consumer_key=conf[\"twitter\"][\"consumer_key\"],\r\n        consumer_secret=conf[\"twitter\"][\"consumer_secret\"],\r\n        access_token_key=key,\r\n        access_token_secret=secret,\r\n        tweet_mode=\"extended\")\r\n    try:\r\n        print(api.PostUpdate(message).text)\r\n    except twitter.TwitterError as info:\r\n        print(\"ERROR:\", info)\r\n```\r\n\r\nIt prints `ERROR: Text must be less than or equal to 140 characters.`. I was hoping `tweet_mode=extended` would fix this but it seems not. I expect to be able to post tweets up to 280 chars, which I can do via the twitter web site.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/537", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/537/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/537/events", "html_url": "https://github.com/bear/python-twitter/issues/537", "id": 292145074, "node_id": "MDU6SXNzdWUyOTIxNDUwNzQ=", "number": 537, "title": "Tweets from GetSearch are still being truncated", "user": {"login": "Flyer4109", "id": 25721755, "node_id": "MDQ6VXNlcjI1NzIxNzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/25721755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flyer4109", "html_url": "https://github.com/Flyer4109", "followers_url": "https://api.github.com/users/Flyer4109/followers", "following_url": "https://api.github.com/users/Flyer4109/following{/other_user}", "gists_url": "https://api.github.com/users/Flyer4109/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flyer4109/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flyer4109/subscriptions", "organizations_url": "https://api.github.com/users/Flyer4109/orgs", "repos_url": "https://api.github.com/users/Flyer4109/repos", "events_url": "https://api.github.com/users/Flyer4109/events{/privacy}", "received_events_url": "https://api.github.com/users/Flyer4109/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-27T19:15:01Z", "updated_at": "2018-01-29T23:37:24Z", "closed_at": "2018-01-29T01:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using GetSearch and the tweets are still being truncated even though I am using `tweet_mode=\"extended\"` and `full_text`. Below is the code I am using and the output.\r\n\r\n```python\r\napi = twitter.Api(consumer_token, consumer_secret, access_token, access_token_secret, tweet_mode=\"extended\")\r\n\r\ntweets = api.GetSearch(term=\"#gameofthrones\", lang=\"en\", count=100)\r\n\r\nfor tweet in tweets:\r\n    print(tweet.full_text)\r\n```\r\nExample of truncated tweet:\r\n`RT @kimrrenfro: #GameofThrones star Maisie Williams said the eighth and final season is planned for April 2019 (which makes a lot of sense!\u2026`\r\n \r\nShould be:\r\n`RT @kimrrenfro: #GameofThrones star Maisie Williams said the eighth and final season is planned for April 2019 (which makes a lot of sense!) https://t.co/l7dmg1pfFT`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/536", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/536/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/536/events", "html_url": "https://github.com/bear/python-twitter/issues/536", "id": 290575662, "node_id": "MDU6SXNzdWUyOTA1NzU2NjI=", "number": 536, "title": "Throttle or wait for API error?", "user": {"login": "zefoo", "id": 17110349, "node_id": "MDQ6VXNlcjE3MTEwMzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17110349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zefoo", "html_url": "https://github.com/zefoo", "followers_url": "https://api.github.com/users/zefoo/followers", "following_url": "https://api.github.com/users/zefoo/following{/other_user}", "gists_url": "https://api.github.com/users/zefoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zefoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zefoo/subscriptions", "organizations_url": "https://api.github.com/users/zefoo/orgs", "repos_url": "https://api.github.com/users/zefoo/repos", "events_url": "https://api.github.com/users/zefoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zefoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-22T18:53:06Z", "updated_at": "2018-02-08T15:22:12Z", "closed_at": "2018-02-08T15:22:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, my code waits for Twitter to say I've exceeded max API requests within a window then it sleeps for 15 minutes (I do this on my end, not using python-twitter). I'm wondering, is this ok? Or does Twitter ban an \"aggressive\" script (even if it sleeps for 15 minutes upon first request that throws an error?) \r\n\r\nI could build in more logic to prevent my script from ever getting an error from Twitter, but if it's fine as-is I'll leave it. I mostly want to make sure the app doesn't get blocked or anything like that. Curious what you've all seen in your experience. I bet it's fine as-is. Thank you \u2013\u00a0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/535", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/535/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/535/events", "html_url": "https://github.com/bear/python-twitter/issues/535", "id": 290159501, "node_id": "MDU6SXNzdWUyOTAxNTk1MDE=", "number": 535, "title": "UsersLookup Splits `screen_name` by Characters When Passed a str", "user": {"login": "caleblogan", "id": 3497205, "node_id": "MDQ6VXNlcjM0OTcyMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3497205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caleblogan", "html_url": "https://github.com/caleblogan", "followers_url": "https://api.github.com/users/caleblogan/followers", "following_url": "https://api.github.com/users/caleblogan/following{/other_user}", "gists_url": "https://api.github.com/users/caleblogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/caleblogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caleblogan/subscriptions", "organizations_url": "https://api.github.com/users/caleblogan/orgs", "repos_url": "https://api.github.com/users/caleblogan/repos", "events_url": "https://api.github.com/users/caleblogan/events{/privacy}", "received_events_url": "https://api.github.com/users/caleblogan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T03:03:57Z", "updated_at": "2018-02-27T03:47:52Z", "closed_at": "2018-02-27T03:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When passing UsersLookup `screen_name='foouser'`,  screen_name will get turned into `'f,o,o,u,s,e,r'`.\r\nIt looks like `screen_name` can be a string by looking at the first part of the following:\r\n`screen_name (str, optional):\r\nA list of screen_names to retrieve extended information.` \r\n\r\nLookupFriendship does type checking on `screen_name` to determine if its a tuple, list, User, or str.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/533", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/533/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/533/events", "html_url": "https://github.com/bear/python-twitter/issues/533", "id": 287665501, "node_id": "MDU6SXNzdWUyODc2NjU1MDE=", "number": 533, "title": "Happen to know how RT's are ordered?", "user": {"login": "zefoo", "id": 17110349, "node_id": "MDQ6VXNlcjE3MTEwMzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17110349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zefoo", "html_url": "https://github.com/zefoo", "followers_url": "https://api.github.com/users/zefoo/followers", "following_url": "https://api.github.com/users/zefoo/following{/other_user}", "gists_url": "https://api.github.com/users/zefoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zefoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zefoo/subscriptions", "organizations_url": "https://api.github.com/users/zefoo/orgs", "repos_url": "https://api.github.com/users/zefoo/repos", "events_url": "https://api.github.com/users/zefoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zefoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-11T05:07:08Z", "updated_at": "2018-01-11T05:21:17Z", "closed_at": "2018-01-11T05:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Follow up from https://github.com/bear/python-twitter/issues/532.\r\n\r\nDo you happen to know how the 100s RTs are ordered? eg. does the RTs show the first 100, or does it show the last 100? I'm thinking, if I can re-crawl a status every few hours and always pull the newest 100 RTs (if there are more than 100)... I could make that work. \r\n\r\nFrom my tests, the results seem to always be the same. Unless the API updates the RT list every hour or such \u2013 but I may be reading the data incorrectly and want to be sure. \r\n\r\nThank  you!\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/532", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/532/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/532/events", "html_url": "https://github.com/bear/python-twitter/issues/532", "id": 285279570, "node_id": "MDU6SXNzdWUyODUyNzk1NzA=", "number": 532, "title": "Quick question regarding favorites and RT's of a tweet", "user": {"login": "zefoo", "id": 17110349, "node_id": "MDQ6VXNlcjE3MTEwMzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17110349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zefoo", "html_url": "https://github.com/zefoo", "followers_url": "https://api.github.com/users/zefoo/followers", "following_url": "https://api.github.com/users/zefoo/following{/other_user}", "gists_url": "https://api.github.com/users/zefoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zefoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zefoo/subscriptions", "organizations_url": "https://api.github.com/users/zefoo/orgs", "repos_url": "https://api.github.com/users/zefoo/repos", "events_url": "https://api.github.com/users/zefoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zefoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-31T22:56:05Z", "updated_at": "2018-01-11T05:02:53Z", "closed_at": "2018-01-01T18:42:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "From my research, there is not a way to see user IDs that favorited a tweet, or user IDs of people who RT'd a tweet, if I have a tweet status. Can someone confirm this? \r\n\r\nThe only option would be scraping the website, which violates ToS, and likely doesn't even return all results. (I don't plan on going this far)\r\n\r\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/530", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/530/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/530/events", "html_url": "https://github.com/bear/python-twitter/issues/530", "id": 281829210, "node_id": "MDU6SXNzdWUyODE4MjkyMTA=", "number": 530, "title": "Limit exceeded calling getFollowers", "user": {"login": "arkkanoid", "id": 3811604, "node_id": "MDQ6VXNlcjM4MTE2MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3811604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arkkanoid", "html_url": "https://github.com/arkkanoid", "followers_url": "https://api.github.com/users/arkkanoid/followers", "following_url": "https://api.github.com/users/arkkanoid/following{/other_user}", "gists_url": "https://api.github.com/users/arkkanoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/arkkanoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arkkanoid/subscriptions", "organizations_url": "https://api.github.com/users/arkkanoid/orgs", "repos_url": "https://api.github.com/users/arkkanoid/repos", "events_url": "https://api.github.com/users/arkkanoid/events{/privacy}", "received_events_url": "https://api.github.com/users/arkkanoid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-13T17:16:13Z", "updated_at": "2017-12-17T14:53:48Z", "closed_at": "2017-12-17T14:53:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm using this library to make different calls. When I do this call:\r\napi.GetFollowers(screen_name='facebook')\r\nI get:\r\nwitter.error.TwitterError: [{u'message': u'Rate limit exceeded', u'code': 88}]\r\n\r\nUsing any other request it works as expected:\r\napi.GetUser(screen_name='facebook')\r\nUser(ID=2425151, ScreenName=facebook)\r\n\r\nSomeone has the same issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/529", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/529/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/529/events", "html_url": "https://github.com/bear/python-twitter/issues/529", "id": 278742608, "node_id": "MDU6SXNzdWUyNzg3NDI2MDg=", "number": 529, "title": "Lacking a packaged release of 3.3.1", "user": {"login": "9b", "id": 505557, "node_id": "MDQ6VXNlcjUwNTU1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/505557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9b", "html_url": "https://github.com/9b", "followers_url": "https://api.github.com/users/9b/followers", "following_url": "https://api.github.com/users/9b/following{/other_user}", "gists_url": "https://api.github.com/users/9b/gists{/gist_id}", "starred_url": "https://api.github.com/users/9b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9b/subscriptions", "organizations_url": "https://api.github.com/users/9b/orgs", "repos_url": "https://api.github.com/users/9b/repos", "events_url": "https://api.github.com/users/9b/events{/privacy}", "received_events_url": "https://api.github.com/users/9b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-03T04:11:40Z", "updated_at": "2017-12-03T04:12:28Z", "closed_at": "2017-12-03T04:12:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed in the changelog for 3.3.1 that the character limits were bumped up. The repo code and documentation seem to suggest that version is packaged. Pypi is still hosting 3.3 though. Any plans to push the release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/528", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/528/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/528/events", "html_url": "https://github.com/bear/python-twitter/issues/528", "id": 277184354, "node_id": "MDU6SXNzdWUyNzcxODQzNTQ=", "number": 528, "title": "Installation issue!", "user": {"login": "vettorazi", "id": 7634575, "node_id": "MDQ6VXNlcjc2MzQ1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7634575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vettorazi", "html_url": "https://github.com/vettorazi", "followers_url": "https://api.github.com/users/vettorazi/followers", "following_url": "https://api.github.com/users/vettorazi/following{/other_user}", "gists_url": "https://api.github.com/users/vettorazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vettorazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vettorazi/subscriptions", "organizations_url": "https://api.github.com/users/vettorazi/orgs", "repos_url": "https://api.github.com/users/vettorazi/repos", "events_url": "https://api.github.com/users/vettorazi/events{/privacy}", "received_events_url": "https://api.github.com/users/vettorazi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-27T21:59:52Z", "updated_at": "2017-12-26T22:03:50Z", "closed_at": "2017-12-26T22:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey guys!\r\ni am (trying to) install the lib but everytime that i tried, the following error ocurred:\r\n```\r\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;__file__='/private/var/folders/wb/7swf60t92kd_2vs7vry8ghw40000gn/T/pip-build-B6_xGH/future/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/wb/7swf60t92kd_2vs7vry8ghw40000gn/T/pip-GLEV0n-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/wb/7swf60t92kd_2vs7vry8ghw40000gn/T/pip-build-B6_xGH/future/\r\n```\r\n\r\nhow can i solve this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/527", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/527/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/527/events", "html_url": "https://github.com/bear/python-twitter/issues/527", "id": 275214153, "node_id": "MDU6SXNzdWUyNzUyMTQxNTM=", "number": 527, "title": "AsJsonString() and str() do not support UTF-8", "user": {"login": "0xfiras", "id": 219490, "node_id": "MDQ6VXNlcjIxOTQ5MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/219490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xfiras", "html_url": "https://github.com/0xfiras", "followers_url": "https://api.github.com/users/0xfiras/followers", "following_url": "https://api.github.com/users/0xfiras/following{/other_user}", "gists_url": "https://api.github.com/users/0xfiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xfiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xfiras/subscriptions", "organizations_url": "https://api.github.com/users/0xfiras/orgs", "repos_url": "https://api.github.com/users/0xfiras/repos", "events_url": "https://api.github.com/users/0xfiras/events{/privacy}", "received_events_url": "https://api.github.com/users/0xfiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-20T01:38:25Z", "updated_at": "2018-06-09T12:00:42Z", "closed_at": "2018-06-09T12:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to save statuses with full_text in Arabic on disk and print them on my console (I am on an archlinux).\r\n\r\nThe only workaraound for me was the following:\r\n\r\n> To write on disk\r\n\r\n```\r\nwith open(out_file, 'a') as f:\r\n    for status in time_line:\r\n        json.dump(status.AsDict(), f, ensure_ascii = False, sort_keys=True)\r\n```\r\n\r\n> To print on stdout\r\n\r\n```\r\nfor status in time_line:\r\n    print(json.dumps(status.AsDict(), ensure_ascii = False, sort_keys = True))\r\n```\r\n\r\nI don't know what would be best for the API, maybe adding an optional argument to `AsJsonString(ensure_ascii=False)` by default, to presrve backward compatibility?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/526", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/526/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/526/events", "html_url": "https://github.com/bear/python-twitter/issues/526", "id": 274750946, "node_id": "MDU6SXNzdWUyNzQ3NTA5NDY=", "number": 526, "title": "\u201ctweepy.error.TweepError: Twitter error response: status code = 429\u201d ", "user": {"login": "varun4github", "id": 15215930, "node_id": "MDQ6VXNlcjE1MjE1OTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/15215930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varun4github", "html_url": "https://github.com/varun4github", "followers_url": "https://api.github.com/users/varun4github/followers", "following_url": "https://api.github.com/users/varun4github/following{/other_user}", "gists_url": "https://api.github.com/users/varun4github/gists{/gist_id}", "starred_url": "https://api.github.com/users/varun4github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varun4github/subscriptions", "organizations_url": "https://api.github.com/users/varun4github/orgs", "repos_url": "https://api.github.com/users/varun4github/repos", "events_url": "https://api.github.com/users/varun4github/events{/privacy}", "received_events_url": "https://api.github.com/users/varun4github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T04:48:29Z", "updated_at": "2017-11-26T18:09:38Z", "closed_at": "2017-11-26T18:09:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to make an application and getting error \u201ctweepy.error.TweepError: Twitter error response: status code = 429\u201d . I have read about rate limit on twitter , but have seen many web application which are making much more requests that what I am trying to make . \r\n\r\nThank you .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/524", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/524/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/524/events", "html_url": "https://github.com/bear/python-twitter/issues/524", "id": 272474154, "node_id": "MDU6SXNzdWUyNzI0NzQxNTQ=", "number": 524, "title": "Character limit from 140 to 280 ?", "user": {"login": "vaibhavmathur91", "id": 17401628, "node_id": "MDQ6VXNlcjE3NDAxNjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/17401628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhavmathur91", "html_url": "https://github.com/vaibhavmathur91", "followers_url": "https://api.github.com/users/vaibhavmathur91/followers", "following_url": "https://api.github.com/users/vaibhavmathur91/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhavmathur91/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhavmathur91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhavmathur91/subscriptions", "organizations_url": "https://api.github.com/users/vaibhavmathur91/orgs", "repos_url": "https://api.github.com/users/vaibhavmathur91/repos", "events_url": "https://api.github.com/users/vaibhavmathur91/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhavmathur91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-09T08:15:09Z", "updated_at": "2017-11-26T22:34:09Z", "closed_at": "2017-11-26T22:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "word limit should be changed from 140 to 280 ??\r\nin twitter/api.py file ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/523", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/523/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/523/events", "html_url": "https://github.com/bear/python-twitter/issues/523", "id": 271524100, "node_id": "MDU6SXNzdWUyNzE1MjQxMDA=", "number": 523, "title": "UsersLookup fails when more than 100 users are requested", "user": {"login": "ackellyb", "id": 4564903, "node_id": "MDQ6VXNlcjQ1NjQ5MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4564903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ackellyb", "html_url": "https://github.com/ackellyb", "followers_url": "https://api.github.com/users/ackellyb/followers", "following_url": "https://api.github.com/users/ackellyb/following{/other_user}", "gists_url": "https://api.github.com/users/ackellyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ackellyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ackellyb/subscriptions", "organizations_url": "https://api.github.com/users/ackellyb/orgs", "repos_url": "https://api.github.com/users/ackellyb/repos", "events_url": "https://api.github.com/users/ackellyb/events{/privacy}", "received_events_url": "https://api.github.com/users/ackellyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 472324736, "node_id": "MDU6TGFiZWw0NzIzMjQ3MzY=", "url": "https://api.github.com/repos/bear/python-twitter/labels/documentation", "name": "documentation", "color": "b60205", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-06T15:55:06Z", "updated_at": "2018-02-19T01:11:10Z", "closed_at": "2018-02-19T01:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Twitter API states that only 100 total user ids and screen names can be included in a request [(Source)](https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup).\r\n\r\nPython-Twitter doesn't make reference to this limit, and fails with a generic error 'Unknown error' if more than 100 are included. \r\n\r\nEither having the documentation reflect this limit, or having UsersLookup make multiple requests for more than 100 users would solve this issue. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/522", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/522/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/522/events", "html_url": "https://github.com/bear/python-twitter/issues/522", "id": 270079411, "node_id": "MDU6SXNzdWUyNzAwNzk0MTE=", "number": 522, "title": "Turn off retweets from a user within UpdateFriendship", "user": {"login": "pseudomonas", "id": 2255067, "node_id": "MDQ6VXNlcjIyNTUwNjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2255067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pseudomonas", "html_url": "https://github.com/pseudomonas", "followers_url": "https://api.github.com/users/pseudomonas/followers", "following_url": "https://api.github.com/users/pseudomonas/following{/other_user}", "gists_url": "https://api.github.com/users/pseudomonas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pseudomonas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pseudomonas/subscriptions", "organizations_url": "https://api.github.com/users/pseudomonas/orgs", "repos_url": "https://api.github.com/users/pseudomonas/repos", "events_url": "https://api.github.com/users/pseudomonas/events{/privacy}", "received_events_url": "https://api.github.com/users/pseudomonas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-31T18:52:53Z", "updated_at": "2018-02-25T13:29:54Z", "closed_at": "2018-02-25T13:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to run something like\r\n  twitapi.UpdateFriendship(screen_name=\"USERNAME\", retweets=False)\r\n\r\nbut the code isn't passing the `retweets` parameter to the API. \r\n\r\nhttps://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-update", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/521", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/521/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/521/events", "html_url": "https://github.com/bear/python-twitter/issues/521", "id": 269420234, "node_id": "MDU6SXNzdWUyNjk0MjAyMzQ=", "number": 521, "title": "Use proper API in http_to_file", "user": {"login": "dgilman", "id": 398254, "node_id": "MDQ6VXNlcjM5ODI1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/398254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgilman", "html_url": "https://github.com/dgilman", "followers_url": "https://api.github.com/users/dgilman/followers", "following_url": "https://api.github.com/users/dgilman/following{/other_user}", "gists_url": "https://api.github.com/users/dgilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgilman/subscriptions", "organizations_url": "https://api.github.com/users/dgilman/orgs", "repos_url": "https://api.github.com/users/dgilman/repos", "events_url": "https://api.github.com/users/dgilman/events{/privacy}", "received_events_url": "https://api.github.com/users/dgilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-29T17:58:53Z", "updated_at": "2018-03-08T12:20:16Z", "closed_at": "2018-03-08T12:20:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "http_to_file() in twitter_utils.py gets data out of the Response object as Response.raw.data which is a property from the underlying urllib3 library that doesn't do the proper decoding.  If the server sent gzipped data it won't be decompressed. Response.content should be used instead as it handles the decoding for you (see https://github.com/requests/requests/blob/master/requests/models.py#L724 , decode_content=True)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/520", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/520/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/520/events", "html_url": "https://github.com/bear/python-twitter/issues/520", "id": 269413377, "node_id": "MDU6SXNzdWUyNjk0MTMzNzc=", "number": 520, "title": "Work around guess_type() bug with query strings.", "user": {"login": "dgilman", "id": 398254, "node_id": "MDQ6VXNlcjM5ODI1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/398254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgilman", "html_url": "https://github.com/dgilman", "followers_url": "https://api.github.com/users/dgilman/followers", "following_url": "https://api.github.com/users/dgilman/following{/other_user}", "gists_url": "https://api.github.com/users/dgilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgilman/subscriptions", "organizations_url": "https://api.github.com/users/dgilman/orgs", "repos_url": "https://api.github.com/users/dgilman/repos", "events_url": "https://api.github.com/users/dgilman/events{/privacy}", "received_events_url": "https://api.github.com/users/dgilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-29T16:32:19Z", "updated_at": "2017-12-02T13:44:54Z", "closed_at": "2017-12-02T13:44:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In parse_media_file() a HTTP url gets fed through basename to get the \"filename\" and then passed to mimetypes.guess_type() to guess what the MIME type is based on the extension of the file. If your file has a query string guess_type() can't figure out the MIME type and returns None. This gets passed up to Twitter which ends up returning an error 'media type unrecognized'.\r\n\r\nIn some cases you can strip the query string/fragment with urlparse and hand that to python-twitter which will let it work properly. But what about URLs that *require* a query string to work? If you take it off yourself it'll guess the MIME type right but http_to_file() will fail as it's returning bad content. \r\n\r\nAs a solution guess_type() should strip query strings before passing the URL to basename on line 218 in twitter_utils.py. The URL should be passed to http_to_file without change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/519", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/519/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/519/events", "html_url": "https://github.com/bear/python-twitter/issues/519", "id": 266533389, "node_id": "MDU6SXNzdWUyNjY1MzMzODk=", "number": 519, "title": "Use 280 chars?", "user": {"login": "TiiFuchs", "id": 1958744, "node_id": "MDQ6VXNlcjE5NTg3NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1958744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiiFuchs", "html_url": "https://github.com/TiiFuchs", "followers_url": "https://api.github.com/users/TiiFuchs/followers", "following_url": "https://api.github.com/users/TiiFuchs/following{/other_user}", "gists_url": "https://api.github.com/users/TiiFuchs/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiiFuchs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiiFuchs/subscriptions", "organizations_url": "https://api.github.com/users/TiiFuchs/orgs", "repos_url": "https://api.github.com/users/TiiFuchs/repos", "events_url": "https://api.github.com/users/TiiFuchs/events{/privacy}", "received_events_url": "https://api.github.com/users/TiiFuchs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-18T15:18:59Z", "updated_at": "2017-10-18T22:12:55Z", "closed_at": "2017-10-18T22:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it already possible to send Tweets with up to 280 characters?\r\n\r\nThe PostUpdate method throws an error if its larger than 140 chars.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/518", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/518/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/518/events", "html_url": "https://github.com/bear/python-twitter/issues/518", "id": 266475520, "node_id": "MDU6SXNzdWUyNjY0NzU1MjA=", "number": 518, "title": "Cannot download using command pip install python-twitter. Receive could not fetch URL error", "user": {"login": "scday", "id": 18624749, "node_id": "MDQ6VXNlcjE4NjI0NzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/18624749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scday", "html_url": "https://github.com/scday", "followers_url": "https://api.github.com/users/scday/followers", "following_url": "https://api.github.com/users/scday/following{/other_user}", "gists_url": "https://api.github.com/users/scday/gists{/gist_id}", "starred_url": "https://api.github.com/users/scday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scday/subscriptions", "organizations_url": "https://api.github.com/users/scday/orgs", "repos_url": "https://api.github.com/users/scday/repos", "events_url": "https://api.github.com/users/scday/events{/privacy}", "received_events_url": "https://api.github.com/users/scday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-18T12:32:13Z", "updated_at": "2017-10-19T13:06:16Z", "closed_at": "2017-10-19T13:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could not fetch URL https://pypi.python.org/simple/python-twitter/: There was a problem confirming the ssl certificate: [Errno 1] _ssl.c:504: error:0D0890A1:asn1 encoding routines:ASN1_verify:unknown message digest algorithm - skipping\r\n  Could not find a version that satisfies the requirement python-twitter (from versions: )\r\nNo matching distribution found for python-twitter\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/517", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/517/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/517/events", "html_url": "https://github.com/bear/python-twitter/issues/517", "id": 266208383, "node_id": "MDU6SXNzdWUyNjYyMDgzODM=", "number": 517, "title": "`GetSearch` method doesn't return data about limit headers", "user": {"login": "eranhirs", "id": 3372820, "node_id": "MDQ6VXNlcjMzNzI4MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3372820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eranhirs", "html_url": "https://github.com/eranhirs", "followers_url": "https://api.github.com/users/eranhirs/followers", "following_url": "https://api.github.com/users/eranhirs/following{/other_user}", "gists_url": "https://api.github.com/users/eranhirs/gists{/gist_id}", "starred_url": "https://api.github.com/users/eranhirs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eranhirs/subscriptions", "organizations_url": "https://api.github.com/users/eranhirs/orgs", "repos_url": "https://api.github.com/users/eranhirs/repos", "events_url": "https://api.github.com/users/eranhirs/events{/privacy}", "received_events_url": "https://api.github.com/users/eranhirs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-17T17:12:48Z", "updated_at": "2017-10-18T15:34:02Z", "closed_at": "2017-10-18T15:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `GetSearch` there are some interesting HTTP headers about the remaining limit for your requests, as documented [here](https://developer.twitter.com/en/docs/basics/rate-limiting).\r\n\r\nIt would be very useful to have access to this information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/516", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/516/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/516/events", "html_url": "https://github.com/bear/python-twitter/issues/516", "id": 265802494, "node_id": "MDU6SXNzdWUyNjU4MDI0OTQ=", "number": 516, "title": "What plans on date of release version 3.3.1?", "user": {"login": "mnvx", "id": 829880, "node_id": "MDQ6VXNlcjgyOTg4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/829880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnvx", "html_url": "https://github.com/mnvx", "followers_url": "https://api.github.com/users/mnvx/followers", "following_url": "https://api.github.com/users/mnvx/following{/other_user}", "gists_url": "https://api.github.com/users/mnvx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnvx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnvx/subscriptions", "organizations_url": "https://api.github.com/users/mnvx/orgs", "repos_url": "https://api.github.com/users/mnvx/repos", "events_url": "https://api.github.com/users/mnvx/events{/privacy}", "received_events_url": "https://api.github.com/users/mnvx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-10-16T15:03:00Z", "updated_at": "2018-02-19T04:16:18Z", "closed_at": "2018-02-19T04:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for great library! Im interested in release of bug fixes situated currenctly in master branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/515", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/515/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/515/events", "html_url": "https://github.com/bear/python-twitter/issues/515", "id": 265773773, "node_id": "MDU6SXNzdWUyNjU3NzM3NzM=", "number": 515, "title": "URL entity unwound.url", "user": {"login": "sa-matiny", "id": 7403605, "node_id": "MDQ6VXNlcjc0MDM2MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7403605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sa-matiny", "html_url": "https://github.com/sa-matiny", "followers_url": "https://api.github.com/users/sa-matiny/followers", "following_url": "https://api.github.com/users/sa-matiny/following{/other_user}", "gists_url": "https://api.github.com/users/sa-matiny/gists{/gist_id}", "starred_url": "https://api.github.com/users/sa-matiny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sa-matiny/subscriptions", "organizations_url": "https://api.github.com/users/sa-matiny/orgs", "repos_url": "https://api.github.com/users/sa-matiny/repos", "events_url": "https://api.github.com/users/sa-matiny/events{/privacy}", "received_events_url": "https://api.github.com/users/sa-matiny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T13:39:42Z", "updated_at": "2017-10-19T11:18:25Z", "closed_at": "2017-10-19T11:18:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nTwitter api has features for url entity to Expanded URL Data. It says using url.unwound will show url features like it's title and features. but your library does not support this feature.\r\nHere is twitter api link about this features:\r\n[https://developer.twitter.com/en/docs/tweets/enrichments/overview/expanded-and-enhanced-urls](url)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/512", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/512/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/512/events", "html_url": "https://github.com/bear/python-twitter/issues/512", "id": 263545539, "node_id": "MDU6SXNzdWUyNjM1NDU1Mzk=", "number": 512, "title": "Get followers ID's raised Rate Limited exceeded with sleep on wait limit", "user": {"login": "zrothberg", "id": 13908315, "node_id": "MDQ6VXNlcjEzOTA4MzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/13908315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrothberg", "html_url": "https://github.com/zrothberg", "followers_url": "https://api.github.com/users/zrothberg/followers", "following_url": "https://api.github.com/users/zrothberg/following{/other_user}", "gists_url": "https://api.github.com/users/zrothberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrothberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrothberg/subscriptions", "organizations_url": "https://api.github.com/users/zrothberg/orgs", "repos_url": "https://api.github.com/users/zrothberg/repos", "events_url": "https://api.github.com/users/zrothberg/events{/privacy}", "received_events_url": "https://api.github.com/users/zrothberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-06T19:16:08Z", "updated_at": "2017-10-11T09:13:13Z", "closed_at": "2017-10-11T01:15:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the pip version but the code in my stacktrace does not appear to have changed since then. It appears as if a simple sleep on the error would have fixed the problem but I was under the impression it was already doing that. The program was running for 6-12 hours before it crashed. I do not know if this is a bug or If there is a way to handle the error and have it resume easily. \r\n```python\r\n\tapi = twitter.Api(consumer_key=Consumer_key, consumer_secret=Consumer_secret,\r\n\t                  access_token_key=Access_token, access_token_secret=Access_token_secret,\r\n\t                  sleep_on_rate_limit=True)\r\n\taccounts = [\"JakeWarden\",\"Zendaya\"]\r\n\r\n\r\n\tdef profilenewaccounts(accountlist):\r\n\t    for item in accountlist:\r\n\t        data = api.GetFollowerIDs(screen_name=item)\r\n\r\n\t        with open(item+\".txt\", 'w') as f:\r\n\t            for s in data:\r\n\t                f.write(str(s) + '\\n')\r\n\r\n\t        print(item +\"  done\")\r\n\r\n\r\n\tprofilenewaccounts(accounts)\r\n```\r\n\r\n\r\nand here is the stack trace \r\n\r\n```bash\r\n  JakeWarden  done\r\n  Traceback (most recent call last):\r\n    File \"/Users/zacharyrothberg/PycharmProjects/twitterbotffs/MainBot.py\", line 34, in <module>\r\n      profilenewaccounts(accounts)\r\n    File \"/Users/zacharyrothberg/PycharmProjects/twitterbotffs/MainBot.py\", line 25, in profilenewaccounts\r\n      data = api.GetFollowerIDs(screen_name=item)\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/twitter/api.py\", line 2464, in GetFollowerIDs\r\n      total_count=total_count)\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/twitter/api.py\", line 2412, in _GetFriendFollowerIDs\r\n      count=count)\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/twitter/api.py\", line 2290, in _GetIDsPaged\r\n      data = self._ParseAndCheckTwitter(resp.content.decode('utf-8'))\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/twitter/api.py\", line 4894, in _ParseAndCheckTwitter\r\n      self._CheckForTwitterError(data)\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/twitter/api.py\", line 4914, in _CheckForTwitterError\r\n      raise TwitterError(data['errors'])\r\n  twitter.error.TwitterError: [{'message': 'Rate limit exceeded', 'code': 88}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/507", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/507/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/507/events", "html_url": "https://github.com/bear/python-twitter/issues/507", "id": 259755807, "node_id": "MDU6SXNzdWUyNTk3NTU4MDc=", "number": 507, "title": "How to send a tweet with hashtag?", "user": {"login": "mpco", "id": 3690653, "node_id": "MDQ6VXNlcjM2OTA2NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3690653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpco", "html_url": "https://github.com/mpco", "followers_url": "https://api.github.com/users/mpco/followers", "following_url": "https://api.github.com/users/mpco/following{/other_user}", "gists_url": "https://api.github.com/users/mpco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpco/subscriptions", "organizations_url": "https://api.github.com/users/mpco/orgs", "repos_url": "https://api.github.com/users/mpco/repos", "events_url": "https://api.github.com/users/mpco/events{/privacy}", "received_events_url": "https://api.github.com/users/mpco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-22T09:28:06Z", "updated_at": "2017-09-24T13:25:32Z", "closed_at": "2017-09-24T13:25:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used api.PostUpdate to send tweet with hashtag, but the result didn't include hashtag.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/506", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/506/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/506/events", "html_url": "https://github.com/bear/python-twitter/issues/506", "id": 258251342, "node_id": "MDU6SXNzdWUyNTgyNTEzNDI=", "number": 506, "title": "Status doesn't properly load extended tweets from streaming APIs", "user": {"login": "robmathers", "id": 4419005, "node_id": "MDQ6VXNlcjQ0MTkwMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4419005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robmathers", "html_url": "https://github.com/robmathers", "followers_url": "https://api.github.com/users/robmathers/followers", "following_url": "https://api.github.com/users/robmathers/following{/other_user}", "gists_url": "https://api.github.com/users/robmathers/gists{/gist_id}", "starred_url": "https://api.github.com/users/robmathers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robmathers/subscriptions", "organizations_url": "https://api.github.com/users/robmathers/orgs", "repos_url": "https://api.github.com/users/robmathers/repos", "events_url": "https://api.github.com/users/robmathers/events{/privacy}", "received_events_url": "https://api.github.com/users/robmathers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-16T18:58:17Z", "updated_at": "2018-03-10T17:11:51Z", "closed_at": "2018-03-10T17:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nThe `Status.NewFromJsonDict` method doesn't properly load extended tweets with an `extended_tweet` payload, [which is how the streaming APIs provide extended tweets](https://dev.twitter.com/overview/api/upcoming-changes-to-tweets)\r\n\r\n## Steps to Reproduce\r\n1. Load a JSON dict of an extended tweet in Twitter's \"Compatibility with additional `extended_tweet` in payload\" mode. You can find a [sample here](https://github.com/twitterdev/tweet-updates/blob/master/samples/initial/compatibilityplus_extended_13997.json), or use `GetStreamSample()` and check for tweets with `truncated = True`.\r\n2. Use `Status.NewFromJsonDict` to convert the JSON dict to a `Status`.\r\n3. The status will just have a `text` property, without a `full_text`, even when the API instance has `tweet_mode` set to `extended`. Other extended entities are also not available.\r\n\r\n## Workaround\r\nBy copying the keys from the JSON's `extended_tweet` object to the root object, `NewFromJsonDict` properly parses the tweets as an extended tweet, with `full_text` available.\r\n\r\n### Example:\r\n```\r\n# Where json_dict is a dictionary parsed from the JSON of a tweet in this mode\r\nif json_dict.has_key('extended_tweet'):\r\n    for key, value in json_dict['extended_tweet'].items():\r\n        json_dict[key] = value\r\nconverted_tweet = Status.NewFromJsonDict(json_dict)\r\n# converted_tweet.full_text will be populated and not truncated\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/502", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/502/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/502/events", "html_url": "https://github.com/bear/python-twitter/issues/502", "id": 256129789, "node_id": "MDU6SXNzdWUyNTYxMjk3ODk=", "number": 502, "title": " Export the data to json", "user": {"login": "valclemir", "id": 31169486, "node_id": "MDQ6VXNlcjMxMTY5NDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/31169486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valclemir", "html_url": "https://github.com/valclemir", "followers_url": "https://api.github.com/users/valclemir/followers", "following_url": "https://api.github.com/users/valclemir/following{/other_user}", "gists_url": "https://api.github.com/users/valclemir/gists{/gist_id}", "starred_url": "https://api.github.com/users/valclemir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valclemir/subscriptions", "organizations_url": "https://api.github.com/users/valclemir/orgs", "repos_url": "https://api.github.com/users/valclemir/repos", "events_url": "https://api.github.com/users/valclemir/events{/privacy}", "received_events_url": "https://api.github.com/users/valclemir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T03:20:00Z", "updated_at": "2017-09-14T03:12:37Z", "closed_at": "2017-09-14T03:12:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I export the collected data from the Python-twitter API to json and store in mongodb?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/500", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/500/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/500/events", "html_url": "https://github.com/bear/python-twitter/issues/500", "id": 250773964, "node_id": "MDU6SXNzdWUyNTA3NzM5NjQ=", "number": 500, "title": "Issue with calculating expected status length", "user": {"login": "Michels10", "id": 3068631, "node_id": "MDQ6VXNlcjMwNjg2MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3068631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michels10", "html_url": "https://github.com/Michels10", "followers_url": "https://api.github.com/users/Michels10/followers", "following_url": "https://api.github.com/users/Michels10/following{/other_user}", "gists_url": "https://api.github.com/users/Michels10/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michels10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michels10/subscriptions", "organizations_url": "https://api.github.com/users/Michels10/orgs", "repos_url": "https://api.github.com/users/Michels10/repos", "events_url": "https://api.github.com/users/Michels10/events{/privacy}", "received_events_url": "https://api.github.com/users/Michels10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T22:05:40Z", "updated_at": "2017-12-17T15:03:13Z", "closed_at": "2017-12-17T15:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this should be considered a bug or if this is the intended functionality, so I figured I'd open a ticket to see what the thoughts are...\r\n\r\nCurrently the Twitter docs at https://dev.twitter.com/basics/tco state: \r\n\r\n> If you are not using the opt-in features, only links shorter in length than a t.co URL will be wrapped by t.co. All links t.co-length or longer should be considered as t.co\u2019s maximum length. For example, if help/configuration reports 20 characters as the maximum length, and a user posts a link that is 125 characters long, it should be considered as 20 characters long instead. If they post a link that is 18 characters long, it\u2019s still only 18 characters long.\r\n\r\n> If you are using the opt-in features, all URLs regardless of length should be considered to be the maximum length reported to you by help/configuration.\r\n\r\nHow do we determine if we're using the opt-in features?  Presently it would appear that my tweets with shortened urls (bit.ly) are being POSTed at 21 characters, and not being wrapped at all by t.co.  If this is the correct functionality, can we modify the ```calc_expected_status_length``` function to be something like the following?\r\n\r\n```\r\ndef calc_expected_status_length(status, short_url_length=23):\r\n    status_length = 0\r\n    for word in re.split(r'\\s', status):\r\n        if is_url(word):\r\n            status_length += short_url_length if len(word) >= short_url_length else len(word)\r\n        else:\r\n            status_length += len(word)\r\n    status_length += len(re.findall(r'\\s', status))\r\n    return status_length\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/498", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/498/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/498/events", "html_url": "https://github.com/bear/python-twitter/issues/498", "id": 249811474, "node_id": "MDU6SXNzdWUyNDk4MTE0NzQ=", "number": 498, "title": "converting a twitter.model.Status to a dict?", "user": {"login": "awitherow", "id": 1827147, "node_id": "MDQ6VXNlcjE4MjcxNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1827147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awitherow", "html_url": "https://github.com/awitherow", "followers_url": "https://api.github.com/users/awitherow/followers", "following_url": "https://api.github.com/users/awitherow/following{/other_user}", "gists_url": "https://api.github.com/users/awitherow/gists{/gist_id}", "starred_url": "https://api.github.com/users/awitherow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awitherow/subscriptions", "organizations_url": "https://api.github.com/users/awitherow/orgs", "repos_url": "https://api.github.com/users/awitherow/repos", "events_url": "https://api.github.com/users/awitherow/events{/privacy}", "received_events_url": "https://api.github.com/users/awitherow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-12T13:13:41Z", "updated_at": "2017-08-12T13:31:42Z", "closed_at": "2017-08-12T13:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to get tweets and I wish to sort them by the key `created_at`.\r\n\r\n```python\r\n# get_recent_tweets_with_search_term returns 100 search results per term sorted by creation date.\r\ndef search(term):\r\n    tweets = api.GetSearch(term=term, count=100)\r\n    return sorted(tweets, key=itemgetter(\"created_at\"))\r\n```\r\n\r\n\r\n```bash\r\nTypeError: 'Status' object has no attribute '__getitem__'\r\n```\r\n\r\nHow does one manage to sort this as a twitter.model.Status does not seem to be a dict?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/497", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/497/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/497/events", "html_url": "https://github.com/bear/python-twitter/issues/497", "id": 249347068, "node_id": "MDU6SXNzdWUyNDkzNDcwNjg=", "number": 497, "title": "\"Connections\" don't work properly (bug, how to solve it)", "user": {"login": "jmlipman", "id": 3540650, "node_id": "MDQ6VXNlcjM1NDA2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3540650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmlipman", "html_url": "https://github.com/jmlipman", "followers_url": "https://api.github.com/users/jmlipman/followers", "following_url": "https://api.github.com/users/jmlipman/following{/other_user}", "gists_url": "https://api.github.com/users/jmlipman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmlipman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmlipman/subscriptions", "organizations_url": "https://api.github.com/users/jmlipman/orgs", "repos_url": "https://api.github.com/users/jmlipman/repos", "events_url": "https://api.github.com/users/jmlipman/events{/privacy}", "received_events_url": "https://api.github.com/users/jmlipman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-10T13:31:10Z", "updated_at": "2017-12-01T12:32:18Z", "closed_at": "2017-12-01T12:32:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made a simple script in which I retrieve users by using LookupFriendship and when I access to each individual user.connections[\"followed_by\"] I realized that all of them were following me back (which is not true).\r\n\r\nI spot 2 problems/bugs in the code.\r\n\r\n1) The first problem is related to its design: in the class UserStatus we have  a dictionary \"connections\" and \"param_defaults\" that share some attributes which is redundant and confusing. I realized that my code worked if I check user.followed_by instead of user.connections[\"followed_by\"]. It makes no sense to have these two attributes while one of them doesn't work.\r\n\r\n2) But then, why did I see that all my friends followed me back? The answer is because the dictionary \"connections\" was outside the `__init__` so once the attributed \"followed_by\" is detected (as True) all of the elements will share the same value. I'm not really sure why because I thought they were completely independently different objects, as they are generated as: [UserStatus.NewFromJsonDict(x) for x in data].\r\n\r\nSolutions:\r\nA) Delete and forget about the dictionary \"connections\".\r\nB) Move the dictionary \"connections\" inside the `__init__` so every time it's called they will all be initialized as False.\r\n\r\nJM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/495", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/495/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/495/events", "html_url": "https://github.com/bear/python-twitter/issues/495", "id": 248147202, "node_id": "MDU6SXNzdWUyNDgxNDcyMDI=", "number": 495, "title": "GetSearch only returning 15 results regardless of count setting", "user": {"login": "WolfHoward", "id": 24969578, "node_id": "MDQ6VXNlcjI0OTY5NTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/24969578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WolfHoward", "html_url": "https://github.com/WolfHoward", "followers_url": "https://api.github.com/users/WolfHoward/followers", "following_url": "https://api.github.com/users/WolfHoward/following{/other_user}", "gists_url": "https://api.github.com/users/WolfHoward/gists{/gist_id}", "starred_url": "https://api.github.com/users/WolfHoward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WolfHoward/subscriptions", "organizations_url": "https://api.github.com/users/WolfHoward/orgs", "repos_url": "https://api.github.com/users/WolfHoward/repos", "events_url": "https://api.github.com/users/WolfHoward/events{/privacy}", "received_events_url": "https://api.github.com/users/WolfHoward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-05T00:59:45Z", "updated_at": "2017-08-08T11:49:55Z", "closed_at": "2017-08-08T11:49:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using GetSearch to identify users tweeting about specific hash tags. This is my code:\r\n\r\n```\r\nimport twitter\r\nfrom api_access import api_info\r\n\r\napi = twitter.Api(consumer_key=api_info['consumer_key'],\r\n                consumer_secret=api_info['consumer_secret'],\r\n                access_token_key=api_info['access_token_key'],\r\n                access_token_secret=api_info['access_token_secret'])\r\n\r\nsearch = api.GetSearch(raw_query='q=%23aging', count=100, result_type=\"mixed\")\r\n```\r\n\r\nI've tried it with various counts and I still only get 15 results. I thought it might have been the sleep_on_rate_limit setting, but I tried with that set to False and get the same result.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/494", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/494/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/494/events", "html_url": "https://github.com/bear/python-twitter/issues/494", "id": 246064927, "node_id": "MDU6SXNzdWUyNDYwNjQ5Mjc=", "number": 494, "title": "App Only authentication not working with Python3", "user": {"login": "Styx13", "id": 16089886, "node_id": "MDQ6VXNlcjE2MDg5ODg2", "avatar_url": "https://avatars1.githubusercontent.com/u/16089886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Styx13", "html_url": "https://github.com/Styx13", "followers_url": "https://api.github.com/users/Styx13/followers", "following_url": "https://api.github.com/users/Styx13/following{/other_user}", "gists_url": "https://api.github.com/users/Styx13/gists{/gist_id}", "starred_url": "https://api.github.com/users/Styx13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Styx13/subscriptions", "organizations_url": "https://api.github.com/users/Styx13/orgs", "repos_url": "https://api.github.com/users/Styx13/repos", "events_url": "https://api.github.com/users/Styx13/events{/privacy}", "received_events_url": "https://api.github.com/users/Styx13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-07-27T14:47:23Z", "updated_at": "2018-01-08T19:16:32Z", "closed_at": "2017-09-23T20:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using python-twitter with pyhon3 and I tried to switched from the default user authentication to app authentication, and I first got the following error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"./python-twitterGraphDB.py\", line 201, in <module>\r\n    mta = MyTwitterAPI(consumer_key, consumer_secret, access_token, access_token_secret)\r\n  File \"./python-twitterGraphDB.py\", line 114, in __init__\r\n    self.api = twitter.Api(consumer_key, consumer_secret, access_token, access_token_secret, sleep_on_rate_limit=True, application_only_auth=True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 273, in __init__\r\n    application_only_auth)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 336, in SetCredentials\r\n    self._bearer_token = self.GetAppOnlyAuthToken(consumer_key, consumer_secret)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 291, in GetAppOnlyAuthToken\r\n    from urllib import quote_plus\r\nImportError: cannot import name 'quote_plus'`\r\n\r\nI figured out that's because with python3 urllib is split into parts and 'quote_plus' is now in urllib.parse\r\n\r\nSo I changed line 291 from `from urllib import quote_plus` to `from urllib.parse import quote_plus` and now get the following error:\r\n`Traceback (most recent call last):\r\n  File \"./python-twitterGraphDB.py\", line 201, in <module>\r\n    mta = MyTwitterAPI(consumer_key, consumer_secret, access_token, access_token_secret)\r\n  File \"./python-twitterGraphDB.py\", line 114, in __init__\r\n    self.api = twitter.Api(consumer_key, consumer_secret, access_token, access_token_secret, sleep_on_rate_limit=True, application_only_auth=True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 273, in __init__\r\n    application_only_auth)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 336, in SetCredentials\r\n    self._bearer_token = self.GetAppOnlyAuthToken(consumer_key, consumer_secret)\r\n  File \"/usr/local/lib/python3.5/dist-packages/twitter/api.py\", line 296, in GetAppOnlyAuthToken\r\n    bearer_token = base64.b64encode('{}:{}'.format(key, secret))\r\n  File \"/usr/lib/python3.5/base64.py\", line 59, in b64encode\r\n    encoded = binascii.b2a_base64(s)[:-1]\r\nTypeError: a bytes-like object is required, not 'str'`\r\n\r\nI tried to play a bit and use the `bytes('{}:{}'.format(key, secret), 'utf-8')` but unfortunately other errors shows up down the road.\r\nSo I guess there's more to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/491", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/491/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/491/events", "html_url": "https://github.com/bear/python-twitter/issues/491", "id": 244406584, "node_id": "MDU6SXNzdWUyNDQ0MDY1ODQ=", "number": 491, "title": "Getting full_text from truncated tweets", "user": {"login": "jmlipman", "id": 3540650, "node_id": "MDQ6VXNlcjM1NDA2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3540650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmlipman", "html_url": "https://github.com/jmlipman", "followers_url": "https://api.github.com/users/jmlipman/followers", "following_url": "https://api.github.com/users/jmlipman/following{/other_user}", "gists_url": "https://api.github.com/users/jmlipman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmlipman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmlipman/subscriptions", "organizations_url": "https://api.github.com/users/jmlipman/orgs", "repos_url": "https://api.github.com/users/jmlipman/repos", "events_url": "https://api.github.com/users/jmlipman/events{/privacy}", "received_events_url": "https://api.github.com/users/jmlipman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768672, "node_id": "MDU6TGFiZWwxMzc2ODY3Mg==", "url": "https://api.github.com/repos/bear/python-twitter/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-07-20T15:35:26Z", "updated_at": "2018-03-10T17:12:06Z", "closed_at": "2018-03-10T17:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI realized that when using this library I get truncated tweets and I tried to find a solution. I found on the Internet that there is a parameter called \"tweet_mode\" that you are supposed to tunned as \"extended\". However, there is no such parameter in the GetSearch function.\r\n\r\nI realized that there is a parameter called raw_query, and I also tried to write something like \"q=whatever&tweet_mode=extended\" but it didn't work.\r\n\r\nI made a workaround and I want to share it because someone might find it useful. You just need to modify a couple of lines:\r\n\r\nIn the file models.py\r\nIn the function NewFromJsonDict from Status\r\nLine 469 (below user_mentions=None)\r\nadd: **full_text = None** \r\n\r\nLine 478 (below current_user_retweet = data['current_user_retweet']['id'])\r\nadd:         **if 'full_text' in data:\r\n            full_text = data['full_text']**\r\n\r\nLine (last):\r\nadd full_text in the parameters such that:\r\nreturn super(cls, cls).NewFromJsonDict(data=data,\r\n                                               current_user_retweet=current_user_retweet,\r\n                                               hashtags=hashtags,\r\n                                               media=media,\r\n                                               retweeted_status=retweeted_status,\r\n                                               urls=urls,\r\n                                               user=user,\r\n                                               user_mentions=user_mentions,**full_text=full_text**)\r\n\r\n\r\nThis is just a workaround but it would be great if it's implemented in the library.\r\n\r\nRegards,\r\nJM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/490", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/490/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/490/events", "html_url": "https://github.com/bear/python-twitter/issues/490", "id": 243327064, "node_id": "MDU6SXNzdWUyNDMzMjcwNjQ=", "number": 490, "title": "until parm didn't work in GetSearch method", "user": {"login": "ziliwang", "id": 13744942, "node_id": "MDQ6VXNlcjEzNzQ0OTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/13744942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziliwang", "html_url": "https://github.com/ziliwang", "followers_url": "https://api.github.com/users/ziliwang/followers", "following_url": "https://api.github.com/users/ziliwang/following{/other_user}", "gists_url": "https://api.github.com/users/ziliwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziliwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziliwang/subscriptions", "organizations_url": "https://api.github.com/users/ziliwang/orgs", "repos_url": "https://api.github.com/users/ziliwang/repos", "events_url": "https://api.github.com/users/ziliwang/events{/privacy}", "received_events_url": "https://api.github.com/users/ziliwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-17T08:36:42Z", "updated_at": "2017-07-17T11:10:20Z", "closed_at": "2017-07-17T11:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nIn [6]: a.api.GetSearch(term='paris', until='2017-06-15')\r\nOut[6]: []\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/489", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/489/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/489/events", "html_url": "https://github.com/bear/python-twitter/issues/489", "id": 242805944, "node_id": "MDU6SXNzdWUyNDI4MDU5NDQ=", "number": 489, "title": "Bug when differentiating text from URLs, causing an error for being over 140 chars", "user": {"login": "cdavid11", "id": 3790607, "node_id": "MDQ6VXNlcjM3OTA2MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3790607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdavid11", "html_url": "https://github.com/cdavid11", "followers_url": "https://api.github.com/users/cdavid11/followers", "following_url": "https://api.github.com/users/cdavid11/following{/other_user}", "gists_url": "https://api.github.com/users/cdavid11/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdavid11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdavid11/subscriptions", "organizations_url": "https://api.github.com/users/cdavid11/orgs", "repos_url": "https://api.github.com/users/cdavid11/repos", "events_url": "https://api.github.com/users/cdavid11/events{/privacy}", "received_events_url": "https://api.github.com/users/cdavid11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T19:30:12Z", "updated_at": "2018-02-27T03:56:57Z", "closed_at": "2018-02-27T03:56:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was having the darndest time figuring out why I was getting an error about being over the 140 character limit. It turns out, some of the text was being recognized as a URL.\r\n\r\nI was trying to tweet this line:\r\n\r\n`#DonaldTrump has signed: S.84 - A bill to provide for an exception to a limitation against appointment of persons...https://www.whitehouse.gov/legislation/s84-bill-provide-exception-limitation-against-appointment-persons-secretary-defense`\r\n\r\nIt's turns out that I had a couple of issues with this.\r\nTake a look at this:\r\n\r\n`#DonaldTrump False 12\r\nhas False 3\r\nsigned: False 7\r\nS.84 True 23\r\n- False 1\r\nA False 1\r\nbill False 4\r\nto False 2\r\nprovide False 7\r\nfor False 3\r\nan False 2\r\nexception False 9\r\nto False 2\r\na False 1\r\nlimitation False 10\r\nagainst False 7\r\nappointment False 11\r\nof False 2\r\npersons...https://www.whitehouse.gov/legislation/s84-bill-provide-exception-limitation-against-appointment-persons-secretary-defense True 23`\r\n\r\npersons... is being considered a part of the URL and the name of the S.82 in the name is also being recognized as a link. This is causing the error. My current workaround is setting the length check to false like so:\r\n\r\n`status = api.PostUpdate(to_tweet, verify_status_length=False)`\r\n\r\nSo I just wanted to open up this issue for it! Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/488", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/488/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/488/events", "html_url": "https://github.com/bear/python-twitter/issues/488", "id": 242260298, "node_id": "MDU6SXNzdWUyNDIyNjAyOTg=", "number": 488, "title": "twitter.Api doesn't work", "user": {"login": "x30r", "id": 13844523, "node_id": "MDQ6VXNlcjEzODQ0NTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/13844523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x30r", "html_url": "https://github.com/x30r", "followers_url": "https://api.github.com/users/x30r/followers", "following_url": "https://api.github.com/users/x30r/following{/other_user}", "gists_url": "https://api.github.com/users/x30r/gists{/gist_id}", "starred_url": "https://api.github.com/users/x30r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x30r/subscriptions", "organizations_url": "https://api.github.com/users/x30r/orgs", "repos_url": "https://api.github.com/users/x30r/repos", "events_url": "https://api.github.com/users/x30r/events{/privacy}", "received_events_url": "https://api.github.com/users/x30r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-12T05:20:03Z", "updated_at": "2017-07-23T18:04:24Z", "closed_at": "2017-07-12T05:29:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following is the error I am facing\r\n```\r\n>>> import twitter\r\n>>> twitter.Api()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'module' object has no attribute 'Api'\r\n>>> twitter.api()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'module' object is not callable\r\n```\r\nIt was working with my previous application but now it is not even working with that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/486", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/486/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/486/events", "html_url": "https://github.com/bear/python-twitter/issues/486", "id": 238226218, "node_id": "MDU6SXNzdWUyMzgyMjYyMTg=", "number": 486, "title": "Create a Poll", "user": {"login": "j4rv", "id": 815989, "node_id": "MDQ6VXNlcjgxNTk4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/815989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j4rv", "html_url": "https://github.com/j4rv", "followers_url": "https://api.github.com/users/j4rv/followers", "following_url": "https://api.github.com/users/j4rv/following{/other_user}", "gists_url": "https://api.github.com/users/j4rv/gists{/gist_id}", "starred_url": "https://api.github.com/users/j4rv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j4rv/subscriptions", "organizations_url": "https://api.github.com/users/j4rv/orgs", "repos_url": "https://api.github.com/users/j4rv/repos", "events_url": "https://api.github.com/users/j4rv/events{/privacy}", "received_events_url": "https://api.github.com/users/j4rv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-23T18:56:42Z", "updated_at": "2019-01-11T08:37:06Z", "closed_at": "2017-06-24T00:13:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having the functionality of creating a Poll would be really useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/485", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/485/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/485/events", "html_url": "https://github.com/bear/python-twitter/issues/485", "id": 236862317, "node_id": "MDU6SXNzdWUyMzY4NjIzMTc=", "number": 485, "title": "Following specific IDs returns also tweets that mention them ", "user": {"login": "Maor-RZ", "id": 24807466, "node_id": "MDQ6VXNlcjI0ODA3NDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/24807466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maor-RZ", "html_url": "https://github.com/Maor-RZ", "followers_url": "https://api.github.com/users/Maor-RZ/followers", "following_url": "https://api.github.com/users/Maor-RZ/following{/other_user}", "gists_url": "https://api.github.com/users/Maor-RZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maor-RZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maor-RZ/subscriptions", "organizations_url": "https://api.github.com/users/Maor-RZ/orgs", "repos_url": "https://api.github.com/users/Maor-RZ/repos", "events_url": "https://api.github.com/users/Maor-RZ/events{/privacy}", "received_events_url": "https://api.github.com/users/Maor-RZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T11:35:44Z", "updated_at": "2017-09-24T17:51:24Z", "closed_at": "2017-09-24T17:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI assign a list of user's IDs to 'Follow' with the GetStreamFilter function.\r\nThe documentation says that I am only should get back tweets that were uploaded by those users & re-tweets of them - but in fact the stream contains also tweets which are only mentioning those users (e.g. tweets which contain @Boeing for the Boeing user's ID ). \r\n\r\nIs that supposed to happen? How can I prevent this from happening / filter the stream?\r\n\r\nThank you very much,\r\nMaor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/483", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/483/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/483/events", "html_url": "https://github.com/bear/python-twitter/issues/483", "id": 236589929, "node_id": "MDU6SXNzdWUyMzY1ODk5Mjk=", "number": 483, "title": "Question about `future` dependency", "user": {"login": "sharkykh", "id": 10238474, "node_id": "MDQ6VXNlcjEwMjM4NDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/10238474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharkykh", "html_url": "https://github.com/sharkykh", "followers_url": "https://api.github.com/users/sharkykh/followers", "following_url": "https://api.github.com/users/sharkykh/following{/other_user}", "gists_url": "https://api.github.com/users/sharkykh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharkykh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharkykh/subscriptions", "organizations_url": "https://api.github.com/users/sharkykh/orgs", "repos_url": "https://api.github.com/users/sharkykh/repos", "events_url": "https://api.github.com/users/sharkykh/events{/privacy}", "received_events_url": "https://api.github.com/users/sharkykh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-16T20:40:33Z", "updated_at": "2017-07-25T04:18:41Z", "closed_at": "2017-07-25T04:18:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could anyone please explain to me why is `future` needed for this package?\r\nFrom what I can tell, [every `__future__` import in the code](https://github.com/bear/python-twitter/search?p=1&q=__future__&type=&utf8=%E2%9C%93) is available from the standard `__future__.py` that comes with the basic Python install.\r\nCan't it just use that?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/482", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/482/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/482/events", "html_url": "https://github.com/bear/python-twitter/issues/482", "id": 235034478, "node_id": "MDU6SXNzdWUyMzUwMzQ0Nzg=", "number": 482, "title": "api.GetSearch method only returns two Status when there are many more on Twitter", "user": {"login": "jtara1", "id": 7478231, "node_id": "MDQ6VXNlcjc0NzgyMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7478231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtara1", "html_url": "https://github.com/jtara1", "followers_url": "https://api.github.com/users/jtara1/followers", "following_url": "https://api.github.com/users/jtara1/following{/other_user}", "gists_url": "https://api.github.com/users/jtara1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtara1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtara1/subscriptions", "organizations_url": "https://api.github.com/users/jtara1/orgs", "repos_url": "https://api.github.com/users/jtara1/repos", "events_url": "https://api.github.com/users/jtara1/events{/privacy}", "received_events_url": "https://api.github.com/users/jtara1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-11T00:19:24Z", "updated_at": "2017-06-11T20:52:45Z", "closed_at": "2017-06-11T20:08:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "My raw query and method call:\r\n```\r\nraw_query = \"q=from%3ASmiteGame%20FWOTD\"\r\n\r\nself.statuses = api.GetSearch(raw_query=raw_query)\r\n```\r\n\r\nStatuses returned:\r\n```\r\n<class 'list'>: [Status(ID=873190710291431424, ScreenName=SmiteGame, Created=Fri Jun 09 14:51:03 +0000 2017, Text='Get Boosted! This weekend, complete a FWOTD to earn 3 Team Boosters!\\n\\nhttps://t.co/KRylCKb1AZ https://t.co/LjGRReHAib'), Status(ID=871849245774671874, ScreenName=SmiteGame, Created=Mon Jun 05 22:00:33 +0000 2017, Text=\"Don't be a loser - get a BOOSTER!\\nThis weekend, complete a FWOTD to earn 3 Team Boosters!\\n\\nhttps://t.co/47TAbEAZsk https://t.co/lq1wLzyWaP\")]\r\n```\r\n\r\nif we examine what twitter returns when manually searching, there are a lot more than 2 tweets.\r\nhttps://twitter.com/search?q=from%3Asmitegame%20FWOTD\r\n\r\n---\r\n\r\n2nd question:\r\n\r\nWould using the parameters, `until` and `since`, for the method call sort the tweets by the date they were tweeted?\r\n\r\nedit: I added the parameter `result_type=\"recent\"` to the `GetSearch` call, but it didn't seem to help any.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/481", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/481/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/481/events", "html_url": "https://github.com/bear/python-twitter/issues/481", "id": 232449738, "node_id": "MDU6SXNzdWUyMzI0NDk3Mzg=", "number": 481, "title": "GetUser/GetStatus id bug", "user": {"login": "taylornelson", "id": 5317169, "node_id": "MDQ6VXNlcjUzMTcxNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5317169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taylornelson", "html_url": "https://github.com/taylornelson", "followers_url": "https://api.github.com/users/taylornelson/followers", "following_url": "https://api.github.com/users/taylornelson/following{/other_user}", "gists_url": "https://api.github.com/users/taylornelson/gists{/gist_id}", "starred_url": "https://api.github.com/users/taylornelson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taylornelson/subscriptions", "organizations_url": "https://api.github.com/users/taylornelson/orgs", "repos_url": "https://api.github.com/users/taylornelson/repos", "events_url": "https://api.github.com/users/taylornelson/events{/privacy}", "received_events_url": "https://api.github.com/users/taylornelson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-31T04:23:57Z", "updated_at": "2017-05-31T21:38:11Z", "closed_at": "2017-05-31T21:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some GetUser requests the id returned doesn't work correctly with GetStatus for example\r\naboveandbeyond:\r\n\r\ndata = (api.GetUser(screen_name='aboveandbeyond'))\r\nprint(api.GetStatus(data.id)) #returns an error\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/480", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/480/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/480/events", "html_url": "https://github.com/bear/python-twitter/issues/480", "id": 231228228, "node_id": "MDU6SXNzdWUyMzEyMjgyMjg=", "number": 480, "title": "Max Count on GetUserTimeline", "user": {"login": "afcruzs", "id": 4340932, "node_id": "MDQ6VXNlcjQzNDA5MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4340932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afcruzs", "html_url": "https://github.com/afcruzs", "followers_url": "https://api.github.com/users/afcruzs/followers", "following_url": "https://api.github.com/users/afcruzs/following{/other_user}", "gists_url": "https://api.github.com/users/afcruzs/gists{/gist_id}", "starred_url": "https://api.github.com/users/afcruzs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afcruzs/subscriptions", "organizations_url": "https://api.github.com/users/afcruzs/orgs", "repos_url": "https://api.github.com/users/afcruzs/repos", "events_url": "https://api.github.com/users/afcruzs/events{/privacy}", "received_events_url": "https://api.github.com/users/afcruzs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-25T03:07:27Z", "updated_at": "2017-05-25T03:10:27Z", "closed_at": "2017-05-25T03:10:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why the max value of count in GetUserTimeline is 200?, I looked on the souce code and it uses the statuses/user_timeline endpoint, in the [twitter docs](https://dev.twitter.com/rest/reference/get/statuses/user_timeline) it says that the maximum number of tweets it is 3200, which is significantly more than 200.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/478", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/478/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/478/events", "html_url": "https://github.com/bear/python-twitter/issues/478", "id": 230855515, "node_id": "MDU6SXNzdWUyMzA4NTU1MTU=", "number": 478, "title": "Tweets aren't returned by GetSearch", "user": {"login": "mblandfo", "id": 8888671, "node_id": "MDQ6VXNlcjg4ODg2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8888671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mblandfo", "html_url": "https://github.com/mblandfo", "followers_url": "https://api.github.com/users/mblandfo/followers", "following_url": "https://api.github.com/users/mblandfo/following{/other_user}", "gists_url": "https://api.github.com/users/mblandfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mblandfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mblandfo/subscriptions", "organizations_url": "https://api.github.com/users/mblandfo/orgs", "repos_url": "https://api.github.com/users/mblandfo/repos", "events_url": "https://api.github.com/users/mblandfo/events{/privacy}", "received_events_url": "https://api.github.com/users/mblandfo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-23T21:41:49Z", "updated_at": "2017-05-25T23:49:03Z", "closed_at": "2017-05-25T23:49:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see many tweets here:\r\n\r\nhttps://twitter.com/search?q=from%3Acityofmentor%20since%3A2017-04-01%20until%3A2017-04-20\r\n\r\nThis code returns 0 tweets:\r\n\r\n```\r\napi = twitter.Api(consumer_key=config[\"consumer_key\"],\r\n                consumer_secret=config[\"consumer_secret\"],\r\n                access_token_key=config[\"access_token_key\"],\r\n                access_token_secret=config[\"access_token_secret\"],\r\n                sleep_on_rate_limit=True,\r\n                tweet_mode=\"extended\")\r\n\r\nq_string = \"q=from%3Acityofmentor%20since%3A2017-04-01%20until%3A2017-04-20\"\r\ntweets = api.GetSearch(raw_query=q_string)\r\n```\r\n\r\nNote that if I change the month to 5 instead of 4, it does return tweets for 3 days, but still not the full date range specified like it would from the advanced search url\r\n\r\nI also tried this code, but had the same problem:\r\n\r\n```\r\nstartDate = \"2017-04-01\"\r\nendDate = \"2017-04-20\"\r\napi.GetSearch(term=user.screen_name, since=startDate, until=endDate) \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/476", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/476/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/476/events", "html_url": "https://github.com/bear/python-twitter/issues/476", "id": 229247937, "node_id": "MDU6SXNzdWUyMjkyNDc5Mzc=", "number": 476, "title": "how to get Tweet's  retweeter Ids more than 100?", "user": {"login": "mike2341", "id": 22609391, "node_id": "MDQ6VXNlcjIyNjA5Mzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/22609391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike2341", "html_url": "https://github.com/mike2341", "followers_url": "https://api.github.com/users/mike2341/followers", "following_url": "https://api.github.com/users/mike2341/following{/other_user}", "gists_url": "https://api.github.com/users/mike2341/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike2341/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike2341/subscriptions", "organizations_url": "https://api.github.com/users/mike2341/orgs", "repos_url": "https://api.github.com/users/mike2341/repos", "events_url": "https://api.github.com/users/mike2341/events{/privacy}", "received_events_url": "https://api.github.com/users/mike2341/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-17T06:15:42Z", "updated_at": "2017-05-18T10:57:13Z", "closed_at": "2017-05-18T10:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/475", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/475/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/475/events", "html_url": "https://github.com/bear/python-twitter/issues/475", "id": 227059373, "node_id": "MDU6SXNzdWUyMjcwNTkzNzM=", "number": 475, "title": "Rate limit and header changes ", "user": {"login": "jeremylow", "id": 4955149, "node_id": "MDQ6VXNlcjQ5NTUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4955149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylow", "html_url": "https://github.com/jeremylow", "followers_url": "https://api.github.com/users/jeremylow/followers", "following_url": "https://api.github.com/users/jeremylow/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylow/subscriptions", "organizations_url": "https://api.github.com/users/jeremylow/orgs", "repos_url": "https://api.github.com/users/jeremylow/repos", "events_url": "https://api.github.com/users/jeremylow/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-08T14:12:49Z", "updated_at": "2017-09-24T15:24:31Z", "closed_at": "2017-09-24T15:24:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See here https://twittercommunity.com/t/upcoming-http-header-changes/86715 \r\n\r\nMay need to revisit rate limit code ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/472", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/472/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/472/events", "html_url": "https://github.com/bear/python-twitter/issues/472", "id": 223287178, "node_id": "MDU6SXNzdWUyMjMyODcxNzg=", "number": 472, "title": "Pip and the Latest Release", "user": {"login": "penn5", "id": 5600962, "node_id": "MDQ6VXNlcjU2MDA5NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5600962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penn5", "html_url": "https://github.com/penn5", "followers_url": "https://api.github.com/users/penn5/followers", "following_url": "https://api.github.com/users/penn5/following{/other_user}", "gists_url": "https://api.github.com/users/penn5/gists{/gist_id}", "starred_url": "https://api.github.com/users/penn5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penn5/subscriptions", "organizations_url": "https://api.github.com/users/penn5/orgs", "repos_url": "https://api.github.com/users/penn5/repos", "events_url": "https://api.github.com/users/penn5/events{/privacy}", "received_events_url": "https://api.github.com/users/penn5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13768676, "node_id": "MDU6TGFiZWwxMzc2ODY3Ng==", "url": "https://api.github.com/repos/bear/python-twitter/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "bear", "id": 1267, "node_id": "MDQ6VXNlcjEyNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bear", "html_url": "https://github.com/bear", "followers_url": "https://api.github.com/users/bear/followers", "following_url": "https://api.github.com/users/bear/following{/other_user}", "gists_url": "https://api.github.com/users/bear/gists{/gist_id}", "starred_url": "https://api.github.com/users/bear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bear/subscriptions", "organizations_url": "https://api.github.com/users/bear/orgs", "repos_url": "https://api.github.com/users/bear/repos", "events_url": "https://api.github.com/users/bear/events{/privacy}", "received_events_url": "https://api.github.com/users/bear/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bear", "id": 1267, "node_id": "MDQ6VXNlcjEyNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bear", "html_url": "https://github.com/bear", "followers_url": "https://api.github.com/users/bear/followers", "following_url": "https://api.github.com/users/bear/following{/other_user}", "gists_url": "https://api.github.com/users/bear/gists{/gist_id}", "starred_url": "https://api.github.com/users/bear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bear/subscriptions", "organizations_url": "https://api.github.com/users/bear/orgs", "repos_url": "https://api.github.com/users/bear/repos", "events_url": "https://api.github.com/users/bear/events{/privacy}", "received_events_url": "https://api.github.com/users/bear/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2017-04-21T06:12:34Z", "updated_at": "2017-05-21T02:28:07Z", "closed_at": "2017-05-21T02:28:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my opinion the latest version is ready for release - at the very least do a \"minor\" version that fixes video uploads (this has been fixed in the master branch, but not 3.2.1 release)!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/471", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/471/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/471/events", "html_url": "https://github.com/bear/python-twitter/issues/471", "id": 223283639, "node_id": "MDU6SXNzdWUyMjMyODM2Mzk=", "number": 471, "title": "'Api' object has no attribute 'GetStreamFilter'", "user": {"login": "silly362967856", "id": 17697217, "node_id": "MDQ6VXNlcjE3Njk3MjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/17697217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silly362967856", "html_url": "https://github.com/silly362967856", "followers_url": "https://api.github.com/users/silly362967856/followers", "following_url": "https://api.github.com/users/silly362967856/following{/other_user}", "gists_url": "https://api.github.com/users/silly362967856/gists{/gist_id}", "starred_url": "https://api.github.com/users/silly362967856/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silly362967856/subscriptions", "organizations_url": "https://api.github.com/users/silly362967856/orgs", "repos_url": "https://api.github.com/users/silly362967856/repos", "events_url": "https://api.github.com/users/silly362967856/events{/privacy}", "received_events_url": "https://api.github.com/users/silly362967856/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-21T05:49:52Z", "updated_at": "2017-04-28T11:15:46Z", "closed_at": "2017-04-28T11:15:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that \"GetStreamFilter\" method doesn't work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/470", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/470/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/470/events", "html_url": "https://github.com/bear/python-twitter/issues/470", "id": 223163995, "node_id": "MDU6SXNzdWUyMjMxNjM5OTU=", "number": 470, "title": "Wiki points to wrong url", "user": {"login": "rosvik", "id": 1774972, "node_id": "MDQ6VXNlcjE3NzQ5NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1774972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosvik", "html_url": "https://github.com/rosvik", "followers_url": "https://api.github.com/users/rosvik/followers", "following_url": "https://api.github.com/users/rosvik/following{/other_user}", "gists_url": "https://api.github.com/users/rosvik/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosvik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosvik/subscriptions", "organizations_url": "https://api.github.com/users/rosvik/orgs", "repos_url": "https://api.github.com/users/rosvik/repos", "events_url": "https://api.github.com/users/rosvik/events{/privacy}", "received_events_url": "https://api.github.com/users/rosvik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-20T18:51:45Z", "updated_at": "2017-04-20T22:21:52Z", "closed_at": "2017-04-20T22:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the wiki (https://github.com/bear/python-twitter/wiki) under **Documentation**, the url points to http://dev.twitter.com/doc instead of http://dev.twitter.com/docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/468", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/468/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/468/events", "html_url": "https://github.com/bear/python-twitter/issues/468", "id": 221928296, "node_id": "MDU6SXNzdWUyMjE5MjgyOTY=", "number": 468, "title": "python-twitter error in python3 ", "user": {"login": "connect2robiul", "id": 1263093, "node_id": "MDQ6VXNlcjEyNjMwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1263093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connect2robiul", "html_url": "https://github.com/connect2robiul", "followers_url": "https://api.github.com/users/connect2robiul/followers", "following_url": "https://api.github.com/users/connect2robiul/following{/other_user}", "gists_url": "https://api.github.com/users/connect2robiul/gists{/gist_id}", "starred_url": "https://api.github.com/users/connect2robiul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connect2robiul/subscriptions", "organizations_url": "https://api.github.com/users/connect2robiul/orgs", "repos_url": "https://api.github.com/users/connect2robiul/repos", "events_url": "https://api.github.com/users/connect2robiul/events{/privacy}", "received_events_url": "https://api.github.com/users/connect2robiul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-15T05:29:19Z", "updated_at": "2017-04-15T18:04:01Z", "closed_at": "2017-04-15T18:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "when writing `import twitter `\r\n\r\n```\r\nUsers/user/anaconda/lib/python3.6/json/encoder.py:199: DeprecationWarning: Interpreting naive datetime as local 2017-04-15 11:27:23.775585. Please add timezone info to timestamps.In [57]: \r\n  chunks = self.iterencode(o, _one_shot=True)\r\n/Users/user/anaconda/lib/python3.6/json/encoder.py:199: DeprecationWarning: Interpreting naive datetime as local 2017-04-15 11:27:23.782532. Please add timezone info to timestamps.\r\n  chunks = self.iterencode(o, _one_shot=True)\r\n```\r\n\r\n\r\nhow to fixed it ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/461", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/461/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/461/events", "html_url": "https://github.com/bear/python-twitter/issues/461", "id": 217898425, "node_id": "MDU6SXNzdWUyMTc4OTg0MjU=", "number": 461, "title": "CreateFavorite raises set(['Uknown error: ']) for decode('utf-8')", "user": {"login": "maxpierini", "id": 22147358, "node_id": "MDQ6VXNlcjIyMTQ3MzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/22147358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxpierini", "html_url": "https://github.com/maxpierini", "followers_url": "https://api.github.com/users/maxpierini/followers", "following_url": "https://api.github.com/users/maxpierini/following{/other_user}", "gists_url": "https://api.github.com/users/maxpierini/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxpierini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxpierini/subscriptions", "organizations_url": "https://api.github.com/users/maxpierini/orgs", "repos_url": "https://api.github.com/users/maxpierini/repos", "events_url": "https://api.github.com/users/maxpierini/events{/privacy}", "received_events_url": "https://api.github.com/users/maxpierini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-29T14:39:27Z", "updated_at": "2017-03-29T22:30:32Z", "closed_at": "2017-03-29T22:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes (I can't really understand why and in which cases exactly, but when it happens for a user it lasts almost one day),\r\n`api.CreateFavorite(status_id=ID)`\r\nraises this error:\r\n```\r\nFile \"/usr/local/lib/python2.7/dist-packages/twitter/api.py\", line 3390, in CreateFavorite\r\ndata = self._ParseAndCheckTwitter(resp.content.decode('utf-8'))\r\nFile \"/usr/local/lib/python2.7/dist-packages/twitter/api.py\", line 4860, in _ParseAndCheckTwitter\r\nraise TwitterError({'Unknown error: {0}'.format(json_data)})\r\nTwitterError: set(['Unknown error: '])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/458", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/458/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/458/events", "html_url": "https://github.com/bear/python-twitter/issues/458", "id": 215886846, "node_id": "MDU6SXNzdWUyMTU4ODY4NDY=", "number": 458, "title": "api.GetSearch does not take into account Count param", "user": {"login": "mikeres0", "id": 5929943, "node_id": "MDQ6VXNlcjU5Mjk5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5929943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeres0", "html_url": "https://github.com/mikeres0", "followers_url": "https://api.github.com/users/mikeres0/followers", "following_url": "https://api.github.com/users/mikeres0/following{/other_user}", "gists_url": "https://api.github.com/users/mikeres0/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeres0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeres0/subscriptions", "organizations_url": "https://api.github.com/users/mikeres0/orgs", "repos_url": "https://api.github.com/users/mikeres0/repos", "events_url": "https://api.github.com/users/mikeres0/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeres0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-21T21:40:36Z", "updated_at": "2017-03-24T13:39:53Z", "closed_at": "2017-03-22T16:12:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting a `Count=X` parameter does not have any effect on the number of items returned by the API.\r\n\r\nFor example this call returns the default 15 items: \r\n`api.GetSearch(raw_query='q=to%3Amikeres0', result_type='popular', include_entities=True, count='100')`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/457", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/457/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/457/events", "html_url": "https://github.com/bear/python-twitter/issues/457", "id": 214406550, "node_id": "MDU6SXNzdWUyMTQ0MDY1NTA=", "number": 457, "title": "Error message: \"Text must be less than or equal to 140 characters\" when it is not over", "user": {"login": "tony-mcgee", "id": 15612543, "node_id": "MDQ6VXNlcjE1NjEyNTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/15612543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony-mcgee", "html_url": "https://github.com/tony-mcgee", "followers_url": "https://api.github.com/users/tony-mcgee/followers", "following_url": "https://api.github.com/users/tony-mcgee/following{/other_user}", "gists_url": "https://api.github.com/users/tony-mcgee/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony-mcgee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony-mcgee/subscriptions", "organizations_url": "https://api.github.com/users/tony-mcgee/orgs", "repos_url": "https://api.github.com/users/tony-mcgee/repos", "events_url": "https://api.github.com/users/tony-mcgee/events{/privacy}", "received_events_url": "https://api.github.com/users/tony-mcgee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-15T14:27:41Z", "updated_at": "2018-02-27T04:00:38Z", "closed_at": "2018-02-27T04:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI use this great library to post data from a weather station and camera. Every hour, the current weather data plus an mp4 of a timelapse of the past hour is posted. This has run fine for several months, but suddenly today I started receiving errors about the tweet length being over 140 characters:\r\n\r\n`File \"/usr/local/lib/python2.7/dist-packages/twitter/api.py\", line 1008, in PostUpdate\r\n    raise TwitterError(\"Text must be less than or equal to 140 characters.\")\r\ntwitter.error.TwitterError: Text must be less than or equal to 140 characters.`\r\n\r\nThe text being posted was 125 characters, and the mp4 file attached was 1.9M. Both of these are very typical of what usually gets posted with no error, and there were no code changes between yesterday and today.\r\n\r\nI tested posting the media with a modified tweet of 114 characters and it worked. So the problem seems to be with the 125 character text + media, though like I said this had worked up to today.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/456", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/456/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/456/events", "html_url": "https://github.com/bear/python-twitter/issues/456", "id": 213806875, "node_id": "MDU6SXNzdWUyMTM4MDY4NzU=", "number": 456, "title": "how to Share a Tweet through Direct Messages?", "user": {"login": "wu860", "id": 5696410, "node_id": "MDQ6VXNlcjU2OTY0MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5696410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wu860", "html_url": "https://github.com/wu860", "followers_url": "https://api.github.com/users/wu860/followers", "following_url": "https://api.github.com/users/wu860/following{/other_user}", "gists_url": "https://api.github.com/users/wu860/gists{/gist_id}", "starred_url": "https://api.github.com/users/wu860/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wu860/subscriptions", "organizations_url": "https://api.github.com/users/wu860/orgs", "repos_url": "https://api.github.com/users/wu860/repos", "events_url": "https://api.github.com/users/wu860/events{/privacy}", "received_events_url": "https://api.github.com/users/wu860/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-13T15:39:35Z", "updated_at": "2017-03-13T15:50:26Z", "closed_at": "2017-03-13T15:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to Share a Tweet through Direct Messages", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bear/python-twitter/issues/455", "repository_url": "https://api.github.com/repos/bear/python-twitter", "labels_url": "https://api.github.com/repos/bear/python-twitter/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/bear/python-twitter/issues/455/comments", "events_url": "https://api.github.com/repos/bear/python-twitter/issues/455/events", "html_url": "https://github.com/bear/python-twitter/issues/455", "id": 213806849, "node_id": "MDU6SXNzdWUyMTM4MDY4NDk=", "number": 455, "title": "how to Share a Tweet through Direct Messages", "user": {"login": "wu860", "id": 5696410, "node_id": "MDQ6VXNlcjU2OTY0MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5696410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wu860", "html_url": "https://github.com/wu860", "followers_url": "https://api.github.com/users/wu860/followers", "following_url": "https://api.github.com/users/wu860/following{/other_user}", "gists_url": "https://api.github.com/users/wu860/gists{/gist_id}", "starred_url": "https://api.github.com/users/wu860/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wu860/subscriptions", "organizations_url": "https://api.github.com/users/wu860/orgs", "repos_url": "https://api.github.com/users/wu860/repos", "events_url": "https://api.github.com/users/wu860/events{/privacy}", "received_events_url": "https://api.github.com/users/wu860/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-13T15:39:30Z", "updated_at": "2017-03-13T16:44:17Z", "closed_at": "2017-03-13T15:51:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to Share a Tweet through Direct Messages", "performed_via_github_app": null, "score": 1.0}]}