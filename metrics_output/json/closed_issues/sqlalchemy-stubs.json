{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/164", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/164/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/164/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/164", "id": 660245301, "node_id": "MDU6SXNzdWU2NjAyNDUzMDE=", "number": 164, "title": "Can stubs work without mypy with pyright?", "user": {"login": "rmzr7", "id": 5417284, "node_id": "MDQ6VXNlcjU0MTcyODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5417284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmzr7", "html_url": "https://github.com/rmzr7", "followers_url": "https://api.github.com/users/rmzr7/followers", "following_url": "https://api.github.com/users/rmzr7/following{/other_user}", "gists_url": "https://api.github.com/users/rmzr7/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmzr7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmzr7/subscriptions", "organizations_url": "https://api.github.com/users/rmzr7/orgs", "repos_url": "https://api.github.com/users/rmzr7/repos", "events_url": "https://api.github.com/users/rmzr7/events{/privacy}", "received_events_url": "https://api.github.com/users/rmzr7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-18T16:33:01Z", "updated_at": "2020-07-22T10:15:30Z", "closed_at": "2020-07-22T10:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was wondering if the subs would work without mypy, for pyright?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/145", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/145/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/145/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/145", "id": 579393935, "node_id": "MDU6SXNzdWU1NzkzOTM5MzU=", "number": 145, "title": "sqlmypy is broken with mypy 0.750+", "user": {"login": "a-recknagel", "id": 2063412, "node_id": "MDQ6VXNlcjIwNjM0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2063412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-recknagel", "html_url": "https://github.com/a-recknagel", "followers_url": "https://api.github.com/users/a-recknagel/followers", "following_url": "https://api.github.com/users/a-recknagel/following{/other_user}", "gists_url": "https://api.github.com/users/a-recknagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-recknagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-recknagel/subscriptions", "organizations_url": "https://api.github.com/users/a-recknagel/orgs", "repos_url": "https://api.github.com/users/a-recknagel/repos", "events_url": "https://api.github.com/users/a-recknagel/events{/privacy}", "received_events_url": "https://api.github.com/users/a-recknagel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T16:31:03Z", "updated_at": "2020-03-11T16:36:22Z", "closed_at": "2020-03-11T16:36:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the sample code on [how to create a class with sqlalchemy](https://docs.sqlalchemy.org/en/13/orm/extensions/declarative/basic_use.html#basic-use):\r\n\r\n```python\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\n\r\n\r\nclass SomeClass(Base):\r\n    __tablename__ = 'some_table'\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String(50))\r\n```\r\nand the sqlmypy plugin switched on in mypy.ini:\r\n\r\n```ini\r\n[mypy]\r\nplugins = sqlmypy\r\n```\r\nRunning mypy on said code fails with an internal error in the line that calls `declarative_base`:\r\n\r\n```\r\n$ mypy mp.py --show-traceback\r\nmp.py:4: error: INTERNAL ERROR -- Please try using mypy master on Github:\r\nhttps://mypy.rtfd.io/en/latest/common_issues.html#using-a-development-mypy-build\r\nPlease report a bug at https://github.com/python/mypy/issues\r\nversion: 0.770+dev.20f7f2dd71c21bde4d3d99f9ab69bf6670c7fa03\r\nTraceback (most recent call last):\r\n  File \"/home/dev/venv/bin/mypy\", line 8, in <module>\r\n    sys.exit(console_entry())\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/__main__.py\", line 8, in console_entry\r\n    main(None, sys.stdout, sys.stderr)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/main.py\", line 89, in main\r\n    res = build.build(sources, options, None, flush_errors, fscache, stdout, stderr)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/build.py\", line 180, in build\r\n    result = _build(\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/build.py\", line 249, in _build\r\n    graph = dispatch(sources, manager, stdout)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/build.py\", line 2649, in dispatch\r\n    process_graph(graph, manager)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/build.py\", line 2956, in process_graph\r\n    process_stale_scc(graph, scc, manager)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/build.py\", line 3049, in process_stale_scc\r\n    mypy.semanal_main.semantic_analysis_for_scc(graph, scc, manager.errors)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal_main.py\", line 78, in semantic_analysis_for_scc\r\n    process_top_levels(graph, scc, patches)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal_main.py\", line 199, in process_top_levels\r\n    deferred, incomplete, progress = semantic_analyze_target(next_id, state,\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal_main.py\", line 326, in semantic_analyze_target\r\n    analyzer.refresh_partial(refresh_node,\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal.py\", line 350, in refresh_partial\r\n    self.refresh_top_level(node)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal.py\", line 361, in refresh_top_level\r\n    self.accept(d)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal.py\", line 4679, in accept\r\n    node.accept(self)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/nodes.py\", line 1062, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal.py\", line 1931, in visit_assignment_stmt\r\n    self.apply_dynamic_class_hook(s)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/mypy/semanal.py\", line 2182, in apply_dynamic_class_hook\r\n    hook(DynamicClassDefContext(call, lval.name, self))\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/sqlmypy.py\", line 193, in decl_info_hook\r\n    add_metadata_var(ctx.api, info)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/sqlmypy.py\", line 133, in add_metadata_var\r\n    add_var_to_class('metadata', typ, info)\r\n  File \"/home/dev/venv/lib/python3.8/site-packages/sqlmypy.py\", line 95, in add_var_to_class\r\n    var._fullname = info.fullname() + '.' + name\r\nTypeError: 'str' object is not callable\r\nmp.py:4: : note: use --pdb to drop into pdb\r\n```\r\nIt still works in 0.740, but fails on every version from 0.750 upwards until the current master, which I used to generate the traceback above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/138", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/138/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/138/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/138", "id": 550969554, "node_id": "MDU6SXNzdWU1NTA5Njk1NTQ=", "number": 138, "title": "Session.query() is untyped", "user": {"login": "cblegare", "id": 2456133, "node_id": "MDQ6VXNlcjI0NTYxMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2456133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblegare", "html_url": "https://github.com/cblegare", "followers_url": "https://api.github.com/users/cblegare/followers", "following_url": "https://api.github.com/users/cblegare/following{/other_user}", "gists_url": "https://api.github.com/users/cblegare/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblegare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblegare/subscriptions", "organizations_url": "https://api.github.com/users/cblegare/orgs", "repos_url": "https://api.github.com/users/cblegare/repos", "events_url": "https://api.github.com/users/cblegare/events{/privacy}", "received_events_url": "https://api.github.com/users/cblegare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-16T18:07:30Z", "updated_at": "2020-01-23T14:23:06Z", "closed_at": "2020-01-23T14:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone.  First, thank for these stubs.\r\n\r\nI am playing with mypy and sqlalchemy and ran into this issue.  I might have something wrong\r\n\r\n\r\n```python\r\nBase = sqlalchemy.ext.declarative.declarative_base()\r\n\r\nclass Bunny(Base):\r\n    __tablename__ = \"bunny\"\r\n    id = Column(Integer, primary_key=True)\r\n    color = Column(String)\r\n\r\n# create engine, etc.\r\nsession: sqlalchemy.orm.session.Session = cast(sqlalchemy.orm.session.Session, Session())\r\nquery = cast(sqlalchemy.orm.query.Query, session.query(Bunny))\r\nbunnies = session.query(Bunny).all()\r\n```\r\n\r\nWhich yield\r\n\r\n```\r\neaster.py:19: error: Call to untyped function \"query\" in typed context\r\neaster.py:20: error: Call to untyped function \"query\" in typed context\r\n```\r\n\r\nWhen I manually edit the stubs to add type annotation to the \"query\" function, [here](https://github.com/dropbox/sqlalchemy-stubs/blob/master/sqlalchemy-stubs/orm/session.pyi#L63), it silences the error.\r\n\r\nIs the issue simply that return types have not been added yet?  Will they be in the future?  I guess my question is more about the lifecycle of stubs projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/134", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/134/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/134/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/134", "id": 539804342, "node_id": "MDU6SXNzdWU1Mzk4MDQzNDI=", "number": 134, "title": "Model instance attributes have correct types when accessed, but not when compared structurally to another class", "user": {"login": "ckarnell", "id": 7363269, "node_id": "MDQ6VXNlcjczNjMyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7363269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckarnell", "html_url": "https://github.com/ckarnell", "followers_url": "https://api.github.com/users/ckarnell/followers", "following_url": "https://api.github.com/users/ckarnell/following{/other_user}", "gists_url": "https://api.github.com/users/ckarnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckarnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckarnell/subscriptions", "organizations_url": "https://api.github.com/users/ckarnell/orgs", "repos_url": "https://api.github.com/users/ckarnell/repos", "events_url": "https://api.github.com/users/ckarnell/events{/privacy}", "received_events_url": "https://api.github.com/users/ckarnell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T16:59:21Z", "updated_at": "2019-12-19T15:36:48Z", "closed_at": "2019-12-19T15:36:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when you access an attribute on a model, its type gets converted to the expected Python type. However, since this uses the plugin hook for attribute access, that means when structural typing is attempted, it doesn't match up.\r\n\r\nHere's an example illustrating my point.\r\n```\r\nfrom typing_extensions import Protocol\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer\r\n\r\nclass UserStructure(Protocol):\r\n    id: int\r\n\r\nBase = declarative_base()\r\n\r\nclass User(Base):\r\n    id = Column(Integer, primary_key=True)\r\n\r\nuser: UserStructure = User() # Incompatible types in assignment (expression has type \"User\", variable has type \"UserStructure\")  [assignment]\r\n# Following member(s) of \"User\" have conflicts:\r\n#    id: expected \"int\", got \"Column[int]\"\r\n```\r\n\r\nEven though `reveal_type(user.id)` shows `int`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/126", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/126/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/126/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/126", "id": 525195538, "node_id": "MDU6SXNzdWU1MjUxOTU1Mzg=", "number": 126, "title": "Next release?", "user": {"login": "ckarnell", "id": 7363269, "node_id": "MDQ6VXNlcjczNjMyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7363269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckarnell", "html_url": "https://github.com/ckarnell", "followers_url": "https://api.github.com/users/ckarnell/followers", "following_url": "https://api.github.com/users/ckarnell/following{/other_user}", "gists_url": "https://api.github.com/users/ckarnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckarnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckarnell/subscriptions", "organizations_url": "https://api.github.com/users/ckarnell/orgs", "repos_url": "https://api.github.com/users/ckarnell/repos", "events_url": "https://api.github.com/users/ckarnell/events{/privacy}", "received_events_url": "https://api.github.com/users/ckarnell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-19T18:48:50Z", "updated_at": "2019-11-19T19:13:49Z", "closed_at": "2019-11-19T19:03:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems like there have been enough updates to do another minor release. Would the maintainers be willing to make one?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/116", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/116/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/116/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/116", "id": 502073757, "node_id": "MDU6SXNzdWU1MDIwNzM3NTc=", "number": 116, "title": "query.update synchronize_session does not support bool", "user": {"login": "dbanty", "id": 43723790, "node_id": "MDQ6VXNlcjQzNzIzNzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/43723790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbanty", "html_url": "https://github.com/dbanty", "followers_url": "https://api.github.com/users/dbanty/followers", "following_url": "https://api.github.com/users/dbanty/following{/other_user}", "gists_url": "https://api.github.com/users/dbanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbanty/subscriptions", "organizations_url": "https://api.github.com/users/dbanty/orgs", "repos_url": "https://api.github.com/users/dbanty/repos", "events_url": "https://api.github.com/users/dbanty/events{/privacy}", "received_events_url": "https://api.github.com/users/dbanty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T13:40:33Z", "updated_at": "2019-10-07T19:36:09Z", "closed_at": "2019-10-07T19:36:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When passing a boolean to the `synchronize_session` param of `update` or `delete`, mypy complains with \r\n> Argument \"synchronize_session\" to \"update\" of \"Query\" has incompatible type \"bool\"; expected \"str\"\r\n\r\nIf you look in [the docs](https://docs.sqlalchemy.org/en/13/orm/query.html?highlight=synchronize_session#sqlalchemy.orm.query.Query.update.params.synchronize_session), `False` is a valid value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/115", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/115/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/115/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/115", "id": 502047820, "node_id": "MDU6SXNzdWU1MDIwNDc4MjA=", "number": 115, "title": "[Column type] has no attribute \"desc\"", "user": {"login": "qsantos", "id": 8493765, "node_id": "MDQ6VXNlcjg0OTM3NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8493765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qsantos", "html_url": "https://github.com/qsantos", "followers_url": "https://api.github.com/users/qsantos/followers", "following_url": "https://api.github.com/users/qsantos/following{/other_user}", "gists_url": "https://api.github.com/users/qsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/qsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qsantos/subscriptions", "organizations_url": "https://api.github.com/users/qsantos/orgs", "repos_url": "https://api.github.com/users/qsantos/repos", "events_url": "https://api.github.com/users/qsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/qsantos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-03T12:53:13Z", "updated_at": "2019-10-14T17:04:19Z", "closed_at": "2019-10-14T14:01:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say you have several models and want to write a method that can work on several of them using duck-typing. I wanted to provide proper typing by explicitly listing the models that could be passed to the method. However, this breaks the use of the model's fields as columns.\r\n\r\nIn the example below, the error is `\"int\" has no attribute \"desc\"`. In other words, the field is interpreted as `int` instead of `Column[int]` that one would expect. Maybe there is a better way to type this method?\r\n\r\n```python\r\nfrom typing import Type, Union\r\n\r\nfrom sqlalchemy import Column, Integer\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\n\r\n\r\nclass MyModel(Base):\r\n    created = Column(Integer, nullable=False)\r\n\r\n\r\ndef f(model: Type[Union[MyModel, MyModel]]) -> None:\r\n    model.created.desc\r\n```\r\n\r\n**Note:** for a MWE, I have used `Union[MyModel, MyModel]` but it could just as well be two different models both defining the `created` column\r\n\r\n**Note:** using `Union[Model]` does not trigger the error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/109", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/109/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/109/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/109", "id": 496176325, "node_id": "MDU6SXNzdWU0OTYxNzYzMjU=", "number": 109, "title": "Base.query is consider as error", "user": {"login": "NargiT", "id": 3153333, "node_id": "MDQ6VXNlcjMxNTMzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3153333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NargiT", "html_url": "https://github.com/NargiT", "followers_url": "https://api.github.com/users/NargiT/followers", "following_url": "https://api.github.com/users/NargiT/following{/other_user}", "gists_url": "https://api.github.com/users/NargiT/gists{/gist_id}", "starred_url": "https://api.github.com/users/NargiT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NargiT/subscriptions", "organizations_url": "https://api.github.com/users/NargiT/orgs", "repos_url": "https://api.github.com/users/NargiT/repos", "events_url": "https://api.github.com/users/NargiT/events{/privacy}", "received_events_url": "https://api.github.com/users/NargiT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-20T06:43:15Z", "updated_at": "2020-07-22T08:21:42Z", "closed_at": "2019-09-24T20:12:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have an issue using sqlalchemy-stubs with mypy. I need advices.\r\n\r\nmy dependencies\r\n```bash\r\nmypy 0.720 Optional static typing for Python\r\n\u251c\u2500\u2500 mypy-extensions >=0.4.0,<0.5.0\r\n\u251c\u2500\u2500 typed-ast >=1.4.0,<1.5.0\r\n\u2514\u2500\u2500 typing-extensions >=3.7.4\r\n    \u2514\u2500\u2500 typing >=3.7.4\r\n\r\nsqlalchemy-stubs 0.2 SQLAlchemy stubs and mypy plugin\r\n\u251c\u2500\u2500 mypy >=0.660\r\n\u2502   \u251c\u2500\u2500 mypy-extensions >=0.4.0,<0.5.0 \r\n\u2502   \u251c\u2500\u2500 typed-ast >=1.4.0,<1.5.0 \r\n\u2502   \u2514\u2500\u2500 typing-extensions >=3.7.4 \r\n\u2502       \u2514\u2500\u2500 typing >=3.7.4 \r\n\u2514\u2500\u2500 typing-extensions >=3.6.5\r\n    \u2514\u2500\u2500 typing >=3.7.4\r\n\r\nsqlalchemy 1.3.8 Database Abstraction Library\r\n```\r\n\r\ncode snippet\r\n```bash\r\nBase = declarative_base()\r\nBase.query = db_session.query_property()\r\n```\r\n\r\nerror\r\n```bash\r\nerror: \"Type[Base]\" has no attribute \"query\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/93", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/93/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/93/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/93", "id": 472738136, "node_id": "MDU6SXNzdWU0NzI3MzgxMzY=", "number": 93, "title": "Doesn't find columns on parent abstract classes", "user": {"login": "bochecha", "id": 272170, "node_id": "MDQ6VXNlcjI3MjE3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/272170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bochecha", "html_url": "https://github.com/bochecha", "followers_url": "https://api.github.com/users/bochecha/followers", "following_url": "https://api.github.com/users/bochecha/following{/other_user}", "gists_url": "https://api.github.com/users/bochecha/gists{/gist_id}", "starred_url": "https://api.github.com/users/bochecha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bochecha/subscriptions", "organizations_url": "https://api.github.com/users/bochecha/orgs", "repos_url": "https://api.github.com/users/bochecha/repos", "events_url": "https://api.github.com/users/bochecha/events{/privacy}", "received_events_url": "https://api.github.com/users/bochecha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T08:40:31Z", "updated_at": "2019-07-25T09:10:36Z", "closed_at": "2019-07-25T09:10:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "SQLAlchemy allows defining models as follows:\r\n\r\n```python\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\n\r\nclass BaseModel(Base):\r\n    __abstract__ = True\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    name =  Column(String(50))\r\n\r\nclass MyModel(BaseModel):\r\n    __tablename__ = 'my-model'\r\n\r\n    whatever = Column(String)\r\n```\r\n\r\nThen you can create new instances as expected:\r\n\r\n```python\r\nMyModel(name='the name', whatever='something here')\r\n```\r\n\r\nWhen doing that, Mypy reports:\r\n\r\n```\r\nerror: Unexpected column \"name\" for model \"MyModel\"\r\n```\r\n\r\nIt appears the stubs in this project don't let Mypy follow model inheritance?\r\n\r\nThis is with sqlalchemy-stubs==0.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/83", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/83/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/83/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/83", "id": 454712417, "node_id": "MDU6SXNzdWU0NTQ3MTI0MTc=", "number": 83, "title": "Is there a reason `selectinload` isn't a supported import currently?", "user": {"login": "ckarnell", "id": 7363269, "node_id": "MDQ6VXNlcjczNjMyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7363269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckarnell", "html_url": "https://github.com/ckarnell", "followers_url": "https://api.github.com/users/ckarnell/followers", "following_url": "https://api.github.com/users/ckarnell/following{/other_user}", "gists_url": "https://api.github.com/users/ckarnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckarnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckarnell/subscriptions", "organizations_url": "https://api.github.com/users/ckarnell/orgs", "repos_url": "https://api.github.com/users/ckarnell/repos", "events_url": "https://api.github.com/users/ckarnell/events{/privacy}", "received_events_url": "https://api.github.com/users/ckarnell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412762, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1017412763, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYz", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/help%20wanted", "name": "help wanted", "color": "32ea19", "default": true, "description": "Extra attention is needed"}, {"id": 1036887024, "node_id": "MDU6TGFiZWwxMDM2ODg3MDI0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-stubs", "name": "topic-stubs", "color": "f7b2cb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T14:06:50Z", "updated_at": "2019-09-12T12:52:59Z", "closed_at": "2019-09-12T12:52:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using these stubs I get a type error when I import `from sqlalchemy.orm import selectinload` saying it's not a valid import. Is there a reason for this? I know it's a relatively knew feature.\r\n\r\nThanks for making these stubs by the way!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/78", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/78/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/78/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/78", "id": 432149656, "node_id": "MDU6SXNzdWU0MzIxNDk2NTY=", "number": 78, "title": "Release v0.2?", "user": {"login": "MattF-NSIDC", "id": 18539827, "node_id": "MDQ6VXNlcjE4NTM5ODI3", "avatar_url": "https://avatars0.githubusercontent.com/u/18539827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattF-NSIDC", "html_url": "https://github.com/MattF-NSIDC", "followers_url": "https://api.github.com/users/MattF-NSIDC/followers", "following_url": "https://api.github.com/users/MattF-NSIDC/following{/other_user}", "gists_url": "https://api.github.com/users/MattF-NSIDC/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattF-NSIDC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattF-NSIDC/subscriptions", "organizations_url": "https://api.github.com/users/MattF-NSIDC/orgs", "repos_url": "https://api.github.com/users/MattF-NSIDC/repos", "events_url": "https://api.github.com/users/MattF-NSIDC/events{/privacy}", "received_events_url": "https://api.github.com/users/MattF-NSIDC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-11T17:37:57Z", "updated_at": "2019-08-04T22:19:32Z", "closed_at": "2019-06-27T20:06:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Thanks for building this plugin and stubs! It's great to see more support for type-checked Python.\r\n\r\nWe hit a wall and needed to `#type: ignore` our `ForeignKeyConstraint` calls to get them to pass type checking. We found that a fix had been merged a couple months ago (#56), but is not yet released. We were deciding between either submoduling this repo so we could use the fix which is on `master` or just `#type: ignore`ing it, neither is really great. Could you guys please put out a v0.2 release for this library so we can clean that up? Thanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/77", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/77/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/77/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/77", "id": 424544399, "node_id": "MDU6SXNzdWU0MjQ1NDQzOTk=", "number": 77, "title": "AssertionError in column_hook", "user": {"login": "cromefire", "id": 26320625, "node_id": "MDQ6VXNlcjI2MzIwNjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/26320625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cromefire", "html_url": "https://github.com/cromefire", "followers_url": "https://api.github.com/users/cromefire/followers", "following_url": "https://api.github.com/users/cromefire/following{/other_user}", "gists_url": "https://api.github.com/users/cromefire/gists{/gist_id}", "starred_url": "https://api.github.com/users/cromefire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cromefire/subscriptions", "organizations_url": "https://api.github.com/users/cromefire/orgs", "repos_url": "https://api.github.com/users/cromefire/repos", "events_url": "https://api.github.com/users/cromefire/events{/privacy}", "received_events_url": "https://api.github.com/users/cromefire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412760, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYw", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-23T20:59:22Z", "updated_at": "2019-09-04T18:25:27Z", "closed_at": "2019-09-04T17:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "sqlachemy version: `1.2.17`\r\nmypy version: `0.670`\r\n```\r\n<path to project>/.venv/lib/python3.6/site-packages/sqlalchemy/dialects/mssql/information_schema.py:59: error: INTERNAL ERROR -- please report a bug at https://github.com/python/mypy/issues version: 0.670\r\nTraceback (most recent call last):\r\n  File \"<path to project>/build.py\", line 46, in <module>\r\n    lint()\r\n  File \"<path to project>/build.py\", line 36, in lint\r\n    \"--show-traceback\"\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/main.py\", line 91, in main\r\n    res = build.build(sources, options, None, flush_errors, fscache)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 162, in build\r\n    result = _build(sources, options, alt_lib_path, flush_errors, fscache)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 217, in _build\r\n    graph = dispatch(sources, manager)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 2360, in dispatch\r\n    process_graph(graph, manager)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 2660, in process_graph\r\n    process_stale_scc(graph, scc, manager)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 2767, in process_stale_scc\r\n    graph[id].type_check_first_pass()\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/build.py\", line 1919, in type_check_first_pass\r\n    self.type_checker().check_first_pass()\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checker.py\", line 282, in check_first_pass\r\n    self.accept(d)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checker.py\", line 393, in accept\r\n    stmt.accept(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/nodes.py\", line 969, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checker.py\", line 1709, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None, s.new_syntax)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checker.py\", line 1828, in check_assignment\r\n    in_final_declaration=inferred.is_final,\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 3188, in accept\r\n    typ = node.accept(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/nodes.py\", line 1446, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 244, in visit_call_expr\r\n    return self.visit_call_expr_inner(e, allow_none_return=allow_none_return)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 314, in visit_call_expr_inner\r\n    ret_type = self.check_call_expr_with_callee_type(callee_type, e, fullname, object_type)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 658, in check_call_expr_with_callee_type\r\n    object_type=object_type)[0]\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 695, in check_call\r\n    object_type)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 780, in check_callable_call\r\n    callee, args, arg_kinds, formal_to_actual)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 873, in infer_arg_types_in_context\r\n    res[ai] = self.accept(args[ai], callee.arg_types[i])\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 3188, in accept\r\n    typ = node.accept(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/nodes.py\", line 1446, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 244, in visit_call_expr\r\n    return self.visit_call_expr_inner(e, allow_none_return=allow_none_return)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 314, in visit_call_expr_inner\r\n    ret_type = self.check_call_expr_with_callee_type(callee_type, e, fullname, object_type)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 658, in check_call_expr_with_callee_type\r\n    object_type=object_type)[0]\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 695, in check_call\r\n    object_type)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 802, in check_callable_call\r\n    callable_name, object_type, context)\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/mypy/checkexpr.py\", line 574, in apply_function_plugin\r\n    callee.ret_type, formal_arg_exprs, context, self.chk))\r\n  File \"<path to project>/.venv/lib/python3.6/site-packages/sqlmypy.py\", line 257, in column_hook\r\n    assert len(ctx.default_return_type.args) == 1\r\nAssertionError: \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/75", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/75/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/75/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/75", "id": 412887655, "node_id": "MDU6SXNzdWU0MTI4ODc2NTU=", "number": 75, "title": "Cannot resolve fields from mixins", "user": {"login": "orsinium", "id": 9638362, "node_id": "MDQ6VXNlcjk2MzgzNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9638362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orsinium", "html_url": "https://github.com/orsinium", "followers_url": "https://api.github.com/users/orsinium/followers", "following_url": "https://api.github.com/users/orsinium/following{/other_user}", "gists_url": "https://api.github.com/users/orsinium/gists{/gist_id}", "starred_url": "https://api.github.com/users/orsinium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orsinium/subscriptions", "organizations_url": "https://api.github.com/users/orsinium/orgs", "repos_url": "https://api.github.com/users/orsinium/repos", "events_url": "https://api.github.com/users/orsinium/events{/privacy}", "received_events_url": "https://api.github.com/users/orsinium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412760, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYw", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}, {"id": 1036886742, "node_id": "MDU6TGFiZWwxMDM2ODg2NzQy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-plugins", "name": "topic-plugins", "color": "78960c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-21T11:54:12Z", "updated_at": "2019-07-10T15:48:51Z", "closed_at": "2019-07-10T15:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "The plugin can't find fields from mixins or abstract models.\r\n\r\n```python\r\nclass _UserMixin:\r\n    some_field = s.Column(s.Integer)\r\n\r\nclass User(_UserMixin, Base):\r\n    ...\r\n\r\nUser(some_field=1, ...)\r\n```\r\n\r\nGet error:\r\n\r\n```bash\r\nerror: Unexpected column \"some_field\" for model \"User\"\r\n```\r\n\r\nSame error in this case:\r\n\r\n\r\n```python\r\nclass _UserBase(Base):\r\n    __abstract__ = True\r\n    some_field = s.Column(s.Integer)\r\n\r\nclass User(_UserBase):\r\n    ...\r\n\r\nUser(some_field=1, ...)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/67", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/67/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/67/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/67", "id": 406815581, "node_id": "MDU6SXNzdWU0MDY4MTU1ODE=", "number": 67, "title": "Can't use ForeignKey in Column", "user": {"login": "euresti", "id": 1081858, "node_id": "MDQ6VXNlcjEwODE4NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1081858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euresti", "html_url": "https://github.com/euresti", "followers_url": "https://api.github.com/users/euresti/followers", "following_url": "https://api.github.com/users/euresti/following{/other_user}", "gists_url": "https://api.github.com/users/euresti/gists{/gist_id}", "starred_url": "https://api.github.com/users/euresti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euresti/subscriptions", "organizations_url": "https://api.github.com/users/euresti/orgs", "repos_url": "https://api.github.com/users/euresti/repos", "events_url": "https://api.github.com/users/euresti/events{/privacy}", "received_events_url": "https://api.github.com/users/euresti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412760, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYw", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}, {"id": 1036887024, "node_id": "MDU6TGFiZWwxMDM2ODg3MDI0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-stubs", "name": "topic-stubs", "color": "f7b2cb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-05T14:44:49Z", "updated_at": "2019-02-17T15:26:49Z", "closed_at": "2019-02-17T15:26:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi the following used to work until https://github.com/dropbox/sqlalchemy-stubs/pull/54\r\n```\r\nfrom sqlalchemy import Column, ForeignKey\r\n\r\nx = Column(\r\n    \"template_group_id\",\r\n    ForeignKey(\"template_group.template_group_id\"),\r\n    nullable=False,\r\n    unique=True,\r\n)\r\n```\r\n\r\nIs there a workaround other than `#type: ignore`?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/63", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/63/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/63/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/63", "id": 406096264, "node_id": "MDU6SXNzdWU0MDYwOTYyNjQ=", "number": 63, "title": "Latest version seems to break mypy", "user": {"login": "mehdigmira", "id": 13655536, "node_id": "MDQ6VXNlcjEzNjU1NTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/13655536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdigmira", "html_url": "https://github.com/mehdigmira", "followers_url": "https://api.github.com/users/mehdigmira/followers", "following_url": "https://api.github.com/users/mehdigmira/following{/other_user}", "gists_url": "https://api.github.com/users/mehdigmira/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdigmira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdigmira/subscriptions", "organizations_url": "https://api.github.com/users/mehdigmira/orgs", "repos_url": "https://api.github.com/users/mehdigmira/repos", "events_url": "https://api.github.com/users/mehdigmira/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdigmira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-03T14:55:41Z", "updated_at": "2019-03-14T19:20:32Z", "closed_at": "2019-02-03T15:05:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when running mypy on my project, I get this error:\r\n```Error importing plugin sqlmypy```\r\n\r\nWhen debugging a little bit, the problem seems to be here:\r\n```\r\n    def get_dynamic_class_hook(self, fullname: str) -> CB[DynamicClassDefContext]:\r\n  File \"/usr/lib/python3.5/typing.py\", line 546, in __getitem__\r\n    \"Cannot subscript an existing Union. Use Union[u, t] instead.\")\r\nTypeError: Cannot subscript an existing Union. Use Union[u, t] instead.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/60", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/60/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/60/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/60", "id": 405528997, "node_id": "MDU6SXNzdWU0MDU1Mjg5OTc=", "number": 60, "title": "Support postgres uuid", "user": {"login": "kespindler", "id": 274946, "node_id": "MDQ6VXNlcjI3NDk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/274946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kespindler", "html_url": "https://github.com/kespindler", "followers_url": "https://api.github.com/users/kespindler/followers", "following_url": "https://api.github.com/users/kespindler/following{/other_user}", "gists_url": "https://api.github.com/users/kespindler/gists{/gist_id}", "starred_url": "https://api.github.com/users/kespindler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kespindler/subscriptions", "organizations_url": "https://api.github.com/users/kespindler/orgs", "repos_url": "https://api.github.com/users/kespindler/repos", "events_url": "https://api.github.com/users/kespindler/events{/privacy}", "received_events_url": "https://api.github.com/users/kespindler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412762, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}, {"id": 1036887024, "node_id": "MDU6TGFiZWwxMDM2ODg3MDI0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-stubs", "name": "topic-stubs", "color": "f7b2cb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-01T02:46:42Z", "updated_at": "2019-02-08T17:00:23Z", "closed_at": "2019-02-08T17:00:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to get sqlalchemy-stubs to work with a larger set of types. This would include uuids and JSON, but also encompasses a question about how to effectively create custom subtypes for columns (e.g. an Email str subtype.)\r\n\r\n```\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.dialects.postgresql import UUID\r\nfrom uuid import uuid4 as gen_uuid\r\nfrom typing import NewType\r\n\r\nBase = declarative_base()\r\n\r\n# create NewTypes for uuids and emails so that my_email: Email = 'random string' fails.\r\nUuid = NewType('Uuid', str)\r\nEmail = NewType('Email', str)\r\n\r\ndef uuid4():\r\n    return str(gen_uuid())\r\n\r\n\r\nclass UuidModel(Base):\r\n    __abstract__ = True\r\n    uuid = Column(UUID, primary_key=True, default=uuid4)\r\n\r\n\r\nclass User(UuidModel):\r\n    __tablename__ = 'users'\r\n    fico_score = Column(Integer, primary_key=True)\r\n    first_name = Column(String)\r\n\r\nuser = User(fico_score=42, first_name='bob')\r\nreveal_type(User.uuid)\r\nreveal_type(user.uuid)\r\nUser.first_name.ilike('hi')\r\n```\r\n\r\ngives\r\n\r\n```\r\nscript/test_model_typing.py:24: error: Revealed type is 'sqlalchemy.sql.schema.Column[Any]'\r\nscript/test_model_typing.py:25: error: Revealed type is 'Any'\r\n```\r\n\r\nI'd love to be able to support postgres uuids (and JSON too!) in our codebase. To accomplish this, I tried mimicking sqltypes.pyi by creating a file `sqlalchemy-stubs/dialects/postgresql/base.pyi` with contents\r\n\r\n```\r\nfrom typing import Type, NewType\r\n\r\nfrom .type_api import TypeEngine as TypeEngine\r\nfrom ..sql.sqltypes import _LookupExpressionAdapter\r\n\r\n\r\nUuid = NewType('Uuid', str)\r\n\r\n\r\nclass UUID(_LookupExpressionAdapter, TypeEngine[str]):\r\n    __visit_name__: str = ...\r\n    def get_dbapi_type(self, dbapi): ...\r\n    @property\r\n    def python_type(self) -> Type[Uuid]: ...\r\n```\r\n\r\nand importing it from  `sqlalchemy-stubs/dialects/postgresql/__init__.pyi` . That didn't seem to accomplish anything. I'd love some direction on the easiest way to contribute and add on to this great project.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/50", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/50/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/50/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/50", "id": 400619029, "node_id": "MDU6SXNzdWU0MDA2MTkwMjk=", "number": 50, "title": "Instanciating a model with **kwrgs", "user": {"login": "mehdigmira", "id": 13655536, "node_id": "MDQ6VXNlcjEzNjU1NTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/13655536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdigmira", "html_url": "https://github.com/mehdigmira", "followers_url": "https://api.github.com/users/mehdigmira/followers", "following_url": "https://api.github.com/users/mehdigmira/following{/other_user}", "gists_url": "https://api.github.com/users/mehdigmira/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdigmira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdigmira/subscriptions", "organizations_url": "https://api.github.com/users/mehdigmira/orgs", "repos_url": "https://api.github.com/users/mehdigmira/repos", "events_url": "https://api.github.com/users/mehdigmira/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdigmira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412760, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYw", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-18T08:25:47Z", "updated_at": "2019-01-18T15:52:28Z", "closed_at": "2019-01-18T15:52:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nIs there something wrong in the following code ?\r\n\r\n```\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\n\r\nBase = declarative_base()\r\n\r\n\r\nclass User(Base):\r\n    __tablename__ = 'users'\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String)\r\n\r\n\r\nclass Address(Base):\r\n    __tablename__ = 'addresses'\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String)\r\n\r\n\r\nUser(name=\"x\")\r\n\r\nd = {\"name\": \"x\"}\r\n\r\nUser(**d)  # causes error: Unexpected column \"None\" for model \"User\"\r\n```\r\n\r\nIs this the expected behaviour ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/40", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/40/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/40/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/40", "id": 388344348, "node_id": "MDU6SXNzdWUzODgzNDQzNDg=", "number": 40, "title": "Unexpected keyword argument", "user": {"login": "mehdigmira", "id": 13655536, "node_id": "MDQ6VXNlcjEzNjU1NTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/13655536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehdigmira", "html_url": "https://github.com/mehdigmira", "followers_url": "https://api.github.com/users/mehdigmira/followers", "following_url": "https://api.github.com/users/mehdigmira/following{/other_user}", "gists_url": "https://api.github.com/users/mehdigmira/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehdigmira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehdigmira/subscriptions", "organizations_url": "https://api.github.com/users/mehdigmira/orgs", "repos_url": "https://api.github.com/users/mehdigmira/repos", "events_url": "https://api.github.com/users/mehdigmira/events{/privacy}", "received_events_url": "https://api.github.com/users/mehdigmira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-06T18:39:33Z", "updated_at": "2018-12-10T10:21:36Z", "closed_at": "2018-12-06T18:59:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nWith the latest release of mypy and the master branch of sqlalchemy-stubs, this code causes mypy to raise a \"error: Unexpected keyword argument \"name\" for \"User\"\"\r\nIs there smth I can do to avoid these errors ?\r\n```\r\nfrom sqlalchemy import CheckConstraint, Column, Integer, String\r\nfrom sqlalchemy.ext.declarative import as_declarative\r\n\r\n@as_declarative()\r\nclass Base:\r\n    pass\r\n\r\n\r\nclass User(Base):\r\n    __tablename__ = 'users'\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String)\r\n\r\n\r\nuser = User(name=\"xx\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/36", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/36/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/36/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/36", "id": 381778022, "node_id": "MDU6SXNzdWUzODE3NzgwMjI=", "number": 36, "title": "Type hints for custom column types using TypeDecorator", "user": {"login": "j-walker23", "id": 2018885, "node_id": "MDQ6VXNlcjIwMTg4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2018885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-walker23", "html_url": "https://github.com/j-walker23", "followers_url": "https://api.github.com/users/j-walker23/followers", "following_url": "https://api.github.com/users/j-walker23/following{/other_user}", "gists_url": "https://api.github.com/users/j-walker23/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-walker23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-walker23/subscriptions", "organizations_url": "https://api.github.com/users/j-walker23/orgs", "repos_url": "https://api.github.com/users/j-walker23/repos", "events_url": "https://api.github.com/users/j-walker23/events{/privacy}", "received_events_url": "https://api.github.com/users/j-walker23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-16T22:08:54Z", "updated_at": "2020-06-17T12:09:23Z", "closed_at": "2018-11-17T05:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, these stubs are amazing. Thank you!\r\n\r\nI am trying to get my custom column types to work like a `ArrowType` using TypeDecorator from https://docs.sqlalchemy.org/en/latest/core/custom_types.html.\r\n\r\nI tried following how you're using the generic TypeEngine for native types like `Column(Boolean)`, `Column(Integer)` but am coming up short.\r\n\r\nAre custom columns working already? If not i figured i could add it using what you already have for the native types.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/23", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/23/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/23/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/23", "id": 357379689, "node_id": "MDU6SXNzdWUzNTczNzk2ODk=", "number": 23, "title": "What to do with Optional types?", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1047067764, "node_id": "MDU6TGFiZWwxMDQ3MDY3NzY0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/needs%20discussion", "name": "needs discussion", "color": "c5def5", "default": false, "description": ""}, {"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}, {"id": 1036886742, "node_id": "MDU6TGFiZWwxMDM2ODg2NzQy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-plugins", "name": "topic-plugins", "color": "78960c", "default": false, "description": ""}, {"id": 1036887024, "node_id": "MDU6TGFiZWwxMDM2ODg3MDI0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-stubs", "name": "topic-stubs", "color": "f7b2cb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-05T19:56:33Z", "updated_at": "2019-01-16T22:28:31Z", "closed_at": "2019-01-16T22:28:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are several things typed as `X` in current stubs while in reality the type is `Optional[X]`. One such thing (probably one of the most important) is `Column`. Just making the inferred type `Optional` would cause loads of false positives.\r\n\r\nA possible solution is to use `nullable` keyword to distinguish these (and probably `primary_key`), for example:\r\n```python\r\nclass User(Base):\r\n    id = Column(Integer(), primary_key=True)\r\n    name = Column(String(), nullable=False)\r\n    nickname = Column(String())\r\n\r\nuser: User\r\nrevreal_type(user.id)  # Revealed type is 'int'\r\nreveal_type(user.name)  # Revealed type is 'str'\r\nreveal_type(user.name)  # Revealed type is 'Optional[str]'\r\n```\r\n\r\ncc @jhance who might be interested in this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/19", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/19/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/19/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/19", "id": 356971069, "node_id": "MDU6SXNzdWUzNTY5NzEwNjk=", "number": 19, "title": "Add more tests", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-04T20:50:18Z", "updated_at": "2018-09-04T23:57:33Z", "closed_at": "2018-09-04T23:57:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should add tests for at least most basic code patterns:\r\n* Create table\r\n* Create model\r\n* Instantiate model\r\n* Make a query\r\n* Iterate and access attributes on results\r\n\r\nLater we can depend additional tests specifically for each feature we want to support by the plugin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/16", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/16/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/16/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/16", "id": 356894161, "node_id": "MDU6SXNzdWUzNTY4OTQxNjE=", "number": 16, "title": "Add development info to README", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-09-04T16:51:02Z", "updated_at": "2018-10-09T11:57:05Z", "closed_at": "2018-10-09T11:57:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently the steps include:\r\n* Clone repo\r\n* Update submodules\r\n* Install requirements\r\n* Export variables\r\n\r\nThen on each step:\r\n* Install stubs\r\n* Run pytest", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/7", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/7/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/7/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/7", "id": 354365617, "node_id": "MDU6SXNzdWUzNTQzNjU2MTc=", "number": 7, "title": "Make RelationshipProperty & co. generic", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412760, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYw", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}, {"id": 1036887024, "node_id": "MDU6TGFiZWwxMDM2ODg3MDI0", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-stubs", "name": "topic-stubs", "color": "f7b2cb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-27T15:27:43Z", "updated_at": "2018-11-14T01:23:51Z", "closed_at": "2018-11-14T01:23:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This type is used quite intensively in some codebases and behaves in a descriptor-like manner that leads currently to false positives. We need to make it generic and implemented the descriptor-like behavior _in stubs_. Related to https://github.com/dropbox/sqlalchemy-stubs/issues/5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/6", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/6/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/6/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/6", "id": 354362500, "node_id": "MDU6SXNzdWUzNTQzNjI1MDA=", "number": 6, "title": "Implement plugins to detect declarative bases", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412762, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1036884362, "node_id": "MDU6TGFiZWwxMDM2ODg0MzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-normal", "name": "priority-normal", "color": "fef2c0", "default": false, "description": ""}, {"id": 1036886742, "node_id": "MDU6TGFiZWwxMDM2ODg2NzQy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/topic-plugins", "name": "topic-plugins", "color": "78960c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-27T15:19:17Z", "updated_at": "2019-01-17T15:47:39Z", "closed_at": "2019-01-16T22:28:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We currently can only detect declarative bases defined using `@as_declarative`, a plugin for detecting `declarative_base()` depends on https://github.com/python/mypy/issues/5508", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/2", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/2/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/2/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/2", "id": 354347313, "node_id": "MDU6SXNzdWUzNTQzNDczMTM=", "number": 2, "title": "Add test runner and setup CI", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412762, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-27T14:40:20Z", "updated_at": "2018-09-04T23:55:50Z", "closed_at": "2018-09-04T23:55:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We can try to adopt mypy test runner that supports the following test format:\r\n```\r\n[case testColumnTypesForModel]\r\nfrom sqlalchemy import declarative_base, Column, Integer, String\r\n\r\nBase = declarative_base()\r\nclass User(Base):\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String)\r\n\r\nreveal_type(User().name)  # E: Revealed type is 'builtins.str'\r\nreveal_type(User.name)  # E: Revealed type is 'sql.schema.Column[builtins.str]'\r\n[out]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/1", "repository_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs", "labels_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/1/comments", "events_url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/issues/1/events", "html_url": "https://github.com/dropbox/sqlalchemy-stubs/issues/1", "id": 354342538, "node_id": "MDU6SXNzdWUzNTQzNDI1Mzg=", "number": 1, "title": "Add more info to README", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1017412762, "node_id": "MDU6TGFiZWwxMDE3NDEyNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1036883762, "node_id": "MDU6TGFiZWwxMDM2ODgzNzYy", "url": "https://api.github.com/repos/dropbox/sqlalchemy-stubs/labels/priority-high", "name": "priority-high", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-27T14:27:51Z", "updated_at": "2018-08-29T20:32:21Z", "closed_at": "2018-08-29T20:32:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some ideas:\r\n* Basic description, motivation, and example\r\n* Installation and usage instructions\r\n* Large scale design, and a roadmap", "performed_via_github_app": null, "score": 1.0}]}