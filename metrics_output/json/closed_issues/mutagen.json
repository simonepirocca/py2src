{"total_count": 355, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/quodlibet/mutagen/issues/482", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/482/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/482/events", "html_url": "https://github.com/quodlibet/mutagen/issues/482", "id": 655373774, "node_id": "MDU6SXNzdWU2NTUzNzM3NzQ=", "number": 482, "title": "Tests fails - flake8 error", "user": {"login": "kekePower", "id": 8249456, "node_id": "MDQ6VXNlcjgyNDk0NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8249456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kekePower", "html_url": "https://github.com/kekePower", "followers_url": "https://api.github.com/users/kekePower/followers", "following_url": "https://api.github.com/users/kekePower/following{/other_user}", "gists_url": "https://api.github.com/users/kekePower/gists{/gist_id}", "starred_url": "https://api.github.com/users/kekePower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kekePower/subscriptions", "organizations_url": "https://api.github.com/users/kekePower/orgs", "repos_url": "https://api.github.com/users/kekePower/repos", "events_url": "https://api.github.com/users/kekePower/events{/privacy}", "received_events_url": "https://api.github.com/users/kekePower/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-12T10:32:46Z", "updated_at": "2020-07-12T11:35:41Z", "closed_at": "2020-07-12T11:34:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nRan this in a chrooted build environment after it also failed to test locally.\r\n\r\nPython 3.8.3\r\nflake8 3.8.3\r\nMageia Cauldron x86_64\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n_______________________________ TFlake8.test_all _______________________________\r\n\r\nself = <tests.quality.test_flake8.TFlake8 testMethod=test_all>\r\n\r\n    def test_all(self):\r\n        assert flake8 is not None, \"flake8 is missing\"\r\n        style_guide = flake8.get_style_guide()\r\n        root = os.path.dirname(mutagen.__path__[0])\r\n        root = os.path.relpath(root, os.getcwd())\r\n        with capture_output() as (o, e):\r\n            style_guide.check_files([root])\r\n        errors = o.getvalue().splitlines()\r\n        if errors:\r\n>           raise Exception(\"\\n\" + \"\\n\".join(errors))\r\nE           Exception: \r\nE           ./build/lib/mutagen/_senf/_compat.py:41:26: F821 undefined name 'unicode'\r\nE           ./build/lib/mutagen/_senf/_compat.py:42:17: F821 undefined name 'unicode'\r\n\r\ntests/quality/test_flake8.py:34: Exception\r\n=========================== short test summary info ============================\r\nFAILED tests/quality/test_flake8.py::TFlake8::test_all - Exception: \r\n======================= 1 failed, 4040 passed in 46.63s ========================\r\nerror: Bad exit status from /home/stig/rpmbuild/tmp/rpm-tmp.grdGTj (%check)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/481", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/481/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/481/events", "html_url": "https://github.com/quodlibet/mutagen/issues/481", "id": 654458073, "node_id": "MDU6SXNzdWU2NTQ0NTgwNzM=", "number": 481, "title": "cannot catch ID3NoHeaderError", "user": {"login": "AlVincentM", "id": 29142786, "node_id": "MDQ6VXNlcjI5MTQyNzg2", "avatar_url": "https://avatars2.githubusercontent.com/u/29142786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlVincentM", "html_url": "https://github.com/AlVincentM", "followers_url": "https://api.github.com/users/AlVincentM/followers", "following_url": "https://api.github.com/users/AlVincentM/following{/other_user}", "gists_url": "https://api.github.com/users/AlVincentM/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlVincentM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlVincentM/subscriptions", "organizations_url": "https://api.github.com/users/AlVincentM/orgs", "repos_url": "https://api.github.com/users/AlVincentM/repos", "events_url": "https://api.github.com/users/AlVincentM/events{/privacy}", "received_events_url": "https://api.github.com/users/AlVincentM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-10T02:10:40Z", "updated_at": "2020-07-12T07:05:24Z", "closed_at": "2020-07-12T00:35:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am listing the song titles in a directory and some of the song's metadata are broken. Then I get this error: \r\n```\r\n  File \"/home/vincent/.local/lib/python3.8/site-packages/mutagen/id3/_tags.py\", line 67, in __init__\r\n    raise ID3NoHeaderError(\"%r doesn't start with an ID3 tag\" % fn)\r\nmutagen.id3._util.ID3NoHeaderError: './Believer.mp3' doesn't start with an ID3 tag\r\n```\r\nI tried catching the errors and skip the broken files but still didn't work:\r\n``` python\r\nfrom mutagen import MutagenError\r\n\r\ntry:\r\n    //do something\r\nexcept (MutagenError, ID3NoHeaderError):\r\n    pass\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/479", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/479/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/479/events", "html_url": "https://github.com/quodlibet/mutagen/issues/479", "id": 650013625, "node_id": "MDU6SXNzdWU2NTAwMTM2MjU=", "number": 479, "title": "mid3v2 Error When Writing Tag with Picture Frame", "user": {"login": "anthony-24", "id": 43860114, "node_id": "MDQ6VXNlcjQzODYwMTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/43860114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthony-24", "html_url": "https://github.com/anthony-24", "followers_url": "https://api.github.com/users/anthony-24/followers", "following_url": "https://api.github.com/users/anthony-24/following{/other_user}", "gists_url": "https://api.github.com/users/anthony-24/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthony-24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthony-24/subscriptions", "organizations_url": "https://api.github.com/users/anthony-24/orgs", "repos_url": "https://api.github.com/users/anthony-24/repos", "events_url": "https://api.github.com/users/anthony-24/events{/privacy}", "received_events_url": "https://api.github.com/users/anthony-24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T15:15:22Z", "updated_at": "2020-07-11T13:12:03Z", "closed_at": "2020-07-11T13:12:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using mid3v2 1.3 which uses Mutagen 1.31. I attempted to write MP3 tag with command such as:\r\n\r\n```\r\nmid3v2 --song \"Song Title\" --album \"Album Name\" --year \"2020\" --artist \"Artist Name\" --track \"1\" --picture \"/images/106.jpg\" \"/mnt/cifs/Radio Programming/Programs/pp212.mp3\"\r\n```\r\n\r\nHowever, this produces an error and the tag is not written. The error returned is:\r\n\r\n```\r\nmid3v2 [OPTION] [FILE]...\r\nmid3v2: error: no such option: --picture\r\n```\r\nIf I leave out the --picture option, the tag is written just fine. Also, it makes no difference if I write the command using the -p option for picture frame.\r\n\r\nKind regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/478", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/478/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/478/events", "html_url": "https://github.com/quodlibet/mutagen/issues/478", "id": 647636091, "node_id": "MDU6SXNzdWU2NDc2MzYwOTE=", "number": 478, "title": "Mutagen is unusable on ZFS", "user": {"login": "lovesegfault", "id": 7243783, "node_id": "MDQ6VXNlcjcyNDM3ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7243783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovesegfault", "html_url": "https://github.com/lovesegfault", "followers_url": "https://api.github.com/users/lovesegfault/followers", "following_url": "https://api.github.com/users/lovesegfault/following{/other_user}", "gists_url": "https://api.github.com/users/lovesegfault/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovesegfault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovesegfault/subscriptions", "organizations_url": "https://api.github.com/users/lovesegfault/orgs", "repos_url": "https://api.github.com/users/lovesegfault/repos", "events_url": "https://api.github.com/users/lovesegfault/events{/privacy}", "received_events_url": "https://api.github.com/users/lovesegfault/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-06-29T20:15:28Z", "updated_at": "2020-07-31T08:52:29Z", "closed_at": "2020-07-17T19:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I moved to ZFS I found that [beets](https://github.com/beetbox/beets) became unusably slow, to the point where scrubbing tags in a single FLAC was taking 10 or more **minutes**. I opened an issue, https://github.com/beetbox/beets/issues/3642, to investigate and eventually tracked it down to this portion of mutagen code:\r\n```\r\n --- modulename: flac, funcname: _writeblock\r\nflac.py(124):         data = bytearray()\r\nflac.py(125):         code = (block.code | 128) if is_last else block.code\r\nflac.py(126):         datum = block.write()\r\n --- modulename: flac, funcname: write\r\nflac.py(653):         try:\r\nflac.py(654):             return b\"\\x00\" * self.length\r\nflac.py(127):         size = len(datum)\r\nflac.py(128):         if size > cls._MAX_SIZE:\r\nflac.py(138):         assert not size > cls._MAX_SIZE\r\nflac.py(139):         length = struct.pack(\">I\", size)[-3:]\r\nflac.py(140):         data.append(code)\r\nflac.py(141):         data += length\r\nflac.py(142):         data += datum\r\nflac.py(143):         return data\r\nflac.py(168):         return data\r\nflac.py(868):         data_size = len(data)\r\nflac.py(870):         resize_bytes(filething.fileobj, available, data_size, header)\r\n --- modulename: _util, funcname: resize_bytes\r\n_util.py(909):     if new_size < old_size:\r\n_util.py(910):         delete_size = old_size - new_size\r\n_util.py(911):         delete_at = offset + new_size\r\n_util.py(912):         delete_bytes(fobj, delete_size, delete_at)\r\n --- modulename: _util, funcname: delete_bytes\r\n_util.py(875):     if size < 0 or offset < 0:\r\n_util.py(878):     fobj.seek(0, 2)\r\n_util.py(879):     filesize = fobj.tell()\r\n_util.py(880):     movesize = filesize - offset - size\r\n_util.py(882):     if movesize < 0:\r\n_util.py(885):     if mmap is not None:\r\n_util.py(886):         try:\r\n_util.py(887):             mmap_move(fobj, offset, offset + size, movesize)\r\n --- modulename: _util, funcname: mmap_move\r\n_util.py(704):     assert mmap is not None, \"no mmap support\"\r\n_util.py(706):     if dest < 0 or src < 0 or count < 0:\r\n_util.py(709):     try:\r\n_util.py(710):         fileno = fileobj.fileno()\r\n_util.py(715):     fileobj.seek(0, 2)\r\n_util.py(716):     filesize = fileobj.tell()\r\n_util.py(717):     length = max(dest, src) + count\r\n_util.py(719):     if length > filesize:\r\n_util.py(722):     offset = ((min(dest, src) // mmap.ALLOCATIONGRANULARITY) *\r\n_util.py(723):               mmap.ALLOCATIONGRANULARITY)\r\n_util.py(722):     offset = ((min(dest, src) // mmap.ALLOCATIONGRANULARITY) *\r\n_util.py(724):     assert dest >= offset\r\n_util.py(725):     assert src >= offset\r\n_util.py(726):     assert offset % mmap.ALLOCATIONGRANULARITY == 0\r\n_util.py(729):     if count == 0:\r\n_util.py(733):     if src == dest:\r\n_util.py(736):     fileobj.flush()\r\n_util.py(737):     file_map = mmap.mmap(fileno, length - offset, offset=offset)\r\n_util.py(738):     try:\r\n_util.py(739):         file_map.move(dest - offset, src - offset, count)\r\n```\r\n\r\nOn the OpenZFS IRC someone mentioned the issue seems to be the mmap based file writing mutagen is doing. ZFS isn't integrated with the linux cache, and so each mmap operation needs to be copied in and out of the cache making it painfully slow. To test this I applied the following patch to mutagen:\r\n```patch\r\ndiff --git a/mutagen/_util.py b/mutagen/_util.py\r\nindex 1332f9d..5b9a8cd 100644\r\n--- a/mutagen/_util.py\r\n+++ b/mutagen/_util.py\r\n@@ -20,7 +20,7 @@ import decimal\r\n from io import BytesIO\r\n \r\n try:\r\n-    import mmap\r\n+    mmap = None\r\n except ImportError:\r\n     # Google App Engine has no mmap:\r\n     #   https://github.com/quodlibet/mutagen/issues/286\r\n@@ -701,8 +701,6 @@ def mmap_move(fileobj, dest, src, count):\r\n         ValueError: In case invalid parameters were given\r\n     \"\"\"\r\n \r\n-    assert mmap is not None, \"no mmap support\"\r\n-\r\n     if dest < 0 or src < 0 or count < 0:\r\n         raise ValueError(\"Invalid parameters\")\r\n \r\ndiff --git a/tests/test__util.py b/tests/test__util.py\r\nindex 0ed25ed..55d0d7a 100644\r\n--- a/tests/test__util.py\r\n+++ b/tests/test__util.py\r\n@@ -2,7 +2,7 @@\r\n \r\n from mutagen._util import DictMixin, cdata, insert_bytes, delete_bytes, \\\r\n     decode_terminated, dict_match, enum, get_size, BitReader, BitReaderError, \\\r\n-    resize_bytes, seek_end, mmap_move, verify_fileobj, fileobj_name, \\\r\n+    resize_bytes, seek_end, verify_fileobj, fileobj_name, \\\r\n     read_full, flags, resize_file, fallback_move, encode_endian, loadfile, \\\r\n     intround, verify_filename\r\n from mutagen._compat import text_type, itervalues, iterkeys, iteritems, PY2, \\\r\n@@ -376,33 +376,12 @@ class TMoveMixin(object):\r\n             self.MOVE(o, 0, 1, 2)\r\n             self.MOVE(o, 1, 0, 2)\r\n \r\n-    def test_larger_than_page_size(self):\r\n-        off = mmap.ALLOCATIONGRANULARITY\r\n-        with self.file(b\"f\" * off * 2) as o:\r\n-            self.MOVE(o, off, off + 1, off - 1)\r\n-            self.MOVE(o, off + 1, off, off - 1)\r\n-\r\n-        with self.file(b\"f\" * off * 2 + b\"x\") as o:\r\n-            self.MOVE(o, off * 2 - 1, off * 2, 1)\r\n-            self.assertEqual(self.read(o)[-3:], b\"fxx\")\r\n-\r\n \r\n class Tfallback_move(TestCase, TMoveMixin):\r\n \r\n     MOVE = staticmethod(fallback_move)\r\n \r\n \r\n-class MmapMove(TestCase, TMoveMixin):\r\n-\r\n-    MOVE = staticmethod(mmap_move)\r\n-\r\n-    def test_stringio(self):\r\n-        self.assertRaises(mmap.error, mmap_move, cBytesIO(), 0, 0, 0)\r\n-\r\n-    def test_no_fileno(self):\r\n-        self.assertRaises(mmap.error, mmap_move, object(), 0, 0, 0)\r\n-\r\n-\r\n class FileHandling(TestCase):\r\n     def file(self, contents):\r\n         temp = tempfile.TemporaryFile()\r\n```\r\n\r\nAnd the issue immediately went away.\r\n\r\n\r\n\r\nI'd like to request for either:\r\n1. `mutagen` to detect ZFS and disable `mmap`. I don't know if that's possible\r\n2. For consumers of mutagen to be able to specify, somehow, that they _don't_ want to use `mmap`'d files\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/471", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/471/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/471/events", "html_url": "https://github.com/quodlibet/mutagen/issues/471", "id": 632958333, "node_id": "MDU6SXNzdWU2MzI5NTgzMzM=", "number": 471, "title": "Questions regarding python 2 support.", "user": {"login": "mzaman07", "id": 9009585, "node_id": "MDQ6VXNlcjkwMDk1ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9009585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzaman07", "html_url": "https://github.com/mzaman07", "followers_url": "https://api.github.com/users/mzaman07/followers", "following_url": "https://api.github.com/users/mzaman07/following{/other_user}", "gists_url": "https://api.github.com/users/mzaman07/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzaman07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzaman07/subscriptions", "organizations_url": "https://api.github.com/users/mzaman07/orgs", "repos_url": "https://api.github.com/users/mzaman07/repos", "events_url": "https://api.github.com/users/mzaman07/events{/privacy}", "received_events_url": "https://api.github.com/users/mzaman07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-07T02:56:54Z", "updated_at": "2020-07-11T16:14:34Z", "closed_at": "2020-07-11T16:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm not sure if this is the place to ask. I am working on a project called [Oppia](https://github.com/oppia/oppia) and we use this library for identifying the correct mp3 format. Recently I am working on a [feature](https://github.com/oppia/oppia/pull/9088) that uses it as a background MapReduce job in Google App Engine. \r\n\r\nAfter running the job an error is thrown via Google App Engine. \r\n\r\n`Traceback (most recent call last): (/third_party/gae-mapreduce-1.9.22.0/mapreduce/handlers.py:517)\r\n .  \r\n .\r\n .\r\n  File \"/python27/python27_lib/versions/1/google/appengine/ext/appstats/formatting.py\", line 203, in _format_value\r\n    dct = getattr(val, '__dict__', None)\r\nTypeError: descriptor '__dict__' for 'BitrateMode' objects doesn't apply to 'BitrateMode' object\r\n`\r\n\r\n\r\nUpon further investigation, I found out that the appstats module in Google App Engine is throwing (line ) the error because [BitRate](https://github.com/quodlibet/mutagen/blob/9ff77790090774bc3c633f74f58a063886368a8a/mutagen/mp3/__init__.py#L38) enum class does not have `__dict__` descriptor as a TypeError. I played around version 1.43 and added `__dict__` descriptor and the error went away. \r\n\r\nI know I can easily create a fork of this repo and maintain that, but I have several questions.\r\n\r\n- Would a python 2 update be acceptable? From the documentation, the current release does not support python 2.\r\n\r\n- Would this kind of niche one-off fix be accepted? Let's say someone other than myself encounters the same issue when using python 3 in the Google App Engine. \r\n\r\n- The fix I am going to propose is to have __dict__ descriptor to essentially be a no-op function. This should satisfy the fix. However, I can see this being problem from readability and clarity standpoint. Will that be ok?\r\n\r\n- In the case that I do maintain a fork, how will we coordinate regression issues and bugs in both codebases?\r\n\r\n- For any fixes post-python 2, how should I integrate them back to python 2 in the fork?\r\n\r\nI have considered fixing this from the Google App Engine side but since this Google App Engine infrastructure, I am reluctant to approach it that way.\r\n\r\nAny discussion on this is appreciated. Sorry for the wall of text. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/470", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/470/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/470/events", "html_url": "https://github.com/quodlibet/mutagen/issues/470", "id": 628075425, "node_id": "MDU6SXNzdWU2MjgwNzU0MjU=", "number": 470, "title": "breaks m4a files", "user": {"login": "tcurdt", "id": 13697, "node_id": "MDQ6VXNlcjEzNjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcurdt", "html_url": "https://github.com/tcurdt", "followers_url": "https://api.github.com/users/tcurdt/followers", "following_url": "https://api.github.com/users/tcurdt/following{/other_user}", "gists_url": "https://api.github.com/users/tcurdt/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcurdt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcurdt/subscriptions", "organizations_url": "https://api.github.com/users/tcurdt/orgs", "repos_url": "https://api.github.com/users/tcurdt/repos", "events_url": "https://api.github.com/users/tcurdt/events{/privacy}", "received_events_url": "https://api.github.com/users/tcurdt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-01T00:15:40Z", "updated_at": "2020-06-01T12:29:15Z", "closed_at": "2020-06-01T12:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've used \r\n\r\n```\r\n% mid3v2 --version\r\nmid3v2 1.3\r\nUses Mutagen 1.44.0\r\n```\r\n\r\nto set a some tags\r\n\r\n```\r\n% mid3v2 -v -a \"Alice In Chains\" -A \"Jar of Flies\" -t \"No Excuses\" -y 1994 -T 4 ~/Desktop/test.m4a \r\nWriting ~/Desktop/test.m4a\r\nNo ID3 header found; creating a new tag\r\n\r\n% mid3v2 -l ~/Desktop/test.m4a                                                        \r\nIDv2 tag info for ~/Desktop/test.m4a\r\nTALB=Jar of Flies\r\nTDRC=1994\r\nTIT2=No Excuses\r\nTPE1=Alice In Chains\r\nTRCK=4\r\n```\r\n\r\nIt looks like it worked - but I can no longer play the m4a.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/468", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/468/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/468/events", "html_url": "https://github.com/quodlibet/mutagen/issues/468", "id": 612570655, "node_id": "MDU6SXNzdWU2MTI1NzA2NTU=", "number": 468, "title": "BPM calculation", "user": {"login": "MayuraVerma", "id": 14062593, "node_id": "MDQ6VXNlcjE0MDYyNTkz", "avatar_url": "https://avatars1.githubusercontent.com/u/14062593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MayuraVerma", "html_url": "https://github.com/MayuraVerma", "followers_url": "https://api.github.com/users/MayuraVerma/followers", "following_url": "https://api.github.com/users/MayuraVerma/following{/other_user}", "gists_url": "https://api.github.com/users/MayuraVerma/gists{/gist_id}", "starred_url": "https://api.github.com/users/MayuraVerma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MayuraVerma/subscriptions", "organizations_url": "https://api.github.com/users/MayuraVerma/orgs", "repos_url": "https://api.github.com/users/MayuraVerma/repos", "events_url": "https://api.github.com/users/MayuraVerma/events{/privacy}", "received_events_url": "https://api.github.com/users/MayuraVerma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T12:39:07Z", "updated_at": "2020-05-05T15:11:10Z", "closed_at": "2020-05-05T15:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "does mutagen calculate BPM for audio files?\r\n\r\nIf not, it's a good feature to add to the program.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/466", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/466/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/466/events", "html_url": "https://github.com/quodlibet/mutagen/issues/466", "id": 611574477, "node_id": "MDU6SXNzdWU2MTE1NzQ0Nzc=", "number": 466, "title": "how do i install 2.7 version in linux?", "user": {"login": "panchipanchi", "id": 38849188, "node_id": "MDQ6VXNlcjM4ODQ5MTg4", "avatar_url": "https://avatars2.githubusercontent.com/u/38849188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panchipanchi", "html_url": "https://github.com/panchipanchi", "followers_url": "https://api.github.com/users/panchipanchi/followers", "following_url": "https://api.github.com/users/panchipanchi/following{/other_user}", "gists_url": "https://api.github.com/users/panchipanchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/panchipanchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panchipanchi/subscriptions", "organizations_url": "https://api.github.com/users/panchipanchi/orgs", "repos_url": "https://api.github.com/users/panchipanchi/repos", "events_url": "https://api.github.com/users/panchipanchi/events{/privacy}", "received_events_url": "https://api.github.com/users/panchipanchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-04T02:56:19Z", "updated_at": "2020-05-04T06:44:49Z", "closed_at": "2020-05-04T03:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "thanks, i usually just use PIP.....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/460", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/460/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/460/events", "html_url": "https://github.com/quodlibet/mutagen/issues/460", "id": 598630296, "node_id": "MDU6SXNzdWU1OTg2MzAyOTY=", "number": 460, "title": "about the mp3 tags in old encoding", "user": {"login": "ucas010", "id": 50656998, "node_id": "MDQ6VXNlcjUwNjU2OTk4", "avatar_url": "https://avatars1.githubusercontent.com/u/50656998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ucas010", "html_url": "https://github.com/ucas010", "followers_url": "https://api.github.com/users/ucas010/followers", "following_url": "https://api.github.com/users/ucas010/following{/other_user}", "gists_url": "https://api.github.com/users/ucas010/gists{/gist_id}", "starred_url": "https://api.github.com/users/ucas010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ucas010/subscriptions", "organizations_url": "https://api.github.com/users/ucas010/orgs", "repos_url": "https://api.github.com/users/ucas010/repos", "events_url": "https://api.github.com/users/ucas010/events{/privacy}", "received_events_url": "https://api.github.com/users/ucas010/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-13T02:23:47Z", "updated_at": "2020-04-16T17:11:25Z", "closed_at": "2020-04-16T17:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,dear\r\n\r\nI have used the MP3 to get the tags of the mp3 file,\r\nbut the results are hard to understand\r\ncodes\r\n```\r\nfrom mutagen.mp3 import MP3\r\npath='wxsm.mp3'\r\nsongFile = MP3(path)\r\ntitle = songFile.tags['TIT2'].text[0]\r\nalbum=songFile.tags['TALB'].text[0]\r\nartist=songFile.tags['TPE1'].text[0]\r\n```\r\n\r\nresults\r\n```\r\n>>> title\r\n'\u00ce\u00de\u00d0\u00c4\u00cb\u00af\u00c3\u00df'\r\n>>> album\r\n'\u00d7\u00ee\u00c8\u00c8'\r\n>>> artist\r\n'\u00d5\u00c5\u00b9\u00fa\u00c8\u00d9'\r\n```\r\n\r\ncoudl you please help me ?\r\n\r\nthx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/459", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/459/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/459/events", "html_url": "https://github.com/quodlibet/mutagen/issues/459", "id": 596777834, "node_id": "MDU6SXNzdWU1OTY3Nzc4MzQ=", "number": 459, "title": "[Question] How to modify existing ID3 tags", "user": {"login": "codenotworking", "id": 52512478, "node_id": "MDQ6VXNlcjUyNTEyNDc4", "avatar_url": "https://avatars1.githubusercontent.com/u/52512478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codenotworking", "html_url": "https://github.com/codenotworking", "followers_url": "https://api.github.com/users/codenotworking/followers", "following_url": "https://api.github.com/users/codenotworking/following{/other_user}", "gists_url": "https://api.github.com/users/codenotworking/gists{/gist_id}", "starred_url": "https://api.github.com/users/codenotworking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codenotworking/subscriptions", "organizations_url": "https://api.github.com/users/codenotworking/orgs", "repos_url": "https://api.github.com/users/codenotworking/repos", "events_url": "https://api.github.com/users/codenotworking/events{/privacy}", "received_events_url": "https://api.github.com/users/codenotworking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-08T18:38:08Z", "updated_at": "2020-04-09T18:07:07Z", "closed_at": "2020-04-09T18:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to modify existing ID3 tags in an mp3 file.\r\n\r\nI have looked at `ID3Tags.add()` and `ID3Tags.setall()` on [https://mutagen.readthedocs.io/](https://mutagen.readthedocs.io/).\r\n\r\nIf I use `ID3Tags.delall()` and then `ID3Tags.add()`, that seems to work.\r\nBut `ID3Tags.setall()` doesn't, unless I am incorrectly using it.\r\n\r\nI would like to get `ID3Tags.setall()` to work, since according to the aforementioned documentation, it _\"Delete frames of the given type and add frames in \u2018values\u2019.\"_\r\n\r\nHere's my code:\r\n```\r\nfrom mutagen.id3 import ID3\r\naudio = ID3(r\"audio.mp3\")\r\naudio.setall(\"WOAR\", WOAR(url=[u\"http://www.website.com\"]))\r\n```\r\nBut then I receive the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nNameError: name 'WOAR' is not defined\r\n```\r\nI have even tried importing all of ID3 by using `from mutagen.id3 import *`, but still receive the error.\r\n\r\nHow do I use `ID3Tags.setall()` correctly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/458", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/458/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/458/events", "html_url": "https://github.com/quodlibet/mutagen/issues/458", "id": 596106490, "node_id": "MDU6SXNzdWU1OTYxMDY0OTA=", "number": 458, "title": "[Question] How to display COMM (comment) frame's text without square brackets?", "user": {"login": "codenotworking", "id": 52512478, "node_id": "MDQ6VXNlcjUyNTEyNDc4", "avatar_url": "https://avatars1.githubusercontent.com/u/52512478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codenotworking", "html_url": "https://github.com/codenotworking", "followers_url": "https://api.github.com/users/codenotworking/followers", "following_url": "https://api.github.com/users/codenotworking/following{/other_user}", "gists_url": "https://api.github.com/users/codenotworking/gists{/gist_id}", "starred_url": "https://api.github.com/users/codenotworking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codenotworking/subscriptions", "organizations_url": "https://api.github.com/users/codenotworking/orgs", "repos_url": "https://api.github.com/users/codenotworking/repos", "events_url": "https://api.github.com/users/codenotworking/events{/privacy}", "received_events_url": "https://api.github.com/users/codenotworking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T19:41:22Z", "updated_at": "2020-04-07T19:56:09Z", "closed_at": "2020-04-07T19:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's my code:\r\n\r\n```\r\nfrom mutagen.id3 import ID3\r\naudio = ID3(r\"audio.mp3\")\r\naudio.getall(\"COMM\")[0].text\r\n```\r\nThis produces:\r\n```\r\n['Some example comment']\r\n```\r\nHow can I print out the `COMM` frame's text without the square brackets?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/455", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/455/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/455/events", "html_url": "https://github.com/quodlibet/mutagen/issues/455", "id": 593496537, "node_id": "MDU6SXNzdWU1OTM0OTY1Mzc=", "number": 455, "title": "aiff: Unexpected OverflowError", "user": {"login": "jvoisin", "id": 325724, "node_id": "MDQ6VXNlcjMyNTcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/325724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvoisin", "html_url": "https://github.com/jvoisin", "followers_url": "https://api.github.com/users/jvoisin/followers", "following_url": "https://api.github.com/users/jvoisin/following{/other_user}", "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions", "organizations_url": "https://api.github.com/users/jvoisin/orgs", "repos_url": "https://api.github.com/users/jvoisin/repos", "events_url": "https://api.github.com/users/jvoisin/events{/privacy}", "received_events_url": "https://api.github.com/users/jvoisin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-03T16:22:46Z", "updated_at": "2020-04-04T06:12:04Z", "closed_at": "2020-04-04T06:12:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nTraceback (most recent call last):\r\n  File \"mutagen_repro.py\", line 8, in <module>\r\n    f = mutagen.File(sys.argv[1])\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 148, in wrapper_func\r\n    return func(h, *args, **kwargs)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 300, in File\r\n    return Kind(fileobj, filename=filething.filename)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 140, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/aiff.py\", line 472, in load\r\n    self.info = AIFFInfo(fileobj)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/aiff.py\", line 361, in __init__\r\n    self.sample_rate = int(read_float(sample_rate))\r\n  File \"/home/jvoisin/dev/pythonfuzz/ven/lib/python3.7/site-packages/mutagen/aiff.py\", line 73, in read_float\r\n    f = (himant * 0x100000000 + lomant) * pow(2.0, expon - 63)\r\nOverflowError: (34, 'Numerical result out of range')\r\nzsh: exit 1     python3 mutagen_repro.py \r\n```\r\n\r\n[crash-584a7be28c14cdf0c92d88c5d8c10e474d10f284734f95197c90879d2cf8d64d.zip](https://github.com/quodlibet/mutagen/files/4428585/crash-584a7be28c14cdf0c92d88c5d8c10e474d10f284734f95197c90879d2cf8d64d.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/453", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/453/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/453/events", "html_url": "https://github.com/quodlibet/mutagen/issues/453", "id": 593445270, "node_id": "MDU6SXNzdWU1OTM0NDUyNzA=", "number": 453, "title": "[Question] How to only display basic APIC information?", "user": {"login": "codenotworking", "id": 52512478, "node_id": "MDQ6VXNlcjUyNTEyNDc4", "avatar_url": "https://avatars1.githubusercontent.com/u/52512478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codenotworking", "html_url": "https://github.com/codenotworking", "followers_url": "https://api.github.com/users/codenotworking/followers", "following_url": "https://api.github.com/users/codenotworking/following{/other_user}", "gists_url": "https://api.github.com/users/codenotworking/gists{/gist_id}", "starred_url": "https://api.github.com/users/codenotworking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codenotworking/subscriptions", "organizations_url": "https://api.github.com/users/codenotworking/orgs", "repos_url": "https://api.github.com/users/codenotworking/repos", "events_url": "https://api.github.com/users/codenotworking/events{/privacy}", "received_events_url": "https://api.github.com/users/codenotworking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-03T15:01:33Z", "updated_at": "2020-04-03T17:29:18Z", "closed_at": "2020-04-03T17:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to Python and Mutagen.\r\n\r\nHere is the basic code I have:\r\n\r\n```\r\nfrom mutagen.id3 import ID3\r\naudio = ID3(r\"audio.mp3\")\r\nprint(audio.pprint())\r\n```\r\n\r\nThis outputs all of the ID3 tags being used on the MP3.  But I want to fine tune the output to only include APIC information.  I have tried `getall()`:\r\n\r\n```\r\nprint(audio.getall(\"APIC\"))\r\n```\r\n\r\nAnd I have tried using a `for` loop with the suggestion here ([ID3 Dict Interface](https://mutagen.readthedocs.io/en/latest/user/id3.html#id3-dict-interface)) for displaying all the frames of one type:\r\n\r\n```\r\nfor frame in audio.getall(\"APIC\"):\r\n    frame\r\n```\r\nBut I keep getting the frame hashes from the one or more attached pictures.\r\n\r\nIs there any way to only get the the basic APIC tag information that `print(audio.pprint())` from above provides, without the other tags and without the frame hashes?\r\n\r\nOr is there a way to display the APIC picture type?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/452", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/452/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/452/events", "html_url": "https://github.com/quodlibet/mutagen/issues/452", "id": 592021181, "node_id": "MDU6SXNzdWU1OTIwMjExODE=", "number": 452, "title": "Long file name handling under Windows", "user": {"login": "djmhunt", "id": 2421913, "node_id": "MDQ6VXNlcjI0MjE5MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2421913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djmhunt", "html_url": "https://github.com/djmhunt", "followers_url": "https://api.github.com/users/djmhunt/followers", "following_url": "https://api.github.com/users/djmhunt/following{/other_user}", "gists_url": "https://api.github.com/users/djmhunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/djmhunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djmhunt/subscriptions", "organizations_url": "https://api.github.com/users/djmhunt/orgs", "repos_url": "https://api.github.com/users/djmhunt/repos", "events_url": "https://api.github.com/users/djmhunt/events{/privacy}", "received_events_url": "https://api.github.com/users/djmhunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-01T15:51:44Z", "updated_at": "2020-04-03T15:19:48Z", "closed_at": "2020-04-02T16:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been having trouble opening some files with long filenames using mutagen. An example of such a file path is: D:/Dropbox/Music/George Frederick Handel/Handel  Messiah/1-08 Recitative (Alto)  Behold, A Virgin Shall Conceive  Isaiah 7 14; Matthew 1 23 - Air (Alto)  O Thou That Tellest Good Tidings To Zion  Isaiah 40 9; 60 1 - Chorus  O Thou That Tellest Good Tidings To Zion, Arise  Isaiah 40 9; 60 1.mp3'. This issue was on an up to date Windows 10 machine with Python 3.7.6.\r\n\r\nThis resulted in the error provided in full at the end. I think this is an issue with opening files in python with file paths longer than 260 characters on Windows, as described [here on stackoverflow](https://stackoverflow.com/a/60105517). The solution provided worked for me. I would like to propose including a line somewhere to modify the file path, if under windows and if long enough:\r\nfilename = '\\\\\\\\?\\\\' + filename.replace('/', '\\\\')\r\n\r\nmutagen._util._openfile looks like a suitable place to include this, but as I am new to this codebase you might have better ideas.\r\n\r\nMany thanks\r\n\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n~\\Anaconda3\\lib\\site-packages\\mutagen\\_util.py in verify_fileobj(fileobj, writable)\r\n     69     try:\r\n---> 70         data = fileobj.read(0)\r\n     71     except Exception:\r\n\r\nAttributeError: 'MutagenError' object has no attribute 'read'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-118-2cc263994c72> in <module>\r\n      1 \r\n----> 2 mutagen.File(file_path)\r\n      3 \r\n      4 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\mutagen\\_util.py in wrapper_func(*args, **kwargs)\r\n    145                 convert_file_args(args, kwargs)\r\n    146             with _openfile(None, filething, filename, fileobj,\r\n--> 147                            writable, create) as h:\r\n    148                 return func(h, *args, **kwargs)\r\n    149 \r\n\r\n~\\Anaconda3\\lib\\contextlib.py in __enter__(self)\r\n    110         del self.args, self.kwds, self.func\r\n    111         try:\r\n--> 112             return next(self.gen)\r\n    113         except StopIteration:\r\n    114             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n~\\Anaconda3\\lib\\site-packages\\mutagen\\_util.py in _openfile(instance, filething, filename, fileobj, writable, create)\r\n    226 \r\n    227     if fileobj is not None:\r\n--> 228         verify_fileobj(fileobj, writable=writable)\r\n    229         yield FileThing(fileobj, filename, filename or fileobj_name(fileobj))\r\n    230     elif filename is not None:\r\n\r\n~\\Anaconda3\\lib\\site-packages\\mutagen\\_util.py in verify_fileobj(fileobj, writable)\r\n     71     except Exception:\r\n     72         if not hasattr(fileobj, \"read\"):\r\n---> 73             raise ValueError(\"%r not a valid file object\" % fileobj)\r\n     74         raise ValueError(\"Can't read from file object %r\" % fileobj)\r\n     75 \r\n\r\nValueError: MutagenError(FileNotFoundError(2, 'No such file or directory')) not a valid file object\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/451", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/451/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/451/events", "html_url": "https://github.com/quodlibet/mutagen/issues/451", "id": 587800294, "node_id": "MDU6SXNzdWU1ODc4MDAyOTQ=", "number": 451, "title": "Audiobook player not showing chapters correctly when using mutagen to edit chapters", "user": {"login": "hugoromo", "id": 28797870, "node_id": "MDQ6VXNlcjI4Nzk3ODcw", "avatar_url": "https://avatars2.githubusercontent.com/u/28797870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugoromo", "html_url": "https://github.com/hugoromo", "followers_url": "https://api.github.com/users/hugoromo/followers", "following_url": "https://api.github.com/users/hugoromo/following{/other_user}", "gists_url": "https://api.github.com/users/hugoromo/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugoromo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugoromo/subscriptions", "organizations_url": "https://api.github.com/users/hugoromo/orgs", "repos_url": "https://api.github.com/users/hugoromo/repos", "events_url": "https://api.github.com/users/hugoromo/events{/privacy}", "received_events_url": "https://api.github.com/users/hugoromo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-25T15:54:06Z", "updated_at": "2020-05-03T13:50:55Z", "closed_at": "2020-05-03T13:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWhen I use mutagen from Python to edit chapters of a mp3 file, some mp3 players (Voice Audiobook player for Android specifically) doesn't show the chapters corretly, it only show some chapters and in a weird order, do anyone have a clue of why this is happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/444", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/444/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/444/events", "html_url": "https://github.com/quodlibet/mutagen/issues/444", "id": 577413000, "node_id": "MDU6SXNzdWU1Nzc0MTMwMDA=", "number": 444, "title": "mp4: mutagen(-inspect) fails with \"descriptor parsing read too much data\"", "user": {"login": "chbrown", "id": 360279, "node_id": "MDQ6VXNlcjM2MDI3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/360279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chbrown", "html_url": "https://github.com/chbrown", "followers_url": "https://api.github.com/users/chbrown/followers", "following_url": "https://api.github.com/users/chbrown/following{/other_user}", "gists_url": "https://api.github.com/users/chbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/chbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chbrown/subscriptions", "organizations_url": "https://api.github.com/users/chbrown/orgs", "repos_url": "https://api.github.com/users/chbrown/repos", "events_url": "https://api.github.com/users/chbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/chbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-07T22:53:31Z", "updated_at": "2020-05-03T18:12:05Z", "closed_at": "2020-05-03T18:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having trouble processing certain `m4a`-formatted audiobook files after passing them through `ffmpeg` to split chapters into separate files. Oddly, it works just fine for some books that have gone through that process, so it's not necessarily just `ffmpeg` misbehaving, and neither iTunes nor `exiftool` have any complaints about the files. But trying to open them in Python via `mutagen` or using `mutagen-inspect` at the command line both result in the error:\r\n> descriptor parsing read too much data\r\n\r\nwhich arises from https://github.com/quodlibet/mutagen/blob/release-1.44.0/mutagen/mp4/_as_entry.py#L243\r\n\r\nI've been using `mutagen` quite a bit but haven't dug into the source yet. I don't know a whole lot about how metadata is embedded in `mp3` or `m4a` files at the byte-level, i.e., besides the functionality that's exposed by `mutagen`'s API and `exiftool`'s commands. How would I go about debugging the issue and working on a patch?\r\n\r\nSorry I can't share the file here; if I could recreate the issue with some non-copyrighted audio, I'd be happy to, but I don't really know where to start in dissecting the file and detecting where, precisely, the error arises.\r\n\r\nI'm using the latest `mutagen` on PyPI (`1.44.0`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/439", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/439/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/439/events", "html_url": "https://github.com/quodlibet/mutagen/issues/439", "id": 563459641, "node_id": "MDU6SXNzdWU1NjM0NTk2NDE=", "number": 439, "title": "Writing tags to Core Audio Format / ALAC. \"Not an MP4 file\".", "user": {"login": "Sorrow446", "id": 47045733, "node_id": "MDQ6VXNlcjQ3MDQ1NzMz", "avatar_url": "https://avatars0.githubusercontent.com/u/47045733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sorrow446", "html_url": "https://github.com/Sorrow446", "followers_url": "https://api.github.com/users/Sorrow446/followers", "following_url": "https://api.github.com/users/Sorrow446/following{/other_user}", "gists_url": "https://api.github.com/users/Sorrow446/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sorrow446/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sorrow446/subscriptions", "organizations_url": "https://api.github.com/users/Sorrow446/orgs", "repos_url": "https://api.github.com/users/Sorrow446/repos", "events_url": "https://api.github.com/users/Sorrow446/events{/privacy}", "received_events_url": "https://api.github.com/users/Sorrow446/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-11T20:32:17Z", "updated_at": "2020-02-11T21:09:41Z", "closed_at": "2020-02-11T21:09:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to use muta to write tags to it?\r\n\r\n```\r\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8/\u60c5\u5831                                : Core Audio Format\r\n\u30d0\u30fc\u30b8\u30e7\u30f3                                    : Version 1\r\n\u30b3\u30fc\u30c7\u30c3\u30af ID/\u60c5\u5831                              : Apple Lossless Audio Codec\r\n```\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/438", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/438/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/438/events", "html_url": "https://github.com/quodlibet/mutagen/issues/438", "id": 557028639, "node_id": "MDU6SXNzdWU1NTcwMjg2Mzk=", "number": 438, "title": "[question] is there any version of mutagen where easymp3 expose TIT3 as subtitle?", "user": {"login": "elelay", "id": 222469, "node_id": "MDQ6VXNlcjIyMjQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/222469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elelay", "html_url": "https://github.com/elelay", "followers_url": "https://api.github.com/users/elelay/followers", "following_url": "https://api.github.com/users/elelay/following{/other_user}", "gists_url": "https://api.github.com/users/elelay/gists{/gist_id}", "starred_url": "https://api.github.com/users/elelay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elelay/subscriptions", "organizations_url": "https://api.github.com/users/elelay/orgs", "repos_url": "https://api.github.com/users/elelay/repos", "events_url": "https://api.github.com/users/elelay/events{/privacy}", "received_events_url": "https://api.github.com/users/elelay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-29T18:07:01Z", "updated_at": "2020-02-16T16:09:56Z", "closed_at": "2020-02-02T16:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "A user suggested an improvement to gPodder's tagging extension, which is based on mutagen (see https://github.com/gpodder/gpodder/issues/737).\r\nIt turns out it uses  `audio.tags['subtitle']` and `audio.tags['comments']` where `audio` is an easymp3 object. That doesn't work with latest mutagen.\r\n\r\nHe sent me his *local* version of mutagen, which indeed contain tag mappings `TIT3` to `subtitle` and `COMM` to `comments`. This is the only difference with commit b15f1f4ba080a12667a7aa1002e361ece84f98d9.\r\n\r\nTo your knowledge, was there a version of mutagen (maybe in a branch) where this was true?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/427", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/427/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/427/events", "html_url": "https://github.com/quodlibet/mutagen/issues/427", "id": 537985637, "node_id": "MDU6SXNzdWU1Mzc5ODU2Mzc=", "number": 427, "title": "Metadata from flac file cannot be un-pickled", "user": {"login": "point-source", "id": 47544779, "node_id": "MDQ6VXNlcjQ3NTQ0Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/47544779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/point-source", "html_url": "https://github.com/point-source", "followers_url": "https://api.github.com/users/point-source/followers", "following_url": "https://api.github.com/users/point-source/following{/other_user}", "gists_url": "https://api.github.com/users/point-source/gists{/gist_id}", "starred_url": "https://api.github.com/users/point-source/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/point-source/subscriptions", "organizations_url": "https://api.github.com/users/point-source/orgs", "repos_url": "https://api.github.com/users/point-source/repos", "events_url": "https://api.github.com/users/point-source/events{/privacy}", "received_events_url": "https://api.github.com/users/point-source/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-15T00:58:22Z", "updated_at": "2019-12-17T17:19:08Z", "closed_at": "2019-12-17T17:19:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Steps to reproduce:\r\n\r\n- Create metadata object: `metadata = mutagen.File('/path/to/flac.flac')`\r\n- Pickle the object: `p = pickle.dumps(metadata)`\r\n- Attempt to unpickle: `m = pickle.loads(p)`\r\n\r\nThis results in `TypeError: __new__() missing 2 required positional arguments: 'byte_offset' and 'num_samples'`\r\n\r\nI am using python 3.7.5 on mutagen 1.43.0\r\n\r\nIt appears to be related to the [SeekPoint](https://github.com/quodlibet/mutagen/blob/master/mutagen/flac.py#L265) class missing a  `__getnewargs__` method as defined here: https://docs.python.org/3.7/library/pickle.html#pickling-class-instances", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/425", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/425/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/425/events", "html_url": "https://github.com/quodlibet/mutagen/issues/425", "id": 537944515, "node_id": "MDU6SXNzdWU1Mzc5NDQ1MTU=", "number": 425, "title": " ZeroDivisionError when processing an aiff theora file", "user": {"login": "jvoisin", "id": 325724, "node_id": "MDQ6VXNlcjMyNTcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/325724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvoisin", "html_url": "https://github.com/jvoisin", "followers_url": "https://api.github.com/users/jvoisin/followers", "following_url": "https://api.github.com/users/jvoisin/following{/other_user}", "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions", "organizations_url": "https://api.github.com/users/jvoisin/orgs", "repos_url": "https://api.github.com/users/jvoisin/repos", "events_url": "https://api.github.com/users/jvoisin/events{/privacy}", "received_events_url": "https://api.github.com/users/jvoisin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T17:56:43Z", "updated_at": "2019-12-17T17:21:30Z", "closed_at": "2019-12-17T17:21:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the following python script with the [attached file](https://github.com/quodlibet/mutagen/files/3964138/crash-5d3563728417905d4b09865a54f9bc6dfcb64a87481cc50cbb45c5e9ba08400f.zip ), mutagen throws a `ZeroDivisionError` exception:\r\n\r\n```python\r\nimport mutagen, sys\r\n\r\nmutagen.File(sys.argv[1])\r\n```\r\n\r\n```python\r\n$ python3 mutest.py crash-5d3563728417905d4b09865a54f9bc6dfcb64a87481cc50cbb45c5e9ba08400f\r\nTraceback (most recent call last):\r\n  File \"mutest.py\", line 3, in <module>\r\n    mutagen.File(sys.argv[1])\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 148, in wrapper_func\r\n    return func(h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 300, in File\r\n    return Kind(fileobj, filename=filething.filename)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 140, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/aiff.py\", line 474, in load\r\n    self.info = AIFFInfo(fileobj)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/aiff.py\", line 369, in __init__\r\n    self.length = frame_count / float(self.sample_rate)\r\nZeroDivisionError: float division by zero\r\nzsh: exit 1     python3 mutest.py \r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/423", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/423/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/423/events", "html_url": "https://github.com/quodlibet/mutagen/issues/423", "id": 537941459, "node_id": "MDU6SXNzdWU1Mzc5NDE0NTk=", "number": 423, "title": "MemoryError when processing an asf file", "user": {"login": "jvoisin", "id": 325724, "node_id": "MDQ6VXNlcjMyNTcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/325724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvoisin", "html_url": "https://github.com/jvoisin", "followers_url": "https://api.github.com/users/jvoisin/followers", "following_url": "https://api.github.com/users/jvoisin/following{/other_user}", "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions", "organizations_url": "https://api.github.com/users/jvoisin/orgs", "repos_url": "https://api.github.com/users/jvoisin/repos", "events_url": "https://api.github.com/users/jvoisin/events{/privacy}", "received_events_url": "https://api.github.com/users/jvoisin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T17:30:10Z", "updated_at": "2019-12-27T13:38:21Z", "closed_at": "2019-12-27T13:38:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the following python script with the [attached file]( https://github.com/quodlibet/mutagen/files/3964108/crash-c0880bf7e8bca6afa11c5928fe9e1af52e9e38e24cc90a35b483456d4dd5c254.zip ), mutagen throws a `MemoryError` exception:\r\n\r\n```python\r\nimport mutagen, sys\r\n\r\nmutagen.File(sys.argv[1])\r\n```\r\n\r\n```python\r\n$ python3 mutest.py crash-c0880bf7e8bca6afa11c5928fe9e1af52e9e38e24cc90a35b483456d4dd5c254\r\nTraceback (most recent call last):\r\n  File \"mutest.py\", line 3, in <module>\r\n    mutagen.File(sys.argv[1])\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 148, in wrapper_func\r\n    return func(h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 300, in File\r\n    return Kind(fileobj, filename=filething.filename)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 140, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/asf/__init__.py\", line 243, in load\r\n    self._header = HeaderObject.parse_full(self, fileobj)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/asf/_objects.py\", line 110, in parse_full\r\n    data = fileobj.read(payload_size)\r\nMemoryError\r\nzsh: exit 1     python3 mutest.py \r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/420", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/420/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/420/events", "html_url": "https://github.com/quodlibet/mutagen/issues/420", "id": 537935283, "node_id": "MDU6SXNzdWU1Mzc5MzUyODM=", "number": 420, "title": "ZeroDivisionError when processing an ogg theora file", "user": {"login": "jvoisin", "id": 325724, "node_id": "MDQ6VXNlcjMyNTcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/325724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvoisin", "html_url": "https://github.com/jvoisin", "followers_url": "https://api.github.com/users/jvoisin/followers", "following_url": "https://api.github.com/users/jvoisin/following{/other_user}", "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions", "organizations_url": "https://api.github.com/users/jvoisin/orgs", "repos_url": "https://api.github.com/users/jvoisin/repos", "events_url": "https://api.github.com/users/jvoisin/events{/privacy}", "received_events_url": "https://api.github.com/users/jvoisin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T16:35:28Z", "updated_at": "2019-12-27T13:40:57Z", "closed_at": "2019-12-27T13:40:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the following python script with the [attached file]( https://github.com/quodlibet/mutagen/files/3964047/crash-f3c8d2ee397810e960b1426ef9e58721b2c7b87aa7cfe9d661e4116eb1a871db.zip ), mutagen throws a `ZeroDivisionError` exception:\r\n\r\n```python\r\nimport mutagen, sys\r\n\r\nmutagen.File(sys.argv[1])\r\n```\r\n\r\n```python\r\n$ python3 ./mutest.py crash-f3c8d2ee397810e960b1426ef9e58721b2c7b87aa7cfe9d661e4116eb1a871db \r\nTraceback (most recent call last):\r\n  File \"./mutest.py\", line 3, in <module>\r\n    mutagen.File(sys.argv[1])\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 148, in wrapper_func\r\n    return func(h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 300, in File\r\n    return Kind(fileobj, filename=filething.filename)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/_util.py\", line 140, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/ogg.py\", line 529, in load\r\n    self.info = self._Info(fileobj)\r\n  File \"/home/jvoisin/app/AFL/ven/lib/python3.7/site-packages/mutagen/oggtheora.py\", line 64, in __init__\r\n    self.fps = fps_num / float(fps_den)\r\nZeroDivisionError: float division by zero\r\nzsh: exit 1     python3 ./mutest.py \r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/416", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/416/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/416/events", "html_url": "https://github.com/quodlibet/mutagen/issues/416", "id": 537934295, "node_id": "MDU6SXNzdWU1Mzc5MzQyOTU=", "number": 416, "title": "Timeout while processing an mp4 file", "user": {"login": "jvoisin", "id": 325724, "node_id": "MDQ6VXNlcjMyNTcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/325724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvoisin", "html_url": "https://github.com/jvoisin", "followers_url": "https://api.github.com/users/jvoisin/followers", "following_url": "https://api.github.com/users/jvoisin/following{/other_user}", "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions", "organizations_url": "https://api.github.com/users/jvoisin/orgs", "repos_url": "https://api.github.com/users/jvoisin/repos", "events_url": "https://api.github.com/users/jvoisin/events{/privacy}", "received_events_url": "https://api.github.com/users/jvoisin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T16:26:01Z", "updated_at": "2019-12-17T17:17:07Z", "closed_at": "2019-12-17T17:17:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running the following python script with the [attached file]( https://github.com/quodlibet/mutagen/files/3964040/timeout-8d2bc9c3ce12ab6134316e830219207f297f17b5cb31087c28085cbdb4e2ec82.zip ), mutagen goes into an infinite loop:\r\n\r\n```python\r\nimport mutagen, sys\r\n\r\nmutagen.File(sys.argv[1])\r\n```\r\n\r\n```\r\n$ python3 ./mutest.py timeout-8d2bc9c3ce12ab6134316e830219207f297f17b5cb31087c28085cbdb4e2ec82\r\n\u2026\r\n```\r\n\r\nIt seems that the fix could be to check if `length` is superior to zero [here]( https://github.com/quodlibet/mutagen/blob/cb363c1cc24fd1f5f57dfe187730fabd305f5191/mutagen/mp4/__init__.py#L756)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/411", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/411/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/411/events", "html_url": "https://github.com/quodlibet/mutagen/issues/411", "id": 521434836, "node_id": "MDU6SXNzdWU1MjE0MzQ4MzY=", "number": 411, "title": "Small typo in mutagen/ogg.py", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-12T09:38:52Z", "updated_at": "2019-11-13T18:01:25Z", "closed_at": "2019-11-13T18:01:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should read occurred rather than occured in the renumber docstring.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/410", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/410/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/410/events", "html_url": "https://github.com/quodlibet/mutagen/issues/410", "id": 511229871, "node_id": "MDU6SXNzdWU1MTEyMjk4NzE=", "number": 410, "title": "[RFC] Drop Python 2 support", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-23T10:28:36Z", "updated_at": "2020-02-10T07:48:58Z", "closed_at": "2020-02-09T21:57:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I haven't put much thought into it yet, but we should have some plan for when to drop support.\r\n\r\nhttps://pypistats.org/packages/mutagen\r\n\r\nLooking at the weekend drop off looks like Python 2 is mostly used in company environments.\r\n\r\nAre there any major users of mutagen which haven't been ported yet?\r\n\r\n@phw any blockers you know of?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/402", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/402/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/402/events", "html_url": "https://github.com/quodlibet/mutagen/issues/402", "id": 507134260, "node_id": "MDU6SXNzdWU1MDcxMzQyNjA=", "number": 402, "title": "Inconsistent naming bits_per_sample and sample_size", "user": {"login": "phw", "id": 29852, "node_id": "MDQ6VXNlcjI5ODUy", "avatar_url": "https://avatars3.githubusercontent.com/u/29852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phw", "html_url": "https://github.com/phw", "followers_url": "https://api.github.com/users/phw/followers", "following_url": "https://api.github.com/users/phw/following{/other_user}", "gists_url": "https://api.github.com/users/phw/gists{/gist_id}", "starred_url": "https://api.github.com/users/phw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phw/subscriptions", "organizations_url": "https://api.github.com/users/phw/orgs", "repos_url": "https://api.github.com/users/phw/repos", "events_url": "https://api.github.com/users/phw/events{/privacy}", "received_events_url": "https://api.github.com/users/phw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-15T09:51:40Z", "updated_at": "2019-10-16T19:17:01Z", "closed_at": "2019-10-16T19:17:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be an inconsistency between `bits_per_sample` and `sample_size`, unless I misinterpret something. Some formats like FLAC, MP4, DSF use `bits_per_sample` in their info objects, while AIFF (or the proposed WAVE) uses `sample_size`. Is this a bug or intentional?\r\n\r\nIf not I propose to change this for AIFF, but keep the old attribute set for backward compatibility.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/401", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/401/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/401/events", "html_url": "https://github.com/quodlibet/mutagen/issues/401", "id": 506603881, "node_id": "MDU6SXNzdWU1MDY2MDM4ODE=", "number": 401, "title": "Support Opus", "user": {"login": "lud4ik", "id": 905024, "node_id": "MDQ6VXNlcjkwNTAyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/905024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lud4ik", "html_url": "https://github.com/lud4ik", "followers_url": "https://api.github.com/users/lud4ik/followers", "following_url": "https://api.github.com/users/lud4ik/following{/other_user}", "gists_url": "https://api.github.com/users/lud4ik/gists{/gist_id}", "starred_url": "https://api.github.com/users/lud4ik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lud4ik/subscriptions", "organizations_url": "https://api.github.com/users/lud4ik/orgs", "repos_url": "https://api.github.com/users/lud4ik/repos", "events_url": "https://api.github.com/users/lud4ik/events{/privacy}", "received_events_url": "https://api.github.com/users/lud4ik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-14T11:49:30Z", "updated_at": "2019-11-05T16:51:30Z", "closed_at": "2019-10-16T19:24:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In web default audio record settings are webm container with Opus codec\r\n```\r\naudio/webm\r\nCodec Name - opus\r\nCodec Long Name - Opus (Opus Interactive Audio Codec)\r\n```\r\nWe checked and it's not supported by this library to validate the header of file.\r\nOggOpus and Opus are not the same.\r\nIs it possible to add support for Opus?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/399", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/399/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/399/events", "html_url": "https://github.com/quodlibet/mutagen/issues/399", "id": 504451968, "node_id": "MDU6SXNzdWU1MDQ0NTE5Njg=", "number": 399, "title": "How to get mutagen 1.39 on Ubuntu 18.04.3 LTS?", "user": {"login": "keunes", "id": 11229646, "node_id": "MDQ6VXNlcjExMjI5NjQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/11229646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keunes", "html_url": "https://github.com/keunes", "followers_url": "https://api.github.com/users/keunes/followers", "following_url": "https://api.github.com/users/keunes/following{/other_user}", "gists_url": "https://api.github.com/users/keunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/keunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keunes/subscriptions", "organizations_url": "https://api.github.com/users/keunes/orgs", "repos_url": "https://api.github.com/users/keunes/repos", "events_url": "https://api.github.com/users/keunes/events{/privacy}", "received_events_url": "https://api.github.com/users/keunes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-09T06:49:37Z", "updated_at": "2019-10-24T20:45:59Z", "closed_at": "2019-10-16T20:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having an issue with saving changes to files stored on my samba home server, in Picard. [The ticket I created](https://tickets.metabrainz.org/browse/PICARD-1627) with that project was closed because the issue supposedly with Mutagen 1.39. However, I am running Ubuntu 18.04.3 LTS and I already have the 'latest version' installed:\r\n```\r\nsudo apt install --only-upgrade python3-mutagen\r\nReading package lists... Done\r\nBuilding dependency tree \r\nReading state information... Done\r\npython3-mutagen is already the newest version (1.38-1).\r\n0 to upgrade, 0 to newly install, 0 to remove and 0 not to upgrade.\r\n```\r\n\r\nIs there any way for me to get Mutagen 1.39 installed on my system? I didn't see a project ppa that I could install.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/395", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/395/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/395/events", "html_url": "https://github.com/quodlibet/mutagen/issues/395", "id": 487043718, "node_id": "MDU6SXNzdWU0ODcwNDM3MTg=", "number": 395, "title": "Import mp3 fail. No modules are not found!", "user": {"login": "Lakshmana219", "id": 23567781, "node_id": "MDQ6VXNlcjIzNTY3Nzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/23567781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lakshmana219", "html_url": "https://github.com/Lakshmana219", "followers_url": "https://api.github.com/users/Lakshmana219/followers", "following_url": "https://api.github.com/users/Lakshmana219/following{/other_user}", "gists_url": "https://api.github.com/users/Lakshmana219/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lakshmana219/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lakshmana219/subscriptions", "organizations_url": "https://api.github.com/users/Lakshmana219/orgs", "repos_url": "https://api.github.com/users/Lakshmana219/repos", "events_url": "https://api.github.com/users/Lakshmana219/events{/privacy}", "received_events_url": "https://api.github.com/users/Lakshmana219/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-29T15:52:43Z", "updated_at": "2020-05-03T13:52:10Z", "closed_at": "2020-05-03T13:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here the message is:-\r\n\r\n    from mutagen.mp3 import MP3\r\nImportError: No module named mp3\r\n\r\nI tried importing other modules like mp4, ID3... facing the same issue.\r\n\r\nI  installed through pip and even installed with setup file downloaded from the official git hub.\r\n\r\nAnd the environment is, Hadoop cluster-Linux.\r\n\r\nPlease help me soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/392", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/392/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/392/events", "html_url": "https://github.com/quodlibet/mutagen/issues/392", "id": 479573651, "node_id": "MDU6SXNzdWU0Nzk1NzM2NTE=", "number": 392, "title": "WAV corrupted when tagging with foobar2k", "user": {"login": "maybeRainH", "id": 52667537, "node_id": "MDQ6VXNlcjUyNjY3NTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/52667537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maybeRainH", "html_url": "https://github.com/maybeRainH", "followers_url": "https://api.github.com/users/maybeRainH/followers", "following_url": "https://api.github.com/users/maybeRainH/following{/other_user}", "gists_url": "https://api.github.com/users/maybeRainH/gists{/gist_id}", "starred_url": "https://api.github.com/users/maybeRainH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maybeRainH/subscriptions", "organizations_url": "https://api.github.com/users/maybeRainH/orgs", "repos_url": "https://api.github.com/users/maybeRainH/repos", "events_url": "https://api.github.com/users/maybeRainH/events{/privacy}", "received_events_url": "https://api.github.com/users/maybeRainH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-12T10:30:56Z", "updated_at": "2019-10-27T15:35:21Z", "closed_at": "2019-10-27T15:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "branch : feature/riff-wave-v2\r\nhere is the special case:\r\nstart with a wav empty file without LIST INFO chunk and ID3 chunk\r\n-->  add album and title info using mutagen(a ID3 chunk is added)\r\n-->  add artist info using foobar2k ( the artist info is added to ID3 chunk and foobar2k will also\r\n       create a LIST INFO chunk using all info in ID3)\r\n-->  delete ID3 using mutagen ( left a empty ID3 chunk with 1034 bytes, LIST INFO not deleted)\r\n-->  **tagging with foobar2000 again.**\r\n-->  a corrupted file(can be played by foobar2k but can't be tagged using foobar2k saying\r\n       a corrupted wav file)\r\nBUT still everything works fine using mutagen. It can recognize ID3 and can change the existed metadata.\r\n\r\nhere is the corrupted file: \u2193\r\n[test.zip](https://github.com/quodlibet/mutagen/files/3491880/test.zip)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/390", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/390/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/390/events", "html_url": "https://github.com/quodlibet/mutagen/issues/390", "id": 462818968, "node_id": "MDU6SXNzdWU0NjI4MTg5Njg=", "number": 390, "title": "M4A/MP4 support in mid3v2", "user": {"login": "arbitrary-dev", "id": 6984946, "node_id": "MDQ6VXNlcjY5ODQ5NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6984946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arbitrary-dev", "html_url": "https://github.com/arbitrary-dev", "followers_url": "https://api.github.com/users/arbitrary-dev/followers", "following_url": "https://api.github.com/users/arbitrary-dev/following{/other_user}", "gists_url": "https://api.github.com/users/arbitrary-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/arbitrary-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arbitrary-dev/subscriptions", "organizations_url": "https://api.github.com/users/arbitrary-dev/orgs", "repos_url": "https://api.github.com/users/arbitrary-dev/repos", "events_url": "https://api.github.com/users/arbitrary-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/arbitrary-dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T17:03:48Z", "updated_at": "2020-05-03T13:51:58Z", "closed_at": "2020-05-03T13:51:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add it!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/387", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/387/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/387/events", "html_url": "https://github.com/quodlibet/mutagen/issues/387", "id": 455385390, "node_id": "MDU6SXNzdWU0NTUzODUzOTA=", "number": 387, "title": "FLAC CORRUPTED AFTER ADDED IMAGES", "user": {"login": "An0nimia", "id": 41164945, "node_id": "MDQ6VXNlcjQxMTY0OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/41164945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/An0nimia", "html_url": "https://github.com/An0nimia", "followers_url": "https://api.github.com/users/An0nimia/followers", "following_url": "https://api.github.com/users/An0nimia/following{/other_user}", "gists_url": "https://api.github.com/users/An0nimia/gists{/gist_id}", "starred_url": "https://api.github.com/users/An0nimia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/An0nimia/subscriptions", "organizations_url": "https://api.github.com/users/An0nimia/orgs", "repos_url": "https://api.github.com/users/An0nimia/repos", "events_url": "https://api.github.com/users/An0nimia/events{/privacy}", "received_events_url": "https://api.github.com/users/An0nimia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-12T19:29:24Z", "updated_at": "2019-06-16T10:48:35Z", "closed_at": "2019-06-16T10:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to add a pic to a specify flac file, mutagen does his job, but if I try to do 'flac -t file-name.flac' it gives me this error: ERROR while decoding data\r\n                                  state = FLAC__STREAM_DECODER_ABORTED.\r\nFor some reasons adding images in flac corrupts the song here is the code\r\n```\r\ntag = FLAC(song)\r\ntag.delete() #also if a delete this line of code gives me error\r\nimages = Picture()\r\nimages.type = 3\r\nimages.data = data['image'] #bytes obv\r\ntag.add_picture(images)\r\ntag.save()\r\n```\r\nBut if I try to add images 143x41 resolution the flac is ok I tried to find out some connection, but without results.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/384", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/384/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/384/events", "html_url": "https://github.com/quodlibet/mutagen/issues/384", "id": 450561438, "node_id": "MDU6SXNzdWU0NTA1NjE0Mzg=", "number": 384, "title": "text frames end with a trailing null for id3v2 frames", "user": {"login": "rupaschomaker", "id": 1816608, "node_id": "MDQ6VXNlcjE4MTY2MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1816608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupaschomaker", "html_url": "https://github.com/rupaschomaker", "followers_url": "https://api.github.com/users/rupaschomaker/followers", "following_url": "https://api.github.com/users/rupaschomaker/following{/other_user}", "gists_url": "https://api.github.com/users/rupaschomaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupaschomaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupaschomaker/subscriptions", "organizations_url": "https://api.github.com/users/rupaschomaker/orgs", "repos_url": "https://api.github.com/users/rupaschomaker/repos", "events_url": "https://api.github.com/users/rupaschomaker/events{/privacy}", "received_events_url": "https://api.github.com/users/rupaschomaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-31T00:22:09Z", "updated_at": "2019-06-07T01:10:36Z", "closed_at": "2019-06-06T15:11:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I use mid3v2 to modify the id3 tags of an mp3 file, the text fields (artist and album are the ones I'm working with) end with a null value.  \r\n\r\nI've tried reading the files using python libs:\r\n- TinyTag\r\n- mp3_tagger\r\n\r\nLazyLibrarian uses the TinyTag lib to parse this info and it has issues with the trailing null.\r\n\r\nOf course, mutagen-inspect has no issues and does not show a trailing null...  Help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/383", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/383/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/383/events", "html_url": "https://github.com/quodlibet/mutagen/issues/383", "id": 450538382, "node_id": "MDU6SXNzdWU0NTA1MzgzODI=", "number": 383, "title": "easymp3 sets the wrong frame type for mp3?", "user": {"login": "rupaschomaker", "id": 1816608, "node_id": "MDQ6VXNlcjE4MTY2MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1816608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupaschomaker", "html_url": "https://github.com/rupaschomaker", "followers_url": "https://api.github.com/users/rupaschomaker/followers", "following_url": "https://api.github.com/users/rupaschomaker/following{/other_user}", "gists_url": "https://api.github.com/users/rupaschomaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupaschomaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupaschomaker/subscriptions", "organizations_url": "https://api.github.com/users/rupaschomaker/orgs", "repos_url": "https://api.github.com/users/rupaschomaker/repos", "events_url": "https://api.github.com/users/rupaschomaker/events{/privacy}", "received_events_url": "https://api.github.com/users/rupaschomaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-30T22:44:12Z", "updated_at": "2019-05-30T23:04:33Z", "closed_at": "2019-05-30T23:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "easymp3.py sets the frame type to 3 but the frame type seems to be set by default to UTF16 in _frames.py.  The other tools I have handy (TinyTag, and another, can't recall) would end up showing a null at the end of the text fields that were written (author, title).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/381", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/381/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/381/events", "html_url": "https://github.com/quodlibet/mutagen/issues/381", "id": 447528959, "node_id": "MDU6SXNzdWU0NDc1Mjg5NTk=", "number": 381, "title": "Question about iTunes atom support", "user": {"login": "sakinwus", "id": 13603082, "node_id": "MDQ6VXNlcjEzNjAzMDgy", "avatar_url": "https://avatars3.githubusercontent.com/u/13603082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sakinwus", "html_url": "https://github.com/sakinwus", "followers_url": "https://api.github.com/users/sakinwus/followers", "following_url": "https://api.github.com/users/sakinwus/following{/other_user}", "gists_url": "https://api.github.com/users/sakinwus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sakinwus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sakinwus/subscriptions", "organizations_url": "https://api.github.com/users/sakinwus/orgs", "repos_url": "https://api.github.com/users/sakinwus/repos", "events_url": "https://api.github.com/users/sakinwus/events{/privacy}", "received_events_url": "https://api.github.com/users/sakinwus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-23T08:56:10Z", "updated_at": "2019-05-25T18:35:47Z", "closed_at": "2019-05-25T18:35:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI was wondering if the MP4 class was capable of writing these iTunes related atoms \u2018plID\u2019, \u2018cnID\u2019, \u2018geID\u2019, \u2018atID\u2019, \u2018sfID\u2019, \u2018cmID\u2019, \u2018akID\u2019?\r\n\r\nAt the moment I get a \"mutagen.mp4.MP4MetadataValueError: value out of range:\" whenever I try to edit the 'sfID' for instance.\r\n\r\nThank You", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/380", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/380/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/380/events", "html_url": "https://github.com/quodlibet/mutagen/issues/380", "id": 445731593, "node_id": "MDU6SXNzdWU0NDU3MzE1OTM=", "number": 380, "title": "Wrong processing of multiple values stored in TYER in id3v2", "user": {"login": "Baz93", "id": 1265549, "node_id": "MDQ6VXNlcjEyNjU1NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1265549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Baz93", "html_url": "https://github.com/Baz93", "followers_url": "https://api.github.com/users/Baz93/followers", "following_url": "https://api.github.com/users/Baz93/following{/other_user}", "gists_url": "https://api.github.com/users/Baz93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Baz93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Baz93/subscriptions", "organizations_url": "https://api.github.com/users/Baz93/orgs", "repos_url": "https://api.github.com/users/Baz93/repos", "events_url": "https://api.github.com/users/Baz93/events{/privacy}", "received_events_url": "https://api.github.com/users/Baz93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-18T16:26:54Z", "updated_at": "2019-06-09T09:17:37Z", "closed_at": "2019-06-09T09:17:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is how to reproduce:\r\n\r\n```python\r\nfrom mutagen.id3 import ID3, TYER\r\n\r\nwith open('a.mp3', 'w'):\r\n    pass\r\ntags = ID3()\r\ntags['TYER'] = TYER(text=['2000', '2000', '2000'])\r\ntags.save('a.mp3', v2_version=3, v23_sep=None)\r\ntags = ID3('a.mp3')\r\nprint(tags)\r\n\r\n# outputs this:\r\n# {'TDRC': TDRC(encoding=<Encoding.LATIN1: 0>, text=[''])}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/379", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/379/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/379/events", "html_url": "https://github.com/quodlibet/mutagen/issues/379", "id": 435795053, "node_id": "MDU6SXNzdWU0MzU3OTUwNTM=", "number": 379, "title": "Tag values contain trailing null (in violaton of specification?) in some instances", "user": {"login": "cbj4074", "id": 1236883, "node_id": "MDQ6VXNlcjEyMzY4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbj4074", "html_url": "https://github.com/cbj4074", "followers_url": "https://api.github.com/users/cbj4074/followers", "following_url": "https://api.github.com/users/cbj4074/following{/other_user}", "gists_url": "https://api.github.com/users/cbj4074/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbj4074/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbj4074/subscriptions", "organizations_url": "https://api.github.com/users/cbj4074/orgs", "repos_url": "https://api.github.com/users/cbj4074/repos", "events_url": "https://api.github.com/users/cbj4074/events{/privacy}", "received_events_url": "https://api.github.com/users/cbj4074/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-22T16:45:00Z", "updated_at": "2019-04-25T23:00:07Z", "closed_at": "2019-04-25T22:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ mid3v2 --version\r\nmid3v2 1.3\r\nUses Mutagen 1.42.1\r\n```\r\n\r\nI'll preface this by saying that I'm not entirely sure that this is a \"bug\", but rather, it may result from a difference of opinion with regard to how the ID3v2 specification is to be interpreted.\r\n\r\nIn short, I'm wrestling with the Issue described in https://github.com/JamesHeinrich/getID3/issues/121#issuecomment-322059347 .\r\n\r\nThe gist of the problem is that when getID3 reads tags that `mid3v2` produces, there is a trailing null, which looks something like this (note the extra character after the period and before the closing double-quote, which while appearing as a space here, is actually a null):\r\n\r\n```\r\n  [\"comment\"]=>\r\n  array(1) {\r\n    [0]=>\r\n    string(21) \"All rights reserved. \"\r\n  }\r\n```\r\n\r\nThe getID3 author insists that the comment should not be null-terminated, as doing so is in violation of the specification, as described in http://id3.org/id3v2.3.0#Comments . The following note, in http://id3.org/Compliance%20Issues , seems to apply equally to `mid3v2`:\r\n\r\n>Extra nullchar in COMM frame: iTunes adds an extra nullchar to the end of the Comments frame.\r\n\r\nIsn't that what `mid3v2` is doing, too? Or am I misunderstanding the nature of the compliance violation?\r\n\r\nI'm not sure if it is the same or a related issue, but I've observed the same trailing null with the values in other frames (not only IDv3v2 -> Comments), such as `TIT2`, `TPE1`, etc.\r\n\r\nIn any case, has this issue been discussed before? If so, I'd appreciate a link to the conversation, as I have come up empty thus far when searching.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/377", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/377/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/377/events", "html_url": "https://github.com/quodlibet/mutagen/issues/377", "id": 420603839, "node_id": "MDU6SXNzdWU0MjA2MDM4Mzk=", "number": 377, "title": "flac: handle multiple VORBIS_COMMENT in files", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-13T16:40:51Z", "updated_at": "2019-03-17T10:58:28Z", "closed_at": "2019-03-17T10:58:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/beetbox/beets/issues/2701\r\n\r\nAs always libflac doesn't verify what it parses and allows broken files.\r\n\r\nWe could just ignore the second block and write it back as is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/374", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/374/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/374/events", "html_url": "https://github.com/quodlibet/mutagen/issues/374", "id": 411134028, "node_id": "MDU6SXNzdWU0MTExMzQwMjg=", "number": 374, "title": "How to let mutagen access audio file in read only?", "user": {"login": "evan0greenup", "id": 44539531, "node_id": "MDQ6VXNlcjQ0NTM5NTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/44539531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evan0greenup", "html_url": "https://github.com/evan0greenup", "followers_url": "https://api.github.com/users/evan0greenup/followers", "following_url": "https://api.github.com/users/evan0greenup/following{/other_user}", "gists_url": "https://api.github.com/users/evan0greenup/gists{/gist_id}", "starred_url": "https://api.github.com/users/evan0greenup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evan0greenup/subscriptions", "organizations_url": "https://api.github.com/users/evan0greenup/orgs", "repos_url": "https://api.github.com/users/evan0greenup/repos", "events_url": "https://api.github.com/users/evan0greenup/events{/privacy}", "received_events_url": "https://api.github.com/users/evan0greenup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-17T01:13:57Z", "updated_at": "2019-02-22T08:42:39Z", "closed_at": "2019-02-22T08:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an secure way to force mutagen access audio file without any modification?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/372", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/372/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/372/events", "html_url": "https://github.com/quodlibet/mutagen/issues/372", "id": 406608014, "node_id": "MDU6SXNzdWU0MDY2MDgwMTQ=", "number": 372, "title": "encoding error with alternate locale and 32-bit linux", "user": {"login": "bll123", "id": 1205089, "node_id": "MDQ6VXNlcjEyMDUwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1205089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bll123", "html_url": "https://github.com/bll123", "followers_url": "https://api.github.com/users/bll123/followers", "following_url": "https://api.github.com/users/bll123/following{/other_user}", "gists_url": "https://api.github.com/users/bll123/gists{/gist_id}", "starred_url": "https://api.github.com/users/bll123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bll123/subscriptions", "organizations_url": "https://api.github.com/users/bll123/orgs", "repos_url": "https://api.github.com/users/bll123/repos", "events_url": "https://api.github.com/users/bll123/events{/privacy}", "received_events_url": "https://api.github.com/users/bll123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-05T02:41:46Z", "updated_at": "2019-02-05T11:49:31Z", "closed_at": "2019-02-05T11:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "On 32-bit linux, the unicode is not parsed properly when using an alternate locale:\r\npython 2.7.12.\r\n\r\nI don't think I have a more recent 32-bit linux VM. \r\nI have python3 installed on the 32-bit linux, but I'm don't know how to get pip/mutagen to use it.\r\n\r\n```\r\nbll@ubuntu1604:~/bdj2/test.dir$ mid3v2 -e --TPE2 010.01-albart --TXXX=DANCERATING:Goed --TXXX=STATUS:Complete --TALB 010.01-alb --TIT2 unicode\u306f\u306f\u306f --TPE1 010.01-art '--TXXX=DANCE:Engelse wals' --TRCK 4 '/home/bll/bdj2/test.dir/music dir/unicode\u306f\u306f\u306f.mp3'\r\n\r\nbll@ubuntu1604:~/bdj2/test.dir$ LANG=nl_NL.UTF-8 mid3v2 -e --TPE2 010.01-albart --TXXX=DANCERATING:Goed --TXXX=STATUS:Complete --TALB 010.01-alb --TIT2 unicode \u306f\u306f\u306f --TPE1 010.01-art '--TXXX=DANCE:Engelse wals' --TRCK 4 '/home/bll/bdj2/test.dir/music dir/unicode\u306f\u306f\u306f.mp3'\r\nTIT2: 'ascii' codec can't decode byte 0xe3 in position 7: ordinal not in range(128)\r\n\r\nbll@ubuntu1604:~/bdj2/test.dir$ mid3v2 --version\r\nmid3v2 1.3\r\nUses Mutagen 1.42.0\r\n```\r\n\r\nOn 64-bit-linux:\r\npython 2.7.13\r\n\r\n```\r\nbll-tecra:bll$ LANG=nl_NL.UTF-8 mid3v2 -e --TPE2 010.01-albart --TXXX=DANCERATING:Goed --TXXX=STATUS:Complete --TALB 010.01-alb --TIT2 unicode\u306f\u306f\u306f --TPE1 010.01-art '--TXXX=DANCE:Engelse wals' --TRCK 4 '/home/bll/s/ballroomdj/test.dir/music dir/unicode\u306f\u306f\u306f.mp3'\r\nbll-tecra:bll$\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/370", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/370/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/370/events", "html_url": "https://github.com/quodlibet/mutagen/issues/370", "id": 398844825, "node_id": "MDU6SXNzdWUzOTg4NDQ4MjU=", "number": 370, "title": "Cannot access pictures from Ogg Theora file", "user": {"login": "EliotBerriot", "id": 1970915, "node_id": "MDQ6VXNlcjE5NzA5MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1970915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliotBerriot", "html_url": "https://github.com/EliotBerriot", "followers_url": "https://api.github.com/users/EliotBerriot/followers", "following_url": "https://api.github.com/users/EliotBerriot/following{/other_user}", "gists_url": "https://api.github.com/users/EliotBerriot/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliotBerriot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliotBerriot/subscriptions", "organizations_url": "https://api.github.com/users/EliotBerriot/orgs", "repos_url": "https://api.github.com/users/EliotBerriot/repos", "events_url": "https://api.github.com/users/EliotBerriot/events{/privacy}", "received_events_url": "https://api.github.com/users/EliotBerriot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-14T11:19:23Z", "updated_at": "2019-01-16T08:06:48Z", "closed_at": "2019-01-14T12:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got the following audio file (audio is truncated):     https://files.eliotberriot.com/f/ee393e4d45/?raw=1\r\n\r\nWhen trying to open it with `mutagen.File(thefile)`, mutagen detects it as an OggTheora file (I've used a debugger [here](https://github.com/quodlibet/mutagen/blob/master/mutagen/_file.py#L287-L292) to confirm that:\r\n\r\n```\r\nprint(scores)\r\n> [((2, 'OggTheora'), <class 'mutagen.oggtheora.OggTheora'>), ((1, 'OggVorbis'), <class 'mutagen.oggvorbis.OggVorbis'>), ((0, 'WavPack'), <class 'mutagen.wavpack.WavPack'>)]\r\n```\r\n\r\nHowever, accessing the embedded images, [as described in the documentation](https://mutagen.readthedocs.io/en/latest/user/vcomment.html#embedded-images) does not yield any result:\r\n\r\n```python\r\nimport mutagen\r\npath = 'with_cover.ogg'\r\ndata = mutagen.File(path)\r\nprint(data.get('metadata_block_picture'))\r\n> None\r\n```\r\n\r\nHowever, if I force the file to be parted as an OggVorbis file, I can access the image data successfully:\r\n\r\n```python \r\nimport mutagen.oggvorbis\r\npath = 'with_cover.ogg'\r\ndata = mutagen.oggvorbis.OggVorbis(path)\r\nprint(data.get('metadata_block_picture'))\r\n> ['AAAAAwAAAAppbWFnZS9qcGVnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5t/9j/4AAQSkZJRgABAQEBLAEsAAD/4\u2026\u2026\u2026\u2026\u2026']\r\n```\r\n\r\nSo I'm wondering: is the guessing wrong here? Or maybe embedded pictures are not supported for OggTheora files in mutagen?\r\n\r\nAnyway, I'll try to dig into that, but I wanted to open the issue anyway since people around here may have an idea ;)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/369", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/369/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/369/events", "html_url": "https://github.com/quodlibet/mutagen/issues/369", "id": 397182090, "node_id": "MDU6SXNzdWUzOTcxODIwOTA=", "number": 369, "title": "Does mutagen can cover 3gp to mp3 or extract duration of 3gp audio(recorded by android cellphone)", "user": {"login": "Bodemon", "id": 33129415, "node_id": "MDQ6VXNlcjMzMTI5NDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/33129415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bodemon", "html_url": "https://github.com/Bodemon", "followers_url": "https://api.github.com/users/Bodemon/followers", "following_url": "https://api.github.com/users/Bodemon/following{/other_user}", "gists_url": "https://api.github.com/users/Bodemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bodemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bodemon/subscriptions", "organizations_url": "https://api.github.com/users/Bodemon/orgs", "repos_url": "https://api.github.com/users/Bodemon/repos", "events_url": "https://api.github.com/users/Bodemon/events{/privacy}", "received_events_url": "https://api.github.com/users/Bodemon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-09T02:16:21Z", "updated_at": "2019-01-11T02:33:06Z", "closed_at": "2019-01-11T02:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/368", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/368/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/368/events", "html_url": "https://github.com/quodlibet/mutagen/issues/368", "id": 395163791, "node_id": "MDU6SXNzdWUzOTUxNjM3OTE=", "number": 368, "title": "Does it can extract the bytes data from a mp3 file using mutagen?", "user": {"login": "Bodemon", "id": 33129415, "node_id": "MDQ6VXNlcjMzMTI5NDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/33129415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bodemon", "html_url": "https://github.com/Bodemon", "followers_url": "https://api.github.com/users/Bodemon/followers", "following_url": "https://api.github.com/users/Bodemon/following{/other_user}", "gists_url": "https://api.github.com/users/Bodemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bodemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bodemon/subscriptions", "organizations_url": "https://api.github.com/users/Bodemon/orgs", "repos_url": "https://api.github.com/users/Bodemon/repos", "events_url": "https://api.github.com/users/Bodemon/events{/privacy}", "received_events_url": "https://api.github.com/users/Bodemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-02T07:03:23Z", "updated_at": "2019-01-02T08:09:36Z", "closed_at": "2019-01-02T08:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I use mutagen deal with the byte data form a mp3 file which received from front-end? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/367", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/367/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/367/events", "html_url": "https://github.com/quodlibet/mutagen/issues/367", "id": 394833945, "node_id": "MDU6SXNzdWUzOTQ4MzM5NDU=", "number": 367, "title": "DSF module appends spurious colons to APIC and PRIV tags", "user": {"login": "daverz", "id": 2717422, "node_id": "MDQ6VXNlcjI3MTc0MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2717422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daverz", "html_url": "https://github.com/daverz", "followers_url": "https://api.github.com/users/daverz/followers", "following_url": "https://api.github.com/users/daverz/following{/other_user}", "gists_url": "https://api.github.com/users/daverz/gists{/gist_id}", "starred_url": "https://api.github.com/users/daverz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daverz/subscriptions", "organizations_url": "https://api.github.com/users/daverz/orgs", "repos_url": "https://api.github.com/users/daverz/repos", "events_url": "https://api.github.com/users/daverz/events{/privacy}", "received_events_url": "https://api.github.com/users/daverz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-29T23:52:34Z", "updated_at": "2019-01-05T19:28:05Z", "closed_at": "2019-01-05T19:28:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example\r\n\r\n```\r\nIn [5]: from mutagen.dsf import DSF\r\n\r\nIn [6]: tags2 = DSF('09 - Promenade.dsf')\r\n\r\nIn [7]: tags2.keys()\r\nOut[7]: \r\n[u'APIC:',\r\n u'TXXX:Tool Name',\r\n 'TDRC',\r\n 'TIT2',\r\n 'TRCK',\r\n 'TPE1',\r\n 'TALB',\r\n u'TXXX:Tool Version',\r\n 'TSSE',\r\n 'TCON']\r\n\r\nIn [8]: mg.version_string\r\nOut[8]: '1.38'\r\n```\r\nThe only other thing I have to verify the tags aren't messed up is LMS server running Audio::Scan 0.95, which gives\r\n\r\n```\r\nAPIC: [ image/jpeg, 0, , 28040, 32293283 ]\r\n\r\nTALB: The Power Of The Orchestra\r\n\r\nTCON: Classical\r\n\r\nTDRC: 2009-12-05\r\n\r\nTIT2: Promenade\r\n\r\nTOOL NAME: Media Center\r\n\r\nTOOL VERSION: 19.0.67\r\n\r\nTPE1: Royal Philharmonic Orchestra - Ren\u00e9 Leibowitz Conducting\r\n\r\nTRCK: 9\r\n\r\nTSSE: KORG AudioGate ver.2.3.2 (Mac OS X10.8 Intel)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/365", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/365/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/365/events", "html_url": "https://github.com/quodlibet/mutagen/issues/365", "id": 382885216, "node_id": "MDU6SXNzdWUzODI4ODUyMTY=", "number": 365, "title": "Mutagen fails to extract the song name", "user": {"login": "Carmina16", "id": 16445796, "node_id": "MDQ6VXNlcjE2NDQ1Nzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/16445796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carmina16", "html_url": "https://github.com/Carmina16", "followers_url": "https://api.github.com/users/Carmina16/followers", "following_url": "https://api.github.com/users/Carmina16/following{/other_user}", "gists_url": "https://api.github.com/users/Carmina16/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carmina16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carmina16/subscriptions", "organizations_url": "https://api.github.com/users/Carmina16/orgs", "repos_url": "https://api.github.com/users/Carmina16/repos", "events_url": "https://api.github.com/users/Carmina16/events{/privacy}", "received_events_url": "https://api.github.com/users/Carmina16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-20T23:07:09Z", "updated_at": "2018-11-23T11:20:55Z", "closed_at": "2018-11-23T11:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mutagen fails to extract the song title from the attached file. Both FFmpeg and GStreamer work OK.\r\n\r\n[test2.zip](https://github.com/quodlibet/mutagen/files/2601913/test2.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/361", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/361/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/361/events", "html_url": "https://github.com/quodlibet/mutagen/issues/361", "id": 376913526, "node_id": "MDU6SXNzdWUzNzY5MTM1MjY=", "number": 361, "title": "Error when returning a \"None\" value in EasyID3", "user": {"login": "joostvandenoever", "id": 21013910, "node_id": "MDQ6VXNlcjIxMDEzOTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/21013910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joostvandenoever", "html_url": "https://github.com/joostvandenoever", "followers_url": "https://api.github.com/users/joostvandenoever/followers", "following_url": "https://api.github.com/users/joostvandenoever/following{/other_user}", "gists_url": "https://api.github.com/users/joostvandenoever/gists{/gist_id}", "starred_url": "https://api.github.com/users/joostvandenoever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joostvandenoever/subscriptions", "organizations_url": "https://api.github.com/users/joostvandenoever/orgs", "repos_url": "https://api.github.com/users/joostvandenoever/repos", "events_url": "https://api.github.com/users/joostvandenoever/events{/privacy}", "received_events_url": "https://api.github.com/users/joostvandenoever/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-02T18:04:28Z", "updated_at": "2018-11-03T13:32:11Z", "closed_at": "2018-11-03T13:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to get the code for album artist from MP3 files I encountered this error when no album artist is present:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/xxx/PythonProjects/yyy/cleanup.py\", line 7, in <module>\r\n    audio = get_tag(file)\r\n  File \"/home/xxx/PythonProjects/yyy/classes/mp3_tags.py\", line 8, in get_tag\r\n    albumartist = audio['albumartist'][0]\r\n  File \"/home/xxx/PythonProjects/venv/yyy/lib/python3.6/site-packages/mutagen/easyid3.py\", line 213, in __getitem__\r\n    return func(self.__id3, key)\r\n  File \"/home/xxx/PythonProjects/venv/yyy/lib/python3.6/site-packages/mutagen/easyid3.py\", line 121, in getter\r\n    return list(id3[frameid])\r\n  File \"/home/xxx/PythonProjects/venv/yyy/lib/python3.6/site-packages/mutagen/_util.py\", line 536, in __getitem__\r\n    return self.__dict[key]\r\nKeyError: 'TPE2'\r\n```\r\n\r\n\r\nCan someone point me to a solution?\r\nThe code works perfectly when an album artist is present.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/358", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/358/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/358/events", "html_url": "https://github.com/quodlibet/mutagen/issues/358", "id": 374746333, "node_id": "MDU6SXNzdWUzNzQ3NDYzMzM=", "number": 358, "title": "How to attach a picture as a video stream recognizable by ffmpeg?", "user": {"login": "halaei", "id": 7089140, "node_id": "MDQ6VXNlcjcwODkxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7089140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halaei", "html_url": "https://github.com/halaei", "followers_url": "https://api.github.com/users/halaei/followers", "following_url": "https://api.github.com/users/halaei/following{/other_user}", "gists_url": "https://api.github.com/users/halaei/gists{/gist_id}", "starred_url": "https://api.github.com/users/halaei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halaei/subscriptions", "organizations_url": "https://api.github.com/users/halaei/orgs", "repos_url": "https://api.github.com/users/halaei/repos", "events_url": "https://api.github.com/users/halaei/events{/privacy}", "received_events_url": "https://api.github.com/users/halaei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-28T12:01:30Z", "updated_at": "2018-10-28T12:43:34Z", "closed_at": "2018-10-28T12:43:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I used this package to set APIC frame for an mp3 file:\r\n```\r\n        with open(picture, 'rb') as file:\r\n            data = file.read()\r\n            frame = APIC(encoding=Encoding.LATIN1, mime=mimetypes.guess_type(picture),\r\n                         desc='', type=PictureType.COVER_FRONT, data=data)\r\n            mp3.add(frame)\r\n```\r\nEverything works just fine, but when I use `ffprobe -show_streams -print_format json file.mp3` command, I realized it does not identify any video stream. Generally, ffmpeg regards cover pictures as a video stream with 1 frame, but that doesn't work for the output of mutagen.\r\n\r\nI couldn't figure it out. Any idea what might be the reason and how to fix?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/355", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/355/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/355/events", "html_url": "https://github.com/quodlibet/mutagen/issues/355", "id": 369820500, "node_id": "MDU6SXNzdWUzNjk4MjA1MDA=", "number": 355, "title": "mid3v2 command line : colon in tag data", "user": {"login": "bll123", "id": 1205089, "node_id": "MDQ6VXNlcjEyMDUwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1205089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bll123", "html_url": "https://github.com/bll123", "followers_url": "https://api.github.com/users/bll123/followers", "following_url": "https://api.github.com/users/bll123/following{/other_user}", "gists_url": "https://api.github.com/users/bll123/gists{/gist_id}", "starred_url": "https://api.github.com/users/bll123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bll123/subscriptions", "organizations_url": "https://api.github.com/users/bll123/orgs", "repos_url": "https://api.github.com/users/bll123/repos", "events_url": "https://api.github.com/users/bll123/events{/privacy}", "received_events_url": "https://api.github.com/users/bll123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-13T16:59:08Z", "updated_at": "2018-10-13T21:07:22Z", "closed_at": "2018-10-13T21:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tag's : character is getting re-mapped and quotes are added.\r\nIs this what it is supposed to do?\r\nI think I recall the : character being somewhat special.\r\n\r\n```\r\nbll-tecra:bll$ mid3v2 --UFID 'http://example.com=abc-def' waltz.mp3\r\nbll-tecra:bll$ mutagen-inspect waltz.mp3\r\n-- waltz.mp3\r\n- MPEG 1 layer 3, 128000 bps (CBR, LAME 3.99.1+, -b 128), 44100 Hz, 2 chn, 20.85 seconds (audio/mp3)\r\nUFID=http='//example.com=abc-def'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/353", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/353/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/353/events", "html_url": "https://github.com/quodlibet/mutagen/issues/353", "id": 365148698, "node_id": "MDU6SXNzdWUzNjUxNDg2OTg=", "number": 353, "title": "WAV format - ModuleNotFoundError: No module named 'mutagen.wave'", "user": {"login": "dariushazimi", "id": 622048, "node_id": "MDQ6VXNlcjYyMjA0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/622048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dariushazimi", "html_url": "https://github.com/dariushazimi", "followers_url": "https://api.github.com/users/dariushazimi/followers", "following_url": "https://api.github.com/users/dariushazimi/following{/other_user}", "gists_url": "https://api.github.com/users/dariushazimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dariushazimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dariushazimi/subscriptions", "organizations_url": "https://api.github.com/users/dariushazimi/orgs", "repos_url": "https://api.github.com/users/dariushazimi/repos", "events_url": "https://api.github.com/users/dariushazimi/events{/privacy}", "received_events_url": "https://api.github.com/users/dariushazimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-29T16:58:02Z", "updated_at": "2018-09-30T14:06:23Z", "closed_at": "2018-09-30T14:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is what I am trying to do using the wav file. Flac and MP3 works fine but can't get the wav to work.\r\n\r\nHere is what I have.\r\n\r\n\r\n```\r\nimport mutagen\r\n\r\nfrom mutagen.wave import WAVE\r\n\r\naudio = WAVE(\"harvard.wav\")\r\nprint(\"Lenght: \", audio.info.length)\r\nprint(\"Bitrate: \", audio.info.bitrate)\r\n```\r\n\r\nHere is the output\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n<ipython-input-124-53514baee23f> in <module>()\r\n      1 import mutagen\r\n      2 \r\n----> 3 from mutagen.wave import WAVE\r\n      4 \r\n      5 \r\n\r\nModuleNotFoundError: No module named 'mutagen.wave'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/352", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/352/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/352/events", "html_url": "https://github.com/quodlibet/mutagen/issues/352", "id": 360085511, "node_id": "MDU6SXNzdWUzNjAwODU1MTE=", "number": 352, "title": "SPC File Format and Additional Tags (e.g. Genre)", "user": {"login": "Eoin-ONeill-Yokai", "id": 3040352, "node_id": "MDQ6VXNlcjMwNDAzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3040352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eoin-ONeill-Yokai", "html_url": "https://github.com/Eoin-ONeill-Yokai", "followers_url": "https://api.github.com/users/Eoin-ONeill-Yokai/followers", "following_url": "https://api.github.com/users/Eoin-ONeill-Yokai/following{/other_user}", "gists_url": "https://api.github.com/users/Eoin-ONeill-Yokai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eoin-ONeill-Yokai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eoin-ONeill-Yokai/subscriptions", "organizations_url": "https://api.github.com/users/Eoin-ONeill-Yokai/orgs", "repos_url": "https://api.github.com/users/Eoin-ONeill-Yokai/repos", "events_url": "https://api.github.com/users/Eoin-ONeill-Yokai/events{/privacy}", "received_events_url": "https://api.github.com/users/Eoin-ONeill-Yokai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-13T22:12:20Z", "updated_at": "2018-10-30T21:30:32Z", "closed_at": "2018-10-30T21:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Many players (like foobar2000) use Apetag in conjunction with SPC tags in order to store additional metadata for the file type. It would be nice if quodlibet / mutagen also used that logic for tag management for metadata that is not traditionally stored in the basic SPC tag format.\r\n\r\nI understand there are some purists out there who may not want to attach data that is not native to the file type (APE is controversial) but that could also be handled using configurations or options?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/351", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/351/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/351/events", "html_url": "https://github.com/quodlibet/mutagen/issues/351", "id": 358210735, "node_id": "MDU6SXNzdWUzNTgyMTA3MzU=", "number": 351, "title": "id3: use id3v1 values in case id3v2 exists but equivalent id3v2 frames are missing", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-07T21:03:26Z", "updated_at": "2018-10-30T08:51:58Z", "closed_at": "2018-10-30T08:51:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/quodlibet/quodlibet/issues/2947\r\n\r\nAssume we have a full id3v1 tag and an empty id3v2 tag we don't expose any tags.\r\nWe should try to fall back to id3v1 in case it makes sense.\r\n\r\nOpen questions:\r\n\r\nCan we make it the default or add a load() option?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/349", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/349/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/349/events", "html_url": "https://github.com/quodlibet/mutagen/issues/349", "id": 343343607, "node_id": "MDU6SXNzdWUzNDMzNDM2MDc=", "number": 349, "title": "MP4 stik & rtng bug", "user": {"login": "gotcha9999", "id": 12772659, "node_id": "MDQ6VXNlcjEyNzcyNjU5", "avatar_url": "https://avatars3.githubusercontent.com/u/12772659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotcha9999", "html_url": "https://github.com/gotcha9999", "followers_url": "https://api.github.com/users/gotcha9999/followers", "following_url": "https://api.github.com/users/gotcha9999/following{/other_user}", "gists_url": "https://api.github.com/users/gotcha9999/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotcha9999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotcha9999/subscriptions", "organizations_url": "https://api.github.com/users/gotcha9999/orgs", "repos_url": "https://api.github.com/users/gotcha9999/repos", "events_url": "https://api.github.com/users/gotcha9999/events{/privacy}", "received_events_url": "https://api.github.com/users/gotcha9999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-21T17:49:16Z", "updated_at": "2018-08-11T14:23:08Z", "closed_at": "2018-08-10T06:33:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Writing of stik and rtng values doesn't work correctly.\r\n\r\nExample:\r\n\r\nYou have a correct tagged MP4 audio file with stik = 1 (Normal) and rtng = 1 (Explicit) and the \r\noutput from AtomicParsley is\r\n    Atom \"stik\" contains: Normal\r\n    Atom \"rtng\" contains: Explicit Content\r\n\r\nAfter saving this file with mutagen you have\r\n    Atom \"stik\" contains: 1\r\n    Atom \"rtng\" contains: 1\r\n\r\nOK (from Mp3Tag):\r\n```\r\n00 00 00 19\t\t\tAtom Length: 25\r\n73 74 69 6B\t\t\tAtom Name: \"stik\"\r\n00 00 00 11\t\t\tAtom Length: 17\r\n64 61 74 61\t\t\tAtom Name: \"data\"\r\n00 00 00 15\t\t\tAtom Version & Flags\r\n00 00 00 00\t\t\t4 Bytes Null Space\r\n01\t\t\t\t1 -> Normal/Music\r\n```\r\n\r\nWrong length (using mutagen):\r\n```\r\n00 00 00 1A\t\t\tAtom Length: _26_\r\n73 74 69 6B\t\t\tAtom Name: \"stik\"\r\n00 00 00 12\t\t\tAtom Length: _18_\r\n64 61 74 61\t\t\tAtom Name: \"data\"\r\n00 00 00 15\t\t\tAtom Version & Flags\r\n00 00 00 00\t\t\t4 Bytes Null Space\r\n00 01\t\t\t\t<- wrong!\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/348", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/348/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/348/events", "html_url": "https://github.com/quodlibet/mutagen/issues/348", "id": 339250307, "node_id": "MDU6SXNzdWUzMzkyNTAzMDc=", "number": 348, "title": "malformed links when using the command line", "user": {"login": "ahmadnassri", "id": 183195, "node_id": "MDQ6VXNlcjE4MzE5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/183195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmadnassri", "html_url": "https://github.com/ahmadnassri", "followers_url": "https://api.github.com/users/ahmadnassri/followers", "following_url": "https://api.github.com/users/ahmadnassri/following{/other_user}", "gists_url": "https://api.github.com/users/ahmadnassri/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmadnassri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmadnassri/subscriptions", "organizations_url": "https://api.github.com/users/ahmadnassri/orgs", "repos_url": "https://api.github.com/users/ahmadnassri/repos", "events_url": "https://api.github.com/users/ahmadnassri/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmadnassri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-08T19:19:50Z", "updated_at": "2018-07-16T19:37:22Z", "closed_at": "2018-07-16T19:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "e.g. \r\n\r\n```shell\r\nLINK=\"https://hacker.bio/hackers/dan-shaw/\"\r\nmid3v2 -e \\\r\n  --WOAF \"$LINK\" \\\r\n  --WOAS \"$LINK\" \\\r\n  --WORS \"https://hacker.bio/\" \\\r\n  --WPUB \"https://techmasters.community/\" \\\r\n  --WXXX \"$LINK\" \\\r\naudio.mp3\r\n```\r\n\r\nresult:\r\n\r\n```\r\nWFED=[u'https://hacker.bio/feed.xml']\r\nWOAF=[u'https://hacker.bio/hackers/dan-shaw/']\r\nWOAS=[u'https://hacker.bio/hackers/dan-shaw/']\r\nWORS=[u'https://hacker.bio/']\r\nWPUB=[u'https://techmasters.community/']\r\nWXXX=[u'https://hacker.bio/hackers/dan-shaw/']\r\n```\r\n\r\nexpected result:\r\n\r\n```\r\nWFED=https://hacker.bio/feed.xml\r\nWOAF=https://hacker.bio/hackers/dan-shaw/\r\nWOAS=https://hacker.bio/hackers/dan-shaw/\r\nWORS=https://hacker.bio/\r\nWPUB=https://techmasters.community/\r\nWXXX=https://hacker.bio/hackers/dan-shaw/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/347", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/347/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/347/events", "html_url": "https://github.com/quodlibet/mutagen/issues/347", "id": 332751874, "node_id": "MDU6SXNzdWUzMzI3NTE4NzQ=", "number": 347, "title": "MAC: bits_per_sample not set for older files", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-15T12:16:27Z", "updated_at": "2018-06-15T12:23:10Z", "closed_at": "2018-06-15T12:23:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/quodlibet/quodlibet/issues/2882", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/344", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/344/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/344/events", "html_url": "https://github.com/quodlibet/mutagen/issues/344", "id": 308337593, "node_id": "MDU6SXNzdWUzMDgzMzc1OTM=", "number": 344, "title": "mid3v2 WXXX issues", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-25T10:13:45Z", "updated_at": "2018-03-26T17:23:31Z", "closed_at": "2018-03-26T17:23:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://bugs.launchpad.net/ubuntu/+source/mutagen/+bug/1758537", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/343", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/343/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/343/events", "html_url": "https://github.com/quodlibet/mutagen/issues/343", "id": 306288127, "node_id": "MDU6SXNzdWUzMDYyODgxMjc=", "number": 343, "title": "How can I separate the media data from the metadata?", "user": {"login": "danielquinn", "id": 218205, "node_id": "MDQ6VXNlcjIxODIwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/218205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielquinn", "html_url": "https://github.com/danielquinn", "followers_url": "https://api.github.com/users/danielquinn/followers", "following_url": "https://api.github.com/users/danielquinn/following{/other_user}", "gists_url": "https://api.github.com/users/danielquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielquinn/subscriptions", "organizations_url": "https://api.github.com/users/danielquinn/orgs", "repos_url": "https://api.github.com/users/danielquinn/repos", "events_url": "https://api.github.com/users/danielquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/danielquinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-18T22:03:30Z", "updated_at": "2018-03-19T11:37:27Z", "closed_at": "2018-03-19T11:10:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation is quite thorough regarding how to read and write metatadata, which is wonderful, but only half of what I'm trying to do.\r\n\r\nFor my project, I need to generate a cryptographic signature of the raw media file (sans metadata) and after a few hours tinkering with mutagen (and a few other options) I'm still not sure of how to do this.\r\n\r\nAs a means of further explanation, I would refer you to Pillow, which has a `.tobytes()` method on its `Image` class.  This method returns the raw image data and *not* the EXIF layer.  Surely this must be possible for other formats like MP3?  Poking around in the Mutagen codebase, I see the creation of headers and moving around of bytes, but I can't quite figure out how to do this for myself.\r\n\r\nIs something like this possible with Mutagen?  The following code is my best (failed) attempt:\r\n\r\n```python\r\nfrom io import BytesIO\r\nfrom mutagen.mp3 import MP3\r\n\r\ntmp = BytesIO()\r\noriginal = MP3(\"/path/to/test.mp3\")\r\noriginal.delete()\r\noriginal.save(tmp)\r\n\r\nsignature = generate_signature(tmp)\r\n```\r\n\r\n---\r\n\r\nAs an update, with the following code I was able to generate a new, playable copy of the file with cleared ID3 tags, but somehow *the new file is larger than the original*:\r\n\r\n```python\r\nfrom io import BytesIO\r\nfrom mutagen.mp3 import MP3\r\nfrom hashlib import md5\r\n\r\ntmp = BytesIO()\r\nwith open(\"tests/data/test.mp3\", \"rb\") as f:\r\n    tmp.write(f.read())\r\ntmp.seek(0)\r\nprint(md5(tmp.read()).hexdigest())\r\ntmp.seek(0)\r\nmp3 = MP3(tmp)\r\nmp3.clear()\r\nmp3.save(tmp)\r\ntmp.seek(0)\r\nprint(md5(tmp.read()).hexdigest())\r\ntmp.seek(0)\r\nwith open(\"tests/data/test-changed.mp3\", \"wb\") as f:\r\n    f.write(tmp.read())\r\n```\r\n\r\nObviously this isn't ideal, since:\r\n\r\n1. The new file is somehow larger (?)\r\n2. It creates a copy of the file in memory\r\n3. The new file doesn't appear to be the audio only, as there's still some ID3 header stuff in there.\r\n\r\nAny help you might be able to provide would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/341", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/341/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/341/events", "html_url": "https://github.com/quodlibet/mutagen/issues/341", "id": 297993431, "node_id": "MDU6SXNzdWUyOTc5OTM0MzE=", "number": 341, "title": "no such file or directory", "user": {"login": "madneal", "id": 12164075, "node_id": "MDQ6VXNlcjEyMTY0MDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/12164075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madneal", "html_url": "https://github.com/madneal", "followers_url": "https://api.github.com/users/madneal/followers", "following_url": "https://api.github.com/users/madneal/following{/other_user}", "gists_url": "https://api.github.com/users/madneal/gists{/gist_id}", "starred_url": "https://api.github.com/users/madneal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madneal/subscriptions", "organizations_url": "https://api.github.com/users/madneal/orgs", "repos_url": "https://api.github.com/users/madneal/repos", "events_url": "https://api.github.com/users/madneal/events{/privacy}", "received_events_url": "https://api.github.com/users/madneal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-17T09:57:02Z", "updated_at": "2018-02-17T11:19:10Z", "closed_at": "2018-02-17T11:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to obtain the length of a mp3 file.\r\n```\r\nfrom mutagen.mp3 import MP3\r\n\r\ndef get_voice_length():\r\n    duration = MP3('audio.mp3')\r\n```\r\nbut the initial of MP3 will create error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\python36\\lib\\site-packages\\mutagen\\_util.py\", line 235, in _openfile\r\n    fileobj = open(filename, \"rb+\" if writable else \"rb\")\r\nFileNotFoundError: [Errno 2] No such file or directory: 'audio.mp3'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:/Users/neal1/project/voicer/app.py\", line 83, in <module>\r\n    get_voice_length()\r\n  File \"C:/Users/neal1/project/voicer/app.py\", line 71, in get_voice_length\r\n    duration = MP3('audio.mp3')\r\n  File \"C:\\python36\\lib\\site-packages\\mutagen\\_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"C:\\python36\\lib\\site-packages\\mutagen\\_util.py\", line 139, in wrapper\r\n    writable, create) as h:\r\n  File \"C:\\python36\\lib\\contextlib.py\", line 81, in __enter__\r\n    return next(self.gen)\r\n  File \"C:\\python36\\lib\\site-packages\\mutagen\\_util.py\", line 256, in _openfile\r\n    raise MutagenError(e)\r\nmutagen.MutagenError: [Errno 2] No such file or directory: 'audio.mp3'\r\n```\r\n\r\nThe mp3 file does exists.  I have tried relative file path and absolute file path. Both don't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/340", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/340/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/340/events", "html_url": "https://github.com/quodlibet/mutagen/issues/340", "id": 295517457, "node_id": "MDU6SXNzdWUyOTU1MTc0NTc=", "number": 340, "title": "mutagen.mp4.MP4StreamInfoError: not a MP4 file", "user": {"login": "ayeteng", "id": 12135212, "node_id": "MDQ6VXNlcjEyMTM1MjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/12135212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayeteng", "html_url": "https://github.com/ayeteng", "followers_url": "https://api.github.com/users/ayeteng/followers", "following_url": "https://api.github.com/users/ayeteng/following{/other_user}", "gists_url": "https://api.github.com/users/ayeteng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayeteng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayeteng/subscriptions", "organizations_url": "https://api.github.com/users/ayeteng/orgs", "repos_url": "https://api.github.com/users/ayeteng/repos", "events_url": "https://api.github.com/users/ayeteng/events{/privacy}", "received_events_url": "https://api.github.com/users/ayeteng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-08T13:46:10Z", "updated_at": "2018-02-13T00:58:01Z", "closed_at": "2018-02-13T00:58:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI use the mutagen.mp4 to read the MP4 file but it shows up 'not a MP4 file' error.\r\n\r\n```\r\nSams-iMac:new sam$ python\r\nPython 2.7.10 (default, Jul 15 2017, 17:16:57)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from mutagen.mp4 import MP4\r\n>>> ff = MP4('MM-trading.mp4')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Python/2.7/site-packages/mutagen/_file.py\", line 49, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"/Library/Python/2.7/site-packages/mutagen/_util.py\", line 140, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"/Library/Python/2.7/site-packages/mutagen/mp4/__init__.py\", line 1060, in load\r\n    self.info.load(atoms, fileobj)\r\n  File \"/Library/Python/2.7/site-packages/mutagen/_util.py\", line 169, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Library/Python/2.7/site-packages/mutagen/mp4/__init__.py\", line 932, in load\r\n    raise MP4StreamInfoError(\"not a MP4 file\")\r\nmutagen.mp4.MP4StreamInfoError: not a MP4 file\r\n```\r\n\r\n\r\nMP4 file information:\r\nFile: /Users/sam/Movies/MM-trading.mp4\r\nSize: 150.4 MB\r\nFormat: MPEG-2 transport stream format\r\nPrograms count: 1\r\nStream count: 2\r\nDuration: 00:13:27\r\nBit rate: 1562 kb/s\r\n\r\nStream 0\r\nType: video\r\nCodec: h264\r\nCodec profile: Constrained Baseline\r\nFourCC: [27][0][0][0]\r\nDuration: 00:13:27\r\nWidth: 960\r\nHeight: 540\r\nSample aspect ratio: 1:1\r\nDisplay aspect ratio: 16:9\r\nPixel format: yuv420p\r\nFrame rate: 29.98 fps\r\n\r\nStream 1\r\nType: audio\r\nCodec: aac\r\nFourCC: [15][0][0][0]\r\nDuration: 00:13:27\r\nBit rate: 151 kb/s\r\nSample rate: 44100 Hz\r\nSample format: s16\r\nChannel: 2\r\nMeta info:\r\n    language: eng\r\n\r\nDoes mutagen support aac audio encoding as in mp4 file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/337", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/337/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/337/events", "html_url": "https://github.com/quodlibet/mutagen/issues/337", "id": 290206124, "node_id": "MDU6SXNzdWUyOTAyMDYxMjQ=", "number": 337, "title": "Support pathlib.Path objects for paths", "user": {"login": "nvllsvm", "id": 6550543, "node_id": "MDQ6VXNlcjY1NTA1NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6550543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvllsvm", "html_url": "https://github.com/nvllsvm", "followers_url": "https://api.github.com/users/nvllsvm/followers", "following_url": "https://api.github.com/users/nvllsvm/following{/other_user}", "gists_url": "https://api.github.com/users/nvllsvm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvllsvm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvllsvm/subscriptions", "organizations_url": "https://api.github.com/users/nvllsvm/orgs", "repos_url": "https://api.github.com/users/nvllsvm/repos", "events_url": "https://api.github.com/users/nvllsvm/events{/privacy}", "received_events_url": "https://api.github.com/users/nvllsvm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T16:57:22Z", "updated_at": "2018-01-21T10:21:57Z", "closed_at": "2018-01-21T10:21:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [pathlib](https://docs.python.org/3/library/pathlib.html) module was added to the standard library in Python 3.4. The expected behavior is to be able to path either a string or a `pathlib.Path` object when referencing a file or directory. For example, this behavior is demonstrated in `open`, `gzip.open`, and `os.walk`.\r\n\r\n**Example expected behavior in mutagen:**\r\n```\r\nimport pathlib\r\nfrom mutagen.id3 import ID3\r\n\r\npath = pathlib.Path('somefile.mp3')\r\naudio = ID3(path)\r\n```\r\n\r\n**Workaround:**\r\nCasting the ``pathlib.Path``object as as a string.\r\n```\r\nimport pathlib\r\nfrom mutagen.id3 import ID3\r\n\r\npath = pathlib.Path('somefile.mp3')\r\naudio = ID3(str(path))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/336", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/336/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/336/events", "html_url": "https://github.com/quodlibet/mutagen/issues/336", "id": 289707074, "node_id": "MDU6SXNzdWUyODk3MDcwNzQ=", "number": 336, "title": "Pycharm issue while importing APIC class", "user": {"login": "24Naman", "id": 19889360, "node_id": "MDQ6VXNlcjE5ODg5MzYw", "avatar_url": "https://avatars1.githubusercontent.com/u/19889360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/24Naman", "html_url": "https://github.com/24Naman", "followers_url": "https://api.github.com/users/24Naman/followers", "following_url": "https://api.github.com/users/24Naman/following{/other_user}", "gists_url": "https://api.github.com/users/24Naman/gists{/gist_id}", "starred_url": "https://api.github.com/users/24Naman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/24Naman/subscriptions", "organizations_url": "https://api.github.com/users/24Naman/orgs", "repos_url": "https://api.github.com/users/24Naman/repos", "events_url": "https://api.github.com/users/24Naman/events{/privacy}", "received_events_url": "https://api.github.com/users/24Naman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-18T17:11:27Z", "updated_at": "2019-10-08T18:43:01Z", "closed_at": "2018-01-20T11:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "-> from mutagen.id3 import ID3, APIC\r\n\r\nwhen APIC is imported from the package mutagen.id3, Pycharm issues an error \"Unresolved reference 'APIC'\" as it is not declared in the '&#x5f;&#x5f;all&#x5f;&#x5f;' variable.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/335", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/335/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/335/events", "html_url": "https://github.com/quodlibet/mutagen/issues/335", "id": 288949560, "node_id": "MDU6SXNzdWUyODg5NDk1NjA=", "number": 335, "title": "terminal application", "user": {"login": "paul-mesnilgrente", "id": 4416830, "node_id": "MDQ6VXNlcjQ0MTY4MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4416830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-mesnilgrente", "html_url": "https://github.com/paul-mesnilgrente", "followers_url": "https://api.github.com/users/paul-mesnilgrente/followers", "following_url": "https://api.github.com/users/paul-mesnilgrente/following{/other_user}", "gists_url": "https://api.github.com/users/paul-mesnilgrente/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-mesnilgrente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-mesnilgrente/subscriptions", "organizations_url": "https://api.github.com/users/paul-mesnilgrente/orgs", "repos_url": "https://api.github.com/users/paul-mesnilgrente/repos", "events_url": "https://api.github.com/users/paul-mesnilgrente/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-mesnilgrente/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-16T15:33:10Z", "updated_at": "2018-01-16T20:00:43Z", "closed_at": "2018-01-16T16:08:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nfirst thank you for your work, I began to use the command line program and I love the simplicity that it was to clean up music library.\r\n\r\nI have looked into your documentation and your README, afaik there is no terminal application which uses your python library? I am currently tempted to implement a terminal application using [ncurses](https://www.gnu.org/software/ncurses/) which would be [EasyTag](https://wiki.gnome.org/action/show/EasyTAG?action=show&redirect=Apps%2FEasyTAG) like.\r\n\r\nAll the best.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/334", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/334/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/334/events", "html_url": "https://github.com/quodlibet/mutagen/issues/334", "id": 285311228, "node_id": "MDU6SXNzdWUyODUzMTEyMjg=", "number": 334, "title": "can't add_tags to MP4?", "user": {"login": "elelay", "id": 222469, "node_id": "MDQ6VXNlcjIyMjQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/222469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elelay", "html_url": "https://github.com/elelay", "followers_url": "https://api.github.com/users/elelay/followers", "following_url": "https://api.github.com/users/elelay/following{/other_user}", "gists_url": "https://api.github.com/users/elelay/gists{/gist_id}", "starred_url": "https://api.github.com/users/elelay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elelay/subscriptions", "organizations_url": "https://api.github.com/users/elelay/orgs", "repos_url": "https://api.github.com/users/elelay/repos", "events_url": "https://api.github.com/users/elelay/events{/privacy}", "received_events_url": "https://api.github.com/users/elelay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-01T14:51:00Z", "updated_at": "2018-01-01T17:21:56Z", "closed_at": "2018-01-01T17:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to add tags to a downloaded MP4, I get an `AttributeError: 'MP4Tags' object has no attribute '_padding'`.\r\nThe code is [part of gPodder](https://github.com/gpodder/gpodder/blob/master/share/gpodder/extensions/tagging.py#L77) but here is a reproducible example:\r\n\r\n```\r\n>>> import mutagen\r\n>>> f=mutagen.File(\"white noise.mp4\", easy=True)\r\n>>> f\r\n{}\r\n>>> f.info.pprint()\r\n'MPEG-4 audio (AAC LC), 5.06 seconds, 96392 bps'\r\n>>> f.tags\r\n>>> f.add_tags()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.6/site-packages/mutagen/mp4/__init__.py\", line 1088, in add_tags\r\n    self.tags = self.MP4Tags()\r\n  File \"/usr/lib/python3.6/site-packages/mutagen/easymp4.py\", line 45, in __init__\r\n    self._padding = self.__mp4._padding\r\nAttributeError: 'MP4Tags' object has no attribute '_padding'\r\n>>> f.tags['album'] = 'Hello'\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'NoneType' object does not support item assignment\r\n```\r\nVideo is at croco.elelay.fr/dropbox/white%20noise.mp4 (http)\r\n\r\npython 3.6.3\r\nArchLinux\r\nmutagen 1.39", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/332", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/332/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/332/events", "html_url": "https://github.com/quodlibet/mutagen/issues/332", "id": 284332874, "node_id": "MDU6SXNzdWUyODQzMzI4NzQ=", "number": 332, "title": "windows 32-bit support?", "user": {"login": "bll123", "id": 1205089, "node_id": "MDQ6VXNlcjEyMDUwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1205089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bll123", "html_url": "https://github.com/bll123", "followers_url": "https://api.github.com/users/bll123/followers", "following_url": "https://api.github.com/users/bll123/following{/other_user}", "gists_url": "https://api.github.com/users/bll123/gists{/gist_id}", "starred_url": "https://api.github.com/users/bll123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bll123/subscriptions", "organizations_url": "https://api.github.com/users/bll123/orgs", "repos_url": "https://api.github.com/users/bll123/repos", "events_url": "https://api.github.com/users/bll123/events{/privacy}", "received_events_url": "https://api.github.com/users/bll123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-23T23:43:08Z", "updated_at": "2017-12-24T08:26:59Z", "closed_at": "2017-12-24T08:25:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "mutagen 1.39 on 32-bit windows XP.\r\nI don't know if you still want to bother supporting 32-bit windows.\r\nI haven't done any research on this API to see if there is some microsoft update I can install to support it.\r\n```\r\n\r\nC:\\Documents and Settings\\bll\\Desktop\\BallroomDJ\\test.dir>c:\\Python27\\python.exe\r\n C:\\Python27\\Scripts\\mutagen-inspect test-files\\waltz.mp3\r\nTraceback (most recent call last):\r\n  File \"C:\\Python27\\Scripts\\mutagen-inspect\", line 12, in <module>\r\n    from mutagen._tools.mutagen_inspect import entry_point\r\n  File \"c:\\Python27\\lib\\site-packages\\mutagen\\_tools\\mutagen_inspect.py\", line 11, in <module>\r\n    from mutagen._senf import print_, argv\r\n  File \"c:\\Python27\\lib\\site-packages\\mutagen\\_senf\\__init__.py\", line 29, in <module>\r\n    from ._fsnative import fsnative, path2fsn, fsn2text, fsn2bytes, \\\r\n  File \"c:\\Python27\\lib\\site-packages\\mutagen\\_senf\\_fsnative.py\", line 28, in <module>\r\n    from . import _winapi as winapi\r\n  File \"c:\\Python27\\lib\\site-packages\\mutagen\\_senf\\_winapi.py\", line 194, in <module>\r\n    GetFileInformationByHandleEx = kernel32.GetFileInformationByHandleEx\r\n  File \"c:\\Python27\\lib\\ctypes\\__init__.py\", line 378, in __getattr__\r\n    func = self.__getitem__(name)\r\n  File \"c:\\Python27\\lib\\ctypes\\__init__.py\", line 383, in __getitem__\r\n    func = self._FuncPtr((name_or_ordinal, self))\r\nAttributeError: function 'GetFileInformationByHandleEx' not found\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/331", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/331/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/331/events", "html_url": "https://github.com/quodlibet/mutagen/issues/331", "id": 279353280, "node_id": "MDU6SXNzdWUyNzkzNTMyODA=", "number": 331, "title": "valid_keys for EasyMP4", "user": {"login": "brokkr", "id": 11491477, "node_id": "MDQ6VXNlcjExNDkxNDc3", "avatar_url": "https://avatars3.githubusercontent.com/u/11491477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brokkr", "html_url": "https://github.com/brokkr", "followers_url": "https://api.github.com/users/brokkr/followers", "following_url": "https://api.github.com/users/brokkr/following{/other_user}", "gists_url": "https://api.github.com/users/brokkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/brokkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brokkr/subscriptions", "organizations_url": "https://api.github.com/users/brokkr/orgs", "repos_url": "https://api.github.com/users/brokkr/repos", "events_url": "https://api.github.com/users/brokkr/events{/privacy}", "received_events_url": "https://api.github.com/users/brokkr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T12:13:58Z", "updated_at": "2017-12-28T11:43:37Z", "closed_at": "2017-12-28T11:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "EasyId3 has a helpful `valid_keys` dictionary for reference. It would be nice to have the same for EasyMP4. AFAICT the only way to get valid keys for EasyMP4 at the moment is to a) assume that the keys are the same as EasyID3 or b) look up the [source code](https://github.com/quodlibet/mutagen/blob/master/mutagen/easymp4.py#L229).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/330", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/330/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/330/events", "html_url": "https://github.com/quodlibet/mutagen/issues/330", "id": 276492561, "node_id": "MDU6SXNzdWUyNzY0OTI1NjE=", "number": 330, "title": "Single quote in file name, directory/file not found?", "user": {"login": "SHxKM", "id": 6573474, "node_id": "MDQ6VXNlcjY1NzM0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6573474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHxKM", "html_url": "https://github.com/SHxKM", "followers_url": "https://api.github.com/users/SHxKM/followers", "following_url": "https://api.github.com/users/SHxKM/following{/other_user}", "gists_url": "https://api.github.com/users/SHxKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHxKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHxKM/subscriptions", "organizations_url": "https://api.github.com/users/SHxKM/orgs", "repos_url": "https://api.github.com/users/SHxKM/repos", "events_url": "https://api.github.com/users/SHxKM/events{/privacy}", "received_events_url": "https://api.github.com/users/SHxKM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-24T01:09:24Z", "updated_at": "2017-11-24T14:26:14Z", "closed_at": "2017-11-24T14:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nartist_name = \"This Artist\"\r\nsong_title = \"'This song with single quotes'\"\r\nalbum = \"Live\"\r\n\r\ntestFilePath = '~/Music/{} - {}.m4a'.format(artist_name, song_title) # Fails\r\n\r\nmetatag = MP4(testFilePath).tags\r\n# title\r\nmetatag['\\xa9nam'] = song_title\r\n# album\r\nmetatag['\\xa9alb'] = album\r\n# artist\r\nmetatag['\\xa9ART'] = artist_name\r\n\r\nmetatag.save(testFilePath)\r\n```\r\n\r\nThe error I'm getting is `mutagen.MutagenError: [Errno 2] No such file or directory:...`\r\n\r\nObviously I can't just choose to remove the single quotes since this input is coming from an external source  that might contain single quotes in one of the strings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/328", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/328/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/328/events", "html_url": "https://github.com/quodlibet/mutagen/issues/328", "id": 270367430, "node_id": "MDU6SXNzdWUyNzAzNjc0MzA=", "number": 328, "title": "Strange bitrates reported, e.g. 320141 instead of 320000", "user": {"login": "mdeff", "id": 6806065, "node_id": "MDQ6VXNlcjY4MDYwNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6806065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdeff", "html_url": "https://github.com/mdeff", "followers_url": "https://api.github.com/users/mdeff/followers", "following_url": "https://api.github.com/users/mdeff/following{/other_user}", "gists_url": "https://api.github.com/users/mdeff/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdeff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdeff/subscriptions", "organizations_url": "https://api.github.com/users/mdeff/orgs", "repos_url": "https://api.github.com/users/mdeff/repos", "events_url": "https://api.github.com/users/mdeff/events{/privacy}", "received_events_url": "https://api.github.com/users/mdeff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-11-01T16:29:10Z", "updated_at": "2017-11-05T19:33:42Z", "closed_at": "2017-11-04T11:20:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When extracting the bitrate from many mp3 files, I get strange values such as 128111, 192167, 256222, or 320141 instead of the standards 128000, 192000, 256000, and 320000.\r\n\r\nAs I can only see the standard values in [mutagen/mp3/__init__.py](https://github.com/quodlibet/mutagen/blob/master/mutagen/mp3/__init__.py), I infer these numbers have to come from the file itself. Though the bitrate is correctly reported by other tools. Take for example [this audio file](http://freemusicarchive.org/music/Tours/Enthusiast/Tours_-_Enthusiast). With mutagen I get:\r\n```\r\n>>> f = mutagen.File('Tours_-_01_-_Enthusiast.mp3')\r\n>>> f.info.bitrate, f.info.bitrate_mode\r\n(320141, <BitrateMode.CBR: 1>)\r\n```\r\nWith [eyeD3](https://eyed3.readthedocs.io):\r\n```\r\n>>> f = eyed3.load('Tours_-_01_-_Enthusiast.mp3')\r\n>>> f.info.bit_rate\r\n(False, 320)\r\n```\r\nExiftool gives:\r\n```\r\n>>> exiftool Tours_-_01_-_Enthusiast.mp3\r\nAudio Bitrate                   : 320 kbps\r\nEncoder                         : LAME3.98r\r\nLame Method                     : CBR\r\nLame Bitrate                    : 255 kbps\r\n```\r\nAny idea? (What does \"Lame Bitrate\" mean BTW?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/327", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/327/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/327/events", "html_url": "https://github.com/quodlibet/mutagen/issues/327", "id": 268241858, "node_id": "MDU6SXNzdWUyNjgyNDE4NTg=", "number": 327, "title": "ID3NoHeaderError prevents ID3 tags", "user": {"login": "richardcornish", "id": 76278, "node_id": "MDQ6VXNlcjc2Mjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/76278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardcornish", "html_url": "https://github.com/richardcornish", "followers_url": "https://api.github.com/users/richardcornish/followers", "following_url": "https://api.github.com/users/richardcornish/following{/other_user}", "gists_url": "https://api.github.com/users/richardcornish/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardcornish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardcornish/subscriptions", "organizations_url": "https://api.github.com/users/richardcornish/orgs", "repos_url": "https://api.github.com/users/richardcornish/repos", "events_url": "https://api.github.com/users/richardcornish/events{/privacy}", "received_events_url": "https://api.github.com/users/richardcornish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 730559018, "node_id": "MDU6TGFiZWw3MzA1NTkwMTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/docs", "name": "docs", "color": "531299", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-25T01:56:12Z", "updated_at": "2019-05-06T18:26:47Z", "closed_at": "2017-10-25T20:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This one has stumped me for a few weeks, and the documentation and Stack Overflow hasn't helped. It seems to be a common error, but no solution seems to exist.\r\n\r\nWhenever I load a file with the `ID3` class, I get an error.\r\n\r\n```\r\nfrom mutagen.id3 import ID3\r\nid3 = ID3('song.mp3')\r\nraise ID3NoHeaderError(\"%r doesn't start with an ID3 tag\" % fn)\r\nmutagen.id3._util.ID3NoHeaderError: 'song.mp3' doesn't start with an ID3 tag\r\n```\r\n\r\nI don't understand the `ID3NoHeaderError` exception. There's no mention of it in the docs. I can load a song with the `File` class, but then it's not ready for ID3 tagging. There are instances where I won't know the media type beforehand, so it would be convenient if there was `try`/`except` branching to distinguish, but I need to get it working first. Sorry if this is obvious to others.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/324", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/324/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/324/events", "html_url": "https://github.com/quodlibet/mutagen/issues/324", "id": 260015167, "node_id": "MDU6SXNzdWUyNjAwMTUxNjc=", "number": 324, "title": "asf: tags can contain ASFUnicodeAttribute(None)", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-23T15:25:34Z", "updated_at": "2017-10-12T16:06:32Z", "closed_at": "2017-10-12T16:06:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/quodlibet/quodlibet/issues/2571", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/323", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/323/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/323/events", "html_url": "https://github.com/quodlibet/mutagen/issues/323", "id": 253982490, "node_id": "MDU6SXNzdWUyNTM5ODI0OTA=", "number": 323, "title": "MP4 - tags not recognized", "user": {"login": "gr4nt3d", "id": 31475900, "node_id": "MDQ6VXNlcjMxNDc1OTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/31475900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gr4nt3d", "html_url": "https://github.com/gr4nt3d", "followers_url": "https://api.github.com/users/gr4nt3d/followers", "following_url": "https://api.github.com/users/gr4nt3d/following{/other_user}", "gists_url": "https://api.github.com/users/gr4nt3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/gr4nt3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gr4nt3d/subscriptions", "organizations_url": "https://api.github.com/users/gr4nt3d/orgs", "repos_url": "https://api.github.com/users/gr4nt3d/repos", "events_url": "https://api.github.com/users/gr4nt3d/events{/privacy}", "received_events_url": "https://api.github.com/users/gr4nt3d/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-30T12:33:45Z", "updated_at": "2017-09-04T14:08:00Z", "closed_at": "2017-09-04T13:47:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nthere seems to be something missing with MP4 tags. As described [here](https://stackoverflow.com/questions/45763069/mutagen-does-not-recognize-mp4-itunes-voice-memo-tags) no tags are found in synchronized Apple voice-memo files. Note that these files _do have title_-information, that is being displayed in iTunes. The steps taken:\r\n\r\n    import mutagen.mp4 as m\r\n    f = m.MP4(\"file.m4a\")\r\n    print(f.tags) # see below\r\n    print(f.MP4Tags()) # {}\r\n    # f['\\xa9nam'] = \"test\" # works\r\n    print(f['\\xa9nam']) # only works if edited by previous line or in iTunes\r\n\r\nyields\r\n\r\n    {'----:com.apple.iTunes:iTunSMPB': [MP4FreeForm(b' 00000000 00000840 000003E0 0000000007823BE0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000', <AtomDataType.UTF8: 1>)], '\u00a9too': ['com.apple.VoiceMemos (iOS 10.2)']}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/316", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/316/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/316/events", "html_url": "https://github.com/quodlibet/mutagen/issues/316", "id": 246442997, "node_id": "MDU6SXNzdWUyNDY0NDI5OTc=", "number": 316, "title": "What is the proper tag for storing an ISBN for audiobooks?", "user": {"login": "rkhwaja", "id": 511154, "node_id": "MDQ6VXNlcjUxMTE1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/511154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkhwaja", "html_url": "https://github.com/rkhwaja", "followers_url": "https://api.github.com/users/rkhwaja/followers", "following_url": "https://api.github.com/users/rkhwaja/following{/other_user}", "gists_url": "https://api.github.com/users/rkhwaja/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkhwaja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkhwaja/subscriptions", "organizations_url": "https://api.github.com/users/rkhwaja/orgs", "repos_url": "https://api.github.com/users/rkhwaja/repos", "events_url": "https://api.github.com/users/rkhwaja/events{/privacy}", "received_events_url": "https://api.github.com/users/rkhwaja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-28T19:49:27Z", "updated_at": "2017-07-30T15:14:33Z", "closed_at": "2017-07-30T15:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/315", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/315/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/315/events", "html_url": "https://github.com/quodlibet/mutagen/issues/315", "id": 244908378, "node_id": "MDU6SXNzdWUyNDQ5MDgzNzg=", "number": 315, "title": "Provide option to insert LastFM sync'd playcounts into FMPS_playcount tag", "user": {"login": "pwd-github", "id": 203217, "node_id": "MDQ6VXNlcjIwMzIxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/203217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwd-github", "html_url": "https://github.com/pwd-github", "followers_url": "https://api.github.com/users/pwd-github/followers", "following_url": "https://api.github.com/users/pwd-github/following{/other_user}", "gists_url": "https://api.github.com/users/pwd-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwd-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwd-github/subscriptions", "organizations_url": "https://api.github.com/users/pwd-github/orgs", "repos_url": "https://api.github.com/users/pwd-github/repos", "events_url": "https://api.github.com/users/pwd-github/events{/privacy}", "received_events_url": "https://api.github.com/users/pwd-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-23T12:51:24Z", "updated_at": "2017-07-23T18:40:07Z", "closed_at": "2017-07-23T18:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if you use Ex Falso and attempt to sync playcounts, they aren't read by alternative programs correctly like Clementine (Linux, Windows, Mac) or Shuttle (Android).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/314", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/314/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/314/events", "html_url": "https://github.com/quodlibet/mutagen/issues/314", "id": 243179998, "node_id": "MDU6SXNzdWUyNDMxNzk5OTg=", "number": 314, "title": "Move Gio file wrapper into its own library", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-15T14:59:17Z", "updated_at": "2017-08-05T09:35:37Z", "closed_at": "2017-08-05T09:35:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice if there was a library containing the code in https://mutagen.readthedocs.io/en/latest/user/filelike.html with tests etc.\r\n\r\nMaybe something subclassing io.IOBase", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/313", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/313/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/313/events", "html_url": "https://github.com/quodlibet/mutagen/issues/313", "id": 243145128, "node_id": "MDU6SXNzdWUyNDMxNDUxMjg=", "number": 313, "title": "Unable to recognize file-like objects", "user": {"login": "tjiang11", "id": 11807091, "node_id": "MDQ6VXNlcjExODA3MDkx", "avatar_url": "https://avatars2.githubusercontent.com/u/11807091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjiang11", "html_url": "https://github.com/tjiang11", "followers_url": "https://api.github.com/users/tjiang11/followers", "following_url": "https://api.github.com/users/tjiang11/following{/other_user}", "gists_url": "https://api.github.com/users/tjiang11/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjiang11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjiang11/subscriptions", "organizations_url": "https://api.github.com/users/tjiang11/orgs", "repos_url": "https://api.github.com/users/tjiang11/repos", "events_url": "https://api.github.com/users/tjiang11/events{/privacy}", "received_events_url": "https://api.github.com/users/tjiang11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-15T01:38:02Z", "updated_at": "2017-07-15T14:53:52Z", "closed_at": "2017-07-15T04:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use mutagen to validate that audio files are of a given audio format. \r\n\r\nMy problem is that I'm unable to get it to recognize anything when passing the file-like object itself to mutagen. However, I am able to get it to recognize the audio file when the file is stored locally and I pass in the filename. But no matter what I do, passing in a StringIO object always returns NoneType.\r\n\r\n```\r\nimport mutagen\r\nfrom StringIO import StringIO\r\n\r\nfilename = \"test-audio-a.mp3\"\r\n\r\nf = open(filename)\r\nmbuffer = StringIO()\r\nmbuffer.write(f.read())\r\n\r\naudio = mutagen.File(mbuffer)\r\nprint audio.pprint()\r\n\r\n```\r\nResults in `AttributeError: 'NoneType' object has no attribute 'pprint'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/312", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/312/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/312/events", "html_url": "https://github.com/quodlibet/mutagen/issues/312", "id": 239478481, "node_id": "MDU6SXNzdWUyMzk0Nzg0ODE=", "number": 312, "title": "bug (typo) in EasyID3.size definition", "user": {"login": "Baz93", "id": 1265549, "node_id": "MDQ6VXNlcjEyNjU1NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1265549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Baz93", "html_url": "https://github.com/Baz93", "followers_url": "https://api.github.com/users/Baz93/followers", "following_url": "https://api.github.com/users/Baz93/following{/other_user}", "gists_url": "https://api.github.com/users/Baz93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Baz93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Baz93/subscriptions", "organizations_url": "https://api.github.com/users/Baz93/orgs", "repos_url": "https://api.github.com/users/Baz93/repos", "events_url": "https://api.github.com/users/Baz93/events{/privacy}", "received_events_url": "https://api.github.com/users/Baz93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-29T13:27:36Z", "updated_at": "2017-07-01T09:56:15Z", "closed_at": "2017-07-01T09:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the 207-th line of easyid3.py it should be\r\n`lambda s, fn: setattr(s.__id3, 'size', fn)`\r\ninstead of\r\n`lambda s, fn: setattr(s.__id3, 'size', s)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/310", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/310/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/310/events", "html_url": "https://github.com/quodlibet/mutagen/issues/310", "id": 236245379, "node_id": "MDU6SXNzdWUyMzYyNDUzNzk=", "number": 310, "title": "Embed multiple artists", "user": {"login": "ritiek", "id": 20314742, "node_id": "MDQ6VXNlcjIwMzE0NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/20314742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritiek", "html_url": "https://github.com/ritiek", "followers_url": "https://api.github.com/users/ritiek/followers", "following_url": "https://api.github.com/users/ritiek/following{/other_user}", "gists_url": "https://api.github.com/users/ritiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritiek/subscriptions", "organizations_url": "https://api.github.com/users/ritiek/orgs", "repos_url": "https://api.github.com/users/ritiek/repos", "events_url": "https://api.github.com/users/ritiek/events{/privacy}", "received_events_url": "https://api.github.com/users/ritiek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T16:23:09Z", "updated_at": "2017-06-15T21:17:14Z", "closed_at": "2017-06-15T21:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to embed multiple artists in an `MP3` (or even `MP4`)? If so, can somebody provide me an example? Does it also work with `EasyID3`?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/308", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/308/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/308/events", "html_url": "https://github.com/quodlibet/mutagen/issues/308", "id": 232678373, "node_id": "MDU6SXNzdWUyMzI2NzgzNzM=", "number": 308, "title": "OggOpus returned a negative audio length", "user": {"login": "nasief", "id": 5514230, "node_id": "MDQ6VXNlcjU1MTQyMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5514230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasief", "html_url": "https://github.com/nasief", "followers_url": "https://api.github.com/users/nasief/followers", "following_url": "https://api.github.com/users/nasief/following{/other_user}", "gists_url": "https://api.github.com/users/nasief/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasief/subscriptions", "organizations_url": "https://api.github.com/users/nasief/orgs", "repos_url": "https://api.github.com/users/nasief/repos", "events_url": "https://api.github.com/users/nasief/events{/privacy}", "received_events_url": "https://api.github.com/users/nasief/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-05-31T19:59:17Z", "updated_at": "2017-06-01T16:09:36Z", "closed_at": "2017-06-01T12:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to get the `length` of an `.ogg` audio file, the attribute returned a negative value!\r\nThe audio is 58 seconds long and it is playing normally without any issue.\r\nWhat could be a reason for such a behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/307", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/307/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/307/events", "html_url": "https://github.com/quodlibet/mutagen/issues/307", "id": 232474225, "node_id": "MDU6SXNzdWUyMzI0NzQyMjU=", "number": 307, "title": "id3: adjust frame encoding when merging frames", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-31T07:11:58Z", "updated_at": "2017-05-31T09:22:35Z", "closed_at": "2017-05-31T09:22:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When we merge text frames we don't take into account that the resulting encoding might not be valid for all the merged text values. latin1+utf-x should result in utf-x.\r\n\r\nOtherwise there is an error on saving things again (and QL currently fails at loading as well..)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/306", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/306/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/306/events", "html_url": "https://github.com/quodlibet/mutagen/issues/306", "id": 230169150, "node_id": "MDU6SXNzdWUyMzAxNjkxNTA=", "number": 306, "title": "USLT option listed but not supported.", "user": {"login": "hboetes", "id": 2285225, "node_id": "MDQ6VXNlcjIyODUyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2285225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hboetes", "html_url": "https://github.com/hboetes", "followers_url": "https://api.github.com/users/hboetes/followers", "following_url": "https://api.github.com/users/hboetes/following{/other_user}", "gists_url": "https://api.github.com/users/hboetes/gists{/gist_id}", "starred_url": "https://api.github.com/users/hboetes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hboetes/subscriptions", "organizations_url": "https://api.github.com/users/hboetes/orgs", "repos_url": "https://api.github.com/users/hboetes/repos", "events_url": "https://api.github.com/users/hboetes/events{/privacy}", "received_events_url": "https://api.github.com/users/hboetes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-20T17:57:43Z", "updated_at": "2017-06-14T16:56:09Z", "closed_at": "2017-06-14T16:45:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I tried adding lyrics to an mp3 file, but it wasn\u2019t supported.\r\n```% mid3v2 --USLT=\u2019foo bar\u2019 test.mp3\r\nUsage: mid3v2 [OPTION] [FILE]\u2026\r\n\r\nmid3v2: error: no such option: --USLT\r\n% mid3v2 -f|grep USLT             \r\n    --USLT    Unsynchronised lyrics/text transcription.\r\n```\r\nCould you please add support for it? Also please consider adding said tag from a file, since lyrics are rather clumsy to add from the command line.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/305", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/305/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/305/events", "html_url": "https://github.com/quodlibet/mutagen/issues/305", "id": 226426345, "node_id": "MDU6SXNzdWUyMjY0MjYzNDU=", "number": 305, "title": "Inconsistent command line option syntax", "user": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-04T22:28:24Z", "updated_at": "2017-05-12T08:09:06Z", "closed_at": "2017-05-12T08:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "All of the long-form options such as `--delete-frames` and `--picture` take an equals sign between its option and argument (e.g. `--delete-frames=TORY`). However, the options used to set frames don't, and they will silently include the equals sign in the tag itself. For example, `mid3v2 --TORY=1993 foo.mp3` will set the `TORY` frame to `=1993`. One can easily overlook this when using `mid3v2 -l foo.mp3`, too.\r\n\r\nI can think of two possible solutions:\r\n\r\n1. Strip the equals sign if the argument isn't quoted. This is a slight change in behavior, but there are extremely few cases in which someone would start a field value with an equals sign.\r\n2. Print a warning to stderr when an argument matches this pattern.\r\n\r\nThanks for your time,\r\nMike", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/304", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/304/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/304/events", "html_url": "https://github.com/quodlibet/mutagen/issues/304", "id": 226371689, "node_id": "MDU6SXNzdWUyMjYzNzE2ODk=", "number": 304, "title": "iTunes 'GRP1' frame support", "user": {"login": "davconvent", "id": 540324, "node_id": "MDQ6VXNlcjU0MDMyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/540324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davconvent", "html_url": "https://github.com/davconvent", "followers_url": "https://api.github.com/users/davconvent/followers", "following_url": "https://api.github.com/users/davconvent/following{/other_user}", "gists_url": "https://api.github.com/users/davconvent/gists{/gist_id}", "starred_url": "https://api.github.com/users/davconvent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davconvent/subscriptions", "organizations_url": "https://api.github.com/users/davconvent/orgs", "repos_url": "https://api.github.com/users/davconvent/repos", "events_url": "https://api.github.com/users/davconvent/events{/privacy}", "received_events_url": "https://api.github.com/users/davconvent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-04T18:38:50Z", "updated_at": "2017-06-01T16:09:25Z", "closed_at": "2017-05-04T20:55:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "With iTunes' release of version 12, iTunes is now writing \"Grouping\" values from its library out to a new ID3 frame \"GRP1\". Support of this new \"iTunes Grouping\" frame in mutagen would be great addition. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/302", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/302/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/302/events", "html_url": "https://github.com/quodlibet/mutagen/issues/302", "id": 221743535, "node_id": "MDU6SXNzdWUyMjE3NDM1MzU=", "number": 302, "title": "Mutagen writes, but won't read, multiple identical front cover images in MP3 files", "user": {"login": "marktaff", "id": 8887075, "node_id": "MDQ6VXNlcjg4ODcwNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8887075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marktaff", "html_url": "https://github.com/marktaff", "followers_url": "https://api.github.com/users/marktaff/followers", "following_url": "https://api.github.com/users/marktaff/following{/other_user}", "gists_url": "https://api.github.com/users/marktaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/marktaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marktaff/subscriptions", "organizations_url": "https://api.github.com/users/marktaff/orgs", "repos_url": "https://api.github.com/users/marktaff/repos", "events_url": "https://api.github.com/users/marktaff/events{/privacy}", "received_events_url": "https://api.github.com/users/marktaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-14T05:16:22Z", "updated_at": "2017-04-14T07:11:07Z", "closed_at": "2017-04-14T07:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mutagen allowed me to write two identical front cover images, so now the files have two identical APIC tags. However, mutagen will only read one of them, nor will it tell me there are multiple front cover images so I could handle the issue.  mid3v2 only lists one APIC tag as well, while id3v2 lists both tags, and easyTAG also shows both front cover images.\r\n\r\n\r\n`$ mid3v2 -l ../music/mp3/Queen/Greatest\\ Hits\\ I\\ \\&\\ II/Queen\\ -\\ Under\\ Pressure.mp3 \r\nIDv2 tag info for ../music/mp3/Queen/Greatest Hits I & II/Queen - Under Pressure.mp3\r\nAPIC=cover front, Front cover (image/jpeg, 65082 bytes)\r\nCOMM=description=XXX=<rating>6</rating>\r\nTALB=Greatest Hits I & II\r\n`\r\n\r\n`$ id3v2 -l ../music/mp3/Queen/Greatest\\ Hits\\ I\\ \\&\\ II/Queen\\ -\\ Under\\ Pressure.mp3 \r\nid3v2 tag info for ../music/mp3/Queen/Greatest Hits I & II/Queen - Under Pressure.mp3:\r\nTCON (Content type): Classic Rock (1)\r\nAPIC (Attached picture): (Front cover)[, 3]: image/jpeg, 65082 bytes\r\nAPIC (Attached picture): (Front cover)[, 3]: image/jpeg, 65082 bytes\r\nCOMM (Comments): (description)[XXX]: <rating>6</rating>\r\n`\r\n\r\nBoth\r\n`            d = mutagen.mp3.MP3(self.mp3Path)\r\n            x = d.tags.getall('APIC')`\r\nand\r\n`self.apic = self.m.getall('APIC')`\r\nwhere m is: `self.m = mutagen.id3.ID3(self.mp3Path, None, False, 3)`\r\nonly return one image, when a list of apic objects is expected.\r\n\r\nIt'd be nice if mutagen didn't write off-spec files, and it'd also be nice if mutagen would read off-spec apic tags so you could detect the off-spec condition and fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/301", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/301/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/301/events", "html_url": "https://github.com/quodlibet/mutagen/issues/301", "id": 221648749, "node_id": "MDU6SXNzdWUyMjE2NDg3NDk=", "number": 301, "title": "Handle tagging with gvfs fuse file systems", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-13T18:43:27Z", "updated_at": "2017-09-10T20:42:35Z", "closed_at": "2017-04-13T18:48:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://tickets.metabrainz.org/browse/PICARD-985\r\n\r\nhttps://bugzilla.gnome.org/show_bug.cgi?id=748106", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/300", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/300/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/300/events", "html_url": "https://github.com/quodlibet/mutagen/issues/300", "id": 221648630, "node_id": "MDU6SXNzdWUyMjE2NDg2MzA=", "number": 300, "title": "RFE: Support writing tags over gvfs fuse fallback", "user": {"login": "rsertelon", "id": 294333, "node_id": "MDQ6VXNlcjI5NDMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/294333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsertelon", "html_url": "https://github.com/rsertelon", "followers_url": "https://api.github.com/users/rsertelon/followers", "following_url": "https://api.github.com/users/rsertelon/following{/other_user}", "gists_url": "https://api.github.com/users/rsertelon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsertelon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsertelon/subscriptions", "organizations_url": "https://api.github.com/users/rsertelon/orgs", "repos_url": "https://api.github.com/users/rsertelon/repos", "events_url": "https://api.github.com/users/rsertelon/events{/privacy}", "received_events_url": "https://api.github.com/users/rsertelon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-13T18:43:02Z", "updated_at": "2017-06-14T17:54:51Z", "closed_at": "2017-06-14T17:54:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following @lazka advice on a [musicbrainz issue](https://tickets.metabrainz.org/browse/PICARD-985) I opened, I'm creating a request for enhancement to allow picard to write tags over sftp.\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/299", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/299/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/299/events", "html_url": "https://github.com/quodlibet/mutagen/issues/299", "id": 220152435, "node_id": "MDU6SXNzdWUyMjAxNTI0MzU=", "number": 299, "title": "mp4 \u00a9wrk", "user": {"login": "Sophist-UK", "id": 3001893, "node_id": "MDQ6VXNlcjMwMDE4OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3001893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sophist-UK", "html_url": "https://github.com/Sophist-UK", "followers_url": "https://api.github.com/users/Sophist-UK/followers", "following_url": "https://api.github.com/users/Sophist-UK/following{/other_user}", "gists_url": "https://api.github.com/users/Sophist-UK/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sophist-UK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sophist-UK/subscriptions", "organizations_url": "https://api.github.com/users/Sophist-UK/orgs", "repos_url": "https://api.github.com/users/Sophist-UK/repos", "events_url": "https://api.github.com/users/Sophist-UK/events{/privacy}", "received_events_url": "https://api.github.com/users/Sophist-UK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-07T08:59:00Z", "updated_at": "2017-06-01T15:45:02Z", "closed_at": "2017-06-01T15:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find official description of the mp4 \u00a9wrk field on iTunes, but it seems to be part of the Classical Movement enhancements.\r\n\r\nIs there a reason that this was not added in 1.37 with the Movement support?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/298", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/298/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/298/events", "html_url": "https://github.com/quodlibet/mutagen/issues/298", "id": 219428942, "node_id": "MDU6SXNzdWUyMTk0Mjg5NDI=", "number": 298, "title": "JPEG Support?", "user": {"login": "daverickdunn", "id": 7645242, "node_id": "MDQ6VXNlcjc2NDUyNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7645242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daverickdunn", "html_url": "https://github.com/daverickdunn", "followers_url": "https://api.github.com/users/daverickdunn/followers", "following_url": "https://api.github.com/users/daverickdunn/following{/other_user}", "gists_url": "https://api.github.com/users/daverickdunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/daverickdunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daverickdunn/subscriptions", "organizations_url": "https://api.github.com/users/daverickdunn/orgs", "repos_url": "https://api.github.com/users/daverickdunn/repos", "events_url": "https://api.github.com/users/daverickdunn/events{/privacy}", "received_events_url": "https://api.github.com/users/daverickdunn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T00:39:52Z", "updated_at": "2017-04-05T06:17:37Z", "closed_at": "2017-04-05T01:02:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\n```\r\nimport mutagen\r\nmutagen_file = mutagen.File(\"LP Melodies From Mars (unreleased) CD Cover.jpg\")\r\nprint(mutagen_file.info.bitrate)\r\nprint(mutagen_file.info.length)\r\n```\r\nResults in:\r\n\r\n```\r\n5905670160\r\n1485.051\r\n```\r\n\r\nIs this expected behaviour?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/296", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/296/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/296/events", "html_url": "https://github.com/quodlibet/mutagen/issues/296", "id": 210937516, "node_id": "MDU6SXNzdWUyMTA5Mzc1MTY=", "number": 296, "title": "Save file-like object to file", "user": {"login": "ape364", "id": 4036006, "node_id": "MDQ6VXNlcjQwMzYwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4036006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ape364", "html_url": "https://github.com/ape364", "followers_url": "https://api.github.com/users/ape364/followers", "following_url": "https://api.github.com/users/ape364/following{/other_user}", "gists_url": "https://api.github.com/users/ape364/gists{/gist_id}", "starred_url": "https://api.github.com/users/ape364/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ape364/subscriptions", "organizations_url": "https://api.github.com/users/ape364/orgs", "repos_url": "https://api.github.com/users/ape364/repos", "events_url": "https://api.github.com/users/ape364/events{/privacy}", "received_events_url": "https://api.github.com/users/ape364/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-28T23:45:56Z", "updated_at": "2017-03-02T16:43:42Z", "closed_at": "2017-03-02T08:56:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Do u have any example about saving `mutagen.mp3.MP3` to `io.BytesIO` object? For example:\r\n```\r\nimport io\r\n\r\nimport requests\r\nfrom mutagen.id3 import TIT2\r\nfrom mutagen.mp3 import MP3\r\n\r\nurl = 'http://somedomain.com/sometrack.mp3'\r\nr = requests.get(url)\r\n\r\nfilelike_object = io.BytesIO(r.content)\r\nfile = MP3(filelike_object)\r\nfile.tags.add(TIT2(encoding=3, text='test'))\r\n```\r\n\r\ni.e. i want to filelike_obj -> mutagen.mp3.MP3 obj -> filelike_obj. \r\n\r\nI've tried this:\r\n```\r\nres = io.BytesIO()\r\nfile.save(fileobj=res)\r\n```\r\nbut in this case `res` is empty.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/293", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/293/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/293/events", "html_url": "https://github.com/quodlibet/mutagen/issues/293", "id": 208665578, "node_id": "MDU6SXNzdWUyMDg2NjU1Nzg=", "number": 293, "title": "APIC Tag Uses Image Description", "user": {"login": "tmose1106", "id": 15310560, "node_id": "MDQ6VXNlcjE1MzEwNTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/15310560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmose1106", "html_url": "https://github.com/tmose1106", "followers_url": "https://api.github.com/users/tmose1106/followers", "following_url": "https://api.github.com/users/tmose1106/following{/other_user}", "gists_url": "https://api.github.com/users/tmose1106/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmose1106/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmose1106/subscriptions", "organizations_url": "https://api.github.com/users/tmose1106/orgs", "repos_url": "https://api.github.com/users/tmose1106/repos", "events_url": "https://api.github.com/users/tmose1106/events{/privacy}", "received_events_url": "https://api.github.com/users/tmose1106/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-18T19:40:16Z", "updated_at": "2017-02-19T16:09:35Z", "closed_at": "2017-02-19T16:09:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I just wanted to say, it seems to me the way APIC keys are handled in mutagen 1.36.2 is not a very good approach. Creating keys of the form `APIC:<image-description>` does not seem like a good idea since there is no guarantee that a user's music library has standardized image descriptions. Couldn't we use the fact we know if an image is a front cover to create a key like `APIC:Cover_Front` or whatever type the image is?\r\n\r\nThis comes up because I am writing some scripts to deal with my music library, and some of my files have front covers with descriptions saying \"Front Cover\" and others are the name of the file that was added as the front cover. I would like to be able to just say I want all the front covers. And this should be possible since that information is included in APIC tags, correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/292", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/292/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/292/events", "html_url": "https://github.com/quodlibet/mutagen/issues/292", "id": 208644289, "node_id": "MDU6SXNzdWUyMDg2NDQyODk=", "number": 292, "title": "MP3 parsing error", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-18T14:17:30Z", "updated_at": "2017-02-18T15:16:23Z", "closed_at": "2017-02-18T15:16:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/beetbox/beets/issues/2440 and the attached file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/291", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/291/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/291/events", "html_url": "https://github.com/quodlibet/mutagen/issues/291", "id": 207264127, "node_id": "MDU6SXNzdWUyMDcyNjQxMjc=", "number": 291, "title": "Relicense to \"GPLv2 or later\"", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-13T16:14:26Z", "updated_at": "2017-02-13T16:20:25Z", "closed_at": "2017-02-13T16:20:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to be compatible with GPLv3 and Apache 2.0.\r\n\r\nProgress is reported here: https://github.com/quodlibet/relicensing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/290", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/290/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/290/events", "html_url": "https://github.com/quodlibet/mutagen/issues/290", "id": 205381068, "node_id": "MDU6SXNzdWUyMDUzODEwNjg=", "number": 290, "title": "TDRC vs. TDRL", "user": {"login": "pR0Ps", "id": 466941, "node_id": "MDQ6VXNlcjQ2Njk0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/466941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pR0Ps", "html_url": "https://github.com/pR0Ps", "followers_url": "https://api.github.com/users/pR0Ps/followers", "following_url": "https://api.github.com/users/pR0Ps/following{/other_user}", "gists_url": "https://api.github.com/users/pR0Ps/gists{/gist_id}", "starred_url": "https://api.github.com/users/pR0Ps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pR0Ps/subscriptions", "organizations_url": "https://api.github.com/users/pR0Ps/orgs", "repos_url": "https://api.github.com/users/pR0Ps/repos", "events_url": "https://api.github.com/users/pR0Ps/events{/privacy}", "received_events_url": "https://api.github.com/users/pR0Ps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-04T22:03:12Z", "updated_at": "2017-02-07T12:04:10Z", "closed_at": "2017-02-07T12:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it seems like the 'date' of a track is mapped to the `TDRC` frame (recording date) instead of `TDRL` (release date).\r\n\r\nThis can be seen in a few places:\r\n - The [mid3v2 docs](https://github.com/quodlibet/mutagen/blob/ddf22e36b0ae9afff8a6ed4ba08439451a5af748/docs/man/mid3v2.rst#options)\r\n - [`easyid3.py`](https://github.com/quodlibet/mutagen/blob/ccba9efea0741ab42a21f4c9109a73020dad0adf/mutagen/easyid3.py#L278-L287) and [it's tests](https://github.com/quodlibet/mutagen/blob/ccba9efea0741ab42a21f4c9109a73020dad0adf/tests/test_easyid3.py#L55-L63)\r\n\r\nIs this a bug? Or was this done on purpose for compatibility reasons?\r\n\r\nFor reference, excerpts from the [id3v2.4 spec](http://id3.org/id3v2.4.0-frames):\r\n - `TDRC`: \"Recording time [...] when the audio was recorded\".\r\n - `TDRL`: \"Release time [...] when the audio was first released\"\r\n - `TDOR`: \"Original release time [...] when the original recording of the audio was released\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/288", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/288/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/288/events", "html_url": "https://github.com/quodlibet/mutagen/issues/288", "id": 202322425, "node_id": "MDU6SXNzdWUyMDIzMjI0MjU=", "number": 288, "title": "Picard slowness over Windows network share", "user": {"login": "Sophist-UK", "id": 3001893, "node_id": "MDQ6VXNlcjMwMDE4OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3001893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sophist-UK", "html_url": "https://github.com/Sophist-UK", "followers_url": "https://api.github.com/users/Sophist-UK/followers", "following_url": "https://api.github.com/users/Sophist-UK/following{/other_user}", "gists_url": "https://api.github.com/users/Sophist-UK/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sophist-UK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sophist-UK/subscriptions", "organizations_url": "https://api.github.com/users/Sophist-UK/orgs", "repos_url": "https://api.github.com/users/Sophist-UK/repos", "events_url": "https://api.github.com/users/Sophist-UK/events{/privacy}", "received_events_url": "https://api.github.com/users/Sophist-UK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 375753398, "node_id": "MDU6TGFiZWwzNzU3NTMzOTg=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/needinfo", "name": "needinfo", "color": "dbba4c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-01-21T15:42:56Z", "updated_at": "2020-01-15T10:17:08Z", "closed_at": "2017-02-13T16:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Picard over a Windows 10 network share I have been getting very poor performance. Windows task manager shows open handles growing.\r\n\r\nThis issue is to log the possibility of a file handle leak in Mutagen creating these performance problems.\r\n\r\nOngoing discussion re: Picard is in ticket [PICARD-744](https://tickets.metabrainz.org/browse/PICARD-744) but for MP3 files it looks to me like the code reads the header to determine the ID3 data size, and at ID3/_file.py:164 calls ._util.py:read_full which reads the rest of the ID3 data (using the size in the header) but does NOT read to the end of the file (which would implicitly close the file) or does it close the file explicitly.\r\n\r\nI haven't looked at other formats, but this may apply to them as well as ID3.\r\n\r\nDo we need to explicitly close the file at the end of the `load` method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/287", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/287/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/287/events", "html_url": "https://github.com/quodlibet/mutagen/issues/287", "id": 200905368, "node_id": "MDU6SXNzdWUyMDA5MDUzNjg=", "number": 287, "title": "Duration handling for broken flac files", "user": {"login": "gfarmerfr", "id": 20270839, "node_id": "MDQ6VXNlcjIwMjcwODM5", "avatar_url": "https://avatars3.githubusercontent.com/u/20270839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfarmerfr", "html_url": "https://github.com/gfarmerfr", "followers_url": "https://api.github.com/users/gfarmerfr/followers", "following_url": "https://api.github.com/users/gfarmerfr/following{/other_user}", "gists_url": "https://api.github.com/users/gfarmerfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfarmerfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfarmerfr/subscriptions", "organizations_url": "https://api.github.com/users/gfarmerfr/orgs", "repos_url": "https://api.github.com/users/gfarmerfr/repos", "events_url": "https://api.github.com/users/gfarmerfr/events{/privacy}", "received_events_url": "https://api.github.com/users/gfarmerfr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-15T23:20:03Z", "updated_at": "2017-01-16T17:39:48Z", "closed_at": "2017-01-16T09:47:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI stumble upon some broken flac files in the wild that doesn't report a correct length (duration).\r\n\r\nPrior to 1.36 they were reporting a duration of 0.0:\r\n```\r\n>>> import mutagen\r\n>>> audio = mutagen.File(\"test.flac\")\r\n>>> audio.info.length\r\n0.0\r\n```\r\n\r\nWith 1.36 it's actually raising a ZeroDivisionError:\r\n\r\n```\r\n>>> import mutagen\r\n>>> audio = mutagen.File(\"test.flac\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"venv/lib/python2.7/site-packages/mutagen/_util.py\", line 131, in wrapper_func\r\n    return func(h, *args, **kwargs)\r\n  File \"venv/lib/python2.7/site-packages/mutagen/_file.py\", line 295, in File\r\n    return Kind(fileobj, filename=filething.filename)\r\n  File \"venv/lib/python2.7/site-packages/mutagen/_file.py\", line 48, in __init__\r\n    self.load(*args, **kwargs)\r\n  File \"venv/lib/python2.7/site-packages/mutagen/_util.py\", line 152, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"venv/lib/python2.7/site-packages/mutagen/_util.py\", line 123, in wrapper\r\n    return func(self, h, *args, **kwargs)\r\n  File \"venv/lib/python2.7/site-packages/mutagen/flac.py\", line 801, in load\r\n    float(fileobj.tell() - start) * 8 / self.info.length)\r\nZeroDivisionError: float division by zero\r\n```\r\n\r\nI think this was introduced by adding the bitrate info in this commit: https://github.com/quodlibet/mutagen/commit/d8aed5afcf32cdddea30fdaf812e1f2c25c6d3e6\r\n\r\nIf you decide to handle this type of broken files should the bitrate be 0 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/286", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/286/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/286/events", "html_url": "https://github.com/quodlibet/mutagen/issues/286", "id": 200878459, "node_id": "MDU6SXNzdWUyMDA4Nzg0NTk=", "number": 286, "title": "Support Google App Engine Standard Runtime", "user": {"login": "mike-matera", "id": 1709049, "node_id": "MDQ6VXNlcjE3MDkwNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1709049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike-matera", "html_url": "https://github.com/mike-matera", "followers_url": "https://api.github.com/users/mike-matera/followers", "following_url": "https://api.github.com/users/mike-matera/following{/other_user}", "gists_url": "https://api.github.com/users/mike-matera/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike-matera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike-matera/subscriptions", "organizations_url": "https://api.github.com/users/mike-matera/orgs", "repos_url": "https://api.github.com/users/mike-matera/repos", "events_url": "https://api.github.com/users/mike-matera/events{/privacy}", "received_events_url": "https://api.github.com/users/mike-matera/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-15T16:30:29Z", "updated_at": "2017-01-17T16:18:18Z", "closed_at": "2017-01-16T10:08:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nGAE does not support the 'mmap' library in Python. Applications have no direct access to files at the operating system level. The runtime does support file-like objects that can, read, write, seek, etc. In the current version of mutagen it's possible to read ID3 tags from a file if the \"import mmap\" line is changed in _util.py to be:\r\n\r\n```\r\ntry : \r\n   import mmap\r\nexcept : \r\n   pass\r\n```\r\n\r\nI'm happy to help by providing testing and any environment setup documentation. Just ask. \r\n\r\nThanks!\r\n./m", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/282", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/282/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/282/events", "html_url": "https://github.com/quodlibet/mutagen/issues/282", "id": 198220493, "node_id": "MDU6SXNzdWUxOTgyMjA0OTM=", "number": 282, "title": "cant add special characters  to tags", "user": {"login": "darkworks", "id": 12841788, "node_id": "MDQ6VXNlcjEyODQxNzg4", "avatar_url": "https://avatars2.githubusercontent.com/u/12841788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkworks", "html_url": "https://github.com/darkworks", "followers_url": "https://api.github.com/users/darkworks/followers", "following_url": "https://api.github.com/users/darkworks/following{/other_user}", "gists_url": "https://api.github.com/users/darkworks/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkworks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkworks/subscriptions", "organizations_url": "https://api.github.com/users/darkworks/orgs", "repos_url": "https://api.github.com/users/darkworks/repos", "events_url": "https://api.github.com/users/darkworks/events{/privacy}", "received_events_url": "https://api.github.com/users/darkworks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-31T06:21:40Z", "updated_at": "2016-12-31T06:26:09Z", "closed_at": "2016-12-31T06:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have mp3 file and i want to add \"@\"  sign in publisher and composer tags however am unable to add it ..\r\n\r\ni tried to read mp3 files which had @ sign in publisher and composer tag however on mutagen skipped @ sign ,  and same happen when i tried to write string which have @ sign its skipped and not write ...\r\n\r\n\r\nso any idea how to write tags  like    @ampublisher           @amcomposer   \r\n\r\nthanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/279", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/279/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/279/events", "html_url": "https://github.com/quodlibet/mutagen/issues/279", "id": 195060939, "node_id": "MDU6SXNzdWUxOTUwNjA5Mzk=", "number": 279, "title": "flac: provide bitrate estimation", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-12T19:19:31Z", "updated_at": "2016-12-15T03:25:27Z", "closed_at": "2016-12-14T14:25:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This comes up regularly on #beets. Changing tags changes the bitrate guessed by applications. mutagen could guess with skipping the tags.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/278", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/278/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/278/events", "html_url": "https://github.com/quodlibet/mutagen/issues/278", "id": 194074117, "node_id": "MDU6SXNzdWUxOTQwNzQxMTc=", "number": 278, "title": "Mutagen saves ID3 V2.3 tags in an unusual order", "user": {"login": "Knutz99", "id": 24436337, "node_id": "MDQ6VXNlcjI0NDM2MzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/24436337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Knutz99", "html_url": "https://github.com/Knutz99", "followers_url": "https://api.github.com/users/Knutz99/followers", "following_url": "https://api.github.com/users/Knutz99/following{/other_user}", "gists_url": "https://api.github.com/users/Knutz99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Knutz99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Knutz99/subscriptions", "organizations_url": "https://api.github.com/users/Knutz99/orgs", "repos_url": "https://api.github.com/users/Knutz99/repos", "events_url": "https://api.github.com/users/Knutz99/events{/privacy}", "received_events_url": "https://api.github.com/users/Knutz99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-07T15:08:24Z", "updated_at": "2016-12-07T19:35:57Z", "closed_at": "2016-12-07T19:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Loading and re-saving V2.3 tags results in the tag order being somewhat unusual with any embedded artwork in the middle of text tags.\r\nCan the default order be changed to put APIC last or can they be saved in a reverse size order.\r\n\r\nMore details in the mailing list:\r\nhttps://groups.google.com/forum/#!topic/quod-libet-development/DuN0Bu-MEN0\r\n\r\nThanks\r\nBob", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/277", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/277/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/277/events", "html_url": "https://github.com/quodlibet/mutagen/issues/277", "id": 192104048, "node_id": "MDU6SXNzdWUxOTIxMDQwNDg=", "number": 277, "title": "mid3cp removes old tags", "user": {"login": "sylveon", "id": 6440374, "node_id": "MDQ6VXNlcjY0NDAzNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6440374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylveon", "html_url": "https://github.com/sylveon", "followers_url": "https://api.github.com/users/sylveon/followers", "following_url": "https://api.github.com/users/sylveon/following{/other_user}", "gists_url": "https://api.github.com/users/sylveon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylveon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylveon/subscriptions", "organizations_url": "https://api.github.com/users/sylveon/orgs", "repos_url": "https://api.github.com/users/sylveon/repos", "events_url": "https://api.github.com/users/sylveon/events{/privacy}", "received_events_url": "https://api.github.com/users/sylveon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362766, "node_id": "MDU6TGFiZWwzNTQzNjI3NjY=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-11-28T20:06:01Z", "updated_at": "2016-12-15T05:43:37Z", "closed_at": "2016-12-15T05:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to use it as a way to merge tags from two files (One has BPM, encoder but the other one has title, artist) into a single file, but the tool erases all old tags before copying (something that the original id3cp does not)\r\n\r\nA better behavior would be to keep them and ask the user what to do if there is any conflicts during the progress.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/276", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/276/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/276/events", "html_url": "https://github.com/quodlibet/mutagen/issues/276", "id": 190548470, "node_id": "MDU6SXNzdWUxOTA1NDg0NzA=", "number": 276, "title": "id3: ignore trailing empty values for v2.3", "user": {"login": "lazka", "id": 991986, "node_id": "MDQ6VXNlcjk5MTk4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/991986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazka", "html_url": "https://github.com/lazka", "followers_url": "https://api.github.com/users/lazka/followers", "following_url": "https://api.github.com/users/lazka/following{/other_user}", "gists_url": "https://api.github.com/users/lazka/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazka/subscriptions", "organizations_url": "https://api.github.com/users/lazka/orgs", "repos_url": "https://api.github.com/users/lazka/repos", "events_url": "https://api.github.com/users/lazka/events{/privacy}", "received_events_url": "https://api.github.com/users/lazka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 354362764, "node_id": "MDU6TGFiZWwzNTQzNjI3NjQ=", "url": "https://api.github.com/repos/quodlibet/mutagen/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-20T09:32:47Z", "updated_at": "2016-11-20T16:22:16Z", "closed_at": "2016-11-20T16:22:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This has come up multiple times:\r\n\r\n* We support multi value text frames in v2.3 by reading past the terminator as in v2.4\r\n* Some taggers add some zero padding after v2.3 resulting in trailing empty values.\r\n\r\nIn case of v2.3 we should ignore any trailing empty values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/275", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/275/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/275/events", "html_url": "https://github.com/quodlibet/mutagen/issues/275", "id": 190042962, "node_id": "MDU6SXNzdWUxOTAwNDI5NjI=", "number": 275, "title": "MP4: Add method for deleting a specific tag", "user": {"login": "bernd-wechner", "id": 7296506, "node_id": "MDQ6VXNlcjcyOTY1MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7296506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-wechner", "html_url": "https://github.com/bernd-wechner", "followers_url": "https://api.github.com/users/bernd-wechner/followers", "following_url": "https://api.github.com/users/bernd-wechner/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-wechner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-wechner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-wechner/subscriptions", "organizations_url": "https://api.github.com/users/bernd-wechner/orgs", "repos_url": "https://api.github.com/users/bernd-wechner/repos", "events_url": "https://api.github.com/users/bernd-wechner/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-wechner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-17T13:11:14Z", "updated_at": "2016-11-17T22:17:58Z", "closed_at": "2016-11-17T22:17:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "mutagen.mp4.MP4Tags has a delete method which deletes all tags. \r\n\r\nWhat appears to be missing is a means of deleting a specific tag. \r\n\r\nThe equivalent of:\r\n\r\n`mutagen.id3.ID3Tags.delall(key)`\r\n`mutagen.asf.ASFTags.__delitem__(key)`\r\n\r\n(oddly inconsistent implementation already in IDTags and ASFTags).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quodlibet/mutagen/issues/274", "repository_url": "https://api.github.com/repos/quodlibet/mutagen", "labels_url": "https://api.github.com/repos/quodlibet/mutagen/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/quodlibet/mutagen/issues/274/comments", "events_url": "https://api.github.com/repos/quodlibet/mutagen/issues/274/events", "html_url": "https://github.com/quodlibet/mutagen/issues/274", "id": 188951041, "node_id": "MDU6SXNzdWUxODg5NTEwNDE=", "number": 274, "title": "Trailing whitespace when listing tags.", "user": {"login": "joaoe", "id": 461983, "node_id": "MDQ6VXNlcjQ2MTk4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/461983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaoe", "html_url": "https://github.com/joaoe", "followers_url": "https://api.github.com/users/joaoe/followers", "following_url": "https://api.github.com/users/joaoe/following{/other_user}", "gists_url": "https://api.github.com/users/joaoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaoe/subscriptions", "organizations_url": "https://api.github.com/users/joaoe/orgs", "repos_url": "https://api.github.com/users/joaoe/repos", "events_url": "https://api.github.com/users/joaoe/events{/privacy}", "received_events_url": "https://api.github.com/users/joaoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-13T04:09:35Z", "updated_at": "2016-11-15T13:56:01Z", "closed_at": "2016-11-13T11:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ! \r\n\r\nWhen I run mutagen with\r\n```\r\nmid3v2 -l <file>\r\n```\r\nI'll get the list of tags. The last one will have a trailing whitespace that does not exist in the file. Since I'm running mutagen in a script that sanitizes mp3 tags, it will always think files have content that can be sanitized due to that trailing space (trimming tags is one of its features).\r\n\r\nAnyway, this is a trivial issue, in `mutagen/_toolsutil.py`, function `print_`.\r\n\r\nThe following to lines are the culprit:\r\n```\r\nobjects = list(objects) + [os.linesep]\r\ndata = (b\" \" if sep else b\"\").join(parts)\r\n```\r\nThe `.join()`will add the whitespace before the newline.\r\n\r\nTip: replace with just \r\n```\r\ndata = (b\" \" if sep else b\"\").join(parts) + (os.linesep if linesep else b\"\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}