{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/70", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/70/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/70/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/70", "id": 677785763, "node_id": "MDU6SXNzdWU2Nzc3ODU3NjM=", "number": 70, "title": "spellchecker.py:422: DeprecationWarning", "user": {"login": "pctjsm", "id": 69590597, "node_id": "MDQ6VXNlcjY5NTkwNTk3", "avatar_url": "https://avatars1.githubusercontent.com/u/69590597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pctjsm", "html_url": "https://github.com/pctjsm", "followers_url": "https://api.github.com/users/pctjsm/followers", "following_url": "https://api.github.com/users/pctjsm/following{/other_user}", "gists_url": "https://api.github.com/users/pctjsm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pctjsm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pctjsm/subscriptions", "organizations_url": "https://api.github.com/users/pctjsm/orgs", "repos_url": "https://api.github.com/users/pctjsm/repos", "events_url": "https://api.github.com/users/pctjsm/events{/privacy}", "received_events_url": "https://api.github.com/users/pctjsm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-12T15:30:22Z", "updated_at": "2020-08-15T03:53:57Z", "closed_at": "2020-08-15T03:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI\u00b4m getting this warning:\r\n`....spellchecker.py:422: DeprecationWarning: 'encoding' is ignored and deprecated. It will be removed in Python 3.9`\r\n\r\nAre you planning an update?\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/69", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/69/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/69/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/69", "id": 642306338, "node_id": "MDU6SXNzdWU2NDIzMDYzMzg=", "number": 69, "title": "What is your definition of \"long\"?", "user": {"login": "snoopyjc", "id": 9206213, "node_id": "MDQ6VXNlcjkyMDYyMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9206213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snoopyjc", "html_url": "https://github.com/snoopyjc", "followers_url": "https://api.github.com/users/snoopyjc/followers", "following_url": "https://api.github.com/users/snoopyjc/following{/other_user}", "gists_url": "https://api.github.com/users/snoopyjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/snoopyjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snoopyjc/subscriptions", "organizations_url": "https://api.github.com/users/snoopyjc/orgs", "repos_url": "https://api.github.com/users/snoopyjc/repos", "events_url": "https://api.github.com/users/snoopyjc/events{/privacy}", "received_events_url": "https://api.github.com/users/snoopyjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-20T04:26:28Z", "updated_at": "2020-06-20T19:39:49Z", "closed_at": "2020-06-20T19:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"If the words that you wish to check are long, it is recommended to reduce the distance to 1\".  How many characters do you recommend to use for \"long\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/66", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/66/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/66/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/66", "id": 618866682, "node_id": "MDU6SXNzdWU2MTg4NjY2ODI=", "number": 66, "title": "Correct a sentense", "user": {"login": "bacloud14", "id": 10267332, "node_id": "MDQ6VXNlcjEwMjY3MzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10267332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bacloud14", "html_url": "https://github.com/bacloud14", "followers_url": "https://api.github.com/users/bacloud14/followers", "following_url": "https://api.github.com/users/bacloud14/following{/other_user}", "gists_url": "https://api.github.com/users/bacloud14/gists{/gist_id}", "starred_url": "https://api.github.com/users/bacloud14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bacloud14/subscriptions", "organizations_url": "https://api.github.com/users/bacloud14/orgs", "repos_url": "https://api.github.com/users/bacloud14/repos", "events_url": "https://api.github.com/users/bacloud14/events{/privacy}", "received_events_url": "https://api.github.com/users/bacloud14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T10:30:24Z", "updated_at": "2020-05-15T12:20:37Z", "closed_at": "2020-05-15T12:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is `known([words])` and `unknown([words])`. It would be greate to have `correct([words])` or `correct(sentence)`. It seems feasible with both, right ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/63", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/63/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/63/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/63", "id": 577841722, "node_id": "MDU6SXNzdWU1Nzc4NDE3MjI=", "number": 63, "title": "Wrong correction suggestion", "user": {"login": "nshresthan", "id": 11394524, "node_id": "MDQ6VXNlcjExMzk0NTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/11394524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nshresthan", "html_url": "https://github.com/nshresthan", "followers_url": "https://api.github.com/users/nshresthan/followers", "following_url": "https://api.github.com/users/nshresthan/following{/other_user}", "gists_url": "https://api.github.com/users/nshresthan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nshresthan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nshresthan/subscriptions", "organizations_url": "https://api.github.com/users/nshresthan/orgs", "repos_url": "https://api.github.com/users/nshresthan/repos", "events_url": "https://api.github.com/users/nshresthan/events{/privacy}", "received_events_url": "https://api.github.com/users/nshresthan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T11:33:51Z", "updated_at": "2020-06-14T15:28:20Z", "closed_at": "2020-06-14T15:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the spellchecker, but it gives the same word as correction even it is not the correct word. \r\n\r\n```\r\nspell_en = SpellChecker()\r\nmiss_en = spell_en.unknown([\"rlnwatvwv\", \"reditanstalt\", \"uivrv\", \"candidates\",\"gibaatwwxxx\"])\r\nfor word in miss_en:\r\n    print(\"misspelled word: \", word)\r\n    print(\"suggested correction: \", spell_en.correction(word))\r\n    print(\"candidates: \", spell_en.candidates(word))\r\n    print(\"----------\")\r\n```\r\n\r\noutput:\r\nmisspelled word:  uivrv\r\nsuggested correction:  livre\r\ncandidates:  {'livre'}\r\n----------\r\nmisspelled word:  reditanstalt\r\nsuggested correction:  reditanstalt\r\ncandidates:  {'reditanstalt'}\r\n----------\r\nmisspelled word:  gibaatwwxxx\r\nsuggested correction:  gibaatwwxxx\r\ncandidates:  {'gibaatwwxxx'}\r\n----------\r\nmisspelled word:  rlnwatvwv\r\nsuggested correction:  rlnwatvwv\r\ncandidates:  {'rlnwatvwv'}\r\n----------\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/61", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/61/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/61/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/61", "id": 566455274, "node_id": "MDU6SXNzdWU1NjY0NTUyNzQ=", "number": 61, "title": "Extreme memory usage for words near longest word length in the dictionary", "user": {"login": "blayzen-w", "id": 31136117, "node_id": "MDQ6VXNlcjMxMTM2MTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/31136117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blayzen-w", "html_url": "https://github.com/blayzen-w", "followers_url": "https://api.github.com/users/blayzen-w/followers", "following_url": "https://api.github.com/users/blayzen-w/following{/other_user}", "gists_url": "https://api.github.com/users/blayzen-w/gists{/gist_id}", "starred_url": "https://api.github.com/users/blayzen-w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blayzen-w/subscriptions", "organizations_url": "https://api.github.com/users/blayzen-w/orgs", "repos_url": "https://api.github.com/users/blayzen-w/repos", "events_url": "https://api.github.com/users/blayzen-w/events{/privacy}", "received_events_url": "https://api.github.com/users/blayzen-w/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T18:15:29Z", "updated_at": "2020-02-17T22:53:34Z", "closed_at": "2020-02-17T22:53:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like when you use a string that will never match a word but sill fits under the the maximum word length can cause extreme memory usage.\r\n\r\nTake the example \"57ef934a-dbb0-4978-8626d41c819274\". The first set of candidates for distance 1 generates an array of 3,214 words. Sense none of these will match it will then try to generate the list of distance 2 candidates based on each distance 1 candidate which will expand the array out to 10,380,316 words which eats up around 30%+ of our 4gb server. After around 4 or 5 requests the server maxes out memory and freezes. If this package is used to spell correct a user input field, a bot could easily overload the server.\r\n\r\nIt looks like it should be possible to limit the words generated when iterating over the distance 1 candidates and generating the distance 2 sets. Basically only concat the distance 2 words match the known set and ignore the ones that don't. This would limit the maximum available words to around the total distance * number of words for distance 1. So in this case around 6,428 instead of 10,380,316 words in memory at the same time. This should be possible by modifying the functionality of the `__edit_distance_alt` and possibly `edit_distance_2`.\r\n\r\nExample:\r\n`return [e2 for e1 in tmp for e2 in self.known(self.edit_distance_1(e1))]`\r\n\r\nI'll make a PR in a bit for this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/59", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/59/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/59/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/59", "id": 546440907, "node_id": "MDU6SXNzdWU1NDY0NDA5MDc=", "number": 59, "title": "Add Custom Word Freq Dict Sample To Docs", "user": {"login": "ede0m", "id": 15355375, "node_id": "MDQ6VXNlcjE1MzU1Mzc1", "avatar_url": "https://avatars0.githubusercontent.com/u/15355375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ede0m", "html_url": "https://github.com/ede0m", "followers_url": "https://api.github.com/users/ede0m/followers", "following_url": "https://api.github.com/users/ede0m/following{/other_user}", "gists_url": "https://api.github.com/users/ede0m/gists{/gist_id}", "starred_url": "https://api.github.com/users/ede0m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ede0m/subscriptions", "organizations_url": "https://api.github.com/users/ede0m/orgs", "repos_url": "https://api.github.com/users/ede0m/repos", "events_url": "https://api.github.com/users/ede0m/events{/privacy}", "received_events_url": "https://api.github.com/users/ede0m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-07T18:33:56Z", "updated_at": "2020-01-08T20:51:23Z", "closed_at": "2020-01-08T20:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is probably obvious to most, but would you be able to add the samples from your tests to the documents for how custom word freq dicts and lists should be constructed? \r\n\r\nhttps://github.com/barrust/pyspellchecker/blob/master/tests/resources/small_dictionary.json ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/57", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/57/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/57/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/57", "id": 519843533, "node_id": "MDU6SXNzdWU1MTk4NDM1MzM=", "number": 57, "title": "Memory Issue for long spellings errors/strings", "user": {"login": "khatrimann", "id": 17111912, "node_id": "MDQ6VXNlcjE3MTExOTEy", "avatar_url": "https://avatars1.githubusercontent.com/u/17111912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khatrimann", "html_url": "https://github.com/khatrimann", "followers_url": "https://api.github.com/users/khatrimann/followers", "following_url": "https://api.github.com/users/khatrimann/following{/other_user}", "gists_url": "https://api.github.com/users/khatrimann/gists{/gist_id}", "starred_url": "https://api.github.com/users/khatrimann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khatrimann/subscriptions", "organizations_url": "https://api.github.com/users/khatrimann/orgs", "repos_url": "https://api.github.com/users/khatrimann/repos", "events_url": "https://api.github.com/users/khatrimann/events{/privacy}", "received_events_url": "https://api.github.com/users/khatrimann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T06:48:44Z", "updated_at": "2019-11-25T22:32:55Z", "closed_at": "2019-11-25T22:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "For testing purposes I have given a word of length 20 and 100, in both the cases my server is giving me ```unable to allocate memory``` and my local machine, which is running on 8GB RAM,  hangs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/55", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/55/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/55/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/55", "id": 508331714, "node_id": "MDU6SXNzdWU1MDgzMzE3MTQ=", "number": 55, "title": "Function word_probability(word)  returns 0.0", "user": {"login": "corinabioinformatic", "id": 14955321, "node_id": "MDQ6VXNlcjE0OTU1MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/14955321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corinabioinformatic", "html_url": "https://github.com/corinabioinformatic", "followers_url": "https://api.github.com/users/corinabioinformatic/followers", "following_url": "https://api.github.com/users/corinabioinformatic/following{/other_user}", "gists_url": "https://api.github.com/users/corinabioinformatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/corinabioinformatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corinabioinformatic/subscriptions", "organizations_url": "https://api.github.com/users/corinabioinformatic/orgs", "repos_url": "https://api.github.com/users/corinabioinformatic/repos", "events_url": "https://api.github.com/users/corinabioinformatic/events{/privacy}", "received_events_url": "https://api.github.com/users/corinabioinformatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-17T08:55:04Z", "updated_at": "2019-10-21T23:18:28Z", "closed_at": "2019-10-21T23:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am not sure how to use word_probability(word) function. \r\nI am currently using pyspellchecker to complete a list of mispelled words. But It gives me an output of 0. And what I need is a list of probability per each candidate in the word list printed before. \r\nHere the code: \r\n\r\n```\r\nimport \r\n\r\nmyListOfWords = ['medicin', 'increas', 'caus', 'daili', 'reduc', 'healthi', 'vaccin', 'diseas', 'intak', 'peopl', 'realli', 'diabet', 'exercis', 'possibl', 'pressur', 'bodi']\r\n\r\nspell = SpellChecker()\r\n\r\nfor word in myListOfWords :\r\n\r\n    print(spell.correction(word)) # gives the  \"best candidate\" in theory\r\n    print(spell.candidates(word)) # gives the candidates ( i dont understand the order of the words)\r\n    print(spell.word_probability(word)) # here I need the probability of the candidates to see which is the first best and the second best candidates. \r\n\r\n```\r\n\r\nWhy Am I doing that? In the code you can see that **'diabet'** word returns 'diet' instead of 'diabetes'. \r\n\r\nI would like to find an accurate  correction related to my topic. As far as I know my options are :\r\n\r\n1) Passing \"distance =1\"  argument in the 'correction' function-> _does not correct the problem with **'diabet'** word._\r\n\r\n2) Providing a text file dictionary with all the words of my interest as you suggested [here](https://pyspellchecker.readthedocs.io/en/latest/) (load_text_file. Question,  what is the expected format for this txt file? Could you share a example? ) \r\n\r\n3) Adding a new function to correct the algorithm based in the terminology I am using (**Health** related terminology) , by mean of adding a new argument (topic = \"Health\") and therefore biasing the spell corrections to all the related terminology to that topic. Are you already developing anything like that in the module? \r\n\r\nPlease could you give me a clue about how to do this (2 & 3 questions)?\r\nMany thanks! \r\n\r\n***UPDATE***\r\nI am using the txt file of medical terms provided by @glutanimate & @dgreuel [here](https://github.com/glutanimate/wordlist-medicalterms-en/blob/master/wordlist.txt).\r\nI think it solved partially the issue for my purposes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/53", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/53/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/53/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/53", "id": 491552172, "node_id": "MDU6SXNzdWU0OTE1NTIxNzI=", "number": 53, "title": "Windows encoding errors not fixed in version 0.5.1", "user": {"login": "felix-schneider", "id": 208336, "node_id": "MDQ6VXNlcjIwODMzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/208336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix-schneider", "html_url": "https://github.com/felix-schneider", "followers_url": "https://api.github.com/users/felix-schneider/followers", "following_url": "https://api.github.com/users/felix-schneider/following{/other_user}", "gists_url": "https://api.github.com/users/felix-schneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix-schneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix-schneider/subscriptions", "organizations_url": "https://api.github.com/users/felix-schneider/orgs", "repos_url": "https://api.github.com/users/felix-schneider/repos", "events_url": "https://api.github.com/users/felix-schneider/events{/privacy}", "received_events_url": "https://api.github.com/users/felix-schneider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 846692809, "node_id": "MDU6TGFiZWw4NDY2OTI4MDk=", "url": "https://api.github.com/repos/barrust/pyspellchecker/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-10T09:20:22Z", "updated_at": "2019-09-12T00:52:08Z", "closed_at": "2019-09-12T00:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "On windows, spellchecker still has problems with encoding errors:\r\n\r\n```python\r\nimport spellchecker\r\nspell = spellchecker.SpellChecker(\"de\")\r\n# This word is correctly spelled\r\nspell.known([\"besch\u00e4ftigen\"])  # output: set()\r\nspell.correction(\"besch\u00e4ftigen\")  # output: 'besch\u00e3\u00a4ftigen'\r\nspellchecker.__version__  # output: '0.5.1'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/52", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/52/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/52/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/52", "id": 490266862, "node_id": "MDU6SXNzdWU0OTAyNjY4NjI=", "number": 52, "title": "Automatic Spell Check?", "user": {"login": "MalikRumi", "id": 5474426, "node_id": "MDQ6VXNlcjU0NzQ0MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5474426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MalikRumi", "html_url": "https://github.com/MalikRumi", "followers_url": "https://api.github.com/users/MalikRumi/followers", "following_url": "https://api.github.com/users/MalikRumi/following{/other_user}", "gists_url": "https://api.github.com/users/MalikRumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MalikRumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MalikRumi/subscriptions", "organizations_url": "https://api.github.com/users/MalikRumi/orgs", "repos_url": "https://api.github.com/users/MalikRumi/repos", "events_url": "https://api.github.com/users/MalikRumi/events{/privacy}", "received_events_url": "https://api.github.com/users/MalikRumi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T11:02:52Z", "updated_at": "2019-09-19T23:50:25Z", "closed_at": "2019-09-19T23:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do I understand your examples correctly, that there is no way to point SpellChecker to a document and have it go through and auto-correct, like a word processor would do? I have to already know - or suspect - what words are misspelled and then ask SpellChecker to verify?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/50", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/50/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/50/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/50", "id": 489202968, "node_id": "MDU6SXNzdWU0ODkyMDI5Njg=", "number": 50, "title": "Preserve case of letters after correction", "user": {"login": "hemanta212", "id": 25475894, "node_id": "MDQ6VXNlcjI1NDc1ODk0", "avatar_url": "https://avatars1.githubusercontent.com/u/25475894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemanta212", "html_url": "https://github.com/hemanta212", "followers_url": "https://api.github.com/users/hemanta212/followers", "following_url": "https://api.github.com/users/hemanta212/following{/other_user}", "gists_url": "https://api.github.com/users/hemanta212/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemanta212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemanta212/subscriptions", "organizations_url": "https://api.github.com/users/hemanta212/orgs", "repos_url": "https://api.github.com/users/hemanta212/repos", "events_url": "https://api.github.com/users/hemanta212/events{/privacy}", "received_events_url": "https://api.github.com/users/hemanta212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-04T14:38:59Z", "updated_at": "2019-09-05T13:53:39Z", "closed_at": "2019-09-05T13:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The case of letters changes after the correction by spellchecker.unknown() function.\r\nIn my use case I need to point out the line numbers of the words that were mistaken.\r\nI use spellchecker.unknown() to find words that were mistyped and search line numbers of these words but since \r\n```\r\nspellchecker.unknown(['Thankk']) \r\n```\r\nwill return thankk ( lowercasing the first letter). It is difficult to point out the line number. \r\nWould it be feasible to preserve the Case of letters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/48", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/48/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/48/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/48", "id": 486557498, "node_id": "MDU6SXNzdWU0ODY1NTc0OTg=", "number": 48, "title": "Problem to set 'pt' language", "user": {"login": "lrthorita", "id": 18353563, "node_id": "MDQ6VXNlcjE4MzUzNTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/18353563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrthorita", "html_url": "https://github.com/lrthorita", "followers_url": "https://api.github.com/users/lrthorita/followers", "following_url": "https://api.github.com/users/lrthorita/following{/other_user}", "gists_url": "https://api.github.com/users/lrthorita/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrthorita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrthorita/subscriptions", "organizations_url": "https://api.github.com/users/lrthorita/orgs", "repos_url": "https://api.github.com/users/lrthorita/repos", "events_url": "https://api.github.com/users/lrthorita/events{/privacy}", "received_events_url": "https://api.github.com/users/lrthorita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-28T19:06:44Z", "updated_at": "2019-09-04T17:39:27Z", "closed_at": "2019-09-04T17:39:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "SpellChecker is working for any  supported languages, except for Portuguese ('pt').\r\nWhen I try using `spell = SpellChecker('pt')`, an error message appears saying:\r\n\r\n`UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 587200: character maps to <undefined>`\r\n\r\nI've also tried to load the dictionary the other way around:\r\n\r\n`spell = SpellChecker(language=None)`\r\n`spell.word_frequency.load_dictionary('path/to/pt.json.gz', encoding=u'utf-8')`\r\n\r\nThe same error occurs.\r\n\r\n\r\nI'm using Python 3.6.8 in Windows 10.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/47", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/47/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/47/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/47", "id": 482018888, "node_id": "MDU6SXNzdWU0ODIwMTg4ODg=", "number": 47, "title": "Non-deterministic correction", "user": {"login": "Daval-G", "id": 20557033, "node_id": "MDQ6VXNlcjIwNTU3MDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/20557033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daval-G", "html_url": "https://github.com/Daval-G", "followers_url": "https://api.github.com/users/Daval-G/followers", "following_url": "https://api.github.com/users/Daval-G/following{/other_user}", "gists_url": "https://api.github.com/users/Daval-G/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daval-G/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daval-G/subscriptions", "organizations_url": "https://api.github.com/users/Daval-G/orgs", "repos_url": "https://api.github.com/users/Daval-G/repos", "events_url": "https://api.github.com/users/Daval-G/events{/privacy}", "received_events_url": "https://api.github.com/users/Daval-G/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-18T17:42:52Z", "updated_at": "2019-09-05T21:41:22Z", "closed_at": "2019-09-05T21:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When correcting a word, if the first candidates have the same probability it seems that the chosen one will depend on the dictionary (non) order. So the correction is non-deterministic in that case.\r\n\r\nIt would be great to add an arbitrary but constant order in that case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/45", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/45/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/45/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/45", "id": 462180154, "node_id": "MDU6SXNzdWU0NjIxODAxNTQ=", "number": 45, "title": "spell.correction is taking way too long time for each word", "user": {"login": "Vichoko", "id": 10373118, "node_id": "MDQ6VXNlcjEwMzczMTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10373118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vichoko", "html_url": "https://github.com/Vichoko", "followers_url": "https://api.github.com/users/Vichoko/followers", "following_url": "https://api.github.com/users/Vichoko/following{/other_user}", "gists_url": "https://api.github.com/users/Vichoko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vichoko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vichoko/subscriptions", "organizations_url": "https://api.github.com/users/Vichoko/orgs", "repos_url": "https://api.github.com/users/Vichoko/repos", "events_url": "https://api.github.com/users/Vichoko/events{/privacy}", "received_events_url": "https://api.github.com/users/Vichoko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T19:37:26Z", "updated_at": "2019-09-03T01:43:15Z", "closed_at": "2019-09-03T01:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, i'm using spell.correction(word) method for correcting a batch of text files in spanish.\r\n\r\nAfter running some tests i noticed that some texts take more than 60 seconds to correct, also i noticed that the misspelled words take 5 to 15 seconds to correct through the spell.correction(word) method.\r\n\r\nAs you can imagine, for a batch of many texts this bottle-neck in the preprocessing take several hours instead of minutes or seconds.\r\n\r\nI haven't inspected the code of that method, but i imagine this has something to do with ranking the levenstein distance of the misspelled word with the rest of the dictionary, that is made to chose the nearest neighbour. \r\n\r\nMaybe there could be a way to use an approximate KNN or put a time threshold to the correction logic.\r\n\r\n\r\nYou can replicate this issue using spell.correction(word) for each word of this text:\r\n\r\n`\"no estar de acuerdo con la forma de militarizar la Araucan\u00ed\u00ada, la manera presora con la cual estan atacando al pueblo mapuche.el delincuencia no ha disminuido.\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/43", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/43/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/43/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/43", "id": 444421131, "node_id": "MDU6SXNzdWU0NDQ0MjExMzE=", "number": 43, "title": "Tiny mistake in how to make a new dictionary", "user": {"login": "grofte", "id": 7976840, "node_id": "MDQ6VXNlcjc5NzY4NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7976840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grofte", "html_url": "https://github.com/grofte", "followers_url": "https://api.github.com/users/grofte/followers", "following_url": "https://api.github.com/users/grofte/following{/other_user}", "gists_url": "https://api.github.com/users/grofte/gists{/gist_id}", "starred_url": "https://api.github.com/users/grofte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grofte/subscriptions", "organizations_url": "https://api.github.com/users/grofte/orgs", "repos_url": "https://api.github.com/users/grofte/repos", "events_url": "https://api.github.com/users/grofte/events{/privacy}", "received_events_url": "https://api.github.com/users/grofte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-15T12:52:28Z", "updated_at": "2019-06-10T23:02:08Z", "closed_at": "2019-06-10T23:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom spellchecker import SpellChecker\r\n\r\nspell = SpellChecker(language=None)  # turn off loading a built language dictionary\r\n\r\n# if you have a dictionary...\r\nspell.word_frequency.load_dictionary('./path-to-my-json-dictionary.json')\r\n\r\n# or... if you have text\r\nspell.word_frequency.load_text('./path-to-my-text-doc.txt')\r\n\r\n# export it out for later use!\r\nspell.export('my_custom_dictionary.gz', gzipped=True)\r\n```\r\n\r\n#### this should be \r\n\r\n```python\r\nfrom spellchecker import SpellChecker\r\n\r\nspell = SpellChecker(language=None)  # turn off loading a built language dictionary\r\n\r\n# if you have a dictionary...\r\nspell.word_frequency.load_dictionary('./path-to-my-json-dictionary.json')\r\n\r\n# or... if you have text\r\nspell.word_frequency.load_text_file('./path-to-my-text-doc.txt')\r\n\r\n# export it out for later use!\r\nspell.export('my_custom_dictionary.gz', gzipped=True)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/42", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/42/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/42/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/42", "id": 444402091, "node_id": "MDU6SXNzdWU0NDQ0MDIwOTE=", "number": 42, "title": "spellchecker in pypi", "user": {"login": "grofte", "id": 7976840, "node_id": "MDQ6VXNlcjc5NzY4NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7976840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grofte", "html_url": "https://github.com/grofte", "followers_url": "https://api.github.com/users/grofte/followers", "following_url": "https://api.github.com/users/grofte/following{/other_user}", "gists_url": "https://api.github.com/users/grofte/gists{/gist_id}", "starred_url": "https://api.github.com/users/grofte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grofte/subscriptions", "organizations_url": "https://api.github.com/users/grofte/orgs", "repos_url": "https://api.github.com/users/grofte/repos", "events_url": "https://api.github.com/users/grofte/events{/privacy}", "received_events_url": "https://api.github.com/users/grofte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-15T12:09:14Z", "updated_at": "2019-05-15T15:55:28Z", "closed_at": "2019-05-15T15:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you accidentally install `spellchecker` instead of `pyspellchecker` you get something installed and it's version 0.4.0 but it just doesn't work. Is it yours? Can you remove it so people don't accidentally install the wrong library? It's an easy mistake to make when the import command is for `spellchecker`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/41", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/41/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/41/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/41", "id": 442966690, "node_id": "MDU6SXNzdWU0NDI5NjY2OTA=", "number": 41, "title": "An error with python2.7: ValueError: Invalid mode ('rtb')", "user": {"login": "limengmingx", "id": 26565338, "node_id": "MDQ6VXNlcjI2NTY1MzM4", "avatar_url": "https://avatars0.githubusercontent.com/u/26565338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/limengmingx", "html_url": "https://github.com/limengmingx", "followers_url": "https://api.github.com/users/limengmingx/followers", "following_url": "https://api.github.com/users/limengmingx/following{/other_user}", "gists_url": "https://api.github.com/users/limengmingx/gists{/gist_id}", "starred_url": "https://api.github.com/users/limengmingx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/limengmingx/subscriptions", "organizations_url": "https://api.github.com/users/limengmingx/orgs", "repos_url": "https://api.github.com/users/limengmingx/repos", "events_url": "https://api.github.com/users/limengmingx/events{/privacy}", "received_events_url": "https://api.github.com/users/limengmingx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-11T07:58:47Z", "updated_at": "2019-05-13T13:12:00Z", "closed_at": "2019-05-13T01:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try the testing code:\r\n```\r\nfrom spellchecker import SpellChecker\r\n\r\nspell = SpellChecker()\r\n```\r\nan get the error as below  :\r\n```\r\nTraceback (most recent call last):\r\n  File \"1.py\", line 4, in <module>\r\n    spell = SpellChecker()\r\n  File \"C:\\Python27\\lib\\site-packages\\spellchecker\\spellchecker.py\", line 43, in __init__\r\n    self._word_frequency.load_dictionary(full_filename)\r\n  File \"C:\\Python27\\lib\\site-packages\\spellchecker\\spellchecker.py\", line 327, in load_dictionary\r\n    with load_file(filename, encoding) as data:\r\n  File \"C:\\Python27\\lib\\contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"C:\\Python27\\lib\\site-packages\\spellchecker\\utils.py\", line 27, in load_file\r\n    with gzip.open(filename, mode=\"rt\") as fobj:\r\n  File \"C:\\Python27\\lib\\gzip.py\", line 34, in open\r\n    return GzipFile(filename, mode, compresslevel)\r\n  File \"C:\\Python27\\lib\\gzip.py\", line 94, in __init__\r\n    fileobj = self.myfileobj = __builtin__.open(filename, mode or 'rb')\r\nValueError: Invalid mode ('rtb')\r\n```\r\n\r\n\r\nThe pyspellchecker is installed by : pip install pyspellchecker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/39", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/39/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/39/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/39", "id": 425046546, "node_id": "MDU6SXNzdWU0MjUwNDY1NDY=", "number": 39, "title": "Use Trie for spelling check", "user": {"login": "diegoepaezm", "id": 48925079, "node_id": "MDQ6VXNlcjQ4OTI1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/48925079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegoepaezm", "html_url": "https://github.com/diegoepaezm", "followers_url": "https://api.github.com/users/diegoepaezm/followers", "following_url": "https://api.github.com/users/diegoepaezm/following{/other_user}", "gists_url": "https://api.github.com/users/diegoepaezm/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegoepaezm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegoepaezm/subscriptions", "organizations_url": "https://api.github.com/users/diegoepaezm/orgs", "repos_url": "https://api.github.com/users/diegoepaezm/repos", "events_url": "https://api.github.com/users/diegoepaezm/events{/privacy}", "received_events_url": "https://api.github.com/users/diegoepaezm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-25T18:13:38Z", "updated_at": "2019-11-25T00:11:13Z", "closed_at": "2019-11-25T00:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The spelling checker takes a lot of time checking the spelling of words. Especially if a word is not in the dictionary it takes even longer, which can make spelling check of several words a really long process. Besides the current approach only allows only search up to 2 in distance of levenshtein. Thus it would be convenient to:\r\n1. Use dynamic programming to calculate edit distances in general, to allow any distance (distances greater than 2 will only make sense when using a trie approach, see point 2).\r\n2. Use a trie as a data structure for the dictionary to enable faster lookups (instead of computing all words within 1 or 2 edit distances).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/38", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/38/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/38/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/38", "id": 419095185, "node_id": "MDU6SXNzdWU0MTkwOTUxODU=", "number": 38, "title": "Set tokenizer on init", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-09T17:25:28Z", "updated_at": "2019-04-19T12:58:58Z", "closed_at": "2019-04-19T12:58:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Adding the tokenizer to use in the initialization script would make it easier for users to utilize instead of having to pass the tokenizer in for each loading of text or a file. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/36", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/36/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/36/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/36", "id": 418857481, "node_id": "MDU6SXNzdWU0MTg4NTc0ODE=", "number": 36, "title": "Ensure tokenizer uses lowercase", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-08T16:23:45Z", "updated_at": "2019-03-09T17:21:15Z", "closed_at": "2019-03-09T17:21:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related to #34 - ensure that the provided tokenizer uses lowercase like the default tokenizer. \r\n\r\nWe should also add some tests for the tokenizer. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/34", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/34/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/34/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/34", "id": 417511123, "node_id": "MDU6SXNzdWU0MTc1MTExMjM=", "number": 34, "title": "add custom tokenizer", "user": {"login": "ArmandGiraud", "id": 22575341, "node_id": "MDQ6VXNlcjIyNTc1MzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/22575341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArmandGiraud", "html_url": "https://github.com/ArmandGiraud", "followers_url": "https://api.github.com/users/ArmandGiraud/followers", "following_url": "https://api.github.com/users/ArmandGiraud/following{/other_user}", "gists_url": "https://api.github.com/users/ArmandGiraud/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArmandGiraud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArmandGiraud/subscriptions", "organizations_url": "https://api.github.com/users/ArmandGiraud/orgs", "repos_url": "https://api.github.com/users/ArmandGiraud/repos", "events_url": "https://api.github.com/users/ArmandGiraud/events{/privacy}", "received_events_url": "https://api.github.com/users/ArmandGiraud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-05T21:32:59Z", "updated_at": "2019-03-08T01:26:17Z", "closed_at": "2019-03-08T01:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nThanks for your great project!\r\n\r\n I would like to know if it is possible to change the tokenizer used for computing frequencies.\r\n\r\nFor example I use the [spaCy tokenizer](https://spacy.io/api/token) for french.\r\n\r\nfor the following french sentence:\r\n\r\n`\"l'attaque de non-concurrence: un rendez-vous pour cette nouvelle rentr\u00e9e\"`\r\nthe spaCy tokenizer will output the following word sequence\r\n\r\n```\r\n[\"l'\",\r\n 'attaque ',\r\n 'de ',\r\n 'non-concurrence',\r\n ': ',\r\n 'un ',\r\n 'rendez-vous ',\r\n 'pour ',\r\n 'cette ',\r\n 'nouvelle ',\r\n 'd\u00e9marches',\r\n '/',\r\n 'plan']\r\n```\r\n\r\nAs a consequence pyspellchecker will always try to correct words having a dash like `rendez-vous` since it was differently tokenized (i.e. [\"rendez\", \"vous\"] which have a completely different meaning)\r\nwould it be possible to include a custom tokenizer when loading a custom frequency file (e.g. )\r\n\r\n`spell.word_frequency.load_text_file(\"./my_txt_file\", tokenizer=spacy_tokenizer)`\r\n\r\nI did not try but maybe simply using a custom word_frequency dict will do the job?\r\nspell.word_frequency.load_dictionary('./path-to-my-word-frequency.json')\r\n\r\nthanks for your help\r\nArmand ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/31", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/31/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/31/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/31", "id": 404123904, "node_id": "MDU6SXNzdWU0MDQxMjM5MDQ=", "number": 31, "title": "User Interface", "user": {"login": "iyayaya", "id": 43810944, "node_id": "MDQ6VXNlcjQzODEwOTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/43810944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyayaya", "html_url": "https://github.com/iyayaya", "followers_url": "https://api.github.com/users/iyayaya/followers", "following_url": "https://api.github.com/users/iyayaya/following{/other_user}", "gists_url": "https://api.github.com/users/iyayaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyayaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyayaya/subscriptions", "organizations_url": "https://api.github.com/users/iyayaya/orgs", "repos_url": "https://api.github.com/users/iyayaya/repos", "events_url": "https://api.github.com/users/iyayaya/events{/privacy}", "received_events_url": "https://api.github.com/users/iyayaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-29T05:03:53Z", "updated_at": "2019-01-31T19:35:43Z", "closed_at": "2019-01-29T13:14:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to make a user interface in this code? What plugins can you suggest? Thank you!\r\nAnd also, is there another scientific solution to use in correcting the problems in capitalization? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/28", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/28/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/28/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/28", "id": 385595666, "node_id": "MDU6SXNzdWUzODU1OTU2NjY=", "number": 28, "title": "Word frequency/dictionary", "user": {"login": "iyayaya", "id": 43810944, "node_id": "MDQ6VXNlcjQzODEwOTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/43810944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyayaya", "html_url": "https://github.com/iyayaya", "followers_url": "https://api.github.com/users/iyayaya/followers", "following_url": "https://api.github.com/users/iyayaya/following{/other_user}", "gists_url": "https://api.github.com/users/iyayaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyayaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyayaya/subscriptions", "organizations_url": "https://api.github.com/users/iyayaya/orgs", "repos_url": "https://api.github.com/users/iyayaya/repos", "events_url": "https://api.github.com/users/iyayaya/events{/privacy}", "received_events_url": "https://api.github.com/users/iyayaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-29T06:58:54Z", "updated_at": "2018-11-30T14:41:08Z", "closed_at": "2018-11-30T14:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. We want to add some words to the dictionary but we were not able to find and access it. How can we possibly access the word frequency/dictionary? Also, can we limit the words suggested by the pyspellchecker cuz in some cases, it suggests a lot words after spell checking. \r\n\r\nPlease help us out. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/27", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/27/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/27/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/27", "id": 385053845, "node_id": "MDU6SXNzdWUzODUwNTM4NDU=", "number": 27, "title": "How to add new words to the dictionary?", "user": {"login": "alonsopg", "id": 13632106, "node_id": "MDQ6VXNlcjEzNjMyMTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/13632106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsopg", "html_url": "https://github.com/alonsopg", "followers_url": "https://api.github.com/users/alonsopg/followers", "following_url": "https://api.github.com/users/alonsopg/following{/other_user}", "gists_url": "https://api.github.com/users/alonsopg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsopg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsopg/subscriptions", "organizations_url": "https://api.github.com/users/alonsopg/orgs", "repos_url": "https://api.github.com/users/alonsopg/repos", "events_url": "https://api.github.com/users/alonsopg/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsopg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-28T00:57:52Z", "updated_at": "2018-12-12T10:17:40Z", "closed_at": "2018-12-12T10:17:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the docs, as far as I understood you can add new words as follows:\r\n```\r\nfrom spellchecker import SpellChecker\r\nspell = SpellChecker(distance=1)\r\nspell.word_frequency.load_words(['words', 'to', 'be','added', 'to', 'the', 'system', 'Addis Abeba'])\r\n```\r\nHowever, I am trying to correct the word \"Addis Abeba\", as follows and it doesn't work:\r\n\r\n\r\nIn:\r\n\r\n```\r\nmisspelled = spell.unknown(['something', 'is', 'hapenning', 'here', 'Adis abebba'])\r\nfor word in misspelled:\r\n    print(spell.correction(word))\r\n    print(spell.candidates(word))\r\n```\r\n\r\nOut:\r\n\r\n```\r\nAdis abebba\r\n{'Adis abebba'}\r\nhapenning\r\n{'hapenning'}\r\n\r\n```\r\n\r\nThus, how can I add do my dictionary the word: \"Adis abebba\" in order to spell and correct words like \"Addis abeba\" or \"Adiis abebbba\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/26", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/26/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/26/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/26", "id": 381882753, "node_id": "MDU6SXNzdWUzODE4ODI3NTM=", "number": 26, "title": "How to add new language", "user": {"login": "MukhtarShaima", "id": 45080154, "node_id": "MDQ6VXNlcjQ1MDgwMTU0", "avatar_url": "https://avatars2.githubusercontent.com/u/45080154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MukhtarShaima", "html_url": "https://github.com/MukhtarShaima", "followers_url": "https://api.github.com/users/MukhtarShaima/followers", "following_url": "https://api.github.com/users/MukhtarShaima/following{/other_user}", "gists_url": "https://api.github.com/users/MukhtarShaima/gists{/gist_id}", "starred_url": "https://api.github.com/users/MukhtarShaima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MukhtarShaima/subscriptions", "organizations_url": "https://api.github.com/users/MukhtarShaima/orgs", "repos_url": "https://api.github.com/users/MukhtarShaima/repos", "events_url": "https://api.github.com/users/MukhtarShaima/events{/privacy}", "received_events_url": "https://api.github.com/users/MukhtarShaima/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 846692812, "node_id": "MDU6TGFiZWw4NDY2OTI4MTI=", "url": "https://api.github.com/repos/barrust/pyspellchecker/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-17T17:25:39Z", "updated_at": "2019-03-28T10:43:08Z", "closed_at": "2019-01-06T01:15:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will you please give me clear instructions or steps ,so that I can add Urdu language,as I'm not able to download the Urdu file from that link which you mentioned.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/24", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/24/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/24/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/24", "id": 378351468, "node_id": "MDU6SXNzdWUzNzgzNTE0Njg=", "number": 24, "title": "Version 0.2.0 is broken", "user": {"login": "marchezinixd", "id": 14189066, "node_id": "MDQ6VXNlcjE0MTg5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/14189066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marchezinixd", "html_url": "https://github.com/marchezinixd", "followers_url": "https://api.github.com/users/marchezinixd/followers", "following_url": "https://api.github.com/users/marchezinixd/following{/other_user}", "gists_url": "https://api.github.com/users/marchezinixd/gists{/gist_id}", "starred_url": "https://api.github.com/users/marchezinixd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marchezinixd/subscriptions", "organizations_url": "https://api.github.com/users/marchezinixd/orgs", "repos_url": "https://api.github.com/users/marchezinixd/repos", "events_url": "https://api.github.com/users/marchezinixd/events{/privacy}", "received_events_url": "https://api.github.com/users/marchezinixd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-11-07T15:57:15Z", "updated_at": "2020-07-19T16:45:56Z", "closed_at": "2018-11-17T02:07:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again,\r\nThis time i'm here because the version 0.2.0 is broken for python 3. It needs the indexer library and this library is only available for python2. \r\nThe version 0.1.5 have no errors.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/23", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/23/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/23/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/23", "id": 377449262, "node_id": "MDU6SXNzdWUzNzc0NDkyNjI=", "number": 23, "title": "Add Portuguese dictionary ", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-05T15:26:30Z", "updated_at": "2018-11-06T01:40:06Z", "closed_at": "2018-11-06T01:40:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/22", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/22/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/22/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/22", "id": 377361604, "node_id": "MDU6SXNzdWUzNzczNjE2MDQ=", "number": 22, "title": "Is it possible to add other languages dictionaries?", "user": {"login": "marchezinixd", "id": 14189066, "node_id": "MDQ6VXNlcjE0MTg5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/14189066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marchezinixd", "html_url": "https://github.com/marchezinixd", "followers_url": "https://api.github.com/users/marchezinixd/followers", "following_url": "https://api.github.com/users/marchezinixd/following{/other_user}", "gists_url": "https://api.github.com/users/marchezinixd/gists{/gist_id}", "starred_url": "https://api.github.com/users/marchezinixd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marchezinixd/subscriptions", "organizations_url": "https://api.github.com/users/marchezinixd/orgs", "repos_url": "https://api.github.com/users/marchezinixd/repos", "events_url": "https://api.github.com/users/marchezinixd/events{/privacy}", "received_events_url": "https://api.github.com/users/marchezinixd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-05T11:37:22Z", "updated_at": "2018-11-05T14:13:24Z", "closed_at": "2018-11-05T14:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to use this library to fix typos done when adding additional information about a problem, but it's no restricted to english and spanish, we would like portuguese etc. Is there a way for me to download a dict and add it to the library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/21", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/21/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/21/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/21", "id": 377360333, "node_id": "MDU6SXNzdWUzNzczNjAzMzM=", "number": 21, "title": "UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 438: ordinal not in range(128)", "user": {"login": "marchezinixd", "id": 14189066, "node_id": "MDQ6VXNlcjE0MTg5MDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/14189066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marchezinixd", "html_url": "https://github.com/marchezinixd", "followers_url": "https://api.github.com/users/marchezinixd/followers", "following_url": "https://api.github.com/users/marchezinixd/following{/other_user}", "gists_url": "https://api.github.com/users/marchezinixd/gists{/gist_id}", "starred_url": "https://api.github.com/users/marchezinixd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marchezinixd/subscriptions", "organizations_url": "https://api.github.com/users/marchezinixd/orgs", "repos_url": "https://api.github.com/users/marchezinixd/repos", "events_url": "https://api.github.com/users/marchezinixd/events{/privacy}", "received_events_url": "https://api.github.com/users/marchezinixd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-05T11:34:18Z", "updated_at": "2018-11-05T17:39:46Z", "closed_at": "2018-11-05T17:39:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm having an issue when trying to call SpellChecker in other languages. English work fine, but all the other throws the following error.\r\n\r\n```\r\nfrom spellchecker import SpellChecker\r\nspell = SpellChecker('es')\r\n```\r\n\r\n> UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 438: ordinal not in range(128)\r\n\r\nAny idea of what's going on and how can i solve it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/16", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/16/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/16/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/16", "id": 365692571, "node_id": "MDU6SXNzdWUzNjU2OTI1NzE=", "number": 16, "title": "Word Frequency Threshold", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 846692808, "node_id": "MDU6TGFiZWw4NDY2OTI4MDg=", "url": "https://api.github.com/repos/barrust/pyspellchecker/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T00:23:24Z", "updated_at": "2018-10-03T02:03:26Z", "closed_at": "2018-10-03T02:03:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Per a comment by @ksingha5 in #'12, it would be nice to have the ability to remove all words under a certain threshold. \r\n\r\nsomething like: \r\n\r\n``` python\r\nfrom spellchecker import SpellChecker\r\nspell = SpellChecker()\r\nspell.word_frequency.remove_by_threshold(10)  # remove all words that have 10 or fewer instances\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/13", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/13/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/13/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/13", "id": 364629298, "node_id": "MDU6SXNzdWUzNjQ2MjkyOTg=", "number": 13, "title": "Add ability to remove words from the dictionary", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-27T19:53:28Z", "updated_at": "2018-09-27T23:54:01Z", "closed_at": "2018-09-27T23:54:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be beneficial to provide a method for users to remove words from the dictionary. This could be used to remove words in the dictionary that are incorrect (such as 'teh' in English)\r\n\r\nSee #12 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/10", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/10/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/10/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/10", "id": 347316545, "node_id": "MDU6SXNzdWUzNDczMTY1NDU=", "number": 10, "title": "Unable to read dictionary ", "user": {"login": "Atul997", "id": 19590378, "node_id": "MDQ6VXNlcjE5NTkwMzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/19590378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atul997", "html_url": "https://github.com/Atul997", "followers_url": "https://api.github.com/users/Atul997/followers", "following_url": "https://api.github.com/users/Atul997/following{/other_user}", "gists_url": "https://api.github.com/users/Atul997/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atul997/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atul997/subscriptions", "organizations_url": "https://api.github.com/users/Atul997/orgs", "repos_url": "https://api.github.com/users/Atul997/repos", "events_url": "https://api.github.com/users/Atul997/events{/privacy}", "received_events_url": "https://api.github.com/users/Atul997/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-03T09:01:56Z", "updated_at": "2020-04-06T07:53:57Z", "closed_at": "2018-08-03T13:32:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i am initializing the SpellChecker it throws me error \r\nspell = SpellChecker()\r\n\"ValueError: The provided dictionary language (en) does not exist!\"\r\n\r\nHow to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/9", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/9/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/9/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/9", "id": 339513586, "node_id": "MDU6SXNzdWUzMzk1MTM1ODY=", "number": 9, "title": "Wrongly corrects all punctuation into 'a'", "user": {"login": "f0lie", "id": 9092074, "node_id": "MDQ6VXNlcjkwOTIwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9092074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0lie", "html_url": "https://github.com/f0lie", "followers_url": "https://api.github.com/users/f0lie/followers", "following_url": "https://api.github.com/users/f0lie/following{/other_user}", "gists_url": "https://api.github.com/users/f0lie/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0lie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0lie/subscriptions", "organizations_url": "https://api.github.com/users/f0lie/orgs", "repos_url": "https://api.github.com/users/f0lie/repos", "events_url": "https://api.github.com/users/f0lie/events{/privacy}", "received_events_url": "https://api.github.com/users/f0lie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-09T16:06:24Z", "updated_at": "2018-07-10T00:18:49Z", "closed_at": "2018-07-10T00:18:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> from spellchecker import SpellChecker\r\n>>> spell = SpellChecker()\r\n>>> spell.correction('-')\r\n'a'\r\n>>> spell.correction(',')\r\n'a'\r\n>>> from string import punctuation\r\n>>> [spell.correction(punc) for punc in punctuation]\r\n['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/6", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/6/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/6/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/6", "id": 324681278, "node_id": "MDU6SXNzdWUzMjQ2ODEyNzg=", "number": 6, "title": "does not recognise English", "user": {"login": "PradeepOjha", "id": 11005985, "node_id": "MDQ6VXNlcjExMDA1OTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/11005985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PradeepOjha", "html_url": "https://github.com/PradeepOjha", "followers_url": "https://api.github.com/users/PradeepOjha/followers", "following_url": "https://api.github.com/users/PradeepOjha/following{/other_user}", "gists_url": "https://api.github.com/users/PradeepOjha/gists{/gist_id}", "starred_url": "https://api.github.com/users/PradeepOjha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PradeepOjha/subscriptions", "organizations_url": "https://api.github.com/users/PradeepOjha/orgs", "repos_url": "https://api.github.com/users/PradeepOjha/repos", "events_url": "https://api.github.com/users/PradeepOjha/events{/privacy}", "received_events_url": "https://api.github.com/users/PradeepOjha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-20T03:54:55Z", "updated_at": "2018-05-22T01:29:17Z", "closed_at": "2018-05-22T01:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "from spellchecker import SpellChecker\r\n\r\nspell = SpellChecker()\r\n\r\n# find those words that may be misspelled\r\nmisspelled = spell.unknown(['something', 'is', 'hapenning', 'here'])\r\n\r\nResult -----\r\n\r\n\r\n  File \"C:\\Users\\xyz\\Miniconda2\\lib\\site-packages\\spellchecker\\spellchecker.py\", line 35, in __init__\r\n    raise ValueError(msg)\r\n\r\nValueError: The provided dictionary language (en) does not exist!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/5", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/5/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/5/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/5", "id": 306249305, "node_id": "MDU6SXNzdWUzMDYyNDkzMDU=", "number": 5, "title": "Export word frequency dictionary", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 846692808, "node_id": "MDU6TGFiZWw4NDY2OTI4MDg=", "url": "https://api.github.com/repos/barrust/pyspellchecker/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-18T15:20:28Z", "updated_at": "2018-10-06T22:47:18Z", "closed_at": "2018-10-06T22:47:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The ability to export a word frequency dictionary would allow us to better support users utilizing a custom dictionary. \r\n\r\nUse case:\r\n1) Use loads the english dictionary and then loads text about programming languages\r\n2) Instead of having to do this for every instance, it would be better if the user could export or save the dictionary so that they can simply load this dictionary in the future.\r\n3) This would also allow for spellchecking programs to allow for easier `Add Word` type functionality. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/3", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/3/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/3/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/3", "id": 299989410, "node_id": "MDU6SXNzdWUyOTk5ODk0MTA=", "number": 3, "title": "Multiple Dictionary Support", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-25T01:49:54Z", "updated_at": "2018-03-17T16:13:05Z", "closed_at": "2018-03-17T16:13:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Adding a standardized way to store and load different dictionaries will allow the package to be used in different languages. \r\n\r\nA few options include: \r\n- Pickle word_frequency lists\r\n- JSON formatted word_frequency lists\r\n- others? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/barrust/pyspellchecker/issues/2", "repository_url": "https://api.github.com/repos/barrust/pyspellchecker", "labels_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/2/comments", "events_url": "https://api.github.com/repos/barrust/pyspellchecker/issues/2/events", "html_url": "https://github.com/barrust/pyspellchecker/issues/2", "id": 299989318, "node_id": "MDU6SXNzdWUyOTk5ODkzMTg=", "number": 2, "title": "readthedocs support", "user": {"login": "barrust", "id": 3161814, "node_id": "MDQ6VXNlcjMxNjE4MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3161814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrust", "html_url": "https://github.com/barrust", "followers_url": "https://api.github.com/users/barrust/followers", "following_url": "https://api.github.com/users/barrust/following{/other_user}", "gists_url": "https://api.github.com/users/barrust/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrust/subscriptions", "organizations_url": "https://api.github.com/users/barrust/orgs", "repos_url": "https://api.github.com/users/barrust/repos", "events_url": "https://api.github.com/users/barrust/events{/privacy}", "received_events_url": "https://api.github.com/users/barrust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-25T01:47:49Z", "updated_at": "2018-03-04T15:44:37Z", "closed_at": "2018-03-04T15:44:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Getting better documentation of the package will make using and extending it easier for everyone. \r\n\r\n- [x] Add sphinx autodocs\r\n- [x] Convert README.md to README.rst\r\n- [x] Improve the docstrings ", "performed_via_github_app": null, "score": 1.0}]}