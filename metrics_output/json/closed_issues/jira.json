{"total_count": 425, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pycontribs/jira/issues/954", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/954/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/954/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/954/events", "html_url": "https://github.com/pycontribs/jira/issues/954", "id": 663654953, "node_id": "MDU6SXNzdWU2NjM2NTQ5NTM=", "number": 954, "title": "allow access to custom fields of an issue", "user": {"login": "stardust85", "id": 3637559, "node_id": "MDQ6VXNlcjM2Mzc1NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3637559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stardust85", "html_url": "https://github.com/stardust85", "followers_url": "https://api.github.com/users/stardust85/followers", "following_url": "https://api.github.com/users/stardust85/following{/other_user}", "gists_url": "https://api.github.com/users/stardust85/gists{/gist_id}", "starred_url": "https://api.github.com/users/stardust85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stardust85/subscriptions", "organizations_url": "https://api.github.com/users/stardust85/orgs", "repos_url": "https://api.github.com/users/stardust85/repos", "events_url": "https://api.github.com/users/stardust85/events{/privacy}", "received_events_url": "https://api.github.com/users/stardust85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T10:30:19Z", "updated_at": "2020-07-23T08:16:36Z", "closed_at": "2020-07-23T08:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nno\r\n\r\n**Describe the solution you'd like**\r\nAccess values of custom fields. At least for read. Probably by providing a dict called custom_fields. something like my_issue.get_custom_fields()\r\n\r\n**Describe alternatives you've considered**\r\nUsing requests directly.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/952", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/952/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/952/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/952/events", "html_url": "https://github.com/pycontribs/jira/issues/952", "id": 652139936, "node_id": "MDU6SXNzdWU2NTIxMzk5MzY=", "number": 952, "title": "Need help authenticating properly with an API token", "user": {"login": "pabgan", "id": 2458157, "node_id": "MDQ6VXNlcjI0NTgxNTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2458157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pabgan", "html_url": "https://github.com/pabgan", "followers_url": "https://api.github.com/users/pabgan/followers", "following_url": "https://api.github.com/users/pabgan/following{/other_user}", "gists_url": "https://api.github.com/users/pabgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pabgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pabgan/subscriptions", "organizations_url": "https://api.github.com/users/pabgan/orgs", "repos_url": "https://api.github.com/users/pabgan/repos", "events_url": "https://api.github.com/users/pabgan/events{/privacy}", "received_events_url": "https://api.github.com/users/pabgan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T08:59:03Z", "updated_at": "2020-07-21T14:14:23Z", "closed_at": "2020-07-21T14:14:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to create a simple script, sorry.\r\n\r\nEverything I need works fine in the `jirashell`.\r\n```\r\n$ jirashell -s https://my-comp.atlassian.net -u 'user@my-comp.com' -p \"plaintextAPItoken\"\r\n\r\n*** JIRA shell active; client is in 'jira'. Press Ctrl-D to exit.\r\n\r\nIn [1]: issue = jira.issue('DSLE-21230')\r\n\r\nIn [2]: print(issue.fields.summary)\r\nCommon: merge dcpc_snmp_rfc2662 into snmp_common_util\r\n```\r\nBut my simple script:\r\n```\r\n$ cat jira-turbo.py\r\n#!/usr/bin/python3\r\nfrom collections import Counter\r\nfrom jira import JIRA\r\n\r\n# By default, the client will connect to a Jira instance started from the Atlassian Plugin SDK.\r\n# See\r\n# https://developer.atlassian.com/display/DOCS/Installing+the+Atlassian+Plugin+SDK\r\n# for details.\r\njac = JIRA('https://my-comp.atlassian.net', basic_auth=('user@my-comp.net', \"plaintextAPItoken\"))\r\n\r\nissue=jac.issue('DSLE-21230')\r\nprint(issue.fields.summary)\r\n```\r\ndoes not have permissions for that:\r\n```\r\n$ ./jira-turbo.py\r\nTraceback (most recent call last):\r\n  File \"./jira-turbo.py\", line 18, in <module>\r\n    issue=jac.issue('DSLE-21230')\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/client.py\", line 1071, in issue\r\n    issue.find(id, params=params)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/resources.py\", line 201, in find\r\n    self._load(url, params=params)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/resources.py\", line 316, in _load\r\n    r = self._session.get(url, headers=headers, params=params)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/resilientsession.py\", line 151, in get\r\n    return self.__verb('GET', url, **kwargs)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\njira.exceptions.JIRAError: JiraError HTTP 404 url: https://my-comp.atlassian.net/rest/api/2/issue/DSLE-21230\r\n        text: Issue does not exist or you do not have permission to see it.\r\n\r\n        response headers = {'Server': 'AtlassianProxy/1.15.8.1', 'Vary': 'Accept-Encoding', 'Cache-Control': 'no-cache, no-store, no-transform', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Encoding': 'gzip', 'Strict-Transport-Security': 'max-age=315360000; includeSubDomains; preload', 'Date': 'Tue, 07 Jul 2020 08:47:25 GMT', 'ATL-TraceId': '0915199bd5734db8', 'X-AREQUESTID': '06c237e4-b3a5-4586-a62d-850a27cf97b9', 'X-XSS-Protection': '1; mode=block', 'Transfer-Encoding': 'chunked', 'Timing-Allow-Origin': '*', 'X-Content-Type-Options': 'nosniff', 'Micros-Issuer': 'micros/edge-authenticator', 'Connection': 'keep-alive', 'Expect-CT': 'report-uri=\"https://web-security-reports.services.atlassian.com/expect-ct-report/global-proxy\", enforce, max-age=86400'}\r\n        response text = {\"errorMessages\":[\"Issue does not exist or you do not have permission to see it.\"],\"errors\":{}}\r\n```\r\nChanging the password makes it fail with:\r\n```\r\nARNING:root:Got recoverable error from GET https://my-comp.atlassian.net/rest/api/2/serverInfo, will retry [1/3] in 14.01382243613401s. Err: 401 Unauthorized\r\n```\r\nSo I have no idea what is happening.\r\n\r\nThank you very much in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/947", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/947/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/947/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/947/events", "html_url": "https://github.com/pycontribs/jira/issues/947", "id": 635464417, "node_id": "MDU6SXNzdWU2MzU0NjQ0MTc=", "number": 947, "title": "[question] Possible to create project-versions?", "user": {"login": "simkin", "id": 958263, "node_id": "MDQ6VXNlcjk1ODI2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/958263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simkin", "html_url": "https://github.com/simkin", "followers_url": "https://api.github.com/users/simkin/followers", "following_url": "https://api.github.com/users/simkin/following{/other_user}", "gists_url": "https://api.github.com/users/simkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simkin/subscriptions", "organizations_url": "https://api.github.com/users/simkin/orgs", "repos_url": "https://api.github.com/users/simkin/repos", "events_url": "https://api.github.com/users/simkin/events{/privacy}", "received_events_url": "https://api.github.com/users/simkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T14:10:05Z", "updated_at": "2020-06-09T18:14:49Z", "closed_at": "2020-06-09T18:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could someone advise if it is possible to create project versions with this module? Reason I ask is that when I create a new issue this sometimes fails because the version(s) do not (yet) exists in the project. I hope to build in an exception catcher that creates the version in these cases.\r\n\r\ne.g. i hope that I can loop through versions/fixVersions and get them created in a target project\r\n```\r\n    new = jira.create_issue(project=project,\r\n                            issuetype={'name': 'Bug'},\r\n                            summary=parent.fields.summary,\r\n                            versions=[{'name': v.name} for v in parent.fields.versions],\r\n                            fixVersions=[{'name': v.name} for v in parent.fields.fixVersions],\r\n                            components=[{'name': 'unknown'}],\r\n                            reporter={'name': parent.fields.reporter.name},\r\n                            priority={'id': bug_prio},\r\n                            description=parent.fields.description)\r\n```\r\n\r\nEdit: see https://jira.readthedocs.io/en/master/api.html?highlight=create_version#jira.JIRA.create_version\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/936", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/936/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/936/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/936/events", "html_url": "https://github.com/pycontribs/jira/issues/936", "id": 614872907, "node_id": "MDU6SXNzdWU2MTQ4NzI5MDc=", "number": 936, "title": "Creating epics and getting 400: text: Can not deserialize instance of java.util.ArrayList out of VALUE_STRING token", "user": {"login": "simeneriks1", "id": 41788048, "node_id": "MDQ6VXNlcjQxNzg4MDQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/41788048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simeneriks1", "html_url": "https://github.com/simeneriks1", "followers_url": "https://api.github.com/users/simeneriks1/followers", "following_url": "https://api.github.com/users/simeneriks1/following{/other_user}", "gists_url": "https://api.github.com/users/simeneriks1/gists{/gist_id}", "starred_url": "https://api.github.com/users/simeneriks1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simeneriks1/subscriptions", "organizations_url": "https://api.github.com/users/simeneriks1/orgs", "repos_url": "https://api.github.com/users/simeneriks1/repos", "events_url": "https://api.github.com/users/simeneriks1/events{/privacy}", "received_events_url": "https://api.github.com/users/simeneriks1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T17:18:40Z", "updated_at": "2020-05-08T17:25:55Z", "closed_at": "2020-05-08T17:25:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n**Describe the bug**\r\nNot sure - creating an issue as type \"Epic\" seems to fail with this error:\r\n```\r\njira.exceptions.JIRAError: JiraError HTTP 400 url: https://domain.atlassian.net/rest/greenhopper/1.0/epics/45698/add\r\n        text: Can not deserialize instance of java.util.ArrayList out of VALUE_STRING token\r\n at [Source: org.apache.catalina.connector.CoyoteInputStream@51c433de; line: 1, column: 2] (through reference chain: com.atlassian.greenhopper.web.rapid.issue.issuelink.AddToEpicRequest[\"issueKeys\"])\r\n```\r\n\r\n**To Reproduce**\r\nHere is a function I've created, that triggers this issue\r\n```python\r\ndef assignIssueToEpic(the_issue, d): \r\n    #Expect epic-titles to be in the format of \"January-2025\"\r\n\r\n    #Find first and last day of month:\r\n    _firstDateInMonth = datetime.date(d.year, d.month, 1)\r\n    _lastDateInMonth = datetime.date(\r\n        d.year, d.month, calendar.monthrange(d.year, d.month)[-1])\r\n\r\n    epic_search = jira.search_issues(\r\n        \"project='USER' and issuetype = Epic and summary ~ '{}'\".format(str(d.strftime('%B %Y'))), maxResults=1)\r\n    if not len(epic_search):\r\n        issue_fields = {\r\n            'project': {'key': 'USER'},\r\n            'issuetype': {'name': 'Epic'},\r\n            'summary': d.strftime(\"%B %Y\"),\r\n            'duedate': _lastDateInMonth.isoformat(),\r\n            'customfield_10015': _firstDateInMonth.isoformat()\r\n        }\r\n        epic = jira.create_issue(fields=issue_fields) <<<------ STOPS HERE\r\n        jira.add_issues_to_epic(epic.id, the_issue.key, True)\r\n        sys.exit(\"test complete\")\r\n    else:\r\n        for epic in epic_search:\r\n            jira.add_issues_to_epic(epic.id, the_issue.key, True)\r\n```\r\n\r\n**Expected behavior**\r\nWell, I expected it to go through, but now I'm left with no clue what might be the cause.\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.9\r\njira-python: Don't know how to check, but tried with the latest public version via pip install.\r\nOS: Linux (Ubuntu 18.04)\r\n\r\n**Additional context**\r\nnone to add\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/934", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/934/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/934/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/934/events", "html_url": "https://github.com/pycontribs/jira/issues/934", "id": 608060116, "node_id": "MDU6SXNzdWU2MDgwNjAxMTY=", "number": 934, "title": "create issue failed", "user": {"login": "Helloyanxuan", "id": 31366611, "node_id": "MDQ6VXNlcjMxMzY2NjEx", "avatar_url": "https://avatars1.githubusercontent.com/u/31366611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Helloyanxuan", "html_url": "https://github.com/Helloyanxuan", "followers_url": "https://api.github.com/users/Helloyanxuan/followers", "following_url": "https://api.github.com/users/Helloyanxuan/following{/other_user}", "gists_url": "https://api.github.com/users/Helloyanxuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Helloyanxuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Helloyanxuan/subscriptions", "organizations_url": "https://api.github.com/users/Helloyanxuan/orgs", "repos_url": "https://api.github.com/users/Helloyanxuan/repos", "events_url": "https://api.github.com/users/Helloyanxuan/events{/privacy}", "received_events_url": "https://api.github.com/users/Helloyanxuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-28T06:29:22Z", "updated_at": "2020-08-04T03:11:59Z", "closed_at": "2020-04-28T06:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\n\r\ndef create_issue():\r\n    issue_dict = {\r\n        'project': {'id': 10000},\r\n        'summary': 'New issue from jira-python',\r\n        'description': 'Look into this one',\r\n        'issuetype': {'name': 'Bug'},\r\n    }\r\n    issues = jac.create_issue(fields=issue_dict)\r\n\r\njira.exceptions.JIRAError: JiraError HTTP 400 url: http://193.112.176.130:8000/rest/api/2/issue\r\n\ttext: valid issue type is required\r\n\t\r\n\tresponse headers = {'X-AREQUESTID': '855x414x1', 'X-ASESSIONID': '10pyb79', 'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'SAMEORIGIN', 'Content-Security-Policy': \"frame-ancestors 'self'\", 'X-ASEN': 'SEN-L15365559', 'X-Seraph-LoginReason': 'OK', 'X-AUSERNAME': 'franky', 'Cache-Control': 'no-cache, no-store, no-transform', 'Content-Encoding': 'gzip', 'Vary': 'User-Agent', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Tue, 28 Apr 2020 06:15:47 GMT', 'Connection': 'close'}\r\n\tresponse text = {\"errorMessages\":[],\"errors\":{\"issuetype\":\"valid issue type is required\"}}\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nCode block\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Stack Trace**\r\n```\r\nA code block with the any trace messages.\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: <VERSION>\r\njira-python: <VERSION>\r\nOS: <OPERATING SYSTEM>\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/923", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/923/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/923/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/923/events", "html_url": "https://github.com/pycontribs/jira/issues/923", "id": 597515093, "node_id": "MDU6SXNzdWU1OTc1MTUwOTM=", "number": 923, "title": "Invalid username or password recursively retries and locks Jira account", "user": {"login": "treewolf", "id": 12214656, "node_id": "MDQ6VXNlcjEyMjE0NjU2", "avatar_url": "https://avatars3.githubusercontent.com/u/12214656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treewolf", "html_url": "https://github.com/treewolf", "followers_url": "https://api.github.com/users/treewolf/followers", "following_url": "https://api.github.com/users/treewolf/following{/other_user}", "gists_url": "https://api.github.com/users/treewolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/treewolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treewolf/subscriptions", "organizations_url": "https://api.github.com/users/treewolf/orgs", "repos_url": "https://api.github.com/users/treewolf/repos", "events_url": "https://api.github.com/users/treewolf/events{/privacy}", "received_events_url": "https://api.github.com/users/treewolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T19:51:58Z", "updated_at": "2020-05-16T18:05:25Z", "closed_at": "2020-05-16T18:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a username or password is incorrect, the request will be tried 3 times, and only throw an exception after the third time, which would then lock the account. Is there a way to catch the very first 401 error?\r\n\r\n```python3\r\ntry:\r\n  jira = JIRA(options=self.jira_options[server_type], basic_auth=(\r\n    self.jira_creds[server_type]['user'], self.jira_creds[server_type]['password']))\r\n  return jira\r\nexcept:\r\n  print('Incorrect username or password')\r\n```\r\n\r\noutput\r\n```\r\nWARNING:root:Got recoverable error from GET <domain>, will retry [1/3] in 13.579639837287738s. Err: 401 \r\nWARNING:root:Got recoverable error from GET <domain> will retry [2/3] in 34.4860722264685s. Err: 401 \r\n^C\r\n```\r\n\r\n Expected output:\r\n\r\n```\r\n'Incorrect username or password'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/916", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/916/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/916/events", "html_url": "https://github.com/pycontribs/jira/issues/916", "id": 584546098, "node_id": "MDU6SXNzdWU1ODQ1NDYwOTg=", "number": 916, "title": "Info: How to get Required and Optional field for Issue creation in a Project", "user": {"login": "amritashesh", "id": 6963544, "node_id": "MDQ6VXNlcjY5NjM1NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6963544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amritashesh", "html_url": "https://github.com/amritashesh", "followers_url": "https://api.github.com/users/amritashesh/followers", "following_url": "https://api.github.com/users/amritashesh/following{/other_user}", "gists_url": "https://api.github.com/users/amritashesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/amritashesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amritashesh/subscriptions", "organizations_url": "https://api.github.com/users/amritashesh/orgs", "repos_url": "https://api.github.com/users/amritashesh/repos", "events_url": "https://api.github.com/users/amritashesh/events{/privacy}", "received_events_url": "https://api.github.com/users/amritashesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T16:38:58Z", "updated_at": "2020-03-19T18:56:53Z", "closed_at": "2020-03-19T18:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Not a Bug**\r\n\r\nI am trying figure out how to get list of Required and Optional field for an Issue creation. I am new to using this could not figure this out how to do this. \r\n\r\nDifferent projects have different Mandatory fields and have custom field names which are difficult to get looking at the UI. So was trying to figure this out for a particular Project how to get that info.\r\n\r\nThanks in advance !!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/915", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/915/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/915/events", "html_url": "https://github.com/pycontribs/jira/issues/915", "id": 584308358, "node_id": "MDU6SXNzdWU1ODQzMDgzNTg=", "number": 915, "title": "How to set Security Level", "user": {"login": "kst83", "id": 3646748, "node_id": "MDQ6VXNlcjM2NDY3NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3646748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kst83", "html_url": "https://github.com/kst83", "followers_url": "https://api.github.com/users/kst83/followers", "following_url": "https://api.github.com/users/kst83/following{/other_user}", "gists_url": "https://api.github.com/users/kst83/gists{/gist_id}", "starred_url": "https://api.github.com/users/kst83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kst83/subscriptions", "organizations_url": "https://api.github.com/users/kst83/orgs", "repos_url": "https://api.github.com/users/kst83/repos", "events_url": "https://api.github.com/users/kst83/events{/privacy}", "received_events_url": "https://api.github.com/users/kst83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T10:25:21Z", "updated_at": "2020-03-19T10:34:07Z", "closed_at": "2020-03-19T10:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to set the security level for an issue using this library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/890", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/890/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/890/events", "html_url": "https://github.com/pycontribs/jira/issues/890", "id": 547631410, "node_id": "MDU6SXNzdWU1NDc2MzE0MTA=", "number": 890, "title": "Method add_attachment() error with python 3.8 -- RuntimeError: dictionary keys changed during iteration", "user": {"login": "dannylui", "id": 9039401, "node_id": "MDQ6VXNlcjkwMzk0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9039401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannylui", "html_url": "https://github.com/dannylui", "followers_url": "https://api.github.com/users/dannylui/followers", "following_url": "https://api.github.com/users/dannylui/following{/other_user}", "gists_url": "https://api.github.com/users/dannylui/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannylui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannylui/subscriptions", "organizations_url": "https://api.github.com/users/dannylui/orgs", "repos_url": "https://api.github.com/users/dannylui/repos", "events_url": "https://api.github.com/users/dannylui/events{/privacy}", "received_events_url": "https://api.github.com/users/dannylui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T17:56:02Z", "updated_at": "2020-06-25T15:10:43Z", "closed_at": "2020-03-31T09:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen calling the add_attachment method in python 3.8, we hit RuntimeError: dictionary keys changed during iteration.  We verified that rolling back to python 3.7, the same code works as expected.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\njira.add_attachment(issue=issue, attachment='/some/path/attachment.txt')\r\n```\r\n1. No additional steps.\r\n\r\n**Expected behavior**\r\nFile attachement uploaded to JIRA and attached to issue.\r\n\r\n**Stack Trace**\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_attachments.py\", line 302, in <module>\r\n    main()\r\n  File \"test_attachments.py\", line 298, in main\r\n    test.attachments(args)\r\n  File \"test_attachments.py\", line 207, in migrate\r\n    self._jira.add_attachment(issue=issue, attachment=attachment_path)\r\n  File \"C:\\Users\\dlui\\workspace\\test_attachments\\venv\\lib\\site-packages\\jira\\client.py\", line 126, in wrapper\r\n    result = func(*arg_list, **kwargs)\r\n  File \"C:\\Users\\dlui\\workspace\\test_attachments\\venv\\lib\\site-packages\\jira\\client.py\", line 787, in add_attachment\r\n    url, data=m, headers=CaseInsensitiveDict({'content-type': m.content_type, 'X-Atlassian-Token': 'nocheck'}), retry_data=file_stream)\r\n  File \"C:\\Users\\dlui\\workspace\\test_attachments\\venv\\lib\\site-packages\\jira\\utils\\__init__.py\", line 41, in __init__\r\n    for key, value in super(CaseInsensitiveDict, self).items():\r\nRuntimeError: dictionary keys changed during iteration```\r\n```\r\n\r\n**Version Information**\r\nPython Interpreter: 3.8\r\njira-python: 2.0.0\r\nOS: Windows 10\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nNone", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/889", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/889/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/889/events", "html_url": "https://github.com/pycontribs/jira/issues/889", "id": 547060066, "node_id": "MDU6SXNzdWU1NDcwNjAwNjY=", "number": 889, "title": "cannot update field:label", "user": {"login": "treewolf", "id": 12214656, "node_id": "MDQ6VXNlcjEyMjE0NjU2", "avatar_url": "https://avatars3.githubusercontent.com/u/12214656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treewolf", "html_url": "https://github.com/treewolf", "followers_url": "https://api.github.com/users/treewolf/followers", "following_url": "https://api.github.com/users/treewolf/following{/other_user}", "gists_url": "https://api.github.com/users/treewolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/treewolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treewolf/subscriptions", "organizations_url": "https://api.github.com/users/treewolf/orgs", "repos_url": "https://api.github.com/users/treewolf/repos", "events_url": "https://api.github.com/users/treewolf/events{/privacy}", "received_events_url": "https://api.github.com/users/treewolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-08T19:33:46Z", "updated_at": "2020-01-10T18:00:26Z", "closed_at": "2020-01-10T18:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I looked at past issues, I haven't found any fix.\r\nI want to edit a label on an issue.\r\n\r\n`issue.update(fields={'labels':['test']})`\r\n\r\n## What I expect:\r\nThe label is edited and is result is shown.\r\n\r\n## What happens:\r\nRecieve a **http.response 400** and message **Field 'labels' cannot be set. It is not on the appropriate screen, or unknown.**\r\n\r\nI have permissions to edit the label. When editing  any other field, eg Description, the update is made and everything is golden.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/871", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/871/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/871/events", "html_url": "https://github.com/pycontribs/jira/issues/871", "id": 523650769, "node_id": "MDU6SXNzdWU1MjM2NTA3Njk=", "number": 871, "title": "Travis CI is failing *not due* to PR issues", "user": {"login": "tubaman", "id": 197814, "node_id": "MDQ6VXNlcjE5NzgxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/197814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tubaman", "html_url": "https://github.com/tubaman", "followers_url": "https://api.github.com/users/tubaman/followers", "following_url": "https://api.github.com/users/tubaman/following{/other_user}", "gists_url": "https://api.github.com/users/tubaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tubaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tubaman/subscriptions", "organizations_url": "https://api.github.com/users/tubaman/orgs", "repos_url": "https://api.github.com/users/tubaman/repos", "events_url": "https://api.github.com/users/tubaman/events{/privacy}", "received_events_url": "https://api.github.com/users/tubaman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-15T19:37:19Z", "updated_at": "2020-01-25T18:49:14Z", "closed_at": "2020-01-25T18:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Travis CI is failing even on a trivial PR: https://github.com/pycontribs/jira/pull/870\r\n\r\n**To Reproduce**\r\n1. Create a trivial PR\r\n2. See Travis CI fail\r\n\r\n**Expected behavior**\r\nTravis CI should only fail if there are issues with a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/868", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/868/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/868/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/868/events", "html_url": "https://github.com/pycontribs/jira/issues/868", "id": 522411338, "node_id": "MDU6SXNzdWU1MjI0MTEzMzg=", "number": 868, "title": "Update issue without fetching it", "user": {"login": "patrikturi", "id": 13408366, "node_id": "MDQ6VXNlcjEzNDA4MzY2", "avatar_url": "https://avatars1.githubusercontent.com/u/13408366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrikturi", "html_url": "https://github.com/patrikturi", "followers_url": "https://api.github.com/users/patrikturi/followers", "following_url": "https://api.github.com/users/patrikturi/following{/other_user}", "gists_url": "https://api.github.com/users/patrikturi/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrikturi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrikturi/subscriptions", "organizations_url": "https://api.github.com/users/patrikturi/orgs", "repos_url": "https://api.github.com/users/patrikturi/repos", "events_url": "https://api.github.com/users/patrikturi/events{/privacy}", "received_events_url": "https://api.github.com/users/patrikturi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T19:00:51Z", "updated_at": "2019-11-29T01:43:00Z", "closed_at": "2019-11-29T01:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to update the fields of an issue but I don't want to fetch the issue data from the server because I already have it from a webhook. Is this possible?\r\n\r\neg. instead of:\r\n```issue.update(fields={'customfield_1111': 2})```\r\n\r\ncall something like:\r\n```jira.update_issue('PROJ-123', fields={'customfield_1111': 2})```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/850", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/850/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/850/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/850/events", "html_url": "https://github.com/pycontribs/jira/issues/850", "id": 506549518, "node_id": "MDU6SXNzdWU1MDY1NDk1MTg=", "number": 850, "title": "Incorrect EOL Py2 date in repository description", "user": {"login": "Addono", "id": 15435678, "node_id": "MDQ6VXNlcjE1NDM1Njc4", "avatar_url": "https://avatars1.githubusercontent.com/u/15435678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Addono", "html_url": "https://github.com/Addono", "followers_url": "https://api.github.com/users/Addono/followers", "following_url": "https://api.github.com/users/Addono/following{/other_user}", "gists_url": "https://api.github.com/users/Addono/gists{/gist_id}", "starred_url": "https://api.github.com/users/Addono/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Addono/subscriptions", "organizations_url": "https://api.github.com/users/Addono/orgs", "repos_url": "https://api.github.com/users/Addono/repos", "events_url": "https://api.github.com/users/Addono/events{/privacy}", "received_events_url": "https://api.github.com/users/Addono/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-14T09:49:05Z", "updated_at": "2019-10-14T10:57:30Z", "closed_at": "2019-10-14T10:57:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The project description states that the end-of-life of Python 2 was in 2020, whilst it should be 2019.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/848", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/848/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/848/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/848/events", "html_url": "https://github.com/pycontribs/jira/issues/848", "id": 506204841, "node_id": "MDU6SXNzdWU1MDYyMDQ4NDE=", "number": 848, "title": "drop python2.7 support", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1612165582, "node_id": "MDU6TGFiZWwxNjEyMTY1NTgy", "url": "https://api.github.com/repos/pycontribs/jira/labels/hacktoberfest", "name": "hacktoberfest", "color": "aff902", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-12T16:01:07Z", "updated_at": "2019-10-14T09:31:14Z", "closed_at": "2019-10-14T09:31:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 2.7 is officially retired by PSF on 2020-01-01 but we should drop support for it right away as this would considerably ease maintenance and CI testing of the library.\r\n\r\nAs the library does not have any sponsors we are forced to lower the supported range jut to keep it alive. \r\n\r\nNext version will support only python3.5+ and will advertise this by changing the major version number and also exposing this requirement in the package metadata.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/847", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/847/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/847/events", "html_url": "https://github.com/pycontribs/jira/issues/847", "id": 505270143, "node_id": "MDU6SXNzdWU1MDUyNzAxNDM=", "number": 847, "title": "from jira import JIRA", "user": {"login": "stuntpants", "id": 56398056, "node_id": "MDQ6VXNlcjU2Mzk4MDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/56398056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuntpants", "html_url": "https://github.com/stuntpants", "followers_url": "https://api.github.com/users/stuntpants/followers", "following_url": "https://api.github.com/users/stuntpants/following{/other_user}", "gists_url": "https://api.github.com/users/stuntpants/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuntpants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuntpants/subscriptions", "organizations_url": "https://api.github.com/users/stuntpants/orgs", "repos_url": "https://api.github.com/users/stuntpants/repos", "events_url": "https://api.github.com/users/stuntpants/events{/privacy}", "received_events_url": "https://api.github.com/users/stuntpants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-10T13:25:26Z", "updated_at": "2019-11-21T23:15:30Z", "closed_at": "2019-10-25T14:01:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using with python2 on a linux os\r\nwhen i run the script i get the below error\r\nFile \"nessus2jira.py\", line 12 in <module>\r\nfrom jira import JIRA\r\n\r\nI have a jira folder however within this folder there is no JIRA file to call on.\r\n\r\nany help would be great\r\n\r\nMike\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/845", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/845/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/845/events", "html_url": "https://github.com/pycontribs/jira/issues/845", "id": 503908710, "node_id": "MDU6SXNzdWU1MDM5MDg3MTA=", "number": 845, "title": "missing urlencoding of parameters for Jira api", "user": {"login": "overratedpro", "id": 1379994, "node_id": "MDQ6VXNlcjEzNzk5OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1379994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overratedpro", "html_url": "https://github.com/overratedpro", "followers_url": "https://api.github.com/users/overratedpro/followers", "following_url": "https://api.github.com/users/overratedpro/following{/other_user}", "gists_url": "https://api.github.com/users/overratedpro/gists{/gist_id}", "starred_url": "https://api.github.com/users/overratedpro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overratedpro/subscriptions", "organizations_url": "https://api.github.com/users/overratedpro/orgs", "repos_url": "https://api.github.com/users/overratedpro/repos", "events_url": "https://api.github.com/users/overratedpro/events{/privacy}", "received_events_url": "https://api.github.com/users/overratedpro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T08:42:31Z", "updated_at": "2019-10-14T14:09:26Z", "closed_at": "2019-10-14T13:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nSeveral methods, including:\r\n- jira.JIRA.user()\r\n- jira.JIRA.delete_user()\r\n\r\ndo not properly encode/escape passed parameters, so for edge cases with usernames containing symbols the JIRA API returns incorrect results. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\njac = jira.JIRA(url, auth)\r\njac.user('user+name') # the plus sign is transformed to a space and the user() method raises jira.exceptions.JIRAError due to 404 returned from API\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\nThe workaround is to manually prepare the value:\r\n```\r\nurllib.quote_plus(value.encode('utf-8'))\r\n```\r\nwhich should be done internally by the library.\r\n\r\n**Expected behavior**\r\nThe 'user()' method returning a valid object from a http 200 API result for an existing user for the provided name.\r\n\r\n**Stack Trace**\r\n```\r\nJIRAError                                 Traceback (most recent call last)\r\n<ipython-input-7-6479d041f5ca> in <module>()\r\n----> 1 jac.user('XXX+XXX')\r\n\r\n/usr/lib/python2.7/site-packages/jira/client.pyc in user(self, id, expand)\r\n   2170         if expand is not None:\r\n   2171             params['expand'] = expand\r\n-> 2172         user.find(id, params=params)\r\n   2173         return user\r\n   2174 \r\n\r\n/usr/lib/python2.7/site-packages/jira/resources.pyc in find(self, id, params)\r\n    199             path = self._resource.format(id)\r\n    200         url = self._get_url(path)\r\n--> 201         self._load(url, params=params)\r\n    202 \r\n    203     def _get_url(self, path):\r\n\r\n/usr/lib/python2.7/site-packages/jira/resources.pyc in _load(self, url, headers, params, path)\r\n    314 \r\n    315     def _load(self, url, headers=CaseInsensitiveDict(), params=None, path=None):\r\n--> 316         r = self._session.get(url, headers=headers, params=params)\r\n    317         try:\r\n    318             j = json_loads(r)\r\n\r\n/usr/lib/python2.7/site-packages/jira/resilientsession.pyc in get(self, url, **kwargs)\r\n    149 \r\n    150     def get(self, url, **kwargs):\r\n--> 151         return self.__verb('GET', url, **kwargs)\r\n    152 \r\n    153     def post(self, url, **kwargs):\r\n\r\n/usr/lib/python2.7/site-packages/jira/resilientsession.pyc in __verb(self, verb, url, retry_data, **kwargs)\r\n    145         if exception is not None:\r\n    146             raise exception\r\n--> 147         raise_on_error(response, verb=verb, **kwargs)\r\n    148         return response\r\n    149 \r\n\r\n/usr/lib/python2.7/site-packages/jira/resilientsession.pyc in raise_on_error(r, verb, **kwargs)\r\n     55                 error = r.text\r\n     56         raise JIRAError(\r\n---> 57             r.status_code, error, r.url, request=request, response=r, **kwargs)\r\n     58     # for debugging weird errors on CI\r\n     59     if r.status_code not in [200, 201, 202, 204]:\r\n\r\nJIRAError: JiraError HTTP 404 url: http://XXXXXX/rest/api/2/user?username=XXX+XXX\r\n        text: The user named 'XXX XXX' does not exist\r\n\r\n        response headers = {'X-AUSERNAME': 'XXXXX', 'X-AREQUESTID': 'XXXXXX', 'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': \"frame-ancestors 'self'\", 'Transfer-Encoding': 'chunked', 'Set-Cookie': 'JSESSIONID=XXXXXX; Path=/; Secure; HttpOnly, atlassian.xsrf.token=XXXXX; Path=/; Secure', 'X-Seraph-LoginReason': 'OK', 'X-ASEN': 'XXXXX', 'X-ASESSIONID': 'XXXX', 'Cache-Control': 'no-cache, no-store, no-transform', 'Date': 'Tue, 08 Oct 2019 08:36:07 GMT', 'X-Frame-Options': 'SAMEORIGIN', 'Content-Type': 'application/json;charset=UTF-8'}\r\n        response text = {\"errorMessages\":[\"The user named 'XXX XXX' does not exist\"],\"errors\":{}}\r\n\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7.16\r\njira-python: 2.0.0\r\nOS: alpine:3.10\r\nIPython (Optional): 5.8.0\r\nOther Dependencies:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/842", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/842/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/842/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/842/events", "html_url": "https://github.com/pycontribs/jira/issues/842", "id": 495144782, "node_id": "MDU6SXNzdWU0OTUxNDQ3ODI=", "number": 842, "title": "Issue instance is not hashable", "user": {"login": "regisz", "id": 5145946, "node_id": "MDQ6VXNlcjUxNDU5NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5145946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regisz", "html_url": "https://github.com/regisz", "followers_url": "https://api.github.com/users/regisz/followers", "following_url": "https://api.github.com/users/regisz/following{/other_user}", "gists_url": "https://api.github.com/users/regisz/gists{/gist_id}", "starred_url": "https://api.github.com/users/regisz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regisz/subscriptions", "organizations_url": "https://api.github.com/users/regisz/orgs", "repos_url": "https://api.github.com/users/regisz/repos", "events_url": "https://api.github.com/users/regisz/events{/privacy}", "received_events_url": "https://api.github.com/users/regisz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1688396400, "node_id": "MDU6TGFiZWwxNjg4Mzk2NDAw", "url": "https://api.github.com/repos/pycontribs/jira/labels/stale", "name": "stale", "color": "dddddd", "default": false, "description": "Ticket that is likely to go nowhere and that will be closed soon"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T10:44:42Z", "updated_at": "2020-05-06T12:10:56Z", "closed_at": "2019-12-31T11:30:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Description: Issue instance is not hashable\r\n\r\nPython Interpreter: 3.5.6\r\njira-python: 2.0.0\r\nOS: Debian GNU/Linux 9.9 (stretch)\r\n\r\nSteps To Reproduce:\r\n    1. jira_server = JIRA(server = \"...\", basic_auth = (\"...\", \"...\"))\r\n    2. issue = jira_server.issue(\"REL-111\")\r\n    3. hash(issue)\r\n\r\nStack Trace:\r\n    TypeError: unhashable type: 'Issue'\r\n\r\nSo, the __hash__ method is missing from Issue class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/841", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/841/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/841/events", "html_url": "https://github.com/pycontribs/jira/issues/841", "id": 494625062, "node_id": "MDU6SXNzdWU0OTQ2MjUwNjI=", "number": 841, "title": "authenticate using Windows AD?", "user": {"login": "tkossak", "id": 3728245, "node_id": "MDQ6VXNlcjM3MjgyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3728245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkossak", "html_url": "https://github.com/tkossak", "followers_url": "https://api.github.com/users/tkossak/followers", "following_url": "https://api.github.com/users/tkossak/following{/other_user}", "gists_url": "https://api.github.com/users/tkossak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkossak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkossak/subscriptions", "organizations_url": "https://api.github.com/users/tkossak/orgs", "repos_url": "https://api.github.com/users/tkossak/repos", "events_url": "https://api.github.com/users/tkossak/events{/privacy}", "received_events_url": "https://api.github.com/users/tkossak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1688396400, "node_id": "MDU6TGFiZWwxNjg4Mzk2NDAw", "url": "https://api.github.com/repos/pycontribs/jira/labels/stale", "name": "stale", "color": "dddddd", "default": false, "description": "Ticket that is likely to go nowhere and that will be closed soon"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T13:29:28Z", "updated_at": "2019-12-30T14:19:01Z", "closed_at": "2019-12-30T14:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to authenticate using Windows Active Directory (NTLM/LDAP)? Our Jira is integrated with Windows AD (we have SSO) so when I use browser I don't have to provide any addidtional credentials.\r\n\r\nI can use `requests` / `requests_ntlm` modules to open pages behind Windows AD authentication in this way:\r\n\r\n```python\r\nimport requests\r\nfrom requests_ntlm import HttpNtlmAuth\r\n\r\nheaders = {'accept': 'application/json;odata=verbose'}\r\nr = requests.get(\r\n    '<URL>',\r\n    auth=HttpNtlmAuth('<DOMAIN>\\\\<USER>', '<PASSWORD>'),\r\n    headers=headers\r\n)\r\nprint(r.json())\r\n```\r\n\r\nbut I have no idea how to do it with `jira` module (and if it's possible at all).\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/840", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/840/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/840/events", "html_url": "https://github.com/pycontribs/jira/issues/840", "id": 492654961, "node_id": "MDU6SXNzdWU0OTI2NTQ5NjE=", "number": 840, "title": "Add support for new createmeta endpoints", "user": {"login": "klopacinski-atlassian", "id": 52951538, "node_id": "MDQ6VXNlcjUyOTUxNTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/52951538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klopacinski-atlassian", "html_url": "https://github.com/klopacinski-atlassian", "followers_url": "https://api.github.com/users/klopacinski-atlassian/followers", "following_url": "https://api.github.com/users/klopacinski-atlassian/following{/other_user}", "gists_url": "https://api.github.com/users/klopacinski-atlassian/gists{/gist_id}", "starred_url": "https://api.github.com/users/klopacinski-atlassian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klopacinski-atlassian/subscriptions", "organizations_url": "https://api.github.com/users/klopacinski-atlassian/orgs", "repos_url": "https://api.github.com/users/klopacinski-atlassian/repos", "events_url": "https://api.github.com/users/klopacinski-atlassian/events{/privacy}", "received_events_url": "https://api.github.com/users/klopacinski-atlassian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1688396400, "node_id": "MDU6TGFiZWwxNjg4Mzk2NDAw", "url": "https://api.github.com/repos/pycontribs/jira/labels/stale", "name": "stale", "color": "dddddd", "default": false, "description": "Ticket that is likely to go nowhere and that will be closed soon"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-12T08:17:13Z", "updated_at": "2020-04-22T22:14:20Z", "closed_at": "2019-12-25T09:35:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nJira versions starting with 8.4.0 have new createmeta REST endpoints, described in the following documents:\r\n\r\n[https://confluence.atlassian.com/jiracore/createmeta-rest-endpoint-to-be-removed-975040986.html](https://confluence.atlassian.com/jiracore/createmeta-rest-endpoint-to-be-removed-975040986.html)\r\n[https://developer.atlassian.com/server/jira/platform/jira-rest-api-examples/#creating-an-issue-examples](https://developer.atlassian.com/server/jira/platform/jira-rest-api-examples/#creating-an-issue-examples)\r\n\r\nThe old createmeta endpoints have been deprecated and are scheduled for removal in the next platform release (i.e. Jira 9.0). They can also be disabled by the Jira instance's administrator starting with 8.4.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/839", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/839/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/839/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/839/events", "html_url": "https://github.com/pycontribs/jira/issues/839", "id": 490968821, "node_id": "MDU6SXNzdWU0OTA5Njg4MjE=", "number": 839, "title": "Can't set user to assignee field", "user": {"login": "metropt", "id": 764040, "node_id": "MDQ6VXNlcjc2NDA0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/764040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metropt", "html_url": "https://github.com/metropt", "followers_url": "https://api.github.com/users/metropt/followers", "following_url": "https://api.github.com/users/metropt/following{/other_user}", "gists_url": "https://api.github.com/users/metropt/gists{/gist_id}", "starred_url": "https://api.github.com/users/metropt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metropt/subscriptions", "organizations_url": "https://api.github.com/users/metropt/orgs", "repos_url": "https://api.github.com/users/metropt/repos", "events_url": "https://api.github.com/users/metropt/events{/privacy}", "received_events_url": "https://api.github.com/users/metropt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-09T08:58:52Z", "updated_at": "2019-09-12T14:31:10Z", "closed_at": "2019-09-12T14:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried to set the assignee field of a issue but I always get the following error\r\n`response text = {\"errorMessages\":[],\"errors\":{\"assignee\":\"User 'ANY NAME' does not exist.\"}}`\r\n\r\nI did use the same name that I get using `issue.fields.reporter.displayName` on `issue.update(assignee={\"name\":\"NAME\"})`\r\n\r\nHow should I assign an User?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/826", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/826/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/826/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/826/events", "html_url": "https://github.com/pycontribs/jira/issues/826", "id": 478566565, "node_id": "MDU6SXNzdWU0Nzg1NjY1NjU=", "number": 826, "title": "List copy() method not supported in Python 2.7", "user": {"login": "cameronshinn", "id": 39427662, "node_id": "MDQ6VXNlcjM5NDI3NjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/39427662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameronshinn", "html_url": "https://github.com/cameronshinn", "followers_url": "https://api.github.com/users/cameronshinn/followers", "following_url": "https://api.github.com/users/cameronshinn/following{/other_user}", "gists_url": "https://api.github.com/users/cameronshinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameronshinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameronshinn/subscriptions", "organizations_url": "https://api.github.com/users/cameronshinn/orgs", "repos_url": "https://api.github.com/users/cameronshinn/repos", "events_url": "https://api.github.com/users/cameronshinn/events{/privacy}", "received_events_url": "https://api.github.com/users/cameronshinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T16:13:59Z", "updated_at": "2020-07-02T10:52:26Z", "closed_at": "2019-10-14T13:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nThe latest release doesn't fully support Python 2.7 because there is a line of code that attempts to use the list copy method that [wasn't added until Python 3.3](https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types). This issue was fixed in [this commit](https://github.com/pycontribs/jira/commit/701882cb7284a629105c400d230b810d2f5ed962#diff-12827fc5aab7f1c957381e453bdfe85a), but isn't in a stable release yet, so Python 2.7 users on 2.0.0 will get this error still.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nany_list = [\"bug\", \"issue\", \"fix\"]\r\njira_obj.search_issues(\"a jql string\", fields=any_list) # Passing a list into fields throws error\r\n```\r\n\r\n**Expected behavior**\r\nShould support queries using a list as the field argument without throwing an error.\r\n\r\n**Stack Trace**\r\n```\r\nFile \"C:\\Python27\\lib\\site-packages\\jira\\client.py\", line 2084, in search_issues\r\n    fields = fields.copy()\r\nAttributeError: 'list' object has no attribute 'copy' \r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7\r\njira-python: 2.0.0\r\nOS: Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/825", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/825/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/825/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/825/events", "html_url": "https://github.com/pycontribs/jira/issues/825", "id": 476643509, "node_id": "MDU6SXNzdWU0NzY2NDM1MDk=", "number": 825, "title": "User impersonation support", "user": {"login": "mjackstone6", "id": 38740352, "node_id": "MDQ6VXNlcjM4NzQwMzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/38740352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjackstone6", "html_url": "https://github.com/mjackstone6", "followers_url": "https://api.github.com/users/mjackstone6/followers", "following_url": "https://api.github.com/users/mjackstone6/following{/other_user}", "gists_url": "https://api.github.com/users/mjackstone6/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjackstone6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjackstone6/subscriptions", "organizations_url": "https://api.github.com/users/mjackstone6/orgs", "repos_url": "https://api.github.com/users/mjackstone6/repos", "events_url": "https://api.github.com/users/mjackstone6/events{/privacy}", "received_events_url": "https://api.github.com/users/mjackstone6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T03:50:23Z", "updated_at": "2019-11-17T03:52:38Z", "closed_at": "2019-11-17T03:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI need to log work as another user. JIRA seems to support impersonation via 2-legged oauth and it appears to already have a pull request (but closed due to inactivity from the user) #813 #349 \r\n\r\n**Describe the solution you'd like**\r\nAny chance this could be re-looked at?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/824", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/824/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/824/events", "html_url": "https://github.com/pycontribs/jira/issues/824", "id": 476225336, "node_id": "MDU6SXNzdWU0NzYyMjUzMzY=", "number": 824, "title": "I need the resources to use the server url", "user": {"login": "vfxGer", "id": 496669, "node_id": "MDQ6VXNlcjQ5NjY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/496669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vfxGer", "html_url": "https://github.com/vfxGer", "followers_url": "https://api.github.com/users/vfxGer/followers", "following_url": "https://api.github.com/users/vfxGer/following{/other_user}", "gists_url": "https://api.github.com/users/vfxGer/gists{/gist_id}", "starred_url": "https://api.github.com/users/vfxGer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vfxGer/subscriptions", "organizations_url": "https://api.github.com/users/vfxGer/orgs", "repos_url": "https://api.github.com/users/vfxGer/repos", "events_url": "https://api.github.com/users/vfxGer/events{/privacy}", "received_events_url": "https://api.github.com/users/vfxGer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-02T15:03:23Z", "updated_at": "2019-11-14T15:56:47Z", "closed_at": "2019-11-14T15:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe have two urls for our jira instance, one for normal frontend use which goes through a verification stage and one for api access. The resource returns the frontend url and hence updates that go through the resource url fail. So I would like to use the original server url for resource updates.\r\n\r\n\r\n**Describe the solution you'd like**\r\nI had a go at a solution here but it needs more work https://github.com/vfxGer/jira\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/823", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/823/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/823/events", "html_url": "https://github.com/pycontribs/jira/issues/823", "id": 474965930, "node_id": "MDU6SXNzdWU0NzQ5NjU5MzA=", "number": 823, "title": "Unused parameter `type` in create_project method", "user": {"login": "rs-ds", "id": 46476760, "node_id": "MDQ6VXNlcjQ2NDc2NzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/46476760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rs-ds", "html_url": "https://github.com/rs-ds", "followers_url": "https://api.github.com/users/rs-ds/followers", "following_url": "https://api.github.com/users/rs-ds/following{/other_user}", "gists_url": "https://api.github.com/users/rs-ds/gists{/gist_id}", "starred_url": "https://api.github.com/users/rs-ds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rs-ds/subscriptions", "organizations_url": "https://api.github.com/users/rs-ds/orgs", "repos_url": "https://api.github.com/users/rs-ds/repos", "events_url": "https://api.github.com/users/rs-ds/events{/privacy}", "received_events_url": "https://api.github.com/users/rs-ds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T06:46:51Z", "updated_at": "2019-10-14T13:27:22Z", "closed_at": "2019-10-14T13:27:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The argument `type` in the `create_project` method is not used anywhere: https://github.com/pycontribs/jira/blob/87413c87b27ff75a0e6e454c1482ff05fd86aeaf/jira/client.py#L3405\r\n\r\nI also believe that \r\n```\r\nproject_type_key = templates[template_name]['projectTypeKey']\r\n```\r\n\r\nshould be replaced with \r\n\r\n```\r\nproject_type_key = type if type else templates[template_name]['projectTypeKey']\r\n```\r\n\r\nPlease let me know if this is the right change to make and I will send a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/820", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/820/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/820/events", "html_url": "https://github.com/pycontribs/jira/issues/820", "id": 468878360, "node_id": "MDU6SXNzdWU0Njg4NzgzNjA=", "number": 820, "title": "Sprints can have information that breaks _parse_sprint_string", "user": {"login": "gms8994", "id": 50712, "node_id": "MDQ6VXNlcjUwNzEy", "avatar_url": "https://avatars2.githubusercontent.com/u/50712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gms8994", "html_url": "https://github.com/gms8994", "followers_url": "https://api.github.com/users/gms8994/followers", "following_url": "https://api.github.com/users/gms8994/following{/other_user}", "gists_url": "https://api.github.com/users/gms8994/gists{/gist_id}", "starred_url": "https://api.github.com/users/gms8994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gms8994/subscriptions", "organizations_url": "https://api.github.com/users/gms8994/orgs", "repos_url": "https://api.github.com/users/gms8994/repos", "events_url": "https://api.github.com/users/gms8994/events{/privacy}", "received_events_url": "https://api.github.com/users/gms8994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T21:43:07Z", "updated_at": "2019-10-29T10:28:44Z", "closed_at": "2019-10-29T10:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nA sprint came back with information\r\n\r\n```\r\nu'com.atlassian.greenhopper.service.sprint.Sprint@38b9df80[id=24,rapidViewId=5,state=CLOSED,name=What About Bob?,goal=Scheduled Email, Market Segment Groups in Campaigns, and 2 Factor Auth. Sales Demo would be 4th if there\\u2019s room after bugs,startDate=2019-07-01T14:30:37.829Z,endDate=2019-07-12T12:56:00.000Z,completeDate=2019-07-15T14:48:57.952Z,sequence=24]'\r\n```\r\n\r\n_parse_sprint_string expects no values with `,` in them:\r\n\r\n```\r\nentries = sprint[sprint.index('[')+1:sprint.index(']')].split(',')\r\n```\r\n\r\nI made an update immediately after that looks like:\r\n\r\n```\r\nfrom re import compile\r\nregex = compile(r'\\b=\\b')\r\nentries = [i for i in entries if regex.search(i)]\r\n```\r\nand it seems to solve the problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/819", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/819/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/819/events", "html_url": "https://github.com/pycontribs/jira/issues/819", "id": 465958354, "node_id": "MDU6SXNzdWU0NjU5NTgzNTQ=", "number": 819, "title": "Testing bug TravisCI", "user": {"login": "mnadeem-acc", "id": 50915200, "node_id": "MDQ6VXNlcjUwOTE1MjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/50915200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnadeem-acc", "html_url": "https://github.com/mnadeem-acc", "followers_url": "https://api.github.com/users/mnadeem-acc/followers", "following_url": "https://api.github.com/users/mnadeem-acc/following{/other_user}", "gists_url": "https://api.github.com/users/mnadeem-acc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnadeem-acc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnadeem-acc/subscriptions", "organizations_url": "https://api.github.com/users/mnadeem-acc/orgs", "repos_url": "https://api.github.com/users/mnadeem-acc/repos", "events_url": "https://api.github.com/users/mnadeem-acc/events{/privacy}", "received_events_url": "https://api.github.com/users/mnadeem-acc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-09T19:56:58Z", "updated_at": "2019-10-14T13:27:50Z", "closed_at": "2019-10-14T13:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is related to PR #813 . I'm trying to get the build to succeed. \r\nThe build seems to fail at authenticating. I was wondering if there was some token I had to change within the unit tests to fix this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/817", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/817/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/817/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/817/events", "html_url": "https://github.com/pycontribs/jira/issues/817", "id": 464778711, "node_id": "MDU6SXNzdWU0NjQ3Nzg3MTE=", "number": 817, "title": "async", "user": {"login": "msilverglate", "id": 47373007, "node_id": "MDQ6VXNlcjQ3MzczMDA3", "avatar_url": "https://avatars1.githubusercontent.com/u/47373007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msilverglate", "html_url": "https://github.com/msilverglate", "followers_url": "https://api.github.com/users/msilverglate/followers", "following_url": "https://api.github.com/users/msilverglate/following{/other_user}", "gists_url": "https://api.github.com/users/msilverglate/gists{/gist_id}", "starred_url": "https://api.github.com/users/msilverglate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msilverglate/subscriptions", "organizations_url": "https://api.github.com/users/msilverglate/orgs", "repos_url": "https://api.github.com/users/msilverglate/repos", "events_url": "https://api.github.com/users/msilverglate/events{/privacy}", "received_events_url": "https://api.github.com/users/msilverglate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-05T21:31:04Z", "updated_at": "2019-10-14T13:30:25Z", "closed_at": "2019-10-14T13:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am confused about how to use the async feature.  Could you post some example code (e.g. using JQL to scope a bunch of issues and updating a custom field with a desired value).  I have thousands of issues to update and looping through data takes about 3 sec/issue.  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/814", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/814/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/814/events", "html_url": "https://github.com/pycontribs/jira/issues/814", "id": 463794688, "node_id": "MDU6SXNzdWU0NjM3OTQ2ODg=", "number": 814, "title": "deactivate user getting WARNING:root:Got recoverable error from POST  and User failed to authenticate", "user": {"login": "gs-nvulli", "id": 48317238, "node_id": "MDQ6VXNlcjQ4MzE3MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/48317238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gs-nvulli", "html_url": "https://github.com/gs-nvulli", "followers_url": "https://api.github.com/users/gs-nvulli/followers", "following_url": "https://api.github.com/users/gs-nvulli/following{/other_user}", "gists_url": "https://api.github.com/users/gs-nvulli/gists{/gist_id}", "starred_url": "https://api.github.com/users/gs-nvulli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gs-nvulli/subscriptions", "organizations_url": "https://api.github.com/users/gs-nvulli/orgs", "repos_url": "https://api.github.com/users/gs-nvulli/repos", "events_url": "https://api.github.com/users/gs-nvulli/events{/privacy}", "received_events_url": "https://api.github.com/users/gs-nvulli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T14:44:27Z", "updated_at": "2019-10-29T10:28:43Z", "closed_at": "2019-10-29T10:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen i use deactivate_user method getting below message and at the end failing getting \" User failed to authenticate: \r\n###\r\ndeactivate user getting WARNING:root:Got recoverable error from POST \r\ndeactivate user getting WARNING:root:Got recoverable error from POST \r\ndeactivate user getting WARNING:root:Got recoverable error from POST \r\n*****\r\n admin/rest/um/1/user/deactivate?username=\r\n\r\n****\r\n###\r\nif possible \r\ncan you please share any workaround or working api request\r\n\r\nThanks,\r\nNitish\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/812", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/812/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/812/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/812/events", "html_url": "https://github.com/pycontribs/jira/issues/812", "id": 462813820, "node_id": "MDU6SXNzdWU0NjI4MTM4MjA=", "number": 812, "title": "Get a recoverable error when trying to add a remote link to an issue.", "user": {"login": "mnadeem-acc", "id": 50915200, "node_id": "MDQ6VXNlcjUwOTE1MjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/50915200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnadeem-acc", "html_url": "https://github.com/mnadeem-acc", "followers_url": "https://api.github.com/users/mnadeem-acc/followers", "following_url": "https://api.github.com/users/mnadeem-acc/following{/other_user}", "gists_url": "https://api.github.com/users/mnadeem-acc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnadeem-acc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnadeem-acc/subscriptions", "organizations_url": "https://api.github.com/users/mnadeem-acc/orgs", "repos_url": "https://api.github.com/users/mnadeem-acc/repos", "events_url": "https://api.github.com/users/mnadeem-acc/events{/privacy}", "received_events_url": "https://api.github.com/users/mnadeem-acc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T16:49:51Z", "updated_at": "2019-10-29T10:28:42Z", "closed_at": "2019-10-29T10:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to add a remote link to an issue using the add_remote_link() method, I first get the following outputs and because of this it takes a long time to create an issue:\r\n\r\n ```bash\r\nWARNING:root:Got recoverable error from GET https://jiraserver/rest/applinks/latest/listApplicationlinks, will retry [1/3] in 13.364056574201014s. Err: 401 \r\nWARNING:root:Got recoverable error from GET https://jiraserver/rest/applinks/latest/listApplicationlinks, will retry [2/3] in 17.304782768658317s. Err: 401 \r\nWARNING:root:Got recoverable error from GET https://jiraserver/rest/applinks/latest/listApplicationlinks, will retry [3/3] in 45.573095017292275s. Err: 401\r\n```\r\n\r\nThe method tries to get the list of application links from the endpoint ```rest/applinks/latest/listApplicationlinks```. But, it comes across a recoverable error and waits a certain amount of time and retries this action again. This causes adding a remote link to take a minute or two and also prints this warning to STDOUT both of which are undesirable.\r\n\r\n**Solution**\r\nI would like a quick solution that basically allows the function caller to control whether the list of application links are received.\r\n\r\nAn easy way to do this would be to just add a function argument to prevent getting the list of application links.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/811", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/811/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/811/events", "html_url": "https://github.com/pycontribs/jira/issues/811", "id": 461852837, "node_id": "MDU6SXNzdWU0NjE4NTI4Mzc=", "number": 811, "title": "Can't get worklogged user's email", "user": {"login": "dulajsan", "id": 12482873, "node_id": "MDQ6VXNlcjEyNDgyODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/12482873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dulajsan", "html_url": "https://github.com/dulajsan", "followers_url": "https://api.github.com/users/dulajsan/followers", "following_url": "https://api.github.com/users/dulajsan/following{/other_user}", "gists_url": "https://api.github.com/users/dulajsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dulajsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dulajsan/subscriptions", "organizations_url": "https://api.github.com/users/dulajsan/orgs", "repos_url": "https://api.github.com/users/dulajsan/repos", "events_url": "https://api.github.com/users/dulajsan/events{/privacy}", "received_events_url": "https://api.github.com/users/dulajsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T04:42:01Z", "updated_at": "2019-10-14T13:28:31Z", "closed_at": "2019-10-14T13:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWhen I print the attributes of the worklog object I found these methods and attributes.\r\n\r\n**SE_URL', '_READABLE_IDS', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__',\r\n'__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_base_url', '_default_headers', '_get_url', '_load', '_options', '_parse_raw', '_resource', '_session', 'author', 'created', 'delete',\r\n'find', 'id', 'issueId', 'raw', 'self', 'started', 'timeSpent', 'timeSpentSeconds', 'update', 'updateAuthor', 'updated']**\r\n\r\nSince I wanted to get the worklogged user's email, here I accessed the author attribute. But for some worklogs it returns the full name of the user, for some worklogs, it returns the email. that full name is not unique for users as well.\r\n\r\n**My code Block:**\r\n\r\n```\r\n worklogs = jira.worklogs(issue.key)\r\n        for worklog in worklogs:\r\n            print(worklog.author)\r\n            print(dir(worklog))\r\n\r\n```\r\n\r\nExpected result for author attribute is unique something for user. It will be better i can access the email. But there is no attribute called email in the worklog object.\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.8\r\njira-python: 2.0.0\r\nOS:  windows 10\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/810", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/810/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/810/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/810/events", "html_url": "https://github.com/pycontribs/jira/issues/810", "id": 460962458, "node_id": "MDU6SXNzdWU0NjA5NjI0NTg=", "number": 810, "title": "Exception on self._resource format with Board.find(id)", "user": {"login": "steveteske", "id": 39439219, "node_id": "MDQ6VXNlcjM5NDM5MjE5", "avatar_url": "https://avatars0.githubusercontent.com/u/39439219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveteske", "html_url": "https://github.com/steveteske", "followers_url": "https://api.github.com/users/steveteske/followers", "following_url": "https://api.github.com/users/steveteske/following{/other_user}", "gists_url": "https://api.github.com/users/steveteske/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveteske/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveteske/subscriptions", "organizations_url": "https://api.github.com/users/steveteske/orgs", "repos_url": "https://api.github.com/users/steveteske/repos", "events_url": "https://api.github.com/users/steveteske/events{/privacy}", "received_events_url": "https://api.github.com/users/steveteske/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1688396400, "node_id": "MDU6TGFiZWwxNjg4Mzk2NDAw", "url": "https://api.github.com/repos/pycontribs/jira/labels/stale", "name": "stale", "color": "dddddd", "default": false, "description": "Ticket that is likely to go nowhere and that will be closed soon"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-26T13:11:57Z", "updated_at": "2019-12-13T21:07:03Z", "closed_at": "2019-12-13T21:07:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nA KeyError exception occurs when calling Board.find(id) on a valid board id.  Issues and sprints queries work fine. Only the board query fails.\r\n\r\n**To Reproduce**\r\n\r\n1. Create a JIRA server with valid base_url\r\n2. Retrieve a list of boards\r\n3. Using a value board id, call find on the board instance with the valid board id.\r\n\r\n```\r\n        def test_board_query_with_parameters(self):\r\n            server = JIRA(server='https://my.url.removed.com',\r\n                          basic_auth=[user, password],\r\n                          options={'agile_rest_path': 'agile'})\r\n\r\n            boards = server.boards(name=\"My Scrum Board\")\r\n            agile_board = boards[0]\r\n            issues = agile_board.find(sprint_board.id)\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nThe board.find() method should return a list of issues found on the board.\r\n\r\n**Stack Trace**\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/opt/python-3.6/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/opt/python-3.6/lib/python3.6/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \"/home/user/src/mgv_stats/tests/mgv_stats/test_jira_library_capabilities.py\", line 62, in test_board_query_with_parameters\r\n    issues = sprint_board.find(sprint_board.id)\r\n  File \"/home/user/src/mgv_stats/ve/lib/python3.6/site-packages/jira/resources.py\", line 199, in find\r\n    path = self._resource.format(id)\r\nKeyError: 'id'\r\n```\r\n\r\n**Version Information**\r\nPython Interpreter: Python 3.6.2\r\njira-python: <VERSION>\r\nOS: Linux 3.10.0-957.12.2.el7.x86_64 \r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\nNone\r\n\r\n**Additional context**\r\n\r\nI think I found the offending lines of code.\r\n\r\nThe `self._resource` variable is set in the constructor to `board/{id}` as shown below in resource.py\r\n\r\n```\r\nclass Board(GreenHopperResource):\r\n    \"\"\"A GreenHopper board.\"\"\"\r\n\r\n    def __init__(self, options, session, raw=None):\r\n        path = 'rapidview/{0}' if options['agile_rest_path'] == self.GREENHOPPER_REST_PATH else 'board/{id}'\r\n        GreenHopperResource.__init__(self, path, options, session, raw)\r\n\r\n```\r\nPath is passed to GreenHopperResource and then to Resource which ultimately sent the self._resource variable.\r\n```\r\nclass GreenHopperResource(Resource):\r\n    ...\r\n    def __init__(self, path, options, session, raw):\r\n        self.self = None\r\n        Resource.__init__(self, path, options, session, self.AGILE_BASE_URL)\r\n        ...\r\n```\r\n```\r\nclass Resource(object):\r\n   ...\r\n    def __init__(self, resource, options, session, base_url=JIRA_BASE_URL):\r\n        self._resource = resource\r\n        self._options = options\r\n        self._session = session\r\n        self._base_url = base_url\r\n        ...\r\n```\r\n\r\nThen in `class Resource` the following code breaks because the `format` command is looking for a named parameter called `id`. \r\n\r\n```\r\n    def find(self, id, params=None):\r\n\r\n        if params is None:\r\n            params = {}\r\n\r\n        if isinstance(id, tuple):\r\n            path = self._resource.format(*id)\r\n        else:\r\n            path = self._resource.format(id)\r\n        url = self._get_url(path)\r\n        self._load(url, params=params)\r\n```\r\n\r\nThere are two options to fix this.\r\n\r\n1.  change the constructor and replace `board{id}` with `board{0}`\r\n2.  change the find method to use `path = self._resource.format(id=*id)` for the tuple case and `path = self._resource.format(id=ed` for non-tuple case.\r\n\r\nI'd like to make this change and submit.  Can I do that.  Expeditiously?\r\n\r\nHere is a setup of test cases  that provide evidence of my findings.\r\n\r\n```\r\nimport unittest\r\n\r\n\r\nclass TestFormatFailure(unittest.TestCase):\r\n\r\n    def test_format_parameter_working(self):\r\n        resource = 'board/{0}'\r\n\r\n        def find(id):\r\n            return resource.format(id)\r\n\r\n        find(22)\r\n\r\n    def test_format_parameter_working_internal_named_parameter(self):\r\n        resource = 'board/{id}'\r\n\r\n        def find(id):\r\n            return resource.format(id=id)\r\n\r\n        find(22)\r\n\r\n    @unittest.expectedFailure\r\n    def test_format_parameter_failing(self):\r\n        resource = 'board/{id}'\r\n\r\n        def find(id):\r\n            return resource.format(id)\r\n\r\n        find(22)\r\n\r\n    @unittest.expectedFailure\r\n    def test_format_parameter_failing_named_parameter(self):\r\n        resource = 'board/{id}'\r\n\r\n        def find(id):\r\n            return resource.format(id)\r\n\r\n        find(id='24')\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/809", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/809/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/809/events", "html_url": "https://github.com/pycontribs/jira/issues/809", "id": 460815369, "node_id": "MDU6SXNzdWU0NjA4MTUzNjk=", "number": 809, "title": "Fail to retrieve timetracking field", "user": {"login": "iverson-lu", "id": 37316323, "node_id": "MDQ6VXNlcjM3MzE2MzIz", "avatar_url": "https://avatars2.githubusercontent.com/u/37316323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iverson-lu", "html_url": "https://github.com/iverson-lu", "followers_url": "https://api.github.com/users/iverson-lu/followers", "following_url": "https://api.github.com/users/iverson-lu/following{/other_user}", "gists_url": "https://api.github.com/users/iverson-lu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iverson-lu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iverson-lu/subscriptions", "organizations_url": "https://api.github.com/users/iverson-lu/orgs", "repos_url": "https://api.github.com/users/iverson-lu/repos", "events_url": "https://api.github.com/users/iverson-lu/events{/privacy}", "received_events_url": "https://api.github.com/users/iverson-lu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-26T07:50:25Z", "updated_at": "2019-06-28T06:15:37Z", "closed_at": "2019-06-28T06:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nCan not retrieve timetracking field of an issue\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nissues = jira.search_issues('project = Test', maxResults=60)\r\nfor issue in issues:\r\n    issue_type = issue.fields.issuetype.name\r\n    issue_summary = issue.fields.summary\r\n    issue_estimate = issue.fields.timetracking.originalEstimate\r\n```\r\n\r\n**Expected behavior**\r\nExpect to get the estimate number\r\n\r\n**Stack Trace**\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/PycharmProjects/Jira/main.py\", line 18, in <module>\r\n    estimate = issue.fields.timetracking.originalEstimate\r\nAttributeError: type object 'PropertyHolder' has no attribute 'timetracking'\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: <3.7.3>\r\njira-python: <2.0.0>\r\nOS: <Windows 10>\r\n\r\n\r\n**Additional context**\r\nI can get the issue type and summary correctly however just failed to get the estimate field\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/808", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/808/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/808/events", "html_url": "https://github.com/pycontribs/jira/issues/808", "id": 460650039, "node_id": "MDU6SXNzdWU0NjA2NTAwMzk=", "number": 808, "title": "JIRA() instance is not notifying when token it's ok but user is not", "user": {"login": "valerybriz", "id": 22871092, "node_id": "MDQ6VXNlcjIyODcxMDky", "avatar_url": "https://avatars1.githubusercontent.com/u/22871092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valerybriz", "html_url": "https://github.com/valerybriz", "followers_url": "https://api.github.com/users/valerybriz/followers", "following_url": "https://api.github.com/users/valerybriz/following{/other_user}", "gists_url": "https://api.github.com/users/valerybriz/gists{/gist_id}", "starred_url": "https://api.github.com/users/valerybriz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valerybriz/subscriptions", "organizations_url": "https://api.github.com/users/valerybriz/orgs", "repos_url": "https://api.github.com/users/valerybriz/repos", "events_url": "https://api.github.com/users/valerybriz/events{/privacy}", "received_events_url": "https://api.github.com/users/valerybriz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-25T21:23:32Z", "updated_at": "2019-10-29T10:28:41Z", "closed_at": "2019-10-29T10:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description of the bug**\r\nWhen a user tries to login with a wrong or inexistent User or if it doesn't has the required permissions to perform operations and a correct Token the instantiation won't raise an error or any kind of message.\r\nSo after this when you try to perform an action with this jira client authenticated it won't work and also it will show an inaccurate error message.\r\n\r\n**To Reproduce**\r\n\r\n```\r\nfrom jira import JIRA\r\n# This call should respond with an error when the user is incorrect\r\nauthed_jira = JIRA(server=\"https://<YOUR DOMAIN>.atlassian.net/\", basic_auth=(\"<WRONG_USER>\", \"<CORRECT_TOKEN>\"))\r\n\r\nissues_in_proj = authed_jira.search_issues(jql_str='project = \"<PROJECT_NAME>\"')\r\n\r\n```\r\n1. The user for the authentication most be incorrect or not existent on the account/project\r\n2. The Token has to be correct and enabled\r\n\r\n**Expected behavior**\r\nWhen you try to instantiate JIRA() with an incorrect user it should respond with an error message.\r\n\r\n**Stack Trace**\r\nThis is the traceback of the error it throws when executing the code noted above:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n    issues_in_proj = authed_jira.search_issues(jql_str='project = \"PrOject\" ORDER BY created')\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/client.py\", line 2109, in search_issues\r\n    issues = self._fetch_pages(Issue, 'issues', 'search', startAt, maxResults, search_params)\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/client.py\", line 575, in _fetch_pages\r\n    resource = self._get_json(request_path, params=page_params, base=base)\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/client.py\", line 2549, in _get_json\r\n    r = self._session.get(url, params=params)\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/resilientsession.py\", line 151, in get\r\n    return self.__verb('GET', url, **kwargs)\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n  File \"/Users/val002/Documents/venvs/drf_test/lib/python3.7/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\njira.exceptions.JIRAError: JiraError HTTP 400 url: https://prescrypto.atlassian.net/rest/api/2/search?jql=project+%3D+%22PrOject%22+ORDER+BY+created&startAt=0&validateQuery=True&maxResults=50\r\n        text: The value 'PrOject' does not exist for the field 'project'.\r\n        \r\n'max-ag response headers = {'Server': 'AtlassianProxy/1.15.8.1', 'Cache-Control': 'no-cache, no-store, no-transform', 'Content-Type': 'application/json;charset=UTF-8', 'Strict-Transport-Security': e=315360000; includeSubDomains; preload', 'Date': 'Tue, 25 Jun 2019 20:37:11 GMT', 'ATL-TraceId': 'ca56e34e20f9a105', 'X-AREQUESTID': 'de36b32f-961e-499b-9492-8f06ac3751aa', 'X-XSS-Protection': '1;\r\n mode=block', 'Transfer-Encoding': 'chunked', 'Timing-Allow-Origin': '*', 'X-Content-Type-Options': 'nosniff', 'Connection': 'close'}\r\n        response text = {\"errorMessages\":[\"The value 'PrOject' does not exist for the field 'project'.\"],\"warningMessages\":[]}\r\n\r\n```\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0\r\nOS: MACOS 10.13.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/805", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/805/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/805/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/805/events", "html_url": "https://github.com/pycontribs/jira/issues/805", "id": 456215454, "node_id": "MDU6SXNzdWU0NTYyMTU0NTQ=", "number": 805, "title": "maxResults seems to be locked on 100", "user": {"login": "hcpeter", "id": 1047873, "node_id": "MDQ6VXNlcjEwNDc4NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1047873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hcpeter", "html_url": "https://github.com/hcpeter", "followers_url": "https://api.github.com/users/hcpeter/followers", "following_url": "https://api.github.com/users/hcpeter/following{/other_user}", "gists_url": "https://api.github.com/users/hcpeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/hcpeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hcpeter/subscriptions", "organizations_url": "https://api.github.com/users/hcpeter/orgs", "repos_url": "https://api.github.com/users/hcpeter/repos", "events_url": "https://api.github.com/users/hcpeter/events{/privacy}", "received_events_url": "https://api.github.com/users/hcpeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-14T12:11:03Z", "updated_at": "2020-05-28T09:12:47Z", "closed_at": "2020-05-28T09:12:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all - thank you for this fantastic tool! \r\n\r\nI'm currently using version 2.0.0 with Jira Cloud. My primary use case is to open a jirashell and do quick and dirty info scraping, mainly with the help of `search_issues`. When I double checked the results (running the same JQL in the Jira) I noticed that in jirashell I always get back maximum 100 results - even if I specify the `maxResults` parameter. According to Jira, I should have 288 results. Am I missing something (maybe pagination?) More interestingly, the `total` is correct.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nRun any query with search_issue which will give back more than 100 results\r\n```\r\nissues = jira.search_issues('jql....', maxResults = 332)\r\nlen(issues) #100 \r\nissues.total #288\r\n```\r\n\r\n**Expected behavior**\r\nThe ResultList should contain all the issues.\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: python 3.7.3\r\njira-python: 2.0.0\r\nOS: macOS Mojave\r\nIPython (Optional): 7.5.0\r\n\r\nI'd appreciate any help!\r\nBest regards,\r\nPeter\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/804", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/804/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/804/events", "html_url": "https://github.com/pycontribs/jira/issues/804", "id": 454643172, "node_id": "MDU6SXNzdWU0NTQ2NDMxNzI=", "number": 804, "title": "POST payload not added to QSH in JWT claim", "user": {"login": "arpit-cn", "id": 42142397, "node_id": "MDQ6VXNlcjQyMTQyMzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/42142397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arpit-cn", "html_url": "https://github.com/arpit-cn", "followers_url": "https://api.github.com/users/arpit-cn/followers", "following_url": "https://api.github.com/users/arpit-cn/following{/other_user}", "gists_url": "https://api.github.com/users/arpit-cn/gists{/gist_id}", "starred_url": "https://api.github.com/users/arpit-cn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arpit-cn/subscriptions", "organizations_url": "https://api.github.com/users/arpit-cn/orgs", "repos_url": "https://api.github.com/users/arpit-cn/repos", "events_url": "https://api.github.com/users/arpit-cn/events{/privacy}", "received_events_url": "https://api.github.com/users/arpit-cn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T11:49:52Z", "updated_at": "2019-10-29T10:28:37Z", "closed_at": "2019-10-29T10:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nAs I can read [here](https://developer.atlassian.com/cloud/jira/platform/understanding-jwt/#a-name-creating-token-a-creating-a-jwt-token).\r\n> Sort the parameters primarily by their percent-encoded names and secondarily by their percent-encoded values.\r\n> - Include all the parameters from query string if it is a GET request.\r\n> - Include all the post data in payload if it is a POST request.\r\n\r\nThe qsh requires post data in case of a request with payload. But the implementation in the package doesn't take that into consideration.\r\n\r\n**Describe the solution you'd like**\r\nRequest payload should be taken into consideration [here](https://github.com/pycontribs/jira/blob/87413c87b27ff75a0e6e454c1482ff05fd86aeaf/jira/client.py#L202)\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/802", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/802/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/802/events", "html_url": "https://github.com/pycontribs/jira/issues/802", "id": 451789985, "node_id": "MDU6SXNzdWU0NTE3ODk5ODU=", "number": 802, "title": "Fetching a jira user by username is deprecated", "user": {"login": "NiCalderon", "id": 47402052, "node_id": "MDQ6VXNlcjQ3NDAyMDUy", "avatar_url": "https://avatars0.githubusercontent.com/u/47402052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NiCalderon", "html_url": "https://github.com/NiCalderon", "followers_url": "https://api.github.com/users/NiCalderon/followers", "following_url": "https://api.github.com/users/NiCalderon/following{/other_user}", "gists_url": "https://api.github.com/users/NiCalderon/gists{/gist_id}", "starred_url": "https://api.github.com/users/NiCalderon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NiCalderon/subscriptions", "organizations_url": "https://api.github.com/users/NiCalderon/orgs", "repos_url": "https://api.github.com/users/NiCalderon/repos", "events_url": "https://api.github.com/users/NiCalderon/events{/privacy}", "received_events_url": "https://api.github.com/users/NiCalderon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 110231332, "node_id": "MDU6TGFiZWwxMTAyMzEzMzI=", "url": "https://api.github.com/repos/pycontribs/jira/labels/help%20wanted", "name": "help wanted", "color": "fcfcab", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T04:15:47Z", "updated_at": "2019-07-23T06:42:16Z", "closed_at": "2019-07-23T06:42:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nAs per [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/#examples), this is not supported anymore.\r\n\r\nIn class User, in the constructor, the parent class is initizalized with a [`user?username={0}`](https://github.com/pycontribs/jira/blob/master/jira/resources.py#L839) resource.\r\n\r\nOne of our script used to access `issue.fields.reporter.emailAddress`, but after switching to OAUTH (not sure if coincidence due to similar deprecation timeline or an actual trigger), we started getting traceback [here](https://github.com/pycontribs/jira/blob/master/jira/resources.py#L188) (don't have the logs on hand, will try to add later).\r\n\r\n**To Reproduce**\r\n```\r\njira = JIRA(...)\r\njira.issue('<id>').fields.reporter.emailAddress\r\n```\r\n1. Might be related to our enabling of OAUTH\r\n\r\n**Expected behavior**\r\nThe User Resource should be loaded and its properties available.\r\n\r\n**Stack Trace**\r\n```\r\nSometing that boils down to reporter being non subscriptable, will update when I get the actual message\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6\r\njira-python: ?, but analysed master code statically, will update when I reproduce on master\r\nOS: Ubuntu 19.04\r\nOther Dependencies:\r\nJira with deprecated `username` parameter on various operations.\r\n\r\n**Additional context**\r\nDespite those being deprecated, username and userKey are still being returned. It appears Atlassian's deadlines are somewhat relaxed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/798", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/798/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/798/events", "html_url": "https://github.com/pycontribs/jira/issues/798", "id": 449837153, "node_id": "MDU6SXNzdWU0NDk4MzcxNTM=", "number": 798, "title": "Option id 'null' is not valid", "user": {"login": "SebastianoF", "id": 8709755, "node_id": "MDQ6VXNlcjg3MDk3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8709755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebastianoF", "html_url": "https://github.com/SebastianoF", "followers_url": "https://api.github.com/users/SebastianoF/followers", "following_url": "https://api.github.com/users/SebastianoF/following{/other_user}", "gists_url": "https://api.github.com/users/SebastianoF/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebastianoF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebastianoF/subscriptions", "organizations_url": "https://api.github.com/users/SebastianoF/orgs", "repos_url": "https://api.github.com/users/SebastianoF/repos", "events_url": "https://api.github.com/users/SebastianoF/events{/privacy}", "received_events_url": "https://api.github.com/users/SebastianoF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-29T14:18:29Z", "updated_at": "2019-10-14T13:29:35Z", "closed_at": "2019-10-14T13:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Thanks in advance for your help on this matter.\r\n\r\n**Describe the bug**\r\nIssue update for multiple choice requires information not available to the user.\r\n\r\n**To Reproduce**\r\nI have a jira Epic ticket with the custom field `Epic source`.\r\nThe filed is set to `External` and it corresponds to `customfield_10018`.\r\n\r\nThe goal is to update to `Internal`.\r\nIf I try:\r\n```\r\nji_issue.update(fields={'customfield_10018': {'value': 'External'}})\r\n```\r\nNo error is raised as its current status is confirmed.\r\n\r\nIf I try to change the current status with\r\n```\r\nji_issue.update(fields={'customfield_10018': {'value': 'Internal'}})\r\n```\r\nthen I get the following error:\r\n```\r\nJIRAError: JiraError HTTP 400 url: http://myUrl/rest/api/2/issue/10053\r\n\ttext: Option id 'null' is not valid\r\n``` \r\n\r\nWith some experiments I could change the status from `External` to `Internal` and vice versa with:\r\n```\r\nji_issue.update(fields={'customfield_10018': {\r\n                                     'id': '10014',  \r\n                                     'self':'http://myUrl/rest/api/2/customFieldOption/10014', \r\n                                     'value': 'Internal'\r\n                                      }\r\n                                 }\r\n                      ) \r\n\r\nji_issue.update(fields={'customfield_10018': {\r\n                                     'id': '10015',  \r\n                                     'self':'http://myUrl/rest/api/2/customFieldOption/10015', \r\n                                     'value': 'External'\r\n                                      }\r\n                                 }\r\n                      ) \r\n```\r\nThe problem is that the numbers 10014 and 10015 have been found by hand, exploring the raw dictionaries of the issue with the `Epic source` fields set to internal or external from the web interface by hand.\r\n\r\nIs there a way to update the customfield knowing only the value `'value'` and without any manual exploration to get all the combinations `value`-`id`-`self`? \r\n\r\nIs this the best practice to update fields with more than one key-value pairs or am I missing something?\r\n\r\nBecause if the user has to figure it out by hand each id value for all the possible options, for all the other fields (`In scope`, `out scope`, `priority`, `type`, ...), it would take a good while, and the correspondence may change with future versions or different settings, making the maps virtually not maintainable!\r\n\r\nThanks again for your help on this issue!\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6\r\njira-python: 2.0.0\r\nOS: Ubuntu\r\nIPython (Optional): 7.5.0\r\n\r\n\r\n**Additional context**\r\nThe installed jira is the first month free trial version.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/794", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/794/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/794/events", "html_url": "https://github.com/pycontribs/jira/issues/794", "id": 447439399, "node_id": "MDU6SXNzdWU0NDc0MzkzOTk=", "number": 794, "title": "search_issues not returning no values", "user": {"login": "olivercapalad", "id": 50938511, "node_id": "MDQ6VXNlcjUwOTM4NTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/50938511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivercapalad", "html_url": "https://github.com/olivercapalad", "followers_url": "https://api.github.com/users/olivercapalad/followers", "following_url": "https://api.github.com/users/olivercapalad/following{/other_user}", "gists_url": "https://api.github.com/users/olivercapalad/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivercapalad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivercapalad/subscriptions", "organizations_url": "https://api.github.com/users/olivercapalad/orgs", "repos_url": "https://api.github.com/users/olivercapalad/repos", "events_url": "https://api.github.com/users/olivercapalad/events{/privacy}", "received_events_url": "https://api.github.com/users/olivercapalad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-23T03:56:49Z", "updated_at": "2019-10-29T10:28:36Z", "closed_at": "2019-10-29T10:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nfunction search_issues is not returning any values after upgrading jira to jira core 7.13.2\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nfrom jira import JIRA\r\n\r\noptions = {'server':'JIRA_URL',\r\n           'verify':True,\r\n           'cert':'certificate'}\r\n\r\njira = JIRA(options, basic_auth=('user', 'password'))\r\n\r\nissue = jira.issue(\"INC-120440\")\r\nissues = jira.search_issues(jql_str=\"key='INC-120440'\",maxResults=3)\r\nprint(\"RESULTS>>>>\")\r\nprint(issue.key)\r\nfor i in issues:\r\n    print(\"ticket\")\r\n    print(i.fields.summary)\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nShould return the list of issues\r\n\r\n**Stack Trace**\r\n```\r\nNo error message returned\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0\r\nOS: Windows\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/791", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/791/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/791/events", "html_url": "https://github.com/pycontribs/jira/issues/791", "id": 444477119, "node_id": "MDU6SXNzdWU0NDQ0NzcxMTk=", "number": 791, "title": "You must specify a valid project lead", "user": {"login": "unformatt", "id": 157132, "node_id": "MDQ6VXNlcjE1NzEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/157132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unformatt", "html_url": "https://github.com/unformatt", "followers_url": "https://api.github.com/users/unformatt/followers", "following_url": "https://api.github.com/users/unformatt/following{/other_user}", "gists_url": "https://api.github.com/users/unformatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/unformatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unformatt/subscriptions", "organizations_url": "https://api.github.com/users/unformatt/orgs", "repos_url": "https://api.github.com/users/unformatt/repos", "events_url": "https://api.github.com/users/unformatt/events{/privacy}", "received_events_url": "https://api.github.com/users/unformatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-15T14:38:10Z", "updated_at": "2019-05-31T14:11:22Z", "closed_at": "2019-05-31T14:11:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nStarted getting this error recently when creating a project. I get this error during a unit test in which no code has changed on my end. I'm using v2.0.0 of this jira library and I also tried with `master` branch code.\r\n\r\n\r\n**To Reproduce**\r\n\r\n\r\n```python\r\nfrom jira import JIRA\r\napi = JIRA(url, basic_auth=(user, passw))\r\nnew_project = api.create_project(\r\n            key='PROJ',\r\n            name='My New Project',\r\n            template_name='Scrum software development'\r\n        )\r\n```\r\n\r\n**Expected behavior**\r\n`create_project` should return new project object\r\n\r\n**Stack Trace**\r\n```\r\nTraceback (most recent call last):\r\n  File \"env/lib/python2.7/site-packages/jira/client.py\", line 3484, in create_project\r\n    r = self._session.post(url, data=payload, headers=headers)\r\n  File \"env/lib/python2.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"env/lib/python2.7/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"env/lib/python2.7/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\nJIRAError: JiraError HTTP 400 url: https://boardgenius.atlassian.net/rest/project-templates/latest/templates\r\n    text: You must specify a valid project lead.\r\n\r\n    response headers = {'X-AREQUESTID': 'bc3b5749-0224-4007-ab26-a9074bef1a16', 'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'Transfer-Encoding': 'chunked', 'X-AACCOUNTID': 'xxx', 'X-Seraph-LoginReason': 'OK', 'Strict-Transport-Security': 'max-age=315360000; includeSubDomains; preload', 'ATL-TraceId': '75561a26377ea413', 'Server': 'AtlassianProxy/1.13.6.2', 'Connection': 'close', 'Cache-Control': 'no-cache, no-store, no-transform', 'Date': 'Wed, 15 May 2019 14:30:47 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Timing-Allow-Origin': '*'}\r\n    response text = {\"errorMessages\":[],\"errors\":{\"projectLead\":\"You must specify a valid project lead.\"}}\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7.15\r\njira-python: 2.0.0 & master branch\r\nOS: macOS & Linux\r\nOther Dependencies: n/a\r\n\r\n**Additional context**\r\nn/a\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/789", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/789/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/789/events", "html_url": "https://github.com/pycontribs/jira/issues/789", "id": 442936939, "node_id": "MDU6SXNzdWU0NDI5MzY5Mzk=", "number": 789, "title": "max_retries=0 causes authentication error", "user": {"login": "mgrubent", "id": 38822530, "node_id": "MDQ6VXNlcjM4ODIyNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/38822530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgrubent", "html_url": "https://github.com/mgrubent", "followers_url": "https://api.github.com/users/mgrubent/followers", "following_url": "https://api.github.com/users/mgrubent/following{/other_user}", "gists_url": "https://api.github.com/users/mgrubent/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgrubent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgrubent/subscriptions", "organizations_url": "https://api.github.com/users/mgrubent/orgs", "repos_url": "https://api.github.com/users/mgrubent/repos", "events_url": "https://api.github.com/users/mgrubent/events{/privacy}", "received_events_url": "https://api.github.com/users/mgrubent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-11T00:48:50Z", "updated_at": "2019-10-29T11:28:40Z", "closed_at": "2019-10-29T11:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nWhen instantiating a `JIRA`, if `max_retries=0`, basic authentication will always fail.\r\n\r\nOddly, `max_retries=0.1` allows basic authentication to succeed, with no retries.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nj = JIRA(basic_auth=(user_name, user_pass),\r\n     max_retries=0,\r\n     options={\r\n         'server': server_to_use,\r\n         'verify': verify\r\n     })\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nwith `max_retries=0`, JIRA client successfully authenticates with correct credentials.\r\nwith `max_retries=0`, JIRA client fails to authenticate with incorrect credentials, and does not retry.\r\n\r\n**Stack Trace**\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 5, in <module>\r\n  File \"/[...]/lib/python3.7/site-packages/jira/client.py\", line 472, in __init__\r\n    si = self.server_info()\r\n  File \"/[...]/lib/python3.7/site-packages/jira/client.py\", line 2133, in server_info\r\n    j = self._get_json('serverInfo')\r\n  File \"/[...]/lib/python3.7/site-packages/jira/client.py\", line 2549, in _get_json\r\n    r = self._session.get(url, params=params)\r\n  File \"/[...]/lib/python3.7/site-packages/jira/resilientsession.py\", line 151, in get\r\n    return self.__verb('GET', url, **kwargs)\r\n  File \"/[...]/lib/python3.7/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"/[...]/lib/python3.7/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\njira.exceptions.JIRAError: JiraError HTTP 401 url: [server_to_use]\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: <3.7>\r\njira-python: <2.0.0>\r\nOS: <macOS Mojave 10.14.3>\r\nIPython (Optional): None\r\nOther Dependencies:\r\n```\r\n$ cat requirements.txt \r\nasn1crypto==0.24.0\r\ncertifi==2019.3.9\r\ncffi==1.12.3\r\nchardet==3.0.4\r\ncryptography==2.6.1\r\ndefusedxml==0.6.0\r\nidna==2.8\r\njira==2.0.0\r\noauthlib==3.0.1\r\npbr==5.2.0\r\npycparser==2.19\r\nPyJWT==1.7.1\r\nrequests==2.21.0\r\nrequests-oauthlib==1.2.0\r\nrequests-toolbelt==0.9.1\r\nsix==1.12.0\r\nurllib3==1.24.3\r\n```\r\n\r\n\r\n**Additional context**\r\nUsing a `venv` here to isolate this problem from anything that may be in my global `python`.\r\n\r\nMost-easily able to reproduce from REPL, but can also repro from `python3.7 somescript.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/788", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/788/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/788/events", "html_url": "https://github.com/pycontribs/jira/issues/788", "id": 442358286, "node_id": "MDU6SXNzdWU0NDIzNTgyODY=", "number": 788, "title": "Provide specific instructions for development setup", "user": {"login": "guymatz", "id": 1688920, "node_id": "MDQ6VXNlcjE2ODg5MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1688920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guymatz", "html_url": "https://github.com/guymatz", "followers_url": "https://api.github.com/users/guymatz/followers", "following_url": "https://api.github.com/users/guymatz/following{/other_user}", "gists_url": "https://api.github.com/users/guymatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/guymatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guymatz/subscriptions", "organizations_url": "https://api.github.com/users/guymatz/orgs", "repos_url": "https://api.github.com/users/guymatz/repos", "events_url": "https://api.github.com/users/guymatz/events{/privacy}", "received_events_url": "https://api.github.com/users/guymatz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-09T17:54:22Z", "updated_at": "2019-10-29T11:28:38Z", "closed_at": "2019-10-29T11:28:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI don't know how to best setup an environment in order to be able to contribute to the jira library.   Some specific instructions for getting the codebase for development would be appreciated.  Or maybe a link to how best to go about this?  For example, do I just 'git clone'?  The something with 'python setup.py'?  I've heard about 'pip install -e' but I don't know how to use and google searches don't turn up much . . .\r\n\r\n**Describe the solution you'd like**\r\nI would like specific instructions for contributing added to the \"setup\" portion of projects Readme\r\n\r\n**Describe alternatives you've considered**\r\nI've tried googling this and asking everyone I know but have turned up nothing\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/784", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/784/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/784/events", "html_url": "https://github.com/pycontribs/jira/issues/784", "id": 440330243, "node_id": "MDU6SXNzdWU0NDAzMzAyNDM=", "number": 784, "title": "Save API tokens / passwords in keyring", "user": {"login": "asfaltboy", "id": 321520, "node_id": "MDQ6VXNlcjMyMTUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asfaltboy", "html_url": "https://github.com/asfaltboy", "followers_url": "https://api.github.com/users/asfaltboy/followers", "following_url": "https://api.github.com/users/asfaltboy/following{/other_user}", "gists_url": "https://api.github.com/users/asfaltboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asfaltboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asfaltboy/subscriptions", "organizations_url": "https://api.github.com/users/asfaltboy/orgs", "repos_url": "https://api.github.com/users/asfaltboy/repos", "events_url": "https://api.github.com/users/asfaltboy/events{/privacy}", "received_events_url": "https://api.github.com/users/asfaltboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-04T14:43:36Z", "updated_at": "2019-05-31T15:40:18Z", "closed_at": "2019-05-31T15:40:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n[Atlassian is deprecating][1] clear password authentication via basic HTTP (at least for cloud accounts), in favor of \"personal API tokens\". This means that users will need to hard-code their tokens in an alias or config file, in plain text.\r\n\r\n[1]: https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/\r\n\r\n**Describe the solution you'd like**\r\nHowever, there is a better way, using keyring/keychain provider in the OS. This is already used by the [go-jira][2] client.\r\n\r\n[2]: https://github.com/Netflix-Skunkworks/go-jira#keyring-password-source\r\n\r\n**Describe alternatives you've considered**\r\nI'm not aware of alternatives that work, besides maybe using a 3rd party password manager to save API tokens, which is ok I guess, though not very user-friendly - not everyone uses 1password/keepass, do they?\r\n\r\n**Additional context**\r\nI see the python [keyring] package, is well maintained and supports a couple of python 3 versions (3.5-3.7). Python 2.7 support was recently dropped, and if required, keyring==18 can be used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/783", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/783/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/783/events", "html_url": "https://github.com/pycontribs/jira/issues/783", "id": 439615322, "node_id": "MDU6SXNzdWU0Mzk2MTUzMjI=", "number": 783, "title": "Infinite loop when connecting to JIRA\u00a0server with bad credentials", "user": {"login": "bstiq", "id": 1847115, "node_id": "MDQ6VXNlcjE4NDcxMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1847115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstiq", "html_url": "https://github.com/bstiq", "followers_url": "https://api.github.com/users/bstiq/followers", "following_url": "https://api.github.com/users/bstiq/following{/other_user}", "gists_url": "https://api.github.com/users/bstiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstiq/subscriptions", "organizations_url": "https://api.github.com/users/bstiq/orgs", "repos_url": "https://api.github.com/users/bstiq/repos", "events_url": "https://api.github.com/users/bstiq/events{/privacy}", "received_events_url": "https://api.github.com/users/bstiq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-02T14:17:16Z", "updated_at": "2019-11-04T12:28:54Z", "closed_at": "2019-10-29T11:28:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm trying to connect to our local JIRA\u00a0server installation.\r\nI had to change my credentials on JIRA, and I didn't update them in my python code, so when connecting, the server answered with 401 Unauthorized.\r\n\r\nInstead of raising an exception, the jira library kept trying and trying, to no avail - and my account got locked out.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n    jira = JIRA(auth=(conf['JIRA_USERNAME'], conf['JIRA_PASSWD']), server=conf['JIRA_URL'])\r\n    issue = jira.issue(conf['JIRA_ISSUE'])\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\nInput incorrect Jira password\r\n\r\n**Expected behavior**\r\nI expected the jira library to raise an exception\r\n\r\n**Stack Trace**\r\n```\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 581, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 653, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"C:\\Users\\QLEB\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\jira\\client.py\", line 208, in handle_401\r\n    self.init_session()\r\n```\r\n\r\nThis log repeats itself indefinitely\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7.0\r\njira-python: 2.0.0\r\nOS: Windows 10\r\nOther Dependencies: oauthlib 2.1.0\r\n\r\nI searched around and couldn't find any related issue, feel free to advise.\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/780", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/780/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/780/events", "html_url": "https://github.com/pycontribs/jira/issues/780", "id": 434951669, "node_id": "MDU6SXNzdWU0MzQ5NTE2Njk=", "number": 780, "title": "Cloud: Basic auth and cookie based auth are deprecated", "user": {"login": "myuwono", "id": 15880686, "node_id": "MDQ6VXNlcjE1ODgwNjg2", "avatar_url": "https://avatars2.githubusercontent.com/u/15880686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myuwono", "html_url": "https://github.com/myuwono", "followers_url": "https://api.github.com/users/myuwono/followers", "following_url": "https://api.github.com/users/myuwono/following{/other_user}", "gists_url": "https://api.github.com/users/myuwono/gists{/gist_id}", "starred_url": "https://api.github.com/users/myuwono/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myuwono/subscriptions", "organizations_url": "https://api.github.com/users/myuwono/orgs", "repos_url": "https://api.github.com/users/myuwono/repos", "events_url": "https://api.github.com/users/myuwono/events{/privacy}", "received_events_url": "https://api.github.com/users/myuwono/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-18T20:43:19Z", "updated_at": "2019-10-29T10:28:38Z", "closed_at": "2019-10-29T10:28:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nBasic authentication with passwords and cookie-based authentication no longer work since effectively 14 April 2019. Api token is the supported method going forward for basic auth, i.e. `basic_auth=(username, api_token)`\r\n\r\nThe problem manifest itself in #778 when users attempt to authenticate with cookie based auth `auth=(username, password) ` (which kept on failing) and basic auth with password `basic_auth=(username, password)`\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt's important to:\r\n- reflect this in the documentation\r\n- prevent jira client from being instantiated when deprecated authentication method is selected for `deployment_type=\"Cloud\"` by throwing an appropriate exception on client creation. \r\n\r\n\r\n**Additional context**\r\n\r\n- https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/ \r\n- https://ecosystem.atlassian.net/browse/ACJIRA-1466\r\n- https://ecosystem.atlassian.net/browse/ACJIRA-1466\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/779", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/779/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/779/events", "html_url": "https://github.com/pycontribs/jira/issues/779", "id": 433503161, "node_id": "MDU6SXNzdWU0MzM1MDMxNjE=", "number": 779, "title": "Can't connect to Jira Server instance using auth", "user": {"login": "msilverglate", "id": 47373007, "node_id": "MDQ6VXNlcjQ3MzczMDA3", "avatar_url": "https://avatars1.githubusercontent.com/u/47373007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msilverglate", "html_url": "https://github.com/msilverglate", "followers_url": "https://api.github.com/users/msilverglate/followers", "following_url": "https://api.github.com/users/msilverglate/following{/other_user}", "gists_url": "https://api.github.com/users/msilverglate/gists{/gist_id}", "starred_url": "https://api.github.com/users/msilverglate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msilverglate/subscriptions", "organizations_url": "https://api.github.com/users/msilverglate/orgs", "repos_url": "https://api.github.com/users/msilverglate/repos", "events_url": "https://api.github.com/users/msilverglate/events{/privacy}", "received_events_url": "https://api.github.com/users/msilverglate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-15T22:22:10Z", "updated_at": "2020-07-27T20:01:43Z", "closed_at": "2019-11-13T11:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nCan't connect to my JIRA API(I am able to do so using CURL)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nfrom jira import JIRA\r\noptions = {\r\n    'server': 'https://myJiraServer', 'verify': False, 'auth': ('username', 'password')}\r\njira = JIRA(options)\r\n\r\nissue = jira.issue('SSD_KB-949')\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nAble to connect\r\n**Stack Trace**\r\n```\r\n\ttext: You do not have the permission to see the specified issue.\r\n\t\r\n\tresponse headers = {'X-AREQUESTID': '1098x898422x1', 'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'SAMEORIGIN', 'Content-Security-Policy': \"frame-ancestors 'self'\", 'X-ASEN': 'SEN-13433261', 'X-AUSERNAME': 'anonymous', 'Cache-Control': 'no-cache, no-store, no-transform', 'WWW-Authenticate': 'OAuth realm=\"_myrealm_\"', 'Content-Encoding': 'gzip', 'Vary': 'User-Agent', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 15 Apr 2019 22:18:19 GMT'}\r\n\tresponse text = {\"errorMessages\":[\"You do not have the permission to see the specified issue.\",\"Login Required\"],\"errors\":{}}\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: <VERSION>PyCharm\r\njira-python: <VERSION> 3.7\r\nOS: <OPERATING SYSTEM> Windows\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/778", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/778/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/778/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/778/events", "html_url": "https://github.com/pycontribs/jira/issues/778", "id": 433117908, "node_id": "MDU6SXNzdWU0MzMxMTc5MDg=", "number": 778, "title": "RecursionError: maximum recursion depth exceeded in comparison", "user": {"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2019-04-15T06:41:21Z", "updated_at": "2019-10-29T10:28:40Z", "closed_at": "2019-10-29T10:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\n\r\nUnable to log in to JIRA. I get an error: `RecursionError: maximum recursion depth exceeded in comparison`\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nusername, password = ...\r\nsite = jira.JIRA('http://mysite.atlassian.net', auth=(username, password))\r\n```\r\n\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nExpected to log into JIRA successfully.\r\n\r\n**Stack Trace**\r\n```\r\nTraceback (most recent call last):\r\n  File \"jira/weekly_summary.py\", line 130, in <module>\r\n    main()\r\n  File \"jira/weekly_summary.py\", line 65, in main\r\n    site = jira.JIRA('https://profound.atlassian.net', auth=auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 462, in __init__\r\n    user = self.session(auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 629, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 559, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 498, in request\r\n    prep = self.prepare_request(req)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 437, in prepare_request\r\n    headers=merge_setting(request.headers, self.headers, dict_class=CaseInsensitiveDict),\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/sessions.py\", line 68, in merge_setting\r\n    merged_setting = dict_class(to_key_val_list(session_setting))\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/site-packages/requests-2.19.1-py3.6.egg/requests/structures.py\", line 44, in __init__\r\n    self.update(data, **kwargs)\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/_collections_abc.py\", line 839, in update\r\n    if isinstance(other, Mapping):\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/abc.py\", line 190, in __instancecheck__\r\n    subclass in cls._abc_negative_cache):\r\n  File \"/home/misha/envs/dbi2/lib/python3.6/_weakrefset.py\", line 75, in __contains__\r\n    return wr in self.data\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.5\r\njira-python: 2.0.0\r\nOS: Ubuntu 18.04\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\n\r\nThis used to work last week. Something changed since then (possibly on the JIRA side).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/776", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/776/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/776/events", "html_url": "https://github.com/pycontribs/jira/issues/776", "id": 430846519, "node_id": "MDU6SXNzdWU0MzA4NDY1MTk=", "number": 776, "title": "Only 20 worklog return per issue ID", "user": {"login": "ankitg1989", "id": 20354406, "node_id": "MDQ6VXNlcjIwMzU0NDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/20354406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitg1989", "html_url": "https://github.com/ankitg1989", "followers_url": "https://api.github.com/users/ankitg1989/followers", "following_url": "https://api.github.com/users/ankitg1989/following{/other_user}", "gists_url": "https://api.github.com/users/ankitg1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitg1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitg1989/subscriptions", "organizations_url": "https://api.github.com/users/ankitg1989/orgs", "repos_url": "https://api.github.com/users/ankitg1989/repos", "events_url": "https://api.github.com/users/ankitg1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitg1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-09T08:54:24Z", "updated_at": "2019-04-11T04:48:12Z", "closed_at": "2019-04-11T04:48:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "jira = JIRA(options={'server': 'https://jiraurl/jira','verify': False}, basic_auth=('username', 'pass'))\r\nissue = jira.issue('jira-ID')\r\nprint (len(issue.fields.worklog.worklogs))\r\n\r\nI am running the above code and getting length as 20 even when particular JIRA-ID has 26 worklog entries.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/775", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/775/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/775/events", "html_url": "https://github.com/pycontribs/jira/issues/775", "id": 428675688, "node_id": "MDU6SXNzdWU0Mjg2NzU2ODg=", "number": 775, "title": "Unable to login to Jira using HTTP BASIC", "user": {"login": "KaterynaStreltsovaDevPro", "id": 38039414, "node_id": "MDQ6VXNlcjM4MDM5NDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/38039414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaterynaStreltsovaDevPro", "html_url": "https://github.com/KaterynaStreltsovaDevPro", "followers_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/followers", "following_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/following{/other_user}", "gists_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/subscriptions", "organizations_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/orgs", "repos_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/repos", "events_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/events{/privacy}", "received_events_url": "https://api.github.com/users/KaterynaStreltsovaDevPro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T09:58:48Z", "updated_at": "2019-10-29T11:28:34Z", "closed_at": "2019-10-29T11:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cloud trial jira is used for  testing purposes, python 3.7:\r\n\r\n        jira = JIRA('https://bugtesting1.atlassian.net')\r\n        auth_jira = JIRA(basic_auth=('*******@dev-***.net', '******'))\r\n        issue = jira.issue('TEST-1')\r\n\r\nI tried to use email + password and email +Api token as the account has 2-step verification\r\n(https://confluence.atlassian.com/cloud/api-tokens-938839638.html)\r\n\r\nGot error:\r\nWARNING:root:Got recoverable error from GET http://localhost:2990/jira/rest/api/2/serverInfo, will retry [3/3] in 6.62363911791183s. Err: HTTPConnectionPool(host='localhost', port=2990): Max retries exceeded with url: /jira/rest/api/2/serverInfo (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x03AE5330>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\r\nWARNING:root:HTTPConnectionPool(host='localhost', port=2990): Max retries exceeded with url: /jira/rest/api/2/serverInfo (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x03AE5D50>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')) while doing GET http://localhost:2990/jira/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\kateryna.streltsova\\Documents\\Automation-Utils\\venv_auto_utils\\lib\\site-packages\\urllib3\\connection.py\", line 159, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw)\r\n  File \"C:\\Users\\kateryna.streltsova\\Documents\\Automation-Utils\\venv_auto_utils\\lib\\site-packages\\urllib3\\util\\connection.py\", line 80, in create_connection\r\n    raise err\r\n  File \"C:\\Users\\kateryna.streltsova\\Documents\\Automation-Utils\\venv_auto_utils\\lib\\site-packages\\urllib3\\util\\connection.py\", line 70, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0.0\r\nOS:  Windows\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/774", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/774/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/774/events", "html_url": "https://github.com/pycontribs/jira/issues/774", "id": 427007087, "node_id": "MDU6SXNzdWU0MjcwMDcwODc=", "number": 774, "title": "update_filter() does not update favourite status", "user": {"login": "mattmaniflaf", "id": 8450388, "node_id": "MDQ6VXNlcjg0NTAzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8450388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattmaniflaf", "html_url": "https://github.com/mattmaniflaf", "followers_url": "https://api.github.com/users/mattmaniflaf/followers", "following_url": "https://api.github.com/users/mattmaniflaf/following{/other_user}", "gists_url": "https://api.github.com/users/mattmaniflaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattmaniflaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattmaniflaf/subscriptions", "organizations_url": "https://api.github.com/users/mattmaniflaf/orgs", "repos_url": "https://api.github.com/users/mattmaniflaf/repos", "events_url": "https://api.github.com/users/mattmaniflaf/events{/privacy}", "received_events_url": "https://api.github.com/users/mattmaniflaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-29T14:14:06Z", "updated_at": "2019-10-29T11:28:33Z", "closed_at": "2019-10-29T11:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The favourite parameter to update_filter() API seems to be ignored.\r\n\r\nI created a filter :\r\n  (pdb) new_filt = create_filter(name=\"Myfilter\", description=\"My New filter\", jql=\"assignee in (MattMan)\", favourite=False)\r\n  (pdb) new_filt.favourite\r\n  False\r\n\r\nAttempt to change to True:\r\n   (pdb) new_filt = update_filter(\"10001\", favourite=True)\r\n   (pdb) new_filt.favourite\r\n    False\r\n\r\nWhen I look at the filter in the UI it shows as not a favourite, and the only way to set as a favourite is to do so via UI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/773", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/773/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/773/events", "html_url": "https://github.com/pycontribs/jira/issues/773", "id": 426997183, "node_id": "MDU6SXNzdWU0MjY5OTcxODM=", "number": 773, "title": "find(\"filter/favourite\") throws AttributeError: 'list' object has no attribute 'items'", "user": {"login": "mattmaniflaf", "id": 8450388, "node_id": "MDQ6VXNlcjg0NTAzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8450388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattmaniflaf", "html_url": "https://github.com/mattmaniflaf", "followers_url": "https://api.github.com/users/mattmaniflaf/followers", "following_url": "https://api.github.com/users/mattmaniflaf/following{/other_user}", "gists_url": "https://api.github.com/users/mattmaniflaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattmaniflaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattmaniflaf/subscriptions", "organizations_url": "https://api.github.com/users/mattmaniflaf/orgs", "repos_url": "https://api.github.com/users/mattmaniflaf/repos", "events_url": "https://api.github.com/users/mattmaniflaf/events{/privacy}", "received_events_url": "https://api.github.com/users/mattmaniflaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-29T13:53:07Z", "updated_at": "2019-10-29T11:28:35Z", "closed_at": "2019-10-29T11:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not find a means of accessing a complete list of filters.\r\n\r\nI know \"filter/favourites\" will return a list of filters, however when calling find() with this resource type an AttributeError is thrown, because a \"list\" object does not contain an \"items\" attribute.\r\n\r\n\"filter/favourite\" REST call will return a list of favourite filters, however find() presumes all returned data is a dictionary, yet in this scenario it's a list.\r\n\r\nOffending code is in resources.py:\r\n326         def _parse_raw(self, raw):\r\n327             self.raw = raw\r\n328             if not raw:\r\n329                 raise NotImplementedError(\"We cannot instantiate empty resources: %s\" % raw)\r\n330  ->         dict2resource(raw, self, self._options, self._session)\r\n\r\nThe call to dict2resource() resumes \"raw\" is a dictionary, where as in my scenario it's a list\r\n\r\nTwo questions arise :\r\n - Am I using the find() API call correctly ?\r\n - Is there another means of retrieving a list of filters, regardless of whether they are favourites or not ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/771", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/771/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/771/events", "html_url": "https://github.com/pycontribs/jira/issues/771", "id": 422425645, "node_id": "MDU6SXNzdWU0MjI0MjU2NDU=", "number": 771, "title": "Querying user info will break after jira gdpr changes are implemented", "user": {"login": "Plazmaz", "id": 1331014, "node_id": "MDQ6VXNlcjEzMzEwMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1331014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plazmaz", "html_url": "https://github.com/Plazmaz", "followers_url": "https://api.github.com/users/Plazmaz/followers", "following_url": "https://api.github.com/users/Plazmaz/following{/other_user}", "gists_url": "https://api.github.com/users/Plazmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plazmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plazmaz/subscriptions", "organizations_url": "https://api.github.com/users/Plazmaz/orgs", "repos_url": "https://api.github.com/users/Plazmaz/repos", "events_url": "https://api.github.com/users/Plazmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Plazmaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T20:43:58Z", "updated_at": "2019-03-18T20:51:26Z", "closed_at": "2019-03-18T20:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "After April 29th, querying user info using this library will fail. This is due to the `User` resource querying on username. Anywhere that currently uses username or userKey to query needs to also support using the account I'd or uuid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/770", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/770/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/770/events", "html_url": "https://github.com/pycontribs/jira/issues/770", "id": 422337729, "node_id": "MDU6SXNzdWU0MjIzMzc3Mjk=", "number": 770, "title": "Need a way to match the migration process to accountID", "user": {"login": "tr1cks", "id": 8397291, "node_id": "MDQ6VXNlcjgzOTcyOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8397291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tr1cks", "html_url": "https://github.com/tr1cks", "followers_url": "https://api.github.com/users/tr1cks/followers", "following_url": "https://api.github.com/users/tr1cks/following{/other_user}", "gists_url": "https://api.github.com/users/tr1cks/gists{/gist_id}", "starred_url": "https://api.github.com/users/tr1cks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tr1cks/subscriptions", "organizations_url": "https://api.github.com/users/tr1cks/orgs", "repos_url": "https://api.github.com/users/tr1cks/repos", "events_url": "https://api.github.com/users/tr1cks/events{/privacy}", "received_events_url": "https://api.github.com/users/tr1cks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-18T17:14:31Z", "updated_at": "2019-10-29T11:28:32Z", "closed_at": "2019-10-29T11:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It can be achieved according to https://developer.atlassian.com/blog/2019/01/speed-up-your-jira-confluence-migrations-accountid/ by two ways:\r\n\r\n1. Possibility to add header \"x-atlassian-force-account-id: true\" into each request.\r\n2. Adding it to default headers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/768", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/768/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/768/events", "html_url": "https://github.com/pycontribs/jira/issues/768", "id": 421459577, "node_id": "MDU6SXNzdWU0MjE0NTk1Nzc=", "number": 768, "title": "Disable warning for json_result and maxResults=0", "user": {"login": "fahrenberger", "id": 684724, "node_id": "MDQ6VXNlcjY4NDcyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/684724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fahrenberger", "html_url": "https://github.com/fahrenberger", "followers_url": "https://api.github.com/users/fahrenberger/followers", "following_url": "https://api.github.com/users/fahrenberger/following{/other_user}", "gists_url": "https://api.github.com/users/fahrenberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/fahrenberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fahrenberger/subscriptions", "organizations_url": "https://api.github.com/users/fahrenberger/orgs", "repos_url": "https://api.github.com/users/fahrenberger/repos", "events_url": "https://api.github.com/users/fahrenberger/events{/privacy}", "received_events_url": "https://api.github.com/users/fahrenberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-15T10:50:27Z", "updated_at": "2019-10-29T12:28:35Z", "closed_at": "2019-10-29T12:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I trigger a search with json_result=True and maxResults=0, the client puts out a warning that not all issues can be fetched at once in JSON format (client.py in line 2073). However, the resulting behavior is as expected, since maxResults=0 will never return any issues in the newer REST API iterations but only the search metadata. This is very handy to just count the number of results in a search.\r\n\r\nA simple solution would be to replace the line 2072 in client.py\r\n`if not maxResults:`\r\nwith\r\n`if maxResults == None:`\r\n\r\nThis would still trigger the warning if no maxResults is given, but for the intentional maxResults=0, the warning is suppressed. This to me seems like a more consistent behavior.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/756", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/756/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/756/events", "html_url": "https://github.com/pycontribs/jira/issues/756", "id": 405783225, "node_id": "MDU6SXNzdWU0MDU3ODMyMjU=", "number": 756, "title": "Python 3.7 ConfigParser incompatibility", "user": {"login": "vladcherry", "id": 4894401, "node_id": "MDQ6VXNlcjQ4OTQ0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4894401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladcherry", "html_url": "https://github.com/vladcherry", "followers_url": "https://api.github.com/users/vladcherry/followers", "following_url": "https://api.github.com/users/vladcherry/following{/other_user}", "gists_url": "https://api.github.com/users/vladcherry/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladcherry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladcherry/subscriptions", "organizations_url": "https://api.github.com/users/vladcherry/orgs", "repos_url": "https://api.github.com/users/vladcherry/repos", "events_url": "https://api.github.com/users/vladcherry/events{/privacy}", "received_events_url": "https://api.github.com/users/vladcherry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-01T16:47:00Z", "updated_at": "2019-10-29T12:28:33Z", "closed_at": "2019-10-29T12:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n**Describe the bug**\r\nConfigParser from python3.7 throw the exception TypeError: option values must be strings\r\n\r\n**To Reproduce**\r\n```\r\nconfig = configparser.ConfigParser(defaults={'user': None, 'pass': None, 'appid': appid, 'autofix': autofix,\r\n                                                 'verify': 'yes' if verify else 'no'})\r\n```\r\n\r\n**Stack Trace**\r\n```\r\nFile \"/env/lib/python3.7/site-packages/jira/config.py\", line 63, in get_jira 'verify': 'yes' if verify else 'no'}) \r\nFile \"/opt/python3.7/lib/python3.7/configparser.py\", line 638, in __init__ self._read_defaults(defaults) \r\nFile \"/opt/python3.7/lib/python3.7/configparser.py\", line 1216, in _read_defaults self.read_dict({self.default_section: defaults}) \r\nFile \"/opt/python3.7/lib/python3.7/configparser.py\", line 753, in read_dict self.set(section, key, value) \r\nFile \"/opt/python3.7/lib/python3.7/configparser.py\", line 1197, in set self._validate_value_types(option=option, value=value) \r\nFile \"/opt/python3.7/lib/python3.7/configparser.py\", line 1182, in _validate_value_types raise TypeError(\"option values must be strings\") TypeError: option values must be strings\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0.0 and 2.0.1.0rc1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/754", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/754/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/754/events", "html_url": "https://github.com/pycontribs/jira/issues/754", "id": 404851677, "node_id": "MDU6SXNzdWU0MDQ4NTE2Nzc=", "number": 754, "title": "can't take worklog", "user": {"login": "Volosatiyslon", "id": 47186157, "node_id": "MDQ6VXNlcjQ3MTg2MTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/47186157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Volosatiyslon", "html_url": "https://github.com/Volosatiyslon", "followers_url": "https://api.github.com/users/Volosatiyslon/followers", "following_url": "https://api.github.com/users/Volosatiyslon/following{/other_user}", "gists_url": "https://api.github.com/users/Volosatiyslon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Volosatiyslon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Volosatiyslon/subscriptions", "organizations_url": "https://api.github.com/users/Volosatiyslon/orgs", "repos_url": "https://api.github.com/users/Volosatiyslon/repos", "events_url": "https://api.github.com/users/Volosatiyslon/events{/privacy}", "received_events_url": "https://api.github.com/users/Volosatiyslon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-30T16:23:54Z", "updated_at": "2019-10-29T10:28:39Z", "closed_at": "2019-10-29T10:28:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "can't got worklog entries\r\n\r\nmy code is:\r\n\r\n```\r\nfrom jira import JIRA\r\njira = JIRA(basic_auth=('robot', 'somepass'), options={'server': 'someurl'})\r\nissue = jira.issue('INT-117')\r\nworklogentry=issue.fields.worklog.worklogs[0]\r\n```\r\n\r\nwhen I try to run it i got\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"jiratest.py\", line 4, in <module>\r\n    worklogentry=issue.fields.worklog.worklogs[0]\r\nAttributeError: type object 'PropertyHolder' has no attribute 'worklog'\r\n```\r\nJIRA 7.9.2\r\npip -list: jira 2.0.0\r\npython 2.7 and 3.7\r\nrunning on macOS\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/752", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/752/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/752/events", "html_url": "https://github.com/pycontribs/jira/issues/752", "id": 403778762, "node_id": "MDU6SXNzdWU0MDM3Nzg3NjI=", "number": 752, "title": "projectKeyOrID not available as argument for boards init", "user": {"login": "kentsanggds", "id": 22152807, "node_id": "MDQ6VXNlcjIyMTUyODA3", "avatar_url": "https://avatars1.githubusercontent.com/u/22152807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kentsanggds", "html_url": "https://github.com/kentsanggds", "followers_url": "https://api.github.com/users/kentsanggds/followers", "following_url": "https://api.github.com/users/kentsanggds/following{/other_user}", "gists_url": "https://api.github.com/users/kentsanggds/gists{/gist_id}", "starred_url": "https://api.github.com/users/kentsanggds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kentsanggds/subscriptions", "organizations_url": "https://api.github.com/users/kentsanggds/orgs", "repos_url": "https://api.github.com/users/kentsanggds/repos", "events_url": "https://api.github.com/users/kentsanggds/events{/privacy}", "received_events_url": "https://api.github.com/users/kentsanggds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-28T11:56:30Z", "updated_at": "2019-10-29T11:28:37Z", "closed_at": "2019-10-29T11:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\n\r\nprojectKeyOrID is not available as an argument for jira.boards\r\n\r\nThis is the error I get when I try to pass in `projectKeyOrID` - \r\n\r\n```\r\nFile \"/Users/xxx/.virtualenvs/yyy/lib/python3.6/site-packages/jira/client.py\", line 126, in wrapper\r\n    result = func(*arg_list, **kwargs)\r\nTypeError: boards() got an unexpected keyword argument 'projectKeyOrID'\r\n```\r\n\r\nTo work around this as it appears to be supported I'm doing this in the `requirements.txt` file - \r\n\r\n```\r\n-e git://github.com/pycontribs/jira.git@master#egg=jira\r\n```\r\n\r\nbut it's obviously not the best way to get it working.\r\n\r\n****\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nIn the `requirements.txt` use this to install jira client\r\n\r\n```\r\njira==2.0.0\r\n```\r\n\r\nthen in the main code do something like this - \r\n\r\n```\r\nboards = self.jira.boards(projectKeyOrID=project.id)\r\n```\r\n\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nNo exceptions when passing in projectKeyOrID to boards init\r\n\r\n**Stack Trace**\r\n```\r\n  File \"/Users/xxx/.virtualenvs/yyy/lib/python3.6/site-packages/jira/client.py\", line 126, in wrapper\r\n    result = func(*arg_list, **kwargs)\r\nTypeError: boards() got an unexpected keyword argument 'projectKeyOrID'\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6\r\njira-python: 2.0.0\r\nOS: Mac OS\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/751", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/751/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/751/events", "html_url": "https://github.com/pycontribs/jira/issues/751", "id": 402775797, "node_id": "MDU6SXNzdWU0MDI3NzU3OTc=", "number": 751, "title": "unable to extract project type field from jira getting error - AttributeError: type object 'PropertyHolder' has no attribute 'projecttype'", "user": {"login": "neeraj2019", "id": 47003412, "node_id": "MDQ6VXNlcjQ3MDAzNDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/47003412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neeraj2019", "html_url": "https://github.com/neeraj2019", "followers_url": "https://api.github.com/users/neeraj2019/followers", "following_url": "https://api.github.com/users/neeraj2019/following{/other_user}", "gists_url": "https://api.github.com/users/neeraj2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/neeraj2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neeraj2019/subscriptions", "organizations_url": "https://api.github.com/users/neeraj2019/orgs", "repos_url": "https://api.github.com/users/neeraj2019/repos", "events_url": "https://api.github.com/users/neeraj2019/events{/privacy}", "received_events_url": "https://api.github.com/users/neeraj2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T15:59:26Z", "updated_at": "2019-10-29T12:28:32Z", "closed_at": "2019-10-29T12:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nunable to fetch field \"project type\"\r\ngetting error-  AttributeError: type object 'PropertyHolder' has no attribute 'projecttype'\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nfor issue in x.search_issues('project = ABC AND created >= 2019-01-13 AND created <= 2019-01-18', maxResults=3):\r\n    print(issue.fields.summary, issue.key, issue.fields.status, issue.fields.projecttype, issue.fields.priority, issue.fields.assignee,issue.fields.reporter,issue.fields.created, issue.fields.description, issue.fields.environment)\r\n```\r\nCode block\r\nfor issue in x.search_issues('project = ABC AND created >= 2019-01-13 AND created <= 2019-01-18', maxResults=3):\r\n    print(issue.fields.summary, issue.key, issue.fields.status, issue.fields.projecttype, issue.fields.priority, issue.fields.assignee,issue.fields.reporter,issue.fields.created, issue.fields.description, issue.fields.environment)\r\n\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nneed project type field in extract\r\n\r\n**Stack Trace**\r\n```\r\nA code block with the any trace messages.\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.5.0\r\njira-python: 2.0.0\r\nOS: windows 10\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/750", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/750/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/750/events", "html_url": "https://github.com/pycontribs/jira/issues/750", "id": 402381138, "node_id": "MDU6SXNzdWU0MDIzODExMzg=", "number": 750, "title": "Retry requests if failed with empty response", "user": {"login": "optilude", "id": 160906, "node_id": "MDQ6VXNlcjE2MDkwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/160906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/optilude", "html_url": "https://github.com/optilude", "followers_url": "https://api.github.com/users/optilude/followers", "following_url": "https://api.github.com/users/optilude/following{/other_user}", "gists_url": "https://api.github.com/users/optilude/gists{/gist_id}", "starred_url": "https://api.github.com/users/optilude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/optilude/subscriptions", "organizations_url": "https://api.github.com/users/optilude/orgs", "repos_url": "https://api.github.com/users/optilude/repos", "events_url": "https://api.github.com/users/optilude/events{/privacy}", "received_events_url": "https://api.github.com/users/optilude/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-23T18:51:21Z", "updated_at": "2019-10-29T12:28:31Z", "closed_at": "2019-10-29T12:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is possibly more of a bug in JIRA than in this library, but it would be immensely helpful to implement a workaround for https://jira.atlassian.com/browse/JRASERVER-41559. It's been open for years so I'm not very hopeful of an upstream fix.\r\n\r\nBasically, JIRA periodically (and incorrectly) responds to REST calls with an HTTP 200 response with an empty body. When that happens in e.g. `search_issues()` it can make it look like the query matched nothing, rather than an error.\r\n\r\nI think there is already a retry capability for \"recoverable errors\" with correct HTTP codes, but this is a special case.\r\n\r\nThe specific problem I have is with this code in `_fetch_pages`, which is fetching subsequent pages in a loop:\r\n\r\n```\r\n                    page_params['startAt'] = page_start\r\n                    page_params['maxResults'] = page_size\r\n                    resource = self._get_json(request_path, params=page_params, base=base)\r\n                    if resource:\r\n                        next_items_page = self._get_items_from_page(\r\n                            item_type, items_key, resource)\r\n                        items.extend(next_items_page)\r\n                        page_start += page_size\r\n                    else:\r\n                        # if resource is an empty dictionary we assume no-results\r\n                        break\r\n```\r\n\r\nThe `break` statement means that when this JIRA bug is hit, the client stops trying to get further pages, so I get an incomplete result set.\r\n\r\nI've seen the same problem with the `fields()` method, which again just returns an empty record, and thus silently fails (it looks as if you're talking to a JIRA instance with no fields at all defined).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/749", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/749/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/749/events", "html_url": "https://github.com/pycontribs/jira/issues/749", "id": 402180572, "node_id": "MDU6SXNzdWU0MDIxODA1NzI=", "number": 749, "title": "Add delete_remote_link() function", "user": {"login": "Kilinich", "id": 33486855, "node_id": "MDQ6VXNlcjMzNDg2ODU1", "avatar_url": "https://avatars0.githubusercontent.com/u/33486855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kilinich", "html_url": "https://github.com/Kilinich", "followers_url": "https://api.github.com/users/Kilinich/followers", "following_url": "https://api.github.com/users/Kilinich/following{/other_user}", "gists_url": "https://api.github.com/users/Kilinich/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kilinich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kilinich/subscriptions", "organizations_url": "https://api.github.com/users/Kilinich/orgs", "repos_url": "https://api.github.com/users/Kilinich/repos", "events_url": "https://api.github.com/users/Kilinich/events{/privacy}", "received_events_url": "https://api.github.com/users/Kilinich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 110231331, "node_id": "MDU6TGFiZWwxMTAyMzEzMzE=", "url": "https://api.github.com/repos/pycontribs/jira/labels/enhancement", "name": "enhancement", "color": "ededed", "default": true, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T10:52:36Z", "updated_at": "2019-10-29T11:28:31Z", "closed_at": "2019-10-29T11:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is add_remote_link() function but no way to remove link. Please implement delete_remote_link() function to be able clean up remote links.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/745", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/745/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/745/events", "html_url": "https://github.com/pycontribs/jira/issues/745", "id": 398702174, "node_id": "MDU6SXNzdWUzOTg3MDIxNzQ=", "number": 745, "title": ".author in issue.changelog.histories[i] no longer has queryable attributes", "user": {"login": "eeksock", "id": 2848109, "node_id": "MDQ6VXNlcjI4NDgxMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2848109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eeksock", "html_url": "https://github.com/eeksock", "followers_url": "https://api.github.com/users/eeksock/followers", "following_url": "https://api.github.com/users/eeksock/following{/other_user}", "gists_url": "https://api.github.com/users/eeksock/gists{/gist_id}", "starred_url": "https://api.github.com/users/eeksock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eeksock/subscriptions", "organizations_url": "https://api.github.com/users/eeksock/orgs", "repos_url": "https://api.github.com/users/eeksock/repos", "events_url": "https://api.github.com/users/eeksock/events{/privacy}", "received_events_url": "https://api.github.com/users/eeksock/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-13T21:39:09Z", "updated_at": "2019-10-29T12:28:30Z", "closed_at": "2019-10-29T12:28:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nPreviously, accessing the ```author``` attributes, such as ```author.key``` or ```author.name``` or ```author.emailAddress``` worked. However, I am now getting the following error:\r\n\r\nTypeError: argument of type 'NoneType' is not iterable\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n(in jira-shell)\r\n```\r\nissue = jira.issue('ANY-ISSUE', expand='changelog')\r\nhistories = issue.changelog.histories\r\nfor history in histories:\r\n    print history.id # works\r\n    print history.created # works\r\n    print history.author.key # no longer works, used to work\r\n\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\n\r\nhistory.author.key, history.author.emailAddress, history.author.name, etc. should all work. These return values all appear in the JSON response. This also used to work, but no longer works for some reason.\r\n\r\n**Stack Trace**\r\n```\r\nIn [11]: histories[0].author.key\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n/Library/Python/2.7/site-packages/jira/jirashell.pyc in <module>()\r\n----> 1 histories[0].author.key\r\n\r\n/Library/Python/2.7/site-packages/jira/resources.pyc in __getattr__(self, item)\r\n    168                 raise KeyError(item)\r\n    169 \r\n--> 170             if hasattr(self, 'raw') and item in self.raw:\r\n    171                 return self.raw[item]\r\n    172             else:\r\n\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7.10\r\njira-python: 1.0.10\r\nOS: macOS 10.14.3 Beta (18D38a)\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/743", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/743/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/743/events", "html_url": "https://github.com/pycontribs/jira/issues/743", "id": 398500187, "node_id": "MDU6SXNzdWUzOTg1MDAxODc=", "number": 743, "title": "Provide client function to parse raw responses", "user": {"login": "tholam", "id": 5974730, "node_id": "MDQ6VXNlcjU5NzQ3MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5974730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tholam", "html_url": "https://github.com/tholam", "followers_url": "https://api.github.com/users/tholam/followers", "following_url": "https://api.github.com/users/tholam/following{/other_user}", "gists_url": "https://api.github.com/users/tholam/gists{/gist_id}", "starred_url": "https://api.github.com/users/tholam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tholam/subscriptions", "organizations_url": "https://api.github.com/users/tholam/orgs", "repos_url": "https://api.github.com/users/tholam/repos", "events_url": "https://api.github.com/users/tholam/events{/privacy}", "received_events_url": "https://api.github.com/users/tholam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-12T00:33:54Z", "updated_at": "2019-10-29T12:28:29Z", "closed_at": "2019-10-29T12:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nIt would be nice to have some client exposed function to get a resource Object from a raw json response from the api.  A situation where this would be useful is if you're creating a jira webhook on an issue update which sends a json body that already contains all the same information you would get from a request to the api for an issue. https://developer.atlassian.com/server/jira/platform/webhooks/#example-callback-for-an-issue-related-event \r\n\r\n**Describe the solution you'd like**\r\nResources already have a `_parse_raw` function that already does this https://github.com/pycontribs/jira/blob/master/jira/resources.py#L393\r\n\r\nI think it would be nice to have a function in the client JIRA object that allows you to pass the resource type with the raw json to get a resource back with the options and session set so that you could use it to make modifications using the api.  \r\n\r\n**Describe alternatives you've considered**\r\nI've been initializing resources with the `raw` kwarg and `_options` and `_session` from the client object but I'd rather not rely on implementation details.\r\n\r\n**Additional context**\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/742", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/742/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/742/events", "html_url": "https://github.com/pycontribs/jira/issues/742", "id": 398411427, "node_id": "MDU6SXNzdWUzOTg0MTE0Mjc=", "number": 742, "title": "JiraError HTTP 500 when adding attachment with Cyrillic characters in the filename", "user": {"login": "lzakharov", "id": 26368218, "node_id": "MDQ6VXNlcjI2MzY4MjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/26368218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzakharov", "html_url": "https://github.com/lzakharov", "followers_url": "https://api.github.com/users/lzakharov/followers", "following_url": "https://api.github.com/users/lzakharov/following{/other_user}", "gists_url": "https://api.github.com/users/lzakharov/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzakharov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzakharov/subscriptions", "organizations_url": "https://api.github.com/users/lzakharov/orgs", "repos_url": "https://api.github.com/users/lzakharov/repos", "events_url": "https://api.github.com/users/lzakharov/events{/privacy}", "received_events_url": "https://api.github.com/users/lzakharov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-11T18:56:36Z", "updated_at": "2019-01-15T09:37:24Z", "closed_at": "2019-01-15T09:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get HTTP **500** Internal Server **Error** when trying to add attachment with Cyrillic characters in the filename:\r\n```\r\nfilename='\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.pdf'\r\njira.add_attachment(issue=issue, attachment=attachment, filename=filename)\r\n```\r\n\r\nError:\r\n```\r\nJIRAError: JiraError HTTP 500 url: https://jira.infotech.team/rest/api/2/issue/GC-996/attachments\r\n\t\r\n\tresponse headers = {'Server': 'nginx/1.12.0', 'Date': 'Fri, 11 Jan 2019 18:25:20 GMT', 'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'X-AREQUESTID': '1285x20464268x1', 'X-ASESSIONID': 'x3nqrn', 'X-ASEN': 'SEN-L10306871', 'X-Seraph-LoginReason': 'OK', 'X-AUSERNAME': 'l.zaharov', 'Cache-Control': 'no-cache, no-store, no-transform', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Vary': 'User-Agent'}\r\n\tresponse text =\r\n```\r\n\r\nEnvironment:\r\nPython 3.6.6\r\njira 2.0.0\r\nmacOS 10.14.2\r\n\r\n---\r\nMy current solution for this problem:\r\n\r\n```\r\nfilename = urllib.parse.quote_plus('\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.pdf')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/741", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/741/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/741/events", "html_url": "https://github.com/pycontribs/jira/issues/741", "id": 398248826, "node_id": "MDU6SXNzdWUzOTgyNDg4MjY=", "number": 741, "title": "Upload attachment to a comment?", "user": {"login": "peterdutton", "id": 942130, "node_id": "MDQ6VXNlcjk0MjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/942130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterdutton", "html_url": "https://github.com/peterdutton", "followers_url": "https://api.github.com/users/peterdutton/followers", "following_url": "https://api.github.com/users/peterdutton/following{/other_user}", "gists_url": "https://api.github.com/users/peterdutton/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterdutton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterdutton/subscriptions", "organizations_url": "https://api.github.com/users/peterdutton/orgs", "repos_url": "https://api.github.com/users/peterdutton/repos", "events_url": "https://api.github.com/users/peterdutton/events{/privacy}", "received_events_url": "https://api.github.com/users/peterdutton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-11T11:25:11Z", "updated_at": "2019-10-29T12:28:28Z", "closed_at": "2019-10-29T12:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi - I'm currently importing issues into Jira from a previous bug tracker and I need to attach the files that were within those issues as well as the issue text. \r\n\r\nI've used Jira's CSV import to add the issues and now I need to add the files (which I have downloaded locally in a structured format) to the Jira issues.\r\n\r\nI did try to add the files as part of the CSV import, but it's not possible in Jira Cloud unless the files can be linked to from a publicly-accessible web page; ours are private and sometimes contain sensitive data.\r\n\r\nIdeally I'd like to be able to add the files to the 'comment' events that they were originally attached to, rather than the 'overall' issue, but I can't see how this is possible from the documentation. In the Jira UI it is possible to add a file to an existing comment. \r\n\r\nIs it possible to add a file to a comment using this library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/740", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/740/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/740/events", "html_url": "https://github.com/pycontribs/jira/issues/740", "id": 396639139, "node_id": "MDU6SXNzdWUzOTY2MzkxMzk=", "number": 740, "title": "Transitioning issues in for loop fails", "user": {"login": "pkaramol", "id": 2778429, "node_id": "MDQ6VXNlcjI3Nzg0Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2778429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkaramol", "html_url": "https://github.com/pkaramol", "followers_url": "https://api.github.com/users/pkaramol/followers", "following_url": "https://api.github.com/users/pkaramol/following{/other_user}", "gists_url": "https://api.github.com/users/pkaramol/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkaramol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkaramol/subscriptions", "organizations_url": "https://api.github.com/users/pkaramol/orgs", "repos_url": "https://api.github.com/users/pkaramol/repos", "events_url": "https://api.github.com/users/pkaramol/events{/privacy}", "received_events_url": "https://api.github.com/users/pkaramol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-07T20:33:42Z", "updated_at": "2019-01-07T20:57:08Z", "closed_at": "2019-01-07T20:57:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI am filtering some issues and adding them in a list.\r\nWhen iterating through the list, one of the transitions __seems to__ fail (but is actually implemented) with `Invalid transition name. Start Work` (although the transition is definately valid)  and the other one is never carried out.\r\n\r\nIf I re-run the script, the one that was not performed, is now carried out.\r\n\r\nIf the list contains only one issue, the transition always succeeds.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```python\r\ndef open_client_session():\r\n    options = { 'server': JIRA_DOMAIN }\r\n    return JIRA(options=options, timeout=10, max_retries=1, basic_auth=(JIRA_USER, JIRA_TOKEN))\r\n\r\ndef update_issues(sprintname, fixVersion):\r\n\r\n    jira_client = None\r\n\r\n    jira_client = open_client_session()\r\n\r\n    issue_list = []\r\n\r\n    jql_expression = 'fixVersion=\"{}\" AND sprint in openSprints() AND status={} AND (issuetype={} OR issuetype={})'.format(FIX_VERSION, TEST_STATUS_FROM, TEST_ISSUETYPE1, TEST_ISSUETYPE2)\r\n\r\n    issues = jira_client.search_issues(jql_expression, maxResults=False, fields=[\"status\", \"issuetype\", SPRINT_CUSTOM_FIELD])\r\n\r\n    for value in issues:\r\n        sprint_list = (getattr(value.fields, SPRINT_CUSTOM_FIELD))\r\n        if sprint_list:\r\n            for sprint_item in sprint_list:\r\n                sprint_name = re.findall(r\"name=[^,]*\", str(getattr(value.fields, SPRINT_CUSTOM_FIELD)[0]))\r\n                sprint_name = sprint_name[0].split(\"=\")[1]\r\n                # sprint_state = re.findall(r\"state=[^,]*\", str(getattr(value.fields, SPRINT_CUSTOM_FIELD)[0]))\r\n                if sprint_name == sprintname:\r\n                    issue_list.append(value)\r\n\r\n\r\n    for item in issue_list:\r\n        print(\"Issue to be affected: {}, with old status {}\".format(str(item), item.fields.status.name))\r\n        jira_client.transition_issue(str(value), \"Start Work\")\r\n        time.sleep(3)\r\n        print(\"Issue {} now in status {}\".format(str(item), item.fields.status.name))\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    update_issues(\"Test Sprint 1\", \"1.0.0\")\r\n\r\n```\r\n**Expected behavior**\r\nAll issues retrieved should be transitioned in the desired state;\r\n\r\n**Stack Trace**\r\n```python\r\nIssue to be affected: TESTSP-26, with old status Open\r\nIssue TESTSP-26 now in status Open\r\nIssue to be affected: TESTSP-25, with old status Open\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/jira/client.py\", line 1554, in transition_issue\r\n    transitionId = int(transition)\r\nValueError: invalid literal for int() with base 10: 'Start Work'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./move_issues.py\", line 60, in <module>\r\n    update_issues(\"Test Sprint 1\", \"Reopened\", \"Closed\", \"1.0.0\")\r\n  File \"./move_issues.py\", line 53, in update_issues\r\n    jira_client.transition_issue(str(value), \"Start Work\")\r\n  File \"/usr/local/lib/python3.6/dist-packages/jira/client.py\", line 126, in wrapper\r\n    result = func(*arg_list, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/jira/client.py\", line 1559, in transition_issue\r\n    raise JIRAError(\"Invalid transition name. %s\" % transition)\r\njira.exceptions.JIRAError: JiraError HTTP Invalid transition name. Start Work\r\n\t\r\n\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter:\r\n```\r\n$ /usr/bin/python3 --version\r\nPython 3.6.7\r\n```\r\njira-python:\r\n```\r\n$ pip freeze | grep jira\r\njira==2.0.0\r\n```\r\nOS: \r\n```\r\n$ cat /etc/os-release \r\nNAME=\"Ubuntu\"\r\nVERSION=\"18.04.1 LTS (Bionic Beaver)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 18.04.1 LTS\"\r\nVERSION_ID=\"18.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=bionic\r\nUBUNTU_CODENAME=bionic\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/739", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/739/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/739/events", "html_url": "https://github.com/pycontribs/jira/issues/739", "id": 395936289, "node_id": "MDU6SXNzdWUzOTU5MzYyODk=", "number": 739, "title": "jira 4.4.5 get version and field", "user": {"login": "CodeJuvenile", "id": 10290317, "node_id": "MDQ6VXNlcjEwMjkwMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/10290317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeJuvenile", "html_url": "https://github.com/CodeJuvenile", "followers_url": "https://api.github.com/users/CodeJuvenile/followers", "following_url": "https://api.github.com/users/CodeJuvenile/following{/other_user}", "gists_url": "https://api.github.com/users/CodeJuvenile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeJuvenile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeJuvenile/subscriptions", "organizations_url": "https://api.github.com/users/CodeJuvenile/orgs", "repos_url": "https://api.github.com/users/CodeJuvenile/repos", "events_url": "https://api.github.com/users/CodeJuvenile/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeJuvenile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T14:03:49Z", "updated_at": "2019-10-14T13:26:00Z", "closed_at": "2019-10-14T13:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "we use pip install this tools \"jira\",after over, i find the client.py like have a little problem:\r\n1. \"self._version = tuple(si['versionNumbers']) \" , our version is 4.4.5 ,param's name is 'version' not 'versionNumbers' ,I don't know what it does.make it commented code, run Smoothly\uff01\r\n2. like this : \r\n      for f in self.fields():\r\n         if 'clauseNames' in f:\r\n             for name in f['clauseNames']:\r\n                 self._fields[name] = f['id']\r\nthis is source,but our jira do not have /rest/api/2.0.alpha1/fields,make it commented code, run Smoothly\uff01\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7\r\njira-python: 2.00\r\nOS: ubuntu 18.0.4\r\nOther Dependencies:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/738", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/738/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/738/events", "html_url": "https://github.com/pycontribs/jira/issues/738", "id": 391089163, "node_id": "MDU6SXNzdWUzOTEwODkxNjM=", "number": 738, "title": "Get only visible fields", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 110231331, "node_id": "MDU6TGFiZWwxMTAyMzEzMzE=", "url": "https://api.github.com/repos/pycontribs/jira/labels/enhancement", "name": "enhancement", "color": "ededed", "default": true, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-14T12:18:49Z", "updated_at": "2019-10-29T12:28:27Z", "closed_at": "2019-10-29T12:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI want to get the issue only with the fields, that are visible for users in Jira web interface.\r\n\r\n**Describe the solution you'd like**\r\nAdd an optional bool argument to `JIRA.issue`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/737", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/737/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/737/events", "html_url": "https://github.com/pycontribs/jira/issues/737", "id": 389541478, "node_id": "MDU6SXNzdWUzODk1NDE0Nzg=", "number": 737, "title": "requests-jwt dependency breaks JWT authentication", "user": {"login": "verkaufer", "id": 680527, "node_id": "MDQ6VXNlcjY4MDUyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/680527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verkaufer", "html_url": "https://github.com/verkaufer", "followers_url": "https://api.github.com/users/verkaufer/followers", "following_url": "https://api.github.com/users/verkaufer/following{/other_user}", "gists_url": "https://api.github.com/users/verkaufer/gists{/gist_id}", "starred_url": "https://api.github.com/users/verkaufer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verkaufer/subscriptions", "organizations_url": "https://api.github.com/users/verkaufer/orgs", "repos_url": "https://api.github.com/users/verkaufer/repos", "events_url": "https://api.github.com/users/verkaufer/events{/privacy}", "received_events_url": "https://api.github.com/users/verkaufer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-11T00:08:03Z", "updated_at": "2019-10-28T16:12:03Z", "closed_at": "2019-10-28T16:12:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAttempting to make calls using the `jira` library and JWT token authentication fails because the `requests-jwt` package does not import correctly after version 0.4.0.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nThis is assuming you installed `jira[opt]`\r\n```\r\nfrom jira import JIRA\r\n\r\njira = JIRA(my_jira_instance_url, jwt=self._build_jwt_auth())\r\nissue = jira.issue(\"issue_id\")\r\n\r\nException raised: \r\nERROR:root:JWT authentication requires requests_jwt\r\n```\r\n\r\nThis can also be reproduced independently of the `jira` package:\r\n```\r\n1. Install requests-jwt in a virtualenv (or using Pipenv, doesn't matter)\r\n2. Open a python shell using your virtualenv\r\n3. Try: `import requests_jwt`\r\n4. Error raised:\r\n>>> import requests_jwt\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'requests_jwt'\r\n```\r\n\r\n**Expected behavior**\r\nAfter successfully installing `jira`/`jira[opt]`, using JWT authentication should be a valid form of authentication and not raise an exception stating the `requests_jwt` package is required.\r\n\r\n**Stack Trace**\r\nn/a\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.5\r\njira-python: latest\r\nOS: OSX 10.13.6\r\n\r\n**Additional context**\r\nConsider pinning the `requests_jwt` version to `0.4`. This resolved my issue.\r\n\r\nI also [opened an issue](https://github.com/tgs/requests-jwt/issues/4) on the author's repository to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/736", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/736/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/736/events", "html_url": "https://github.com/pycontribs/jira/issues/736", "id": 388577035, "node_id": "MDU6SXNzdWUzODg1NzcwMzU=", "number": 736, "title": "jira.add_attachment() can not support Chinese ", "user": {"login": "huatiedan", "id": 16918952, "node_id": "MDQ6VXNlcjE2OTE4OTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/16918952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huatiedan", "html_url": "https://github.com/huatiedan", "followers_url": "https://api.github.com/users/huatiedan/followers", "following_url": "https://api.github.com/users/huatiedan/following{/other_user}", "gists_url": "https://api.github.com/users/huatiedan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huatiedan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huatiedan/subscriptions", "organizations_url": "https://api.github.com/users/huatiedan/orgs", "repos_url": "https://api.github.com/users/huatiedan/repos", "events_url": "https://api.github.com/users/huatiedan/events{/privacy}", "received_events_url": "https://api.github.com/users/huatiedan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T09:45:26Z", "updated_at": "2019-01-15T09:40:35Z", "closed_at": "2019-01-15T09:40:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "when use jira.add_attachment() method,the fileName param can not support Chinese, when use chinese , the attachment can not update.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/735", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/735/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/735/events", "html_url": "https://github.com/pycontribs/jira/issues/735", "id": 388575439, "node_id": "MDU6SXNzdWUzODg1NzU0Mzk=", "number": 735, "title": "jira.add_attachment() can not support Chinese", "user": {"login": "huatiedan", "id": 16918952, "node_id": "MDQ6VXNlcjE2OTE4OTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/16918952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huatiedan", "html_url": "https://github.com/huatiedan", "followers_url": "https://api.github.com/users/huatiedan/followers", "following_url": "https://api.github.com/users/huatiedan/following{/other_user}", "gists_url": "https://api.github.com/users/huatiedan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huatiedan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huatiedan/subscriptions", "organizations_url": "https://api.github.com/users/huatiedan/orgs", "repos_url": "https://api.github.com/users/huatiedan/repos", "events_url": "https://api.github.com/users/huatiedan/events{/privacy}", "received_events_url": "https://api.github.com/users/huatiedan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-07T09:41:09Z", "updated_at": "2018-12-07T09:42:52Z", "closed_at": "2018-12-07T09:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nCode block\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Stack Trace**\r\n```\r\nA code block with the any trace messages.\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: <VERSION>\r\njira-python: <VERSION>\r\nOS: <OPERATING SYSTEM>\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/733", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/733/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/733/events", "html_url": "https://github.com/pycontribs/jira/issues/733", "id": 386252733, "node_id": "MDU6SXNzdWUzODYyNTI3MzM=", "number": 733, "title": "Captcha challendge handling", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T16:14:06Z", "updated_at": "2019-03-13T15:57:20Z", "closed_at": "2019-03-13T15:57:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm trying to login to https://jira-dev.kama.gs/ but I'm getting an error:\r\n```\r\njira.exceptions.JIRAError: JiraError HTTP 403 url: https://jira-dev.kama.gs/rest/api/2/serverInfo\r\ntext: CAPTCHA_CHALLENGE; login-url=https://jira-dev.kama.gs/login.jsp\r\n...\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI propose you to include a link to an image to the exception and add a method for supplying an answer for captcha (link to the image is sent to the man, he solves the captcha, sends the answer back the program, program calls `e.solve_captcha(answer)` and Jira authenticates the program).\r\n\r\n**Describe alternatives you've considered**\r\n-\r\n\r\n**Additional context**\r\nI didn't find a method for solving the captcha in the Jira API, but I think it's not hard to implement without it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/731", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/731/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/731/events", "html_url": "https://github.com/pycontribs/jira/issues/731", "id": 384404100, "node_id": "MDU6SXNzdWUzODQ0MDQxMDA=", "number": 731, "title": "server_info may produce misleading warning", "user": {"login": "zgoda-mobica", "id": 7666308, "node_id": "MDQ6VXNlcjc2NjYzMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zgoda-mobica", "html_url": "https://github.com/zgoda-mobica", "followers_url": "https://api.github.com/users/zgoda-mobica/followers", "following_url": "https://api.github.com/users/zgoda-mobica/following{/other_user}", "gists_url": "https://api.github.com/users/zgoda-mobica/gists{/gist_id}", "starred_url": "https://api.github.com/users/zgoda-mobica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zgoda-mobica/subscriptions", "organizations_url": "https://api.github.com/users/zgoda-mobica/orgs", "repos_url": "https://api.github.com/users/zgoda-mobica/repos", "events_url": "https://api.github.com/users/zgoda-mobica/events{/privacy}", "received_events_url": "https://api.github.com/users/zgoda-mobica/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T16:16:22Z", "updated_at": "2019-10-29T13:28:33Z", "closed_at": "2019-10-29T13:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When Jira instance is not completely configured but running, it will return 503 response with empty body, causing `server_info` to produce warning about some enigmatic bug (?!) with link to Atlassian bug tracker that is not publicly accessible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/725", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/725/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/725/events", "html_url": "https://github.com/pycontribs/jira/issues/725", "id": 381860096, "node_id": "MDU6SXNzdWUzODE4NjAwOTY=", "number": 725, "title": "Expose documentation", "user": {"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751642399, "node_id": "MDU6TGFiZWw3NTE2NDIzOTk=", "url": "https://api.github.com/repos/pycontribs/jira/labels/docs", "name": "docs", "color": "4071a5", "default": false, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-17T12:47:53Z", "updated_at": "2019-10-29T13:28:35Z", "closed_at": "2019-10-29T13:28:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently there is a lot of documentation strings which are not available to the users. Leading to confusion as mentioned in #722 \r\n\r\n**Describe the solution you'd like**\r\nI think that if we had something more like how boto3 exposes https://github.com/boto/boto3/blob/develop/docs/source/reference/services/index.rst in our doc/api.rst this would expose all of the desired documentation without needing to add a new section individually for each class added. \r\n\r\n**Describe alternatives you've considered**\r\nWe could just add each class , but if Sphinx can handle it I figure we should use it. \r\n\r\n**Additional context**\r\nN/a\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/723", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/723/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/723/events", "html_url": "https://github.com/pycontribs/jira/issues/723", "id": 381058751, "node_id": "MDU6SXNzdWUzODEwNTg3NTE=", "number": 723, "title": "Get statuses that relates to a specific project", "user": {"login": "aaron417", "id": 2633934, "node_id": "MDQ6VXNlcjI2MzM5MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2633934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaron417", "html_url": "https://github.com/aaron417", "followers_url": "https://api.github.com/users/aaron417/followers", "following_url": "https://api.github.com/users/aaron417/following{/other_user}", "gists_url": "https://api.github.com/users/aaron417/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaron417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaron417/subscriptions", "organizations_url": "https://api.github.com/users/aaron417/orgs", "repos_url": "https://api.github.com/users/aaron417/repos", "events_url": "https://api.github.com/users/aaron417/events{/privacy}", "received_events_url": "https://api.github.com/users/aaron417/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T08:54:26Z", "updated_at": "2019-10-29T12:28:34Z", "closed_at": "2019-10-29T12:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nThe problem I meet is I'd like to get \"statuses\" configuration that belongs to a specific project like the REST API defined in JIRA rest api doc\r\n\r\nGET /rest/api/2/project/{projectIdOrKey}/statuses\r\n\r\n**Describe the solution you'd like**\r\na new API in jira like \"project_statuses(id)\"\r\n\r\n\r\n**Describe alternatives you've considered**\r\nNone\r\n\r\n**Additional context**\r\nNone\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/721", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/721/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/721/events", "html_url": "https://github.com/pycontribs/jira/issues/721", "id": 380749991, "node_id": "MDU6SXNzdWUzODA3NDk5OTE=", "number": 721, "title": "Add a method to modify a version that has already been created", "user": {"login": "Rumbles", "id": 8236882, "node_id": "MDQ6VXNlcjgyMzY4ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8236882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rumbles", "html_url": "https://github.com/Rumbles", "followers_url": "https://api.github.com/users/Rumbles/followers", "following_url": "https://api.github.com/users/Rumbles/following{/other_user}", "gists_url": "https://api.github.com/users/Rumbles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rumbles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rumbles/subscriptions", "organizations_url": "https://api.github.com/users/Rumbles/orgs", "repos_url": "https://api.github.com/users/Rumbles/repos", "events_url": "https://api.github.com/users/Rumbles/events{/privacy}", "received_events_url": "https://api.github.com/users/Rumbles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 169765893, "node_id": "MDU6TGFiZWwxNjk3NjU4OTM=", "url": "https://api.github.com/repos/pycontribs/jira/labels/Status:%20In%20progress", "name": "Status: In progress", "color": "ededed", "default": false, "description": "Currently being worked on."}], "state": "closed", "locked": false, "assignee": {"login": "Rumbles", "id": 8236882, "node_id": "MDQ6VXNlcjgyMzY4ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8236882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rumbles", "html_url": "https://github.com/Rumbles", "followers_url": "https://api.github.com/users/Rumbles/followers", "following_url": "https://api.github.com/users/Rumbles/following{/other_user}", "gists_url": "https://api.github.com/users/Rumbles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rumbles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rumbles/subscriptions", "organizations_url": "https://api.github.com/users/Rumbles/orgs", "repos_url": "https://api.github.com/users/Rumbles/repos", "events_url": "https://api.github.com/users/Rumbles/events{/privacy}", "received_events_url": "https://api.github.com/users/Rumbles/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rumbles", "id": 8236882, "node_id": "MDQ6VXNlcjgyMzY4ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8236882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rumbles", "html_url": "https://github.com/Rumbles", "followers_url": "https://api.github.com/users/Rumbles/followers", "following_url": "https://api.github.com/users/Rumbles/following{/other_user}", "gists_url": "https://api.github.com/users/Rumbles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rumbles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rumbles/subscriptions", "organizations_url": "https://api.github.com/users/Rumbles/orgs", "repos_url": "https://api.github.com/users/Rumbles/repos", "events_url": "https://api.github.com/users/Rumbles/events{/privacy}", "received_events_url": "https://api.github.com/users/Rumbles/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-11-14T15:25:59Z", "updated_at": "2018-11-16T14:51:31Z", "closed_at": "2018-11-16T14:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI want to start using this tool to manage a deployment process, but one step involves creating a version, and another step would be to mark that version as released if the build is sucessful. Currently I see no way of modifying a version once it has been created.\r\n\r\n**Describe the solution you'd like**\r\nAdd a method to modify a version\r\n\r\n**Describe alternatives you've considered**\r\nI thought of calling the API directly, or deleting the version and then creating the new version with the right status, but neither of these would be great in my opinion\r\n\r\n**Additional context**\r\nI have already prepared a fork that would fix this issue, PR to follow\r\n\r\nI don't think the way I have done it is necessarily the cleanest way to do it, maybe someone could point me in the right direction if you're not happy with it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/719", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/719/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/719/events", "html_url": "https://github.com/pycontribs/jira/issues/719", "id": 378496496, "node_id": "MDU6SXNzdWUzNzg0OTY0OTY=", "number": 719, "title": "jira.add_worklog() improperly formats timezones, resulting in timezone data being lost", "user": {"login": "GarrStau", "id": 44850573, "node_id": "MDQ6VXNlcjQ0ODUwNTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/44850573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GarrStau", "html_url": "https://github.com/GarrStau", "followers_url": "https://api.github.com/users/GarrStau/followers", "following_url": "https://api.github.com/users/GarrStau/following{/other_user}", "gists_url": "https://api.github.com/users/GarrStau/gists{/gist_id}", "starred_url": "https://api.github.com/users/GarrStau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GarrStau/subscriptions", "organizations_url": "https://api.github.com/users/GarrStau/orgs", "repos_url": "https://api.github.com/users/GarrStau/repos", "events_url": "https://api.github.com/users/GarrStau/events{/privacy}", "received_events_url": "https://api.github.com/users/GarrStau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-07T22:27:57Z", "updated_at": "2018-11-12T01:27:55Z", "closed_at": "2018-11-12T01:27:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen creating a new worklog with a datetime object containing timezone information, the timezone information is lost. Commit 075c5ffcc706c7ebac26ba4c3ea0421adf988cc7 introduced a defect while attempting to fix issue #369.\r\nNote that the original issue was reporting an error when no timezone information was included, as strftime will substitute an empty string in for %z when a datetime object is naive. However, the 'fix' simply added a string representation of a 0 hour offset, which results in duplicate timezones in a string when the datetime object is timezone aware.\r\nThe line in question is line 1921 in client.py (https://github.com/pycontribs/jira/blob/master/jira/client.py#L1921):\r\ndata['started'] = started.strftime(\"%Y-%m-%dT%H:%M:%S.000+0000%z\")\r\n\r\nWith a timezone aware datetime, this will result in duplicate timezones (note the +0000-0800 at the end):\r\n'2018-11-07T12:31:24.000+0000-0800'\r\n\r\nA better solution would be:\r\nif started.tzinfo:\r\n  data['started'] = started.strftime(\"%Y-%m-%dT%H:%M:%S.000%z\")\r\nelse:\r\n  data['started'] = started.strftime(\"%Y-%m-%dT%H:%M:%S.000+0000\")\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nimport jira\r\nimport pytz\r\nimport datetime\r\njira_conn = jira.JIRA()\r\nwl_date_naive = datetime.datetime(2018, 11, 7, 10, 30)\r\nwl_date_aware  = datetime.datetime(2018, 11, 7, 10, 30, tzinfo=pytz.timezone('Etc/GMT+8'))\r\nissue_key = 'ADMIN-719'\r\nnew_wl_naive = jira_conn.add_worklog(issue_key, timeSpentSeconds = 8100, started = wl_date_naive, comment = 'naive datetime worklog')\r\nnew_wl_aware = jira_conn.add_worklog(issue_key, timeSpentSeconds = 8100, started = wl_date_aware, comment = 'aware datetime worklog')\r\nprint(f'Naive worklog start time: \\n{new_wl_naive.started}')\r\nprint(f'Naive datetime: \\n{wl_date_naive.strftime(\"%Y-%m-%dT%H:%M:%S.000%z\")}')\r\nprint(f'Aware start time: \\n{new_wl_aware.started}')\r\nprint(f'Aware datetime: \\n{wl_date_aware.strftime(\"%Y-%m-%dT%H:%M:%S.000%z\")}')\r\n```\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nNaive worklog assumes UTC and applies server time appropriately, resulting in an 8 hour shift (our server is set to Pacific time).\r\nAware worklog should account for timezone, resulting in no shift.\r\n\r\n\r\n**Stack Trace**\r\n```\r\nNaive worklog start time: \r\n2018-11-07T02:30:00.000-0800\r\nNaive datetime: \r\n2018-11-07T10:30:00.000\r\nAware start time: \r\n2018-11-07T02:30:00.000-0800\r\nAware datetime: \r\n2018-11-07T10:30:00.000-0800\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.2\r\njira-python: 2.0.0\r\nOS: Windows\r\nOther Dependencies:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/718", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/718/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/718/events", "html_url": "https://github.com/pycontribs/jira/issues/718", "id": 377770005, "node_id": "MDU6SXNzdWUzNzc3NzAwMDU=", "number": 718, "title": "Version requirements for cryptography.x509 are incorrect", "user": {"login": "wvxvw", "id": 3147276, "node_id": "MDQ6VXNlcjMxNDcyNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3147276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wvxvw", "html_url": "https://github.com/wvxvw", "followers_url": "https://api.github.com/users/wvxvw/followers", "following_url": "https://api.github.com/users/wvxvw/following{/other_user}", "gists_url": "https://api.github.com/users/wvxvw/gists{/gist_id}", "starred_url": "https://api.github.com/users/wvxvw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wvxvw/subscriptions", "organizations_url": "https://api.github.com/users/wvxvw/orgs", "repos_url": "https://api.github.com/users/wvxvw/repos", "events_url": "https://api.github.com/users/wvxvw/events{/privacy}", "received_events_url": "https://api.github.com/users/wvxvw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-06T09:57:18Z", "updated_at": "2019-10-29T13:28:29Z", "closed_at": "2019-10-29T13:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nUsed example from documentation:\r\n\r\n``` python\r\nfrom jira import JIRA\r\noptions = {\r\n    'server': 'https://somewhere.atlassian.net',\r\n}\r\njira = JIRA(options, auth=('wvxvw', 'super-secret'))\r\n```\r\n\r\nAnd then I received this amazing error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 196, in get_subj_alt_name\r\n    ext = cert.extensions.get_extension_for_class(\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/utils.py\", line 161, in inner\r\n    result = func(instance)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/x509.py\", line 134, in extensions\r\n    self._backend, self._x509\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/decode_asn1.py\", line 238, in parse\r\n    value = handler(backend, ext_data)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/decode_asn1.py\", line 417, in _decode_subject_alt_name\r\n    _decode_general_names_extension(backend, ext)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/x509/extensions.py\", line 1210, in __init__\r\n    self._general_names = GeneralNames(general_names)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/x509/extensions.py\", line 1163, in __init__\r\n    if not all(isinstance(x, GeneralName) for x in general_names):\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/cryptography/x509/extensions.py\", line 1163, in <genexpr>\r\n    if not all(isinstance(x, GeneralName) for x in general_names):\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/abc.py\", line 139, in __instancecheck__\r\n    return _abc_instancecheck(cls, instance)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/abc.py\", line 143, in __subclasscheck__\r\n    return _abc_subclasscheck(cls, subclass)\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 462, in __init__\r\n    user = self.session(auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 625, in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/hooks.py\", line 31, in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 208, in handle_401\r\n    self.init_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 224, in init_session\r\n    self.start_session()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 238, in start_session\r\n    self._get_session(self.__auth)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/client.py\", line 2446, in session\r\n    r = self._session.post(url, data=json.dumps(authentication_data))\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 555, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 508, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/sessions.py\", line 618, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/requests/adapters.py\", line 440, in send\r\n    timeout=timeout\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 601, in urlopen\r\n    chunked=chunked)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 346, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 850, in _validate_conn\r\n    conn.connect()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/connection.py\", line 337, in connect\r\n    cert = self.sock.getpeercert()\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 348, in getpeercert\r\n    'subjectAltName': get_subj_alt_name(x509)\r\n  File \"/home/wvxvw/src/sanity-test/.venv/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 202, in get_subj_alt_name\r\n    except (x509.DuplicateExtension, x509.UnsupportedExtension,\r\nAttributeError: module 'cryptography.x509' has no attribute 'UnsupportedExtension'\r\n```\r\n\r\n**To Reproduce**\r\nI didn't do anything special, simply `python3.7 -m pip install jira` and that's what I get.\r\n\r\n**Expected behavior**\r\nBasic functionality, s.a. logging into my JIRA account should work\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0.0\r\nOS: Arch Linux (Anarchy)\r\nIPython (Optional): N/A\r\nOther Dependencies: N/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/717", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/717/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/717/events", "html_url": "https://github.com/pycontribs/jira/issues/717", "id": 377490292, "node_id": "MDU6SXNzdWUzNzc0OTAyOTI=", "number": 717, "title": "Support Custom Field Management ", "user": {"login": "rahiparikh", "id": 1883189, "node_id": "MDQ6VXNlcjE4ODMxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1883189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahiparikh", "html_url": "https://github.com/rahiparikh", "followers_url": "https://api.github.com/users/rahiparikh/followers", "following_url": "https://api.github.com/users/rahiparikh/following{/other_user}", "gists_url": "https://api.github.com/users/rahiparikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahiparikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahiparikh/subscriptions", "organizations_url": "https://api.github.com/users/rahiparikh/orgs", "repos_url": "https://api.github.com/users/rahiparikh/repos", "events_url": "https://api.github.com/users/rahiparikh/events{/privacy}", "received_events_url": "https://api.github.com/users/rahiparikh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-05T16:55:11Z", "updated_at": "2020-02-26T18:39:39Z", "closed_at": "2019-10-29T13:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nAllow Jira library to manipulate (add/update/delete) custom fields. \r\n\r\n**Usecase**\r\nAllowing users to create/modify custom fields on the fly would allow one to update required metadata for an issue before creating issue itself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/713", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/713/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/713/events", "html_url": "https://github.com/pycontribs/jira/issues/713", "id": 376490138, "node_id": "MDU6SXNzdWUzNzY0OTAxMzg=", "number": 713, "title": "JIRA to deprecate the 1.0 api endpoint", "user": {"login": "sfc-gh-lrobles", "id": 39739681, "node_id": "MDQ6VXNlcjM5NzM5Njgx", "avatar_url": "https://avatars1.githubusercontent.com/u/39739681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfc-gh-lrobles", "html_url": "https://github.com/sfc-gh-lrobles", "followers_url": "https://api.github.com/users/sfc-gh-lrobles/followers", "following_url": "https://api.github.com/users/sfc-gh-lrobles/following{/other_user}", "gists_url": "https://api.github.com/users/sfc-gh-lrobles/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfc-gh-lrobles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfc-gh-lrobles/subscriptions", "organizations_url": "https://api.github.com/users/sfc-gh-lrobles/orgs", "repos_url": "https://api.github.com/users/sfc-gh-lrobles/repos", "events_url": "https://api.github.com/users/sfc-gh-lrobles/events{/privacy}", "received_events_url": "https://api.github.com/users/sfc-gh-lrobles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T17:25:45Z", "updated_at": "2018-11-17T12:51:33Z", "closed_at": "2018-11-17T12:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/712", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/712/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/712/events", "html_url": "https://github.com/pycontribs/jira/issues/712", "id": 375602488, "node_id": "MDU6SXNzdWUzNzU2MDI0ODg=", "number": 712, "title": "expand='changelog' does not return all history", "user": {"login": "sshaky2", "id": 12638668, "node_id": "MDQ6VXNlcjEyNjM4NjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/12638668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sshaky2", "html_url": "https://github.com/sshaky2", "followers_url": "https://api.github.com/users/sshaky2/followers", "following_url": "https://api.github.com/users/sshaky2/following{/other_user}", "gists_url": "https://api.github.com/users/sshaky2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sshaky2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sshaky2/subscriptions", "organizations_url": "https://api.github.com/users/sshaky2/orgs", "repos_url": "https://api.github.com/users/sshaky2/repos", "events_url": "https://api.github.com/users/sshaky2/events{/privacy}", "received_events_url": "https://api.github.com/users/sshaky2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T17:16:12Z", "updated_at": "2019-10-29T13:28:27Z", "closed_at": "2019-10-29T13:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI am trying to fetch the total change log history of an issue but it is inconsistent. If there is a long history i.e. more than 400 items in changelog then the history is truncated. I am not able to get the history item which were at the beginning such as assignee field.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nticket = jira.issue('XXX-XXXX',expand='changelog')\r\nfor history in ticket.changelog.histories:\r\n    for item in history.items:\r\n        print(item.field)\r\n        if item.field == 'assignee':\r\n            print(item.fromString)\r\n\r\n\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0.0\r\nOS: Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/711", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/711/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/711/events", "html_url": "https://github.com/pycontribs/jira/issues/711", "id": 375141326, "node_id": "MDU6SXNzdWUzNzUxNDEzMjY=", "number": 711, "title": "deactivate_user() returns True, but user remains active if he is a project lead", "user": {"login": "kdeyko", "id": 23095354, "node_id": "MDQ6VXNlcjIzMDk1MzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/23095354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdeyko", "html_url": "https://github.com/kdeyko", "followers_url": "https://api.github.com/users/kdeyko/followers", "following_url": "https://api.github.com/users/kdeyko/following{/other_user}", "gists_url": "https://api.github.com/users/kdeyko/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdeyko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdeyko/subscriptions", "organizations_url": "https://api.github.com/users/kdeyko/orgs", "repos_url": "https://api.github.com/users/kdeyko/repos", "events_url": "https://api.github.com/users/kdeyko/events{/privacy}", "received_events_url": "https://api.github.com/users/kdeyko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-29T17:51:43Z", "updated_at": "2018-11-17T13:04:12Z", "closed_at": "2018-11-17T13:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n**Describe the bug**\r\ndeactivate_user() returns True, but user remains active if he is a project lead in some project. GUI will not let you to deactivate project lead and returns clear error.\r\n\r\n**To Reproduce**\r\n```\r\nfrom jira import JIRA\r\njira = JIRA(jira_url, basic_auth=(username, password))\r\njira.deactivate_user('user') # user should be project lead\r\n# Returns True\r\n# exit code 0\r\n```\r\n\r\n**Expected behavior**\r\nProgram should return clear error.\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7.0\r\njira-python: 2.0.0\r\nOS: Windows 10\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/710", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/710/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/710/events", "html_url": "https://github.com/pycontribs/jira/issues/710", "id": 374161705, "node_id": "MDU6SXNzdWUzNzQxNjE3MDU=", "number": 710, "title": "create_project causes JIRAError and does not create project", "user": {"login": "markplindsay", "id": 1211543, "node_id": "MDQ6VXNlcjEyMTE1NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1211543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markplindsay", "html_url": "https://github.com/markplindsay", "followers_url": "https://api.github.com/users/markplindsay/followers", "following_url": "https://api.github.com/users/markplindsay/following{/other_user}", "gists_url": "https://api.github.com/users/markplindsay/gists{/gist_id}", "starred_url": "https://api.github.com/users/markplindsay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markplindsay/subscriptions", "organizations_url": "https://api.github.com/users/markplindsay/orgs", "repos_url": "https://api.github.com/users/markplindsay/repos", "events_url": "https://api.github.com/users/markplindsay/events{/privacy}", "received_events_url": "https://api.github.com/users/markplindsay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-25T22:44:10Z", "updated_at": "2019-01-10T16:58:38Z", "closed_at": "2019-01-10T16:58:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nI try to use `create_project` on my JIRA Cloud site, but I receive a `JIRAError HTTP 500` with text `The referenced project template was not found - the project has not been created`\r\n\r\n**To Reproduce**\r\n\r\n1. Create a user in https://myemployer.atlassian.net with all of the admin permissions you can find in the web UI\r\n1. Create an API token for that user\r\n1. Ensure that user is able to make other API calls using those credentials\r\n1. Run this code with the `jira` package installed (I have `jira==2.0.0`)\r\n```python\r\nfrom jira import JIRA\r\n\r\nURL = 'https://myemployer.atlassian.net'\r\nEMAIL = 'me@myemployer.com'\r\nJIRA_API_TOKEN = 'mytoken'\r\n\r\njira = JIRA(URL, basic_auth=(EMAIL, JIRA_API_TOKEN))\r\nproject = jira.create_project('OC')\r\n```\r\n\r\n**Expected behavior**\r\n\r\nNo exception generated and a project with key `OC` appears on https://myemployer.atlassian.net.\r\n\r\n**Stack Trace**\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"application.py\", line 14, in <module>\r\n    project = jira.create_project('OC')\r\n  File \"/usr/local/lib/python3.7/site-packages/jira/client.py\", line 2914, in create_project\r\n    r = self._session.post(url, data=payload, headers=headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/jira/resilientsession.py\", line 154, in post\r\n    return self.__verb('POST', url, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\njira.exceptions.JIRAError: JiraError HTTP 500 url: https://myemployer.atlassian.net/rest/project-templates/latest/templates\r\n\ttext: The referenced project template was not found - the project has not been created.\r\n\r\n\tresponse headers = {'Server': 'Atlassian Proxy/1.13.6.2', 'Vary': 'Accept', 'Cache-Control': 'no-cache, no-store, no-transform', 'Content-Type': 'application/json;charset=UTF-8', 'Strict-Transport-Security': 'max-age=315360000; includeSubDomains; preload', 'Date': 'Thu, 25 Oct 2018 22:21:47 GMT', 'ATL-TraceId': 'e74fe7e06be89be9', 'X-AREQUESTID': 'da75a5bd-d9ed-4807-9742-cd49d9662a10', 'X-XSS-Protection': '1; mode=block', 'Transfer-Encoding': 'chunked', 'ATL-TCS-Time': 'Cache Hit', 'X-AUSERNAME': 'me', 'X-Content-Type-Options': 'nosniff', 'Connection': 'close'}\r\n\tresponse text = {\"message\":\"The referenced project template was not found - the project has not been created.\",\"status-code\":500,\"stack-trace\":\"com.atlassian.jira.projecttemplates.service.TemplateInstantiationFailure: The referenced project template was not found - the project has not been created.\\n\\tat com.atlassian.jira.projecttemplates.service.ProjectTemplateServiceImpl.applyProjectTemplate(ProjectTemplateServiceImpl.java:194)\\n\\tat com.atlassian.jira.projecttemplates.rest.ProjectTemplatesResource.createProjectFromFormRequest(ProjectTemplatesResource.java:170)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\\n\\tat com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\\n\\tat com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\\n\\tat com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\\n\\tat com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.atlassian.plugins.rest.module.RestDelegatingServletFilter$JerseyOsgiServletContainer.doFilter(RestDelegatingServletFilter.java:194)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)\\n\\tat com.atlassian.plugins.rest.module.RestDelegatingServletFilter.doFilter(RestDelegatingServletFilter.java:77)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:70)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:58)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.servicedesk.internal.web.ExternalCustomerLockoutFilter.doFilter(ExternalCustomerLockoutFilter.java:56)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.servicedesk.internal.web.PortalLanguageDetectionFilter.doFilter(PortalLanguageDetectionFilter.java:132)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.mywork.client.filter.ServingRequestsFilter.doFilter(ServingRequestsFilter.java:41)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.jira.gdpr.GDPRHeaderFilter.doFilter(GDPRHeaderFilter.java:30)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.jira.rest.swagger.enforcer.SwaggerEnforcerServletFilter.doFilter(SwaggerEnforcerServletFilter.java:64)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.web.servlet.plugin.request.RedirectInterceptingFilter.doFilter(RedirectInterceptingFilter.java:21)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsSiteMeshFixupFilter.doFilter(PrettyUrlsSiteMeshFixupFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsDispatcherFilter.doFilter(PrettyUrlsDispatcherFilter.java:55)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsSiteMeshFilter.doFilter(PrettyUrlsSiteMeshFilter.java:79)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsMatcherFilter.doFilter(PrettyUrlsMatcherFilter.java:51)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.jira.plugins.rest.HOT25715FixServletFilter.doFilter(HOT25715FixServletFilter.java:46)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.labs.botkiller.BotKillerFilter.doFilter(BotKillerFilter.java:36)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:70)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:58)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.FatalExceptionFailHealthCheckHttpFilter.doFilter(FatalExceptionFailHealthCheckHttpFilter.java:33)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.accesslog.AccessLogFilter.executeRequest(AccessLogFilter.java:92)\\n\\tat com.atlassian.jira.web.filters.accesslog.AccessLogFilter.doFilter(AccessLogFilter.java:78)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.security.xsrf.XsrfTokenAdditionRequestFilter.doFilter(XsrfTokenAdditionRequestFilter.java:48)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.pagebuilder.PageBuilderFilter.doFilter(PageBuilderFilter.java:77)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.CommittedResponseHtmlErrorRecoveryFilter.doFilter(CommittedResponseHtmlErrorRecoveryFilter.java:55)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:39)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.plugin.connect.plugin.auth.scope.ApiScopingFilter.doFilter(ApiScopingFilter.java:106)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsCombinedMatchDispatcherFilter.doFilter(PrettyUrlsCombinedMatchDispatcherFilter.java:56)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:70)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:58)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.origintracing.OriginTracingEventFilter.doFilter(OriginTracingEventFilter.java:32)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.MauEventFilter.doFilter(MauEventFilter.java:105)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.affinity.JiraNodeAffinityFilter.doFilter(JiraNodeAffinityFilter.java:114)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.language.LanguageDetectionFilter.doFilter(LanguageDetectionFilter.java:49)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.seraph.filter.SecurityFilter.doFilter(SecurityFilter.java:206)\\n\\tat com.atlassian.jira.security.JiraSecurityFilter.doFilter(JiraSecurityFilter.java:85)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.seraph.filter.BaseLoginFilter.doFilter(BaseLoginFilter.java:123)\\n\\tat com.atlassian.jira.web.filters.JiraLoginFilter.doFilter(JiraLoginFilter.java:93)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:39)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.oauth.serviceprovider.internal.servlet.OAuthFilter.doFilter(OAuthFilter.java:67)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.jira.rest.auth.JiraRestSeraphAuthFilter.doFilter(JiraRestSeraphAuthFilter.java:45)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.servicedesk.plugins.cm.internal.auth.filter.LocalServiceDeskUserAuthenticationFilter.doFilter(LocalServiceDeskUserAuthenticationFilter.java:110)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsCombinedMatchDispatcherFilter.doFilter(PrettyUrlsCombinedMatchDispatcherFilter.java:56)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.studio.jira.homepage.CloudHomepageFilter.doFilter(CloudHomepageFilter.java:63)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:70)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:58)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.oauth.RbacUserPermissionFilter.doFilter(RbacUserPermissionFilter.java:60)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.oauth.OAuthScopeFilter.doFilter(OAuthScopeFilter.java:34)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.pact.PactLoggingFilter.doFilter(PactLoggingFilter.java:84)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.johnson.filters.AbstractJohnsonFilter.doFilter(AbstractJohnsonFilter.java:59)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:176)\\n\\tat org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:145)\\n\\tat org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:92)\\n\\tat org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:394)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:39)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.plugin.connect.plugin.auth.oauth2.DefaultSalAuthenticationFilter.doFilter(DefaultSalAuthenticationFilter.java:81)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.plugin.connect.plugin.auth.user.ThreeLeggedAuthFilter.doFilter(ThreeLeggedAuthFilter.java:113)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.servicedesk.internal.web.CustomerContextSettingFilter.lambda$invokeFilterChain$0(CustomerContextSettingFilter.java:206)\\n\\tat com.atlassian.servicedesk.internal.utils.context.ReentrantThreadLocalBasedCodeContext.rteInvoke(ReentrantThreadLocalBasedCodeContext.java:141)\\n\\tat com.atlassian.servicedesk.internal.utils.context.ReentrantThreadLocalBasedCodeContext.runOutOfContext(ReentrantThreadLocalBasedCodeContext.java:94)\\n\\tat com.atlassian.servicedesk.internal.utils.context.CustomerContextServiceImpl.runOutOfCustomerContext(CustomerContextServiceImpl.java:65)\\n\\tat com.atlassian.servicedesk.internal.web.CustomerContextSettingFilter.outOfCustomerContext(CustomerContextSettingFilter.java:199)\\n\\tat com.atlassian.servicedesk.internal.web.CustomerContextSettingFilter.doFilterImpl(CustomerContextSettingFilter.java:155)\\n\\tat com.atlassian.servicedesk.internal.web.CustomerContextSettingFilter.doFilter(CustomerContextSettingFilter.java:146)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.jwt.internal.servlet.JwtAuthFilter.doFilter(JwtAuthFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.analytics.client.filter.DefaultAnalyticsFilter.doFilter(DefaultAnalyticsFilter.java:18)\\n\\tat com.atlassian.analytics.client.filter.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:45)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.web.servlet.plugin.request.RedirectInterceptingFilter.doFilter(RedirectInterceptingFilter.java:21)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.web.servlet.plugin.LocationCleanerFilter.doFilter(LocationCleanerFilter.java:31)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter$1.doFilter(DelegatingPluginFilter.java:64)\\n\\tat com.atlassian.prettyurls.filter.PrettyUrlsCombinedMatchDispatcherFilter.doFilter(PrettyUrlsCombinedMatchDispatcherFilter.java:56)\\n\\tat com.atlassian.plugin.servlet.filter.DelegatingPluginFilter.doFilter(DelegatingPluginFilter.java:72)\\n\\tat com.atlassian.plugin.servlet.filter.IteratingFilterChain.doFilter(IteratingFilterChain.java:37)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:70)\\n\\tat com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter.doFilter(ServletFilterModuleContainerFilter.java:58)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.steps.ChainedFilterStepRunner.doFilter(ChainedFilterStepRunner.java:75)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.core.filters.cache.AbstractCachingFilter.doFilter(AbstractCachingFilter.java:32)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.core.filters.encoding.AbstractEncodingFilter.doFilter(AbstractEncodingFilter.java:39)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat com.atlassian.jira.web.filters.PathMatchingEncodingFilter.doFilter(PathMatchingEncodingFilter.java:41)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.startup.JiraStartupChecklistFilter.doFilter(JiraStartupChecklistFilter.java:71)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.MultipartBoundaryCheckFilter.doFilter(MultipartBoundaryCheckFilter.java:36)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.experiments.JiraExperimentsFilter.doFilter(JiraExperimentsFilter.java:70)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.DeferJavaScriptTransformationFilter.doFilter(DeferJavaScriptTransformationFilter.java:109)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.steps.ChainedFilterStepRunner.doFilter(ChainedFilterStepRunner.java:75)\\n\\tat com.atlassian.jira.web.filters.JiraFirstFilter.doFilter(JiraFirstFilter.java:52)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.VertigoImportFilter.doFilter(VertigoImportFilter.java:71)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.lambda$doFilter$0(JiraAbstractHttpFilter.java:34)\\n\\tat com.atlassian.jira.web.filters.limiters.RdsSaturationFilter.doFilter(RdsSaturationFilter.java:50)\\n\\tat com.atlassian.jira.web.filters.JiraAbstractHttpFilter.doFilter(JiraAbstractHttpFilter.java:39)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.ServingServletFilter.doFilter(ServingServletFilter.java:40)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.perf.PerfMarker.doFilter(PerfMarker.java:43)\\n\\tat com.atlassian.jira.web.filters.perf.PerfMarkerFilter.doFilter(PerfMarkerFilter.java:18)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.security.ratelimit.JiraRateLimitingFilter.lambda$doFilterWithRateLimiting$0(JiraRateLimitingFilter.java:90)\\n\\tat com.atlassian.ratelimit.core.impl.AbstractRateLimiter.runWithRateLimiting(AbstractRateLimiter.java:60)\\n\\tat com.atlassian.jira.security.ratelimit.JiraRateLimitingFilter.doFilterWithRateLimiting(JiraRateLimitingFilter.java:83)\\n\\tat com.atlassian.jira.security.ratelimit.JiraRateLimitingFilter.doFilter(JiraRateLimitingFilter.java:69)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.WorkContextInitializationFilter.doFilter(WorkContextInitializationFilter.java:78)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.util.zipkin.ZipkinTracingFilter.lambda$doFilter$1(ZipkinTracingFilter.java:96)\\n\\tat com.github.kristofa.brave.servlet.BraveServletFilter.doFilter(BraveServletFilter.java:120)\\n\\tat com.atlassian.jira.util.zipkin.ZipkinTracingFilter.doFilter(ZipkinTracingFilter.java:84)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.web.filters.SecurityHttpHeaderRequestFilter.doFilter(SecurityHttpHeaderRequestFilter.java:41)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat com.atlassian.jira.internalstatus.RequestStatusFilter.doFilterOnce(RequestStatusFilter.java:53)\\n\\tat com.atlassian.jira.web.filters.FilterOnceAbstractHttpFilter.doFilter(FilterOnceAbstractHttpFilter.java:25)\\n\\tat com.atlassian.core.filters.AbstractHttpFilter.doFilter(AbstractHttpFilter.java:32)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:491)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\\n\\tat org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:685)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:764)\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1388)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\"}\r\n```\r\n\r\n**Version Information**\r\n\r\nI'm running this in a docker container running an image derived from `python:latest`.\r\n\r\nPython Interpreter: 3.7.0\r\njira-python: 2.0.0\r\nOS: Debian GNU/Linux 9\r\n\r\n**Additional context**\r\n\r\nI have also tried these calls to `create_project` with the same exception:\r\n\r\n```python\r\nproject = jira.create_project('OC', type='software')\r\nproject = jira.create_project('OC', type='software', template_name='Kanban')\r\nproject = jira.create_project('OC', template_name='Kanban')\r\n```\r\nI am new to JIRA and this library, so my apologies in advance if this is actually a permissions problem or misconfiguration of https://myemployer.atlassian.net. However, I have no trouble creating projects with this same user within the web UI. The user has every admin permission I could find in the web UI, although I certainly could've missed something because I am so new to the platform.\r\n\r\nAny suggestions of things to try would be greatly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/709", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/709/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/709/events", "html_url": "https://github.com/pycontribs/jira/issues/709", "id": 373493616, "node_id": "MDU6SXNzdWUzNzM0OTM2MTY=", "number": 709, "title": "Async for Worklog Update Not Working", "user": {"login": "sechastain", "id": 812526, "node_id": "MDQ6VXNlcjgxMjUyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/812526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sechastain", "html_url": "https://github.com/sechastain", "followers_url": "https://api.github.com/users/sechastain/followers", "following_url": "https://api.github.com/users/sechastain/following{/other_user}", "gists_url": "https://api.github.com/users/sechastain/gists{/gist_id}", "starred_url": "https://api.github.com/users/sechastain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sechastain/subscriptions", "organizations_url": "https://api.github.com/users/sechastain/orgs", "repos_url": "https://api.github.com/users/sechastain/repos", "events_url": "https://api.github.com/users/sechastain/events{/privacy}", "received_events_url": "https://api.github.com/users/sechastain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T13:50:19Z", "updated_at": "2020-04-16T02:49:39Z", "closed_at": "2019-10-29T14:28:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm trying to utilize the async feature for the client and update calls; however, it doesn't seem to be working.\r\n\r\nSpecifically, I'm trying to update the comment field on worklog records.  Everything is speedy right up until I update the worklog record - at which point, everything begins to slow way down - on the order of 1 record every 2-3 seconds.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n  i = 0\r\n  for issue in issues:\r\n    worklogs = jc.worklogs(issue.key)\r\n    for work in worklogs:\r\n      if work.author.emailAddress not in dept:\r\n        missing[work.author.emailAddress] = 'Missing'\r\n      elif hasattr(work, 'comment') and work.comment != dept[work.author.emailAddress]:\r\n        print(str(i) + ': Updating ' + issue.key + ' (worklog: ' + work.id + ') for ' + work.author.emailAddress + ' (' + dept[work.author.emailAddress] + ')')\r\n        i += 1\r\n        work.update(comment=dept[work.author.emailAddress], async_=True)\r\n      else:\r\n        print(str(i) + ': Skipping ' + issue.key + ' (worklog: ' + work.id + ') for ' + work.author.emailAddress + ' (' + dept[work.author.emailAddress] + ')')\r\n        i += 1\r\n```\r\n\r\n\r\n**Expected behavior**\r\nFaster execution due to updates being asynchronous.\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: 2.0.0\r\nOS: OS X Yosemite\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/707", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/707/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/707/events", "html_url": "https://github.com/pycontribs/jira/issues/707", "id": 371477778, "node_id": "MDU6SXNzdWUzNzE0Nzc3Nzg=", "number": 707, "title": "Add the reference to the jira object to the Resource class", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T11:08:27Z", "updated_at": "2019-10-29T14:28:31Z", "closed_at": "2019-10-29T14:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI have implemented `JIRA.users_with_permissions` (see #706). I want to implement `User.has_permissions`, but to avoid code duplication I want to call `JIRA.users_with_permissions` from it. The problem is that it's the method of the `JIRA` object, but resources have no reference to the `JIRA` object where they came from.\r\n\r\n**Describe the solution you'd like**\r\nI propose to add the reference to the jira object to the Resource class. For that purpose, I propose to add `jira` argument to the constructor of the `Resource`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/705", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/705/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/705/events", "html_url": "https://github.com/pycontribs/jira/issues/705", "id": 371421542, "node_id": "MDU6SXNzdWUzNzE0MjE1NDI=", "number": 705, "title": "Provide a function for retrieving user permissions", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1688396400, "node_id": "MDU6TGFiZWwxNjg4Mzk2NDAw", "url": "https://api.github.com/repos/pycontribs/jira/labels/stale", "name": "stale", "color": "dddddd", "default": false, "description": "Ticket that is likely to go nowhere and that will be closed soon"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T08:42:49Z", "updated_at": "2019-12-26T15:52:47Z", "closed_at": "2019-12-26T15:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm writing a bot to create issues from Telegram. The bot is logged to Jira as administrator, therefore it can create issues in any projects. I want to retrieve and check the permissions of a specific user.\r\n\r\n**Describe the solution you'd like**\r\nI propose to add a function that wraps https://docs.atlassian.com/software/jira/docs/api/REST/7.12.0/#api/2/user-findUsersWithAllPermissions.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/702", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/702/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/702/events", "html_url": "https://github.com/pycontribs/jira/issues/702", "id": 368881994, "node_id": "MDU6SXNzdWUzNjg4ODE5OTQ=", "number": 702, "title": "options['headers'] not being used", "user": {"login": "btv", "id": 61864, "node_id": "MDQ6VXNlcjYxODY0", "avatar_url": "https://avatars0.githubusercontent.com/u/61864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btv", "html_url": "https://github.com/btv", "followers_url": "https://api.github.com/users/btv/followers", "following_url": "https://api.github.com/users/btv/following{/other_user}", "gists_url": "https://api.github.com/users/btv/gists{/gist_id}", "starred_url": "https://api.github.com/users/btv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btv/subscriptions", "organizations_url": "https://api.github.com/users/btv/orgs", "repos_url": "https://api.github.com/users/btv/repos", "events_url": "https://api.github.com/users/btv/events{/privacy}", "received_events_url": "https://api.github.com/users/btv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-10T22:34:05Z", "updated_at": "2018-10-12T19:09:56Z", "closed_at": "2018-10-12T19:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can confirm that this bug happens with version 2.0.0, which is latest release in the cheese shop.\r\n\r\n**Describe the bug**\r\nWhen connecting to a jira server, the headers in JIRA_Instance._options['headers'] are not getting used.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nfrom jira import JIRA\r\nj = JIRA(\"SERVERNAME\")\r\nj._options\r\n{u'agile_rest_api_version': u'1.0',\r\n u'agile_rest_path': u'greenhopper',\r\n u'async': False,\r\n u'async_workers': 5,\r\n u'auth_url': u'/rest/auth/1/session',\r\n u'check_update': False,\r\n u'client_cert': None,\r\n u'context_path': u'/',\r\n u'headers': {u'Cache-Control': u'no-cache',\r\n  u'Content-Type': u'application/json',\r\n  u'X-Atlassian-Token': u'no-check'},\r\n u'resilient': True,\r\n u'rest_api_version': u'2',\r\n u'rest_path': u'api',\r\n u'server': 'SERVERNAME',\r\n u'verify': True}\r\nnew_header = {\"someheader\": \"somedata\"}\r\nj._options['headers'].update(new_header.copy())\r\n{u'agile_rest_api_version': u'1.0',\r\n u'agile_rest_path': u'greenhopper',\r\n u'async': False,\r\n u'async_workers': 5,\r\n u'auth_url': u'/rest/auth/1/session',\r\n u'check_update': False,\r\n u'client_cert': None,\r\n u'context_path': u'/',\r\n u'headers': {u'Cache-Control': u'no-cache',\r\n  u'Content-Type': u'application/json',\r\n  u'X-Atlassian-Token': u'no-check',\r\n  u'someheader': 'somedata'},\r\n u'resilient': True,\r\n u'rest_api_version': u'2',\r\n u'rest_path': u'api',\r\n u'server': 'SERVERNAME',\r\n u'verify': True}\r\n```\r\nNow, when you connect to the server to get an issue:\r\n```\r\nj.issue('SOMEPROJECT-SOMENUMBER')\r\n```\r\n\r\nYou should see the header within a tcpdump or wireshark. However, you don't, you only see:\r\n```\r\nFrame 1: 347 bytes on wire (2776 bits), 347 bytes captured (2776 bits) on interface 0\r\nNull/Loopback\r\nInternet Protocol Version 4, Src: 10.63.92.70, Dst: 10.20.114.56\r\nTransmission Control Protocol, Src Port: 59055, Dst Port: 8080, Seq: 1, Ack: 1, Len: 291\r\nHypertext Transfer Protocol\r\n    GET /rest/api/2/issue/<ISSUE_NUMBER> HTTP/1.1\\r\\n\r\n        [Expert Info (Chat/Sequence): GET <FULL_API_URL> HTTP/1.1\\r\\n]\r\n        Request Method: GET\r\n        Request URI: <API_URL>\r\n        Request Version: HTTP/1.1\r\n    Host: jira-api-vip.snc1:8080\\r\\n\r\n    Connection: keep-alive\\r\\n\r\n    Accept-Encoding: gzip, deflate\\r\\n\r\n    Accept: application/json,*.*;q=0.9\\r\\n\r\n    User-Agent: python-requests/2.18.4\\r\\n\r\n    Content-Type: application/json\\r\\n\r\n    X-Atlassian-Token: no-check\\r\\n\r\n    Cache-Control: no-cache\\r\\n\r\n    \\r\\n\r\n    [Full request URI: http:STUFF]\r\n    [HTTP request 1/1]\r\n    [Response in frame: 3]\r\n```\r\n\r\n**Expected behavior**\r\nThe headers in the JIRA instance should be used.\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 2.7.15\r\njira-python: 2.0.0\r\nOS: OSX\r\nIPython (Optional): IPython 5.7.0\r\nOther Dependencies:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/700", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/700/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/700/events", "html_url": "https://github.com/pycontribs/jira/issues/700", "id": 368026625, "node_id": "MDU6SXNzdWUzNjgwMjY2MjU=", "number": 700, "title": "async causes comment.delete() to break", "user": {"login": "jefft", "id": 205995, "node_id": "MDQ6VXNlcjIwNTk5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/205995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jefft", "html_url": "https://github.com/jefft", "followers_url": "https://api.github.com/users/jefft/followers", "following_url": "https://api.github.com/users/jefft/following{/other_user}", "gists_url": "https://api.github.com/users/jefft/gists{/gist_id}", "starred_url": "https://api.github.com/users/jefft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jefft/subscriptions", "organizations_url": "https://api.github.com/users/jefft/orgs", "repos_url": "https://api.github.com/users/jefft/repos", "events_url": "https://api.github.com/users/jefft/events{/privacy}", "received_events_url": "https://api.github.com/users/jefft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 937624694, "node_id": "MDU6TGFiZWw5Mzc2MjQ2OTQ=", "url": "https://api.github.com/repos/pycontribs/jira/labels/Needs:%20Research", "name": "Needs: Research", "color": "c5def5", "default": false, "description": "Needs root cause investigation."}, {"id": 110231329, "node_id": "MDU6TGFiZWwxMTAyMzEzMjk=", "url": "https://api.github.com/repos/pycontribs/jira/labels/bug", "name": "bug", "color": "fbca04", "default": true, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-09T03:25:42Z", "updated_at": "2019-10-29T14:28:29Z", "closed_at": "2019-10-29T14:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen initially connecting to JIRA ``async: True``, later calls to comment.delete() fail with an ``AttributeError: 'function' object has no attribute 'delete'``. The same operation works fine with async turned off.\r\n\r\n**To Reproduce**\r\n\r\nConnect to JIRA with any authentication method (I'm using oauth below), with ``'async': True`` option. Find a comment. Try to delete it as per the [docs](https://jira.readthedocs.io/en/master/examples.html#comments):\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom myapp import cfg\r\nfrom jira import JIRA\r\n\r\ndef connectjira():\r\n    options = {\r\n            'server': cfg.server\r\n            ,'async': True\r\n            }\r\n\r\n    oauth={\r\n            'access_token': cfg.access_token\r\n            ,'access_token_secret': cfg.access_token_secret\r\n            ,'consumer_key': cfg.consumer_key\r\n            ,'key_cert': open(cfg.key_cert_file, 'r').read()\r\n            }\r\n\r\n    return JIRA(options=options, oauth=oauth)\r\n\r\njira = connectjira()\r\nissue = jira.issue('BC-20')\r\ncomments = issue.fields.comment.comments\r\nprint(f\"{issue} has {len(comments)} comments\")\r\nif len(comments)>0:\r\n    firstcomment = comments[0]\r\n    print(f\"First comment: {firstcomment}\")\r\n    firstcomment.delete()\r\n```\r\n\r\n1. Any additional steps or considerations that happen before or after.\r\n\r\n**Expected behavior**\r\nComment should be deleted.\r\n\r\n**Stack Trace**\r\n```\r\n$ ./testdel.py \r\nBC-20 has 1 comments\r\nFirst comment: 63124\r\nTraceback (most recent call last):\r\n  File \"./testdel.py\", line 28, in <module>\r\n    firstcomment.delete()\r\n  File \"/home/jturner/testdel/venv/src/jira/jira/resources.py\", line 365, in delete\r\n    threaded_requests.delete(url=self.self, params=params))\r\nAttributeError: 'function' object has no attribute 'delete'\r\n\r\nIf you suspect this is an IPython bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n```\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.6.6\r\njira-python: 823820d99712c13350735104db1703c8a1ff5705 (29/Sep/18)\r\nOS: Linux", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/699", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/699/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/699/events", "html_url": "https://github.com/pycontribs/jira/issues/699", "id": 365945982, "node_id": "MDU6SXNzdWUzNjU5NDU5ODI=", "number": 699, "title": "Clone an issue", "user": {"login": "ultrabug", "id": 474389, "node_id": "MDQ6VXNlcjQ3NDM4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/474389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ultrabug", "html_url": "https://github.com/ultrabug", "followers_url": "https://api.github.com/users/ultrabug/followers", "following_url": "https://api.github.com/users/ultrabug/following{/other_user}", "gists_url": "https://api.github.com/users/ultrabug/gists{/gist_id}", "starred_url": "https://api.github.com/users/ultrabug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ultrabug/subscriptions", "organizations_url": "https://api.github.com/users/ultrabug/orgs", "repos_url": "https://api.github.com/users/ultrabug/repos", "events_url": "https://api.github.com/users/ultrabug/events{/privacy}", "received_events_url": "https://api.github.com/users/ultrabug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 110231331, "node_id": "MDU6TGFiZWwxMTAyMzEzMzE=", "url": "https://api.github.com/repos/pycontribs/jira/labels/enhancement", "name": "enhancement", "color": "ededed", "default": true, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-02T15:11:28Z", "updated_at": "2019-10-29T14:28:28Z", "closed_at": "2019-10-29T14:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI need to be able to clone an issue, just like I can do in the interface \"Clone\" feature\r\n\r\n**Describe the solution you'd like**\r\nissue.clone() helper\r\n\r\n**Describe alternatives you've considered**\r\nCopying the fields of an issue, but I didn't find a proper way to do it.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/698", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/698/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/698/events", "html_url": "https://github.com/pycontribs/jira/issues/698", "id": 364017702, "node_id": "MDU6SXNzdWUzNjQwMTc3MDI=", "number": 698, "title": "Updating/Deleting Comments --> \"Got recoverable error from PUT/DELETE\"", "user": {"login": "Tagman", "id": 1387323, "node_id": "MDQ6VXNlcjEzODczMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1387323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tagman", "html_url": "https://github.com/Tagman", "followers_url": "https://api.github.com/users/Tagman/followers", "following_url": "https://api.github.com/users/Tagman/following{/other_user}", "gists_url": "https://api.github.com/users/Tagman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tagman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tagman/subscriptions", "organizations_url": "https://api.github.com/users/Tagman/orgs", "repos_url": "https://api.github.com/users/Tagman/repos", "events_url": "https://api.github.com/users/Tagman/events{/privacy}", "received_events_url": "https://api.github.com/users/Tagman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-26T13:03:11Z", "updated_at": "2018-09-27T09:13:37Z", "closed_at": "2018-09-27T08:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen trying to update an existing comment by using its ID, the server always responds with an 401 - Unauthorized.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nimport jira_worker\r\nworker = jira_worker.Worker()\r\nserver = worker._server\r\nserver.comment(\"OLATCE-6353\", 201593)\r\n<JIRA Comment: id='201593'>\r\ncomment = server.comment(\"OLATCE-6353\", 201593)\r\nold = comment.body\r\nnew = old + \"\\nTESTING!!!!\"\r\ncomment.update(body=new)\r\n\r\n```\r\nI have written a wrapper around the library, to initialize a server. Still the calls in this example all use the api objects. The Auth is done with basic_auth. The code is this:\r\n```\t\r\ndef _initialize(self):\r\n\t\t\"\"\"Init server with values from the config\"\"\"\r\n\r\n\t\tserverURL = self._config['server']['server_url']\r\n\t\tusername = self._config['server']['username']\r\n\t\tpassword = self._config['server']['password']\r\n\t\tjira = JIRA(server=serverURL, basic_auth=(username, password))\r\n\t\tlogging.debug(\"Jira server: {0} initialised\".format(serverURL))\r\n\t\treturn jira\r\n```\r\n Adding new comments works with the same object. And the correct user is used. The response headers suggest that the request is not sent with the authenticated user but instead as anoymous.\r\n\r\nIs this maybe related to [ISSUE-528](https://github.com/pycontribs/jira/issues/528) ?\r\n\r\n**Expected behavior**\r\nThe comment should contain the new string.\r\n\r\n**Stack Trace**\r\n```\r\nWARNING:root:Got recoverable error from PUT <BASE_URL>/rest/api/2/issue/65293/comment/201593, will retry [1/3] in 14.085268728018857s. Err: 401 401\r\nWARNING:root:Got recoverable error from PUT <BASE_URL>/rest/api/2/issue/65293/comment/201593, will retry [2/3] in 11.216269152043568s. Err: 401 401\r\nWARNING:root:Got recoverable error from PUT <BASE_URL>/rest/api/2/issue/65293/comment/201593, will retry [3/3] in 36.92498948404944s. Err: 401 401\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/home/chhar/projects/python/envs/autoFlow/lib/python3.6/site-packages/jira/resources.py\", line 525, in update\r\n    super(Comment, self).update(data)\r\n  File \"/home/chhar/projects/python/envs/autoFlow/lib/python3.6/site-packages/jira/resources.py\", line 232, in update\r\n    self.self + querystring, data=data)\r\n  File \"/home/chhar/projects/python/envs/autoFlow/lib/python3.6/site-packages/jira/resilientsession.py\", line 157, in put\r\n    return self.__verb('PUT', url, **kwargs)\r\n  File \"/home/chhar/projects/python/envs/autoFlow/lib/python3.6/site-packages/jira/resilientsession.py\", line 147, in __verb\r\n    raise_on_error(response, verb=verb, **kwargs)\r\n  File \"/home/chhar/projects/python/envs/autoFlow/lib/python3.6/site-packages/jira/resilientsession.py\", line 57, in raise_on_error\r\n    r.status_code, error, r.url, request=request, response=r, **kwargs)\r\njira.exceptions.JIRAError: JiraError HTTP 401 url: <BASE_URL>/rest/api/2/issue/65293/comment/201593\r\n\ttext: You do not have the permission to see the specified issue.\r\n\t\r\n\tresponse headers = {'Date': 'Wed, 26 Sep 2018 12:56:54 GMT', 'Server': 'Apache', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'X-AREQUESTID': '896x40968x1', 'X-ASEN': 'SEN-2021575', 'X-AUSERNAME': 'anonymous', 'Cache-Control': 'no-cache, no-store, no-transform', 'WWW-Authenticate': 'OAuth realm=\"https%3A%2F%2Fwww.bps-system.de%2Fdevel\"', 'Content-Type': 'application/json;charset=UTF-8', 'Vary': 'User-Agent', 'Keep-Alive': 'timeout=60, max=697', 'Connection': 'Keep-Alive', 'Transfer-Encoding': 'chunked'}\r\n\tresponse text = {\"errorMessages\":[\"You do not have the permission to see the specified issue.\",\"Login Required\"],\"errors\":{}}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/697", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/697/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/697/events", "html_url": "https://github.com/pycontribs/jira/issues/697", "id": 363957094, "node_id": "MDU6SXNzdWUzNjM5NTcwOTQ=", "number": 697, "title": "GDPR: JIRA API changes regarding users", "user": {"login": "petroswork", "id": 20224805, "node_id": "MDQ6VXNlcjIwMjI0ODA1", "avatar_url": "https://avatars1.githubusercontent.com/u/20224805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petroswork", "html_url": "https://github.com/petroswork", "followers_url": "https://api.github.com/users/petroswork/followers", "following_url": "https://api.github.com/users/petroswork/following{/other_user}", "gists_url": "https://api.github.com/users/petroswork/gists{/gist_id}", "starred_url": "https://api.github.com/users/petroswork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petroswork/subscriptions", "organizations_url": "https://api.github.com/users/petroswork/orgs", "repos_url": "https://api.github.com/users/petroswork/repos", "events_url": "https://api.github.com/users/petroswork/events{/privacy}", "received_events_url": "https://api.github.com/users/petroswork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 110231329, "node_id": "MDU6TGFiZWwxMTAyMzEzMjk=", "url": "https://api.github.com/repos/pycontribs/jira/labels/bug", "name": "bug", "color": "fbca04", "default": true, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-26T10:23:20Z", "updated_at": "2019-10-29T11:28:36Z", "closed_at": "2019-10-29T11:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [this](https://developer.atlassian.com/cloud/jira/platform/api-changes-for-user-privacy-announcement/?_ga=2.175026080.366259731.1533136712-1276219155.1503476605), the API regarding users will change, several attributes will be removed, one will be added and some may change value/behaviour.\r\n\r\nThis will require changes to documentation and possibly the methods that depend on the `key` or other attribute to be deprecated. Some likely changes to the code are in class `Resource`, `_READABLE_IDS` and the `add_user` method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/696", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/696/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/696/events", "html_url": "https://github.com/pycontribs/jira/issues/696", "id": 363740405, "node_id": "MDU6SXNzdWUzNjM3NDA0MDU=", "number": 696, "title": "Proposal: Remove Requirement for merging branchs to be up to date.", "user": {"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 937624694, "node_id": "MDU6TGFiZWw5Mzc2MjQ2OTQ=", "url": "https://api.github.com/repos/pycontribs/jira/labels/Needs:%20Research", "name": "Needs: Research", "color": "c5def5", "default": false, "description": "Needs root cause investigation."}], "state": "closed", "locked": false, "assignee": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, {"login": "aelse", "id": 165789, "node_id": "MDQ6VXNlcjE2NTc4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/165789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aelse", "html_url": "https://github.com/aelse", "followers_url": "https://api.github.com/users/aelse/followers", "following_url": "https://api.github.com/users/aelse/following{/other_user}", "gists_url": "https://api.github.com/users/aelse/gists{/gist_id}", "starred_url": "https://api.github.com/users/aelse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aelse/subscriptions", "organizations_url": "https://api.github.com/users/aelse/orgs", "repos_url": "https://api.github.com/users/aelse/repos", "events_url": "https://api.github.com/users/aelse/events{/privacy}", "received_events_url": "https://api.github.com/users/aelse/received_events", "type": "User", "site_admin": false}, {"login": "asqui", "id": 174182, "node_id": "MDQ6VXNlcjE3NDE4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/174182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asqui", "html_url": "https://github.com/asqui", "followers_url": "https://api.github.com/users/asqui/followers", "following_url": "https://api.github.com/users/asqui/following{/other_user}", "gists_url": "https://api.github.com/users/asqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/asqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asqui/subscriptions", "organizations_url": "https://api.github.com/users/asqui/orgs", "repos_url": "https://api.github.com/users/asqui/repos", "events_url": "https://api.github.com/users/asqui/events{/privacy}", "received_events_url": "https://api.github.com/users/asqui/received_events", "type": "User", "site_admin": false}, {"login": "Achimh3011", "id": 479001, "node_id": "MDQ6VXNlcjQ3OTAwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/479001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Achimh3011", "html_url": "https://github.com/Achimh3011", "followers_url": "https://api.github.com/users/Achimh3011/followers", "following_url": "https://api.github.com/users/Achimh3011/following{/other_user}", "gists_url": "https://api.github.com/users/Achimh3011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Achimh3011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Achimh3011/subscriptions", "organizations_url": "https://api.github.com/users/Achimh3011/orgs", "repos_url": "https://api.github.com/users/Achimh3011/repos", "events_url": "https://api.github.com/users/Achimh3011/events{/privacy}", "received_events_url": "https://api.github.com/users/Achimh3011/received_events", "type": "User", "site_admin": false}, {"login": "dbaxa", "id": 1684354, "node_id": "MDQ6VXNlcjE2ODQzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1684354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbaxa", "html_url": "https://github.com/dbaxa", "followers_url": "https://api.github.com/users/dbaxa/followers", "following_url": "https://api.github.com/users/dbaxa/following{/other_user}", "gists_url": "https://api.github.com/users/dbaxa/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbaxa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbaxa/subscriptions", "organizations_url": "https://api.github.com/users/dbaxa/orgs", "repos_url": "https://api.github.com/users/dbaxa/repos", "events_url": "https://api.github.com/users/dbaxa/events{/privacy}", "received_events_url": "https://api.github.com/users/dbaxa/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pycontribs/jira/milestones/7", "html_url": "https://github.com/pycontribs/jira/milestone/7", "labels_url": "https://api.github.com/repos/pycontribs/jira/milestones/7/labels", "id": 1740753, "node_id": "MDk6TWlsZXN0b25lMTc0MDc1Mw==", "number": 7, "title": "non-planned", "description": null, "creator": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2016-05-01T15:53:35Z", "updated_at": "2018-11-17T12:52:11Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-09-25T19:52:46Z", "updated_at": "2018-11-17T12:52:11Z", "closed_at": "2018-11-17T12:52:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In general I like the concept of making sure that respective branches are up to date, but I think a better way might be to only allow the rebase and merge option. This should prevent any conflicts from arising, and can allow the flow of development not to be hindered. Since right now any time a change gets pushed through ALL other branches must be rebased and retested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/690", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/690/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/690/events", "html_url": "https://github.com/pycontribs/jira/issues/690", "id": 363079935, "node_id": "MDU6SXNzdWUzNjMwNzk5MzU=", "number": 690, "title": "make install-sdk not working for debian/ubuntu", "user": {"login": "mihaics3", "id": 28511062, "node_id": "MDQ6VXNlcjI4NTExMDYy", "avatar_url": "https://avatars2.githubusercontent.com/u/28511062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaics3", "html_url": "https://github.com/mihaics3", "followers_url": "https://api.github.com/users/mihaics3/followers", "following_url": "https://api.github.com/users/mihaics3/following{/other_user}", "gists_url": "https://api.github.com/users/mihaics3/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaics3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaics3/subscriptions", "organizations_url": "https://api.github.com/users/mihaics3/orgs", "repos_url": "https://api.github.com/users/mihaics3/repos", "events_url": "https://api.github.com/users/mihaics3/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaics3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-24T09:58:39Z", "updated_at": "2018-11-03T10:10:38Z", "closed_at": "2018-11-03T10:10:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nWhen you try to run make install-sdk on debian/ubuntu it will fail to install atlassian-plugin-sdk.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nsudo make install-sdk\r\n```\r\n\r\n**Expected behavior**\r\natlassian-plugin-sdk should be installed.\r\n\r\n**Version Information**\r\nPython Interpreter: 3.4.3\r\njira-python: HEAD\r\nOS: Ubuntu 14.04\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/689", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/689/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/689/events", "html_url": "https://github.com/pycontribs/jira/issues/689", "id": 363018942, "node_id": "MDU6SXNzdWUzNjMwMTg5NDI=", "number": 689, "title": "Add type hints", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751642399, "node_id": "MDU6TGFiZWw3NTE2NDIzOTk=", "url": "https://api.github.com/repos/pycontribs/jira/labels/docs", "name": "docs", "color": "4071a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hdost", "id": 643846, "node_id": "MDQ6VXNlcjY0Mzg0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdost", "html_url": "https://github.com/hdost", "followers_url": "https://api.github.com/users/hdost/followers", "following_url": "https://api.github.com/users/hdost/following{/other_user}", "gists_url": "https://api.github.com/users/hdost/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdost/subscriptions", "organizations_url": "https://api.github.com/users/hdost/orgs", "repos_url": "https://api.github.com/users/hdost/repos", "events_url": "https://api.github.com/users/hdost/events{/privacy}", "received_events_url": "https://api.github.com/users/hdost/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-24T05:31:24Z", "updated_at": "2018-12-08T06:18:35Z", "closed_at": "2018-12-08T04:03:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nPyCharm doesn't provide me type hints for `jira` library.\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice to have type hints in `jira` library. `jira` library supports Python 2.7, which doesn't support type hints, therefore, I suggest you include stub files.\r\n\r\n**Additional context**\r\nThere are tools for generating stub files: https://mypy.readthedocs.io/en/stable/existing_code.html#automate-annotation-of-legacy-code, although, I have not tested them yet.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/688", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/688/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/688/events", "html_url": "https://github.com/pycontribs/jira/issues/688", "id": 362346573, "node_id": "MDU6SXNzdWUzNjIzNDY1NzM=", "number": 688, "title": "search_issues within jira client results in tuple index out of range: IndexError exception", "user": {"login": "rahiparikh", "id": 1883189, "node_id": "MDQ6VXNlcjE4ODMxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1883189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahiparikh", "html_url": "https://github.com/rahiparikh", "followers_url": "https://api.github.com/users/rahiparikh/followers", "following_url": "https://api.github.com/users/rahiparikh/following{/other_user}", "gists_url": "https://api.github.com/users/rahiparikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahiparikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahiparikh/subscriptions", "organizations_url": "https://api.github.com/users/rahiparikh/orgs", "repos_url": "https://api.github.com/users/rahiparikh/repos", "events_url": "https://api.github.com/users/rahiparikh/events{/privacy}", "received_events_url": "https://api.github.com/users/rahiparikh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-20T20:09:56Z", "updated_at": "2019-10-29T15:28:29Z", "closed_at": "2019-10-29T15:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nI am currently using Jira python client in AWS lambda environment w/ python 3.6 image to search for existing issues. When I call search_issues with `jql`, I am getting an exception as shown below. \r\n\r\nCode block\r\n\r\n```\r\nclass JiraClient:\r\n\r\n    jira_client = None\r\n\r\n    def __init__(self, jira_url, access_token, access_token_secret, consumer_key, key_cert):\r\n\r\n        oauth_dict = {\r\n            'access_token': access_token,\r\n            'access_token_secret': access_token_secret,\r\n            'consumer_key': consumer_key,\r\n            'key_cert': key_cert\r\n        }\r\n\r\n        self.jira_client = jira.JIRA(server=jira_url, oauth=oauth_dict)\r\n\r\n    def __duplicate(self, issue):\r\n\r\n        dup = self.jira_client.search_issues('updated >= -52w')\r\n```\r\n\r\n**Expected behavior**\r\nThe query should return the issues that were identified w/ provided search criteria.\r\n\r\n**Stack Trace**\r\n```\r\n  File \"/var/task/main.py\", line 78, in report_issues\r\n    jira_client.generate_issues(issues)\r\n  File \"/var/task/connector/jira_client.py\", line 103, in generate_issues\r\n    if not self.__duplicate(issue):\r\n  File \"/var/task/connector/jira_client.py\", line 75, in __duplicate\r\n    dup = self.jira_client.search_issues('updated >= -52w')\r\n  File \"/var/task/jira/client.py\", line 2109, in search_issues\r\n    issues = self._fetch_pages(Issue, 'issues', 'search', startAt, maxResults, search_params)\r\n  File \"/var/task/jira/client.py\", line 575, in _fetch_pages\r\n    resource = self._get_json(request_path, params=page_params, base=base)\r\n  File \"/var/task/jira/client.py\", line 2549, in _get_json\r\n    r = self._session.get(url, params=params)\r\n  File \"/var/task/jira/resilientsession.py\", line 151, in get\r\n    return self.__verb('GET', url, **kwargs)\r\n  File \"/var/task/jira/resilientsession.py\", line 125, in __verb\r\n    response = method(url, timeout=self.timeout, **kwargs)\r\n  File \"/var/task/requests/sessions.py\", line 525, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/var/task/requests/sessions.py\", line 512, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/var/task/requests/sessions.py\", line 622, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/var/task/requests/adapters.py\", line 445, in send\r\n    timeout=timeout\r\n  File \"/var/task/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/var/task/urllib3/connectionpool.py\", line 384, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 2, in raise_from\r\n  File \"/var/task/urllib3/connectionpool.py\", line 380, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/var/lang/lib/python3.6/http/client.py\", line 1331, in getresponse\r\n    response.begin()\r\n  File \"/var/lang/lib/python3.6/http/client.py\", line 297, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/var/lang/lib/python3.6/http/client.py\", line 258, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/var/lang/lib/python3.6/socket.py\", line 591, in readinto\r\n    if e.args[0] in _blocking_errnos:\r\nIndexError: tuple index out of range\r\n```\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: Python 3.6\r\njira-python: 2.0.0\r\nOS: *nix\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/687", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/687/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/687/events", "html_url": "https://github.com/pycontribs/jira/issues/687", "id": 362229356, "node_id": "MDU6SXNzdWUzNjIyMjkzNTY=", "number": 687, "title": "The docs refer to Dash support, but link is broken.", "user": {"login": "mattkatz", "id": 71204, "node_id": "MDQ6VXNlcjcxMjA0", "avatar_url": "https://avatars0.githubusercontent.com/u/71204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkatz", "html_url": "https://github.com/mattkatz", "followers_url": "https://api.github.com/users/mattkatz/followers", "following_url": "https://api.github.com/users/mattkatz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkatz/subscriptions", "organizations_url": "https://api.github.com/users/mattkatz/orgs", "repos_url": "https://api.github.com/users/mattkatz/repos", "events_url": "https://api.github.com/users/mattkatz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkatz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751642399, "node_id": "MDU6TGFiZWw3NTE2NDIzOTk=", "url": "https://api.github.com/repos/pycontribs/jira/labels/docs", "name": "docs", "color": "4071a5", "default": false, "description": ""}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-20T14:59:46Z", "updated_at": "2019-11-18T17:53:53Z", "closed_at": "2019-10-29T13:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe public website lists a dash docset.\r\nThe link produces a 404.\r\nThe rst for the dash file also refers to https://jira.readthedocs.io/en/latest/docset/jira.tgz\r\nThat also produces a 404\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Click the link titled dash feed on https://jira.readthedocs.io/en/latest/index.html\r\n\r\n**Expected behavior**\r\nI would expect a link into the dash docset.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/686", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/686/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/686/events", "html_url": "https://github.com/pycontribs/jira/issues/686", "id": 361625873, "node_id": "MDU6SXNzdWUzNjE2MjU4NzM=", "number": 686, "title": "Use asynchronous aiohttp for making requests", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 937624694, "node_id": "MDU6TGFiZWw5Mzc2MjQ2OTQ=", "url": "https://api.github.com/repos/pycontribs/jira/labels/Needs:%20Research", "name": "Needs: Research", "color": "c5def5", "default": false, "description": "Needs root cause investigation."}, {"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pycontribs/jira/milestones/17", "html_url": "https://github.com/pycontribs/jira/milestone/17", "labels_url": "https://api.github.com/repos/pycontribs/jira/milestones/17/labels", "id": 3670552, "node_id": "MDk6TWlsZXN0b25lMzY3MDU1Mg==", "number": 17, "title": "3.0.0", "description": null, "creator": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2018-09-19T08:14:51Z", "updated_at": "2019-10-29T14:28:26Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2018-09-19T08:01:27Z", "updated_at": "2019-10-29T14:28:26Z", "closed_at": "2019-10-29T14:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm writing telegram bot for interacting with Jira. The bot uses `aiogram` - asynchronous library, based on `aiohttp`. `jira` library uses blocking `requests` library.\r\n\r\n**Describe the solution you'd like**\r\nI propose to switch from `requests` library to `aiohttp` library for making requests. The only problem I see is that `aiohttp` supports only Python 3.5-3.7. That means that Python 2.7, 3.4 would be dropped.\r\n\r\n**Describe alternatives you've considered**\r\nFor now, I will wrap all Jira related code to `asyncio.run_in_executor`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/684", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/684/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/684/events", "html_url": "https://github.com/pycontribs/jira/issues/684", "id": 358544862, "node_id": "MDU6SXNzdWUzNTg1NDQ4NjI=", "number": 684, "title": "\"Scrum Team required\" when creating an issue.", "user": {"login": "doodla", "id": 3683106, "node_id": "MDQ6VXNlcjM2ODMxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3683106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doodla", "html_url": "https://github.com/doodla", "followers_url": "https://api.github.com/users/doodla/followers", "following_url": "https://api.github.com/users/doodla/following{/other_user}", "gists_url": "https://api.github.com/users/doodla/gists{/gist_id}", "starred_url": "https://api.github.com/users/doodla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doodla/subscriptions", "organizations_url": "https://api.github.com/users/doodla/orgs", "repos_url": "https://api.github.com/users/doodla/repos", "events_url": "https://api.github.com/users/doodla/events{/privacy}", "received_events_url": "https://api.github.com/users/doodla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T09:41:22Z", "updated_at": "2018-09-10T18:56:23Z", "closed_at": "2018-09-10T18:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This isn't an issue with the library because I've been using the same version for a couple of months and no issues.\r\n\r\nHowever, last night I got the following error message when using `create_issue()`. I assume _something_ may have changed with our Server JIRA installation ( ? ), maybe.\r\n\r\n```\r\njira.exceptions.JIRAError: JiraError HTTP 400 url: https://jira.***.com/rest/api/2/issue\r\n\ttext: Scrum Team: Scrum Team is required.\r\n```\r\n\r\nDoes anyone have any clue what that is? And how do I provide it? Doing a search for `scrum` only takes me to the create boards pages.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/678", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/678/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/678/events", "html_url": "https://github.com/pycontribs/jira/issues/678", "id": 354579835, "node_id": "MDU6SXNzdWUzNTQ1Nzk4MzU=", "number": 678, "title": "AttributeError: type object 'PropertyHolder' has no attribute 'issuelinks'", "user": {"login": "prathimagsra", "id": 10496781, "node_id": "MDQ6VXNlcjEwNDk2Nzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/10496781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prathimagsra", "html_url": "https://github.com/prathimagsra", "followers_url": "https://api.github.com/users/prathimagsra/followers", "following_url": "https://api.github.com/users/prathimagsra/following{/other_user}", "gists_url": "https://api.github.com/users/prathimagsra/gists{/gist_id}", "starred_url": "https://api.github.com/users/prathimagsra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prathimagsra/subscriptions", "organizations_url": "https://api.github.com/users/prathimagsra/orgs", "repos_url": "https://api.github.com/users/prathimagsra/repos", "events_url": "https://api.github.com/users/prathimagsra/events{/privacy}", "received_events_url": "https://api.github.com/users/prathimagsra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-28T05:47:49Z", "updated_at": "2019-10-29T15:28:31Z", "closed_at": "2019-10-29T15:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to retrieve the issuelink associated with an issue using jira-Python. But, receiving following error: \r\n\r\n**AttributeError: type object 'PropertyHolder' has no attribute 'issuelinks'**\r\n\r\nCode:\r\n```\r\nissueKey = 'RM-9948'\r\nissue = jira.issue(issueKey)\r\nprint(issue.fields.summary)\r\nprint (issue.fields.customfield_10115)\r\nprint (issue.fields.customfield_10116)\r\nprint (issue.fields.customfield_10117)\r\nprint (issue.fields.customfield_10146)\r\n\r\nprint(issue.fields.issuelinks)\r\n```\r\nI am able to get all other field values including subtasks except issuelinks. Any help will be appreciated.\r\n\r\n**Version Information**\r\nJira : - 7.4.3\r\nPython :- 3.7\r\nJira-Python :- 2.0.0\r\nOS: Windows\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/672", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/672/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/672/events", "html_url": "https://github.com/pycontribs/jira/issues/672", "id": 350205247, "node_id": "MDU6SXNzdWUzNTAyMDUyNDc=", "number": 672, "title": "Attachment field is empty in API, while a jira issue has few.", "user": {"login": "Demian87", "id": 2970931, "node_id": "MDQ6VXNlcjI5NzA5MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2970931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Demian87", "html_url": "https://github.com/Demian87", "followers_url": "https://api.github.com/users/Demian87/followers", "following_url": "https://api.github.com/users/Demian87/following{/other_user}", "gists_url": "https://api.github.com/users/Demian87/gists{/gist_id}", "starred_url": "https://api.github.com/users/Demian87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Demian87/subscriptions", "organizations_url": "https://api.github.com/users/Demian87/orgs", "repos_url": "https://api.github.com/users/Demian87/repos", "events_url": "https://api.github.com/users/Demian87/events{/privacy}", "received_events_url": "https://api.github.com/users/Demian87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T21:43:57Z", "updated_at": "2018-08-13T21:52:10Z", "closed_at": "2018-08-13T21:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attachment field is empty in API, while a jira issue has few.\r\n\r\n## Environment\r\n- Python Interpreter: 3.6\r\n- jira-python: 2.0.0\r\n- OS: Win10 \r\n- jira: 7.5.0\r\n\r\n## Steps To Reproduce:\r\n\r\n1. Create an issue in jira\r\n2. Attach a file to issue in jira\r\n3. Get an issue object through API: jira.issue(<issue_key>)\r\n4. Get issue.fields.attachment object and print it.\r\n\r\n## Expected result:\r\n    5.  Get the description of attachment object with the list, containig one attachment item in it.\r\n## Fact result:\r\n    5. Get empty list in console.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/670", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/670/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/670/events", "html_url": "https://github.com/pycontribs/jira/issues/670", "id": 348700396, "node_id": "MDU6SXNzdWUzNDg3MDAzOTY=", "number": 670, "title": "ImportError: cannot import name 'JIRA' from 'jira' ", "user": {"login": "johanneslaubermoovel", "id": 17448539, "node_id": "MDQ6VXNlcjE3NDQ4NTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/17448539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanneslaubermoovel", "html_url": "https://github.com/johanneslaubermoovel", "followers_url": "https://api.github.com/users/johanneslaubermoovel/followers", "following_url": "https://api.github.com/users/johanneslaubermoovel/following{/other_user}", "gists_url": "https://api.github.com/users/johanneslaubermoovel/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanneslaubermoovel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanneslaubermoovel/subscriptions", "organizations_url": "https://api.github.com/users/johanneslaubermoovel/orgs", "repos_url": "https://api.github.com/users/johanneslaubermoovel/repos", "events_url": "https://api.github.com/users/johanneslaubermoovel/events{/privacy}", "received_events_url": "https://api.github.com/users/johanneslaubermoovel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-08T12:16:49Z", "updated_at": "2018-08-08T12:25:26Z", "closed_at": "2018-08-08T12:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before raising any bug be sure that you used the latest release and that it still reproduces with the latest master. No other version is supported.\r\n\r\n**Describe the bug**\r\nGetting error when trying to import JIRA\r\n\r\n**To Reproduce**\r\nA file named jira.py which only have one line:\r\n`from jira import JIRA`\r\nthen in the terminal I'm running\r\npip3 install jira\r\npython3 jira.py\r\n\r\n**Expected behavior**\r\nno crash\r\n\r\nbut getting the crash: \"ImportError: cannot import name 'JIRA' from 'jira'\"\r\n\r\n\r\n**Version Information**\r\nPython Interpreter: 3.7\r\njira-python: <VERSION>\r\nOS: MacOS 10.13.15\r\nIPython (Optional): <VERSION>\r\nOther Dependencies:\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pycontribs/jira/issues/668", "repository_url": "https://api.github.com/repos/pycontribs/jira", "labels_url": "https://api.github.com/repos/pycontribs/jira/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/pycontribs/jira/issues/668/comments", "events_url": "https://api.github.com/repos/pycontribs/jira/issues/668/events", "html_url": "https://github.com/pycontribs/jira/issues/668", "id": 347562807, "node_id": "MDU6SXNzdWUzNDc1NjI4MDc=", "number": 668, "title": "Tempo API to obtain worklogs for a custom period of time", "user": {"login": "karolszk", "id": 8544489, "node_id": "MDQ6VXNlcjg1NDQ0ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8544489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolszk", "html_url": "https://github.com/karolszk", "followers_url": "https://api.github.com/users/karolszk/followers", "following_url": "https://api.github.com/users/karolszk/following{/other_user}", "gists_url": "https://api.github.com/users/karolszk/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolszk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolszk/subscriptions", "organizations_url": "https://api.github.com/users/karolszk/orgs", "repos_url": "https://api.github.com/users/karolszk/repos", "events_url": "https://api.github.com/users/karolszk/events{/privacy}", "received_events_url": "https://api.github.com/users/karolszk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1615656026, "node_id": "MDU6TGFiZWwxNjE1NjU2MDI2", "url": "https://api.github.com/repos/pycontribs/jira/labels/wontfix", "name": "wontfix", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-03T23:31:43Z", "updated_at": "2019-10-29T13:28:34Z", "closed_at": "2019-10-29T13:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\n\r\nFirst I would like thank you for a such great python library! :)\r\nIs it possible to obtain an access to Tempo plugin in python? \r\nI am looking for obtaining aggregated worked hours for a specific period of time for a groups of people.\r\n\r\nRegards, Karol Szk", "performed_via_github_app": null, "score": 1.0}]}