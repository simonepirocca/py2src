{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jab/bidict/issues/111", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/111/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/111/events", "html_url": "https://github.com/jab/bidict/issues/111", "id": 662508973, "node_id": "MDU6SXNzdWU2NjI1MDg5NzM=", "number": 111, "title": "Bug in BidirectionalMapping.__subclasshook__(): Any class with an inverse attribute is considered a collections.abc.Mapping", "user": {"login": "amol447", "id": 4054978, "node_id": "MDQ6VXNlcjQwNTQ5Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4054978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amol447", "html_url": "https://github.com/amol447", "followers_url": "https://api.github.com/users/amol447/followers", "following_url": "https://api.github.com/users/amol447/following{/other_user}", "gists_url": "https://api.github.com/users/amol447/gists{/gist_id}", "starred_url": "https://api.github.com/users/amol447/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amol447/subscriptions", "organizations_url": "https://api.github.com/users/amol447/orgs", "repos_url": "https://api.github.com/users/amol447/repos", "events_url": "https://api.github.com/users/amol447/events{/privacy}", "received_events_url": "https://api.github.com/users/amol447/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-21T02:55:15Z", "updated_at": "2020-07-23T14:11:30Z", "closed_at": "2020-07-23T13:36:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Importing bidict causes the tfp.sts.Autoregressive class to not work at all. Simplest code to reproduce the problem is as follows\r\nNot sure if the issue is with tfp or bidict.\r\n```\r\n    import bidict  \r\n    import tensorflow_probability as tfp  \r\n    a=tfp.sts.Autoregressive(order=2)  \r\nAttributeError: 'LinearOperatorDiag' object has not attribute 'keys'\r\n```\r\nbidict :0.19.0\r\ntf : 2.2.0\r\ntfp:0.10.0\r\nsee https://github.com/tensorflow/probability/issues/1016 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/105", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/105/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/105/events", "html_url": "https://github.com/jab/bidict/issues/105", "id": 524158332, "node_id": "MDU6SXNzdWU1MjQxNTgzMzI=", "number": 105, "title": "Small typo in CONTRIBUTING.rst", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-18T06:14:46Z", "updated_at": "2019-11-18T12:43:38Z", "closed_at": "2019-11-18T12:43:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should read supported instead of suppored.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/97", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/97/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/97/events", "html_url": "https://github.com/jab/bidict/issues/97", "id": 514759582, "node_id": "MDU6SXNzdWU1MTQ3NTk1ODI=", "number": 97, "title": "remove Python 2 support", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1653964394, "node_id": "MDU6TGFiZWwxNjUzOTY0Mzk0", "url": "https://api.github.com/repos/jab/bidict/labels/has%20PR", "name": "has PR", "color": "b0eaf2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T15:22:54Z", "updated_at": "2019-11-04T03:09:54Z", "closed_at": "2019-11-04T03:09:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As promised by https://bidict.readthedocs.io/#python-2-eol.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/94", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/94/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/94/events", "html_url": "https://github.com/jab/bidict/issues/94", "id": 488090726, "node_id": "MDU6SXNzdWU0ODgwOTA3MjY=", "number": 94, "title": "bidict imcompatible with deepcopy and pickle", "user": {"login": "uduse", "id": 4717005, "node_id": "MDQ6VXNlcjQ3MTcwMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4717005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uduse", "html_url": "https://github.com/uduse", "followers_url": "https://api.github.com/users/uduse/followers", "following_url": "https://api.github.com/users/uduse/following{/other_user}", "gists_url": "https://api.github.com/users/uduse/gists{/gist_id}", "starred_url": "https://api.github.com/users/uduse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uduse/subscriptions", "organizations_url": "https://api.github.com/users/uduse/orgs", "repos_url": "https://api.github.com/users/uduse/repos", "events_url": "https://api.github.com/users/uduse/events{/privacy}", "received_events_url": "https://api.github.com/users/uduse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-02T09:24:08Z", "updated_at": "2019-09-03T15:45:59Z", "closed_at": "2019-09-02T21:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport copy\r\nfrom bidict import bidict\r\nd = bidict({0: 1, 2: 3})\r\nd2 = copy.deepcopy(d)\r\nx = d2.inv.inv\r\n```\r\n\r\nThis raises:\r\n```\r\n~/Library/...\r\n    169     def inv(self):\r\n    170         \"\"\"Alias for :attr:`inverse`.\"\"\"\r\n--> 171         return self.inverse\r\n    172 \r\n    173     def __getstate__(self):\r\n\r\n~/Library/...\r\n    159             return self._inv\r\n    160         # Otherwise a weakref is stored in self._invweak. Try to get a strong ref from it.\r\n--> 161         inv = self._invweak()\r\n    162         if inv is not None:\r\n    163             return inv\r\n\r\nAttributeError: _invweak\r\n```\r\n\r\nIn addition, this also raises the same error:\r\n```python\r\nimport pickle\r\nfrom bidict import bidict\r\nd = bidict({0: 1, 2: 3})\r\npickle.loads(pickle.dumps(d)).inv.inv\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/93", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/93/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/93/events", "html_url": "https://github.com/jab/bidict/issues/93", "id": 463997487, "node_id": "MDU6SXNzdWU0NjM5OTc0ODc=", "number": 93, "title": "provide type annotations", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-07-03T23:46:58Z", "updated_at": "2020-08-15T19:36:06Z", "closed_at": "2020-08-04T12:12:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Maybe after removing support for older versions of Python.\r\n\r\nRef:\r\n- https://docs.python.org/3/library/typing.html\r\n- https://mypy.readthedocs.io/en/stable/generics.html#defining-sub-classes-of-generic-classes\r\n- MagicStack/immutables#13", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/92", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/92/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/92/events", "html_url": "https://github.com/jab/bidict/issues/92", "id": 448243984, "node_id": "MDU6SXNzdWU0NDgyNDM5ODQ=", "number": 92, "title": "[Feature Request] Multiple Values for a key", "user": {"login": "SmartManoj", "id": 7231077, "node_id": "MDQ6VXNlcjcyMzEwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7231077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmartManoj", "html_url": "https://github.com/SmartManoj", "followers_url": "https://api.github.com/users/SmartManoj/followers", "following_url": "https://api.github.com/users/SmartManoj/following{/other_user}", "gists_url": "https://api.github.com/users/SmartManoj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmartManoj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmartManoj/subscriptions", "organizations_url": "https://api.github.com/users/SmartManoj/orgs", "repos_url": "https://api.github.com/users/SmartManoj/repos", "events_url": "https://api.github.com/users/SmartManoj/events{/privacy}", "received_events_url": "https://api.github.com/users/SmartManoj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-24T16:00:09Z", "updated_at": "2019-05-27T14:52:45Z", "closed_at": "2019-05-27T14:52:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "a={\r\n2:(3,4),\r\n5:3\r\n}\r\na_inv={\r\n\t3:(2,5),\r\n\t4:2,\r\n}\r\nIs it possible to achieve using bidict?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/91", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/91/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/91/events", "html_url": "https://github.com/jab/bidict/issues/91", "id": 440121113, "node_id": "MDU6SXNzdWU0NDAxMjExMTM=", "number": 91, "title": "Thoughts: More than bidirectional functionality?", "user": {"login": "hbrooks", "id": 24214708, "node_id": "MDQ6VXNlcjI0MjE0NzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/24214708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbrooks", "html_url": "https://github.com/hbrooks", "followers_url": "https://api.github.com/users/hbrooks/followers", "following_url": "https://api.github.com/users/hbrooks/following{/other_user}", "gists_url": "https://api.github.com/users/hbrooks/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbrooks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbrooks/subscriptions", "organizations_url": "https://api.github.com/users/hbrooks/orgs", "repos_url": "https://api.github.com/users/hbrooks/repos", "events_url": "https://api.github.com/users/hbrooks/events{/privacy}", "received_events_url": "https://api.github.com/users/hbrooks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-03T16:21:38Z", "updated_at": "2019-05-19T22:53:38Z", "closed_at": "2019-05-19T22:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI came across `bidict` while searching for a more general application of the functionality in this helpful repo.  I was wondering if anyone here can point me towards the data structure I'm looking for or help me expand on `bidict` to build it.  \r\n\r\nThe data structure I'm looking for can, in `O(1)` time, go from an element of a collection to getting the rest of the elements in that collection.  If the collections are of size 2, this boils down to what `bidict` does now.  In the case where they're not, like\r\n```\r\ncollection = [\r\n    [1, 'hola', 'hello'],\r\n    [2, 'audios', 'goodbye'],\r\n]\r\n```\r\nI'm hoping to index like `collection['goodbye']` and get `[2, 'audios', 'goodbye']`.  The inclusion of the key used to index in the return structure doesn't matter to me.\r\n\r\n\r\n**Questions**:\r\n1.  Has anyone else had the need for this type of in memory data structure?  Was the `O(1)` indexing constraint relevent?\r\n1.  Can `bidict` be easily expanded to do this?  \r\n\r\n\r\n**Solutions**:\r\n1.  It would be easy to filter the collection for the subcollection of interest, but that's an `O(n)` process.\r\n1.  As long as all the values are unique across sub collections, I was thinking I could keep a large dictionary of elements in the sub collections to that sub collection.  This approach would be close to what `bidict` does, but with the added constraint that all the elements are unique.  My understanding is that `bidict` currently only requires that all the keys are unique and that all the values are unique.  Can someone validate this?  If true, is that why `bidict` doesn't currently take this approach?  \r\n\r\n**Use Case**\r\nThe real world use case is to avoid making a database call to get simple, unchanging information out of a relational database table.  For example, we might store permission levels in an application DB as integers but refer to them in API responses and errors different strings.  All elements of the collection relate to the same idea, they're just different representations.  One alternative to having a structure like this is to have lots of translation functions.   Ex: `def db_int_to_API_representation(db_int):`.  However, as the number of entries in the collections grows, the number of functions needed could grow as its factorial.  A more realistic example collection is:\r\n```\r\npermissions = [\r\n    [1, 'readOnly', 'read_only', 'READ'],\r\n    [2, 'writeOnly', 'write_only', 'WRITE'],\r\n    [3, 'readWrite', 'read_write', 'READWRITE'],\r\n]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/86", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/86/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/86/events", "html_url": "https://github.com/jab/bidict/issues/86", "id": 407966070, "node_id": "MDU6SXNzdWU0MDc5NjYwNzA=", "number": 86, "title": "Alias `inverse` for `inv` please?", "user": {"login": "mentalisttraceur", "id": 6531708, "node_id": "MDQ6VXNlcjY1MzE3MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6531708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mentalisttraceur", "html_url": "https://github.com/mentalisttraceur", "followers_url": "https://api.github.com/users/mentalisttraceur/followers", "following_url": "https://api.github.com/users/mentalisttraceur/following{/other_user}", "gists_url": "https://api.github.com/users/mentalisttraceur/gists{/gist_id}", "starred_url": "https://api.github.com/users/mentalisttraceur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mentalisttraceur/subscriptions", "organizations_url": "https://api.github.com/users/mentalisttraceur/orgs", "repos_url": "https://api.github.com/users/mentalisttraceur/repos", "events_url": "https://api.github.com/users/mentalisttraceur/events{/privacy}", "received_events_url": "https://api.github.com/users/mentalisttraceur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-08T01:05:45Z", "updated_at": "2019-02-16T04:39:43Z", "closed_at": "2019-02-14T00:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think exposing `inverse` in addition to `inv` would have two benefits:\r\n\r\n1. It would allow code to be written in a way that is more intuitive and self-explanatory.\r\n2. It would help with discoverability - only a little, but enough to be worthwhile.\r\n\r\n# 1. Intuition and Self-Explanation\r\n\r\nI think it's important to remember that there is a big difference between reading `.inv` when:\r\n\r\n1. You have the word \"inverse\" or the concept of inversion already in mind.\r\n2. You don't have the word \"inverse\" or the concept of inversion in mind.\r\n3. You couldn't even say when you last used or read the word \"inverse\".\r\n4. You don't know the word \"inverse\".\r\n\r\n`.inv` is really great in the first case, and is decently suggestive in the second case, and it's definitely easier to type, so I like it and think it's good to have it. But I think `.inv` can be needlessly hard in the third and fourth case.\r\n\r\nBecause `inverse` is not a \"casual\" word - it's easy to forget when we've internalized it and work with inverses of things regularly, but most people first explicitly learn it in technical contexts, like in math or formal logic or computer science.\r\n\r\nFor many practicing software developers the word itself doesn't come up that often, because when the concept does come up, it can be easier to find more common words to express it.\r\n\r\nRelatedly, more and more software developers, both professionally and in open source communities, have English as their second language, or have picked up software as a practical tool without the more formal background.\r\n\r\nI think when people are trying to understand some code, whether because they're new to it or haven't worked with it in a long time, having `.inverse` reduces the amount of mental work they have to use just to idea-fit what the intent is, relative to `.inv`, **especially** if they're not yet familiar with `bidict` as a package.\r\n\r\n**TL;DR**: I love `.inv` for interactive use and quick work, but I'd like to have the option to write `.inverse` when it helps people read and understand my code in the long term.\r\n\r\n# 2. Discoverability\r\n\r\nI recently tried using `bidict` for the first time after not thinking about it for maybe four or six months, and I couldn't for the life of me remember off the top of my head how to get the inverse view.\r\n\r\nNaturally, because Python is so helpfully discoverable, I did `dir(my_bydict_instance)` and scanned the output (line-wrapped like it was on my 80-characters-wide terminal):\r\n\r\n```\r\n>>> dir(bd)\r\n['_MutableMapping__marker', '_ON_DUP_OVERWRITE', '__abstractmethods__', '__class\r\n__', '__contains__', '__copy__', '__delattr__', '__delitem__', '__dir__', '__doc\r\n__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__get\r\nstate__', '__gt__', '__hash__', '__init__', '__inverted__', '__iter__', '__le__'\r\n, '__len__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduc\r\ne_ex__', '__repr__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__',\r\n '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_cache', '_abc_\r\nnegative_cache', '_abc_negative_cache_version', '_abc_registry', '_dedup_item', \r\n'_fwdm', '_fwdm_cls', '_get_on_dup', '_hash', '_init_inv', '_inv', '_inv_cls', '\r\n_invm', '_invm_cls', '_invweak', '_isdupitem', '_isinv', '_pop', '_put', '_repr_\r\ndelegate', '_undo_write', '_update', '_update_with_rollback', '_write_item', 'cl\r\near', 'copy', 'forceput', 'forceupdate', 'get', 'inv', 'items', 'keys', 'on_dup_\r\nkey', 'on_dup_kv', 'on_dup_val', 'pop', 'popitem', 'put', 'putall', 'setdefault'\r\n, 'update', 'values']\r\n```\r\n\r\nFor me, `inv` just blended in with the other smaller default attributes, and more importantly, it didn't visually pattern-match for the kind of word I most readily thought of while trying to articulate in my head what I wanted.\r\n\r\nConsider the appearance if we add an `inverse` alias in there:\r\n\r\n```\r\n>>> dir(bd)\r\n['_MutableMapping__marker', '_ON_DUP_OVERWRITE', '__abstractmethods__', '__class\r\n__', '__contains__', '__copy__', '__delattr__', '__delitem__', '__dir__', '__doc\r\n__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__get\r\nstate__', '__gt__', '__hash__', '__init__', '__inverted__', '__iter__', '__le__'\r\n, '__len__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduc\r\ne_ex__', '__repr__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__',\r\n '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_cache', '_abc_\r\nnegative_cache', '_abc_negative_cache_version', '_abc_registry', '_dedup_item', \r\n'_fwdm', '_fwdm_cls', '_get_on_dup', '_hash', '_init_inv', '_inv', '_inv_cls', '\r\n_invm', '_invm_cls', '_invweak', '_isdupitem', '_isinv', '_pop', '_put', '_repr_\r\ndelegate', '_undo_write', '_update', '_update_with_rollback', '_write_item', 'cl\r\near', 'copy', 'forceput', 'forceupdate', 'get', 'inv', 'inverse', 'items', 'keys\r\n', 'on_dup_key', 'on_dup_kv', 'on_dup_val', 'pop', 'popitem', 'put', 'putall', '\r\nsetdefault', 'update', 'values']\r\n```\r\n\r\nThe difference is slight and subtle, but I think it really helps, because **if you don't know what word to look for**, the word \"inverse\" jumps out more, **and** is more likely to visually pattern-match for a brain thinking of other related words like \"reverse\".\r\n\r\nTo be clear on that last bit, I fully agree that \"inverse\" is the more technically correct word than \"reverse\", and with the reasoning expressed in the [Terminology addendum of the docs](https://bidict.readthedocs.io/en/master/addendum.html#terminology) - that's not what I'm talking about. I'm just saying that we know some people think of \"reverse\" intuitively when thinking about a bijected mapping, and so having something that visually strongly pattern-matches it is a bonus to discoverability.\r\n\r\n**TL;DR**: I think `inverse` is more likely to more quickly jump out to a person unless they already know to look for `inv`, especially if they have the word or similar words in mind already.\r\n\r\n## Aside on using `dir` as example to discoverability:\r\n\r\nSomeone will probably want to reply that I could've just looked up the documentation for `bidict` on the web instead, or that this would not be an issue on a modern IDE, or that doing `help(my_bidict_instance)` would've made it easier, so I'm just going to preemptively address those now:\r\n\r\n1. Web searches relative to `dir` is like the human equivalent of a CPU getting data from disk instead of from L1 cache: it's must more out-of-band and requires orders of magnitude more mental, physical, and temporal overhead, as well as additional external conditions. It's easy to tune it out if you're already used to doing that, because human brains are good at that, but it's really noticeable when you're used to not having to do it.\r\n\r\n2. IDEs and IPython and so on reduce the information-to-noise ratio vs. `dir`, and can sometimes intelligently display type hints/inferences - still, as I'm sitting here looking at the auto-complete for `my_bidict_instance.` in a couple of them, in moments when I manage to clear my mind of expectations, `inv` doesn't really stand out prominently either. It's a lot easier to find, but the discoverability inefficiency isn't so much removed, as \"dimmed\". (Plus we don't always have access to such conveniences, depending on the systems or situations we're dealing with.)\r\n\r\n3. `help` provides a **completely different kind** of discoverability than `dir` provides: `help` gives you far more information to wade through, and all that extra information relative to `dir` is about **how the interfaces work**, and is useless for the goal of **remembering** what a specific interface you already have in mind is called. It reduces information-to-noise ratio to use `dir` instead of `help` in such cases.\r\n\r\nIn short, my habit of calling `dir` first developed because it gets me the right information faster most of the time, despite the unpleasantness and overhead of visually parsing the attribute names from the forest of single-quotes.\r\n\r\nBut even if `dir` still doesn't feel like a good example, the overall discoverability point still applies, and even if the discoverability gain doesn't seem worth it, I think the intuition-and-reading-guiding obviousness of the full word is the main argument.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/83", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/83/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/83/events", "html_url": "https://github.com/jab/bidict/issues/83", "id": 389708275, "node_id": "MDU6SXNzdWUzODk3MDgyNzU=", "number": 83, "title": "release wheels for Python 2", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-11T11:02:31Z", "updated_at": "2018-12-11T18:36:53Z", "closed_at": "2018-12-11T18:22:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://files.pythonhosted.org/packages/b0/d8/f324b2a7a9fa098b800dcb4b34aa3f2df955caf9235f20d351ceed9e7c22/bidict-0.17.5-py3-none-any.whl shows that the wheel is only python 3 compatible, can we release the package as both python 2 and 3 compatible? https://wheel.readthedocs.io/en/stable/user_guide.html?highlight=universal#building-wheels", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/82", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/82/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/82/events", "html_url": "https://github.com/jab/bidict/issues/82", "id": 388494308, "node_id": "MDU6SXNzdWUzODg0OTQzMDg=", "number": 82, "title": "[Doc] subclass of object are hashable by default in python 3.7.1", "user": {"login": "pumbaacave", "id": 12265630, "node_id": "MDQ6VXNlcjEyMjY1NjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/12265630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pumbaacave", "html_url": "https://github.com/pumbaacave", "followers_url": "https://api.github.com/users/pumbaacave/followers", "following_url": "https://api.github.com/users/pumbaacave/following{/other_user}", "gists_url": "https://api.github.com/users/pumbaacave/gists{/gist_id}", "starred_url": "https://api.github.com/users/pumbaacave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pumbaacave/subscriptions", "organizations_url": "https://api.github.com/users/pumbaacave/orgs", "repos_url": "https://api.github.com/users/pumbaacave/repos", "events_url": "https://api.github.com/users/pumbaacave/events{/privacy}", "received_events_url": "https://api.github.com/users/pumbaacave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-07T03:45:22Z", "updated_at": "2018-12-10T02:32:43Z", "closed_at": "2018-12-08T18:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "using ipython with python 3.7.1, I found that\r\n```python\r\nIn [95]: class Temp(object):\r\n    ...:     pass\r\n    ...:\r\n\r\nIn [96]: a = Temp()\r\n\r\nIn [97]: hash(a)\r\nOut[97]: -9223372036574570836\r\n```\r\ncontradict with the descrpition\r\n>This is consistent with the fact that object implements __hash__(), but subclasses of object are not hashable by default.\r\n\r\nin [learn from bidict](https://bidict.readthedocs.io/en/master/learning-from-bidict.html)\r\nDo i make this right because the behaviour of hash in new version of python differs\r\nor just I misunderstand sth?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/80", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/80/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/80/events", "html_url": "https://github.com/jab/bidict/issues/80", "id": 359441904, "node_id": "MDU6SXNzdWUzNTk0NDE5MDQ=", "number": 80, "title": "add pyproject.toml with setup requires stuff in build requires", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-12T11:43:22Z", "updated_at": "2018-09-18T15:16:21Z", "closed_at": "2018-09-17T23:24:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This way installing this package no longer will use easy_install to get such build dependencies when installing with pip 10+./", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/78", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/78/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/78/events", "html_url": "https://github.com/jab/bidict/issues/78", "id": 344680260, "node_id": "MDU6SXNzdWUzNDQ2ODAyNjA=", "number": 78, "title": "pip install bidicty failure", "user": {"login": "Tcorpion", "id": 19811908, "node_id": "MDQ6VXNlcjE5ODExOTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/19811908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tcorpion", "html_url": "https://github.com/Tcorpion", "followers_url": "https://api.github.com/users/Tcorpion/followers", "following_url": "https://api.github.com/users/Tcorpion/following{/other_user}", "gists_url": "https://api.github.com/users/Tcorpion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tcorpion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tcorpion/subscriptions", "organizations_url": "https://api.github.com/users/Tcorpion/orgs", "repos_url": "https://api.github.com/users/Tcorpion/repos", "events_url": "https://api.github.com/users/Tcorpion/events{/privacy}", "received_events_url": "https://api.github.com/users/Tcorpion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T03:20:11Z", "updated_at": "2018-07-26T03:36:52Z", "closed_at": "2018-07-26T03:35:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "caffe@CVML:~$ sudo pip install bidict\r\n[sudo] password for caffe: \r\nThe directory '/home/caffe/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nThe directory '/home/caffe/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nLooking in indexes: http://mirrors.aliyun.com/pypi/simple/\r\nCollecting bidict\r\n  Downloading http://mirrors.aliyun.com/pypi/packages/79/a8/83a52f422b1c041758fcfa3ac4438fc92a14e3cbe2b36f97282d973aff55/bidict-0.17.2.tar.gz (266kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 276kB 3.9MB/s \r\nStucked at installing bidict. Anyone offer a solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/62", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/62/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/62/events", "html_url": "https://github.com/jab/bidict/issues/62", "id": 299920443, "node_id": "MDU6SXNzdWUyOTk5MjA0NDM=", "number": 62, "title": "Quick Usage Notice", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-24T07:30:17Z", "updated_at": "2018-07-22T23:51:03Z", "closed_at": "2018-07-22T23:51:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To quickly provide me with [notice of your usage](https://bidict.readthedocs.io/#notice-of-usage) of bidict, please [add a reaction](https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments) to this issue. Hearing that people are using bidict is a powerful antidote to the loneliness of maintaining an open-source project by myself. \ud83d\ude05\r\n\r\nAlternatively, you can [create a dedicated issue](https://github.com/jab/bidict/issues/new?title=Notice+of+Usage&body=I+am+using+bidict+for...) if you'd like to tell me more about how you're using bidict and how it's treating you. I'd love to hear about your use case and if or how bidict could better support it.\r\n\r\nThanks for stopping by. \ud83d\ude0a\r\n\r\n\u2764\ufe0f\u2764\ufe0f\u2764\ufe0f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/48", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/48/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/48/events", "html_url": "https://github.com/jab/bidict/issues/48", "id": 277594302, "node_id": "MDU6SXNzdWUyNzc1OTQzMDI=", "number": 48, "title": "v0.14.0 breaks viewitems() with Python2.7", "user": {"login": "rsanger", "id": 7008477, "node_id": "MDQ6VXNlcjcwMDg0Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7008477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsanger", "html_url": "https://github.com/rsanger", "followers_url": "https://api.github.com/users/rsanger/followers", "following_url": "https://api.github.com/users/rsanger/following{/other_user}", "gists_url": "https://api.github.com/users/rsanger/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsanger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsanger/subscriptions", "organizations_url": "https://api.github.com/users/rsanger/orgs", "repos_url": "https://api.github.com/users/rsanger/repos", "events_url": "https://api.github.com/users/rsanger/events{/privacy}", "received_events_url": "https://api.github.com/users/rsanger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-29T01:07:23Z", "updated_at": "2017-11-29T02:47:31Z", "closed_at": "2017-11-29T02:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "viewitems() is no longer working\r\n\r\n```\r\nfrom bidict import bidict\r\nd = bidict(a=\"b\")\r\nd.viewitems()\r\n```\r\nNow returns an error:\r\nTypeError: __init__() takes exactly 2 arguments (1 given)\r\n\r\nLooks like this is the cause [033083ca](https://github.com/jab/bidict/commit/033083ca#diff-d31a7186b3cebec9a3801b0eade00001L362)\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/39", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/39/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/39/events", "html_url": "https://github.com/jab/bidict/issues/39", "id": 170617119, "node_id": "MDU6SXNzdWUxNzA2MTcxMTk=", "number": 39, "title": "is there any simple way to run tests on windows?", "user": {"login": "bialix", "id": 82971, "node_id": "MDQ6VXNlcjgyOTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/82971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bialix", "html_url": "https://github.com/bialix", "followers_url": "https://api.github.com/users/bialix/followers", "following_url": "https://api.github.com/users/bialix/following{/other_user}", "gists_url": "https://api.github.com/users/bialix/gists{/gist_id}", "starred_url": "https://api.github.com/users/bialix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bialix/subscriptions", "organizations_url": "https://api.github.com/users/bialix/orgs", "repos_url": "https://api.github.com/users/bialix/repos", "events_url": "https://api.github.com/users/bialix/events{/privacy}", "received_events_url": "https://api.github.com/users/bialix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-11T10:44:32Z", "updated_at": "2018-01-16T02:36:43Z", "closed_at": "2016-08-11T14:01:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to check whether your project is compatible with python 3.3. Your classifier only list 3.4 and 3.5.\n\nI've installed py.test - no luck to run tests:\n\n```\nD:\\work\\OpenSource\\bidict.git>py.test tests\nusage: py.test [options] [file_or_dir] [file_or_dir] [...]\npy.test: error: unrecognized arguments: --benchmark-save-data --benchmark-autosave --benchmark-group-by=name --benchmark-compare\n  inifile: D:\\work\\OpenSource\\bidict.git\\pytest.ini\n  rootdir: D:\\work\\OpenSource\\bidict.git\n\n```\n\nI've tried `python setup.py tests` - that commands downloads half of pypi, and then said:\n\n```\n----------------------------------------------------------------------\nRan 0 tests in 0.000s\n\nOK\n```\n\nI've installed tox because that's what your contributing guide seems to suggest me. It said:\n\n`OSError: [WinError 193] %1 is not Win32 application`\n\n(that tried to run test.sh under the hood).\n\nWhat I should try next?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/37", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/37/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/37/events", "html_url": "https://github.com/jab/bidict/issues/37", "id": 167736991, "node_id": "MDU6SXNzdWUxNjc3MzY5OTE=", "number": 37, "title": "remove duplicate checks to increase performance and add functionality", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-26T23:38:59Z", "updated_at": "2016-08-02T17:04:28Z", "closed_at": "2016-07-29T02:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would a pull request be considered that would make the inverse dict a defaultdict(list) therefore allowing that same functionality as a regular map? Removing the duplicate checks would also speed up bidict.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/36", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/36/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/36/events", "html_url": "https://github.com/jab/bidict/issues/36", "id": 159642534, "node_id": "MDU6SXNzdWUxNTk2NDI1MzQ=", "number": 36, "title": "TypeError: unhashable type: 'slice'", "user": {"login": "realcr", "id": 5255681, "node_id": "MDQ6VXNlcjUyNTU2ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5255681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realcr", "html_url": "https://github.com/realcr", "followers_url": "https://api.github.com/users/realcr/followers", "following_url": "https://api.github.com/users/realcr/following{/other_user}", "gists_url": "https://api.github.com/users/realcr/gists{/gist_id}", "starred_url": "https://api.github.com/users/realcr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realcr/subscriptions", "organizations_url": "https://api.github.com/users/realcr/orgs", "repos_url": "https://api.github.com/users/realcr/repos", "events_url": "https://api.github.com/users/realcr/events{/privacy}", "received_events_url": "https://api.github.com/users/realcr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-10T14:05:10Z", "updated_at": "2016-06-11T02:51:27Z", "closed_at": "2016-06-10T14:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jab, thank you for this great package.\n\nI recently upgraded my bidict to version 11.0 from an older version (bidict==0.9.0.post1), and all of my tests broke.\n\nIt seems like the syntax bd[:some_key] is not working anymore.\n\n```\n>>> import bidict\n>>> bd = bidict.bidict()\n>>> bd[\"hello\"] = \"world\"\n>>> bd[:\"world\"]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/real/.virtualenvs/wchat/lib/python3.4/site-packages/bidict/_common.py\", line 57, in __getitem__\n    return self._fwd[key]\nTypeError: unhashable type: 'slice'\n```\n\nIs this behaviour intentional? I just checked at the docs and it seems like any mention of this syntax is gone.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/34", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/34/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/34/events", "html_url": "https://github.com/jab/bidict/issues/34", "id": 144805963, "node_id": "MDU6SXNzdWUxNDQ4MDU5NjM=", "number": 34, "title": "Cannot inherit loosebidict", "user": {"login": "mlenzen", "id": 4926823, "node_id": "MDQ6VXNlcjQ5MjY4MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4926823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlenzen", "html_url": "https://github.com/mlenzen", "followers_url": "https://api.github.com/users/mlenzen/followers", "following_url": "https://api.github.com/users/mlenzen/following{/other_user}", "gists_url": "https://api.github.com/users/mlenzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlenzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlenzen/subscriptions", "organizations_url": "https://api.github.com/users/mlenzen/orgs", "repos_url": "https://api.github.com/users/mlenzen/repos", "events_url": "https://api.github.com/users/mlenzen/events{/privacy}", "received_events_url": "https://api.github.com/users/mlenzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-31T06:42:29Z", "updated_at": "2016-04-24T17:30:46Z", "closed_at": "2016-04-15T21:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nimport bidict\nclass Sub(bidict.loosebidict):\n     pass\nb = Sub()\nb['a'] = 1\n....\nRecursionError: maximum recursion depth exceeded while calling a Python object\n```\n\nThis is because you are calling `super(self.__class__, self)` instead of `super()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/27", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/27/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/27/events", "html_url": "https://github.com/jab/bidict/issues/27", "id": 122196211, "node_id": "MDU6SXNzdWUxMjIxOTYyMTE=", "number": 27, "title": "List comprehension issue possibly Windows related", "user": {"login": "ApatheticsAnonymous", "id": 2817183, "node_id": "MDQ6VXNlcjI4MTcxODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2817183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ApatheticsAnonymous", "html_url": "https://github.com/ApatheticsAnonymous", "followers_url": "https://api.github.com/users/ApatheticsAnonymous/followers", "following_url": "https://api.github.com/users/ApatheticsAnonymous/following{/other_user}", "gists_url": "https://api.github.com/users/ApatheticsAnonymous/gists{/gist_id}", "starred_url": "https://api.github.com/users/ApatheticsAnonymous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ApatheticsAnonymous/subscriptions", "organizations_url": "https://api.github.com/users/ApatheticsAnonymous/orgs", "repos_url": "https://api.github.com/users/ApatheticsAnonymous/repos", "events_url": "https://api.github.com/users/ApatheticsAnonymous/events{/privacy}", "received_events_url": "https://api.github.com/users/ApatheticsAnonymous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-15T05:21:32Z", "updated_at": "2015-12-15T20:42:15Z", "closed_at": "2015-12-15T18:49:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Performing a list comp with a bidict results in a 'not defined' error on Windows. Ive tried the same code on OSX 10.10 and it works fine.\n\nIn [1]: import bidict\n\nIn [2]: bd = bidict.bidict({1: 'a', 2: 'b', 3 : 'c'})\n\nIn [3]: bd[:'a']\nOut[3]: 1\n\nIn [4]: names = [ 'a', 'b', 'c']\n\nIn [5]: names = ['a', 'b']\n## In [6]: keys = [ bd[:x] for x in names ]\n\nNameError                                 Traceback (most recent call last)\n----> 1 keys = [ bd[:x] for x in names ]\n\nNameError: name 'bd' is not defined\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/24", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/24/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/24/events", "html_url": "https://github.com/jab/bidict/issues/24", "id": 118921956, "node_id": "MDU6SXNzdWUxMTg5MjE5NTY=", "number": 24, "title": "Every bidict creates a reference cycle", "user": {"login": "lordmauve", "id": 617224, "node_id": "MDQ6VXNlcjYxNzIyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/617224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordmauve", "html_url": "https://github.com/lordmauve", "followers_url": "https://api.github.com/users/lordmauve/followers", "following_url": "https://api.github.com/users/lordmauve/following{/other_user}", "gists_url": "https://api.github.com/users/lordmauve/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordmauve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordmauve/subscriptions", "organizations_url": "https://api.github.com/users/lordmauve/orgs", "repos_url": "https://api.github.com/users/lordmauve/repos", "events_url": "https://api.github.com/users/lordmauve/events{/privacy}", "received_events_url": "https://api.github.com/users/lordmauve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-11-25T20:51:32Z", "updated_at": "2017-12-18T09:59:14Z", "closed_at": "2017-12-07T18:16:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The fact that every bidict creates an holds a reference to its inverse bidict, and each inverse holds a reference to the forward bidict, means that bidicts will create reference cycles.\n\nThis has two implications:\n1. Memory won't be reclaimed immediately if the references are deleted. They will be reclaimed by the garbage collector - but at some later point. Large bidicts could therefore hold memory much longer than a standard dict.\n2. Prior to Python 3.4, any subclasses of bidict that happen to implement `__del__()` methods won't be garbage collectable at all.\n\nI'm not sure how important this is, but it's more important the less you know about ways in which bidict is used.\n\nA workaround might be not to hold a full reference to inv, but to instead hold a weak memoized reference. This would guarantee\n\n```\nd.inv.inv is d\n```\n\nbut would allow immediate reclamation of either side of the bidict pair if no reference to them are held.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/23", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/23/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/23/events", "html_url": "https://github.com/jab/bidict/issues/23", "id": 118890374, "node_id": "MDU6SXNzdWUxMTg4OTAzNzQ=", "number": 23, "title": "consider removing namedbidict", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-11-25T17:50:52Z", "updated_at": "2015-12-26T20:48:20Z", "closed_at": "2015-12-26T20:48:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To enable me to focus better on more core functionality, I'm considering removing namedbidict. The value it has provided doesn't seem worth the maintenance burden.\n\nHere is a sample of people/orgs whose code would break if this happens:\n- @venmo ([example](https://github.com/venmo/btnamespace/blob/e4b269f9a/btnamespace/actions.py#L11))\n- @NEU-Libraries ([example](https://github.com/NEU-Libraries/alma-analytic-tools/blob/e554b76f/RequestObject.py#L108)\n- @maddyloo ([example](https://github.com/maddyloo/miniBibServer/blob/9750e1e/latex_accents.py#L9))\n- @lig ([example](https://github.com/lig/pyfusegridfs/blob/05104ea2a/fusegridfs/fuse.py#L30))\n- @adrinjalali ([example](https://github.com/adrinjalali/Network-Classifier/blob/8f4fd4c/read_vantveer.py#L124))\n- @belevtsoff ([example](https://github.com/belevtsoff/earlPipeline/blob/985f2f9b/earlpipeline/backends/base_simple_engine.py#L17))\n\nEveryone please give feedback here, and please spread the word to other bidict users. I'm leaning toward going through with this, but if users' feedback trumps the rationale above, I won't.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/21", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/21/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/21/events", "html_url": "https://github.com/jab/bidict/issues/21", "id": 118664897, "node_id": "MDU6SXNzdWUxMTg2NjQ4OTc=", "number": 21, "title": "Add strictbidict that throws exception on any duplicate value assignment", "user": {"login": "lordmauve", "id": 617224, "node_id": "MDQ6VXNlcjYxNzIyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/617224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordmauve", "html_url": "https://github.com/lordmauve", "followers_url": "https://api.github.com/users/lordmauve/followers", "following_url": "https://api.github.com/users/lordmauve/following{/other_user}", "gists_url": "https://api.github.com/users/lordmauve/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordmauve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordmauve/subscriptions", "organizations_url": "https://api.github.com/users/lordmauve/orgs", "repos_url": "https://api.github.com/users/lordmauve/repos", "events_url": "https://api.github.com/users/lordmauve/events{/privacy}", "received_events_url": "https://api.github.com/users/lordmauve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-11-24T17:37:57Z", "updated_at": "2015-12-21T03:16:26Z", "closed_at": "2015-12-21T03:16:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I see considerable value preventing people accidentally creating mappings that are not invertible. In our codebase, there are several hundred instances of code like\n\n```\nPRODUCT_REMAP = {... hundreds of lines ...}\nREVERSE_PRODUCT_REMAP = dict((v, k) for k, v in PRODUCT_REMAP.iteritems())\n```\n\nA concern with these is that literals that were accidentally written to include duplicate values would create an incorrect inverse mapping.\n\nUsing bidict does little to improve matters. In code like that below, one of those keys will \"win\":\n\n```\nd = bidict({\n     'foo': 1,\n     ... hundreds of lines ...\n     'bar': 1\n})\n```\n\nThis has the advantage that the inverse mapping will genuinely reflect the forward mapping, but it carries the disadvantage the mapping for one of the keys is lost. In many cases this is _worse_ - for example, when the forward mapping is fundamental and the inverse mapping is just informational. The only reasonable solution in cases like these is to throw an exception for the programmer to deal with.\n\nI suggest creating a \"strictbidict\" in which `_put()` throws a `CollapseException` if any value is duplicated, rather than dropping the previous key that maps to that value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/20", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/20/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/20/events", "html_url": "https://github.com/jab/bidict/issues/20", "id": 118650729, "node_id": "MDU6SXNzdWUxMTg2NTA3Mjk=", "number": 20, "title": "Remove bidict.invert()", "user": {"login": "lordmauve", "id": 617224, "node_id": "MDQ6VXNlcjYxNzIyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/617224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordmauve", "html_url": "https://github.com/lordmauve", "followers_url": "https://api.github.com/users/lordmauve/followers", "following_url": "https://api.github.com/users/lordmauve/following{/other_user}", "gists_url": "https://api.github.com/users/lordmauve/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordmauve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordmauve/subscriptions", "organizations_url": "https://api.github.com/users/lordmauve/orgs", "repos_url": "https://api.github.com/users/lordmauve/repos", "events_url": "https://api.github.com/users/lordmauve/events{/privacy}", "received_events_url": "https://api.github.com/users/lordmauve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-24T16:38:18Z", "updated_at": "2015-11-25T17:58:50Z", "closed_at": "2015-11-25T04:29:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The undocumented `bidict.invert()` appears to perform an \"invert-in-place\". This seems superfluous given `.inv`; but naive use of this method could cause significant confusion about what state a bidict is in at what point in a program (consider beginners in particular). Without this there's no risk of holding a reference to a bidict that flip-flops in semantics.\n\nA more expert programmer who wanted to do an in-place replacement of values, could use the same kind of approach as to mutate a normal dict in-place, eg:\n\n```\nvals = list(d.items())    \nd.clear()\nd.inv.update(vals)\n```\n\n(Background: I work on a very large project (thousands of developers) where we see every type of mistake under the sun, and I can imagine this accidentally/foolishly being used to mutate global \"constant\" state causing hard-to-diagnose problems.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/19", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/19/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/19/events", "html_url": "https://github.com/jab/bidict/issues/19", "id": 118646831, "node_id": "MDU6SXNzdWUxMTg2NDY4MzE=", "number": 19, "title": "Consider removing slice and ~ syntax", "user": {"login": "lordmauve", "id": 617224, "node_id": "MDQ6VXNlcjYxNzIyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/617224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lordmauve", "html_url": "https://github.com/lordmauve", "followers_url": "https://api.github.com/users/lordmauve/followers", "following_url": "https://api.github.com/users/lordmauve/following{/other_user}", "gists_url": "https://api.github.com/users/lordmauve/gists{/gist_id}", "starred_url": "https://api.github.com/users/lordmauve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lordmauve/subscriptions", "organizations_url": "https://api.github.com/users/lordmauve/orgs", "repos_url": "https://api.github.com/users/lordmauve/repos", "events_url": "https://api.github.com/users/lordmauve/events{/privacy}", "received_events_url": "https://api.github.com/users/lordmauve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2015-11-24T16:25:49Z", "updated_at": "2016-04-15T21:39:16Z", "closed_at": "2015-11-28T13:22:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some of the syntactic sugar in bidict causes a readability problem for me. Syntactic sugar is always going to be subjective, but I'd like to propose the removal of the overloading of slicing and bitwise negation - because `.inv` is succinct and covers all these cases without needing the sugar:\n- `~d` is clearer written as `d.inv`\n- `d[:key]` is clearer written as `d.inv[key]`.\n\nThese don't need to be explained/learned in the same way as they follow from the same clear rule.\n\nNaturally this would be a big breaking change but if bidict is not yet at a 1.0 release then this could presumably still be considered.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/18", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/18/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/18/events", "html_url": "https://github.com/jab/bidict/issues/18", "id": 110661142, "node_id": "MDU6SXNzdWUxMTA2NjExNDI=", "number": 18, "title": "bidict should be subclass of dict", "user": {"login": "pacholik", "id": 1668214, "node_id": "MDQ6VXNlcjE2NjgyMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1668214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacholik", "html_url": "https://github.com/pacholik", "followers_url": "https://api.github.com/users/pacholik/followers", "following_url": "https://api.github.com/users/pacholik/following{/other_user}", "gists_url": "https://api.github.com/users/pacholik/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacholik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacholik/subscriptions", "organizations_url": "https://api.github.com/users/pacholik/orgs", "repos_url": "https://api.github.com/users/pacholik/repos", "events_url": "https://api.github.com/users/pacholik/events{/privacy}", "received_events_url": "https://api.github.com/users/pacholik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-10-09T13:40:41Z", "updated_at": "2017-11-29T02:23:54Z", "closed_at": "2015-10-10T19:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`issubclass(bidict, dict)` returns `False`. We thus cannot pass it to function that test it. If `dict` were at least at last place of `mro` it would be settled.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/17", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/17/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/17/events", "html_url": "https://github.com/jab/bidict/issues/17", "id": 101843611, "node_id": "MDU6SXNzdWUxMDE4NDM2MTE=", "number": 17, "title": "bidict won't pip uninstall from virtualenv", "user": {"login": "jgbreezer", "id": 2012161, "node_id": "MDQ6VXNlcjIwMTIxNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2012161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgbreezer", "html_url": "https://github.com/jgbreezer", "followers_url": "https://api.github.com/users/jgbreezer/followers", "following_url": "https://api.github.com/users/jgbreezer/following{/other_user}", "gists_url": "https://api.github.com/users/jgbreezer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgbreezer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgbreezer/subscriptions", "organizations_url": "https://api.github.com/users/jgbreezer/orgs", "repos_url": "https://api.github.com/users/jgbreezer/repos", "events_url": "https://api.github.com/users/jgbreezer/events{/privacy}", "received_events_url": "https://api.github.com/users/jgbreezer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-19T09:16:01Z", "updated_at": "2015-08-19T19:22:10Z", "closed_at": "2015-08-19T15:03:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Under python2.7 (at least) on Linux(Ubuntu14.10), pip uninstall from a virtualenv with bidict installed via pip install (using pip v1.5.6) says:\n`Can't uninstall 'bidict'. No files were found to uninstall.`\n\nYet, at the python prompt:\n`>>> import bidict`\n`>>> bidict.BidirectionalMapping({\"a\":1})`\n`BidirectionalMapping({'a': 1})`\n`>>>`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/16", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/16/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/16/events", "html_url": "https://github.com/jab/bidict/issues/16", "id": 90738784, "node_id": "MDU6SXNzdWU5MDczODc4NA==", "number": 16, "title": "bidict is not listed on \"Who is using Hypothesis?\"", "user": {"login": "DRMacIver", "id": 28623, "node_id": "MDQ6VXNlcjI4NjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/28623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DRMacIver", "html_url": "https://github.com/DRMacIver", "followers_url": "https://api.github.com/users/DRMacIver/followers", "following_url": "https://api.github.com/users/DRMacIver/following{/other_user}", "gists_url": "https://api.github.com/users/DRMacIver/gists{/gist_id}", "starred_url": "https://api.github.com/users/DRMacIver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DRMacIver/subscriptions", "organizations_url": "https://api.github.com/users/DRMacIver/orgs", "repos_url": "https://api.github.com/users/DRMacIver/repos", "events_url": "https://api.github.com/users/DRMacIver/events{/privacy}", "received_events_url": "https://api.github.com/users/DRMacIver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-24T17:29:12Z", "updated_at": "2015-11-25T04:06:29Z", "closed_at": "2015-11-25T04:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies for the slightly cheeky issue, but I'm currently trying to [gather a list of endorsements from people using Hypothesis](http://hypothesis.readthedocs.org/en/latest/endorsements.html) and was hoping that as the maintainer of an open source project you'd be willing to put your name down there. :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/13", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/13/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/13/events", "html_url": "https://github.com/jab/bidict/issues/13", "id": 71359216, "node_id": "MDU6SXNzdWU3MTM1OTIxNg==", "number": 13, "title": "consider (k, v) containment check via b[x:y]", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T18:06:57Z", "updated_at": "2015-04-27T18:11:04Z", "closed_at": "2015-04-27T18:11:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently if you want to check whether a bidict contains the mapping (k, v), you have to write `b.get(k) == v` (or `b.get(k, sentinel) == v` when v is None).\n\nTerry Reedy [proposes](https://groups.google.com/d/msg/comp.lang.python/eF0QBoH30QE/346SQLWDQAAJ) also allowing `b[k:v]` to return True or False to perform this check.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/12", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/12/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/12/events", "html_url": "https://github.com/jab/bidict/issues/12", "id": 71357422, "node_id": "MDU6SXNzdWU3MTM1NzQyMg==", "number": 12, "title": "consider adding defaultbidict", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T17:58:12Z", "updated_at": "2018-01-16T01:55:12Z", "closed_at": "2015-11-25T08:34:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "analogous to `collections.defaultdict`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/10", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/10/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/10/events", "html_url": "https://github.com/jab/bidict/issues/10", "id": 70780273, "node_id": "MDU6SXNzdWU3MDc4MDI3Mw==", "number": 10, "title": "fuzz test", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-24T20:02:39Z", "updated_at": "2018-01-16T01:53:44Z", "closed_at": "2015-11-25T08:34:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "possibly with https://bitbucket.org/jwilk/python-afl \u00e0 la https://github.com/tomviner/afl-fuzzing-demos#bidict (thanks @tomviner!)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/9", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/9/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/9/events", "html_url": "https://github.com/jab/bidict/issues/9", "id": 70780046, "node_id": "MDU6SXNzdWU3MDc4MDA0Ng==", "number": 9, "title": "add performance tests", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-04-24T20:01:21Z", "updated_at": "2018-01-16T01:49:23Z", "closed_at": "2016-07-28T00:56:52Z", "author_association": "OWNER", "active_lock_reason": null, "body": "...to verify that bidict performance is comparable to manually managing two dicts and catch any performance regressions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/8", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/8/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/8/events", "html_url": "https://github.com/jab/bidict/issues/8", "id": 70779587, "node_id": "MDU6SXNzdWU3MDc3OTU4Nw==", "number": 8, "title": "refactor tests", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-24T19:58:36Z", "updated_at": "2015-04-27T19:59:40Z", "closed_at": "2015-04-27T15:19:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- Port existing doctests to a combination of property-based tests (#6) and traditional separate py.test tests. When this is done docstrings can be condensed to make the documentation more quickly digestible.\n- New test layout should also accommodate performance (#9) and fuzz (#10) tests.\n- Switch to py.test for running all tests. Update:\n  - setup.py\n  - test.py\n  - .travis.yml\n  - tox.ini\n  - docs\n    - https://bidict.readthedocs.org/\n    - https://github.com/jab/bidict#readme\n    - https://github.com/jab/bidict/blob/master/CONTRIBUTING.rst\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/7", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/7/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/7/events", "html_url": "https://github.com/jab/bidict/issues/7", "id": 70768080, "node_id": "MDU6SXNzdWU3MDc2ODA4MA==", "number": 7, "title": "consider adding OrderedBidict", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-24T18:55:22Z", "updated_at": "2018-01-16T01:59:21Z", "closed_at": "2015-11-25T08:34:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "\u00e0 la https://docs.python.org/3/library/collections.html#collections.OrderedDict\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/6", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/6/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/6/events", "html_url": "https://github.com/jab/bidict/issues/6", "id": 70767211, "node_id": "MDU6SXNzdWU3MDc2NzIxMQ==", "number": 6, "title": "add property-based (correctness) tests", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-24T18:52:24Z", "updated_at": "2015-04-29T18:45:20Z", "closed_at": "2015-04-29T18:45:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "using e.g. https://hypothesis.readthedocs.org\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/4", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/4/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/4/events", "html_url": "https://github.com/jab/bidict/issues/4", "id": 57771323, "node_id": "MDU6SXNzdWU1Nzc3MTMyMw==", "number": 4, "title": "Unnecessary assignment", "user": {"login": "tjomk", "id": 554370, "node_id": "MDQ6VXNlcjU1NDM3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjomk", "html_url": "https://github.com/tjomk", "followers_url": "https://api.github.com/users/tjomk/followers", "following_url": "https://api.github.com/users/tjomk/following{/other_user}", "gists_url": "https://api.github.com/users/tjomk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjomk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjomk/subscriptions", "organizations_url": "https://api.github.com/users/tjomk/orgs", "repos_url": "https://api.github.com/users/tjomk/repos", "events_url": "https://api.github.com/users/tjomk/events{/privacy}", "received_events_url": "https://api.github.com/users/tjomk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-16T06:59:45Z", "updated_at": "2018-01-16T01:51:36Z", "closed_at": "2015-02-17T02:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/jab/bidict/blob/master/bidict.py#L426 - unless I miss something this looks like a unnecessary line. After doing `self._fwd = self._bwd` you are assiging `self._fwd` (which already has the value of `self._bwd`) back to `self._bwd`.\n\nAny reason for doing this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/3", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/3/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/3/events", "html_url": "https://github.com/jab/bidict/issues/3", "id": 44649587, "node_id": "MDU6SXNzdWU0NDY0OTU4Nw==", "number": 3, "title": "use weakref?", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-02T04:25:53Z", "updated_at": "2018-01-16T01:51:13Z", "closed_at": "2014-10-04T15:26:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently a bidict and its inverse maintain strong references to one another and one another's _fwd and _bwd dicts. Use [weakref](https://docs.python.org/3/library/weakref.html)?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jab/bidict/issues/2", "repository_url": "https://api.github.com/repos/jab/bidict", "labels_url": "https://api.github.com/repos/jab/bidict/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/jab/bidict/issues/2/comments", "events_url": "https://api.github.com/repos/jab/bidict/issues/2/events", "html_url": "https://github.com/jab/bidict/issues/2", "id": 44172968, "node_id": "MDU6SXNzdWU0NDE3Mjk2OA==", "number": 2, "title": "document non-atomicity", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-27T13:43:10Z", "updated_at": "2018-01-16T01:43:29Z", "closed_at": "2014-10-04T16:16:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Since `dict`\\'s mutating methods aren't atomic (e.g. d[k] += 1, which is d[k] = d[k] + 1, which presents a race condition such that two threads running it at the same time may each see the same value for d[k], and it ends up set to d[k] + 1 rather than d[k] + 2), `bidict`\\'s mutating methods aren't atomic either. Worth documenting?", "performed_via_github_app": null, "score": 1.0}]}