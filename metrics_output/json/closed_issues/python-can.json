{"total_count": 357, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/hardbyte/python-can/issues/894", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/894/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/894/events", "html_url": "https://github.com/hardbyte/python-can/issues/894", "id": 678169360, "node_id": "MDU6SXNzdWU2NzgxNjkzNjA=", "number": 894, "title": "detect_available_configs for pcan", "user": {"login": "martsalz", "id": 12211578, "node_id": "MDQ6VXNlcjEyMjExNTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/12211578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martsalz", "html_url": "https://github.com/martsalz", "followers_url": "https://api.github.com/users/martsalz/followers", "following_url": "https://api.github.com/users/martsalz/following{/other_user}", "gists_url": "https://api.github.com/users/martsalz/gists{/gist_id}", "starred_url": "https://api.github.com/users/martsalz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martsalz/subscriptions", "organizations_url": "https://api.github.com/users/martsalz/orgs", "repos_url": "https://api.github.com/users/martsalz/repos", "events_url": "https://api.github.com/users/martsalz/events{/privacy}", "received_events_url": "https://api.github.com/users/martsalz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T05:43:45Z", "updated_at": "2020-08-13T13:29:13Z", "closed_at": "2020-08-13T13:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ndoes the pcan support the `detect_available_configs` function?\r\nIt returns an empty array.\r\n\r\nhttps://github.com/hardbyte/python-can/blob/develop/test/test_detect_available_configs.py\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/891", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/891/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/891/events", "html_url": "https://github.com/hardbyte/python-can/issues/891", "id": 674385194, "node_id": "MDU6SXNzdWU2NzQzODUxOTQ=", "number": 891, "title": "Conversion to blf from pcan explorer query", "user": {"login": "mentaal", "id": 3391774, "node_id": "MDQ6VXNlcjMzOTE3NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3391774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mentaal", "html_url": "https://github.com/mentaal", "followers_url": "https://api.github.com/users/mentaal/followers", "following_url": "https://api.github.com/users/mentaal/following{/other_user}", "gists_url": "https://api.github.com/users/mentaal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mentaal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mentaal/subscriptions", "organizations_url": "https://api.github.com/users/mentaal/orgs", "repos_url": "https://api.github.com/users/mentaal/repos", "events_url": "https://api.github.com/users/mentaal/events{/privacy}", "received_events_url": "https://api.github.com/users/mentaal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-06T15:05:19Z", "updated_at": "2020-08-07T11:56:25Z", "closed_at": "2020-08-07T11:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All, \r\n\r\nI'm trying to convert a log file from the `.log` file format from PCAN-Explorer to a `.blf` file compatible with Vector CANAlyzer. \r\n(BTW I'm new to can and have been at this for a sum total of one day so forgive me if this is a stupid query)\r\n\r\nI found your file conversion script and have been able to manually extract out the data from the `.log` file, create the appropriate `Message`s suitable for consumption via `can.Logger`. It works but the mapping I am using is lossy. \r\n\r\nFor example, the file format provided by PCAN-Explorer is am using is of the form:\r\n\r\n```\r\n    ;Index\r\n    ;|    Time Offset [ms]\r\n    ;|    |             Bus\r\n    ;|    |             |  CAN-ID (hex)\r\n    ;|    |             |  |        Symbol                           Rx/Tx\r\n    ;|    |             |  |        |                                |  Type       Length\r\n    ;|    |             |  |        |                                |  |          |  Data\r\n    ;+--- +------------ +- +------- +------------------------------- +- +--------- +- +----------------------\r\n    1     37.935        2  702                                       Rx Data       3  8A 17 5F\r\n```\r\n\r\nI made a little function to create `Message`s using this function:\r\n\r\n```python\r\ndef to_msg(log_line):\r\n    \"\"\"Convert a LogLine tuple into a python-can Message\"\"\"\r\n    return Message(timestamp=log_line.time,\r\n                   arbitration_id=log_line.can_id,\r\n                   is_extended_id=False,\r\n                   is_remote_frame=False,\r\n                   dlc=log_line.length,\r\n                   data=log_line.data,\r\n                   channel=log_line.bus)\r\n```\r\n\r\nI don't see anywhere that I can inject the RX/TX type and the Symbol. I'm also assuming that the `channel` maps to the .log file's `Bus`. \r\n\r\nAs a result, when the output .blf file is opened within the Vector tools, the `name` field in the GUI is absent, which I assume to be because I'm not injecting the symbol anywhere. \r\n\r\nAny suggestions would be greatly appreciated. \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/889", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/889/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/889/events", "html_url": "https://github.com/hardbyte/python-can/issues/889", "id": 674219375, "node_id": "MDU6SXNzdWU2NzQyMTkzNzU=", "number": 889, "title": "Message object unexpected interpretation", "user": {"login": "johanbrus", "id": 69041456, "node_id": "MDQ6VXNlcjY5MDQxNDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/69041456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanbrus", "html_url": "https://github.com/johanbrus", "followers_url": "https://api.github.com/users/johanbrus/followers", "following_url": "https://api.github.com/users/johanbrus/following{/other_user}", "gists_url": "https://api.github.com/users/johanbrus/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanbrus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanbrus/subscriptions", "organizations_url": "https://api.github.com/users/johanbrus/orgs", "repos_url": "https://api.github.com/users/johanbrus/repos", "events_url": "https://api.github.com/users/johanbrus/events{/privacy}", "received_events_url": "https://api.github.com/users/johanbrus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-06T10:50:10Z", "updated_at": "2020-08-06T12:17:00Z", "closed_at": "2020-08-06T12:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing some unexpected behavior in the way messages are displayed.\r\nSending 29-bit message 0xC0FFEE with data 0x38 0x1A 0x2B 0xC5 0x8D 0x6E 0x22 0xFF\r\nReceiving a message using \"msg2 = bus.recv(1.0)\"\r\nThen executing following print commands with following results:\r\n\r\nSending with data field|\"print(msg2.data)\"|\"print(msg2)\"\r\n-------|-------------|------------------\r\n0x38|bytearray(b'8')|Timestamp:        0.696006    ID: 00c0ffee    X                DLC:  1    38                          '8'    Channel: 0\r\n0x38 0x1A|bytearray(b'8\\x1a')|Timestamp:        2.156239    ID: 00c0ffee    X                DLC:  2    38 1a                       Channel: 0\r\n0x38 0x1A 0x2B|bytearray(b'8\\x1a+')|Timestamp:        1.978031    ID: 00c0ffee    X                DLC:  3    38 1a 2b                    Channel: 0\r\n0x38 0x1A 0x2B 0xC5|bytearray(b'8\\x1a+\\xc5')|Timestamp:        1.915171    ID: 00c0ffee    X                DLC:  4    38 1a 2b c5                 Channel: 0\r\n0x38 0x1A 0x2B 0xC5 0x8D|bytearray(b'8\\x1a+\\xc5\\x8d')|Timestamp:        1.846557    ID: 00c0ffee    X                DLC:  5    38 1a 2b c5 8d              Channel: 0\r\n0x38 0x1A 0x2B 0xC5 0x8D 0x6E|bytearray(b'8\\x1a+\\xc5\\x8dn')|Timestamp:        3.756427    ID: 00c0ffee    X                DLC:  6    38 1a 2b c5 8d 6e           Channel: 0\r\n0x38 0x1A 0x2B 0xC5 0x8D 0x6E 0x22|bytearray(b'8\\x1a+\\xc5\\x8dn\"')|Timestamp:        3.561521    ID: 00c0ffee    X                DLC:  7    38 1a 2b c5 8d 6e 22        Channel: 0\r\n0x38 0x1A 0x2B 0xC5 0x8D 0x6E 0x22 0xFF|bytearray(b'8\\x1a+\\xc5\\x8dn\"\\xff')|Timestamp:        2.771891    ID: 00c0ffee    X                DLC:  8    38 1a 2b c5 8d 6e 22 ff     Channel: 0\r\n\r\nAs you can see the msg2.data object is unexpected and the msg2 object when DLC=1 has a funny '8' hanging in mid-air.\r\nAny workarounds for time being also welcome.\r\n\r\nSame behavior observed with 11-bit (standard) identifier.\r\nI have seen this on both kvaser and IXXAT interface so maybe generic issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/886", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/886/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/886/events", "html_url": "https://github.com/hardbyte/python-can/issues/886", "id": 674045100, "node_id": "MDU6SXNzdWU2NzQwNDUxMDA=", "number": 886, "title": "How can I convert csv format to blf format?", "user": {"login": "wangtun", "id": 14052340, "node_id": "MDQ6VXNlcjE0MDUyMzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/14052340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangtun", "html_url": "https://github.com/wangtun", "followers_url": "https://api.github.com/users/wangtun/followers", "following_url": "https://api.github.com/users/wangtun/following{/other_user}", "gists_url": "https://api.github.com/users/wangtun/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangtun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangtun/subscriptions", "organizations_url": "https://api.github.com/users/wangtun/orgs", "repos_url": "https://api.github.com/users/wangtun/repos", "events_url": "https://api.github.com/users/wangtun/events{/privacy}", "received_events_url": "https://api.github.com/users/wangtun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T06:09:54Z", "updated_at": "2020-08-17T02:48:16Z", "closed_at": "2020-08-17T02:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "as the title , is there a convert function for converting a can file to another format file?  thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/875", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/875/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/875/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/875/events", "html_url": "https://github.com/hardbyte/python-can/issues/875", "id": 664652299, "node_id": "MDU6SXNzdWU2NjQ2NTIyOTk=", "number": 875, "title": "PCAN clear transmit buffer", "user": {"login": "martsalz", "id": 12211578, "node_id": "MDQ6VXNlcjEyMjExNTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/12211578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martsalz", "html_url": "https://github.com/martsalz", "followers_url": "https://api.github.com/users/martsalz/followers", "following_url": "https://api.github.com/users/martsalz/following{/other_user}", "gists_url": "https://api.github.com/users/martsalz/gists{/gist_id}", "starred_url": "https://api.github.com/users/martsalz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martsalz/subscriptions", "organizations_url": "https://api.github.com/users/martsalz/orgs", "repos_url": "https://api.github.com/users/martsalz/repos", "events_url": "https://api.github.com/users/martsalz/events{/privacy}", "received_events_url": "https://api.github.com/users/martsalz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T17:36:16Z", "updated_at": "2020-08-05T17:45:07Z", "closed_at": "2020-07-24T05:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to clear the transmit buffer for a PEAK CAN PRO FD?\r\n\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/872", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/872/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/872/events", "html_url": "https://github.com/hardbyte/python-can/issues/872", "id": 662089938, "node_id": "MDU6SXNzdWU2NjIwODk5Mzg=", "number": 872, "title": "Notifier timeout parameter", "user": {"login": "HIllerrr", "id": 67482483, "node_id": "MDQ6VXNlcjY3NDgyNDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/67482483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HIllerrr", "html_url": "https://github.com/HIllerrr", "followers_url": "https://api.github.com/users/HIllerrr/followers", "following_url": "https://api.github.com/users/HIllerrr/following{/other_user}", "gists_url": "https://api.github.com/users/HIllerrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/HIllerrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HIllerrr/subscriptions", "organizations_url": "https://api.github.com/users/HIllerrr/orgs", "repos_url": "https://api.github.com/users/HIllerrr/repos", "events_url": "https://api.github.com/users/HIllerrr/events{/privacy}", "received_events_url": "https://api.github.com/users/HIllerrr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T17:49:09Z", "updated_at": "2020-07-23T16:35:20Z", "closed_at": "2020-07-22T11:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to understand whats the objective of the ` timeout` parameter on the initialization of `can.Notifier` object. \r\nI would like to raise a flag or exception if I do not receive any messages in a specific time window. But seems that nothing happens if I don't get any message.\r\n\r\nTank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/871", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/871/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/871/events", "html_url": "https://github.com/hardbyte/python-can/issues/871", "id": 658227999, "node_id": "MDU6SXNzdWU2NTgyMjc5OTk=", "number": 871, "title": "Align bus.recv(timeout=n) method to raise an exception rather than return None when the timeout period is exceeded.", "user": {"login": "SoloITBiz", "id": 28741509, "node_id": "MDQ6VXNlcjI4NzQxNTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/28741509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SoloITBiz", "html_url": "https://github.com/SoloITBiz", "followers_url": "https://api.github.com/users/SoloITBiz/followers", "following_url": "https://api.github.com/users/SoloITBiz/following{/other_user}", "gists_url": "https://api.github.com/users/SoloITBiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/SoloITBiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SoloITBiz/subscriptions", "organizations_url": "https://api.github.com/users/SoloITBiz/orgs", "repos_url": "https://api.github.com/users/SoloITBiz/repos", "events_url": "https://api.github.com/users/SoloITBiz/events{/privacy}", "received_events_url": "https://api.github.com/users/SoloITBiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448765017, "node_id": "MDU6TGFiZWw0NDg3NjUwMTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/api", "name": "api", "color": "68db04", "default": false, "description": ""}, {"id": 448741913, "node_id": "MDU6TGFiZWw0NDg3NDE5MTM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-16T14:01:06Z", "updated_at": "2020-08-05T22:49:35Z", "closed_at": "2020-08-05T22:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Returning None when the timeout period has been exceeded seems to be inconsistent with other python methods that accept timeout parameters:-\r\n\r\nI propose that a TimeoutError is raised instead of returning None:\r\n*** Python Docs - https://docs.python.org/3/library/exceptions.html#TimeoutError\r\n     exception TimeoutError\r\n     Raised when a system function timed out at the system level. Corresponds to errno ETIMEDOUT\r\n***\r\nThis would not be backwards compatible, but could be worked around by adding an instance attribute 'raise_timeout_exceptions' that defaults to False and so returns None or may be set to True in which case an exception is raised.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/857", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/857/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/857/events", "html_url": "https://github.com/hardbyte/python-can/issues/857", "id": 637615601, "node_id": "MDU6SXNzdWU2Mzc2MTU2MDE=", "number": 857, "title": "BLFParseError", "user": {"login": "AllenGHL", "id": 35108789, "node_id": "MDQ6VXNlcjM1MTA4Nzg5", "avatar_url": "https://avatars3.githubusercontent.com/u/35108789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AllenGHL", "html_url": "https://github.com/AllenGHL", "followers_url": "https://api.github.com/users/AllenGHL/followers", "following_url": "https://api.github.com/users/AllenGHL/following{/other_user}", "gists_url": "https://api.github.com/users/AllenGHL/gists{/gist_id}", "starred_url": "https://api.github.com/users/AllenGHL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AllenGHL/subscriptions", "organizations_url": "https://api.github.com/users/AllenGHL/orgs", "repos_url": "https://api.github.com/users/AllenGHL/repos", "events_url": "https://api.github.com/users/AllenGHL/events{/privacy}", "received_events_url": "https://api.github.com/users/AllenGHL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T09:25:18Z", "updated_at": "2020-07-23T16:36:08Z", "closed_at": "2020-06-13T07:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n    I need to read a canoe created blf file , but the feedback is :\r\n  File \"D:\\MyTool\\blf2asc\\test\\blf2asc.py\", line 35, in <module>\r\n    for msg in can_log:\r\n  File \"D:\\ProgramFiles\\anaconda3\\lib\\site-packages\\can\\io\\blf.py\", line 195, in __iter__\r\n    raise BLFParseError()\r\ncan.io.blf.BLFParseError\r\n\r\nthe blf file could convert asc by canoe tool sucessfully.\r\nI am blocked by this problem for a long time\r\nthanks \r\n[attach file is the blf file]\r\n[test.zip](https://github.com/hardbyte/python-can/files/4770104/test.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/846", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/846/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/846/events", "html_url": "https://github.com/hardbyte/python-can/issues/846", "id": 628610882, "node_id": "MDU6SXNzdWU2Mjg2MTA4ODI=", "number": 846, "title": "Add #621 to a 3.3.X release", "user": {"login": "pierreluctg", "id": 1785698, "node_id": "MDQ6VXNlcjE3ODU2OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1785698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierreluctg", "html_url": "https://github.com/pierreluctg", "followers_url": "https://api.github.com/users/pierreluctg/followers", "following_url": "https://api.github.com/users/pierreluctg/following{/other_user}", "gists_url": "https://api.github.com/users/pierreluctg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierreluctg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierreluctg/subscriptions", "organizations_url": "https://api.github.com/users/pierreluctg/orgs", "repos_url": "https://api.github.com/users/pierreluctg/repos", "events_url": "https://api.github.com/users/pierreluctg/events{/privacy}", "received_events_url": "https://api.github.com/users/pierreluctg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/9", "html_url": "https://github.com/hardbyte/python-can/milestone/9", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/9/labels", "id": 5556066, "node_id": "MDk6TWlsZXN0b25lNTU1NjA2Ng==", "number": 9, "title": "3.3.4 Release", "description": "", "creator": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "open", "created_at": "2020-06-18T09:42:32Z", "updated_at": "2020-08-05T23:34:08Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2020-06-01T17:37:45Z", "updated_at": "2020-07-23T16:36:24Z", "closed_at": "2020-07-18T04:17:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Can we have a new 3.3.x release that includes #621\r\n\r\nThis PR was closed long time ago but never made it to master.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/845", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/845/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/845/events", "html_url": "https://github.com/hardbyte/python-can/issues/845", "id": 627439052, "node_id": "MDU6SXNzdWU2Mjc0MzkwNTI=", "number": 845, "title": "Socketcan update is broken", "user": {"login": "james-goin", "id": 43549783, "node_id": "MDQ6VXNlcjQzNTQ5Nzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/43549783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/james-goin", "html_url": "https://github.com/james-goin", "followers_url": "https://api.github.com/users/james-goin/followers", "following_url": "https://api.github.com/users/james-goin/following{/other_user}", "gists_url": "https://api.github.com/users/james-goin/gists{/gist_id}", "starred_url": "https://api.github.com/users/james-goin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/james-goin/subscriptions", "organizations_url": "https://api.github.com/users/james-goin/orgs", "repos_url": "https://api.github.com/users/james-goin/repos", "events_url": "https://api.github.com/users/james-goin/events{/privacy}", "received_events_url": "https://api.github.com/users/james-goin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/9", "html_url": "https://github.com/hardbyte/python-can/milestone/9", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/9/labels", "id": 5556066, "node_id": "MDk6TWlsZXN0b25lNTU1NjA2Ng==", "number": 9, "title": "3.3.4 Release", "description": "", "creator": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "open", "created_at": "2020-06-18T09:42:32Z", "updated_at": "2020-08-05T23:34:08Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2020-05-29T17:58:06Z", "updated_at": "2020-08-05T23:33:32Z", "closed_at": "2020-08-05T23:33:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Socketcan no longer works since this commit: https://github.com/hardbyte/python-can/commit/0e3812d218f03947d5fc7db59c61981b53e5b6e1\r\n\r\nThrows [Errno 22] Invalid argument exception on line 365 of socketcan.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/843", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/843/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/843/events", "html_url": "https://github.com/hardbyte/python-can/issues/843", "id": 624726152, "node_id": "MDU6SXNzdWU2MjQ3MjYxNTI=", "number": 843, "title": "can.viewer is not displaying CAN-FD messages", "user": {"login": "hdnauth", "id": 23160797, "node_id": "MDQ6VXNlcjIzMTYwNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/23160797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdnauth", "html_url": "https://github.com/hdnauth", "followers_url": "https://api.github.com/users/hdnauth/followers", "following_url": "https://api.github.com/users/hdnauth/following{/other_user}", "gists_url": "https://api.github.com/users/hdnauth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdnauth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdnauth/subscriptions", "organizations_url": "https://api.github.com/users/hdnauth/orgs", "repos_url": "https://api.github.com/users/hdnauth/repos", "events_url": "https://api.github.com/users/hdnauth/events{/privacy}", "received_events_url": "https://api.github.com/users/hdnauth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-26T09:09:41Z", "updated_at": "2020-07-23T16:36:50Z", "closed_at": "2020-06-03T19:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my test environment,\r\nI have 2 can channels with using Peak-CAN hardware on RaspberryPi. (socketCAN)\r\ncan0 is CAN-FD (500K -> 2000Kbps), and can1 is HS-CAN (500Kbps)\r\n\r\nfirst, I tested using cantools to confirm both can0&can1 are woking.\r\n\r\nbelows are test results on my environment.\r\n\r\ninput:\r\n`candump can1`\r\n\r\noutput:\r\n  can1  660   [8]  60 48 09 00 54 14 00 00\r\n  can1  661   [8]  02 00 00 00 00 00 00 00\r\n  can1  562   [8]  62 04 00 00 00 00 FF FF\r\n  can1  660   [8]  60 48 09 00 54 14 00 00\r\n  can1  661   [8]  02 00 00 00 00 00 00 00\r\n  can1  660   [8]  60 48 09 00 54 14 00 00\r\n  can1  661   [8]  02 00 00 00 00 00 00 00\r\n  can1  660   [8]  60 48 09 00 54 14 00 00\r\n  can1  661   [8]  02 00 00 00 00 00 00 00\r\n  can1  660   [8]  60 48 09 00 54 14 00 00\r\n  can1  661   [8]  02 00 00 00 00 00 00 00\r\n  can1  662   [8]  41 30 31 31 41 31 38 00\r\n\r\n\r\ninput:\r\n`candump can0`\r\n\r\noutput:\r\n  can0  29A  [08]  31 2B 13 00 00 40 00 00\r\n  can0  29A  [08]  E2 6C 14 00 00 40 00 00\r\n  can0  29A  [08]  FA AB 15 00 00 40 00 00\r\n  can0  29A  [08]  29 EC 16 00 00 40 00 00\r\n  can0  29A  [08]  5C 24 17 00 00 40 00 00\r\n  can0  29A  [08]  8F 63 18 00 00 40 00 00\r\n  can0  29A  [08]  2B 2A 19 00 00 40 00 00\r\n  can0  29A  [08]  9E FD 1A 00 00 40 00 00\r\n  can0  29A  [08]  EB 35 1B 00 00 40 00 00\r\n  can0  29A  [08]  38 72 1C 00 00 40 00 00\r\n  can0  29A  [08]  20 B5 1D 00 00 40 00 00\r\n  can0  29A  [08]  F3 F2 1E 00 00 40 00 00\r\n\r\n\r\ninput:\r\n`python3 -m can.viewer -i socketcan -c can1`\r\n\r\noutput:\r\nCount   Time           dt          ID          DLC  Data\r\n10      1.800458       0.200031    0x660       8    60 48 09 00 54 14 00 00\r\n10      1.805534       0.199150    0x661       8    02 00 00 00 00 00 00 00\r\n2       1.010172       1.000313    0x662       8    41 30 31 31 41 31 38 00\r\n2       1.336196       1.001216    0x562       8    62 04 00 00 00 00 FF FF\r\n\r\n\r\ninput:\r\n`python3 -m can.viewer -i socketcan -c can0`\r\n\r\noutput:\r\nCount   Time           dt          ID          DLC  Data\r\n\r\n\r\nno output messages are displayed on CAN-FD channel.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/841", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/841/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/841/events", "html_url": "https://github.com/hardbyte/python-can/issues/841", "id": 622153404, "node_id": "MDU6SXNzdWU2MjIxNTM0MDQ=", "number": 841, "title": "Issue importing can module with python3", "user": {"login": "aodonde", "id": 17855245, "node_id": "MDQ6VXNlcjE3ODU1MjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/17855245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aodonde", "html_url": "https://github.com/aodonde", "followers_url": "https://api.github.com/users/aodonde/followers", "following_url": "https://api.github.com/users/aodonde/following{/other_user}", "gists_url": "https://api.github.com/users/aodonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/aodonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aodonde/subscriptions", "organizations_url": "https://api.github.com/users/aodonde/orgs", "repos_url": "https://api.github.com/users/aodonde/repos", "events_url": "https://api.github.com/users/aodonde/events{/privacy}", "received_events_url": "https://api.github.com/users/aodonde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T23:51:11Z", "updated_at": "2020-07-23T16:37:05Z", "closed_at": "2020-05-21T08:19:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "very simple issue when I try to run my module using python3 in the terminal. It says that the module cannot be found. (yes I did sudo pip install python-can).\r\n\r\nI know I can run it using normal python, but its just odd that it wouldnt work.\r\n\r\nAlso when i try to sudo pip install from the github I get told. \"python-can requires Python '>=3.6' but the running Python is 2.7.16\".\r\n\r\nI am sure there is a simple solution for this :)\r\nBefore is a screendump of the code and the errors.\r\n\r\nSorry this is my first issue ticket. Let me know if I formatted correctly/had the right kind of information.\r\n\r\nThanks for your time.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/17855245/82508439-ef924c80-9afc-11ea-8920-865b4a5f84e5.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/836", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/836/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/836/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/836/events", "html_url": "https://github.com/hardbyte/python-can/issues/836", "id": 616680918, "node_id": "MDU6SXNzdWU2MTY2ODA5MTg=", "number": 836, "title": "View virtual CAN messages on CANoe", "user": {"login": "gcShyam", "id": 61227714, "node_id": "MDQ6VXNlcjYxMjI3NzE0", "avatar_url": "https://avatars1.githubusercontent.com/u/61227714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcShyam", "html_url": "https://github.com/gcShyam", "followers_url": "https://api.github.com/users/gcShyam/followers", "following_url": "https://api.github.com/users/gcShyam/following{/other_user}", "gists_url": "https://api.github.com/users/gcShyam/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcShyam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcShyam/subscriptions", "organizations_url": "https://api.github.com/users/gcShyam/orgs", "repos_url": "https://api.github.com/users/gcShyam/repos", "events_url": "https://api.github.com/users/gcShyam/events{/privacy}", "received_events_url": "https://api.github.com/users/gcShyam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-12T14:00:14Z", "updated_at": "2020-07-23T16:37:26Z", "closed_at": "2020-05-22T02:50:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to implement a rest bus simulation using the library.\r\nTo debug if the code is correct, I use the trace window in CANoe application to check the messages.\r\nCurrently, I am trying to send CAN messages on the virtual CAN bus.\r\n\r\nThe following is the starting code which is supposed to send a message on the virtual CAN.\r\n```\r\nimport can\r\ndef send_one():\r\n    with can.interface.Bus() as bus:\r\n        bus = can.interface.Bus(bustype='virtual', app_name='SelfApp', channel=[0])\r\n        msg = can.Message(arbitration_id=0xC0FFEE, data=[0, 25, 0, 1, 3, 1, 4, 1], is_extended_id=True)\r\n        try:\r\n            bus.send(msg)\r\n            print(f\"Message sent on {bus.channel_info}\")\r\n        except can.CanError:\r\n            print(\"Message NOT sent\")\r\nif __name__ == \"__main__\":\r\n    send_one()\r\n```\r\n\r\nI get the following error:\r\n```Traceback (most recent call last):\r\n  File \".../SendMsg.py\", line 51, in <module>\r\n    send_one()\r\n  File \".../SendMsg.py\", line 30, in send_one\r\n    with can.interface.Bus() as bus:\r\n  File \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\lib\\site-packages\\python_can-3.3.2-py3.6.egg\\can\\interface.py\", line 108, in __new__\r\n  File \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\lib\\site-packages\\python_can-3.3.2-py3.6.egg\\can\\util.py\", line 197, in load_config\r\nNotImplementedError: Invalid CAN Bus Type - None```\r\n\r\nCan someone please help me to remove this error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/834", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/834/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/834/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/834/events", "html_url": "https://github.com/hardbyte/python-can/issues/834", "id": 615712386, "node_id": "MDU6SXNzdWU2MTU3MTIzODY=", "number": 834, "title": "How to check the specific ID and data to react", "user": {"login": "CSG2019", "id": 53852255, "node_id": "MDQ6VXNlcjUzODUyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/53852255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSG2019", "html_url": "https://github.com/CSG2019", "followers_url": "https://api.github.com/users/CSG2019/followers", "following_url": "https://api.github.com/users/CSG2019/following{/other_user}", "gists_url": "https://api.github.com/users/CSG2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSG2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSG2019/subscriptions", "organizations_url": "https://api.github.com/users/CSG2019/orgs", "repos_url": "https://api.github.com/users/CSG2019/repos", "events_url": "https://api.github.com/users/CSG2019/events{/privacy}", "received_events_url": "https://api.github.com/users/CSG2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T08:59:33Z", "updated_at": "2020-05-28T10:18:39Z", "closed_at": "2020-05-28T10:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI want to get the specific ID and data then send a request.\r\nFor example, once i get the ID 0x2ED and this ID's data[1] is 0x26, i want to send a command on the vehicle bus.\r\nWhen I try to run below code, it showed \"Not receive\", but in acutal vehicle CAN bus, i can find the ID 0x2ED and data[1]=0x26 was correct. and ID 0x2ED periodic cycle time is 10ms.\r\nCould you please give me some suggestions or method which can fix it?\r\nthank you.\r\n```\r\nimport can\r\n\r\nbus = can.interface.Bus(bustype='vector', app_name='CANalyzer', channel=[0])\r\n\r\nrec_msg = bus.recv(1)\r\nif rec_msg.arbitration_id == 0x2ED and rec_msg.data[0] == 0x26:\r\n    print('Receive!')\r\nelse:\r\n    print('Not receive!')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/821", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/821/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/821/events", "html_url": "https://github.com/hardbyte/python-can/issues/821", "id": 608682990, "node_id": "MDU6SXNzdWU2MDg2ODI5OTA=", "number": 821, "title": "Configure mergify", "user": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-28T23:41:34Z", "updated_at": "2020-05-12T22:12:15Z", "closed_at": "2020-05-12T22:12:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I've enabled [Mergify](https://mergify.io/) on this repository but haven't yet decided how we should configure it.\r\n\r\nI'm thinking something like this:\r\n\r\n```\r\npull_request_rules:\r\n  - name: Automatic merge on up to date branch with dual approval\r\n    conditions:\r\n      - \"#approved-reviews-by>=2\"\r\n      - \"status-success=continuous-integration/travis-ci/pr\"\r\n      - \"label!=work-in-progress\"\r\n    actions:\r\n      merge:\r\n        method: merge\r\n        strict: true\r\n```\r\n\r\nThis would mean any travis passing PR that has two approvals would get automatically merged. We can lower the bar to one approval after we are happy it appears to be working.\r\n\r\nConfiguration docs [here](https://doc.mergify.io/configuration.html).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/816", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/816/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/816/events", "html_url": "https://github.com/hardbyte/python-can/issues/816", "id": 603094472, "node_id": "MDU6SXNzdWU2MDMwOTQ0NzI=", "number": 816, "title": "ASCReader can not read out CAN-FD frames from .ASC file", "user": {"login": "hdnauth", "id": 23160797, "node_id": "MDQ6VXNlcjIzMTYwNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/23160797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdnauth", "html_url": "https://github.com/hdnauth", "followers_url": "https://api.github.com/users/hdnauth/followers", "following_url": "https://api.github.com/users/hdnauth/following{/other_user}", "gists_url": "https://api.github.com/users/hdnauth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdnauth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdnauth/subscriptions", "organizations_url": "https://api.github.com/users/hdnauth/orgs", "repos_url": "https://api.github.com/users/hdnauth/repos", "events_url": "https://api.github.com/users/hdnauth/events{/privacy}", "received_events_url": "https://api.github.com/users/hdnauth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-20T09:40:59Z", "updated_at": "2020-05-22T03:38:56Z", "closed_at": "2020-05-22T03:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have some trouble on loading CAN-FD log files (both .asc and .blf)\r\nwhen I read .asc file using ASCRead(), only normal CAN frame is loaded.\r\n\r\n1) How can I read CAN-FD frames?\r\n2) How can I select one channel when loading?\r\n\r\nThanks.\r\n\r\n\r\n --- test input ---\r\ndate Thu Apr 16 01:59:01.000 pm 2020\r\nbase hex  timestamps absolute\r\n internal events logged\r\n// version 11.0.0\r\nBegin TriggerBlock Thu Apr 16 01:59:01.000 pm 2020\r\n   0.000000 Start of measurement\r\n   0.001036 CANFD   1 Rx        29a  AAA_01                     1 1 8  8 f8 62 01 00 00 40 00 00   103625  136   307000 98005364 4ba00150 4b280150 20002776 2000091c\r\n   0.001748 2  562             Rx   d 8 62 01 00 00 00 00 FF FF  Length = 233925 BitCount = 121 ID = 1378\r\n   0.004038 2  562             Rx   d 8 62 04 00 00 00 00 FF FF  Length = 233925 BitCount = 121 ID = 1378\r\n   0.009148 2  660             Rx   d 8 68 98 A9 02 50 14 00 00  Length = 227910 BitCount = 118 ID = 1632\r\n   0.010804 CANFD   1 Tx        2e0  BBB_03                     0 0 c 24 00 00 00 00 45 50 82 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   584296  295   301040 b0141a48 4ba00150 4b280150 20002776 2000091c\r\n   0.011538 CANFD   1 Tx        1a0  CCC_20                 0 0 d 32 00 00 00 fe f7 7f ff 00 14 00 10 00 10 00 02 00 00 00 00 00 00 00 00 00 fe 07 00 00 00 00 00 00   728312  367   321040 b008c4ec 4ba00150 4b280150 20002776 2000091c\r\n   0.014092 2  661             Rx   d 8 02 00 00 00 00 00 00 00  Length = 239910 BitCount = 124 ID = 1633\r\n   0.019098 2  662             Rx   d 8 41 30 31 32 31 31 46 00  Length = 219910 BitCount = 114 ID = 1634\r\n   0.020624 CANFD   1 Tx        12a  CCC_30                 0 0 a 16 00 00 00 50 80 00 00 00 00 00 00 00 00 00 00 00   420312  213   301040 e0017971 4ba00150 4b280150 20002776 2000091c\r\n   0.020901 CANFD   1 Tx        345  CCC_01                0 0 8  8 00 00 00 04 00 00 00 00   270312  138   321040 b0004e0b 4ba00150 4b280150 20002776 2000091c\r\n   0.021635 CANFD   1 Tx        1a0  CCC_20                 0 0 d 32 00 00 00 fe f7 7f ff 00 14 00 10 00 10 00 02 00 00 00 00 00 00 00 00 00 fe 07 00 00 00 00 00 00   728312  367   321040 b008c4ec 4ba00150 4b280150 20002776 2000091c\r\n   0.022225 CANFD   1 Tx        2e0  BBB_03                     0 0 c 24 00 00 00 00 45 50 82 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   584296  295   321040 b0141a48 4ba00150 4b280150 20002776 2000091c\r\n   0.200692 2  4CE             Tx   d 8 10 C2 FF FF 00 00 80 00  Length = 238259 BitCount = 122 ID = 1230\r\nEnd TriggerBlock\r\n\r\n\r\n--- test output ---\r\nTimestamp:        0.001748        ID: 0562    S                DLC:  8    62 01 00 00 00 00 ff ff     Channel: 1\r\nTimestamp:        0.004038        ID: 0562    S                DLC:  8    62 04 00 00 00 00 ff ff     Channel: 1\r\nTimestamp:        0.009148        ID: 0660    S                DLC:  8    68 98 a9 02 50 14 00 00     Channel: 1\r\nTimestamp:        0.014092        ID: 0661    S                DLC:  8    02 00 00 00 00 00 00 00     Channel: 1\r\nTimestamp:        0.019098        ID: 0662    S                DLC:  8    41 30 31 32 31 31 46 00     Channel: 1\r\nTimestamp:        0.200692        ID: 04ce    S                DLC:  8    10 c2 ff ff 00 00 80 00     Channel: 1\r\n\r\n[logtest.zip](https://github.com/hardbyte/python-can/files/4502490/logtest.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/810", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/810/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/810/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/810/events", "html_url": "https://github.com/hardbyte/python-can/issues/810", "id": 601051048, "node_id": "MDU6SXNzdWU2MDEwNTEwNDg=", "number": 810, "title": "Issue with BLFReader", "user": {"login": "msnir009", "id": 11345816, "node_id": "MDQ6VXNlcjExMzQ1ODE2", "avatar_url": "https://avatars2.githubusercontent.com/u/11345816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msnir009", "html_url": "https://github.com/msnir009", "followers_url": "https://api.github.com/users/msnir009/followers", "following_url": "https://api.github.com/users/msnir009/following{/other_user}", "gists_url": "https://api.github.com/users/msnir009/gists{/gist_id}", "starred_url": "https://api.github.com/users/msnir009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msnir009/subscriptions", "organizations_url": "https://api.github.com/users/msnir009/orgs", "repos_url": "https://api.github.com/users/msnir009/repos", "events_url": "https://api.github.com/users/msnir009/events{/privacy}", "received_events_url": "https://api.github.com/users/msnir009/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-16T13:24:19Z", "updated_at": "2020-05-22T03:39:33Z", "closed_at": "2020-05-22T03:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to read a blf file on a linux machine and i have done the following\r\n\r\nimport can\r\ncan.BLFReader(\"sample.blf\")\r\n\r\nerror message\r\nAttributeError: module 'can' has no attribute 'BLFReader'\r\n\r\nI am not sure what am I doing wrong here as I have already installed the python-can package and it is still not recognising this method. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/809", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/809/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/809/events", "html_url": "https://github.com/hardbyte/python-can/issues/809", "id": 600504262, "node_id": "MDU6SXNzdWU2MDA1MDQyNjI=", "number": 809, "title": "cyclic task data changing", "user": {"login": "jma1123", "id": 63737406, "node_id": "MDQ6VXNlcjYzNzM3NDA2", "avatar_url": "https://avatars3.githubusercontent.com/u/63737406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jma1123", "html_url": "https://github.com/jma1123", "followers_url": "https://api.github.com/users/jma1123/followers", "following_url": "https://api.github.com/users/jma1123/following{/other_user}", "gists_url": "https://api.github.com/users/jma1123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jma1123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jma1123/subscriptions", "organizations_url": "https://api.github.com/users/jma1123/orgs", "repos_url": "https://api.github.com/users/jma1123/repos", "events_url": "https://api.github.com/users/jma1123/events{/privacy}", "received_events_url": "https://api.github.com/users/jma1123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T18:32:09Z", "updated_at": "2020-04-22T15:00:51Z", "closed_at": "2020-04-22T15:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "In trying the Broadcast Manager to send periodic messages with modified data from the 'read the docs', this does not seem very useful.  Ref: section 3.6 page 27&27\r\n\r\nRather a thread safe structure / object holding the data (say a python deque) or pointer to the data should be passed with the task creation.  The present implementation modifies the data 1x and sends this same data until the task is stopped.  Can you setup the implementation to send periodically, but the data is changing constantly, not just on the task instantiation?  Suggestions?  This limitation does not seem to be the intent of the periodic message task.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/808", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/808/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/808/events", "html_url": "https://github.com/hardbyte/python-can/issues/808", "id": 599363651, "node_id": "MDU6SXNzdWU1OTkzNjM2NTE=", "number": 808, "title": "Set filters to get the specific message ", "user": {"login": "CSG2019", "id": 53852255, "node_id": "MDQ6VXNlcjUzODUyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/53852255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSG2019", "html_url": "https://github.com/CSG2019", "followers_url": "https://api.github.com/users/CSG2019/followers", "following_url": "https://api.github.com/users/CSG2019/following{/other_user}", "gists_url": "https://api.github.com/users/CSG2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSG2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSG2019/subscriptions", "organizations_url": "https://api.github.com/users/CSG2019/orgs", "repos_url": "https://api.github.com/users/CSG2019/repos", "events_url": "https://api.github.com/users/CSG2019/events{/privacy}", "received_events_url": "https://api.github.com/users/CSG2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T07:41:37Z", "updated_at": "2020-07-23T16:37:42Z", "closed_at": "2020-05-11T09:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI want to get the specific ID and data then do the specific event on the CAN bus.\r\nI tried to set the can_filters as below code.\r\n\r\n- but it seems that i have to set the can_id and can_mask to be the same, then it can work\uff1f\r\n\r\n- if i want to keep monitoring and react,  do i have to set \u2018for\u2019 loop? is there any better way or method to complete it? as below code, it is only implemented once.\r\n\r\nthank you very much :) .\r\n```\r\nimport can\r\n\r\n\r\ndef can_filter_test():\r\n    bus = can.interface.Bus(bustype='vector', app_name='CANalyzer', channel=[0])\r\n    can_filters = [{\"can_id\": 0xff, \"can_mask\": 0xff}]\r\n    bus.set_filters(can_filters)\r\n    m = bus.recv(1)\r\n    if m.data[4] == 0xff and m.data[5] == 0xc0:\r\n        print('Got it! \\n')\r\n\r\n\r\ncan_filter_test()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/807", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/807/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/807/events", "html_url": "https://github.com/hardbyte/python-can/issues/807", "id": 598445657, "node_id": "MDU6SXNzdWU1OTg0NDU2NTc=", "number": 807, "title": "Build pyinstaller successful, but can\u2018t run the exe file", "user": {"login": "CSG2019", "id": 53852255, "node_id": "MDQ6VXNlcjUzODUyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/53852255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSG2019", "html_url": "https://github.com/CSG2019", "followers_url": "https://api.github.com/users/CSG2019/followers", "following_url": "https://api.github.com/users/CSG2019/following{/other_user}", "gists_url": "https://api.github.com/users/CSG2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSG2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSG2019/subscriptions", "organizations_url": "https://api.github.com/users/CSG2019/orgs", "repos_url": "https://api.github.com/users/CSG2019/repos", "events_url": "https://api.github.com/users/CSG2019/events{/privacy}", "received_events_url": "https://api.github.com/users/CSG2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-12T09:25:13Z", "updated_at": "2020-04-20T06:11:33Z", "closed_at": "2020-04-12T12:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI used the pyinstaller to build the exe file, the exe file and related files can be created successfully.\r\nBut when i run the exe file, it showed that '' Failed to execute script...''.\r\nin my .py file, i only import can and tkinter and time as below. and it can run normally in IDE.\r\n`import can\r\nfrom tkinter import *\r\nimport time\r\nfrom tkinter import messagebox\r\n`\r\nHave you met the same porblem or give me any suggestions?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/803", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/803/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/803/events", "html_url": "https://github.com/hardbyte/python-can/issues/803", "id": 592557456, "node_id": "MDU6SXNzdWU1OTI1NTc0NTY=", "number": 803, "title": "BLF Parse error", "user": {"login": "yolaalabi", "id": 63049766, "node_id": "MDQ6VXNlcjYzMDQ5NzY2", "avatar_url": "https://avatars1.githubusercontent.com/u/63049766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yolaalabi", "html_url": "https://github.com/yolaalabi", "followers_url": "https://api.github.com/users/yolaalabi/followers", "following_url": "https://api.github.com/users/yolaalabi/following{/other_user}", "gists_url": "https://api.github.com/users/yolaalabi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yolaalabi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yolaalabi/subscriptions", "organizations_url": "https://api.github.com/users/yolaalabi/orgs", "repos_url": "https://api.github.com/users/yolaalabi/repos", "events_url": "https://api.github.com/users/yolaalabi/events{/privacy}", "received_events_url": "https://api.github.com/users/yolaalabi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T11:25:29Z", "updated_at": "2020-04-20T06:13:45Z", "closed_at": "2020-04-19T03:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, I get a BLF parse error when opening a normal BLF file, is there some workaround? can I email the file to somebody to check out?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/801", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/801/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/801/events", "html_url": "https://github.com/hardbyte/python-can/issues/801", "id": 591057679, "node_id": "MDU6SXNzdWU1OTEwNTc2Nzk=", "number": 801, "title": "SyntaxError: invalid syntax", "user": {"login": "skywo1f", "id": 4000822, "node_id": "MDQ6VXNlcjQwMDA4MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4000822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skywo1f", "html_url": "https://github.com/skywo1f", "followers_url": "https://api.github.com/users/skywo1f/followers", "following_url": "https://api.github.com/users/skywo1f/following{/other_user}", "gists_url": "https://api.github.com/users/skywo1f/gists{/gist_id}", "starred_url": "https://api.github.com/users/skywo1f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skywo1f/subscriptions", "organizations_url": "https://api.github.com/users/skywo1f/orgs", "repos_url": "https://api.github.com/users/skywo1f/repos", "events_url": "https://api.github.com/users/skywo1f/events{/privacy}", "received_events_url": "https://api.github.com/users/skywo1f/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T12:14:19Z", "updated_at": "2020-07-23T16:37:59Z", "closed_at": "2020-04-29T15:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "pi@raspberrypi:~/utils/python-can/examples $ ./receive_all.py \r\nTraceback (most recent call last):\r\n  File \"./receive_all.py\", line 7, in <module>\r\n    import can\r\n  File \"/usr/local/lib/python2.7/dist-packages/python_can-3.2.0-py2.7.egg/can/__init__.py\", line 13\r\n    rc: Dict[str, Any] = dict()\r\n      ^\r\nSyntaxError: invalid syntax\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/800", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/800/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/800/events", "html_url": "https://github.com/hardbyte/python-can/issues/800", "id": 591057248, "node_id": "MDU6SXNzdWU1OTEwNTcyNDg=", "number": 800, "title": "No module named 'winreg'", "user": {"login": "skywo1f", "id": 4000822, "node_id": "MDQ6VXNlcjQwMDA4MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4000822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skywo1f", "html_url": "https://github.com/skywo1f", "followers_url": "https://api.github.com/users/skywo1f/followers", "following_url": "https://api.github.com/users/skywo1f/following{/other_user}", "gists_url": "https://api.github.com/users/skywo1f/gists{/gist_id}", "starred_url": "https://api.github.com/users/skywo1f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skywo1f/subscriptions", "organizations_url": "https://api.github.com/users/skywo1f/orgs", "repos_url": "https://api.github.com/users/skywo1f/repos", "events_url": "https://api.github.com/users/skywo1f/events{/privacy}", "received_events_url": "https://api.github.com/users/skywo1f/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448763397, "node_id": "MDU6TGFiZWw0NDg3NjMzOTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:pcan", "name": "backend:pcan", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-31T12:13:48Z", "updated_at": "2020-04-20T06:12:24Z", "closed_at": "2020-04-19T06:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"receive_all.py\", line 34, in <module>\r\n    receive_all()\r\n  File \"receive_all.py\", line 15, in receive_all\r\n    bustype=\"pcan\", channel=\"PCAN_USBBUS1\", bitrate=250000\r\n  File \"/usr/local/lib/python3.7/dist-packages/python_can-3.2.0-py3.7.egg/can/interface.py\", line 98, in __new__\r\n  File \"/usr/local/lib/python3.7/dist-packages/python_can-3.2.0-py3.7.egg/can/interface.py\", line 40, in _get_class_for_interface\r\nImportError: Cannot import module can.interfaces.pcan for CAN interface 'pcan': No module named 'winreg'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/799", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/799/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/799/events", "html_url": "https://github.com/hardbyte/python-can/issues/799", "id": 585514418, "node_id": "MDU6SXNzdWU1ODU1MTQ0MTg=", "number": 799, "title": "Record CAN BUS On GUI", "user": {"login": "CSG2019", "id": 53852255, "node_id": "MDQ6VXNlcjUzODUyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/53852255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSG2019", "html_url": "https://github.com/CSG2019", "followers_url": "https://api.github.com/users/CSG2019/followers", "following_url": "https://api.github.com/users/CSG2019/following{/other_user}", "gists_url": "https://api.github.com/users/CSG2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSG2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSG2019/subscriptions", "organizations_url": "https://api.github.com/users/CSG2019/orgs", "repos_url": "https://api.github.com/users/CSG2019/repos", "events_url": "https://api.github.com/users/CSG2019/events{/privacy}", "received_events_url": "https://api.github.com/users/CSG2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-21T14:51:39Z", "updated_at": "2020-04-20T06:11:52Z", "closed_at": "2020-04-12T09:10:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\ni want to create a small GUI to record the CAN bus log, but it failed in below code, i am new to the python, so,  if you know how to correct it , please help me . thank you very much.\r\ni want to click 'start' to record the CAN bus log, and click the 'stop' to complete the record.\r\n\r\nthe code is :\r\n`import can\r\nfrom tkinter import *\r\n\r\n\r\ndef record_can_bus():\r\n    can.Notifier(bus_channel_1, [can.Logger(\"test_2020.asc\"), can.Printer()])\r\n\r\n\r\ndef record_stop():\r\n    can.Notifier.stop()\r\n    bus_channel_1.shutdown()\r\n\r\n\r\ndef app():\r\n    window = Tk()\r\n    window.title(\"Test\")\r\n    window.geometry('200x100+320+100')\r\n    button_1 = Button(window, text='Start', command=record_can_bus)\r\n    button_1.pack(pady=5)\r\n    button_2 = Button(window, text='Stop', command=record_stop)\r\n    button_2.pack(pady=5)\r\n    button_3 = Button(window, text='Exit', command=window.destroy)\r\n    button_3.pack(pady=5)\r\n    window.mainloop()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    bus_channel_1 = can.interface.Bus(bustype='vector', app_name='CANoe', channel=[0])\r\n    app()\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/796", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/796/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/796/events", "html_url": "https://github.com/hardbyte/python-can/issues/796", "id": 584876703, "node_id": "MDU6SXNzdWU1ODQ4NzY3MDM=", "number": 796, "title": "Type error on vector CANlib", "user": {"login": "gyorgybacsibosch", "id": 62417991, "node_id": "MDQ6VXNlcjYyNDE3OTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/62417991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyorgybacsibosch", "html_url": "https://github.com/gyorgybacsibosch", "followers_url": "https://api.github.com/users/gyorgybacsibosch/followers", "following_url": "https://api.github.com/users/gyorgybacsibosch/following{/other_user}", "gists_url": "https://api.github.com/users/gyorgybacsibosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyorgybacsibosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyorgybacsibosch/subscriptions", "organizations_url": "https://api.github.com/users/gyorgybacsibosch/orgs", "repos_url": "https://api.github.com/users/gyorgybacsibosch/repos", "events_url": "https://api.github.com/users/gyorgybacsibosch/events{/privacy}", "received_events_url": "https://api.github.com/users/gyorgybacsibosch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 841971419, "node_id": "MDU6TGFiZWw4NDE5NzE0MTk=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:vector", "name": "backend:vector", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T06:52:08Z", "updated_at": "2020-04-20T06:12:36Z", "closed_at": "2020-04-19T21:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "can\\interfaces\\vector\\canlib.py\r\nline: \r\n  self._app_name = app_name.encode() if app_name is not None else ''\r\n\r\nshould be: \r\n  self._app_name = app_name.encode() if app_name is not None else b''\r\n\r\nCause: byte object required by vxlapi.xlOpenPort parameter 2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/794", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/794/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/794/events", "html_url": "https://github.com/hardbyte/python-can/issues/794", "id": 581609782, "node_id": "MDU6SXNzdWU1ODE2MDk3ODI=", "number": 794, "title": "Not Issue , but a help about how to Record the CAN BUS log", "user": {"login": "CSG2019", "id": 53852255, "node_id": "MDQ6VXNlcjUzODUyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/53852255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSG2019", "html_url": "https://github.com/CSG2019", "followers_url": "https://api.github.com/users/CSG2019/followers", "following_url": "https://api.github.com/users/CSG2019/following{/other_user}", "gists_url": "https://api.github.com/users/CSG2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSG2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSG2019/subscriptions", "organizations_url": "https://api.github.com/users/CSG2019/orgs", "repos_url": "https://api.github.com/users/CSG2019/repos", "events_url": "https://api.github.com/users/CSG2019/events{/privacy}", "received_events_url": "https://api.github.com/users/CSG2019/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-15T10:13:52Z", "updated_at": "2020-04-20T06:13:09Z", "closed_at": "2020-03-19T13:37:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am pretty new about this Python-can. \r\nI just send successfully CAN message  to the bus with this library.  Now I want to know how to get the real bus from vehicle.\r\nI read the official document, but i don't understand it well. It seems that i should use can.Linster to record the CAN bus. \r\nI want to know how to record the actual vehicle bus(only need channel 1). it's better to replay in CANoe/CANalyzer. Because my hardware is Vector tool.\r\nbus = can.interface.Bus(bustype='vector', app_name='CANoe', channel=[0])\r\nIf you can give me some examples or suggestions, I would really appreciate it!!!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/793", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/793/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/793/events", "html_url": "https://github.com/hardbyte/python-can/issues/793", "id": 580895506, "node_id": "MDU6SXNzdWU1ODA4OTU1MDY=", "number": 793, "title": "not an issue but a curiosity!", "user": {"login": "Soodep", "id": 9031472, "node_id": "MDQ6VXNlcjkwMzE0NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9031472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soodep", "html_url": "https://github.com/Soodep", "followers_url": "https://api.github.com/users/Soodep/followers", "following_url": "https://api.github.com/users/Soodep/following{/other_user}", "gists_url": "https://api.github.com/users/Soodep/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soodep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soodep/subscriptions", "organizations_url": "https://api.github.com/users/Soodep/orgs", "repos_url": "https://api.github.com/users/Soodep/repos", "events_url": "https://api.github.com/users/Soodep/events{/privacy}", "received_events_url": "https://api.github.com/users/Soodep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-13T22:16:20Z", "updated_at": "2020-04-20T06:13:15Z", "closed_at": "2020-03-15T20:45:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to sent a periodic can message from my NVIDIA PX2 through can0. If anyone can help me with that that would be very helpful. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/791", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/791/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/791/events", "html_url": "https://github.com/hardbyte/python-can/issues/791", "id": 580241209, "node_id": "MDU6SXNzdWU1ODAyNDEyMDk=", "number": 791, "title": "Seeedstudio USB-CAN interface not present", "user": {"login": "davidklett", "id": 19215836, "node_id": "MDQ6VXNlcjE5MjE1ODM2", "avatar_url": "https://avatars1.githubusercontent.com/u/19215836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidklett", "html_url": "https://github.com/davidklett", "followers_url": "https://api.github.com/users/davidklett/followers", "following_url": "https://api.github.com/users/davidklett/following{/other_user}", "gists_url": "https://api.github.com/users/davidklett/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidklett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidklett/subscriptions", "organizations_url": "https://api.github.com/users/davidklett/orgs", "repos_url": "https://api.github.com/users/davidklett/repos", "events_url": "https://api.github.com/users/davidklett/events{/privacy}", "received_events_url": "https://api.github.com/users/davidklett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-12T21:42:29Z", "updated_at": "2020-05-20T17:01:10Z", "closed_at": "2020-05-20T17:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I get the following message when I run the following command on my command line in Windows:\r\npip3 install python-can[seeedstudio]\r\n\r\nWARNING: python-can 3.2.0 does not provide the extra 'seeedstudio'\r\n\r\nBecause of this, I'm not able to run the following code:\r\nbus = can.interface.Bus(bustype='seeedstudio', channel='/dev/ttyUSB0', bitrate=500000)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/787", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/787/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/787/events", "html_url": "https://github.com/hardbyte/python-can/issues/787", "id": 576654163, "node_id": "MDU6SXNzdWU1NzY2NTQxNjM=", "number": 787, "title": "default can message pass extended_id=None, will make message to be extended", "user": {"login": "zhupumpkin", "id": 9413303, "node_id": "MDQ6VXNlcjk0MTMzMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9413303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhupumpkin", "html_url": "https://github.com/zhupumpkin", "followers_url": "https://api.github.com/users/zhupumpkin/followers", "following_url": "https://api.github.com/users/zhupumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/zhupumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhupumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhupumpkin/subscriptions", "organizations_url": "https://api.github.com/users/zhupumpkin/orgs", "repos_url": "https://api.github.com/users/zhupumpkin/repos", "events_url": "https://api.github.com/users/zhupumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/zhupumpkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T02:24:23Z", "updated_at": "2020-08-06T04:23:49Z", "closed_at": "2020-08-06T04:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "in file can\\message.py\r\nline 83 function __init__ for Message \r\npass is_extended_id=None also extended_id=None which are all defaul. \r\nAnd from meaning, it means no extended.\r\nHowever line 113 in the same file \r\n            self.is_extended_id = True if extended_id is None else extended_id\r\nthis logic makes extended true as extended_id is None which is logical error.\r\n\r\nexpect should be \r\nself.is_extended_id = True if extended_id is not \r\n![logical_error](https://user-images.githubusercontent.com/9413303/76044210-9a7e7a00-5f94-11ea-8cd4-95962e672a5b.png)\r\nNone else extended_id\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/786", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/786/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/786/events", "html_url": "https://github.com/hardbyte/python-can/issues/786", "id": 575478588, "node_id": "MDU6SXNzdWU1NzU0Nzg1ODg=", "number": 786, "title": "BLF padding/alignment incorrect for CAN_FD_MESSAGE_64", "user": {"login": "MartinStellmacher", "id": 42749450, "node_id": "MDQ6VXNlcjQyNzQ5NDUw", "avatar_url": "https://avatars0.githubusercontent.com/u/42749450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinStellmacher", "html_url": "https://github.com/MartinStellmacher", "followers_url": "https://api.github.com/users/MartinStellmacher/followers", "following_url": "https://api.github.com/users/MartinStellmacher/following{/other_user}", "gists_url": "https://api.github.com/users/MartinStellmacher/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinStellmacher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinStellmacher/subscriptions", "organizations_url": "https://api.github.com/users/MartinStellmacher/orgs", "repos_url": "https://api.github.com/users/MartinStellmacher/repos", "events_url": "https://api.github.com/users/MartinStellmacher/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinStellmacher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-04T15:04:35Z", "updated_at": "2020-04-19T03:32:47Z", "closed_at": "2020-04-19T03:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "In blf.py all messages are padded by obj_size % 4. This assumption doesn't hold for all types of messages. I experienced a parsing error while reading a file which contained CAN_FD_MESSAGE_64 items. They are not padded at all, as you can see in Toby Lorenz C++ implementation.\r\n\r\nIssue #459 is closed, but the problem still persists. Solution might be as simple as:\r\n\r\n                    if header[4] == CAN_FD_MESSAGE_64 or header[4] == ETHERNET_FRAME_EX: \r\n                        next_pos = pos + obj_size #no padding\r\n                    else:\r\n                        next_pos = pos + obj_size + (obj_size % 4)  #weird padding\r\n\r\nIn Toby Lorenz implementation the padding is handled separately for each frame type...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/782", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/782/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/782/events", "html_url": "https://github.com/hardbyte/python-can/issues/782", "id": 572706811, "node_id": "MDU6SXNzdWU1NzI3MDY4MTE=", "number": 782, "title": "Question: Having a node that listens for messages (Listener, Notifier)", "user": {"login": "aHudspith", "id": 46708446, "node_id": "MDQ6VXNlcjQ2NzA4NDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/46708446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aHudspith", "html_url": "https://github.com/aHudspith", "followers_url": "https://api.github.com/users/aHudspith/followers", "following_url": "https://api.github.com/users/aHudspith/following{/other_user}", "gists_url": "https://api.github.com/users/aHudspith/gists{/gist_id}", "starred_url": "https://api.github.com/users/aHudspith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aHudspith/subscriptions", "organizations_url": "https://api.github.com/users/aHudspith/orgs", "repos_url": "https://api.github.com/users/aHudspith/repos", "events_url": "https://api.github.com/users/aHudspith/events{/privacy}", "received_events_url": "https://api.github.com/users/aHudspith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T11:47:28Z", "updated_at": "2020-04-29T15:19:37Z", "closed_at": "2020-04-29T15:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm pretty new to this. I'm wanting to use this module to build a virtual CAN network representing part fo the CAN network of a car. It's going to be very basic, I want to have two nodes that can send messages, and one that just receives. Effectively it's going to be a node representing the break pedal, a node representing an attacker and a node representing the engine (I'm aware this is not how it works in an actual car). I'm struggling to grasp how to do this with the module. I feel like I want the \"engine\" to be a listener, but I'm struggling to see how I actually do this. I've looked at the  examples but they haven't seemed to help.\r\n\r\nAny help would be greatly appreciated :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/777", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/777/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/777/events", "html_url": "https://github.com/hardbyte/python-can/issues/777", "id": 569906130, "node_id": "MDU6SXNzdWU1Njk5MDYxMzA=", "number": 777, "title": "pcan timestamp issue", "user": {"login": "psedlos", "id": 19553143, "node_id": "MDQ6VXNlcjE5NTUzMTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/19553143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psedlos", "html_url": "https://github.com/psedlos", "followers_url": "https://api.github.com/users/psedlos/followers", "following_url": "https://api.github.com/users/psedlos/following{/other_user}", "gists_url": "https://api.github.com/users/psedlos/gists{/gist_id}", "starred_url": "https://api.github.com/users/psedlos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psedlos/subscriptions", "organizations_url": "https://api.github.com/users/psedlos/orgs", "repos_url": "https://api.github.com/users/psedlos/repos", "events_url": "https://api.github.com/users/psedlos/events{/privacy}", "received_events_url": "https://api.github.com/users/psedlos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T14:50:00Z", "updated_at": "2020-06-01T13:53:13Z", "closed_at": "2020-06-01T13:53:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I have strange issue with time for received messages. Please check code below:\r\nimport can\r\nimport time\r\n\r\nbustype = 'pcan'\r\nchannel = 'PCAN_USBBUS1'\r\nbitrate = 250000\r\n\r\nbus = can.interface.Bus(bustype = bustype, channel = channel, bitrate = bitrate)\r\nmsg = bus.recv(1)\r\nprint(msg)\r\ndiff = msg.timestamp - time.time()\r\nprint(diff)\r\n\r\nThe result should be around 0 but it is around 3600 which drive me directly to timezone, which is at my PC: time.timezone = -3600.\r\nHowever I can not find any information about configuring timezones for CAN, and I believe it should not be possible to do it.\r\n\r\nTherefore here is my question. Is python-can wrong here or I miss something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/775", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/775/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/775/events", "html_url": "https://github.com/hardbyte/python-can/issues/775", "id": 568800197, "node_id": "MDU6SXNzdWU1Njg4MDAxOTc=", "number": 775, "title": "Stop Notifier from raising an exception if it has been handled by on_error", "user": {"login": "Aajn", "id": 13387911, "node_id": "MDQ6VXNlcjEzMzg3OTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/13387911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aajn", "html_url": "https://github.com/Aajn", "followers_url": "https://api.github.com/users/Aajn/followers", "following_url": "https://api.github.com/users/Aajn/following{/other_user}", "gists_url": "https://api.github.com/users/Aajn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aajn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aajn/subscriptions", "organizations_url": "https://api.github.com/users/Aajn/orgs", "repos_url": "https://api.github.com/users/Aajn/repos", "events_url": "https://api.github.com/users/Aajn/events{/privacy}", "received_events_url": "https://api.github.com/users/Aajn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T08:05:27Z", "updated_at": "2020-05-30T15:49:44Z", "closed_at": "2020-05-30T15:49:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, when an exception is raised by a bus (e.g. bus-off) the Notifier allows listeners to handle the error with the on_error method. In the Listener documentation I can see that\r\n\r\n> This method is called to handle any exception in the receive thread\r\n\r\nBut this does not stop the Notifier from raising an exception anyway.\r\n\r\nWould it make sense to stop Notifier from raising an Exception if on_error is called or returns True, to stop this behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/772", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/772/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/772/events", "html_url": "https://github.com/hardbyte/python-can/issues/772", "id": 568415433, "node_id": "MDU6SXNzdWU1Njg0MTU0MzM=", "number": 772, "title": "PCAN filter slips up sometimes (2)", "user": {"login": "tamenol", "id": 37591107, "node_id": "MDQ6VXNlcjM3NTkxMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/37591107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamenol", "html_url": "https://github.com/tamenol", "followers_url": "https://api.github.com/users/tamenol/followers", "following_url": "https://api.github.com/users/tamenol/following{/other_user}", "gists_url": "https://api.github.com/users/tamenol/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamenol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamenol/subscriptions", "organizations_url": "https://api.github.com/users/tamenol/orgs", "repos_url": "https://api.github.com/users/tamenol/repos", "events_url": "https://api.github.com/users/tamenol/events{/privacy}", "received_events_url": "https://api.github.com/users/tamenol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-20T16:21:16Z", "updated_at": "2020-02-21T08:16:34Z", "closed_at": "2020-02-21T08:16:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I couldn't reopen the issue since I didn't close it myself. I've added my new observations in that issue.\r\n\r\n#712 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/771", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/771/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/771/events", "html_url": "https://github.com/hardbyte/python-can/issues/771", "id": 568208401, "node_id": "MDU6SXNzdWU1NjgyMDg0MDE=", "number": 771, "title": "CSVReader crashes when reading an empty file", "user": {"login": "Krensi", "id": 11628575, "node_id": "MDQ6VXNlcjExNjI4NTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11628575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Krensi", "html_url": "https://github.com/Krensi", "followers_url": "https://api.github.com/users/Krensi/followers", "following_url": "https://api.github.com/users/Krensi/following{/other_user}", "gists_url": "https://api.github.com/users/Krensi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Krensi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Krensi/subscriptions", "organizations_url": "https://api.github.com/users/Krensi/orgs", "repos_url": "https://api.github.com/users/Krensi/repos", "events_url": "https://api.github.com/users/Krensi/events{/privacy}", "received_events_url": "https://api.github.com/users/Krensi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T10:42:18Z", "updated_at": "2020-05-22T03:37:45Z", "closed_at": "2020-05-22T03:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The next statement in the __iter__ function of the class CSVReader is not inside the for loop. There for a Stopiteration error is not catched.\r\n\r\nRewriting the code like this fixes this:\r\n```python\r\ndef __iter__(self):\r\n        for (index, line) in enumerate(self.file):\r\n            if index > 0:\r\n                timestamp, arbitration_id, extended, remote, error, dlc, data = line.split(',')\r\n\r\n                yield Message(\r\n                    timestamp=float(timestamp),\r\n                    is_remote_frame=(remote == '1'),\r\n                    is_extended_id=(extended == '1'),\r\n                    is_error_frame=(error == '1'),\r\n                    arbitration_id=int(arbitration_id, base=16),\r\n                    dlc=int(dlc),\r\n                    data=b64decode(data),\r\n                )\r\n\r\n        self.stop()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/770", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/770/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/770/events", "html_url": "https://github.com/hardbyte/python-can/issues/770", "id": 567103062, "node_id": "MDU6SXNzdWU1NjcxMDMwNjI=", "number": 770, "title": "No way to log multiple channels to single BLF file.", "user": {"login": "mcdonl1", "id": 32573252, "node_id": "MDQ6VXNlcjMyNTczMjUy", "avatar_url": "https://avatars1.githubusercontent.com/u/32573252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcdonl1", "html_url": "https://github.com/mcdonl1", "followers_url": "https://api.github.com/users/mcdonl1/followers", "following_url": "https://api.github.com/users/mcdonl1/following{/other_user}", "gists_url": "https://api.github.com/users/mcdonl1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcdonl1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcdonl1/subscriptions", "organizations_url": "https://api.github.com/users/mcdonl1/orgs", "repos_url": "https://api.github.com/users/mcdonl1/repos", "events_url": "https://api.github.com/users/mcdonl1/events{/privacy}", "received_events_url": "https://api.github.com/users/mcdonl1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-18T19:17:39Z", "updated_at": "2020-02-29T17:49:53Z", "closed_at": "2020-02-29T17:49:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The BLF logging format allows for multiple channels to be logged to the same file. Currently the BLFWriter only allows writing to one channel - the channel that the logger is initialized for. There should be a way to pass in the channel of the corresponding message at write time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/768", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/768/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/768/events", "html_url": "https://github.com/hardbyte/python-can/issues/768", "id": 566630361, "node_id": "MDU6SXNzdWU1NjY2MzAzNjE=", "number": 768, "title": "Does the example receive_all.py actually receive all messages on a highly loaded bus?", "user": {"login": "AndySchroder", "id": 4065710, "node_id": "MDQ6VXNlcjQwNjU3MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4065710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndySchroder", "html_url": "https://github.com/AndySchroder", "followers_url": "https://api.github.com/users/AndySchroder/followers", "following_url": "https://api.github.com/users/AndySchroder/following{/other_user}", "gists_url": "https://api.github.com/users/AndySchroder/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndySchroder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions", "organizations_url": "https://api.github.com/users/AndySchroder/orgs", "repos_url": "https://api.github.com/users/AndySchroder/repos", "events_url": "https://api.github.com/users/AndySchroder/events{/privacy}", "received_events_url": "https://api.github.com/users/AndySchroder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T03:58:09Z", "updated_at": "2020-03-01T16:54:07Z", "closed_at": "2020-03-01T16:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does the example `receive_all.py` actually receive all on a highly loaded bus? It is unclear to me when I run `bus.recv()` if that will only catch the most recent message prior to when the function is run, or if there is some kind of buffer. It appears to me as if there is no buffer, so maybe `receive_all.py` actually just receives \"all that it can\"?\r\n\r\nEven on a lightly loaded bus, if there are three messages that burst in a short time on the bus, could I miss one of the three, if the messages are sent faster than the python loop will run (say I've got a slow CPU and/or I need to put some other things in my loop besides `bus.recv()` )?\r\n\r\nOr, on a medium loaded bus, where some messages are sent at a low frequency, is it possible I will miss a number of the low frequency messages, such that they appear to be transmitted at an even lower frequency?\r\n\r\nIf there is some kind of receive buffer, what keeps it from totally filling up the system's RAM if it is never read but there is still traffic on the bus?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/767", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/767/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/767/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/767/events", "html_url": "https://github.com/hardbyte/python-can/issues/767", "id": 563816695, "node_id": "MDU6SXNzdWU1NjM4MTY2OTU=", "number": 767, "title": "I can't get the motor moving", "user": {"login": "Gius-8", "id": 18114178, "node_id": "MDQ6VXNlcjE4MTE0MTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/18114178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gius-8", "html_url": "https://github.com/Gius-8", "followers_url": "https://api.github.com/users/Gius-8/followers", "following_url": "https://api.github.com/users/Gius-8/following{/other_user}", "gists_url": "https://api.github.com/users/Gius-8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gius-8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gius-8/subscriptions", "organizations_url": "https://api.github.com/users/Gius-8/orgs", "repos_url": "https://api.github.com/users/Gius-8/repos", "events_url": "https://api.github.com/users/Gius-8/events{/privacy}", "received_events_url": "https://api.github.com/users/Gius-8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T07:50:28Z", "updated_at": "2020-04-20T06:12:52Z", "closed_at": "2020-04-13T06:43:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nthanks to this library I was able to read and write the parameters of the motor in canopen, but I am new in canopen and I have not yet understood the procedure to follow to get the motor moving. Can someone help me?\r\nThanks so much", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/763", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/763/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/763/events", "html_url": "https://github.com/hardbyte/python-can/issues/763", "id": 560744887, "node_id": "MDU6SXNzdWU1NjA3NDQ4ODc=", "number": 763, "title": "_parse_container does not receive proper data to process", "user": {"login": "cucdat", "id": 60722722, "node_id": "MDQ6VXNlcjYwNzIyNzIy", "avatar_url": "https://avatars3.githubusercontent.com/u/60722722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cucdat", "html_url": "https://github.com/cucdat", "followers_url": "https://api.github.com/users/cucdat/followers", "following_url": "https://api.github.com/users/cucdat/following{/other_user}", "gists_url": "https://api.github.com/users/cucdat/gists{/gist_id}", "starred_url": "https://api.github.com/users/cucdat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cucdat/subscriptions", "organizations_url": "https://api.github.com/users/cucdat/orgs", "repos_url": "https://api.github.com/users/cucdat/repos", "events_url": "https://api.github.com/users/cucdat/events{/privacy}", "received_events_url": "https://api.github.com/users/cucdat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}], "state": "closed", "locked": false, "assignee": {"login": "christiansandberg", "id": 3647996, "node_id": "MDQ6VXNlcjM2NDc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3647996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiansandberg", "html_url": "https://github.com/christiansandberg", "followers_url": "https://api.github.com/users/christiansandberg/followers", "following_url": "https://api.github.com/users/christiansandberg/following{/other_user}", "gists_url": "https://api.github.com/users/christiansandberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiansandberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiansandberg/subscriptions", "organizations_url": "https://api.github.com/users/christiansandberg/orgs", "repos_url": "https://api.github.com/users/christiansandberg/repos", "events_url": "https://api.github.com/users/christiansandberg/events{/privacy}", "received_events_url": "https://api.github.com/users/christiansandberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "christiansandberg", "id": 3647996, "node_id": "MDQ6VXNlcjM2NDc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3647996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiansandberg", "html_url": "https://github.com/christiansandberg", "followers_url": "https://api.github.com/users/christiansandberg/followers", "following_url": "https://api.github.com/users/christiansandberg/following{/other_user}", "gists_url": "https://api.github.com/users/christiansandberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiansandberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiansandberg/subscriptions", "organizations_url": "https://api.github.com/users/christiansandberg/orgs", "repos_url": "https://api.github.com/users/christiansandberg/repos", "events_url": "https://api.github.com/users/christiansandberg/events{/privacy}", "received_events_url": "https://api.github.com/users/christiansandberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2020-02-06T02:46:38Z", "updated_at": "2020-02-12T02:20:58Z", "closed_at": "2020-02-11T19:45:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to use this tool to parse some blf files but there is one of them throwing me the Parsing Error.\r\nI am tried to fix it by updating the source as well as relog it with different CANalyzer Version but it cannot work so I post it here to ask for your support.\r\n\r\n--------------------------------------\r\nIssue Description: The data given to _parse_container does not start with the proper signature (LOBJ), as a consequence, the _parse_data raised the BLFParseError.\r\n![Annotation](https://user-images.githubusercontent.com/60722722/73901139-3acd7a00-48d5-11ea-9c31-8fce36719753.png)\r\n\r\nEnvironment:\r\n- Python 3.8 64bit\r\n- python-can: dev branch\r\n--------------------------------------\r\n\r\nIf you have any idea to figure out the root cause of this, kindly let me know. I will appreciate it so much.\r\nI can share with you the blf for debugging via email in case you need it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/759", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/759/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/759/events", "html_url": "https://github.com/hardbyte/python-can/issues/759", "id": 555737665, "node_id": "MDU6SXNzdWU1NTU3Mzc2NjU=", "number": 759, "title": "OSError: [WinError 126] The specified module could not be found - PCAN application", "user": {"login": "natek512", "id": 18471555, "node_id": "MDQ6VXNlcjE4NDcxNTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/18471555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natek512", "html_url": "https://github.com/natek512", "followers_url": "https://api.github.com/users/natek512/followers", "following_url": "https://api.github.com/users/natek512/following{/other_user}", "gists_url": "https://api.github.com/users/natek512/gists{/gist_id}", "starred_url": "https://api.github.com/users/natek512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natek512/subscriptions", "organizations_url": "https://api.github.com/users/natek512/orgs", "repos_url": "https://api.github.com/users/natek512/repos", "events_url": "https://api.github.com/users/natek512/events{/privacy}", "received_events_url": "https://api.github.com/users/natek512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T17:57:29Z", "updated_at": "2020-01-28T12:56:15Z", "closed_at": "2020-01-28T12:56:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all! Noob here running into an issue even creating the Bus object.\r\nI've create a virtual environment with the python-can module installed. I tried creating a Bus object via the following\r\n\r\n```\r\nimport can\r\n\r\nbus = can.interface.Bus(bustype='pcan', channel='PCAN_USBBUS1', bitrate=250000)\r\n```\r\n\r\nand this is the error I receive:\r\n\r\n```\r\nrunfile('C:/Documents/Python Scripts/can_api_tutorial.py', wdir='C:Documents/Python Scripts')\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Documents\\Python Scripts\\can_api_tutorial.py\", line 17, in <module>\r\n    bus = can.interface.Bus(bustype='pcan', channel='PCAN_USBBUS1', bitrate=250000)\r\n\r\n  File \"C:\\.conda\\envs\\CANenv\\lib\\site-packages\\can\\interface.py\", line 127, in __new__\r\n    return cls(channel, *args, **config)\r\n\r\n  File \"C:\\.conda\\envs\\CANenv\\lib\\site-packages\\can\\interfaces\\pcan\\pcan.py\", line 97, in __init__\r\n    self.m_objPCANBasic = PCANBasic()\r\n\r\n  File \"C:\\.conda\\envs\\CANenv\\lib\\site-packages\\can\\interfaces\\pcan\\basic.py\", line 359, in __init__\r\n    self.__m_dllBasic = windll.LoadLibrary(\"PCANBasic\")\r\n\r\n  File \"C:\\.conda\\envs\\CANenv\\lib\\ctypes\\__init__.py\", line 426, in LoadLibrary\r\n    return self._dlltype(name)\r\n\r\n  File \"C:\\.conda\\envs\\CANenv\\lib\\ctypes\\__init__.py\", line 348, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\n\r\nOSError: [WinError 126] The specified module could not be found\r\n```\r\nPretty new to this so sorry if this is a silly question Thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/758", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/758/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/758/events", "html_url": "https://github.com/hardbyte/python-can/issues/758", "id": 552766814, "node_id": "MDU6SXNzdWU1NTI3NjY4MTQ=", "number": 758, "title": "help with a config", "user": {"login": "maltsevvv", "id": 24542923, "node_id": "MDQ6VXNlcjI0NTQyOTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/24542923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maltsevvv", "html_url": "https://github.com/maltsevvv", "followers_url": "https://api.github.com/users/maltsevvv/followers", "following_url": "https://api.github.com/users/maltsevvv/following{/other_user}", "gists_url": "https://api.github.com/users/maltsevvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/maltsevvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maltsevvv/subscriptions", "organizations_url": "https://api.github.com/users/maltsevvv/orgs", "repos_url": "https://api.github.com/users/maltsevvv/repos", "events_url": "https://api.github.com/users/maltsevvv/events{/privacy}", "received_events_url": "https://api.github.com/users/maltsevvv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-21T09:56:48Z", "updated_at": "2020-01-28T10:23:37Z", "closed_at": "2020-01-28T10:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "config with Python-can1.4.3 works.\r\n```\r\n#!python\r\n#\r\nfrom __future__ import print_function\r\nimport time\r\nimport os\r\nimport sys\r\nimport threading\r\nimport can\r\ncan.rc['interface'] = 'socketcan_ctypes'\r\nfrom threading import Thread, Timer\r\nfrom can.interfaces.interface import Bus\r\ncan_interface = 'can0'\r\n\r\nglobal var\r\nvar=1\r\n\r\ndef dumpcan():\r\n    global var\r\n    for message in Bus(can_interface):\r\n        if var==1:\r\n            msg = unicode(message).encode('utf +8')\r\n            canid = msg[26:29]\r\n            msg = msg[45:69]\r\n            if canid == (\"464\"):\r\n                if msg == (\"e0 01 00\"):\r\n                    bus = can.interface.Bus()\r\n                    msg = can.Message(arbitration_id=0x264, data=[0xa0, 0x01, 0x00], extended_id=False)\r\n                    bus.send(msg)\r\n                if msg == (\"a1 01\"):\r\n                    bus = can.interface.Bus()\r\n                    msg = can.Message(arbitration_id=0x264, data=[0x10, 0x15, 0x01, 0x00, 0x02, 0x00, 0x00], extended_id=False)\r\n                    bus.send(msg)\r\ndumpcan()\r\n```  \r\n\r\n\r\n I ask for your help, with a change for python-can 3.3.2   \r\n\r\n` from can.interfaces.interface import Bus ImportError: No module named interface`\r\n\r\nand how to add a parameter here. if there are no messages from 464, then send 01010101 only once?\r\n\r\nSorry to ask here. And thanks in advance\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/757", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/757/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/757/events", "html_url": "https://github.com/hardbyte/python-can/issues/757", "id": 552498217, "node_id": "MDU6SXNzdWU1NTI0OTgyMTc=", "number": 757, "title": "Increased filter ability", "user": {"login": "vitali-mueller", "id": 53529781, "node_id": "MDQ6VXNlcjUzNTI5Nzgx", "avatar_url": "https://avatars3.githubusercontent.com/u/53529781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitali-mueller", "html_url": "https://github.com/vitali-mueller", "followers_url": "https://api.github.com/users/vitali-mueller/followers", "following_url": "https://api.github.com/users/vitali-mueller/following{/other_user}", "gists_url": "https://api.github.com/users/vitali-mueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitali-mueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitali-mueller/subscriptions", "organizations_url": "https://api.github.com/users/vitali-mueller/orgs", "repos_url": "https://api.github.com/users/vitali-mueller/repos", "events_url": "https://api.github.com/users/vitali-mueller/events{/privacy}", "received_events_url": "https://api.github.com/users/vitali-mueller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-20T20:35:17Z", "updated_at": "2020-04-23T06:58:51Z", "closed_at": "2020-04-23T06:58:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\r\n\r\nI'm working with a CAN-shield to read out HEX-Codes within an electric vehicle (socketcan).\r\nI sent all the HEX-Codes I needed, and I get a correct response after manually transform the HEX-code to a decimal number.\r\nFor example I expect following received message:\r\n`can_id: 0x607`\r\n`data: [0xF1 , 0x06, 0x62, 0xDD, 0xC4 0x22, 0xC9 , 0x01]`\r\n\r\nSo first approach with the bus.set_filters was working.\r\n`bus.set_filters([{\"can_id\": 0x607, \"can_mask\":0xF1, \"extended\": False}])`\r\n\r\nOnly the messages from the bus did arrive, but also some other unrelevant messages, which disturb my following system.\r\nI tried to use an array for the can_mask but it just delivers me an error.\r\nIs there a possibility to extend the filter, so I can filter more bytes? Like `[0xF1 , 0x06, 0x62, 0xDD]`?\r\nAnd for information, if I change the can_mask to 0xF4 or another number in the end, the filter still gives me back 0xF1.\r\n\r\n\r\nFor my project, I want to have only the HEX-Code as response without any other things like timestamp or DLC. Is there a possibility to delete these columns or only grab the HEX-Code?\r\nI saw following code in socketcan.py row 195 (new code at row 172):\r\n`data = bytes(msg.data).ljust(max_len, b'\\x00)`\r\nIs this somehow possible to use this code to get the answer from the bus only, instead of `bus.recv()`?\r\n\r\nI'm a bloody python newbie btw...\r\n\r\nThanks and best regards,\r\nVitali\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/756", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/756/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/756/events", "html_url": "https://github.com/hardbyte/python-can/issues/756", "id": 549571494, "node_id": "MDU6SXNzdWU1NDk1NzE0OTQ=", "number": 756, "title": "UniqueHardwareId parameter for Ixxat is not working with Python27", "user": {"login": "josef-vachal", "id": 59875021, "node_id": "MDQ6VXNlcjU5ODc1MDIx", "avatar_url": "https://avatars3.githubusercontent.com/u/59875021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josef-vachal", "html_url": "https://github.com/josef-vachal", "followers_url": "https://api.github.com/users/josef-vachal/followers", "following_url": "https://api.github.com/users/josef-vachal/following{/other_user}", "gists_url": "https://api.github.com/users/josef-vachal/gists{/gist_id}", "starred_url": "https://api.github.com/users/josef-vachal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josef-vachal/subscriptions", "organizations_url": "https://api.github.com/users/josef-vachal/orgs", "repos_url": "https://api.github.com/users/josef-vachal/repos", "events_url": "https://api.github.com/users/josef-vachal/events{/privacy}", "received_events_url": "https://api.github.com/users/josef-vachal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T13:34:53Z", "updated_at": "2020-04-29T15:27:52Z", "closed_at": "2020-04-29T15:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error when using the UniqueHardwareId parameter:\r\n`File \"build\\bdist.win32\\egg\\can\\interfaces\\ixxat\\canlib.py\", line 331, in __init__\r\n    if (UniqueHardwareId is None) or (self._device_info.UniqueHardwareId.AsChar == bytes(UniqueHardwareId, 'ascii')):\r\nTypeError: str() takes at most 1 argument (2 given)`\r\n\r\nIt might be wrong refactoring of code for Python27. In the code (File can\\interfaces\\ixxat\\canlib.py), there is actually this:\r\n`if (UniqueHardwareId is None) or (self._device_info.UniqueHardwareId.AsChar == bytes(UniqueHardwareId, 'ascii')):`\r\n\r\nwhich, I think, is not correct for Python27. I replaced it with this:\r\n`if (UniqueHardwareId is None) or (self._device_info.UniqueHardwareId.AsChar == bytes(UniqueHardwareId.encode('ascii'))):`\r\n\r\nand it is working now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/748", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/748/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/748/events", "html_url": "https://github.com/hardbyte/python-can/issues/748", "id": 543802774, "node_id": "MDU6SXNzdWU1NDM4MDI3NzQ=", "number": 748, "title": "Issue in writing the data from Peak CAN", "user": {"login": "Poornima-23", "id": 41415233, "node_id": "MDQ6VXNlcjQxNDE1MjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/41415233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Poornima-23", "html_url": "https://github.com/Poornima-23", "followers_url": "https://api.github.com/users/Poornima-23/followers", "following_url": "https://api.github.com/users/Poornima-23/following{/other_user}", "gists_url": "https://api.github.com/users/Poornima-23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Poornima-23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Poornima-23/subscriptions", "organizations_url": "https://api.github.com/users/Poornima-23/orgs", "repos_url": "https://api.github.com/users/Poornima-23/repos", "events_url": "https://api.github.com/users/Poornima-23/events{/privacy}", "received_events_url": "https://api.github.com/users/Poornima-23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T09:02:50Z", "updated_at": "2020-01-04T15:56:18Z", "closed_at": "2020-01-04T15:56:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/746", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/746/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/746/events", "html_url": "https://github.com/hardbyte/python-can/issues/746", "id": 543348275, "node_id": "MDU6SXNzdWU1NDMzNDgyNzU=", "number": 746, "title": "Tests fail on develop", "user": {"login": "marcel-kanter", "id": 1293692, "node_id": "MDQ6VXNlcjEyOTM2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1293692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcel-kanter", "html_url": "https://github.com/marcel-kanter", "followers_url": "https://api.github.com/users/marcel-kanter/followers", "following_url": "https://api.github.com/users/marcel-kanter/following{/other_user}", "gists_url": "https://api.github.com/users/marcel-kanter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcel-kanter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcel-kanter/subscriptions", "organizations_url": "https://api.github.com/users/marcel-kanter/orgs", "repos_url": "https://api.github.com/users/marcel-kanter/repos", "events_url": "https://api.github.com/users/marcel-kanter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcel-kanter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-29T09:56:52Z", "updated_at": "2020-02-02T16:02:47Z", "closed_at": "2020-02-02T16:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using commit dcd694efb56d503ed9387edc5cfba9c523d559bf the tests fail.\r\nWindows 10 Pro Version 1909\r\nPython 3.7.6, pytest-5.3.2, py-1.8.1, pluggy-0.13.1\r\npytest plugins: timeout-1.3.3, cov-2.8.1, hypothesis-4.57.0\r\n\r\noutput of python setup.py test:\r\n\r\ntest/test_message_class.py::TestMessageClass::test_methods PASSED        [ 62%]\r\ntest/test_message_filtering.py::TestMessageFiltering::test_match_all PASSED [ 62%]\r\ntest/test_message_filtering.py::TestMessageFiltering::test_match_example_message PASSED [ 63%]\r\ntest/test_message_filtering.py::TestMessageFiltering::test_match_filters_is_empty PASSED [ 63%]\r\ntest/test_message_sync.py::TestMessageSync::test_general PASSED          [ 64%]\r\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\r\n\r\n\r\nAfter commenting out the pytest timeout detorator for the test, it results in:\r\n\r\ntest/simplecyclic_test.py::SimpleCyclicSendTaskTest::test_cycle_time FAILED [ 42%]\r\ntest/test_scripts.py::TestLoggerScript::test_do_commands_exist FAILED    [ 72%]\r\ntest/test_scripts.py::TestPlayerScript::test_do_commands_exist FAILED    [ 73%]\r\n================= 3 failed, 194 passed, 29 skipped in 36.53s ==================\r\n================================== FAILURES ===================================\r\n__________________ SimpleCyclicSendTaskTest.test_cycle_time ___________________\r\n\r\nself = <test.simplecyclic_test.SimpleCyclicSendTaskTest testMethod=test_cycle_time>\r\n\r\n    @unittest.skipIf(\r\n        IS_CI,\r\n        \"the timing sensitive behaviour cannot be reproduced reliably on a CI server\",\r\n    )\r\n    def test_cycle_time(self):\r\n        msg = can.Message(\r\n            is_extended_id=False, arbitration_id=0x123, data=[0, 1, 2, 3, 4, 5, 6, 7]\r\n        )\r\n    \r\n        with can.interface.Bus(bustype=\"virtual\") as bus1:\r\n            with can.interface.Bus(bustype=\"virtual\") as bus2:\r\n    \r\n                # disabling the garbage collector makes the time readings more reliable\r\n                gc.disable()\r\n    \r\n                task = bus1.send_periodic(msg, 0.01, 1)\r\n                self.assertIsInstance(task, can.broadcastmanager.CyclicSendTaskABC)\r\n    \r\n                sleep(2)\r\n                size = bus2.queue.qsize()\r\n                # About 100 messages should have been transmitted\r\n                self.assertTrue(\r\n                    80 <= size <= 120,\r\n                    \"100 +/- 20 messages should have been transmitted. But queue contained {}\".format(\r\n>                       size\r\n                    ),\r\n                )\r\nE               AssertionError: False is not true : 100 +/- 20 messages should have been transmitted. But queue contained 66\r\n\r\ntest\\simplecyclic_test.py:49: AssertionError\r\n___________________ TestLoggerScript.test_do_commands_exist ___________________\r\n\r\nself = <test.test_scripts.TestLoggerScript testMethod=test_do_commands_exist>\r\n\r\n    def test_do_commands_exist(self):\r\n        \"\"\"This test calls each scripts once and verifies that the help\r\n        can be read without any other errors, like the script not being\r\n        found.\r\n        \"\"\"\r\n        for command in self._commands():\r\n            try:\r\n                subprocess.check_output(command.split(), stderr=subprocess.STDOUT)\r\n            except subprocess.CalledProcessError as e:\r\n                return_code = e.returncode\r\n                output = e.output\r\n            else:\r\n                return_code = 0\r\n                output = \"-- NO OUTPUT --\"\r\n    \r\n            allowed = [0, errno.EINVAL]\r\n            self.assertIn(\r\n                return_code,\r\n                allowed,\r\n                'Calling \"{}\" failed (exit code was {} and not SUCCESS/0 or EINVAL/22):\\n{}'.format(\r\n>                   command, return_code, output\r\n                ),\r\n            )\r\nE           AssertionError: 1 not found in [0, 22] : Calling \"python -m can.logger --help\" failed (exit code was 1 and not SUCCESS/0 or EINVAL/22):\r\nE           b'Traceback (most recent call last):\\r\\n  File \"C:\\\\Program Files\\\\Python37\\\\lib\\\\runpy.py\", line 183, in _run_module_as_main\\r\\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\\r\\n  File \"C:\\\\Program Files\\\\Python37\\\\lib\\\\runpy.py\", line 109, in _get_module_details\\r\\n    __import__(pkg_name)\\r\\n  File \"D:\\\\git\\\\python-can\\\\can\\\\__init__.py\", line 7, in <module>\\r\\n    from typing import Dict, Any\\r\\n  File \"c:\\\\program files\\\\python37\\\\lib\\\\site-packages\\\\typing.py\", line 1357, in <module>\\r\\n    class Callable(extra=collections_abc.Callable, metaclass=CallableMeta):\\r\\n  File \"c:\\\\program files\\\\python37\\\\lib\\\\site-packages\\\\typing.py\", line 1005, in __new__\\r\\n    self._abc_registry = extra._abc_registry\\r\\nAttributeError: type object \\'Callable\\' has no attribute \\'_abc_registry\\'\\r\\n'\r\n\r\ntest\\test_scripts.py:44: AssertionError\r\n___________________ TestPlayerScript.test_do_commands_exist ___________________\r\n\r\nself = <test.test_scripts.TestPlayerScript testMethod=test_do_commands_exist>\r\n\r\n    def test_do_commands_exist(self):\r\n        \"\"\"This test calls each scripts once and verifies that the help\r\n        can be read without any other errors, like the script not being\r\n        found.\r\n        \"\"\"\r\n        for command in self._commands():\r\n            try:\r\n                subprocess.check_output(command.split(), stderr=subprocess.STDOUT)\r\n            except subprocess.CalledProcessError as e:\r\n                return_code = e.returncode\r\n                output = e.output\r\n            else:\r\n                return_code = 0\r\n                output = \"-- NO OUTPUT --\"\r\n    \r\n            allowed = [0, errno.EINVAL]\r\n            self.assertIn(\r\n                return_code,\r\n                allowed,\r\n                'Calling \"{}\" failed (exit code was {} and not SUCCESS/0 or EINVAL/22):\\n{}'.format(\r\n>                   command, return_code, output\r\n                ),\r\n            )\r\nE           AssertionError: 1 not found in [0, 22] : Calling \"python -m can.player --help\" failed (exit code was 1 and not SUCCESS/0 or EINVAL/22):\r\nE           b'Traceback (most recent call last):\\r\\n  File \"C:\\\\Program Files\\\\Python37\\\\lib\\\\runpy.py\", line 183, in _run_module_as_main\\r\\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\\r\\n  File \"C:\\\\Program Files\\\\Python37\\\\lib\\\\runpy.py\", line 109, in _get_module_details\\r\\n    __import__(pkg_name)\\r\\n  File \"D:\\\\git\\\\python-can\\\\can\\\\__init__.py\", line 7, in <module>\\r\\n    from typing import Dict, Any\\r\\n  File \"c:\\\\program files\\\\python37\\\\lib\\\\site-packages\\\\typing.py\", line 1357, in <module>\\r\\n    class Callable(extra=collections_abc.Callable, metaclass=CallableMeta):\\r\\n  File \"c:\\\\program files\\\\python37\\\\lib\\\\site-packages\\\\typing.py\", line 1005, in __new__\\r\\n    self._abc_registry = extra._abc_registry\\r\\nAttributeError: type object \\'Callable\\' has no attribute \\'_abc_registry\\'\\r\\n'\r\n\r\ntest\\test_scripts.py:44: AssertionError", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/744", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/744/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/744/events", "html_url": "https://github.com/hardbyte/python-can/issues/744", "id": 539397969, "node_id": "MDU6SXNzdWU1MzkzOTc5Njk=", "number": 744, "title": "send_periodic for multiple messages", "user": {"login": "khvalov", "id": 2668527, "node_id": "MDQ6VXNlcjI2Njg1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khvalov", "html_url": "https://github.com/khvalov", "followers_url": "https://api.github.com/users/khvalov/followers", "following_url": "https://api.github.com/users/khvalov/following{/other_user}", "gists_url": "https://api.github.com/users/khvalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/khvalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khvalov/subscriptions", "organizations_url": "https://api.github.com/users/khvalov/orgs", "repos_url": "https://api.github.com/users/khvalov/repos", "events_url": "https://api.github.com/users/khvalov/events{/privacy}", "received_events_url": "https://api.github.com/users/khvalov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T01:24:12Z", "updated_at": "2019-12-18T03:19:34Z", "closed_at": "2019-12-18T03:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have to pull some ODB-II related data periodicaly, like Speed every 1 second, rpm every 2nd second, temp every X second. \r\nWhen I doing:\r\n```\r\n#Calculated engine load\r\n    msg = can.Message(arbitration_id=0x7df,data=[0x2, 0x1, 0x4, 0x55, 0x55, 0x55, 0x55, 0x55],extended_id=False)\r\n    bus.send_periodic(msg, 2)\r\n    #Engine coolant temperature\r\n    msg = can.Message(arbitration_id=0x7df,data=[0x2, 0x1, 0x5, 0x55, 0x55, 0x55, 0x55, 0x55],extended_id=False)\r\n    bus.send_periodic(msg, 10)\r\n    #Fuel pressure\r\n    msg = can.Message(arbitration_id=0x7df,data=[0x2, 0x1, 0xa, 0x55, 0x55, 0x55, 0x55, 0x55],extended_id=False)\r\n    bus.send_periodic(msg, 10)\r\n```\r\nlooks like the periodic params overrided and run only the last one. \r\nSo what is the best way to run multiple send_periodic messages ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/743", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/743/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/743/events", "html_url": "https://github.com/hardbyte/python-can/issues/743", "id": 536971820, "node_id": "MDU6SXNzdWU1MzY5NzE4MjA=", "number": 743, "title": "ThreadBasedCyclicSendTask stops when any error happens on CAN bus", "user": {"login": "tysonite", "id": 196535, "node_id": "MDQ6VXNlcjE5NjUzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/196535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tysonite", "html_url": "https://github.com/tysonite", "followers_url": "https://api.github.com/users/tysonite/followers", "following_url": "https://api.github.com/users/tysonite/following{/other_user}", "gists_url": "https://api.github.com/users/tysonite/gists{/gist_id}", "starred_url": "https://api.github.com/users/tysonite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tysonite/subscriptions", "organizations_url": "https://api.github.com/users/tysonite/orgs", "repos_url": "https://api.github.com/users/tysonite/repos", "events_url": "https://api.github.com/users/tysonite/events{/privacy}", "received_events_url": "https://api.github.com/users/tysonite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741913, "node_id": "MDU6TGFiZWw0NDg3NDE5MTM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-12T13:16:27Z", "updated_at": "2020-05-27T18:27:02Z", "closed_at": "2020-05-27T18:27:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to have a discussion over implementation of `ThreadBasedCyclicSendTask`. The issue there is that if any kind of error happens on the CAN bus, it terminate itself:\r\n\r\nhttps://github.com/hardbyte/python-can/blob/b0d74607de0e411ea3b19347cee20cf8ccba0dcd/can/broadcastmanager.py#L251-L253\r\n\r\nI see few issues there:\r\n1. The user (application code actually) is not notified if error happens (`bus.send()` fires exception) during sending periodic messages in `ThreadBasedCyclicSendTask`, thus application can't handle it properly, for example, restart periodic task after some time. Do I miss something and is this possible?\r\n\r\n2. It contradicts with a behavior of, for example, SocketCAN implementation of `send_periodic` as it moves responsibility of sending periodic messages to the kernel level, and it is expected that error handling will be done inside the kernel. As tests show, if error on CAN bus happens during usage of native periodic implementation, the periodic tasks are still there and it covers after some time.\r\n\r\nAny thoughts on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/742", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/742/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/742/events", "html_url": "https://github.com/hardbyte/python-can/issues/742", "id": 536712712, "node_id": "MDU6SXNzdWU1MzY3MTI3MTI=", "number": 742, "title": "Discard error frames to be saved by SqliteWriter", "user": {"login": "khvalov", "id": 2668527, "node_id": "MDQ6VXNlcjI2Njg1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2668527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khvalov", "html_url": "https://github.com/khvalov", "followers_url": "https://api.github.com/users/khvalov/followers", "following_url": "https://api.github.com/users/khvalov/following{/other_user}", "gists_url": "https://api.github.com/users/khvalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/khvalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khvalov/subscriptions", "organizations_url": "https://api.github.com/users/khvalov/orgs", "repos_url": "https://api.github.com/users/khvalov/repos", "events_url": "https://api.github.com/users/khvalov/events{/privacy}", "received_events_url": "https://api.github.com/users/khvalov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T02:00:23Z", "updated_at": "2020-04-29T15:37:36Z", "closed_at": "2020-04-29T15:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to save into Sqlite (SqliteWriter process) only valid messages passed thru the filter. \r\nAt this moment I have in DB mix of messages passed the filter and error messages. Is any way to discard error messages to be saved into the DB ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/738", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/738/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/738/events", "html_url": "https://github.com/hardbyte/python-can/issues/738", "id": 534188743, "node_id": "MDU6SXNzdWU1MzQxODg3NDM=", "number": 738, "title": "Incorrect pypi wheel which might destroy other packages", "user": {"login": "chrisoro", "id": 4160557, "node_id": "MDQ6VXNlcjQxNjA1NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4160557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisoro", "html_url": "https://github.com/chrisoro", "followers_url": "https://api.github.com/users/chrisoro/followers", "following_url": "https://api.github.com/users/chrisoro/following{/other_user}", "gists_url": "https://api.github.com/users/chrisoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisoro/subscriptions", "organizations_url": "https://api.github.com/users/chrisoro/orgs", "repos_url": "https://api.github.com/users/chrisoro/repos", "events_url": "https://api.github.com/users/chrisoro/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-06T18:16:36Z", "updated_at": "2020-05-22T03:41:01Z", "closed_at": "2020-05-22T03:41:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When installing your released pypi packaged it will install the following taken from RECORD:\r\n\r\n> ../../Scripts/__pycache__/can_logger.cpython-37.pyc,,\r\n> ../../Scripts/__pycache__/can_player.cpython-37.pyc,,\r\n> ../../Scripts/__pycache__/can_viewer.cpython-37.pyc,,\r\n> ../../Scripts/can_logger.py,sha256=mLcSR0czHD0kWfA-zRXy_VT64OsiJewRfvtcQB1lL38,166\r\n> ../../Scripts/can_player.py,sha256=PW1zDei0tTGKpqRQLw1ZSyiMyuZM2R7p9Iwzks2EUYo,166\r\n> ../../Scripts/can_viewer.py,sha256=2iiEVNNM6WBhiBOLwHWPU9qn4Sq0R38AJxTBtjjfZQA,166\r\n> can/CAN.py,sha256=gm1FzhF3QVj_5W7HQkPrhIkZrqAb13vi9S6Rxicuuh8,941\r\n> can/__init__.py,sha256=UaX_PSKHNZbHRg9visUW5k1wWj0CbjlC3CCgpqoBONo,1227\r\n> can/__pycache__/CAN.cpython-37.pyc,,\r\n> can/__pycache__/__init__.cpython-37.pyc,,\r\n> can/__pycache__/broadcastmanager.cpython-37.pyc,,\r\n> can/__pycache__/bus.cpython-37.pyc,,\r\n> can/__pycache__/ctypesutil.cpython-37.pyc,,\r\n> can/__pycache__/interface.cpython-37.pyc,,\r\n> can/__pycache__/listener.cpython-37.pyc,,\r\n> can/__pycache__/logger.cpython-37.pyc,,\r\n> can/__pycache__/message.cpython-37.pyc,,\r\n> can/__pycache__/notifier.cpython-37.pyc,,\r\n> can/__pycache__/player.cpython-37.pyc,,\r\n> can/__pycache__/thread_safe_bus.cpython-37.pyc,,\r\n> can/__pycache__/util.cpython-37.pyc,,\r\n> can/__pycache__/viewer.cpython-37.pyc,,\r\n> can/broadcastmanager.py,sha256=aK7ACLJqXEijHfAp6HFZxhlQRQAe0V_y-lo6Sh2RAqk,5184\r\n> can/bus.py,sha256=zRnIsqI8u42DoIN5Gk9KK3LN4O7tDrbwEvcnI8_P27w,13594\r\n> can/ctypesutil.py,sha256=0gXuSRHeUvliDZpgRAY4HwR9b58ZFM4RORqpBN_C4to,2826\r\n> can/interface.py,sha256=W7G9_HxF9iODgHHpF4yT5GEK1ZNBdtvdMac98HHBmuc,6049\r\n> can/interfaces/__init__.py,sha256=v9jv3MnHx50bmDfYF_73RF3fBbhwVVzJqRCdUTirnwg,1863\r\n> can/interfaces/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/__pycache__/canalystii.cpython-37.pyc,,\r\n> can/interfaces/__pycache__/iscan.cpython-37.pyc,,\r\n> can/interfaces/__pycache__/nican.cpython-37.pyc,,\r\n> can/interfaces/__pycache__/slcan.cpython-37.pyc,,\r\n> can/interfaces/__pycache__/virtual.cpython-37.pyc,,\r\n> can/interfaces/canalystii.py,sha256=26sM44vjeqhvueo8-k7gTN3O_J0_F9LYEFwuIBzsb14,5292\r\n> can/interfaces/ics_neovi/__init__.py,sha256=L9JPBhdEszuLZF1PX8DSWTUkwsUU3TP2WVsSi0zzWNo,82\r\n> can/interfaces/ics_neovi/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/ics_neovi/__pycache__/neovi_bus.cpython-37.pyc,,\r\n> can/interfaces/ics_neovi/neovi_bus.py,sha256=NpXt4IifSGLzWHx4HjpPFY9tJeXxQLhjkHeG0He1_Ow,12375\r\n> can/interfaces/iscan.py,sha256=cBaDWCl8WwW6DfOCRFBFhHwX2wE7DklBOPd-W0KDp2Y,5740\r\n> can/interfaces/ixxat/__init__.py,sha256=9mPf6xj7g2e3VHq7QAS1_Ni3bvbb57JyMYusw8YsP-4,222\r\n> can/interfaces/ixxat/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/ixxat/__pycache__/canlib.cpython-37.pyc,,\r\n> can/interfaces/ixxat/__pycache__/constants.cpython-37.pyc,,\r\n> can/interfaces/ixxat/__pycache__/exceptions.cpython-37.pyc,,\r\n> can/interfaces/ixxat/__pycache__/structures.cpython-37.pyc,,\r\n> can/interfaces/ixxat/canlib.py,sha256=Gra7biamkXIEylOsvkRLCrFQPmFvd5zmz2hHPI0rDUk,28099\r\n> can/interfaces/ixxat/constants.py,sha256=_lT2lN6z6H0Tt2WdlNj5oAbQE441CmOZFlIShjEfqG8,4537\r\n> can/interfaces/ixxat/exceptions.py,sha256=2qqzBT0Usr7IGmQOFfkPg3erjSgKX4T0GjNTRxFXSaY,726\r\n> can/interfaces/ixxat/structures.py,sha256=5qJeo0aHFnkEHidIn-lW86kLzjSZi8A_sLiX9Du1tIM,4573\r\n> can/interfaces/kvaser/__init__.py,sha256=ri6sk6zxt74cpch8dnM3i-jFYSteG_blgVWUgBiboG0,69\r\n> can/interfaces/kvaser/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/kvaser/__pycache__/canlib.cpython-37.pyc,,\r\n> can/interfaces/kvaser/__pycache__/constants.cpython-37.pyc,,\r\n> can/interfaces/kvaser/__pycache__/structures.cpython-37.pyc,,\r\n> can/interfaces/kvaser/canlib.py,sha256=V-n8okDdYSQmJNDmSshqcxOx5XzHH2w49Sp6DGXan3Y,25968\r\n> can/interfaces/kvaser/constants.py,sha256=BAhuf9BOlzidGgJBKzaJc02U5-Bo_Uy9aKtkjsst2GM,6918\r\n> can/interfaces/kvaser/structures.py,sha256=FaMFbdFtZVTxopvh0IOgYSWO6sArJ_mlXfI4cahV2nE,2021\r\n> can/interfaces/nican.py,sha256=y_RPLVSdYgpSIeGQNKrlF6qsntsPh5rDE4t5CDtmiU0,10909\r\n> can/interfaces/pcan/__init__.py,sha256=Vg9ZLRxX6muTOCHqqAdsANC4Zexjg2PRBUs9dA3VgMo,71\r\n> can/interfaces/pcan/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/pcan/__pycache__/basic.cpython-37.pyc,,\r\n> can/interfaces/pcan/__pycache__/pcan.cpython-37.pyc,,\r\n> can/interfaces/pcan/basic.py,sha256=Gy0wB5z6eRQeojBoj-UAU7QSYggkxADTyYjA2uTYfcU,35390\r\n> can/interfaces/pcan/pcan.py,sha256=5SqkTWHW6WuvSzVqa54gjHAxpGGHTa5A5iPYmVgVXo4,15528\r\n> can/interfaces/serial/__init__.py,sha256=Xje2qNOlrcpJOcLPz3UdU4x5Y7ygRW9Mj63bpmSGoHQ,88\r\n> can/interfaces/serial/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/serial/__pycache__/serial_can.cpython-37.pyc,,\r\n> can/interfaces/serial/serial_can.py,sha256=WKhAUl035QpQpKC-0R5SjGmj1sMknXxjKBrHJlqcnBk,4913\r\n> can/interfaces/slcan.py,sha256=vw-BH_fH3dzwaaxxkV-58HvMMgdgIKRs2ceM_4egMaI,6215\r\n> can/interfaces/socketcan/__init__.py,sha256=rzKAQK4sZQfREFEPXyGw-xDu55o_yMnN5j-oy229hnI,192\r\n> can/interfaces/socketcan/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/socketcan/__pycache__/constants.cpython-37.pyc,,\r\n> can/interfaces/socketcan/__pycache__/socketcan.cpython-37.pyc,,\r\n> can/interfaces/socketcan/__pycache__/utils.cpython-37.pyc,,\r\n> can/interfaces/socketcan/constants.py,sha256=ToxIlLITDueU_o7XwXig7E4mq642qrJ9gpBxXzx0a0A,1307\r\n> can/interfaces/socketcan/socketcan.py,sha256=oavomN5ICY6zhNfXfkJ_r-gcnVltJv5AFYYIj92SKjo,25667\r\n> can/interfaces/socketcan/utils.py,sha256=1jCyQ9TK9skPE03O_mJTENtncRM6H5eyKkq-i2FhYhc,2760\r\n> can/interfaces/systec/__init__.py,sha256=2AsMFEEi5Mt0BNfVHqIX7e6boyYP_gu08YzQJmBrl54,76\r\n> can/interfaces/systec/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/systec/__pycache__/constants.cpython-37.pyc,,\r\n> can/interfaces/systec/__pycache__/exceptions.cpython-37.pyc,,\r\n> can/interfaces/systec/__pycache__/structures.cpython-37.pyc,,\r\n> can/interfaces/systec/__pycache__/ucan.cpython-37.pyc,,\r\n> can/interfaces/systec/__pycache__/ucanbus.cpython-37.pyc,,\r\n> can/interfaces/systec/constants.py,sha256=dgObXkNjrXIoT3ywbjuwj5QOjngtCPsq97_pHuba6L0,22744\r\n> can/interfaces/systec/exceptions.py,sha256=dGRhM5Eish58frlbUNgg9oiG05M0yW0PCh9PPCrcXdE,5088\r\n> can/interfaces/systec/structures.py,sha256=-g6e8wm95P31oIRiRRltkMbkk7PRmRGcJJ-9a7e-Sto,11753\r\n> can/interfaces/systec/ucan.py,sha256=ZfIYCkf6ooHacU9n_GpXXql0N1oDlOhcyNrzO-FG89E,45620\r\n> can/interfaces/systec/ucanbus.py,sha256=RQIvi34GJkUq9Xak24yL8-Cy6hwhPvCSlBqN-3FkuGY,9678\r\n> can/interfaces/usb2can/__init__.py,sha256=v9r46sGvr9mlgQ4heCdSR2kjA7dASONGGoLO09NuMOM,168\r\n> can/interfaces/usb2can/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/usb2can/__pycache__/serial_selector.cpython-37.pyc,,\r\n> can/interfaces/usb2can/__pycache__/usb2canInterface.cpython-37.pyc,,\r\n> can/interfaces/usb2can/__pycache__/usb2canabstractionlayer.cpython-37.pyc,,\r\n> can/interfaces/usb2can/serial_selector.py,sha256=xUbNhgoHetFaUmcT-Tp6Ykk_4H5kqoqMgYMSt7hTT0Q,1414\r\n> can/interfaces/usb2can/usb2canInterface.py,sha256=RXP9SwzQQ-qFzK91BLJOfR4uV49GlsTeh6uGWyetlzI,5380\r\n> can/interfaces/usb2can/usb2canabstractionlayer.py,sha256=Luf_0w6E0PV4NwthCgD0irbTozJKcWpwS6LcCPaqsF8,5650\r\n> can/interfaces/vector/__init__.py,sha256=Q5KI_BDFSU81LXVzT1x56nMjrdjxjMKds2ZkvbTF4zs,92\r\n> can/interfaces/vector/__pycache__/__init__.cpython-37.pyc,,\r\n> can/interfaces/vector/__pycache__/canlib.cpython-37.pyc,,\r\n> can/interfaces/vector/__pycache__/exceptions.cpython-37.pyc,,\r\n> can/interfaces/vector/__pycache__/vxlapi.cpython-37.pyc,,\r\n> can/interfaces/vector/canlib.py,sha256=lj27bPvtgyPjonzCuq-27a8-ZvDprh4oZ6ijBm_9Kfw,17612\r\n> can/interfaces/vector/exceptions.py,sha256=S3amitAXb1ePMLaqHdg1z8EqXCbBHc09RZTMHRVSi_s,287\r\n> can/interfaces/vector/vxlapi.py,sha256=oZb3OH6SMqF5fPWDdqsxyPFOSiMSsIkP269Tfam0Xfg,12078\r\n> can/interfaces/virtual.py,sha256=7-iYnJx16FERaapBQjYfUK2WSz1wvShDrxxWojcQLt4,4202\r\n> can/io/__init__.py,sha256=qhta5wqqemmWF3jEBmGz4O4Ig2TPFI7ESfpYfnmr4B4,513\r\n> can/io/__pycache__/__init__.cpython-37.pyc,,\r\n> can/io/__pycache__/asc.cpython-37.pyc,,\r\n> can/io/__pycache__/blf.cpython-37.pyc,,\r\n> can/io/__pycache__/canutils.cpython-37.pyc,,\r\n> can/io/__pycache__/csv.cpython-37.pyc,,\r\n> can/io/__pycache__/generic.cpython-37.pyc,,\r\n> can/io/__pycache__/logger.cpython-37.pyc,,\r\n> can/io/__pycache__/player.cpython-37.pyc,,\r\n> can/io/__pycache__/printer.cpython-37.pyc,,\r\n> can/io/__pycache__/sqlite.cpython-37.pyc,,\r\n> can/io/asc.py,sha256=KbxLTMtmYTqyii-SUZSSMA3zwdzRaYs1j1fKIMYTEPU,7872\r\n> can/io/blf.py,sha256=1rkZ-SLqQUDZ0VMzkCW8iX7BgKXRtQMhwEIVS2ga1gg,18232\r\n> can/io/canutils.py,sha256=-byxU2nuegItLtNtsQ5gzRI3hDSGm31GkwegkOrrPgo,4925\r\n> can/io/csv.py,sha256=SnyIAgmOKoUT7_Ewp4FUTxI37z8nE5SBZXjVkz4L2fc,3905\r\n> can/io/generic.py,sha256=EbiGN3TuPX7_VwpUEtLmQOgZjxEktHXDL5pX8FfBzko,1352\r\n> can/io/logger.py,sha256=qoYzJAgEOLaOUUgS9FEGOqAKIdQ-SeWbfx9Kd0QN_iA,2097\r\n> can/io/player.py,sha256=8tFoP6Yhu0BhDNs9m76dOjYCNpLyjWObWEq52I5fFvY,3477\r\n> can/io/printer.py,sha256=GjXN77WJYWMJy5uKBFJ_G3VQtRPr5cKmB87-o2CoWj4,1269\r\n> can/io/sqlite.py,sha256=YtY4sZE9I3US9v4C11QW4WQbs6lwHqQzlFQhQe6Fmr0,8738\r\n> can/listener.py,sha256=N-Zz4Qls_WLwszZ_8oai5gB13H-68HgZs2V-G6M7Cjg,4789\r\n> can/logger.py,sha256=Y52hR-5kcxpDhkZzjvHY6rFK2BllPAknXH329845AAs,4342\r\n> can/message.py,sha256=rURWQhcWOSzyqU-hM7dWS4ChG9Sq4APFx_Iz7YZlyv0,13163\r\n> can/notifier.py,sha256=03oT1BaOvYYqqt7eL85OVSapMLl942NZ1bgIA_83fcM,5007\r\n> can/player.py,sha256=8YeosdTPPoA4ka6t8tpEuc2b6rtQdZNQT1_yLTgWOoU,3360\r\n> can/thread_safe_bus.py,sha256=Xp7efg9o8P8MosfDpZwUhOrjtDzOPdtbzklhNAaKT74,3411\r\n> can/util.py,sha256=PpBTlqaO4ywjdNzN1oW_3KZW3CBtT3_NKOl0CMLvx5E,7350\r\n> can/viewer.py,sha256=LLuZq9wJXdecp5L7aM2bOSXr2P9jfG4n2rlGUUdxxZM,22590\r\n> python_can-3.3.2.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4\r\n> python_can-3.3.2.dist-info/LICENSE.txt,sha256=2n6rt7r999OuXp8iOqW9we7ORaxWncIbOwN1ILRGR2g,7651\r\n> python_can-3.3.2.dist-info/METADATA,sha256=nPcEBt8m0ujlcqP2ZlswjvY6R7kWshfOPSa5e7B6TBI,6523\r\n> python_can-3.3.2.dist-info/RECORD,,\r\n> python_can-3.3.2.dist-info/WHEEL,sha256=JZXtYepZFsf4IoivNpnSgKIc4qTHan08DRd56koo_DM,116\r\n> python_can-3.3.2.dist-info/top_level.txt,sha256=tPwJHaIFJDNlJCfW47fReDKSCcRMBXS_rYcARliFueA,9\r\n> test/data/__init__.py,sha256=KwGiZWhwug0K5ngnoP3y1Xx0RPSHLojsRIGCd5uMMB0,38\r\n> test/data/__pycache__/__init__.cpython-37.pyc,,\r\n> test/data/__pycache__/example_data.cpython-37.pyc,,\r\n> test/data/example_data.py,sha256=kJCVCGUVm3ee2vcIe_4DxLI1MN2MSizrRWIHrQ7JZDQ,5472\r\n\r\n\r\nAs you can see it will create a \"test\" folder in site-packages with your tests.\r\n\r\nThis results in the following:\r\n\r\nsince some projects use the deprecated test_suite syntax they will overwrite each other in the site-packages\\test\r\nconflicts when having this installed in site-packages and running your own projects tests, which are very often in test folder. it will now run your tests instead of own projects tests\r\nadditional unneeded disk space usage and takes longer to install\r\n\r\nAll in all it's recommended to exclude tests when uploading to pypi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/737", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/737/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/737/events", "html_url": "https://github.com/hardbyte/python-can/issues/737", "id": 533315914, "node_id": "MDU6SXNzdWU1MzMzMTU5MTQ=", "number": 737, "title": "Absence of can.Message.__eq__", "user": {"login": "tysonite", "id": 196535, "node_id": "MDQ6VXNlcjE5NjUzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/196535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tysonite", "html_url": "https://github.com/tysonite", "followers_url": "https://api.github.com/users/tysonite/followers", "following_url": "https://api.github.com/users/tysonite/following{/other_user}", "gists_url": "https://api.github.com/users/tysonite/gists{/gist_id}", "starred_url": "https://api.github.com/users/tysonite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tysonite/subscriptions", "organizations_url": "https://api.github.com/users/tysonite/orgs", "repos_url": "https://api.github.com/users/tysonite/repos", "events_url": "https://api.github.com/users/tysonite/events{/privacy}", "received_events_url": "https://api.github.com/users/tysonite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-05T12:17:31Z", "updated_at": "2020-04-29T15:29:19Z", "closed_at": "2020-04-29T15:29:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that ` can.Message.__eq__` has been removed in [this](https://github.com/hardbyte/python-can/commit/c37420d23e17f48067e7cc2de4778a88c743061e#diff-7080e7643f241026215c54f04aa5b7eaL132) revision. Is it really expected?\r\n\r\nIt was useful in verification of mocked calls in tests, as well as just comparing diffrerent messages. I understand that `equals()` provides the comparison mechanism now, but it looks to me that built-in equality function gives better flexibility, where not necessary to manage comparsion of timestamps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/735", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/735/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/735/events", "html_url": "https://github.com/hardbyte/python-can/issues/735", "id": 531923662, "node_id": "MDU6SXNzdWU1MzE5MjM2NjI=", "number": 735, "title": "Issue in recognizing the pcan with python code", "user": {"login": "queen97king2019", "id": 57384818, "node_id": "MDQ6VXNlcjU3Mzg0ODE4", "avatar_url": "https://avatars1.githubusercontent.com/u/57384818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/queen97king2019", "html_url": "https://github.com/queen97king2019", "followers_url": "https://api.github.com/users/queen97king2019/followers", "following_url": "https://api.github.com/users/queen97king2019/following{/other_user}", "gists_url": "https://api.github.com/users/queen97king2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/queen97king2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/queen97king2019/subscriptions", "organizations_url": "https://api.github.com/users/queen97king2019/orgs", "repos_url": "https://api.github.com/users/queen97king2019/repos", "events_url": "https://api.github.com/users/queen97king2019/events{/privacy}", "received_events_url": "https://api.github.com/users/queen97king2019/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-03T11:39:10Z", "updated_at": "2020-04-29T15:32:50Z", "closed_at": "2020-04-29T15:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "from __future__ import print_function\r\nimport serial\r\nimport can\r\nprint(\"first step\")\r\n\r\ndef send_one():\r\n    print(\"Second Step\")\r\n\r\n    bus = can.interface.Bus(bustype='pcan', channel='PCAN_USBBUS1', bitrate=250000)\r\n  \r\n    print(\"Third step\")\r\n\r\n    msg = can.Frame(arbitration_id=0x123, is_extended_id=False,\r\n                      data=[0x11, 0x22, 0x33])\r\n    print(\"Fourth step\")\r\n\r\n     try:\r\n        #bus1.send_periodic(msg,10)\r\n         bus.send(msg)\r\n         print(\"Message sent on {}\".format(bus.PCAN-USBBUS1_info))\r\n    except can.CanError:\r\n         print(\"Message NOT sent\")\r\nsend_one()\r\n\r\nWE are able to enter the function. But in the next step,\" **bus = can.interface.Bus(bustype='pcan', channel='PCAN_USBBUS1', bitrate=250000)\"**  the bustype and channel is not being recognised. How do we proceed further?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/732", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/732/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/732/events", "html_url": "https://github.com/hardbyte/python-can/issues/732", "id": 531057277, "node_id": "MDU6SXNzdWU1MzEwNTcyNzc=", "number": 732, "title": "XL_ERR_NOT_IMPLEMENTED when calling xlGetSyncTime on VN8900", "user": {"login": "danielhrisca", "id": 20952040, "node_id": "MDQ6VXNlcjIwOTUyMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20952040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhrisca", "html_url": "https://github.com/danielhrisca", "followers_url": "https://api.github.com/users/danielhrisca/followers", "following_url": "https://api.github.com/users/danielhrisca/following{/other_user}", "gists_url": "https://api.github.com/users/danielhrisca/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhrisca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhrisca/subscriptions", "organizations_url": "https://api.github.com/users/danielhrisca/orgs", "repos_url": "https://api.github.com/users/danielhrisca/repos", "events_url": "https://api.github.com/users/danielhrisca/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhrisca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 841971419, "node_id": "MDU6TGFiZWw4NDE5NzE0MTk=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:vector", "name": "backend:vector", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "danielhrisca", "id": 20952040, "node_id": "MDQ6VXNlcjIwOTUyMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20952040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhrisca", "html_url": "https://github.com/danielhrisca", "followers_url": "https://api.github.com/users/danielhrisca/followers", "following_url": "https://api.github.com/users/danielhrisca/following{/other_user}", "gists_url": "https://api.github.com/users/danielhrisca/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhrisca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhrisca/subscriptions", "organizations_url": "https://api.github.com/users/danielhrisca/orgs", "repos_url": "https://api.github.com/users/danielhrisca/repos", "events_url": "https://api.github.com/users/danielhrisca/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhrisca/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "danielhrisca", "id": 20952040, "node_id": "MDQ6VXNlcjIwOTUyMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20952040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhrisca", "html_url": "https://github.com/danielhrisca", "followers_url": "https://api.github.com/users/danielhrisca/followers", "following_url": "https://api.github.com/users/danielhrisca/following{/other_user}", "gists_url": "https://api.github.com/users/danielhrisca/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhrisca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhrisca/subscriptions", "organizations_url": "https://api.github.com/users/danielhrisca/orgs", "repos_url": "https://api.github.com/users/danielhrisca/repos", "events_url": "https://api.github.com/users/danielhrisca/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhrisca/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-02T11:10:25Z", "updated_at": "2019-12-02T20:44:45Z", "closed_at": "2019-12-02T20:44:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to use a VN8900 device but get this error during the __init__ https://github.com/hardbyte/python-can/blob/release-3.3.2/can/interfaces/vector/canlib.py#L209 (using version 3.3.2). \r\n\r\nI have multiple VN devices connected (including a VN7600), but I don't use the serial number, I just assign a custom applciation name in the vector hardware configuration utility. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/730", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/730/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/730/events", "html_url": "https://github.com/hardbyte/python-can/issues/730", "id": 530548753, "node_id": "MDU6SXNzdWU1MzA1NDg3NTM=", "number": 730, "title": "SocketCAN J1939 integration", "user": {"login": "olerem", "id": 3816114, "node_id": "MDQ6VXNlcjM4MTYxMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3816114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olerem", "html_url": "https://github.com/olerem", "followers_url": "https://api.github.com/users/olerem/followers", "following_url": "https://api.github.com/users/olerem/following{/other_user}", "gists_url": "https://api.github.com/users/olerem/gists{/gist_id}", "starred_url": "https://api.github.com/users/olerem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olerem/subscriptions", "organizations_url": "https://api.github.com/users/olerem/orgs", "repos_url": "https://api.github.com/users/olerem/repos", "events_url": "https://api.github.com/users/olerem/events{/privacy}", "received_events_url": "https://api.github.com/users/olerem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-30T08:13:18Z", "updated_at": "2020-04-30T06:06:09Z", "closed_at": "2019-12-16T20:17:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm kernel developer and spend last two years on preparing of J1939 kernel stack for mainline. Now it is happened and we have this stack in kernel 5.4. The UAPI is stable now and can be safely used.\r\n\r\nDo you have plans to integrate it in to python-can? I can answer you questions regarding kernel implementation, but currently I do not have enough experience in python. So, it will be great if some one can help to integrate it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/721", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/721/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/721/events", "html_url": "https://github.com/hardbyte/python-can/issues/721", "id": 518308017, "node_id": "MDU6SXNzdWU1MTgzMDgwMTc=", "number": 721, "title": "Calling send_periodic several times doesn't work with SocketCan", "user": {"login": "random-username1", "id": 53817173, "node_id": "MDQ6VXNlcjUzODE3MTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/53817173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/random-username1", "html_url": "https://github.com/random-username1", "followers_url": "https://api.github.com/users/random-username1/followers", "following_url": "https://api.github.com/users/random-username1/following{/other_user}", "gists_url": "https://api.github.com/users/random-username1/gists{/gist_id}", "starred_url": "https://api.github.com/users/random-username1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/random-username1/subscriptions", "organizations_url": "https://api.github.com/users/random-username1/orgs", "repos_url": "https://api.github.com/users/random-username1/repos", "events_url": "https://api.github.com/users/random-username1/events{/privacy}", "received_events_url": "https://api.github.com/users/random-username1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487981907, "node_id": "MDU6TGFiZWw0ODc5ODE5MDc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:socketcan", "name": "backend:socketcan", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-06T08:11:14Z", "updated_at": "2020-04-09T21:41:23Z", "closed_at": "2020-04-09T21:41:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n```python3\r\ntask = bus.send_periodic(msg, period)\r\ntask2 = bus.send_periodic(msg2, period2)\r\n```\r\nAfter launching several send_periodic tasks, with SocketCan, only the last one appears to be working although the same script works fine with PeakCan on another device.\r\n\r\n> ***EDIT***: both messages have the same arbitration ID but different datas\r\n\r\nPlugging this other device on the CAN Bus to intercept frames confirms that the last send_periodic task to be started is the only one working.\r\n\r\nI'm using python-can 3.3.2 on a 32 bits Raspbian stretch (v9.4)\r\n\r\nHere is the output of uname -a:\r\n```\r\npi@raspberrypi:~ $ uname -a\r\nLinux raspberrypi 4.14.71-v7+ #1145 SMP Fri Sep 21 15:38:35 BST 2018 armv7l GNU/Linux\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/720", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/720/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/720/events", "html_url": "https://github.com/hardbyte/python-can/issues/720", "id": 517858466, "node_id": "MDU6SXNzdWU1MTc4NTg0NjY=", "number": 720, "title": "send_periodic with SocketCan fails to stop when several tasks are running", "user": {"login": "random-username1", "id": 53817173, "node_id": "MDQ6VXNlcjUzODE3MTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/53817173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/random-username1", "html_url": "https://github.com/random-username1", "followers_url": "https://api.github.com/users/random-username1/followers", "following_url": "https://api.github.com/users/random-username1/following{/other_user}", "gists_url": "https://api.github.com/users/random-username1/gists{/gist_id}", "starred_url": "https://api.github.com/users/random-username1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/random-username1/subscriptions", "organizations_url": "https://api.github.com/users/random-username1/orgs", "repos_url": "https://api.github.com/users/random-username1/repos", "events_url": "https://api.github.com/users/random-username1/events{/privacy}", "received_events_url": "https://api.github.com/users/random-username1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487981907, "node_id": "MDU6TGFiZWw0ODc5ODE5MDc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:socketcan", "name": "backend:socketcan", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T15:51:14Z", "updated_at": "2020-07-18T04:18:54Z", "closed_at": "2020-07-18T04:18:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nLooks like trying to stop several send_periodic tasks at the same time fails with SocketCan on Raspberry Pi.\r\n```python3\r\ntask = bus.send_periodic(msg, period)\r\ntask2 = bus.send_periodic(msg2, period2)\r\ntask.stop()\r\ntask2.stop()\r\n```\r\nHere is the error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/pi/venv/lib/python3-6/site-packages/can/interfaces/socketcan/socketcan.py\", line 280, in send_bcm\r\n    return bcm_socket.send(data)\r\nOSError: [Errno 22] Invalid argument\r\n\r\nDuring handling of the above exception, another exception accurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    task2.stop()\r\n  File \"/home/pi/venv/lib/python3-6/site-packages/can/interfaces/can/bus.py\", line 218, in wrapped_stop_method\r\n    original_stop_method()\r\n  File \"/home/pi/venv/lib/python3-6/site-packages/can/interfaces/socketcan/socketcan.py\", line 365, in stop\r\n    send_bcm(self.bcm_socket, stopframe)\r\n  File \"/home/pi/venv/lib/python3-6/site-packages/can/interfaces/socketcan/socketcan.py\", line 285 in send_bcm\r\n    raise can.CanError(base + \"You are probably referring to a non-existing frame.\")\r\ncan.CanError: Couldn't send CAN BCM frame. OS Error 22: Invalid argument\r\nYou are probably referring to a non-existing frame.\r\n```\r\n\r\nI'm using python-can 3.3.2 on a 32 bits Raspbian stretch (v9.4)\r\n\r\nHere is the output of uname -a:\r\n```\r\npi@raspberrypi:~ $ uname -a\r\nLinux raspberrypi 4.14.71-v7+ #1145 SMP Fri Sep 21 15:38:35 BST 2018 armv7l GNU/Linux\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/719", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/719/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/719/events", "html_url": "https://github.com/hardbyte/python-can/issues/719", "id": 515186799, "node_id": "MDU6SXNzdWU1MTUxODY3OTk=", "number": 719, "title": "Found the problem here \uff1acan.interface.Bus(bustype='canalystii', channel=0, baud=500000)", "user": {"login": "xiaolei0211", "id": 56210070, "node_id": "MDQ6VXNlcjU2MjEwMDcw", "avatar_url": "https://avatars1.githubusercontent.com/u/56210070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaolei0211", "html_url": "https://github.com/xiaolei0211", "followers_url": "https://api.github.com/users/xiaolei0211/followers", "following_url": "https://api.github.com/users/xiaolei0211/following{/other_user}", "gists_url": "https://api.github.com/users/xiaolei0211/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaolei0211/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaolei0211/subscriptions", "organizations_url": "https://api.github.com/users/xiaolei0211/orgs", "repos_url": "https://api.github.com/users/xiaolei0211/repos", "events_url": "https://api.github.com/users/xiaolei0211/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaolei0211/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-31T05:58:31Z", "updated_at": "2019-10-31T08:53:00Z", "closed_at": "2019-10-31T08:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use this interface\uff0cbustype='canalystii':\r\nset bus = can.interface.Bus(bustype='canalystii', channel=0, baud=500000)\uff0c\r\nAlways find that baud does not match, **raise ValueError(\"Baudrate is not supported\")**,\r\nBaud is passed to class is str,not int ,So can't find it in  TIMING_DICT[baud],\r\nI don't know if you found this problem when you used it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/712", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/712/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/712/events", "html_url": "https://github.com/hardbyte/python-can/issues/712", "id": 511184319, "node_id": "MDU6SXNzdWU1MTExODQzMTk=", "number": 712, "title": "PCAN filter slips up sometimes", "user": {"login": "tamenol", "id": 37591107, "node_id": "MDQ6VXNlcjM3NTkxMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/37591107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamenol", "html_url": "https://github.com/tamenol", "followers_url": "https://api.github.com/users/tamenol/followers", "following_url": "https://api.github.com/users/tamenol/following{/other_user}", "gists_url": "https://api.github.com/users/tamenol/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamenol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamenol/subscriptions", "organizations_url": "https://api.github.com/users/tamenol/orgs", "repos_url": "https://api.github.com/users/tamenol/repos", "events_url": "https://api.github.com/users/tamenol/events{/privacy}", "received_events_url": "https://api.github.com/users/tamenol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-23T09:09:49Z", "updated_at": "2020-02-27T10:29:11Z", "closed_at": "2020-02-27T10:29:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using the `bus.set_filters()` function to set a filter so I only receive messages with an TX_SDO id. Using the filter `{\"can_id\":0x580, \"can_mask\":0xF80}`. However, I've noticed that sometimes, the TX_PDO id also gets throught the filter wich messes up my polling after id's function.\r\n\r\n```\r\nimport asyncio\r\nimport can\r\nimport logging\r\n\r\n\r\nclass PCAN(object):\r\n\r\n    RX_SDO = 0x600\r\n    TX_SDO = 0x580\r\n    RX_PDO = 0x200\r\n    TX_PDO = 0x180\r\n\r\n    TX_mask = 0xF80\r\n\r\n    TX_SDO_filter = {\"can_id\": 0x580,  # TX_SDO,\r\n                     \"can_mask\": TX_mask}\r\n\r\n    TX_PDO_filter = {\"can_id\": 0x180,  # TX_PDO,\r\n                     \"can_mask\": TX_mask}\r\n\r\n    ids = set([])\r\n\r\n    def _extract_id(self, msg):\r\n        print(msg)\r\n        print(\"{} == {}\".format(msg.arbitration_id & 0xF80,\r\n                                0x580 & 0xF80))\r\n        self.ids.add(msg.arbitration_id - self.TX_SDO)\r\n\r\n    def __init__(self, channel=\"PCAN_USBBUS1\"):\r\n\r\n        self.logger = logging.getLogger(\"CAN\")\r\n        self.logger.info(\"Initializing CANbus\")\r\n\r\n        can.set_logging_level(\"info\")\r\n\r\n        self.bus = can.Bus(channel=channel, bustype=\"pcan\")\r\n        self.listener = []\r\n        self.loop = asyncio.get_event_loop()\r\n        self.notifier = can.Notifier(self.bus, self.listener, loop=self.loop)\r\n\r\n    async def poll_id(self, canid):\r\n\r\n        data = [0x40, 0x00, 0x10, 0x00]\r\n        msg = can.Message(arbitration_id=self.RX_SDO + canid,\r\n                          data=data,\r\n                          is_extended_id=False)\r\n\r\n        self.bus.send(msg)\r\n        await asyncio.sleep(0.05)\r\n\r\n    async def poll_ids(self):\r\n\r\n        self.logger.info(\"Polling ids\")\r\n        self.ids = set([])\r\n        self.bus.set_filters([self.TX_SDO_filter])\r\n        self.notifier.add_listener(self._extract_id)\r\n        res_ids = await asyncio.gather(*(self.poll_id(canid) for canid in range(128)))\r\n        self.notifier.remove_listener(self._extract_id)\r\n        self.logger.info(\"Found ids: {}\".format(self.ids))\r\n        self.bus.set_filters()\r\n\r\n    def cleanup(self):\r\n        \"\"\"\r\n        A function to clean everything up.\r\n        \"\"\"\r\n        self.notifier.stop()\r\n        self.bus.shutdown()\r\n        self.logger.info(\"Stopped notifier; Bus shutdown\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    try:\r\n        loop = asyncio.get_event_loop()\r\n        cn = PCAN()\r\n        loop.run_until_complete(cn.poll_ids())\r\n        print(cn.ids)\r\n    except KeyboardInterrupt:\r\n        pass\r\n\r\n    loop.close()\r\n    cn.cleanup()\r\n\r\n```\r\n\r\nOutput:\r\n\r\n> C:\\repo\\loki-Hg\\tools\\productiondiagnostics>python test.py\r\n> Timestamp:   413575.599074        ID: 05b2    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> Timestamp:   413575.610082        ID: 058a    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> {50, 10}\r\n> \r\n> C:\\repo\\loki-Hg\\tools\\productiondiagnostics>python test.py\r\n> Timestamp:   413576.607169        ID: 018a    S                DLC:  7    00 ff ff ff 00 00 00\r\n> 384 == 1408\r\n> Timestamp:   413576.628118        ID: 058a    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> Timestamp:   413576.641985        ID: 05b2    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> {-1014, 10, 50}\r\n> \r\n> C:\\repo\\loki-Hg\\tools\\productiondiagnostics>python test.py\r\n> Timestamp:   413577.560095        ID: 058a    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> Timestamp:   413577.573876        ID: 05b2    S                DLC:  8    43 00 10 00 00 00 00 00\r\n> 1408 == 1408\r\n> {10, 50}\r\n> \r\n\r\nNotice the `-1014`, which is equal to `0x18A - 0x580`.\r\n\r\nDoes the `bus.set_filters` work for the PCAN interface or do I need to use the `FilterMessages(self, Channel, FromID, ToID, Mode)` function in `basic.py`? I don't find any usage of 'FilterMessages; in the rest of the code.\r\n\r\nSo my guess is that I need to write some function in `pcan.py` to use `FilterMessages`? Or is this a bug in `bus.py`?\r\n\r\nEDIT: found 1 issue previously here about filtering (#400)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/707", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/707/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/707/events", "html_url": "https://github.com/hardbyte/python-can/issues/707", "id": 505735414, "node_id": "MDU6SXNzdWU1MDU3MzU0MTQ=", "number": 707, "title": "Let the notifier notify about error frames", "user": {"login": "tamenol", "id": 37591107, "node_id": "MDQ6VXNlcjM3NTkxMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/37591107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamenol", "html_url": "https://github.com/tamenol", "followers_url": "https://api.github.com/users/tamenol/followers", "following_url": "https://api.github.com/users/tamenol/following{/other_user}", "gists_url": "https://api.github.com/users/tamenol/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamenol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamenol/subscriptions", "organizations_url": "https://api.github.com/users/tamenol/orgs", "repos_url": "https://api.github.com/users/tamenol/repos", "events_url": "https://api.github.com/users/tamenol/events{/privacy}", "received_events_url": "https://api.github.com/users/tamenol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448763397, "node_id": "MDU6TGFiZWw0NDg3NjMzOTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:pcan", "name": "backend:pcan", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-11T09:15:13Z", "updated_at": "2019-11-13T09:17:24Z", "closed_at": "2019-11-07T07:26:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have to monitor a PCAN bus. I have written an asyncio script to read all the ID's on the bus and calculate the throughput on the bus. However I also have to count the error messages, but they aren't passed to the notifier. \r\nHow can I do this? In PCAN-View I can see error messages ariving, ex. type=Error and RxERR=132. I'd like to pass these to my script so I can count.  At the moment the error messages get surpressed or the error 'Bus Error: ... heavy/light bus' (https://github.com/hardbyte/python-can/blob/develop/can/interfaces/pcan/pcan.py#L320) gets printed as a warning.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/706", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/706/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/706/events", "html_url": "https://github.com/hardbyte/python-can/issues/706", "id": 504514608, "node_id": "MDU6SXNzdWU1MDQ1MTQ2MDg=", "number": 706, "title": "Filters not usable in Python2.7 -> cannot indices strings", "user": {"login": "drchopper", "id": 13781543, "node_id": "MDQ6VXNlcjEzNzgxNTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13781543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drchopper", "html_url": "https://github.com/drchopper", "followers_url": "https://api.github.com/users/drchopper/followers", "following_url": "https://api.github.com/users/drchopper/following{/other_user}", "gists_url": "https://api.github.com/users/drchopper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drchopper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drchopper/subscriptions", "organizations_url": "https://api.github.com/users/drchopper/orgs", "repos_url": "https://api.github.com/users/drchopper/repos", "events_url": "https://api.github.com/users/drchopper/events{/privacy}", "received_events_url": "https://api.github.com/users/drchopper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-09T09:06:32Z", "updated_at": "2019-10-09T09:16:35Z", "closed_at": "2019-10-09T09:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "can.set_filters = {'can_id': 0x100, 'can_mask': 0xFFF, 'extended': False}\r\n\r\n~can\\bus.py\", line 344, in _matches_filters\r\n    can_id = _filter['can_id']\r\nTypeError: string indices must be integers, not str", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/699", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/699/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/699/events", "html_url": "https://github.com/hardbyte/python-can/issues/699", "id": 490628633, "node_id": "MDU6SXNzdWU0OTA2Mjg2MzM=", "number": 699, "title": "Tests fail on Python 2.7", "user": {"login": "jluttine", "id": 2195834, "node_id": "MDQ6VXNlcjIxOTU4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2195834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jluttine", "html_url": "https://github.com/jluttine", "followers_url": "https://api.github.com/users/jluttine/followers", "following_url": "https://api.github.com/users/jluttine/following{/other_user}", "gists_url": "https://api.github.com/users/jluttine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jluttine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jluttine/subscriptions", "organizations_url": "https://api.github.com/users/jluttine/orgs", "repos_url": "https://api.github.com/users/jluttine/repos", "events_url": "https://api.github.com/users/jluttine/events{/privacy}", "received_events_url": "https://api.github.com/users/jluttine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-07T12:09:42Z", "updated_at": "2019-09-07T12:48:34Z", "closed_at": "2019-09-07T12:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install the most recent version from PyPI (3.3.1) and run tests for that:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/bin/.pytest-wrapped\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/config/__init__.py\", line 63, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/config/__init__.py\", line 207, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/helpconfig.py\", line 94, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/callers.py\", line 81, in get_result\r\n    _reraise(*ex)  # noqa\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/config/__init__.py\", line 687, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/config/__init__.py\", line 895, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/config/__init__.py\", line 841, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/nix/store/ma5id8c9gjjdh5qa990bl8kj16nl87xm-python2.7-pluggy-0.12.0/lib/python2.7/site-packages/pluggy/manager.py\", line 292, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/nix/store/fm79x0al39c60d1q31803in3rmpai3fs-python2.7-importlib-metadata-0.18/lib/python2.7/site-packages/importlib_metadata/__init__.py\", line 90, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/nix/store/ws28m49kdhyrx4x68rx3sxi1nwrc6dy1-python-2.7.16/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/nix/store/m6xdfcr0n1cw631njzwbyvq26072bk33-python2.7-hypothesis-4.7.3/lib/python2.7/site-packages/hypothesis/__init__.py\", line 26, in <module>\r\n    from hypothesis._settings import settings, Verbosity, Phase, HealthCheck, unlimited\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/assertion/rewrite.py\", line 304, in load_module\r\n    exec(co, mod.__dict__)\r\n  File \"/nix/store/m6xdfcr0n1cw631njzwbyvq26072bk33-python2.7-hypothesis-4.7.3/lib/python2.7/site-packages/hypothesis/_settings.py\", line 40, in <module>\r\n    from hypothesis.internal.compat import string_types\r\n  File \"/nix/store/xj6c66ah627h5793hdm9jwlbdqphk7mp-python2.7-pytest-4.6.5/lib/python2.7/site-packages/_pytest/assertion/rewrite.py\", line 304, in load_module\r\n    exec(co, mod.__dict__)\r\n  File \"/nix/store/m6xdfcr0n1cw631njzwbyvq26072bk33-python2.7-hypothesis-4.7.3/lib/python2.7/site-packages/hypothesis/internal/compat.py\", line 302, in <module>\r\n    typing_root_type = (typing._Final, typing._GenericAlias)  # type: ignore\r\nAttributeError: 'module' object has no attribute '_GenericAlias'\r\n```\r\n\r\nI have `typing` version 3.7.4.1.\r\n\r\n\r\nI also tried using version 3.3.2 from GitHub but then I get the following error:\r\n```\r\nERROR: python-can requires Python '>=3.6' but the running Python is 2.7.16\r\n```\r\nBut README says that library version 3.x supports Python 2.7+ (and 3.5+). So there should be support based on README.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/698", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/698/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/698/events", "html_url": "https://github.com/hardbyte/python-can/issues/698", "id": 490626900, "node_id": "MDU6SXNzdWU0OTA2MjY5MDA=", "number": 698, "title": "Release 3.3.2 not in PyPI", "user": {"login": "jluttine", "id": 2195834, "node_id": "MDQ6VXNlcjIxOTU4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2195834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jluttine", "html_url": "https://github.com/jluttine", "followers_url": "https://api.github.com/users/jluttine/followers", "following_url": "https://api.github.com/users/jluttine/following{/other_user}", "gists_url": "https://api.github.com/users/jluttine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jluttine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jluttine/subscriptions", "organizations_url": "https://api.github.com/users/jluttine/orgs", "repos_url": "https://api.github.com/users/jluttine/repos", "events_url": "https://api.github.com/users/jluttine/events{/privacy}", "received_events_url": "https://api.github.com/users/jluttine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448750496, "node_id": "MDU6TGFiZWw0NDg3NTA0OTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/critical", "name": "critical", "color": "b60205", "default": false, "description": null}, {"id": 1478759442, "node_id": "MDU6TGFiZWwxNDc4NzU5NDQy", "url": "https://api.github.com/repos/hardbyte/python-can/labels/devops", "name": "devops", "color": "5772f9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-09-07T11:50:52Z", "updated_at": "2019-09-10T23:32:49Z", "closed_at": "2019-09-10T23:32:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed there's a release 3.3.2: https://github.com/hardbyte/python-can/releases/tag/3.3.2\r\n\r\nBut currently the most recent version in PyPI is 3.3.1: https://pypi.org/project/python-can/\r\n\r\nCould you release also in PyPI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/695", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/695/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/695/events", "html_url": "https://github.com/hardbyte/python-can/issues/695", "id": 488980273, "node_id": "MDU6SXNzdWU0ODg5ODAyNzM=", "number": 695, "title": "Possible bug in viwer.py", "user": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Lauszus", "id": 1098847, "node_id": "MDQ6VXNlcjEwOTg4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1098847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lauszus", "html_url": "https://github.com/Lauszus", "followers_url": "https://api.github.com/users/Lauszus/followers", "following_url": "https://api.github.com/users/Lauszus/following{/other_user}", "gists_url": "https://api.github.com/users/Lauszus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lauszus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lauszus/subscriptions", "organizations_url": "https://api.github.com/users/Lauszus/orgs", "repos_url": "https://api.github.com/users/Lauszus/repos", "events_url": "https://api.github.com/users/Lauszus/events{/privacy}", "received_events_url": "https://api.github.com/users/Lauszus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Lauszus", "id": 1098847, "node_id": "MDQ6VXNlcjEwOTg4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1098847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lauszus", "html_url": "https://github.com/Lauszus", "followers_url": "https://api.github.com/users/Lauszus/followers", "following_url": "https://api.github.com/users/Lauszus/following{/other_user}", "gists_url": "https://api.github.com/users/Lauszus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lauszus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lauszus/subscriptions", "organizations_url": "https://api.github.com/users/Lauszus/orgs", "repos_url": "https://api.github.com/users/Lauszus/repos", "events_url": "https://api.github.com/users/Lauszus/events{/privacy}", "received_events_url": "https://api.github.com/users/Lauszus/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-04T07:04:00Z", "updated_at": "2019-09-04T09:03:05Z", "closed_at": "2019-09-04T09:03:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Could it be, that in `can/viewer.py` around line 169 there is an error? The excerpt of the relevant method follows. The very last else statement should be indented one level more, shouldn't it?\r\n\r\n```python\r\n    @staticmethod\r\n    def unpack_data(\r\n        cmd, cmd_to_struct, data\r\n    ):  # type: (int, Dict, bytes) -> List[Union[float, int]]\r\n        if not cmd_to_struct or not data:\r\n            # These messages do not contain a data package\r\n            return []\r\n\r\n        for key in cmd_to_struct:\r\n            if cmd == key if isinstance(key, int) else cmd in key:\r\n                value = cmd_to_struct[key]\r\n                if isinstance(value, tuple):\r\n                    # The struct is given as the fist argument\r\n                    struct_t = value[0]  # type: struct.Struct\r\n\r\n                    # The conversion from raw values to SI-units are given in the rest of the tuple\r\n                    values = [\r\n                        d // val if isinstance(val, int) else float(d) / val\r\n                        for d, val in zip(struct_t.unpack(data), value[1:])\r\n                    ]\r\n                else:\r\n                    # No conversion from SI-units is needed\r\n                    struct_t = value  # type: struct.Struct\r\n                    values = list(struct_t.unpack(data))\r\n\r\n                return values\r\n        else:\r\n            raise ValueError(\"Unknown command: 0x{:02X}\".format(cmd))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/692", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/692/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/692/events", "html_url": "https://github.com/hardbyte/python-can/issues/692", "id": 485457505, "node_id": "MDU6SXNzdWU0ODU0NTc1MDU=", "number": 692, "title": "KWP Fast Init", "user": {"login": "skast96", "id": 10941954, "node_id": "MDQ6VXNlcjEwOTQxOTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/10941954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skast96", "html_url": "https://github.com/skast96", "followers_url": "https://api.github.com/users/skast96/followers", "following_url": "https://api.github.com/users/skast96/following{/other_user}", "gists_url": "https://api.github.com/users/skast96/gists{/gist_id}", "starred_url": "https://api.github.com/users/skast96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skast96/subscriptions", "organizations_url": "https://api.github.com/users/skast96/orgs", "repos_url": "https://api.github.com/users/skast96/repos", "events_url": "https://api.github.com/users/skast96/events{/privacy}", "received_events_url": "https://api.github.com/users/skast96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "skast96", "id": 10941954, "node_id": "MDQ6VXNlcjEwOTQxOTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/10941954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skast96", "html_url": "https://github.com/skast96", "followers_url": "https://api.github.com/users/skast96/followers", "following_url": "https://api.github.com/users/skast96/following{/other_user}", "gists_url": "https://api.github.com/users/skast96/gists{/gist_id}", "starred_url": "https://api.github.com/users/skast96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skast96/subscriptions", "organizations_url": "https://api.github.com/users/skast96/orgs", "repos_url": "https://api.github.com/users/skast96/repos", "events_url": "https://api.github.com/users/skast96/events{/privacy}", "received_events_url": "https://api.github.com/users/skast96/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skast96", "id": 10941954, "node_id": "MDQ6VXNlcjEwOTQxOTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/10941954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skast96", "html_url": "https://github.com/skast96", "followers_url": "https://api.github.com/users/skast96/followers", "following_url": "https://api.github.com/users/skast96/following{/other_user}", "gists_url": "https://api.github.com/users/skast96/gists{/gist_id}", "starred_url": "https://api.github.com/users/skast96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skast96/subscriptions", "organizations_url": "https://api.github.com/users/skast96/orgs", "repos_url": "https://api.github.com/users/skast96/repos", "events_url": "https://api.github.com/users/skast96/events{/privacy}", "received_events_url": "https://api.github.com/users/skast96/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-08-26T21:18:11Z", "updated_at": "2019-10-07T05:38:56Z", "closed_at": "2019-10-07T05:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone, \r\n\r\nit`s not exactly an issue, but I was trying to establish a connection to a Car with KWP Fast and it failed. Has anybody tried that yet with this library?\r\n\r\nIf it helps this is my init message.\r\nchannel is can0\r\nbitrate is set to 10400\r\n`  msg = can.Message(arbitration_id= 0x7DF,\r\n                          data=[0xC1, 0x33, 0xF1, 0x81],\r\n                          is_extended_id=False)\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/686", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/686/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/686/events", "html_url": "https://github.com/hardbyte/python-can/issues/686", "id": 481098416, "node_id": "MDU6SXNzdWU0ODEwOTg0MTY=", "number": 686, "title": "Backport PCAN rtr fix to 3.x release", "user": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-08-15T10:52:26Z", "updated_at": "2019-08-20T11:30:45Z", "closed_at": "2019-08-20T11:30:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "From #659 \r\n> In PcanBus.send(), we initially set msgType based on all the flags of msg, including RTR. In the if/else for self.fd, we are incorrectly resetting it if rtr.\r\n\r\nThis issue is to create a 3.3.2 release with the fix back ported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/683", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/683/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/683/events", "html_url": "https://github.com/hardbyte/python-can/issues/683", "id": 479481250, "node_id": "MDU6SXNzdWU0Nzk0ODEyNTA=", "number": 683, "title": "Problems with player.py", "user": {"login": "Ralph-Ne", "id": 33424636, "node_id": "MDQ6VXNlcjMzNDI0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/33424636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ralph-Ne", "html_url": "https://github.com/Ralph-Ne", "followers_url": "https://api.github.com/users/Ralph-Ne/followers", "following_url": "https://api.github.com/users/Ralph-Ne/following{/other_user}", "gists_url": "https://api.github.com/users/Ralph-Ne/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ralph-Ne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ralph-Ne/subscriptions", "organizations_url": "https://api.github.com/users/Ralph-Ne/orgs", "repos_url": "https://api.github.com/users/Ralph-Ne/repos", "events_url": "https://api.github.com/users/Ralph-Ne/events{/privacy}", "received_events_url": "https://api.github.com/users/Ralph-Ne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448765017, "node_id": "MDU6TGFiZWw0NDg3NjUwMTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/api", "name": "api", "color": "68db04", "default": false, "description": ""}, {"id": 448741913, "node_id": "MDU6TGFiZWw0NDg3NDE5MTM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "christiansandberg", "id": 3647996, "node_id": "MDQ6VXNlcjM2NDc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3647996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiansandberg", "html_url": "https://github.com/christiansandberg", "followers_url": "https://api.github.com/users/christiansandberg/followers", "following_url": "https://api.github.com/users/christiansandberg/following{/other_user}", "gists_url": "https://api.github.com/users/christiansandberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiansandberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiansandberg/subscriptions", "organizations_url": "https://api.github.com/users/christiansandberg/orgs", "repos_url": "https://api.github.com/users/christiansandberg/repos", "events_url": "https://api.github.com/users/christiansandberg/events{/privacy}", "received_events_url": "https://api.github.com/users/christiansandberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "christiansandberg", "id": 3647996, "node_id": "MDQ6VXNlcjM2NDc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3647996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiansandberg", "html_url": "https://github.com/christiansandberg", "followers_url": "https://api.github.com/users/christiansandberg/followers", "following_url": "https://api.github.com/users/christiansandberg/following{/other_user}", "gists_url": "https://api.github.com/users/christiansandberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiansandberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiansandberg/subscriptions", "organizations_url": "https://api.github.com/users/christiansandberg/orgs", "repos_url": "https://api.github.com/users/christiansandberg/repos", "events_url": "https://api.github.com/users/christiansandberg/events{/privacy}", "received_events_url": "https://api.github.com/users/christiansandberg/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2019-08-12T06:08:57Z", "updated_at": "2019-09-04T09:18:21Z", "closed_at": "2019-09-04T09:18:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI've got some problems with the newest version of the player in python-can.\r\n\r\nThe call is the same: python -m can.player -b 250000 -c can0 -v -i socketcan FILE_TO_PLAY\r\n\r\nIf I use version 2.1.1dev0, downloaded over a year ago, the player works fine, even without the -g option.\r\n\r\nIf I use the newest version 3.3.1, the player ends with:\r\n\r\nTimestamp: 1504177560.972875 ID: 0000 S E DLC: 0 Channel: 0\r\nTimestamp: 1504177560.973315 ID: 0000 S E DLC: 0 Channel: 0\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n\"main\", mod_spec)\r\nFile \"/usr/lib/python3.7/runpy.py\", line 85, in _run_code\r\nexec(code, run_globals)\r\nFile \"/usr/lib/python3.7/site-packages/can/player.py\", line 98, in\r\nmain()\r\nFile \"/usr/lib/python3.7/site-packages/can/player.py\", line 89, in main\r\nbus.send(m)\r\nFile \"/usr/lib/python3.7/site-packages/can/interfaces/socketcan/socketcan.py\", line 633, in send\r\nraise can.CanError(\"Transmit buffer full\")\r\ncan.CanError: Transmit buffer full\r\n[canplayer@canplayer-pc ~]$\r\n\r\nIf I use the -g option it works, if I do -g 0.01: python -m can.player -b 250000 -c can0 -v -i socketcan -g 0.01 FILE_TO_PLAY,\r\n\r\n-g 0.001 or -g 0.0001 lead to the same error as above.\r\n\r\nCan you imagine what I've done wrong? Do you have any advice for me to solve the problem?\r\n\r\nKind regards\r\n\r\nRalph", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/681", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/681/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/681/events", "html_url": "https://github.com/hardbyte/python-can/issues/681", "id": 478690550, "node_id": "MDU6SXNzdWU0Nzg2OTA1NTA=", "number": 681, "title": "Linux Python 3+ does not allow for RTR", "user": {"login": "RISKYY", "id": 11336649, "node_id": "MDQ6VXNlcjExMzM2NjQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/11336649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RISKYY", "html_url": "https://github.com/RISKYY", "followers_url": "https://api.github.com/users/RISKYY/followers", "following_url": "https://api.github.com/users/RISKYY/following{/other_user}", "gists_url": "https://api.github.com/users/RISKYY/gists{/gist_id}", "starred_url": "https://api.github.com/users/RISKYY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RISKYY/subscriptions", "organizations_url": "https://api.github.com/users/RISKYY/orgs", "repos_url": "https://api.github.com/users/RISKYY/repos", "events_url": "https://api.github.com/users/RISKYY/events{/privacy}", "received_events_url": "https://api.github.com/users/RISKYY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448763397, "node_id": "MDU6TGFiZWw0NDg3NjMzOTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:pcan", "name": "backend:pcan", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 522848218, "node_id": "MDU6TGFiZWw1MjI4NDgyMTg=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/os:linux", "name": "os:linux", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T21:14:38Z", "updated_at": "2019-08-15T10:53:19Z", "closed_at": "2019-08-15T10:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment: Python 3.6\r\nOS: Linux Ubuntu 18.04\r\nChipset: x86 Lenovo Laptop\r\nError: AttributeError: 'int' object has no attribute 'value'\r\n\r\nhttps://github.com/hardbyte/python-can/blob/1f0fb8b680a24e727a6995949c4f41d6251abd56/can/interfaces/pcan/pcan.py#L389\r\n\r\nIt appears that on Linux msgType doesn't have a value, whereas on OSX it does. If you remove \".value\" on linux it runs and works fine. Though, if you run the same removed .value on OSX it errors.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/680", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/680/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/680/events", "html_url": "https://github.com/hardbyte/python-can/issues/680", "id": 478445866, "node_id": "MDU6SXNzdWU0Nzg0NDU4NjY=", "number": 680, "title": "PCAN interface is broken", "user": {"login": "bmeisels", "id": 1206799, "node_id": "MDQ6VXNlcjEyMDY3OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1206799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmeisels", "html_url": "https://github.com/bmeisels", "followers_url": "https://api.github.com/users/bmeisels/followers", "following_url": "https://api.github.com/users/bmeisels/following{/other_user}", "gists_url": "https://api.github.com/users/bmeisels/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmeisels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmeisels/subscriptions", "organizations_url": "https://api.github.com/users/bmeisels/orgs", "repos_url": "https://api.github.com/users/bmeisels/repos", "events_url": "https://api.github.com/users/bmeisels/events{/privacy}", "received_events_url": "https://api.github.com/users/bmeisels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448763397, "node_id": "MDU6TGFiZWw0NDg3NjMzOTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:pcan", "name": "backend:pcan", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T12:39:42Z", "updated_at": "2019-08-13T07:39:10Z", "closed_at": "2019-08-13T07:39:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am testing some code with pcan and updated to the head of the development branch (previously was on 3.2.0).\r\n\r\nWhen trying to create a PcanBus i get the following error:\r\n```\r\nc:\\git_repos\\python-can\\can\\interfaces\\pcan\\pcan.py in __init__(self, channel, state, bitrate, *args, **kwargs)\r\n    185\r\n    186         if state is BusState.ACTIVE or state is BusState.PASSIVE:\r\n--> 187             self.state = state\r\n    188         else:\r\n    189             raise ArgumentError(\"BusState must be Active or Passive\")\r\n\r\nc:\\git_repos\\python-can\\can\\interfaces\\pcan\\pcan.py in state(self, new_state)\r\n    464         if new_state is BusState.ACTIVE:\r\n    465             self.m_objPCANBasic.SetValue(\r\n--> 466                 self.m_PcanHandle, PCAN_LISTEN_ONLY, PCAN_PARAMETER_OFF\r\n    467             )\r\n    468\r\n\r\nc:\\git_repos\\python-can\\can\\interfaces\\pcan\\basic.py in SetValue(self, Channel, Parameter, Buffer)\r\n    823         \"\"\"\r\n    824         try:\r\n--> 825             if Parameter in {PCAN_LOG_LOCATION, PCAN_LOG_TEXT, PCAN_TRACE_LOCATION}:\r\n    826                 mybuffer = create_string_buffer(256)\r\n    827             else:\r\n\r\nTypeError: unhashable type\r\n```\r\n\r\nIt seems 19b4ddf940b83b393268c7f424600acd6af59496 has caused a bug as the type of Parameter is ```c_ubyte``` which is not hashable.\r\n\r\nMy python version string is \"3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 22:20:52) [MSC v.1916 32 bit (Intel)]\"\r\n\r\n\r\nIf i am correct and this is a bug i suggest reverting these changes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/676", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/676/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/676/events", "html_url": "https://github.com/hardbyte/python-can/issues/676", "id": 478068723, "node_id": "MDU6SXNzdWU0NzgwNjg3MjM=", "number": 676, "title": "[Help wanted] Stop logging messages to command prompt", "user": {"login": "sreedevi101", "id": 15008191, "node_id": "MDQ6VXNlcjE1MDA4MTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/15008191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreedevi101", "html_url": "https://github.com/sreedevi101", "followers_url": "https://api.github.com/users/sreedevi101/followers", "following_url": "https://api.github.com/users/sreedevi101/following{/other_user}", "gists_url": "https://api.github.com/users/sreedevi101/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreedevi101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreedevi101/subscriptions", "organizations_url": "https://api.github.com/users/sreedevi101/orgs", "repos_url": "https://api.github.com/users/sreedevi101/repos", "events_url": "https://api.github.com/users/sreedevi101/events{/privacy}", "received_events_url": "https://api.github.com/users/sreedevi101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sreedevi101", "id": 15008191, "node_id": "MDQ6VXNlcjE1MDA4MTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/15008191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreedevi101", "html_url": "https://github.com/sreedevi101", "followers_url": "https://api.github.com/users/sreedevi101/followers", "following_url": "https://api.github.com/users/sreedevi101/following{/other_user}", "gists_url": "https://api.github.com/users/sreedevi101/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreedevi101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreedevi101/subscriptions", "organizations_url": "https://api.github.com/users/sreedevi101/orgs", "repos_url": "https://api.github.com/users/sreedevi101/repos", "events_url": "https://api.github.com/users/sreedevi101/events{/privacy}", "received_events_url": "https://api.github.com/users/sreedevi101/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sreedevi101", "id": 15008191, "node_id": "MDQ6VXNlcjE1MDA4MTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/15008191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreedevi101", "html_url": "https://github.com/sreedevi101", "followers_url": "https://api.github.com/users/sreedevi101/followers", "following_url": "https://api.github.com/users/sreedevi101/following{/other_user}", "gists_url": "https://api.github.com/users/sreedevi101/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreedevi101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreedevi101/subscriptions", "organizations_url": "https://api.github.com/users/sreedevi101/orgs", "repos_url": "https://api.github.com/users/sreedevi101/repos", "events_url": "https://api.github.com/users/sreedevi101/events{/privacy}", "received_events_url": "https://api.github.com/users/sreedevi101/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-08-07T18:09:40Z", "updated_at": "2019-09-20T10:01:51Z", "closed_at": "2019-09-20T10:01:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am starting and stopping the py-can notifier from a main program. Once the main program completes running, messages from py-can are printed in the command prompt. How can I stop this as I don't want the messges to be printed in the command prompt?\r\n\r\nPy-can program: \r\n\r\n`self.bus` = `can.Bus(interface='neovi',channel='1',receive_own_messages=True)`\r\n\r\n`self.notifier = can.Notifier(self.bus, [self.parse_message])`\r\n...\r\n...\r\n\r\n`self.notifier.stop(timeout=0)`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/666", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/666/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/666/events", "html_url": "https://github.com/hardbyte/python-can/issues/666", "id": 476438482, "node_id": "MDU6SXNzdWU0NzY0Mzg0ODI=", "number": 666, "title": "Read The Docs is missing some versions", "user": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448750187, "node_id": "MDU6TGFiZWw0NDg3NTAxODc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/blocker", "name": "blocker", "color": "d93f0b", "default": false, "description": null}, {"id": 487984642, "node_id": "MDU6TGFiZWw0ODc5ODQ2NDI=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/docs", "name": "docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-03T10:26:33Z", "updated_at": "2019-08-03T10:28:22Z", "closed_at": "2019-08-03T10:27:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@karlding noted this in #665\r\n\r\n> It seems like the ReadTheDocs site is missing the docs for versions following 3.1.1.. \ud83e\udd14 Should 3.2.0, 3.2.1, 3.3.0 and 3.3.1 be available there as well?\r\n\r\nWhat has caused this?\r\n\r\nHere might be some more info (see other tabs as well): https://readthedocs.org/projects/python-can/versions/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/663", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/663/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/663/events", "html_url": "https://github.com/hardbyte/python-can/issues/663", "id": 475335813, "node_id": "MDU6SXNzdWU0NzUzMzU4MTM=", "number": 663, "title": "New interface pull request branch", "user": {"login": "mikado98765", "id": 35907464, "node_id": "MDQ6VXNlcjM1OTA3NDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/35907464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikado98765", "html_url": "https://github.com/mikado98765", "followers_url": "https://api.github.com/users/mikado98765/followers", "following_url": "https://api.github.com/users/mikado98765/following{/other_user}", "gists_url": "https://api.github.com/users/mikado98765/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikado98765/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikado98765/subscriptions", "organizations_url": "https://api.github.com/users/mikado98765/orgs", "repos_url": "https://api.github.com/users/mikado98765/repos", "events_url": "https://api.github.com/users/mikado98765/events{/privacy}", "received_events_url": "https://api.github.com/users/mikado98765/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T20:14:18Z", "updated_at": "2019-07-31T23:24:06Z", "closed_at": "2019-07-31T23:24:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "For releasing a new interface, do we submit a pull request to `hardbyte : develop`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/662", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/662/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/662/events", "html_url": "https://github.com/hardbyte/python-can/issues/662", "id": 475049997, "node_id": "MDU6SXNzdWU0NzUwNDk5OTc=", "number": 662, "title": "bus.recv always returns the same first value of a unit", "user": {"login": "tamenol", "id": 37591107, "node_id": "MDQ6VXNlcjM3NTkxMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/37591107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamenol", "html_url": "https://github.com/tamenol", "followers_url": "https://api.github.com/users/tamenol/followers", "following_url": "https://api.github.com/users/tamenol/following{/other_user}", "gists_url": "https://api.github.com/users/tamenol/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamenol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamenol/subscriptions", "organizations_url": "https://api.github.com/users/tamenol/orgs", "repos_url": "https://api.github.com/users/tamenol/repos", "events_url": "https://api.github.com/users/tamenol/events{/privacy}", "received_events_url": "https://api.github.com/users/tamenol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T09:59:14Z", "updated_at": "2019-08-13T10:55:01Z", "closed_at": "2019-08-13T10:55:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See also stackoverflow question https://stackoverflow.com/questions/57274648/receive-message-on-canbus-always-returns-same-value-with-python-can\r\n\r\nSo the datavalue in the message doesn't update. I tried implementing it today with BufferReader but the problems persists. Do I need to flush the buffer somewhere? I'm using PCAN\r\n\r\nCalling bus.reset() fixes the problem, but I doubt this is the way to do it.\r\n\r\nEDIT: running this on Windows 10 and python3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/660", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/660/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/660/events", "html_url": "https://github.com/hardbyte/python-can/issues/660", "id": 474607397, "node_id": "MDU6SXNzdWU0NzQ2MDczOTc=", "number": 660, "title": ".modify_data() only changing one byte", "user": {"login": "philippherget", "id": 49745468, "node_id": "MDQ6VXNlcjQ5NzQ1NDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/49745468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippherget", "html_url": "https://github.com/philippherget", "followers_url": "https://api.github.com/users/philippherget/followers", "following_url": "https://api.github.com/users/philippherget/following{/other_user}", "gists_url": "https://api.github.com/users/philippherget/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippherget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippherget/subscriptions", "organizations_url": "https://api.github.com/users/philippherget/orgs", "repos_url": "https://api.github.com/users/philippherget/repos", "events_url": "https://api.github.com/users/philippherget/events{/privacy}", "received_events_url": "https://api.github.com/users/philippherget/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487981907, "node_id": "MDU6TGFiZWw0ODc5ODE5MDc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:socketcan", "name": "backend:socketcan", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-30T14:07:59Z", "updated_at": "2019-08-09T20:05:21Z", "closed_at": "2019-08-09T20:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #636 \r\n\r\nSo basically after updating to 3.3.1 everything is working fine. But it seems like the modify_data() command no longer works. With the code below I could always change both bytes of the message, but since the update to 3.3.1 only the third byte is changed/first command is executed. The fourth byte is ignored, although the change of two bytes worked fine before (version 3.0.0 used).\r\n\r\n```\r\nimport os\r\nimport time\r\nimport can\r\n\r\nos.system(\"sudo /sbin/ip link set can0 up type can bitrate 250000\")\r\n\r\nbus = can.interface.Bus(bustype='socketcan', channel='can0', bitrate=250000)\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\ndef Simulation(bus):\r\n    msg = can.Message(arbitration_id=0x18F00400, data=[0, 0, 0, 0xF4, 0x01, 0, 0, 0], is_extended_id=True)\r\n    task = bus.send_periodic(msg, 1)\r\n    time.sleep(1)\r\n    msg.data[3] = (0x1F4 & 0xFF)\r\n    msg.data[4] = ((0x1F4 & 0xFF) >> 8)\r\n    task.modify_data(msg)\r\n    time.sleep(1)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/649", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/649/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/649/events", "html_url": "https://github.com/hardbyte/python-can/issues/649", "id": 470314956, "node_id": "MDU6SXNzdWU0NzAzMTQ5NTY=", "number": 649, "title": "Can't install python-can without internet access", "user": {"login": "chrisoro", "id": 4160557, "node_id": "MDQ6VXNlcjQxNjA1NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4160557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisoro", "html_url": "https://github.com/chrisoro", "followers_url": "https://api.github.com/users/chrisoro/followers", "following_url": "https://api.github.com/users/chrisoro/following{/other_user}", "gists_url": "https://api.github.com/users/chrisoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisoro/subscriptions", "organizations_url": "https://api.github.com/users/chrisoro/orgs", "repos_url": "https://api.github.com/users/chrisoro/repos", "events_url": "https://api.github.com/users/chrisoro/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-07-19T13:06:32Z", "updated_at": "2019-07-26T14:18:05Z", "closed_at": "2019-07-24T08:48:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my organization we have computers that are not connected to the internet. We have an artifactory setup as remote repository for the official pypi. In short: we can do pip install python-can==3.1 --index-url=\"path-to-our-mirror\", that uses the mirrored artifactory which then asks the real pypi to download python-can.\r\n\r\nA few months ago, setup_requires=[\"pytest-runner\"], has been added to the setup.py which skips pip and downloads pytest-runner directly. This won't work if you can't access the hoster.\r\n\r\nThis has been (partially) fixed here: https://github.com/hardbyte/python-can/pull/633 by installing pytest-runner only when you want to. Maybe a better fix would be to shift it to install_requires? Anyways it is scheduled for your v4 release but that is please a few weeks out.\r\n\r\nCan you guys release a bugfix 3.3.1 or 3.3.0.1 (or whatever) that includes this fix? Without it, it's not possible to install python-can>3.1 without internet access", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/648", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/648/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/648/events", "html_url": "https://github.com/hardbyte/python-can/issues/648", "id": 470171350, "node_id": "MDU6SXNzdWU0NzAxNzEzNTA=", "number": 648, "title": "Log rotation", "user": {"login": "HellDeveloper91", "id": 16177334, "node_id": "MDQ6VXNlcjE2MTc3MzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/16177334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HellDeveloper91", "html_url": "https://github.com/HellDeveloper91", "followers_url": "https://api.github.com/users/HellDeveloper91/followers", "following_url": "https://api.github.com/users/HellDeveloper91/following{/other_user}", "gists_url": "https://api.github.com/users/HellDeveloper91/gists{/gist_id}", "starred_url": "https://api.github.com/users/HellDeveloper91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HellDeveloper91/subscriptions", "organizations_url": "https://api.github.com/users/HellDeveloper91/orgs", "repos_url": "https://api.github.com/users/HellDeveloper91/repos", "events_url": "https://api.github.com/users/HellDeveloper91/events{/privacy}", "received_events_url": "https://api.github.com/users/HellDeveloper91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-19T07:02:29Z", "updated_at": "2019-07-27T05:05:00Z", "closed_at": "2019-07-27T05:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe are testing can devices and we use the ASCWritter and BLFWritter to log all the can traces as evidences. The problem is that the log file created for long duration tests are so big that are unusable.\r\nLooking in the documentation we don't find any configuration to make the logs rotate when the file reaches X size. There is any way to do it or is it any plans to add it?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/647", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/647/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/647/events", "html_url": "https://github.com/hardbyte/python-can/issues/647", "id": 469493073, "node_id": "MDU6SXNzdWU0Njk0OTMwNzM=", "number": 647, "title": "AsyncBufferedReader() Documentation", "user": {"login": "rayran1234", "id": 25093962, "node_id": "MDQ6VXNlcjI1MDkzOTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/25093962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayran1234", "html_url": "https://github.com/rayran1234", "followers_url": "https://api.github.com/users/rayran1234/followers", "following_url": "https://api.github.com/users/rayran1234/following{/other_user}", "gists_url": "https://api.github.com/users/rayran1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayran1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayran1234/subscriptions", "organizations_url": "https://api.github.com/users/rayran1234/orgs", "repos_url": "https://api.github.com/users/rayran1234/repos", "events_url": "https://api.github.com/users/rayran1234/events{/privacy}", "received_events_url": "https://api.github.com/users/rayran1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-17T23:13:54Z", "updated_at": "2019-07-17T23:26:07Z", "closed_at": "2019-07-17T23:26:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had difficulty finding documentation on the AsyncBufferedReader() function from the asyncio_demo.py example code you provided. I was able to see BufferedReader()  but not AsyncBufferedReader() . Would you be able to help me find it? Thanks\r\n\r\n`reader = can.AsyncBufferedReader()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/639", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/639/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/639/events", "html_url": "https://github.com/hardbyte/python-can/issues/639", "id": 467024657, "node_id": "MDU6SXNzdWU0NjcwMjQ2NTc=", "number": 639, "title": "Testing CAN message receive/send on computer", "user": {"login": "rayran1234", "id": 25093962, "node_id": "MDQ6VXNlcjI1MDkzOTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/25093962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayran1234", "html_url": "https://github.com/rayran1234", "followers_url": "https://api.github.com/users/rayran1234/followers", "following_url": "https://api.github.com/users/rayran1234/following{/other_user}", "gists_url": "https://api.github.com/users/rayran1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayran1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayran1234/subscriptions", "organizations_url": "https://api.github.com/users/rayran1234/orgs", "repos_url": "https://api.github.com/users/rayran1234/repos", "events_url": "https://api.github.com/users/rayran1234/events{/privacy}", "received_events_url": "https://api.github.com/users/rayran1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-11T17:45:53Z", "updated_at": "2019-07-11T17:53:17Z", "closed_at": "2019-07-11T17:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering about how I could test the example \"receive_all.py\" on my computer. Is there an easy method to generate messages from my computer and also receive those messages from my computer? \r\n\r\nI know I may need to change the channel and bustype but I'm not sure which one I'd need in order to simulate the behavior on my computer.\r\n\r\n`def receive_all():\r\n\r\n    bus = can.interface.Bus(bustype='pcan', channel='PCAN_USBBUS1', bitrate=250000)\r\n    #bus = can.interface.Bus(bustype='ixxat', channel=0, bitrate=250000)\r\n    #bus = can.interface.Bus(bustype='vector', app_name='CANalyzer', channel=0, bitrate=250000)\r\n\r\n    bus.state = BusState.ACTIVE  # or BusState.PASSIVE\r\n\r\n    try:\r\n        while True:\r\n            msg = bus.recv(1)   #Receive the messages on the bus without a filter\r\n            if msg is not None: #There is a message\r\n                print(msg)\r\n            else:\r\n                print(\"No messages!!!\")\r\n    except KeyboardInterrupt:\r\n        pass\r\n\r\nprint(\"Going to read CAN messages\")\r\nreceive_all()`\r\n\r\nThank you for you assistance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/636", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/636/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/636/events", "html_url": "https://github.com/hardbyte/python-can/issues/636", "id": 465791326, "node_id": "MDU6SXNzdWU0NjU3OTEzMjY=", "number": 636, "title": "Code not working after updating from 3.1.1 to 3.2.0 ", "user": {"login": "philippherget", "id": 49745468, "node_id": "MDQ6VXNlcjQ5NzQ1NDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/49745468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippherget", "html_url": "https://github.com/philippherget", "followers_url": "https://api.github.com/users/philippherget/followers", "following_url": "https://api.github.com/users/philippherget/following{/other_user}", "gists_url": "https://api.github.com/users/philippherget/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippherget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippherget/subscriptions", "organizations_url": "https://api.github.com/users/philippherget/orgs", "repos_url": "https://api.github.com/users/philippherget/repos", "events_url": "https://api.github.com/users/philippherget/events{/privacy}", "received_events_url": "https://api.github.com/users/philippherget/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-07-09T13:47:21Z", "updated_at": "2019-07-29T09:36:39Z", "closed_at": "2019-07-27T06:24:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #593\r\n\r\nI am using a Raspberry Pi Zero W with a Waveshare rs485 can board and raspbian installed. The python-can version was 3.1.1. \r\n\r\nSince updating to 3.2.0 I run into several issues. First of all 'is_extended_id' causes an error and seems to be unknown. I figured out it's working when replaced with 'extended_id'.\r\n`TypeError: __init__() got an unexpected keyword argument 'is_extended_id'`\r\n\r\n'Send_periodic' isn't working anymore.\r\n`Attribute Error: 'SocketcanNative_Bus' object has no attribute 'send_periodic'`\r\n\r\nAdditionally there is an issue with 'modify_data'.\r\n`Attribute Error: 'NoneType' object has no attribute 'modify_data'`\r\n\r\nI tried all the releases mentioned in #593 and also 3.3.0. If I go back to 3.1.1 my code doesn't work anymore and I can't figure out what might be the issue. When installing it finishes the installation but during the installation mentions the windows-curses issue.\r\n\r\nCode I am running:\r\n\r\n```\r\nimport os\r\nimport time\r\nimport can\r\n\r\nos.system(\"sudo /sbin/ip link set can0 up type can bitrate 250000\")\r\n\r\nbus = can.interface.Bus(bustype='socketcan', channel='can0', bitrate=250000)\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\ndef Simulation(bus):\r\n    msg = can.Message(arbitration_id=0x18F00400, data=[0, 0, 0, 0xF4, 0x01, 0, 0, 0], is_extended_id=True)\r\n    task = bus.send_periodic(msg, 1)\r\n    time.sleep(1)\r\n    msg.data[3] = (0x1F4 & 0xFF)\r\n    msg.data[4] = ((0x1F4 & 0xFF) >> 8)\r\n    task.modify_data(msg)\r\n    time.sleep(1)\r\n\r\n```\r\n\r\nEverything was working as intended before updating. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/634", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/634/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/634/events", "html_url": "https://github.com/hardbyte/python-can/issues/634", "id": 463423657, "node_id": "MDU6SXNzdWU0NjM0MjM2NTc=", "number": 634, "title": "stop_all_periodic_tasks skipping every other task", "user": {"login": "mikado98765", "id": 35907464, "node_id": "MDQ6VXNlcjM1OTA3NDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/35907464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikado98765", "html_url": "https://github.com/mikado98765", "followers_url": "https://api.github.com/users/mikado98765/followers", "following_url": "https://api.github.com/users/mikado98765/following{/other_user}", "gists_url": "https://api.github.com/users/mikado98765/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikado98765/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikado98765/subscriptions", "organizations_url": "https://api.github.com/users/mikado98765/orgs", "repos_url": "https://api.github.com/users/mikado98765/repos", "events_url": "https://api.github.com/users/mikado98765/events{/privacy}", "received_events_url": "https://api.github.com/users/mikado98765/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-07-02T20:35:21Z", "updated_at": "2019-07-16T18:43:20Z", "closed_at": "2019-07-16T18:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the logic for stop_all_periodic_tasks in bus.py removes each task from self._periodic_tasks as it goes through the loop. But if it removes and increments each time through it would skip every other task (if the remove_task flag is true).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/631", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/631/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/631/events", "html_url": "https://github.com/hardbyte/python-can/issues/631", "id": 460709830, "node_id": "MDU6SXNzdWU0NjA3MDk4MzA=", "number": 631, "title": "TypeError: unhashable type", "user": {"login": "andrewarrow", "id": 127054, "node_id": "MDQ6VXNlcjEyNzA1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/127054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewarrow", "html_url": "https://github.com/andrewarrow", "followers_url": "https://api.github.com/users/andrewarrow/followers", "following_url": "https://api.github.com/users/andrewarrow/following{/other_user}", "gists_url": "https://api.github.com/users/andrewarrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewarrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewarrow/subscriptions", "organizations_url": "https://api.github.com/users/andrewarrow/orgs", "repos_url": "https://api.github.com/users/andrewarrow/repos", "events_url": "https://api.github.com/users/andrewarrow/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewarrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-26T00:58:27Z", "updated_at": "2019-06-26T15:17:24Z", "closed_at": "2019-06-26T15:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this same error on linux and Mac (after installing drivers for each):\r\n\r\n```\r\npython-can/can/interfaces/pcan/basic.py\", line 826, in SetValue\r\n    if Parameter in {PCAN_LOG_LOCATION, PCAN_LOG_TEXT, PCAN_TRACE_LOCATION}:\r\n```\r\n\r\nI'm making `PcanBus(\"PCAN_USBBUS1\", bitrate=500000)` am I missing some param?\r\n\r\nIt's very close to working. I see it used the usb device but just this weird unhashable type error.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/630", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/630/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/630/events", "html_url": "https://github.com/hardbyte/python-can/issues/630", "id": 460431125, "node_id": "MDU6SXNzdWU0NjA0MzExMjU=", "number": 630, "title": "Time usage Message.__iter__", "user": {"login": "kvwoerden", "id": 28924027, "node_id": "MDQ6VXNlcjI4OTI0MDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/28924027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvwoerden", "html_url": "https://github.com/kvwoerden", "followers_url": "https://api.github.com/users/kvwoerden/followers", "following_url": "https://api.github.com/users/kvwoerden/following{/other_user}", "gists_url": "https://api.github.com/users/kvwoerden/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvwoerden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvwoerden/subscriptions", "organizations_url": "https://api.github.com/users/kvwoerden/orgs", "repos_url": "https://api.github.com/users/kvwoerden/repos", "events_url": "https://api.github.com/users/kvwoerden/events{/privacy}", "received_events_url": "https://api.github.com/users/kvwoerden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-25T13:39:32Z", "updated_at": "2019-07-11T05:11:04Z", "closed_at": "2019-07-11T05:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python-can@develop to read all CAN messages of a rather large (200 MB) blf file. Since I need to optimize the runtime, I profiled this using `cProfile`. It turns out that 36% of the total runtime is spent in `Message.__iter__` and its subfunction calls, of which 20% is spent in `Message.__iter__` itself. I was wondering whether I could optimize this, and where all this time in `Message.__iter__` might be spend, because this is not clear to me from the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/627", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/627/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/627/events", "html_url": "https://github.com/hardbyte/python-can/issues/627", "id": 458299923, "node_id": "MDU6SXNzdWU0NTgyOTk5MjM=", "number": 627, "title": "Is it possible to support iso15765-2 message over neovi interface?", "user": {"login": "zhihongliuus", "id": 4848879, "node_id": "MDQ6VXNlcjQ4NDg4Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4848879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhihongliuus", "html_url": "https://github.com/zhihongliuus", "followers_url": "https://api.github.com/users/zhihongliuus/followers", "following_url": "https://api.github.com/users/zhihongliuus/following{/other_user}", "gists_url": "https://api.github.com/users/zhihongliuus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhihongliuus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhihongliuus/subscriptions", "organizations_url": "https://api.github.com/users/zhihongliuus/orgs", "repos_url": "https://api.github.com/users/zhihongliuus/repos", "events_url": "https://api.github.com/users/zhihongliuus/events{/privacy}", "received_events_url": "https://api.github.com/users/zhihongliuus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T02:07:04Z", "updated_at": "2019-10-18T14:33:59Z", "closed_at": "2019-10-18T14:33:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the example from python_ics:\r\n\r\nhttps://github.com/intrepidcs/python_ics/blob/2201cba0344e923aa6bc2472d5e61c3661b63658/examples/iso15765_example.py#L50\r\n\r\n# Iso15765 Fuctions #########################################################\r\ndef transmit_iso15765_msg(device, netid=ics.NETID_HSCAN, is_canfd=False):\r\n    number_of_bytes = 64\r\n    msg = ics.CmISO157652TxMessage()\r\n    msg.id = 0x7E0\r\n    msg.vs_netid = netid\r\n    msg.num_bytes = number_of_bytes\r\n    msg.padding = 0xAA\r\n    # Flow Control\r\n    msg.fc_id = 0x7E8\r\n    msg.fc_id_mask = 0xFFF\r\n    msg.flowControlExtendedAddress = 0xFE\r\n    msg.fs_timeout = 0x10 # ms\r\n    msg.fs_wait = 0x3000 # ms\r\n    msg.blockSize = 0\r\n    msg.stMin = 0\r\n    # CmISO157652TxMessage.flags bitfield union isn't implemented as of 2.12, we need to do it manually.\r\n    msg.flags = 0\r\n    # paddingEnable\r\n    msg.flags |= (1 << 5)\r\n    # CANFD: Enable + BRS\r\n    if is_canfd:\r\n        msg.flags |= (1 << 6) | (1 << 7)\r\n    # tx_dl\r\n    msg.flags |= (8 << 23)\r\n    # Data\r\n    msg.data = [x for x in range(number_of_bytes)]\r\n\r\n    # Transmit the message\r\n    print(\"Transmitting iso15765 message on {}...\".format(dev_name(device)))\r\n    ics.iso15765_transmit_message(device, netid, msg, 3000)\r\n    # Wait for the messages to be transmitted, this can be calculated a lot better but works here.\r\n    time.sleep((((number_of_bytes/8)*msg.fs_timeout)/1000.0)+0.5)\r\n    #print_message(msg)\r\n    print(\"Transmitted iso15765 message on {}.\".format(dev_name(device)))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/623", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/623/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/623/events", "html_url": "https://github.com/hardbyte/python-can/issues/623", "id": 455220701, "node_id": "MDU6SXNzdWU0NTUyMjA3MDE=", "number": 623, "title": "Python-can broken on Raspberry Pi 4.19.42-v7+", "user": {"login": "skpang", "id": 1058977, "node_id": "MDQ6VXNlcjEwNTg5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1058977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skpang", "html_url": "https://github.com/skpang", "followers_url": "https://api.github.com/users/skpang/followers", "following_url": "https://api.github.com/users/skpang/following{/other_user}", "gists_url": "https://api.github.com/users/skpang/gists{/gist_id}", "starred_url": "https://api.github.com/users/skpang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skpang/subscriptions", "organizations_url": "https://api.github.com/users/skpang/orgs", "repos_url": "https://api.github.com/users/skpang/repos", "events_url": "https://api.github.com/users/skpang/events{/privacy}", "received_events_url": "https://api.github.com/users/skpang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-06-12T13:40:04Z", "updated_at": "2019-06-18T11:57:50Z", "closed_at": "2019-06-12T14:55:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python-can use to work on the Raspberry Pi but with latest version of the kernel something seems to be broken.\r\n\r\nuname -a\r\nLinux raspberrypi 4.19.42-v7+ #1219 SMP Tue May 14 21:20:58 BST 2019 armv7l GNU/Linux\r\n\r\nWhen I try to import can, I get this error.\r\n\r\npython3\r\nPython 3.5.3 (default, Sep 27 2018, 17:25:39) \r\n[GCC 6.3.0 20170516] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import can\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 664, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 634, in _load_backward_compatible\r\n  File \"/usr/local/lib/python3.5/dist-packages/python_can-3.2.0-py3.5.egg/can/__init__.py\", line 24, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 664, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 634, in _load_backward_compatible\r\n  File \"/usr/local/lib/python3.5/dist-packages/python_can-3.2.0-py3.5.egg/can/io/__init__.py\", line 9, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 664, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 634, in _load_backward_compatible\r\n  File \"/usr/local/lib/python3.5/dist-packages/python_can-3.2.0-py3.5.egg/can/io/logger.py\", line 15, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 954, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 896, in _find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1147, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1123, in _get_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1104, in _legacy_get_spec\r\n  File \"<frozen importlib._bootstrap>\", line 444, in spec_from_loader\r\n  File \"<frozen importlib._bootstrap_external>\", line 541, in spec_from_file_location\r\n  File \"/usr/local/lib/python3.5/dist-packages/python_can-3.2.0-py3.5.egg/can/io/sqlite.py\", line 155\r\n    f\"INSERT INTO {self.table_name} VALUES (?, ?, ?, ?, ?, ?, ?)\"\r\n                                                                ^\r\nSyntaxError: invalid syntax\r\n\r\nAnyone know how to fix this ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/620", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/620/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/620/events", "html_url": "https://github.com/hardbyte/python-can/issues/620", "id": 453988827, "node_id": "MDU6SXNzdWU0NTM5ODg4Mjc=", "number": 620, "title": "CanalystII parameter parsing seems broken", "user": {"login": "dankamongmen", "id": 143473, "node_id": "MDQ6VXNlcjE0MzQ3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/143473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankamongmen", "html_url": "https://github.com/dankamongmen", "followers_url": "https://api.github.com/users/dankamongmen/followers", "following_url": "https://api.github.com/users/dankamongmen/following{/other_user}", "gists_url": "https://api.github.com/users/dankamongmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankamongmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankamongmen/subscriptions", "organizations_url": "https://api.github.com/users/dankamongmen/orgs", "repos_url": "https://api.github.com/users/dankamongmen/repos", "events_url": "https://api.github.com/users/dankamongmen/events{/privacy}", "received_events_url": "https://api.github.com/users/dankamongmen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 448741913, "node_id": "MDU6TGFiZWw0NDg3NDE5MTM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dankamongmen", "id": 143473, "node_id": "MDQ6VXNlcjE0MzQ3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/143473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankamongmen", "html_url": "https://github.com/dankamongmen", "followers_url": "https://api.github.com/users/dankamongmen/followers", "following_url": "https://api.github.com/users/dankamongmen/following{/other_user}", "gists_url": "https://api.github.com/users/dankamongmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankamongmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankamongmen/subscriptions", "organizations_url": "https://api.github.com/users/dankamongmen/orgs", "repos_url": "https://api.github.com/users/dankamongmen/repos", "events_url": "https://api.github.com/users/dankamongmen/events{/privacy}", "received_events_url": "https://api.github.com/users/dankamongmen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dankamongmen", "id": 143473, "node_id": "MDQ6VXNlcjE0MzQ3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/143473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dankamongmen", "html_url": "https://github.com/dankamongmen", "followers_url": "https://api.github.com/users/dankamongmen/followers", "following_url": "https://api.github.com/users/dankamongmen/following{/other_user}", "gists_url": "https://api.github.com/users/dankamongmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dankamongmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dankamongmen/subscriptions", "organizations_url": "https://api.github.com/users/dankamongmen/orgs", "repos_url": "https://api.github.com/users/dankamongmen/repos", "events_url": "https://api.github.com/users/dankamongmen/events{/privacy}", "received_events_url": "https://api.github.com/users/dankamongmen/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-06-10T04:03:10Z", "updated_at": "2019-06-13T08:50:07Z", "closed_at": "2019-06-13T08:49:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The CanalystII support seems out-of-line with current practice and documentation. For one, it wants 'baud' rather than 'bitrate'. Furthermore, it doesn't pass free parameters through to BusABC's constructor. I've prepared a PR to resolve these problems as #617 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/618", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/618/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/618/events", "html_url": "https://github.com/hardbyte/python-can/issues/618", "id": 453861151, "node_id": "MDU6SXNzdWU0NTM4NjExNTE=", "number": 618, "title": "Problem in send data to canbus", "user": {"login": "imohammad74", "id": 25779233, "node_id": "MDQ6VXNlcjI1Nzc5MjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/25779233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imohammad74", "html_url": "https://github.com/imohammad74", "followers_url": "https://api.github.com/users/imohammad74/followers", "following_url": "https://api.github.com/users/imohammad74/following{/other_user}", "gists_url": "https://api.github.com/users/imohammad74/gists{/gist_id}", "starred_url": "https://api.github.com/users/imohammad74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imohammad74/subscriptions", "organizations_url": "https://api.github.com/users/imohammad74/orgs", "repos_url": "https://api.github.com/users/imohammad74/repos", "events_url": "https://api.github.com/users/imohammad74/events{/privacy}", "received_events_url": "https://api.github.com/users/imohammad74/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-09T04:19:55Z", "updated_at": "2019-06-09T07:39:25Z", "closed_at": "2019-06-09T07:39:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI have a network include Arduino and RPi 3B+. I Use python-can for receive data from Arduino and it's work well; But i can't send data from RPi to Arduino. I Used a sample code that is readthedocs; python don't me error, but don't receive data to Arduino.\r\n(Although i can send data to Arduino with raspberrian termianal) \r\npython-can: 2.2.0\r\npython: 3.5.2\r\n\r\nthe python code:\r\n`\r\n    bus = can.Bus(channel='can0', interface='socketcan')\r\n    msg = can.Message(arbitration_id=123,data=[0, 25, 0, 1, 3, 1, 4, 1])\r\n    time.sleep(2)\r\n    print (msg)\r\n    bus.send(msg)\r\n`\r\n\r\n\r\nthe Arduino code:\r\n\r\n`\r\n#include <SPI.h>  \r\n#include \"mcp_can.h\"  \r\n\r\nconst int spiCSPin = 10;  \r\nconst int ledPin = 2;  \r\nboolean ledON = 1;  \r\n\r\nMCP_CAN CAN(spiCSPin);  \r\n\r\nvoid setup()  \r\n{  \r\n    Serial.begin(115200);\r\n    pinMode(ledPin,OUTPUT);\r\n\r\n    while (CAN_OK != CAN.begin(CAN_500KBPS))\r\n    {\r\n        Serial.println(\"CAN BUS Init Failed\");\r\n        delay(100);\r\n    }\r\n    Serial.println(\"CAN BUS  Init OK!\");\r\n}\r\n\r\nvoid loop()\r\n{\r\n    unsigned char len = 0;\r\n    unsigned char buf[8]; \r\n    \r\n    if(CAN_MSGAVAIL == CAN.checkReceive())\r\n    {\r\n      CAN.readMsgBuf(&len, buf);\r\n        printf(\"Heloo\");\r\n\r\n        unsigned long canId = CAN.getCanId();\r\n\r\n        Serial.println(\"-----------------------------\");\r\n        Serial.print(\"Data from ID: 0x\");\r\n        Serial.println(canId, HEX);\r\n      }\r\n}\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/609", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/609/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/609/events", "html_url": "https://github.com/hardbyte/python-can/issues/609", "id": 450351770, "node_id": "MDU6SXNzdWU0NTAzNTE3NzA=", "number": 609, "title": "Syntax error socketcan.py", "user": {"login": "sbourkedev", "id": 40250318, "node_id": "MDQ6VXNlcjQwMjUwMzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/40250318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbourkedev", "html_url": "https://github.com/sbourkedev", "followers_url": "https://api.github.com/users/sbourkedev/followers", "following_url": "https://api.github.com/users/sbourkedev/following{/other_user}", "gists_url": "https://api.github.com/users/sbourkedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbourkedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbourkedev/subscriptions", "organizations_url": "https://api.github.com/users/sbourkedev/orgs", "repos_url": "https://api.github.com/users/sbourkedev/repos", "events_url": "https://api.github.com/users/sbourkedev/events{/privacy}", "received_events_url": "https://api.github.com/users/sbourkedev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-30T15:00:50Z", "updated_at": "2019-06-04T08:57:24Z", "closed_at": "2019-06-04T08:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Syntax error in print statement\r\nsocketcan.py\r\nLINE 680\r\n\r\n```\r\n675  def receiver(event):\r\n676  receiver_socket = create_socket()\r\n677  bind_socket(receiver_socket, \"vcan0\")\r\n678  print(\"Receiver is waiting for a message...\")\r\n679  event.set()\r\n680  print(f\"Receiver got: {capture_message(receiver_socket)}\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/608", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/608/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/608/events", "html_url": "https://github.com/hardbyte/python-can/issues/608", "id": 450342093, "node_id": "MDU6SXNzdWU0NTAzNDIwOTM=", "number": 608, "title": "Can not log sent messages on KvaserBus", "user": {"login": "HellDeveloper91", "id": 16177334, "node_id": "MDQ6VXNlcjE2MTc3MzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/16177334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HellDeveloper91", "html_url": "https://github.com/HellDeveloper91", "followers_url": "https://api.github.com/users/HellDeveloper91/followers", "following_url": "https://api.github.com/users/HellDeveloper91/following{/other_user}", "gists_url": "https://api.github.com/users/HellDeveloper91/gists{/gist_id}", "starred_url": "https://api.github.com/users/HellDeveloper91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HellDeveloper91/subscriptions", "organizations_url": "https://api.github.com/users/HellDeveloper91/orgs", "repos_url": "https://api.github.com/users/HellDeveloper91/repos", "events_url": "https://api.github.com/users/HellDeveloper91/events{/privacy}", "received_events_url": "https://api.github.com/users/HellDeveloper91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-30T14:41:09Z", "updated_at": "2019-05-31T12:25:55Z", "closed_at": "2019-05-31T12:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've seen some issues relating this topic but there is a difference in my case. I'm creating a KvaserBus and a ASCWriter as arguments for a Notifier and I was expecting getting in a ASC file all the can frames running trough the Kvaser but there are only the frames received.\r\nThis is a simple demo to reproduce that scenario:\r\n\r\n```\r\nimport can\r\nimport time\r\n\r\nfrom can.interfaces.kvaser import canlib\r\nfrom can.io import asc\r\n\r\nlog_listener = asc.ASCWriter(file=\"dummylog2.asc\", channel=0)\r\nvirtual_ecu = canlib.KvaserBus(\r\n    channel=0,\r\n    config={'bitrate': 500000, 'receive_own_messages': True}\r\n)\r\nnotifier = can.Notifier([virtual_ecu], [log_listener])\r\nsupplier_session = can.Message(\r\n    is_extended_id=False,\r\n    arbitration_id=0x7d4,\r\n    data=[0x02, 0x10, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\r\n    dlc=8,\r\n    channel=0\r\n)\r\ntester_present = can.Message(\r\n    is_extended_id=False,\r\n    arbitration_id=0x7d4,\r\n    data=[0x02, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\r\n    dlc=8,\r\n    channel=0\r\n)\r\nvirtual_ecu.send(supplier_session)\r\ntime.sleep(1)\r\nvirtual_ecu.send_periodic(tester_present, 1)\r\ntime.sleep(5)\r\nvirtual_ecu.stop_all_periodic_tasks()\r\nvirtual_ecu.shutdown()\r\n```\r\nAnd this is part of the log generated:\r\n\r\n>  0.376320 1  516             Rx   d 1 01\r\n>  0.378620 1  7DC             Rx   d 8 02 50 60 00 00 00 00 00\r\n>  1.012990 1  7DC             Rx   d 8 03 7F 3E 13 00 00 00 00\r\n>  1.372840 1  516             Rx   d 1 01\r\n>  2.007890 1  7DC             Rx   d 8 03 7F 3E 13 00 00 00 00\r\n>  2.372780 1  516             Rx   d 1 01\r\n>  3.012860 1  7DC             Rx   d 8 03 7F 3E 13 00 00 00 00\r\n>  3.372710 1  516             Rx   d 1 01\r\n>  4.012880 1  7DC             Rx   d 8 03 7F 3E 13 00 00 00 00\r\n>  4.372650 1  516             Rx   d 1 01\r\n>  5.012820 1  7DC             Rx   d 8 03 7F 3E 13 00 00 00 00\r\n>  5.372670 1  516             Rx   d 1 01\r\n\r\nThe frames with arbitration_id 7dc are the responses of another device to my sent frames with arbitration_id 7d4 so the frames are being sent but not logged.\r\n\r\nChecking the KvaserBus config parameters we can see:\r\n\r\n:param bool single_handle:\r\n            Use one Kvaser CANLIB bus handle for both reading and writing.\r\n            This can be set if reading and/or writing is done from one thread.\r\n\r\n:param bool receive_own_messages:\r\n            If messages transmitted should also be received back.\r\n            Only works if single_handle is also False.\r\n            If you want to receive messages from other applications on the same\r\n            computer, set this to True or set single_handle to True.\r\n\r\nI am assuming that if I create a KvaserBus with the parameter receiver_own_messages True and single_handle False or viceversa I should see my sent messages on the log. Please tell me if I'm doing something wrong or it is an issue. \r\n\r\nI'm using Windows10 and Python 2.7.13, ask me for any info you need.\r\npython-can version 3.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/606", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/606/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/606/events", "html_url": "https://github.com/hardbyte/python-can/issues/606", "id": 449185948, "node_id": "MDU6SXNzdWU0NDkxODU5NDg=", "number": 606, "title": "Incorrect frame re-transmission when arbitration ID is duplicate", "user": {"login": "sbourkedev", "id": 40250318, "node_id": "MDQ6VXNlcjQwMjUwMzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/40250318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbourkedev", "html_url": "https://github.com/sbourkedev", "followers_url": "https://api.github.com/users/sbourkedev/followers", "following_url": "https://api.github.com/users/sbourkedev/following{/other_user}", "gists_url": "https://api.github.com/users/sbourkedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbourkedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbourkedev/subscriptions", "organizations_url": "https://api.github.com/users/sbourkedev/orgs", "repos_url": "https://api.github.com/users/sbourkedev/repos", "events_url": "https://api.github.com/users/sbourkedev/events{/privacy}", "received_events_url": "https://api.github.com/users/sbourkedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 13, "created_at": "2019-05-28T10:18:42Z", "updated_at": "2019-07-11T05:09:38Z", "closed_at": "2019-07-10T21:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When arbitration ID is duplicate, only the last message with that arbitration ID is re-transmitted according to period.\r\n\r\nBelow is a code snippet of how messages are defined.\r\nNote that pm_snapshot_msg, vin1_msg, vin2_msg & vin3_msg have the same arbitration_id 0x400.\r\n\r\n```\r\nself.pm_msg = can.Message(\r\n            arbitration_id=0xFF, \r\n            data=self.pm_data, \r\n            extended_id=False, \r\n            dlc=8)\r\n\r\n        self.pm_snapshot_msg = can.Message(\r\n            arbitration_id=0x400, \r\n            data=self.pm_snapshot_data,\r\n            extended_id=False, \r\n            dlc=8)\r\n        self.nm_msg = can.Message(\r\n            arbitration_id=0x51E, \r\n            data=self.nm_data, \r\n            extended_id=False, \r\n            dlc=8)\r\n\r\n        self.vs_msg = can.Message(\r\n            arbitration_id=0x11, \r\n            data=self.vs_data, \r\n            extended_id=False, \r\n            dlc=8)\r\n\r\n        self.vin1_msg = can.Message(\r\n            arbitration_id=0x400, \r\n            data=self.vin1_data,\r\n            extended_id=False, \r\n            dlc=8)\r\n\r\n        self.vin2_msg = can.Message(\r\n            arbitration_id=0x400, \r\n            data=self.vin2_data,\r\n            extended_id=False, \r\n            dlc=8)\r\n\r\n        self.vin3_msg = can.Message(\r\n            arbitration_id=0x400, \r\n            data=self.vin3_data,\r\n            extended_id=False, \r\n            dlc=8)\r\n```\r\n\r\nBelow is code where messages are sent.\r\n\r\n```\r\ndef wake(self):\r\n        if self.can_state == \"sleep\":\r\n            self.nm_data[1] = 0x2\r\n            self.nm_msg.data = self.nm_data\r\n            self.nm_task = self.bus.send_periodic(self.nm_msg, self.nm_period)\r\n            if not isinstance(self.nm_task, can.ModifiableCyclicTaskABC):\r\n                print(\"This interface doesn't seem to support modification\")\r\n                task.stop()\r\n                exit(-1)\r\n            self.pm_task = self.bus.send_periodic(self.pm_msg, self.pm_period)\r\n            self.pm_snapshot_task = self.bus.send_periodic(self.pm_snapshot_msg, self.pm_snapshot_period)\r\n            self.vs_task = self.bus.send_periodic(self.vs_msg, self.vs_period)\r\n            self.vin1_task = self.bus.send_periodic(self.vin1_msg, self.vin_period)\r\n            self.vin2_task = self.bus.send_periodic(self.vin2_msg, self.vin_period)\r\n            self.vin3_task = self.bus.send_periodic(self.vin3_msg, self.vin_period)\r\n            self.can_state = \"active\"\r\n        else:\r\n            print(\"Sim already running\")\r\n```\r\n\r\nBelow is the candump after wake() is called. Note that all messages are transmitted at first, but after that only the last message with arbitration id of 0x400 is sent, namely vin3_msg, which was the last message to be defined with arbitration id of 0x400.\r\n\r\n```\r\ncan0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  400   [8]  B0 A1 B1 C1 D1 E1 04 00 <-- pm_snapshot_msg 0x400\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  400   [8]  57 00 00 00 4B 4C 31 54  <-- vin1_msg 0x400\r\n  can0  400   [8]  58 44 35 44 45 33 42 42  <-- vin2_msg 0x400\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  51E   [8]  10 02 00 00 00 00 00 00\r\n  can0  400   [8]  59 31 39 35 37 35 36 00  <-- vin3_msg 0x400\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n  can0  0FF   [8]  00 00 04 60 00 00 00 00\r\n  can0  011   [8]  00 C0 0C 00 00 00 00 00\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/605", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/605/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/605/events", "html_url": "https://github.com/hardbyte/python-can/issues/605", "id": 449141605, "node_id": "MDU6SXNzdWU0NDkxNDE2MDU=", "number": 605, "title": "Error when attempting to stop messages with same arbitration ID", "user": {"login": "sbourkedev", "id": 40250318, "node_id": "MDQ6VXNlcjQwMjUwMzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/40250318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbourkedev", "html_url": "https://github.com/sbourkedev", "followers_url": "https://api.github.com/users/sbourkedev/followers", "following_url": "https://api.github.com/users/sbourkedev/following{/other_user}", "gists_url": "https://api.github.com/users/sbourkedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbourkedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbourkedev/subscriptions", "organizations_url": "https://api.github.com/users/sbourkedev/orgs", "repos_url": "https://api.github.com/users/sbourkedev/repos", "events_url": "https://api.github.com/users/sbourkedev/events{/privacy}", "received_events_url": "https://api.github.com/users/sbourkedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-28T08:48:04Z", "updated_at": "2019-07-14T09:43:59Z", "closed_at": "2019-07-14T09:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This error is returned when attempting to stop messages that have the same arbitration ID\r\n  ```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/can/interfaces/socketcan/socketcan.py\", line 280, in send_bcm\r\n    return bcm_socket.send(data)\r\nOSError: [Errno 22] Invalid argument\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"simple-nm-sim.py\", line 238, in <module>\r\n    sim.force_stop()\r\n  File \"simple-nm-sim.py\", line 179, in force_stop\r\n    self.vin1_task.stop()\r\n  File \"/usr/local/lib/python3.5/dist-packages/can/bus.py\", line 218, in wrapped_stop_method\r\n    original_stop_method()\r\n  File \"/usr/local/lib/python3.5/dist-packages/can/interfaces/socketcan/socketcan.py\", line 365, in stop\r\n    send_bcm(self.bcm_socket, stopframe)\r\n  File \"/usr/local/lib/python3.5/dist-packages/can/interfaces/socketcan/socketcan.py\", line 285, in send_bcm\r\n    raise can.CanError(base + \"You are probably referring to a non-existing frame.\")\r\ncan.CanError: Couldn't send CAN BCM frame. OS Error 22: Invalid argument\r\nYou are probably referring to a non-existing frame.\r\n```\r\n\r\nBelow is the code snippet where messages are defined and also where messages are being stopped. pm_snapshot_task is stopped first then an error is thrown when attempting to stop vin1_task as it has the same arbitration ID.\r\n       \r\n      \r\n```\r\nself.pm_snapshot_msg = can.Message(\r\n            arbitration_id=0x400,\r\n            data=self.pm_snapshot_data,\r\n            extended_id=False,\r\n            dlc=8)\r\n\r\n        self.nm_msg = can.Message(\r\n            arbitration_id=0x51E,\r\n            data=self.nm_data,\r\n            extended_id=False,\r\n            dlc=8)\r\n\r\n        self.vs_msg = can.Message(\r\n            arbitration_id=0x11,\r\n            data=self.vs_data,\r\n            extended_id=False,\r\n            dlc=8)\r\n\r\n        self.vin1_msg = can.Message(\r\n            arbitration_id=0x400,\r\n            data=self.vin1_data,\r\n            extended_id=False,\r\n            dlc=8)\r\n```\r\nStopping the tasks\r\n\r\n```\r\nif self.pm_snapshot_task is not None:\r\n            self.pm_snapshot_task.stop()\r\n            self.pm_snapshot_task = None\r\n\r\n        if self.vs_task is not None:\r\n            self.vs_task.stop()\r\n            self.vs_task = None\r\n\r\n        if self.vin1_task is not None:\r\n            self.vin1_task.stop()\r\n            self.vin1_task = None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/603", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/603/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/603/events", "html_url": "https://github.com/hardbyte/python-can/issues/603", "id": 446938303, "node_id": "MDU6SXNzdWU0NDY5MzgzMDM=", "number": 603, "title": "Module object has no attribute 'bus'", "user": {"login": "Dn1234567", "id": 50899985, "node_id": "MDQ6VXNlcjUwODk5OTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/50899985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dn1234567", "html_url": "https://github.com/Dn1234567", "followers_url": "https://api.github.com/users/Dn1234567/followers", "following_url": "https://api.github.com/users/Dn1234567/following{/other_user}", "gists_url": "https://api.github.com/users/Dn1234567/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dn1234567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dn1234567/subscriptions", "organizations_url": "https://api.github.com/users/Dn1234567/orgs", "repos_url": "https://api.github.com/users/Dn1234567/repos", "events_url": "https://api.github.com/users/Dn1234567/events{/privacy}", "received_events_url": "https://api.github.com/users/Dn1234567/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-22T05:25:04Z", "updated_at": "2020-01-27T17:42:49Z", "closed_at": "2019-06-03T05:44:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\npython-can updated to the latest version.\r\nPython 2.7\r\nRaspberry (rasbian 9 stretch)\r\n\r\n\"\r\nimport can\r\nbus = can.Bus(interface='socketcan',...\r\n\"\r\ngives  AttributeError: 'module' object has no attribute 'bus'\r\nWhat is wrong?\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/600", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/600/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/600/events", "html_url": "https://github.com/hardbyte/python-can/issues/600", "id": 445812357, "node_id": "MDU6SXNzdWU0NDU4MTIzNTc=", "number": 600, "title": "Remove dependency on Six", "user": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448749840, "node_id": "MDU6TGFiZWw0NDg3NDk4NDA=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/minor", "name": "minor", "color": "ededed", "default": false, "description": null}, {"id": 843133035, "node_id": "MDU6TGFiZWw4NDMxMzMwMzU=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/testing", "name": "testing", "color": "68dda8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Lauszus", "id": 1098847, "node_id": "MDQ6VXNlcjEwOTg4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1098847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lauszus", "html_url": "https://github.com/Lauszus", "followers_url": "https://api.github.com/users/Lauszus/followers", "following_url": "https://api.github.com/users/Lauszus/following{/other_user}", "gists_url": "https://api.github.com/users/Lauszus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lauszus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lauszus/subscriptions", "organizations_url": "https://api.github.com/users/Lauszus/orgs", "repos_url": "https://api.github.com/users/Lauszus/repos", "events_url": "https://api.github.com/users/Lauszus/events{/privacy}", "received_events_url": "https://api.github.com/users/Lauszus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Lauszus", "id": 1098847, "node_id": "MDQ6VXNlcjEwOTg4NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1098847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lauszus", "html_url": "https://github.com/Lauszus", "followers_url": "https://api.github.com/users/Lauszus/followers", "following_url": "https://api.github.com/users/Lauszus/following{/other_user}", "gists_url": "https://api.github.com/users/Lauszus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lauszus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lauszus/subscriptions", "organizations_url": "https://api.github.com/users/Lauszus/orgs", "repos_url": "https://api.github.com/users/Lauszus/repos", "events_url": "https://api.github.com/users/Lauszus/events{/privacy}", "received_events_url": "https://api.github.com/users/Lauszus/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-05-19T12:09:13Z", "updated_at": "2019-06-02T02:05:09Z", "closed_at": "2019-06-02T02:05:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey @Lauszus,\r\n\r\nthe file `can/viewer.py` still uses six as a dependency. This was great when you contributed it but is now obsolete. Would you mind removing it from that file and as a requirement in `setup.py`? It shouldn't take very long.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/598", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/598/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/598/events", "html_url": "https://github.com/hardbyte/python-can/issues/598", "id": 445769427, "node_id": "MDU6SXNzdWU0NDU3Njk0Mjc=", "number": 598, "title": "Add mypy checker", "user": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1359284141, "node_id": "MDU6TGFiZWwxMzU5Mjg0MTQx", "url": "https://api.github.com/repos/hardbyte/python-can/labels/QA", "name": "QA", "color": "68dda8", "default": false, "description": "about improving and maintaining the quality of the library"}, {"id": 1251787234, "node_id": "MDU6TGFiZWwxMjUxNzg3MjM0", "url": "https://api.github.com/repos/hardbyte/python-can/labels/good%20first%20contribution", "name": "good first contribution", "color": "128A0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2019-05-19T01:23:04Z", "updated_at": "2020-04-19T02:51:19Z", "closed_at": "2020-04-19T02:51:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Add support for static typing: http://mypy-lang.org/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/593", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/593/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/593/events", "html_url": "https://github.com/hardbyte/python-can/issues/593", "id": 445627920, "node_id": "MDU6SXNzdWU0NDU2Mjc5MjA=", "number": 593, "title": "Broken Install - PyPI Release 3.2.0", "user": {"login": "phil-marble", "id": 33105072, "node_id": "MDQ6VXNlcjMzMTA1MDcy", "avatar_url": "https://avatars3.githubusercontent.com/u/33105072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-marble", "html_url": "https://github.com/phil-marble", "followers_url": "https://api.github.com/users/phil-marble/followers", "following_url": "https://api.github.com/users/phil-marble/following{/other_user}", "gists_url": "https://api.github.com/users/phil-marble/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-marble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-marble/subscriptions", "organizations_url": "https://api.github.com/users/phil-marble/orgs", "repos_url": "https://api.github.com/users/phil-marble/repos", "events_url": "https://api.github.com/users/phil-marble/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-marble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 448750496, "node_id": "MDU6TGFiZWw0NDg3NTA0OTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/critical", "name": "critical", "color": "b60205", "default": false, "description": null}, {"id": 522848189, "node_id": "MDU6TGFiZWw1MjI4NDgxODk=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/os:windows", "name": "os:windows", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2019-05-17T21:40:11Z", "updated_at": "2020-05-22T02:49:05Z", "closed_at": "2020-05-22T02:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #520 \r\n\r\nLooks like a similar issue has come up in the latest release?\r\n\r\n```\r\n$ sudo chroot /tmp/make_image.26839.root /usr/local/bin/pip2 install python-can evdev\r\nRequirement already satisfied: python-can in /usr/local/lib/python2.7/dist-packages\r\nCollecting evdev\r\n  Using cached https://files.pythonhosted.org/packages/fe/6e/3fa84a43571dec4d00dc26befccc9867b6b3263651531cbc1345f718860f/evdev-1.2.0.tar.gz\r\nRequirement already satisfied: typing in /usr/local/lib/python2.7/dist-packages (from python-can)\r\nCollecting windows-curses (from python-can)\r\n  Could not find a version that satisfies the requirement windows-curses (from python-can) (from versions: )\r\nNo matching distribution found for windows-curses (from python-can)\r\nYou are using pip version 9.0.1, however version 19.1.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/589", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/589/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/589/events", "html_url": "https://github.com/hardbyte/python-can/issues/589", "id": 445289667, "node_id": "MDU6SXNzdWU0NDUyODk2Njc=", "number": 589, "title": "Cannot create or write file .blf ", "user": {"login": "hoangkhai6893", "id": 32712037, "node_id": "MDQ6VXNlcjMyNzEyMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/32712037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoangkhai6893", "html_url": "https://github.com/hoangkhai6893", "followers_url": "https://api.github.com/users/hoangkhai6893/followers", "following_url": "https://api.github.com/users/hoangkhai6893/following{/other_user}", "gists_url": "https://api.github.com/users/hoangkhai6893/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoangkhai6893/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoangkhai6893/subscriptions", "organizations_url": "https://api.github.com/users/hoangkhai6893/orgs", "repos_url": "https://api.github.com/users/hoangkhai6893/repos", "events_url": "https://api.github.com/users/hoangkhai6893/events{/privacy}", "received_events_url": "https://api.github.com/users/hoangkhai6893/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487984642, "node_id": "MDU6TGFiZWw0ODc5ODQ2NDI=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/docs", "name": "docs", "color": "bfd4f2", "default": false, "description": null}, {"id": 1307731768, "node_id": "MDU6TGFiZWwxMzA3NzMxNzY4", "url": "https://api.github.com/repos/hardbyte/python-can/labels/file-io", "name": "file-io", "color": "def993", "default": false, "description": "about reading & writing to files"}, {"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-17T06:46:40Z", "updated_at": "2019-06-02T06:05:11Z", "closed_at": "2019-06-02T06:05:10Z", "author_association": "NONE", "active_lock_reason": null, "body": " I try use can.BLFWrite('filelog.blf').on_message_received(msg) to create file , but it not working as well. the file is empty. I don't know how to fix it. Can you help me please ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/579", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/579/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/579/events", "html_url": "https://github.com/hardbyte/python-can/issues/579", "id": 443113592, "node_id": "MDU6SXNzdWU0NDMxMTM1OTI=", "number": 579, "title": "Adding code formatter/linter to workflow?", "user": {"login": "karlding", "id": 6836385, "node_id": "MDQ6VXNlcjY4MzYzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6836385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlding", "html_url": "https://github.com/karlding", "followers_url": "https://api.github.com/users/karlding/followers", "following_url": "https://api.github.com/users/karlding/following{/other_user}", "gists_url": "https://api.github.com/users/karlding/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlding/subscriptions", "organizations_url": "https://api.github.com/users/karlding/orgs", "repos_url": "https://api.github.com/users/karlding/repos", "events_url": "https://api.github.com/users/karlding/events{/privacy}", "received_events_url": "https://api.github.com/users/karlding/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1359284141, "node_id": "MDU6TGFiZWwxMzU5Mjg0MTQx", "url": "https://api.github.com/repos/hardbyte/python-can/labels/QA", "name": "QA", "color": "68dda8", "default": false, "description": "about improving and maintaining the quality of the library"}], "state": "closed", "locked": false, "assignee": {"login": "karlding", "id": 6836385, "node_id": "MDQ6VXNlcjY4MzYzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6836385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlding", "html_url": "https://github.com/karlding", "followers_url": "https://api.github.com/users/karlding/followers", "following_url": "https://api.github.com/users/karlding/following{/other_user}", "gists_url": "https://api.github.com/users/karlding/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlding/subscriptions", "organizations_url": "https://api.github.com/users/karlding/orgs", "repos_url": "https://api.github.com/users/karlding/repos", "events_url": "https://api.github.com/users/karlding/events{/privacy}", "received_events_url": "https://api.github.com/users/karlding/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karlding", "id": 6836385, "node_id": "MDQ6VXNlcjY4MzYzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6836385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlding", "html_url": "https://github.com/karlding", "followers_url": "https://api.github.com/users/karlding/followers", "following_url": "https://api.github.com/users/karlding/following{/other_user}", "gists_url": "https://api.github.com/users/karlding/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlding/subscriptions", "organizations_url": "https://api.github.com/users/karlding/orgs", "repos_url": "https://api.github.com/users/karlding/repos", "events_url": "https://api.github.com/users/karlding/events{/privacy}", "received_events_url": "https://api.github.com/users/karlding/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2019-05-12T15:00:03Z", "updated_at": "2019-06-03T05:58:44Z", "closed_at": "2019-06-03T05:58:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "What are your thoughts on enforcing automated formatting across the project? With various people contributing code, ensuring that consistent code style is followed is always a challenge. This often adds noise to PRs, and just is another thing for PR reviewers to worry about.\r\n\r\nAn automated formatter (I like [black](https://github.com/python/black) due to the lack of configuration options it exposes, but that's just my preference) would automatically format code so that all code is formatted consistently. This can also run in CI to ensure that commits have been formatted correctly before merging.\r\n\r\nIt'll probably cause a lot of conflicts with currently open PRs (and cause 1 giant diff of a commit), but maybe it's worth considering. And if this is adopted, the format can be done incrementally before flipping the CI checks to reduce the amount of pain with open PRs.\r\n\r\nSimilarly, what are your opinions on adding a linter (pylint, flake8, pycodestyle, etc.) to the workflow? An incremental approach could be taken to slowly make things comply with whatever rules are chosen.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/576", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/576/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/576/events", "html_url": "https://github.com/hardbyte/python-can/issues/576", "id": 443057198, "node_id": "MDU6SXNzdWU0NDMwNTcxOTg=", "number": 576, "title": "Escaping warning in usb2can serial selector", "user": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487982683, "node_id": "MDU6TGFiZWw0ODc5ODI2ODM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:usb2can", "name": "backend:usb2can", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741911, "node_id": "MDU6TGFiZWw0NDg3NDE5MTE=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1251787234, "node_id": "MDU6TGFiZWwxMjUxNzg3MjM0", "url": "https://api.github.com/repos/hardbyte/python-can/labels/good%20first%20contribution", "name": "good first contribution", "color": "128A0C", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-05-12T02:39:05Z", "updated_at": "2019-05-19T20:47:33Z", "closed_at": "2019-05-19T20:47:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Noticed a warning in the travis-ci output - https://travis-ci.org/hardbyte/python-can/jobs/531296370\r\n\r\n```\r\ntest/test_detect_available_configs.py::TestDetectAvailableConfigs::test_count_returned\r\n  /home/travis/build/hardbyte/python-can/can/interfaces/usb2can/serial_selector.py:42: DeprecationWarning: invalid escape sequence \\c\r\n    objSWbemServices = objWMIService.ConnectServer(\".\", \"root\\cimv2\")\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/574", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/574/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/574/events", "html_url": "https://github.com/hardbyte/python-can/issues/574", "id": 443033015, "node_id": "MDU6SXNzdWU0NDMwMzMwMTU=", "number": 574, "title": "Potentially unused SocketCAN constants?", "user": {"login": "karlding", "id": 6836385, "node_id": "MDQ6VXNlcjY4MzYzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6836385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlding", "html_url": "https://github.com/karlding", "followers_url": "https://api.github.com/users/karlding/followers", "following_url": "https://api.github.com/users/karlding/following{/other_user}", "gists_url": "https://api.github.com/users/karlding/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlding/subscriptions", "organizations_url": "https://api.github.com/users/karlding/orgs", "repos_url": "https://api.github.com/users/karlding/repos", "events_url": "https://api.github.com/users/karlding/events{/privacy}", "received_events_url": "https://api.github.com/users/karlding/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 487981907, "node_id": "MDU6TGFiZWw0ODc5ODE5MDc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:socketcan", "name": "backend:socketcan", "color": "bfd4f2", "default": false, "description": ""}, {"id": 448741913, "node_id": "MDU6TGFiZWw0NDg3NDE5MTM=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 448749840, "node_id": "MDU6TGFiZWw0NDg3NDk4NDA=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/minor", "name": "minor", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-11T20:24:25Z", "updated_at": "2019-05-12T01:19:15Z", "closed_at": "2019-05-12T01:19:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I was looking through the SocketCAN constants defined in `can/interfaces/socketcan/constants.py`, and noticed these constants:\r\n\r\n```python\r\nREMOTE_FRAME = True\r\nDATA_FRAME = False\r\nWAKEUP_MSG = True\r\nERROR_FRAME = True\r\n\r\nDRIVER_MODE_SILENT = False\r\nDRIVER_MODE_NORMAL = (not DRIVER_MODE_SILENT)\r\n```\r\n\r\nWhat is the purpose of these? Are these just to be backwards compatible so we aren't breaking some old API? I didn't seem to find any documentation about these or a deprecation warning anywhere..\r\n\r\nOtherwise, I didn't see any references in the code where they are used, so can they safely be removed? In my local testing it doesn't seem like removing these breaks anything.\r\n\r\nI have prepared a patch to remove these, but I thought I'd check first before jumping the gun :joy: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/565", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/565/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/565/events", "html_url": "https://github.com/hardbyte/python-can/issues/565", "id": 439847605, "node_id": "MDU6SXNzdWU0Mzk4NDc2MDU=", "number": 565, "title": "AppVeyor Windows tests not using correct Python version", "user": {"login": "hardbyte", "id": 855189, "node_id": "MDQ6VXNlcjg1NTE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardbyte", "html_url": "https://github.com/hardbyte", "followers_url": "https://api.github.com/users/hardbyte/followers", "following_url": "https://api.github.com/users/hardbyte/following{/other_user}", "gists_url": "https://api.github.com/users/hardbyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardbyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardbyte/subscriptions", "organizations_url": "https://api.github.com/users/hardbyte/orgs", "repos_url": "https://api.github.com/users/hardbyte/repos", "events_url": "https://api.github.com/users/hardbyte/events{/privacy}", "received_events_url": "https://api.github.com/users/hardbyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-03T01:09:15Z", "updated_at": "2019-05-03T02:49:38Z", "closed_at": "2019-05-03T02:49:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "While looking at PR #558 I noticed that AppVeyor is ignoring the PYTHON_VERSION\r\n\r\nI ran the tests on a Windows 10 laptop with Python 3.7 and I see a **lot** of failures. Looking at [AppVeyor](https://ci.appveyor.com/project/hardbyte/python-can/builds/24252632/job/ys2r5jy7kh6wocnm) we don't seem to be testing on Python 3:\r\n\r\n```\r\npytest\r\n============================= test session starts =============================\r\nplatform win32 -- Python 2.7.16, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- c:\\python27\\python.exe\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/560", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/560/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/560/events", "html_url": "https://github.com/hardbyte/python-can/issues/560", "id": 438350851, "node_id": "MDU6SXNzdWU0MzgzNTA4NTE=", "number": 560, "title": "Handling of errors of ixxat can interface", "user": {"login": "marcel-kanter", "id": 1293692, "node_id": "MDQ6VXNlcjEyOTM2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1293692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcel-kanter", "html_url": "https://github.com/marcel-kanter", "followers_url": "https://api.github.com/users/marcel-kanter/followers", "following_url": "https://api.github.com/users/marcel-kanter/following{/other_user}", "gists_url": "https://api.github.com/users/marcel-kanter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcel-kanter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcel-kanter/subscriptions", "organizations_url": "https://api.github.com/users/marcel-kanter/orgs", "repos_url": "https://api.github.com/users/marcel-kanter/repos", "events_url": "https://api.github.com/users/marcel-kanter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcel-kanter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448765017, "node_id": "MDU6TGFiZWw0NDg3NjUwMTc=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/api", "name": "api", "color": "68db04", "default": false, "description": ""}, {"id": 487982434, "node_id": "MDU6TGFiZWw0ODc5ODI0MzQ=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/backend:ixxat", "name": "backend:ixxat", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "marcel-kanter", "id": 1293692, "node_id": "MDQ6VXNlcjEyOTM2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1293692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcel-kanter", "html_url": "https://github.com/marcel-kanter", "followers_url": "https://api.github.com/users/marcel-kanter/followers", "following_url": "https://api.github.com/users/marcel-kanter/following{/other_user}", "gists_url": "https://api.github.com/users/marcel-kanter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcel-kanter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcel-kanter/subscriptions", "organizations_url": "https://api.github.com/users/marcel-kanter/orgs", "repos_url": "https://api.github.com/users/marcel-kanter/repos", "events_url": "https://api.github.com/users/marcel-kanter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcel-kanter/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "marcel-kanter", "id": 1293692, "node_id": "MDQ6VXNlcjEyOTM2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1293692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcel-kanter", "html_url": "https://github.com/marcel-kanter", "followers_url": "https://api.github.com/users/marcel-kanter/followers", "following_url": "https://api.github.com/users/marcel-kanter/following{/other_user}", "gists_url": "https://api.github.com/users/marcel-kanter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcel-kanter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcel-kanter/subscriptions", "organizations_url": "https://api.github.com/users/marcel-kanter/orgs", "repos_url": "https://api.github.com/users/marcel-kanter/repos", "events_url": "https://api.github.com/users/marcel-kanter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcel-kanter/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hardbyte/python-can/milestones/8", "html_url": "https://github.com/hardbyte/python-can/milestone/8", "labels_url": "https://api.github.com/repos/hardbyte/python-can/milestones/8/labels", "id": 4052045, "node_id": "MDk6TWlsZXN0b25lNDA1MjA0NQ==", "number": 8, "title": "4.0 Release", "description": "", "creator": {"login": "felixdivo", "id": 4403130, "node_id": "MDQ6VXNlcjQ0MDMxMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4403130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixdivo", "html_url": "https://github.com/felixdivo", "followers_url": "https://api.github.com/users/felixdivo/followers", "following_url": "https://api.github.com/users/felixdivo/following{/other_user}", "gists_url": "https://api.github.com/users/felixdivo/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixdivo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixdivo/subscriptions", "organizations_url": "https://api.github.com/users/felixdivo/orgs", "repos_url": "https://api.github.com/users/felixdivo/repos", "events_url": "https://api.github.com/users/felixdivo/events{/privacy}", "received_events_url": "https://api.github.com/users/felixdivo/received_events", "type": "User", "site_admin": false}, "open_issues": 8, "closed_issues": 81, "state": "open", "created_at": "2019-02-12T19:46:19Z", "updated_at": "2020-08-04T09:47:06Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2019-04-29T14:40:48Z", "updated_at": "2019-06-13T08:48:48Z", "closed_at": "2019-06-13T08:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nfor the ixxat backend, all the errors, that may occur are just logged, including stuffing, ack and crc errors. These should be rare but can occur and should be handled.\r\n\r\nThis is an todo for the ixxat backend in the _recv_internal method.\r\n\r\nAre there plans to update the implementation?\r\nShould I try to fix this (this may involve a change in the return of the _recv_internal and adding some general exceptions to the can interface)?\r\nI would change it to something like this, the method should return a message, None or raise an exception.\r\n\r\nwait until timeout is over:\r\n  if message received:\r\n    return message\r\n  if ack, stuff, etc error:\r\n    raise exception\r\n  if timeout (in the interface):\r\n    pass\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/557", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/557/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/557/events", "html_url": "https://github.com/hardbyte/python-can/issues/557", "id": 435208700, "node_id": "MDU6SXNzdWU0MzUyMDg3MDA=", "number": 557, "title": "how to create a script candump and cansend ", "user": {"login": "maltsevvv", "id": 24542923, "node_id": "MDQ6VXNlcjI0NTQyOTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/24542923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maltsevvv", "html_url": "https://github.com/maltsevvv", "followers_url": "https://api.github.com/users/maltsevvv/followers", "following_url": "https://api.github.com/users/maltsevvv/following{/other_user}", "gists_url": "https://api.github.com/users/maltsevvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/maltsevvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maltsevvv/subscriptions", "organizations_url": "https://api.github.com/users/maltsevvv/orgs", "repos_url": "https://api.github.com/users/maltsevvv/repos", "events_url": "https://api.github.com/users/maltsevvv/events{/privacy}", "received_events_url": "https://api.github.com/users/maltsevvv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-19T15:09:42Z", "updated_at": "2019-04-21T11:43:36Z", "closed_at": "2019-04-21T11:43:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to create a script python can0 candump and cansend with execution if.\r\nexample:\r\nif candump 448 # B1 then cansend 264 # B1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hardbyte/python-can/issues/552", "repository_url": "https://api.github.com/repos/hardbyte/python-can", "labels_url": "https://api.github.com/repos/hardbyte/python-can/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/hardbyte/python-can/issues/552/comments", "events_url": "https://api.github.com/repos/hardbyte/python-can/issues/552/events", "html_url": "https://github.com/hardbyte/python-can/issues/552", "id": 434071821, "node_id": "MDU6SXNzdWU0MzQwNzE4MjE=", "number": 552, "title": "Canal is 32bit, but 32bit USB2CAN driver won't install on my Windows 10", "user": {"login": "dposea", "id": 2893999, "node_id": "MDQ6VXNlcjI4OTM5OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2893999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dposea", "html_url": "https://github.com/dposea", "followers_url": "https://api.github.com/users/dposea/followers", "following_url": "https://api.github.com/users/dposea/following{/other_user}", "gists_url": "https://api.github.com/users/dposea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dposea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dposea/subscriptions", "organizations_url": "https://api.github.com/users/dposea/orgs", "repos_url": "https://api.github.com/users/dposea/repos", "events_url": "https://api.github.com/users/dposea/events{/privacy}", "received_events_url": "https://api.github.com/users/dposea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 448741916, "node_id": "MDU6TGFiZWw0NDg3NDE5MTY=", "url": "https://api.github.com/repos/hardbyte/python-can/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-04-17T03:09:34Z", "updated_at": "2019-05-14T01:11:06Z", "closed_at": "2019-05-12T14:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "My USB2CAN device will not work with the 32 bit driver. I followed the 8devices instructions exactly, and tried a few other ways. The 64bit driver installed the first time. I have 64bit python installed already, so a 84bit usb2can.dll would really be helpful. I could only find one repository for CANAL. I tried to build a 64 bit canal dll from krumboecks GitHub , but it has no project files and I could not get a good compile trying to choose options. I haven't tried this in a 32bit windows VM yet. I  had problems using USB2CAN In a Linix VM, and I need to sniff some windows reflash programs, I have extensive knowledge of Ford and GM reflashing and tuning, and I'd like to be helpful if possible, if I can ever git CAN sniffing to work on Windows. ", "performed_via_github_app": null, "score": 1.0}]}