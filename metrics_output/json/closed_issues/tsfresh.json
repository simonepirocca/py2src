{"total_count": 368, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/743", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/743/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/743/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/743", "id": 681036865, "node_id": "MDU6SXNzdWU2ODEwMzY4NjU=", "number": 743, "title": "Missing documentation", "user": {"login": "patrjon", "id": 46594327, "node_id": "MDQ6VXNlcjQ2NTk0MzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/46594327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrjon", "html_url": "https://github.com/patrjon", "followers_url": "https://api.github.com/users/patrjon/followers", "following_url": "https://api.github.com/users/patrjon/following{/other_user}", "gists_url": "https://api.github.com/users/patrjon/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrjon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrjon/subscriptions", "organizations_url": "https://api.github.com/users/patrjon/orgs", "repos_url": "https://api.github.com/users/patrjon/repos", "events_url": "https://api.github.com/users/patrjon/events{/privacy}", "received_events_url": "https://api.github.com/users/patrjon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-18T13:20:56Z", "updated_at": "2020-08-19T19:30:18Z", "closed_at": "2020-08-19T19:30:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey!\r\n\r\nAwsome package! \r\n\r\nTrying to read-up on the feature generating functions found in;\r\n\r\ntsfresh.feature_extraction.feature_calculators\r\n\r\nThe following input arguments are undocumented or migth suffer from the copy-paste-devil:):\r\n\r\n* ratio_beyond_r_sigma(x, r). r not documented. Is this correct?\r\n\r\n    :param r: the ratio to compare with\r\n    :type r: float\r\n\r\n\r\n* symmetry_looking(x, param). Missing \"param\". However, documents \"r\" as an percentags of range. Is this correct?\r\n\r\n\r\n    :param param: contains dictionaries {\"r\": x} with x (float) is the percentage of the range to compare with\r\n    :type param: list\r\n    \r\n\r\n\r\nImplement the above and open a pull-request.\r\n\r\n/ Patrick\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/730", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/730/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/730/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/730", "id": 650981946, "node_id": "MDU6SXNzdWU2NTA5ODE5NDY=", "number": 730, "title": "infer_ml_task(): AttributeError: 'DataFrame' object has no attribute 'dtype' ", "user": {"login": "forhonourlx", "id": 16576219, "node_id": "MDQ6VXNlcjE2NTc2MjE5", "avatar_url": "https://avatars3.githubusercontent.com/u/16576219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forhonourlx", "html_url": "https://github.com/forhonourlx", "followers_url": "https://api.github.com/users/forhonourlx/followers", "following_url": "https://api.github.com/users/forhonourlx/following{/other_user}", "gists_url": "https://api.github.com/users/forhonourlx/gists{/gist_id}", "starred_url": "https://api.github.com/users/forhonourlx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forhonourlx/subscriptions", "organizations_url": "https://api.github.com/users/forhonourlx/orgs", "repos_url": "https://api.github.com/users/forhonourlx/repos", "events_url": "https://api.github.com/users/forhonourlx/events{/privacy}", "received_events_url": "https://api.github.com/users/forhonourlx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T01:22:21Z", "updated_at": "2020-07-05T01:35:32Z", "closed_at": "2020-07-05T01:35:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi tsfresh team,\r\n @hoffmann \r\n\r\nCould somebody fix this bug? Thanks in advance.\r\n```\r\n  File \"fx_env_multi_scaled.py\", line 663, in benjamini_yekutieli_procedure_selector\r\n    df_p_val_kendall = calculate_relevance_table(X[:-tsfresh_y_roll_fw], y_biMFE[:-tsfresh_y_roll_fw], fdr_level=tsfresh_fdr_level, test_for_real_target_real_feature='kendall')\r\n  File \"/home/simon/anaconda3/lib/python3.6/site-packages/tsfresh/feature_selection/relevance.py\", line 137, in calculate_relevance_table\r\n    ml_task = infer_ml_task(y)\r\n  File \"/home/simon/anaconda3/lib/python3.6/site-packages/tsfresh/feature_selection/relevance.py\", line 239, in infer_ml_task\r\n    if y.dtype.kind in np.typecodes['AllInteger'] or y.dtype == np.object:\r\n  File \"/home/simon/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\", line 5274, in __getattr__\r\n    return object.__getattribute__(self, name)\r\nAttributeError: 'DataFrame' object has no attribute 'dtype'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/727", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/727/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/727/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/727", "id": 647189505, "node_id": "MDU6SXNzdWU2NDcxODk1MDU=", "number": 727, "title": "example 05 time series forecasting - final shift for predict value", "user": {"login": "cpop-fr", "id": 12127091, "node_id": "MDQ6VXNlcjEyMTI3MDkx", "avatar_url": "https://avatars3.githubusercontent.com/u/12127091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpop-fr", "html_url": "https://github.com/cpop-fr", "followers_url": "https://api.github.com/users/cpop-fr/followers", "following_url": "https://api.github.com/users/cpop-fr/following{/other_user}", "gists_url": "https://api.github.com/users/cpop-fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpop-fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpop-fr/subscriptions", "organizations_url": "https://api.github.com/users/cpop-fr/orgs", "repos_url": "https://api.github.com/users/cpop-fr/repos", "events_url": "https://api.github.com/users/cpop-fr/events{/privacy}", "received_events_url": "https://api.github.com/users/cpop-fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T07:38:56Z", "updated_at": "2020-07-21T04:51:00Z", "closed_at": "2020-07-21T04:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi again,\r\n\r\nWhile digging deeper into the example 05 time series forecasting, I am not sure about the last shift for the prediction values.\r\n\r\nTo compare the next day price (y) with the prediction (y_pred) you shift the prediction vector.\r\n\r\ny.plot(ax=plt.gca())\r\ny_pred.shift(-1).plot(ax=plt.gca(), legend=None, marker=\".\")\r\n\r\nBut by doing this there is no more value for the last date. So what's is the prediction for this one ?\r\nI don't see the point to shift the values if you compare with the vector of the next day price which y_pred should be, right ?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/724", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/724/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/724/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/724", "id": 645605285, "node_id": "MDU6SXNzdWU2NDU2MDUyODU=", "number": 724, "title": "Description not matching function name", "user": {"login": "emanuelef", "id": 48717, "node_id": "MDQ6VXNlcjQ4NzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/48717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emanuelef", "html_url": "https://github.com/emanuelef", "followers_url": "https://api.github.com/users/emanuelef/followers", "following_url": "https://api.github.com/users/emanuelef/following{/other_user}", "gists_url": "https://api.github.com/users/emanuelef/gists{/gist_id}", "starred_url": "https://api.github.com/users/emanuelef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emanuelef/subscriptions", "organizations_url": "https://api.github.com/users/emanuelef/orgs", "repos_url": "https://api.github.com/users/emanuelef/repos", "events_url": "https://api.github.com/users/emanuelef/events{/privacy}", "received_events_url": "https://api.github.com/users/emanuelef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-25T14:22:17Z", "updated_at": "2020-07-01T16:27:00Z", "closed_at": "2020-07-01T16:27:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\njust noticed a possible mismatch in the documentation, is it possible that the descriptions for \r\npercentage_of_reoccurring_datapoints_to_all_datapoints  and\r\npercentage_of_reoccurring_values_to_all_values\r\nhave been swapped ?\r\n\r\nhttps://github.com/blue-yonder/tsfresh/blob/f8a952e4ea9d80189e2a6d6c43b119727047c4c4/tsfresh/feature_extraction/feature_calculators.py#L866\r\n\r\nhttps://github.com/blue-yonder/tsfresh/blob/f8a952e4ea9d80189e2a6d6c43b119727047c4c4/tsfresh/feature_extraction/feature_calculators.py#L894", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/714", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/714/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/714/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/714", "id": 639328927, "node_id": "MDU6SXNzdWU2MzkzMjg5Mjc=", "number": 714, "title": "I always got same error 'Index' object has no attribute 'contains', even when i tried to run simple example", "user": {"login": "hattajr", "id": 53370870, "node_id": "MDQ6VXNlcjUzMzcwODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/53370870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hattajr", "html_url": "https://github.com/hattajr", "followers_url": "https://api.github.com/users/hattajr/followers", "following_url": "https://api.github.com/users/hattajr/following{/other_user}", "gists_url": "https://api.github.com/users/hattajr/gists{/gist_id}", "starred_url": "https://api.github.com/users/hattajr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hattajr/subscriptions", "organizations_url": "https://api.github.com/users/hattajr/orgs", "repos_url": "https://api.github.com/users/hattajr/repos", "events_url": "https://api.github.com/users/hattajr/events{/privacy}", "received_events_url": "https://api.github.com/users/hattajr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-16T02:50:53Z", "updated_at": "2020-06-17T00:48:33Z", "closed_at": "2020-06-17T00:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am new in tsfresh and nowadays I am trying to run some simple example in Jupyter notebook.\r\nBut, every time I run the code I always got some issue which is \" 'Index'object has no attribute 'contains' \". You can find the problem attached.\r\n\r\nOS : Win 10\r\ntsfresh version : 0.16.0\r\n\r\nI will appreciate any help!\r\n![image](https://user-images.githubusercontent.com/53370870/84726263-72f17180-afc7-11ea-84f7-6fa6dd0675e5.png)\r\n![image](https://user-images.githubusercontent.com/53370870/84726294-83a1e780-afc7-11ea-8cb6-34e4201a24c9.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/713", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/713/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/713/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/713", "id": 639057700, "node_id": "MDU6SXNzdWU2MzkwNTc3MDA=", "number": 713, "title": "extract_relevant_features() doesn't work if y isn't sorted by index", "user": {"login": "PavloFesenko", "id": 16855796, "node_id": "MDQ6VXNlcjE2ODU1Nzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/16855796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PavloFesenko", "html_url": "https://github.com/PavloFesenko", "followers_url": "https://api.github.com/users/PavloFesenko/followers", "following_url": "https://api.github.com/users/PavloFesenko/following{/other_user}", "gists_url": "https://api.github.com/users/PavloFesenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/PavloFesenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PavloFesenko/subscriptions", "organizations_url": "https://api.github.com/users/PavloFesenko/orgs", "repos_url": "https://api.github.com/users/PavloFesenko/repos", "events_url": "https://api.github.com/users/PavloFesenko/events{/privacy}", "received_events_url": "https://api.github.com/users/PavloFesenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-15T18:38:21Z", "updated_at": "2020-06-22T19:56:43Z", "closed_at": "2020-06-22T19:56:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Linux 3.10.0-1062.9.1.el7.x86_64\r\n2. tsfresh 0.16.0\r\n3. Sorry, I can't post the data here due to privacy reasons but I will try to describe the problem as well as I can. I have a target for a regression problem but the function `extract_relevant_features()` doesn't return any relevant features. However, if I sort my Pandas DataFrame by \"id\" before splitting it in \"timeseries\" and \"y\", then everything works. I think the problem might be in the function `select_features()` because if I do step-by-step `extract_features()`, `impute()` and `select_features()` without sorting \"id\", then the relevant features aren't returned as well. By the way, I couldn't reproduce this issue for the robot failures dataset which is a classification problem so it might be only relevant for regression. If there is maybe a toy dataset for regression, then I could provide a minimal code snippet. Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/711", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/711/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/711/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/711", "id": 636825280, "node_id": "MDU6SXNzdWU2MzY4MjUyODA=", "number": 711, "title": "Deal with complex numbers", "user": {"login": "CristianTuretta", "id": 26434634, "node_id": "MDQ6VXNlcjI2NDM0NjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/26434634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CristianTuretta", "html_url": "https://github.com/CristianTuretta", "followers_url": "https://api.github.com/users/CristianTuretta/followers", "following_url": "https://api.github.com/users/CristianTuretta/following{/other_user}", "gists_url": "https://api.github.com/users/CristianTuretta/gists{/gist_id}", "starred_url": "https://api.github.com/users/CristianTuretta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CristianTuretta/subscriptions", "organizations_url": "https://api.github.com/users/CristianTuretta/orgs", "repos_url": "https://api.github.com/users/CristianTuretta/repos", "events_url": "https://api.github.com/users/CristianTuretta/events{/privacy}", "received_events_url": "https://api.github.com/users/CristianTuretta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-11T08:27:50Z", "updated_at": "2020-06-11T13:48:30Z", "closed_at": "2020-06-11T13:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using *tsfresh* on a dataset which contains complex numbers, they came from Fast Fourier transformation. When I try to extract features from this kind of dataset an error occurs and it says:\r\n`NotImplementedError: function is not implemented for this dtype: [how->mean,dtype->complex128]` .\r\n\r\nMy code is similar to the example you wrote on example notebooks.\r\nWhat should I do in order to avoid this error?\r\n\r\nThe snipper of code which causes this error is:\r\n`extraction_settings = ComprehensiveFCParameters()`\r\n`X_fft_tsfresh = extract_features(df_fft, column_id='id', column_sort='time',\r\n                                 default_fc_parameters=extraction_settings,\r\n                                 impute_function=impute)`\r\n\r\nMy operating system is MacOS 10.15.5 \r\n\r\nThe version of *tsfresh* that I'm using is 0.16.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/709", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/709/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/709/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/709", "id": 634772910, "node_id": "MDU6SXNzdWU2MzQ3NzI5MTA=", "number": 709, "title": "spark_feature_extraction_on_chunk works only with column_id = \"id\"", "user": {"login": "andyvanyperenAM", "id": 57443968, "node_id": "MDQ6VXNlcjU3NDQzOTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/57443968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyvanyperenAM", "html_url": "https://github.com/andyvanyperenAM", "followers_url": "https://api.github.com/users/andyvanyperenAM/followers", "following_url": "https://api.github.com/users/andyvanyperenAM/following{/other_user}", "gists_url": "https://api.github.com/users/andyvanyperenAM/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyvanyperenAM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyvanyperenAM/subscriptions", "organizations_url": "https://api.github.com/users/andyvanyperenAM/orgs", "repos_url": "https://api.github.com/users/andyvanyperenAM/repos", "events_url": "https://api.github.com/users/andyvanyperenAM/events{/privacy}", "received_events_url": "https://api.github.com/users/andyvanyperenAM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-06-08T16:46:00Z", "updated_at": "2020-06-22T19:57:48Z", "closed_at": "2020-06-22T19:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhile testing the spark_feature_extraction_on_chunck function, I noticed it works if the column_id is equal to \"id\", but for any other value it does not work. Obviously, there is an easy workaround to rename the columnname, however I noticed in the code everything is foreseen to work generally. \r\n\r\nThe error which is thrown: \r\nPy4JJavaError: An error occurred while calling o284.showString.\r\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 4.0 failed 4 times, most recent failure: Lost task 0.3 in stage 4.0 (TID 124, server, executor 1): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/<root_to_spark_container>/pyspark.zip/pyspark/worker.py\", line 377, in main\r\n    process()\r\n  File \"/<root_to_spark_container>/pyspark.zip/pyspark/worker.py\", line 372, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/<root_to_spark_container>/pyspark.zip/pyspark/serializers.py\", line 286, in dump_stream\r\n    for series in iterator:\r\n  File \"<string>\", line 1, in <lambda>\r\n  File \"/<root_to_spark_container>/pyspark.zip/pyspark/worker.py\", line 113, in wrapped\r\n    result = f(pd.concat(value_series, axis=1))\r\n  File \"/<root_to_spark_container>/pyspark.zip/pyspark/util.py\", line 99, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/<root_to_spark_container>/tsfresh/tsfresh/lib/python3.7/site-packages/tsfresh/convenience/bindings.py\", line 30, in _feature_extraction_on_chunk_helper\r\n    return features[[column_id, \"variable\", \"value\"]]\r\n  File \"/<root_to_spark_container>/tsfresh/tsfresh/lib/python3.7/site-packages/pandas/core/frame.py\", line 2806, in __getitem__\r\n    indexer = self.loc._get_listlike_indexer(key, axis=1, raise_missing=True)[1]\r\n  File \"/<root_to_spark_container>/tsfresh/tsfresh/lib/python3.7/site-packages/pandas/core/indexing.py\", line 1553, in _get_listlike_indexer\r\n    keyarr, indexer, o._get_axis_number(axis), raise_missing=raise_missing\r\n  File \"/<root_to_spark_container>/tsfresh/tsfresh/lib/python3.7/site-packages/pandas/core/indexing.py\", line 1646, in _validate_read_indexer\r\n    raise KeyError(f\"{not_found} not in index\")\r\nKeyError: \"['id2'] not in index\"\r\n\r\n\r\nQuick hack in the code could be:\r\n-< tsfresh/convenience/bindings.py: 30: return features[[column_id, \"variable\", \"value\"]]\r\n+> tsfresh/convenience/bindings.py: 30: return features[[\"id\", \"variable\", \"value\"]]\r\n\r\n-> tsfresh/convenience/bindings.py: 210: return df.apply(feature_extraction_udf)\r\n+> tsfresh/convenience/bindings.py: 210: return df.apply(feature_extraction_udf).withColumnRenamed(\"id\",column_id)\r\n\r\nBut this does not seem the cleanest way. Other suggestions? \r\n\r\n1. OS: Submitting from W10, submitting to an HDFS cluster using spark\r\n2. version: 0.16.0\r\n3. data: verified with tsfresh.examples.robot_execution_failures", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/702", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/702/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/702/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/702", "id": 624188391, "node_id": "MDU6SXNzdWU2MjQxODgzOTE=", "number": 702, "title": "High memory requirements during feature extraction", "user": {"login": "hoesler", "id": 1052770, "node_id": "MDQ6VXNlcjEwNTI3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1052770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoesler", "html_url": "https://github.com/hoesler", "followers_url": "https://api.github.com/users/hoesler/followers", "following_url": "https://api.github.com/users/hoesler/following{/other_user}", "gists_url": "https://api.github.com/users/hoesler/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoesler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoesler/subscriptions", "organizations_url": "https://api.github.com/users/hoesler/orgs", "repos_url": "https://api.github.com/users/hoesler/repos", "events_url": "https://api.github.com/users/hoesler/events{/privacy}", "received_events_url": "https://api.github.com/users/hoesler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hoesler", "id": 1052770, "node_id": "MDQ6VXNlcjEwNTI3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1052770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoesler", "html_url": "https://github.com/hoesler", "followers_url": "https://api.github.com/users/hoesler/followers", "following_url": "https://api.github.com/users/hoesler/following{/other_user}", "gists_url": "https://api.github.com/users/hoesler/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoesler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoesler/subscriptions", "organizations_url": "https://api.github.com/users/hoesler/orgs", "repos_url": "https://api.github.com/users/hoesler/repos", "events_url": "https://api.github.com/users/hoesler/events{/privacy}", "received_events_url": "https://api.github.com/users/hoesler/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hoesler", "id": 1052770, "node_id": "MDQ6VXNlcjEwNTI3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1052770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoesler", "html_url": "https://github.com/hoesler", "followers_url": "https://api.github.com/users/hoesler/followers", "following_url": "https://api.github.com/users/hoesler/following{/other_user}", "gists_url": "https://api.github.com/users/hoesler/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoesler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoesler/subscriptions", "organizations_url": "https://api.github.com/users/hoesler/orgs", "repos_url": "https://api.github.com/users/hoesler/repos", "events_url": "https://api.github.com/users/hoesler/events{/privacy}", "received_events_url": "https://api.github.com/users/hoesler/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-25T09:55:49Z", "updated_at": "2020-07-23T20:56:21Z", "closed_at": "2020-06-22T19:58:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. Your operating system\r\nLinux\r\n\r\n2. The version of *tsfresh* that you are using\r\n0.16.0\r\n\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\n```\r\n<class 'pandas.core.frame.DataFrame'>\r\nInt64Index: 6024604 entries, 0 to 1299438\r\nColumns: 77 entries, index to machine_id\r\ndtypes: float32(75), int64(1), object(1)\r\nmemory usage: 1.8+ GB\r\n```\r\n\r\n4. A minimal code snippet which reproduces the problem/bug\r\nSee below\r\n\r\n5. Any reported errors or traceback\r\nOOM\r\n\r\nI was experimenting with tsfresh on the above mentioned dataset using a scikit learn pipeline:\r\n`RelevantFeatureAugmenter(column_id='machine_id', column_sort='index', default_fc_parameters = MinimalFCParameters(), n_jobs=4, chunksize=10)\r\n`\r\nThe code was executed from a Jupyter notebook which has 20GB of RAM available. The kernel died from out of memory errors, no matter which parameters I chose for `chunksize` or `n_jobs`. This seemed a bit strange cosidering the medium sized input and the tasks I was imagining tsfresh to do. My first idea was to fit (select features) only on a sample of the train data. This worked well, but the feature extraction during the transform step of the ~70 relevant features was still causing the same problem.\r\nThe next idea was scaling out. But before trying to distribute the work using dask, I started to trace at which step the memory starts to inflate and found that it the problem is the [sorting](https://github.com/blue-yonder/tsfresh/blob/a0039838a8264cbe8fb9f512849b778dfc3ccc8c/tsfresh/utilities/dataframe_functions.py#L359) of the [melted](https://github.com/blue-yonder/tsfresh/blob/a0039838a8264cbe8fb9f512849b778dfc3ccc8c/tsfresh/utilities/dataframe_functions.py#L338) dataframe while transforming the data into the normalized format. This doesn't seem too strange if you consider that it is actually sorting 6.024.604 * 75 = 451.845.300 rows.\r\n\r\nBecause this data transformation is done before sending any data to the distributor, scaling out won't be a solution here.\r\n\r\nSo I forked tsfresh and started to shift the heavy transformations from the \"driver\" to the workers and ended with skipping the melt transformation completely. A more straight forward approach was to simply iterate the wide format.\r\n\r\nYou can find my first draft here:\r\nhttps://github.com/blue-yonder/tsfresh/compare/v0.16.0...hoesler:distribute-melt?expand=1\r\n\r\nUsing my modified code, the kernel barely exceeded 8GB during the fit step on the complete train data set. It seemed a bit slower, though I didn't do any benchmarks. But that is totally acceptable for me, especially because this could be easy improved by scaling out.\r\n\r\nI would love to finalize that into a pull request, but I'd like to hear your opinion first.\r\n\r\nCheers\r\nChristoph\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/699", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/699/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/699/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/699", "id": 622121452, "node_id": "MDU6SXNzdWU2MjIxMjE0NTI=", "number": 699, "title": "Sorting of created id column from rolling is awkward", "user": {"login": "TKlerx", "id": 1579185, "node_id": "MDQ6VXNlcjE1NzkxODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1579185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TKlerx", "html_url": "https://github.com/TKlerx", "followers_url": "https://api.github.com/users/TKlerx/followers", "following_url": "https://api.github.com/users/TKlerx/following{/other_user}", "gists_url": "https://api.github.com/users/TKlerx/gists{/gist_id}", "starred_url": "https://api.github.com/users/TKlerx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TKlerx/subscriptions", "organizations_url": "https://api.github.com/users/TKlerx/orgs", "repos_url": "https://api.github.com/users/TKlerx/repos", "events_url": "https://api.github.com/users/TKlerx/events{/privacy}", "received_events_url": "https://api.github.com/users/TKlerx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-20T22:24:26Z", "updated_at": "2020-05-24T23:04:17Z", "closed_at": "2020-05-24T23:04:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nit has been some time since last working with tsfresh and I am impressed what you implemented in the mean time.\r\nI am using the rolling feature and the newly created id column is not sorted as it should be.\r\n\r\n1. Your operating system: Win10x64\r\n2. The version of *tsfresh* that you are using: 0.16.0\r\n\r\nHere is a minimal example:\r\n```\r\nimport pandas as pd\r\nfrom tsfresh.utilities.dataframe_functions import roll_time_series\r\nfrom tsfresh import extract_features\r\ndf = pd.DataFrame({\r\n   \"initial_id\": [1]*12,\r\n   \"time\": [1, 2, 3, 4,5,6,7,8,9,10,20,30],\r\n   \"x\": [1, 2, 3, 4,5,6,7,8,9,10,20,30]\r\n})\r\nwindow_size = 2\r\ndf_rolled = roll_time_series(df, column_id=\"id\", column_sort=\"time\", min_timeshift=window_size-1, max_timeshift=window_size-1)\r\ndf_rolled = df_rolled.drop('initial_id', axis = 1)\r\ndf_features = extract_features(df_rolled, column_id=\"id\", column_sort=\"time\", n_jobs = 8)\r\n```\r\nAfter sorting, the first id is `id=1,timeshift=10` and not `id=1,timeshift=1`.\r\n\r\nI guess the issue is that the sort column is added as a string and if it is an integer, a '1' is not padded with some leading 0s.\r\nThis is not a real bug, but it is somehow awkward, because 10 is greater than 2 when treating 10 and 2 as integers instead of strings.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/698", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/698/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/698/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/698", "id": 620960113, "node_id": "MDU6SXNzdWU2MjA5NjAxMTM=", "number": 698, "title": "extracted an empty selected feature set", "user": {"login": "nicewenhui", "id": 54223652, "node_id": "MDQ6VXNlcjU0MjIzNjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/54223652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicewenhui", "html_url": "https://github.com/nicewenhui", "followers_url": "https://api.github.com/users/nicewenhui/followers", "following_url": "https://api.github.com/users/nicewenhui/following{/other_user}", "gists_url": "https://api.github.com/users/nicewenhui/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicewenhui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicewenhui/subscriptions", "organizations_url": "https://api.github.com/users/nicewenhui/orgs", "repos_url": "https://api.github.com/users/nicewenhui/repos", "events_url": "https://api.github.com/users/nicewenhui/events{/privacy}", "received_events_url": "https://api.github.com/users/nicewenhui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T13:04:56Z", "updated_at": "2020-05-21T20:55:17Z", "closed_at": "2020-05-21T20:55:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n1. Your operating system: macOS\r\n2. The version of *tsfresh*: 0.16.0 \r\n\r\nMy input data has 96 samples, time: 60s, and 12 features.\r\nFor function \"extract_features\", I got feature set of size (96,9156), but when I use the \r\nfunction \"select_features\", I got a feature set(96,0), only index ,no features!\r\nso what should I do? Thank you so much!\r\n[data_and_script.zip](https://github.com/blue-yonder/tsfresh/files/4650618/data_and_script.zip)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/697", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/697/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/697/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/697", "id": 620496518, "node_id": "MDU6SXNzdWU2MjA0OTY1MTg=", "number": 697, "title": "Add an example on time series rolling with multiple dimensions", "user": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-05-18T20:47:53Z", "updated_at": "2020-05-25T20:26:38Z", "closed_at": "2020-05-25T20:26:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Following the discussion of #673 we do not have a clear code example on how to work with multi-dimensional data and forecasting.\r\nThe example notebook can either be added to one of the already present ones or a new one.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/685", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/685/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/685/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/685", "id": 615797121, "node_id": "MDU6SXNzdWU2MTU3OTcxMjE=", "number": 685, "title": "roll_time_series on binary classification", "user": {"login": "ciberger", "id": 35703580, "node_id": "MDQ6VXNlcjM1NzAzNTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/35703580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciberger", "html_url": "https://github.com/ciberger", "followers_url": "https://api.github.com/users/ciberger/followers", "following_url": "https://api.github.com/users/ciberger/following{/other_user}", "gists_url": "https://api.github.com/users/ciberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciberger/subscriptions", "organizations_url": "https://api.github.com/users/ciberger/orgs", "repos_url": "https://api.github.com/users/ciberger/repos", "events_url": "https://api.github.com/users/ciberger/events{/privacy}", "received_events_url": "https://api.github.com/users/ciberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-11T11:04:37Z", "updated_at": "2020-05-13T20:54:41Z", "closed_at": "2020-05-13T20:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \ud83d\udc4b, \r\n\r\nI'm struggling to understand the proper way of extracting the feature for a time series problem. Derivated variables should be calculated on _feat_1_ and _feat_2_ values, however, all are estimated from _target_. I suspect the issue could be related to the definition of _y_ as the last value of the rolling window. \r\n\r\nAny comments are welcome.\r\n\r\nThanks in advance.\r\n\r\n```python\r\nfrom tsfresh.utilities.dataframe_functions import roll_time_series\r\nfrom tsfresh import extract_relevant_features\r\nimport pandas as pd\r\n\r\n\r\ndf = pd.DataFrame(\r\n{'date': ['2018-05-01','2018-05-02','2018-05-03','2018-05-04','2018-05-05','2018-05-06','2018-05-07','2018-05-08','2018-05-09','2018-05-10','2018-05-11','2018-05-12','2018-05-13','2018-05-14','2018-05-15','2018-05-16','2018-05-17','2018-05-18','2018-05-19','2018-05-20','2018-05-21','2018-05-22','2018-05-23','2018-05-24','2018-05-25','2018-05-26','2018-05-27','2018-05-28','2018-05-29','2018-05-30','2018-05-31','2018-06-01','2018-06-02','2018-06-03','2018-06-04','2018-06-05','2018-06-06','2018-06-07','2018-06-08','2018-06-09','2018-06-10','2018-06-11','2018-06-12','2018-06-13','2018-06-14','2018-06-15','2018-06-16','2018-06-17','2018-06-18','2018-06-19'],\r\n'feat_1': [906.82,923.64,975.9,970.3,986.12,965.87,937,918.47,931.82,901.8,841.24,847.07,868.36,867.07,846.75,833.61,805.43,823.89,823.1,852.37,839.96,797.78,749.48,757.67,745.67,732.77,733.97,709.79,746.52,737.51,748.58,752.1,763.81,771.8,748.83,762.18,765.4,768.89,761.51,749.85,675.8,687.33,654.39,629.51,663.37,638.5,648.58,643.83,670.92,673.55],\r\n'feat_2': [1088.184,1108.368,1171.08,1164.36,1183.344,1159.044,1124.4,1102.164,1118.184,1082.16,1009.488,1016.484,1042.032,1040.484,1016.1,1000.332,966.516,988.668,987.72,1022.844,1007.952,957.336,899.376,909.204,894.804,879.324,880.764,851.748,895.824,885.012,898.296,902.52,916.572,926.16,898.596,914.616,918.48,922.668,913.812,899.82,810.96,824.796,785.268,755.412,796.044,766.2,778.296,772.596,805.104,808.26],\r\n'target': [1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,1,1]}\r\n)\r\n\r\ndf['column_id'] = 'timeseries'\r\n\r\ndf_tsfresh = roll_time_series(df, column_id='column_id', column_sort='date', column_kind=None, rolling_direction=1, max_timeshift=5)\r\n\r\ny = df_tsfresh.groupby(by='column_id').last()['target']\r\n\r\nX = extract_relevant_features(df_tsfresh, y, column_id='column_id', column_sort='date', show_warnings=False)\r\n\r\nX.columns\r\n\r\n# Index(['target__index_mass_quantile__q_0.9',\r\n#        'target__last_location_of_maximum',\r\n#        'target__agg_linear_trend__f_agg_\"max\"__chunk_len_5__attr_\"rvalue\"',\r\n#        'target__agg_linear_trend__f_agg_\"min\"__chunk_len_5__attr_\"slope\"',\r\n#        'target__agg_linear_trend__f_agg_\"max\"__chunk_len_5__attr_\"slope\"',\r\n#        'target__agg_linear_trend__f_agg_\"mean\"__chunk_len_5__attr_\"rvalue\"',\r\n#        'target__agg_linear_trend__f_agg_\"min\"__chunk_len_5__attr_\"rvalue\"',\r\n#        'target__last_location_of_minimum',\r\n#        'target__agg_linear_trend__f_agg_\"mean\"__chunk_len_5__attr_\"slope\"',\r\n#        'target__energy_ratio_by_chunks__num_segments_10__segment_focus_5',\r\n#        'target__index_mass_quantile__q_0.8',\r\n#        'target__index_mass_quantile__q_0.7',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_1.0__ql_0.0',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_0.8__ql_0.0',\r\n#        'target__mean_change',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_0.8__ql_0.2',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_1.0__ql_0.2',\r\n#        'target__cwt_coefficients__widths_(2, 5, 10, 20)__coeff_5__w_2',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_0.8__ql_0.4',\r\n#        'target__change_quantiles__f_agg_\"mean\"__isabs_False__qh_1.0__ql_0.4',\r\n#        'target__cwt_coefficients__widths_(2, 5, 10, 20)__coeff_5__w_20',\r\n#        'target__cwt_coefficients__widths_(2, 5, 10, 20)__coeff_5__w_5',\r\n#        'target__cwt_coefficients__widths_(2, 5, 10, 20)__coeff_5__w_10',\r\n#        'target__mean_second_derivative_central'],\r\n#       dtype='object', name='variable')\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/684", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/684/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/684/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/684", "id": 615153238, "node_id": "MDU6SXNzdWU2MTUxNTMyMzg=", "number": 684, "title": "how to deal with multivariate time series problems?", "user": {"login": "rebuild-123", "id": 57841111, "node_id": "MDQ6VXNlcjU3ODQxMTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/57841111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rebuild-123", "html_url": "https://github.com/rebuild-123", "followers_url": "https://api.github.com/users/rebuild-123/followers", "following_url": "https://api.github.com/users/rebuild-123/following{/other_user}", "gists_url": "https://api.github.com/users/rebuild-123/gists{/gist_id}", "starred_url": "https://api.github.com/users/rebuild-123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rebuild-123/subscriptions", "organizations_url": "https://api.github.com/users/rebuild-123/orgs", "repos_url": "https://api.github.com/users/rebuild-123/repos", "events_url": "https://api.github.com/users/rebuild-123/events{/privacy}", "received_events_url": "https://api.github.com/users/rebuild-123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-09T11:17:02Z", "updated_at": "2020-05-09T11:23:08Z", "closed_at": "2020-05-09T11:17:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example, i want to forecast stock prices with dataset constituted by 'open prices', 'high prices', 'low prices', 'close prices'.\r\n\r\nhow to extract the dataset's feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/683", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/683/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/683/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/683", "id": 612123578, "node_id": "MDU6SXNzdWU2MTIxMjM1Nzg=", "number": 683, "title": "Using Benjamini Hochberg for multiclass classification", "user": {"login": "wahidelchaar", "id": 38093297, "node_id": "MDQ6VXNlcjM4MDkzMjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/38093297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahidelchaar", "html_url": "https://github.com/wahidelchaar", "followers_url": "https://api.github.com/users/wahidelchaar/followers", "following_url": "https://api.github.com/users/wahidelchaar/following{/other_user}", "gists_url": "https://api.github.com/users/wahidelchaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahidelchaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahidelchaar/subscriptions", "organizations_url": "https://api.github.com/users/wahidelchaar/orgs", "repos_url": "https://api.github.com/users/wahidelchaar/repos", "events_url": "https://api.github.com/users/wahidelchaar/events{/privacy}", "received_events_url": "https://api.github.com/users/wahidelchaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T19:47:02Z", "updated_at": "2020-05-08T04:45:20Z", "closed_at": "2020-05-08T04:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am currently doing a multiclass classification problem, and thinking about using the Benjamini Hochberg procedure in the `extract_relevant_features()` module. But I saw in the documentation that the module expects y to be binary if it's a classification problem. Would the Benjamini Hochberg still apply in my case? If not, what other methods do you suggest?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/679", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/679/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/679/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/679", "id": 609944933, "node_id": "MDU6SXNzdWU2MDk5NDQ5MzM=", "number": 679, "title": "Difference between sum_of_reoccurring_data_points and sum_of_reoccurring_values?", "user": {"login": "coolcodecding", "id": 60883938, "node_id": "MDQ6VXNlcjYwODgzOTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/60883938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolcodecding", "html_url": "https://github.com/coolcodecding", "followers_url": "https://api.github.com/users/coolcodecding/followers", "following_url": "https://api.github.com/users/coolcodecding/following{/other_user}", "gists_url": "https://api.github.com/users/coolcodecding/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolcodecding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolcodecding/subscriptions", "organizations_url": "https://api.github.com/users/coolcodecding/orgs", "repos_url": "https://api.github.com/users/coolcodecding/repos", "events_url": "https://api.github.com/users/coolcodecding/events{/privacy}", "received_events_url": "https://api.github.com/users/coolcodecding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T12:54:05Z", "updated_at": "2020-05-01T09:20:11Z", "closed_at": "2020-05-01T09:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering what is the diffrence between the two features:\r\n\r\n`sum_of_reoccurring_data_points`\r\n`sum_of_reoccurring_values`\r\n\r\nI have read the docu, but it didn't make clear what is the difference between a datapoint and a value.\r\nFor my understanding, i don't give any datapoints into tsfresh, whereas I hand over values.\r\n\r\nDo I misunderstand something?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/677", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/677/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/677/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/677", "id": 607949624, "node_id": "MDU6SXNzdWU2MDc5NDk2MjQ=", "number": 677, "title": "TypeError: Cannot cast array data from dtype('float64') to dtype('<U32') according to the rule 'safe'", "user": {"login": "TheSilentNoise", "id": 30172474, "node_id": "MDQ6VXNlcjMwMTcyNDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/30172474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheSilentNoise", "html_url": "https://github.com/TheSilentNoise", "followers_url": "https://api.github.com/users/TheSilentNoise/followers", "following_url": "https://api.github.com/users/TheSilentNoise/following{/other_user}", "gists_url": "https://api.github.com/users/TheSilentNoise/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheSilentNoise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheSilentNoise/subscriptions", "organizations_url": "https://api.github.com/users/TheSilentNoise/orgs", "repos_url": "https://api.github.com/users/TheSilentNoise/repos", "events_url": "https://api.github.com/users/TheSilentNoise/events{/privacy}", "received_events_url": "https://api.github.com/users/TheSilentNoise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T01:04:50Z", "updated_at": "2020-06-11T10:35:44Z", "closed_at": "2020-06-11T10:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nBelow are details:\r\n\r\n1. Operating System: Ubuntu\r\n2. tsfresh version: Latest\r\n3. Sample data from dataframe\r\ndf.head(2)\r\n**signal_name        observation_time       value**\r\n0  MaxHyst_US 2020-04-01 00:43:50.999    1.181103\r\n1      Max_US 2020-04-01 00:43:50.999   31.496080\r\n\r\n**Data types:**\r\nsignal_name                 object\r\nobservation_time    datetime64[ns]\r\nvalue                      float64\r\n\r\n**Code snippet:**\r\ndf_extracted_features = extract_features(df, column_id='signal_name',column_sort='observation_time')\r\n\r\nIt is a flat dataframe.\r\nThe above code runs fine for first 1000 rows. But it starts throwing the below error when ran on the entire dataframe.\r\nTypeError: Cannot cast array data from dtype('float64') to dtype('<U32') according to the rule 'safe'\r\n\r\nSince, the code is running fine for first few rows and generating data in desired format it makes me think that this is caused by some bad data. What shall I look for and How can I solve this?\r\n\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/675", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/675/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/675/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/675", "id": 607541504, "node_id": "MDU6SXNzdWU2MDc1NDE1MDQ=", "number": 675, "title": "what is the impact of rolling_direction in roll_time_series?", "user": {"login": "ramdhan1989", "id": 41245856, "node_id": "MDQ6VXNlcjQxMjQ1ODU2", "avatar_url": "https://avatars2.githubusercontent.com/u/41245856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramdhan1989", "html_url": "https://github.com/ramdhan1989", "followers_url": "https://api.github.com/users/ramdhan1989/followers", "following_url": "https://api.github.com/users/ramdhan1989/following{/other_user}", "gists_url": "https://api.github.com/users/ramdhan1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramdhan1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramdhan1989/subscriptions", "organizations_url": "https://api.github.com/users/ramdhan1989/orgs", "repos_url": "https://api.github.com/users/ramdhan1989/repos", "events_url": "https://api.github.com/users/ramdhan1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ramdhan1989/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T13:17:21Z", "updated_at": "2020-04-27T14:35:00Z", "closed_at": "2020-04-27T14:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthis is really good package for feature selection. I would like to clarify after doing some trial.\r\nI am still confused with rolling_direction parameter. what is the impact of this value ? It works for the direction (moving forward or backward) but the magnitude doesn't affect anything. So, the resulted dataframe with rolling_direction = 1, 2, 3 or 4 has same dataframe size. an then the value zero has same effect with None , isn't it ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/673", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/673/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/673/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/673", "id": 606803241, "node_id": "MDU6SXNzdWU2MDY4MDMyNDE=", "number": 673, "title": "Value of `id` column returned by roll_time_series is set to `column_sort`", "user": {"login": "ironerumi", "id": 39033099, "node_id": "MDQ6VXNlcjM5MDMzMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/39033099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ironerumi", "html_url": "https://github.com/ironerumi", "followers_url": "https://api.github.com/users/ironerumi/followers", "following_url": "https://api.github.com/users/ironerumi/following{/other_user}", "gists_url": "https://api.github.com/users/ironerumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ironerumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ironerumi/subscriptions", "organizations_url": "https://api.github.com/users/ironerumi/orgs", "repos_url": "https://api.github.com/users/ironerumi/repos", "events_url": "https://api.github.com/users/ironerumi/events{/privacy}", "received_events_url": "https://api.github.com/users/ironerumi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2020-04-25T16:16:02Z", "updated_at": "2020-05-18T19:44:38Z", "closed_at": "2020-04-29T20:26:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, probably I do not fully understand the usage of `tsfresh.utilities.dataframe_functions.roll_time_series`.\r\n\r\nSay if I have input data like below and apply `roll_time_series` to it:\r\n```python\r\ndf = pd.DataFrame(\r\n    {\r\n        \"id\": [\"A\", \"A\", \"A\", \"B\", \"B\", \"B\"],\r\n        \"time\": [1, 2, 3, 1, 2, 3],\r\n        \"x\": [11, 12, 13, 14, 15, 16],\r\n        \"y\": [21, 22, 23, 24, 25, 26],\r\n    }\r\n)\r\ndf_roll = roll_time_series(\r\n    df,\r\n    column_id=\"id\",\r\n    column_sort=\"time\",\r\n    column_kind=None,\r\n    rolling_direction=10,\r\n)\r\n```\r\nThe result is like below, I was expecting the `id` column could remains the same but it was set to the value of `column_sort`.\r\nidx | time | x | y | id\r\n-- | -- | -- | -- | --\r\n6 | 1.0 | 11.0 | 21.0 | 1\r\n7 | 1.0 | 14.0 | 24.0 | 1\r\n2 | 1.0 | 11.0 | 21.0 | 2\r\n3 | 1.0 | 14.0 | 24.0 | 2\r\n8 | 2.0 | 12.0 | 22.0 | 2\r\n9 | 2.0 | 15.0 | 25.0 | 2\r\n0 | 1.0 | 11.0 | 21.0 | 3\r\n1 | 1.0 | 14.0 | 24.0 | 3\r\n4 | 2.0 | 12.0 | 22.0 | 3\r\n5 | 2.0 | 15.0 | 25.0 | 3\r\n10 | 3.0 | 13.0 | 23.0 | 3\r\n11 | 3.0 | 16.0 | 26.0 | 3\r\n- Do we expect that there is no duplicate `time` accross id?\r\n- Is there a way to distingush data from different `id`?\r\n\r\nMany thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/672", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/672/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/672/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/672", "id": 606693897, "node_id": "MDU6SXNzdWU2MDY2OTM4OTc=", "number": 672, "title": "Rolling time not using last values", "user": {"login": "ramdhan1989", "id": 41245856, "node_id": "MDQ6VXNlcjQxMjQ1ODU2", "avatar_url": "https://avatars2.githubusercontent.com/u/41245856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramdhan1989", "html_url": "https://github.com/ramdhan1989", "followers_url": "https://api.github.com/users/ramdhan1989/followers", "following_url": "https://api.github.com/users/ramdhan1989/following{/other_user}", "gists_url": "https://api.github.com/users/ramdhan1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramdhan1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramdhan1989/subscriptions", "organizations_url": "https://api.github.com/users/ramdhan1989/orgs", "repos_url": "https://api.github.com/users/ramdhan1989/repos", "events_url": "https://api.github.com/users/ramdhan1989/events{/privacy}", "received_events_url": "https://api.github.com/users/ramdhan1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-25T05:27:25Z", "updated_at": "2020-04-25T11:06:53Z", "closed_at": "2020-04-25T11:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "For multistep prediction x steps ahead, I am thinking to use rolling window start from t-x data. Let say use 3 windows t-30, t-31, t-32 for 30 steps ahead prediction from t? Is it possible using tsfresh? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/671", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/671/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/671/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/671", "id": 604841799, "node_id": "MDU6SXNzdWU2MDQ4NDE3OTk=", "number": 671, "title": "How many datapoints are required for tsfresh to process an ID?", "user": {"login": "wahidelchaar", "id": 38093297, "node_id": "MDQ6VXNlcjM4MDkzMjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/38093297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahidelchaar", "html_url": "https://github.com/wahidelchaar", "followers_url": "https://api.github.com/users/wahidelchaar/followers", "following_url": "https://api.github.com/users/wahidelchaar/following{/other_user}", "gists_url": "https://api.github.com/users/wahidelchaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahidelchaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahidelchaar/subscriptions", "organizations_url": "https://api.github.com/users/wahidelchaar/orgs", "repos_url": "https://api.github.com/users/wahidelchaar/repos", "events_url": "https://api.github.com/users/wahidelchaar/events{/privacy}", "received_events_url": "https://api.github.com/users/wahidelchaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T15:18:05Z", "updated_at": "2020-06-11T10:37:14Z", "closed_at": "2020-06-11T10:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I am trying to extract features for a classification problem. My data has about 500 ID's, each one has a time series of variable length.\r\n\r\nThis is the code that I am running to extract the features:\r\n`feats = extract_features(data, column_id=\"ID\", column_sort=\"timestamp\",default_fc_parameters=params,impute_function=impute)`\r\n\r\nAfter processing a dataset with 500 ID's, I am getting processed dataframes with much less ID's (varies between 0-180). I suspect this is because some of my ID's do not have enough datapoints (I confirmed that some of my ID's have 20-30 points), and so the extract_features() object is dropping these ID's.\r\n\r\nMy question is this: **What is the minimum number of datapoints required to process an ID?** I want to add this as a constraint in my SQL data preparation process (the output of which will be passed into extract_features()).\r\n\r\nIn other words, I am trying to filter out the ID's with too few points like this:\r\n```\r\nSELECT ID, timestamp, feature1, feature2, feature3\r\nFROM table\r\nGROUP BY ID\r\nHAVING COUNT(ID) > minimum_number_of_datapoints_for_tsfresh;\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/667", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/667/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/667/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/667", "id": 599192743, "node_id": "MDU6SXNzdWU1OTkxOTI3NDM=", "number": 667, "title": "Readthedocs \"latest\" version of documentation is outdated", "user": {"login": "rwedge", "id": 5392142, "node_id": "MDQ6VXNlcjUzOTIxNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5392142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwedge", "html_url": "https://github.com/rwedge", "followers_url": "https://api.github.com/users/rwedge/followers", "following_url": "https://api.github.com/users/rwedge/following{/other_user}", "gists_url": "https://api.github.com/users/rwedge/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwedge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwedge/subscriptions", "organizations_url": "https://api.github.com/users/rwedge/orgs", "repos_url": "https://api.github.com/users/rwedge/repos", "events_url": "https://api.github.com/users/rwedge/events{/privacy}", "received_events_url": "https://api.github.com/users/rwedge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T23:21:45Z", "updated_at": "2020-04-14T20:35:24Z", "closed_at": "2020-04-14T20:35:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like the \"latest\" version of the documentation is out of date,  given that the last [changelog](https://tsfresh.readthedocs.io/en/latest/changes.html) entry references the 0.12.0 release.\r\n\r\nBoth \"stable\" and \"master\" versions of the docs reference the 0.15.1 release\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/660", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/660/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/660/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/660", "id": 598144459, "node_id": "MDU6SXNzdWU1OTgxNDQ0NTk=", "number": 660, "title": "Reference for \"the prediction of the quality of steel billets during a continuous casting process\"", "user": {"login": "ayanray089", "id": 34016755, "node_id": "MDQ6VXNlcjM0MDE2NzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/34016755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayanray089", "html_url": "https://github.com/ayanray089", "followers_url": "https://api.github.com/users/ayanray089/followers", "following_url": "https://api.github.com/users/ayanray089/following{/other_user}", "gists_url": "https://api.github.com/users/ayanray089/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayanray089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayanray089/subscriptions", "organizations_url": "https://api.github.com/users/ayanray089/orgs", "repos_url": "https://api.github.com/users/ayanray089/repos", "events_url": "https://api.github.com/users/ayanray089/events{/privacy}", "received_events_url": "https://api.github.com/users/ayanray089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T23:51:54Z", "updated_at": "2020-04-11T00:53:59Z", "closed_at": "2020-04-11T00:53:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCan you provide me any reference to the below use case mentioned in Introduction section of tsfresh.\r\n\"the prediction of the quality of steel billets during a continuous casting process\".\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/659", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/659/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/659/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/659", "id": 596274980, "node_id": "MDU6SXNzdWU1OTYyNzQ5ODA=", "number": 659, "title": "Roll_time_series", "user": {"login": "OJL96", "id": 43963470, "node_id": "MDQ6VXNlcjQzOTYzNDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/43963470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OJL96", "html_url": "https://github.com/OJL96", "followers_url": "https://api.github.com/users/OJL96/followers", "following_url": "https://api.github.com/users/OJL96/following{/other_user}", "gists_url": "https://api.github.com/users/OJL96/gists{/gist_id}", "starred_url": "https://api.github.com/users/OJL96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OJL96/subscriptions", "organizations_url": "https://api.github.com/users/OJL96/orgs", "repos_url": "https://api.github.com/users/OJL96/repos", "events_url": "https://api.github.com/users/OJL96/events{/privacy}", "received_events_url": "https://api.github.com/users/OJL96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-08T03:02:41Z", "updated_at": "2020-04-29T20:25:13Z", "closed_at": "2020-04-29T20:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nthank for for the tsfresh package, it has been most useful.\r\n\r\nSo im trying to extract features from my dataset, before doing so i would like to using a rolling method to increase my data entries by getting the mean of  (im guessing thats the purpose of it).\r\n\r\nso my dataset looks like this:\r\nTIME            VALUE  CLASS  uniqueID\r\n 0.150050 | 0.368338   |   0    |     0\r\n 0.150100 | 0.364448   |   0    |     1\r\n 0.150150 | 0.360232   |   0    |     2\r\n 0.150200 |0.355811    |   0    |     3\r\n 0.150250 |0.351306    |   0    |     4\r\n         ...       ...    ...       ...\r\n 0.299799 | 1.917936   |   6  |  539455\r\n 0.299849 | 1.916304   |   6  |  539456\r\n 0.299900 | 1.914653   |   6  |  539457\r\n 0.299950 | 1.913025   |   6  |  539458\r\n 0.300000 | 1.911464   |   6  |  539459\r\n\r\nand after executing:\r\ndata[\"uniqueID\"] = len(data)\r\ny = data.CLASS\r\nrolledData = roll_time_series(data, \r\n                              column_id=\"CLASS\",\r\n                              column_sort=\"TIME\",\r\n                              column_kind=None,\r\n                              rolling_direction=100)\r\n\r\ni get the following user warning: UserWarning: Your time stamps are not uniformly sampled, which makes rolling nonsensical in some domains. \r\n\r\nit never finishes the function and displays the new data \r\n\r\n\r\nany help is much appreciated. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/657", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/657/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/657/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/657", "id": 594945747, "node_id": "MDU6SXNzdWU1OTQ5NDU3NDc=", "number": 657, "title": "tsfresh extract_features not working for AWS lambda", "user": {"login": "meghnaGlovo", "id": 59737991, "node_id": "MDQ6VXNlcjU5NzM3OTkx", "avatar_url": "https://avatars3.githubusercontent.com/u/59737991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meghnaGlovo", "html_url": "https://github.com/meghnaGlovo", "followers_url": "https://api.github.com/users/meghnaGlovo/followers", "following_url": "https://api.github.com/users/meghnaGlovo/following{/other_user}", "gists_url": "https://api.github.com/users/meghnaGlovo/gists{/gist_id}", "starred_url": "https://api.github.com/users/meghnaGlovo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meghnaGlovo/subscriptions", "organizations_url": "https://api.github.com/users/meghnaGlovo/orgs", "repos_url": "https://api.github.com/users/meghnaGlovo/repos", "events_url": "https://api.github.com/users/meghnaGlovo/events{/privacy}", "received_events_url": "https://api.github.com/users/meghnaGlovo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T09:20:28Z", "updated_at": "2020-04-06T18:34:52Z", "closed_at": "2020-04-06T18:34:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Your operating system - Amazon Linux\r\n2. The version of *tsfresh* =0.15.1\r\n3. data - I don't think its data-related issue, its OS related problem. \r\n4. Code\r\n`courier_ts_features = extract_features(\r\n        df_cour,\r\n        column_id=\"courier_id\",\r\n        column_value=time_serie_column,\r\n        column_sort=\"sending_time\",\r\n        impute_function=impute,\r\n        show_warnings=False,\r\n        disable_progressbar=False,\r\n        default_fc_parameters=fc_parameters,\r\n        n_jobs=1,\r\n    )`\r\n5. stacktrace\r\n```\r\nexception occurred:  <class 'OSError'>\r\nTraceback (most recent call last):\r\nFile \"/var/task/handler.py\", line 56, in aggregate_and_publish\r\nresult = TimeToAcceptTransformer().execute(input_df)\r\nFile \"/var/task/transformers/time_to_accept_transformer.py\", line 25, in execute\r\ndf, self.get_aggregations(), \"time_to_accept\"\r\nFile \"/var/task/transformers/time_to_accept_transformer.py\", line 103, in extract_ts_features_primitive\r\nn_jobs=1,\r\nFile \"/tmp/sls-py-req/tsfresh/feature_extraction/extraction.py\", line 160, in extract_features\r\ndistributor=distributor)\r\nFile \"/tmp/sls-py-req/tsfresh/feature_extraction/extraction.py\", line 301, in _do_extraction\r\nshow_warnings=show_warnings)\r\nFile \"/tmp/sls-py-req/tsfresh/utilities/distribution.py\", line 372, in __init__\r\nself.pool = Pool(processes=n_workers, initializer=initialize_warnings_in_workers, initargs=(show_warnings,))\r\nFile \"/var/lang/lib/python3.7/multiprocessing/context.py\", line 119, in Pool\r\ncontext=self.get_context())\r\nFile \"/var/lang/lib/python3.7/multiprocessing/pool.py\", line 158, in __init__\r\nself._setup_queues()\r\nFile \"/var/lang/lib/python3.7/multiprocessing/pool.py\", line 251, in _setup_queues\r\nself._inqueue = self._ctx.SimpleQueue()\r\nFile \"/var/lang/lib/python3.7/multiprocessing/context.py\", line 112, in SimpleQueue\r\nreturn SimpleQueue(ctx=self.get_context())\r\nFile \"/var/lang/lib/python3.7/multiprocessing/queues.py\", line 332, in __init__\r\nself._rlock = ctx.Lock()\r\nFile \"/var/lang/lib/python3.7/multiprocessing/context.py\", line 67, in Lock\r\nreturn Lock(ctx=self.get_context())\r\nFile \"/var/lang/lib/python3.7/multiprocessing/synchronize.py\", line 162, in __init__\r\nSemLock.__init__(self, SEMAPHORE, 1, 1, ctx=ctx)\r\nFile \"/var/lang/lib/python3.7/multiprocessing/synchronize.py\", line 59, in __init__\r\nunlink_now)\r\nOSError: [Errno 38] Function not implemented\r\n```\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/655", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/655/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/655/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/655", "id": 594137213, "node_id": "MDU6SXNzdWU1OTQxMzcyMTM=", "number": 655, "title": "Multivariate Feature Extraction", "user": {"login": "firmai", "id": 26666267, "node_id": "MDQ6VXNlcjI2NjY2MjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/26666267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/firmai", "html_url": "https://github.com/firmai", "followers_url": "https://api.github.com/users/firmai/followers", "following_url": "https://api.github.com/users/firmai/following{/other_user}", "gists_url": "https://api.github.com/users/firmai/gists{/gist_id}", "starred_url": "https://api.github.com/users/firmai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/firmai/subscriptions", "organizations_url": "https://api.github.com/users/firmai/orgs", "repos_url": "https://api.github.com/users/firmai/repos", "events_url": "https://api.github.com/users/firmai/events{/privacy}", "received_events_url": "https://api.github.com/users/firmai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-04T22:33:52Z", "updated_at": "2020-04-05T19:08:45Z", "closed_at": "2020-04-05T19:08:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is it possible to take in two feature to calculate the final (one) signal? Has this been done, can this be done? Thanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/653", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/653/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/653/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/653", "id": 589651310, "node_id": "MDU6SXNzdWU1ODk2NTEzMTA=", "number": 653, "title": "Could we add a  Cluster Distributor to dask_feature_extraction_on_chunk  also?", "user": {"login": "demontamer", "id": 8560755, "node_id": "MDQ6VXNlcjg1NjA3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8560755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demontamer", "html_url": "https://github.com/demontamer", "followers_url": "https://api.github.com/users/demontamer/followers", "following_url": "https://api.github.com/users/demontamer/following{/other_user}", "gists_url": "https://api.github.com/users/demontamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/demontamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demontamer/subscriptions", "organizations_url": "https://api.github.com/users/demontamer/orgs", "repos_url": "https://api.github.com/users/demontamer/repos", "events_url": "https://api.github.com/users/demontamer/events{/privacy}", "received_events_url": "https://api.github.com/users/demontamer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-28T20:16:58Z", "updated_at": "2020-04-04T08:54:23Z", "closed_at": "2020-04-01T09:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added the parameter in #648\r\n\r\n_Originally posted by @nils-braun in https://github.com/blue-yonder/tsfresh/issues/646#issuecomment-603970797_\r\n\r\nHi @nils-braun , I have had difficulty extracting features from dask dataframes unitl now i noticed recently you added a new dask_feature_extraction function, which is super amazing, now can you add a cluster distributor to this as well? \r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/652", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/652/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/652/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/652", "id": 589117015, "node_id": "MDU6SXNzdWU1ODkxMTcwMTU=", "number": 652, "title": "defining param's for feature calculators", "user": {"login": "leanindustry", "id": 60368595, "node_id": "MDQ6VXNlcjYwMzY4NTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/60368595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leanindustry", "html_url": "https://github.com/leanindustry", "followers_url": "https://api.github.com/users/leanindustry/followers", "following_url": "https://api.github.com/users/leanindustry/following{/other_user}", "gists_url": "https://api.github.com/users/leanindustry/gists{/gist_id}", "starred_url": "https://api.github.com/users/leanindustry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leanindustry/subscriptions", "organizations_url": "https://api.github.com/users/leanindustry/orgs", "repos_url": "https://api.github.com/users/leanindustry/repos", "events_url": "https://api.github.com/users/leanindustry/events{/privacy}", "received_events_url": "https://api.github.com/users/leanindustry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T13:00:07Z", "updated_at": "2020-03-27T19:04:58Z", "closed_at": "2020-03-27T19:04:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. windows 10\r\n2. The latest version of *tsfresh* \r\n3. pin = _temporary_index_column\ty\r\n\r\n0\t19\r\n18\t19\r\n1\t36\r\n17\t36\r\n2\t51\r\n16\t51\r\n3\t64\r\n15\t64\r\n4\t75\r\n14\t75\r\n5\t84\r\n13\t84\r\n6\t91\r\n12\t91\r\n7\t96\r\n11\t96\r\n8\t99\r\n10\t99\r\n9\t100\r\n\r\n4.\r\nIn[78]: param = {'f_agg':'mean','maxlag':40} \r\nIn[79]: tsfresh.feature_extraction.feature_calculators.agg_autocorrelation(pin, param)\r\n\r\n5. \r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-79-35f13f796faa>\", line 1, in <module>\r\n    tsfresh.feature_extraction.feature_calculators.agg_autocorrelation(pin, param)\r\n\r\n  File \"C:\\Users\\shawn.waltz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py\", line 358, in agg_autocorrelation\r\n    max_maxlag = max([config[\"maxlag\"] for config in param])\r\n\r\n  File \"C:\\Users\\shawn.waltz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py\", line 358, in <listcomp>\r\n    max_maxlag = max([config[\"maxlag\"] for config in param])\r\n\r\nTypeError: string indices must be integers\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/647", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/647/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/647/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/647", "id": 587343272, "node_id": "MDU6SXNzdWU1ODczNDMyNzI=", "number": 647, "title": "ZeroDivisionError: integer division or modulo by zero", "user": {"login": "demontamer", "id": 8560755, "node_id": "MDQ6VXNlcjg1NjA3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8560755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demontamer", "html_url": "https://github.com/demontamer", "followers_url": "https://api.github.com/users/demontamer/followers", "following_url": "https://api.github.com/users/demontamer/following{/other_user}", "gists_url": "https://api.github.com/users/demontamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/demontamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demontamer/subscriptions", "organizations_url": "https://api.github.com/users/demontamer/orgs", "repos_url": "https://api.github.com/users/demontamer/repos", "events_url": "https://api.github.com/users/demontamer/events{/privacy}", "received_events_url": "https://api.github.com/users/demontamer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-24T23:36:30Z", "updated_at": "2020-03-25T02:03:00Z", "closed_at": "2020-03-25T02:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oh no, you encountered a problem while using *tsfesh*.\r\n\r\nWe, the maintainers, are happy to help you. When opening an issue, please provide the following information to us:\r\n\r\n1. Your operating system - Aws cluster\r\n2. The version of *tsfresh* that you are using \r\n0.14\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\n4. A minimal code snippet which reproduces the problem/bug\r\n'X = extract_features(rolled,column_id=\"id\", column_sort=\"time\",column_kind=\"kind\", column_value=\"price\",\r\n    default_fc_parameters=EfficientFCParameters(),distributor=Distributor) # n_jobs=8,chunksize=100)\r\n' - i copied and paste from @nils-braun pdf Google example\r\n'      price                 time                   id      kind\r\n0  533334.0  2018-01-05 08:55:00  2018-01-06 04:34:00  \r\n1   15266.0  2018-01-05 08:55:00  2018-01-06 04:34:00      open\r\n2   15320.0  2018-01-05 08:55:00  2018-01-06 04:34:00      high\r\n3   15266.0  2018-01-05 08:55:00  2018-01-06 04:34:00       low\r\n4   15320.0  2018-01-05 08:55:00  2018-01-06 04:34:00     close\r\n5. Any reported errors or traceback\r\nTraceback (most recent call last):\r\n  File \"app/trading/mlbots/test/tsfresh_.py\", line 173, in <module>\r\n    X,Y = get_data(')\r\n  File \"app/test/tsfresh_.py\", line 141, in get_data\r\n    default_fc_parameters=EfficientFCParameters(),distributor=Distributor) # n_jobs=8,chunksize=100)\r\n  File \"/usr/local/lib/python3.6/site-packages/tsfresh/feature_extraction/extraction.py\", line 160, in extract_features\r\n    distributor=distributor)\r\n  File \"/usr/local/lib/python3.6/site-packages/tsfresh/feature_extraction/extraction.py\", line 311, in _do_extraction\r\n    function_kwargs=kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/tsfresh/utilities/distribution.py\", line 153, in map_reduce\r\n    chunk_size = self.calculate_best_chunk_size(data_length)\r\n  File \"/usr/local/lib/python3.6/site-packages/tsfresh/utilities/distribution.py\", line 320, in calculate_best_chunk_size\r\n    chunk_size, extra = divmod(data_length, n_workers * 5)\r\nZeroDivisionError: integer division or modulo by zero\r\n'\r\n\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/646", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/646/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/646/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/646", "id": 587336902, "node_id": "MDU6SXNzdWU1ODczMzY5MDI=", "number": 646, "title": "Add multiprocessing capability to rolling", "user": {"login": "demontamer", "id": 8560755, "node_id": "MDQ6VXNlcjg1NjA3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8560755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demontamer", "html_url": "https://github.com/demontamer", "followers_url": "https://api.github.com/users/demontamer/followers", "following_url": "https://api.github.com/users/demontamer/following{/other_user}", "gists_url": "https://api.github.com/users/demontamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/demontamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demontamer/subscriptions", "organizations_url": "https://api.github.com/users/demontamer/orgs", "repos_url": "https://api.github.com/users/demontamer/repos", "events_url": "https://api.github.com/users/demontamer/events{/privacy}", "received_events_url": "https://api.github.com/users/demontamer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 469228432, "node_id": "MDU6TGFiZWw0NjkyMjg0MzI=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-24T23:18:15Z", "updated_at": "2020-04-29T20:25:40Z", "closed_at": "2020-04-29T20:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oh no, you encountered a problem while using *tsfesh*.\r\nI notice the above functions do not take njobs or distributor as args. They are quite slow for even moderately large datasets of size 5000?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/644", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/644/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/644/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/644", "id": 584752331, "node_id": "MDU6SXNzdWU1ODQ3NTIzMzE=", "number": 644, "title": "Empty result of extract_features ", "user": {"login": "damomeen", "id": 883369, "node_id": "MDQ6VXNlcjg4MzM2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/883369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damomeen", "html_url": "https://github.com/damomeen", "followers_url": "https://api.github.com/users/damomeen/followers", "following_url": "https://api.github.com/users/damomeen/following{/other_user}", "gists_url": "https://api.github.com/users/damomeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/damomeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damomeen/subscriptions", "organizations_url": "https://api.github.com/users/damomeen/orgs", "repos_url": "https://api.github.com/users/damomeen/repos", "events_url": "https://api.github.com/users/damomeen/events{/privacy}", "received_events_url": "https://api.github.com/users/damomeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-19T23:13:16Z", "updated_at": "2020-03-24T20:04:50Z", "closed_at": "2020-03-24T20:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I preparing unsupervised ML solution and would like to use tsfresh to prepare features for PCA. I have a problem because `extract_features` function provides very frequently an empty result (see point 5 below). I have reduced the dataset to demonstrate the problem. Why do I see the empty result of `extract_features` ? \r\n\r\n1. Ubuntu 18.04.4 LTS\r\n2. tsfresh version: 0.14.1\r\n3. My minimalistic dataframe is: \r\n```\r\ndf\r\n\r\n   id  value\r\n0   0   2078\r\n1   0   2079\r\n2   0   2091\r\n3   0   2074\r\n4   0   2081\r\n5   0   2086\r\n6   0   2092\r\n7   0   2081\r\n8   0   2068\r\n9   0   2094\r\n```\r\n4. I try extract features using:\r\n```python\r\nfrom tsfresh.feature_extraction.settings import EfficientFCParameters, ComprehensiveFCParameters, MinimalFCParameters\r\nextracted_features = extract_features(df, n_jobs=0, column_id=\"id\", kind_to_fc_parameters=MinimalFCParameters())  \r\nprint(extracted_features)\r\n```\r\n5. Code output is:\r\n```\r\nFeature Extraction: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 16.54it/s]\r\nEmpty DataFrame\r\nColumns: []\r\nIndex: []\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/643", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/643/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/643/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/643", "id": 582328093, "node_id": "MDU6SXNzdWU1ODIzMjgwOTM=", "number": 643, "title": "Feature request: RelevantFeatureAugmenter kind_to_fc_parameters to accept params loaded from json", "user": {"login": "vedal", "id": 22004000, "node_id": "MDQ6VXNlcjIyMDA0MDAw", "avatar_url": "https://avatars0.githubusercontent.com/u/22004000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedal", "html_url": "https://github.com/vedal", "followers_url": "https://api.github.com/users/vedal/followers", "following_url": "https://api.github.com/users/vedal/following{/other_user}", "gists_url": "https://api.github.com/users/vedal/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedal/subscriptions", "organizations_url": "https://api.github.com/users/vedal/orgs", "repos_url": "https://api.github.com/users/vedal/repos", "events_url": "https://api.github.com/users/vedal/events{/privacy}", "received_events_url": "https://api.github.com/users/vedal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-16T14:08:33Z", "updated_at": "2020-03-25T10:14:13Z", "closed_at": "2020-03-25T10:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. OS: `macOS 10.13.6`\r\n2. version `1.14.1`\r\n3. dataset `load_robot_execution_failures` \r\n4. A minimal code snippet which reproduces the problem/bug\r\n\r\n```\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom tsfresh.examples import load_robot_execution_failures\r\nfrom tsfresh.transformers import RelevantFeatureAugmenter\r\n\r\npipeline = Pipeline([('augmenter', RelevantFeatureAugmenter(column_id='id', column_sort='time')),\r\n            ('classifier', RandomForestClassifier())])\r\n\r\ndf_ts, y = load_robot_execution_failures()\r\nX = pd.DataFrame(index=y.index)\r\n\r\npipeline.set_params(augmenter__timeseries_container=df_ts)\r\npipeline.fit(X, y)\r\n\r\n\r\nkind_to_fc_parameters = tsfresh.feature_extraction.settings.from_columns(pipeline[0].transform(X))\r\n\r\n\r\nwith open('kind_to_fc_parameters_comprehensive.json', 'w', encoding='utf-8') as f:\r\n        json.dump(kind_to_fc_parameters, f, ensure_ascii=False, indent=4)\r\n\r\n\r\npipeline = Pipeline([('augmenter', RelevantFeatureAugmenter(column_id='id', column_sort='time', kind_to_fc_parameters=pd.read_json('kind_to_fc_parameters_comprehensive.json').to_dict())),\r\n            ('classifier', RandomForestClassifier())])\r\n\r\ndf_ts, y = load_robot_execution_failures()\r\nX = pd.DataFrame(index=y.index)\r\n\r\npipeline.set_params(augmenter__timeseries_container=df_ts)\r\npipeline.fit(X, y)\r\n```\r\n\r\n5. Any reported errors or traceback\r\nValueError: at least one array or dtype is required\r\n\r\n\r\nThe problem seems to be that `tsfresh.feature_extraction.settings.from_columns` returns a `dict` containing `ndarray` type. Would be great to be able to both save and load params to json without worrying about this. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/642", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/642/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/642/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/642", "id": 582092761, "node_id": "MDU6SXNzdWU1ODIwOTI3NjE=", "number": 642, "title": "Extracting features from a big dataset", "user": {"login": "minhduc0711", "id": 34294427, "node_id": "MDQ6VXNlcjM0Mjk0NDI3", "avatar_url": "https://avatars2.githubusercontent.com/u/34294427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minhduc0711", "html_url": "https://github.com/minhduc0711", "followers_url": "https://api.github.com/users/minhduc0711/followers", "following_url": "https://api.github.com/users/minhduc0711/following{/other_user}", "gists_url": "https://api.github.com/users/minhduc0711/gists{/gist_id}", "starred_url": "https://api.github.com/users/minhduc0711/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minhduc0711/subscriptions", "organizations_url": "https://api.github.com/users/minhduc0711/orgs", "repos_url": "https://api.github.com/users/minhduc0711/repos", "events_url": "https://api.github.com/users/minhduc0711/events{/privacy}", "received_events_url": "https://api.github.com/users/minhduc0711/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-16T08:20:50Z", "updated_at": "2020-03-24T01:12:21Z", "closed_at": "2020-03-24T01:12:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have around 1.7M time series, each with a length of 72. \r\nIs there a way to extract features from this much data without getting my memory filled up? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/640", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/640/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/640/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/640", "id": 577553284, "node_id": "MDU6SXNzdWU1Nzc1NTMyODQ=", "number": 640, "title": "[Question] Feature importance to speed up training?", "user": {"login": "jarlva", "id": 26058035, "node_id": "MDQ6VXNlcjI2MDU4MDM1", "avatar_url": "https://avatars0.githubusercontent.com/u/26058035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarlva", "html_url": "https://github.com/jarlva", "followers_url": "https://api.github.com/users/jarlva/followers", "following_url": "https://api.github.com/users/jarlva/following{/other_user}", "gists_url": "https://api.github.com/users/jarlva/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarlva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarlva/subscriptions", "organizations_url": "https://api.github.com/users/jarlva/orgs", "repos_url": "https://api.github.com/users/jarlva/repos", "events_url": "https://api.github.com/users/jarlva/events{/privacy}", "received_events_url": "https://api.github.com/users/jarlva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-08T19:38:14Z", "updated_at": "2020-03-15T11:09:25Z", "closed_at": "2020-03-15T07:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nMy observation training dataset has many columns ( > 400). It's reasonable to assume that not all of them are important and some are more important than others. Finding which ones will greatly reduce training and optimization cycles.\r\nFor example: say I train using all columns a simplified problem. Then, analyzing tensorboard and/or saved model data (or another way) to find which features were actually used most by TF to train and further optimize.\r\nAnyone idea how to find out?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/639", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/639/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/639/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/639", "id": 576934779, "node_id": "MDU6SXNzdWU1NzY5MzQ3Nzk=", "number": 639, "title": "Feature explainability FFT  -- Feature request", "user": {"login": "wolfdr", "id": 60602510, "node_id": "MDQ6VXNlcjYwNjAyNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/60602510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolfdr", "html_url": "https://github.com/wolfdr", "followers_url": "https://api.github.com/users/wolfdr/followers", "following_url": "https://api.github.com/users/wolfdr/following{/other_user}", "gists_url": "https://api.github.com/users/wolfdr/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolfdr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolfdr/subscriptions", "organizations_url": "https://api.github.com/users/wolfdr/orgs", "repos_url": "https://api.github.com/users/wolfdr/repos", "events_url": "https://api.github.com/users/wolfdr/events{/privacy}", "received_events_url": "https://api.github.com/users/wolfdr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T13:34:01Z", "updated_at": "2020-03-16T09:17:27Z", "closed_at": "2020-03-15T07:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps I did not see it in the docs or the code, but I was looking for an explanation of the Fast Fourier coefficient... how many Hertz does it relate to? So that relates to the sampling. But what is the sampling? (There is no actual sampling passed into the np.fft I saw... then I gave up) Could not really find that out. Is there any way to add to the docs how to calculate it...? Or ideally add to the variable name.\r\n\r\nDisclaimer: I did not use FFT in years so I might be missing the obvious here. Apologies if this is the case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/638", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/638/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/638/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/638", "id": 572386522, "node_id": "MDU6SXNzdWU1NzIzODY1MjI=", "number": 638, "title": "tsfresh.utilities.dataframe_functions.make_forecasting_frame, add option to remove ids with lesser lags", "user": {"login": "jontis", "id": 1307210, "node_id": "MDQ6VXNlcjEzMDcyMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1307210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jontis", "html_url": "https://github.com/jontis", "followers_url": "https://api.github.com/users/jontis/followers", "following_url": "https://api.github.com/users/jontis/following{/other_user}", "gists_url": "https://api.github.com/users/jontis/gists{/gist_id}", "starred_url": "https://api.github.com/users/jontis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jontis/subscriptions", "organizations_url": "https://api.github.com/users/jontis/orgs", "repos_url": "https://api.github.com/users/jontis/repos", "events_url": "https://api.github.com/users/jontis/events{/privacy}", "received_events_url": "https://api.github.com/users/jontis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 469228432, "node_id": "MDU6TGFiZWw0NjkyMjg0MzI=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-27T21:59:11Z", "updated_at": "2020-04-29T20:24:08Z", "closed_at": "2020-04-29T20:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "tsfresh.utilities.dataframe_functions.make_forecasting_frame conveniently builds a dataframe with lags from a time series and takes the parameter max_timeshift for number of lags to include. A few of the id's in the end will get less than max_timeshift lags. Running feature extraction on those will thus give very different results than if they had max_timeshift lags. I propose to include an option to filter out those ids that did not get max_timeshift lags.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/636", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/636/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/636/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/636", "id": 571727434, "node_id": "MDU6SXNzdWU1NzE3Mjc0MzQ=", "number": 636, "title": "Overivew on extracted features table needs word wrapping.", "user": {"login": "mjcourte", "id": 26233637, "node_id": "MDQ6VXNlcjI2MjMzNjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/26233637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjcourte", "html_url": "https://github.com/mjcourte", "followers_url": "https://api.github.com/users/mjcourte/followers", "following_url": "https://api.github.com/users/mjcourte/following{/other_user}", "gists_url": "https://api.github.com/users/mjcourte/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjcourte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjcourte/subscriptions", "organizations_url": "https://api.github.com/users/mjcourte/orgs", "repos_url": "https://api.github.com/users/mjcourte/repos", "events_url": "https://api.github.com/users/mjcourte/events{/privacy}", "received_events_url": "https://api.github.com/users/mjcourte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T23:39:30Z", "updated_at": "2020-03-15T07:50:46Z", "closed_at": "2020-03-15T07:50:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "My issue is with the readthedocs page for list of features [here](https://tsfresh.readthedocs.io/en/latest/text/list_of_features.html). \r\n\r\nIt is quite hard to read this table because the window of readable characters is narrow and fixed, and the scrollbar is way down at the foot of a (relatively) long table. One would need to scroll up and down and back and forth to read each line.\r\n\r\nConsider adding word wrap to the descriptions column of the table.\r\n\r\nI'm on Windows 10, Google Chrome if it matters.\r\n\r\nThanks y'all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/635", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/635/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/635/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/635", "id": 571441544, "node_id": "MDU6SXNzdWU1NzE0NDE1NDQ=", "number": 635, "title": "Parameters not sorted alphabetically in feature name during feature extraction", "user": {"login": "trueckel", "id": 14804706, "node_id": "MDQ6VXNlcjE0ODA0NzA2", "avatar_url": "https://avatars1.githubusercontent.com/u/14804706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trueckel", "html_url": "https://github.com/trueckel", "followers_url": "https://api.github.com/users/trueckel/followers", "following_url": "https://api.github.com/users/trueckel/following{/other_user}", "gists_url": "https://api.github.com/users/trueckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/trueckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trueckel/subscriptions", "organizations_url": "https://api.github.com/users/trueckel/orgs", "repos_url": "https://api.github.com/users/trueckel/repos", "events_url": "https://api.github.com/users/trueckel/events{/privacy}", "received_events_url": "https://api.github.com/users/trueckel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-26T14:52:12Z", "updated_at": "2020-04-11T10:04:26Z", "closed_at": "2020-04-11T10:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, great work with tsfresh. Really nicely done!\r\n\r\nNow to the issue:\r\nOS: Windows 10 Pro x64, but doesn't matter here.\r\ntsfresh ver: 0.13.0\r\n\r\nThe function 'extract_features' returns a dataframe in which the column names represent the feature names, also containing the parameters used to calculate that feature.\r\nThe order of the parameter names within the feature name however are not sorted alphabetically.\r\nThis surprised me, because you implemented a utility function 'convert_to_output_format' in the string_manipulation module which converts parameter dictionaries to a string, in which the parameters are in fact sorted alphabetically.\r\n\r\nAs it is:\r\nSignal1__fft_coefficient__coeff_77__attr_\"angle\"\r\n\r\nAs it should be:\r\nSignal1__fft_coefficient__attr_\"angle\"__coeff_77\r\n\r\nIn my use case same features happen to have different names because the parameters in the string are sorted differently.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/634", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/634/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/634/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/634", "id": 569917701, "node_id": "MDU6SXNzdWU1Njk5MTc3MDE=", "number": 634, "title": "Do all features that tsfresh generate based on previous price values? ", "user": {"login": "ivan-bulka", "id": 22883912, "node_id": "MDQ6VXNlcjIyODgzOTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/22883912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-bulka", "html_url": "https://github.com/ivan-bulka", "followers_url": "https://api.github.com/users/ivan-bulka/followers", "following_url": "https://api.github.com/users/ivan-bulka/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-bulka/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-bulka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-bulka/subscriptions", "organizations_url": "https://api.github.com/users/ivan-bulka/orgs", "repos_url": "https://api.github.com/users/ivan-bulka/repos", "events_url": "https://api.github.com/users/ivan-bulka/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-bulka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-24T15:07:51Z", "updated_at": "2020-04-11T08:01:08Z", "closed_at": "2020-04-11T08:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, guys, \r\nI'm new in tsfresh and have some general questions.\r\ntsfresh generates lots of features and it's great. \r\nDo all features that tsfresh generate based on previous price values? \r\nFor example, I have prices for timestamps: t-n, t-n-1, ... t-1, t. \r\nAm I right if we generate features for timestamp t, we use only data from timestamps t-n, t-n-1, ... t-1. We do not use future data or data for existing timestamp (for example for timestamps t, t+1 and t+2) \r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/633", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/633/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/633/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/633", "id": 564106213, "node_id": "MDU6SXNzdWU1NjQxMDYyMTM=", "number": 633, "title": "Generate sub-series from timeseries, to extract all possible features ", "user": {"login": "raedbsili1991", "id": 31764213, "node_id": "MDQ6VXNlcjMxNzY0MjEz", "avatar_url": "https://avatars1.githubusercontent.com/u/31764213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raedbsili1991", "html_url": "https://github.com/raedbsili1991", "followers_url": "https://api.github.com/users/raedbsili1991/followers", "following_url": "https://api.github.com/users/raedbsili1991/following{/other_user}", "gists_url": "https://api.github.com/users/raedbsili1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/raedbsili1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raedbsili1991/subscriptions", "organizations_url": "https://api.github.com/users/raedbsili1991/orgs", "repos_url": "https://api.github.com/users/raedbsili1991/repos", "events_url": "https://api.github.com/users/raedbsili1991/events{/privacy}", "received_events_url": "https://api.github.com/users/raedbsili1991/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-12T16:13:07Z", "updated_at": "2020-04-25T11:19:43Z", "closed_at": "2020-04-25T11:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using tsfresh ( for example the roll function): \r\nIs it possible to generate features as a matrix X, containing in each row, all the possible features of every sub-series of the time-series data ? \r\n\r\n![image](https://user-images.githubusercontent.com/31764213/74353604-74612200-4dba-11ea-9885-05360aa9ee5e.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/631", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/631/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/631/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/631", "id": 562709848, "node_id": "MDU6SXNzdWU1NjI3MDk4NDg=", "number": 631, "title": "Typo Documentation", "user": {"login": "rpanai", "id": 21178372, "node_id": "MDQ6VXNlcjIxMTc4Mzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/21178372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpanai", "html_url": "https://github.com/rpanai", "followers_url": "https://api.github.com/users/rpanai/followers", "following_url": "https://api.github.com/users/rpanai/following{/other_user}", "gists_url": "https://api.github.com/users/rpanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpanai/subscriptions", "organizations_url": "https://api.github.com/users/rpanai/orgs", "repos_url": "https://api.github.com/users/rpanai/repos", "events_url": "https://api.github.com/users/rpanai/events{/privacy}", "received_events_url": "https://api.github.com/users/rpanai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T17:21:39Z", "updated_at": "2020-02-10T18:46:05Z", "closed_at": "2020-02-10T18:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I believe there is a typo in `MinimalFCParameters` in this [tsfresh/feature_extraction/settings.py](https://github.com/blue-yonder/tsfresh/blob/master/tsfresh/feature_extraction/settings.py). At line 160 donate should be denoted.  Do you want me to do a PR for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/629", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/629/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/629/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/629", "id": 562448342, "node_id": "MDU6SXNzdWU1NjI0NDgzNDI=", "number": 629, "title": "How to use tsfresh with unsupervised learning", "user": {"login": "chauhansaurabhb", "id": 13085995, "node_id": "MDQ6VXNlcjEzMDg1OTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/13085995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chauhansaurabhb", "html_url": "https://github.com/chauhansaurabhb", "followers_url": "https://api.github.com/users/chauhansaurabhb/followers", "following_url": "https://api.github.com/users/chauhansaurabhb/following{/other_user}", "gists_url": "https://api.github.com/users/chauhansaurabhb/gists{/gist_id}", "starred_url": "https://api.github.com/users/chauhansaurabhb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chauhansaurabhb/subscriptions", "organizations_url": "https://api.github.com/users/chauhansaurabhb/orgs", "repos_url": "https://api.github.com/users/chauhansaurabhb/repos", "events_url": "https://api.github.com/users/chauhansaurabhb/events{/privacy}", "received_events_url": "https://api.github.com/users/chauhansaurabhb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-10T10:00:17Z", "updated_at": "2020-02-11T07:25:07Z", "closed_at": "2020-02-10T18:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for sharing this library.\r\n\r\nI am looking to use this library with reference to unsupervised learning. I have one curve (time ~ value) and I have only three columns in dataset i.e. `id, time, value` (here I have day wise sum of values i.e. aggregated values) and would like to use this library to extract features followed by clustering techniques.\r\n\r\nHowever, I can able to extract features but when I select optimal features using `features_filtered = select_features(extracted_features, y)` but how can I pass value of y? I don't have label column in my dataset.\r\n\r\nCould you please elaborate more on \"How to use tsfresh library for unsupervised learning?\"\r\n\r\nThanking you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/628", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/628/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/628/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/628", "id": 562052296, "node_id": "MDU6SXNzdWU1NjIwNTIyOTY=", "number": 628, "title": "How to perform forecasting not prediction using tsfresh?", "user": {"login": "emangy", "id": 56669965, "node_id": "MDQ6VXNlcjU2NjY5OTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/56669965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emangy", "html_url": "https://github.com/emangy", "followers_url": "https://api.github.com/users/emangy/followers", "following_url": "https://api.github.com/users/emangy/following{/other_user}", "gists_url": "https://api.github.com/users/emangy/gists{/gist_id}", "starred_url": "https://api.github.com/users/emangy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emangy/subscriptions", "organizations_url": "https://api.github.com/users/emangy/orgs", "repos_url": "https://api.github.com/users/emangy/repos", "events_url": "https://api.github.com/users/emangy/events{/privacy}", "received_events_url": "https://api.github.com/users/emangy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228432, "node_id": "MDU6TGFiZWw0NjkyMjg0MzI=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-08T17:32:58Z", "updated_at": "2020-02-09T19:17:22Z", "closed_at": "2020-02-09T19:07:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi .. Thank you so much for this very useful tutorial. However, this is a prediction model not forecasting the future, since the x_test provided is already extracting feature for the y_test that has to be there for the test beforehand. How can we tweak this to perform a future forecasting where we don't know the y_test ? and we only have the time stamp. \r\n\r\nThanks a lot. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/623", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/623/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/623/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/623", "id": 558614439, "node_id": "MDU6SXNzdWU1NTg2MTQ0Mzk=", "number": 623, "title": "Not compatible with pandas 1.0", "user": {"login": "rodrigorivera", "id": 101320, "node_id": "MDQ6VXNlcjEwMTMyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/101320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigorivera", "html_url": "https://github.com/rodrigorivera", "followers_url": "https://api.github.com/users/rodrigorivera/followers", "following_url": "https://api.github.com/users/rodrigorivera/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigorivera/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigorivera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigorivera/subscriptions", "organizations_url": "https://api.github.com/users/rodrigorivera/orgs", "repos_url": "https://api.github.com/users/rodrigorivera/repos", "events_url": "https://api.github.com/users/rodrigorivera/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigorivera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-01T23:25:13Z", "updated_at": "2020-02-04T21:42:24Z", "closed_at": "2020-02-04T21:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear tsfresh team,\r\n\r\nthe latest version of tsfresh is not compatible with pandas 1.0. In the release notes here:\r\nhttps://pandas.pydata.org/pandas-docs/version/1.0/whatsnew/v1.0.0.html#backwards-incompatible-api-changes\r\nOne can find \"Removed Index.contains, use key in index instead (GH30103)\"\r\n\r\nIn feature_extraction/extraction.py in the line 318, you have\r\nif result.columns.contains(\"value\"):\r\n\r\nAt the moment, ts-fresh is only compatible until pandas 0.25", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/622", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/622/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/622/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/622", "id": 554471450, "node_id": "MDU6SXNzdWU1NTQ0NzE0NTA=", "number": 622, "title": "How to use roll_time_series on sample robotic data set to extract features at each timestamp", "user": {"login": "flowersw", "id": 12040615, "node_id": "MDQ6VXNlcjEyMDQwNjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/12040615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowersw", "html_url": "https://github.com/flowersw", "followers_url": "https://api.github.com/users/flowersw/followers", "following_url": "https://api.github.com/users/flowersw/following{/other_user}", "gists_url": "https://api.github.com/users/flowersw/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowersw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowersw/subscriptions", "organizations_url": "https://api.github.com/users/flowersw/orgs", "repos_url": "https://api.github.com/users/flowersw/repos", "events_url": "https://api.github.com/users/flowersw/events{/privacy}", "received_events_url": "https://api.github.com/users/flowersw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-23T23:44:25Z", "updated_at": "2020-02-06T04:01:40Z", "closed_at": "2020-02-06T04:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oh no, you encountered a problem while using *tsfesh*.\r\n\r\nWe, the maintainers, are happy to help you. When opening an issue, please provide the following information to us:\r\n\r\n1. Your operating system\r\nMacOSX\r\n2. The version of *tsfresh* that you are using\r\n0.13.0\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\nVery similar to the robot data set described on the Quick Start page of documentation\r\n4. A minimal code snippet which reproduces the problem/bug\r\n5. Any reported errors or traceback\r\nDoes the tsfresh.utilities.dataframe_functions.roll_time_series() function expect each \"time\" element to be different? In the example provided at https://tsfresh.readthedocs.io/en/latest/text/forecasting.html, this is true. And it also would seem true, since the new ID's that are created are are based off of the timestamp. \r\n\r\nHow would you use tsfresh.utilities.dataframe_functions.roll_time_series() to create a set of features at each time stamp, using the robot dataset in quick start?\r\n\r\nMaybe I am missing something.\r\n\r\nThanks,\r\nWill\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/620", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/620/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/620/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/620", "id": 549486804, "node_id": "MDU6SXNzdWU1NDk0ODY4MDQ=", "number": 620, "title": "Import of tsfresh.extract_features breaks logger configuration", "user": {"login": "shakhat", "id": 2250646, "node_id": "MDQ6VXNlcjIyNTA2NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2250646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakhat", "html_url": "https://github.com/shakhat", "followers_url": "https://api.github.com/users/shakhat/followers", "following_url": "https://api.github.com/users/shakhat/following{/other_user}", "gists_url": "https://api.github.com/users/shakhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakhat/subscriptions", "organizations_url": "https://api.github.com/users/shakhat/orgs", "repos_url": "https://api.github.com/users/shakhat/repos", "events_url": "https://api.github.com/users/shakhat/events{/privacy}", "received_events_url": "https://api.github.com/users/shakhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-14T10:53:24Z", "updated_at": "2020-01-17T08:24:59Z", "closed_at": "2020-01-16T18:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Version:** \r\n``tsfresh==0.13.0``\r\n\r\n**OS:** \r\n```\r\n$ uname -a\r\nLinux desktop 4.15.0-74-generic #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n**Issue:** \r\nImport of tsfresh.extract_features configures root Python logger, as result it affects logging in the whole application. Ideally the library should not change logging configuration - it is responsibility of the application entry point (main thread). Probably the following code could be safely removed: https://github.com/blue-yonder/tsfresh/blob/v0.13.0/tsfresh/feature_extraction/extraction.py#L21-L27\r\n\r\n**Steps to reproduce:**\r\n_The code without import works as expected:_\r\n```\r\nimport sys\r\nimport logging\r\n\r\nLOG = logging.getLogger(__name__)\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig(stream=sys.stdout,\r\n                        level='INFO',\r\n                        format='%(asctime)s %(process)d %(levelname)s %(name)s %(message)s')\r\n    LOG.info('Log info')\r\n    LOG.error('Log error')\r\n```\r\n_Output:_\r\n```\r\n2020-01-14 11:43:29,277 29072 INFO __main__ Log info\r\n2020-01-14 11:43:29,277 29072 ERROR __main__ Log error\r\n```\r\n_The code with import produces wrong output:_\r\n```\r\nimport sys\r\nimport logging\r\n\r\nfrom tsfresh import extract_features\r\n\r\nLOG = logging.getLogger(__name__)\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig(stream=sys.stdout,\r\n                        level='INFO',\r\n                        format='%(asctime)s %(process)d %(levelname)s %(name)s %(message)s')\r\n    LOG.info('Log info')\r\n    LOG.error('Log error')\r\n```\r\n_Output:_\r\n```\r\nERROR:__main__:Log error\r\n```\r\nNote that configuration is not applied here since `logging.basicConfig` does not update root logger if it is already set. One of possible workarounds is to manually update root logger which is a bit hackish.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/619", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/619/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/619/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/619", "id": 546139191, "node_id": "MDU6SXNzdWU1NDYxMzkxOTE=", "number": 619, "title": "Can the feature list obtained with 'from_columns()' be directly used in extract_features()?", "user": {"login": "YiDuan1221", "id": 59597779, "node_id": "MDQ6VXNlcjU5NTk3Nzc5", "avatar_url": "https://avatars0.githubusercontent.com/u/59597779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YiDuan1221", "html_url": "https://github.com/YiDuan1221", "followers_url": "https://api.github.com/users/YiDuan1221/followers", "following_url": "https://api.github.com/users/YiDuan1221/following{/other_user}", "gists_url": "https://api.github.com/users/YiDuan1221/gists{/gist_id}", "starred_url": "https://api.github.com/users/YiDuan1221/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YiDuan1221/subscriptions", "organizations_url": "https://api.github.com/users/YiDuan1221/orgs", "repos_url": "https://api.github.com/users/YiDuan1221/repos", "events_url": "https://api.github.com/users/YiDuan1221/events{/privacy}", "received_events_url": "https://api.github.com/users/YiDuan1221/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T08:04:27Z", "updated_at": "2020-01-08T01:18:54Z", "closed_at": "2020-01-08T01:18:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code:\r\n\r\nfrom tsfresh import extract_features\r\nfrom tsfresh import select_features\r\nfrom tsfresh.utilities.dataframe_functions import impute\r\nfrom tsfresh.feature_extraction.settings import from_columns\r\n\r\n# extract features on labeled data\r\nextracted_features = extract_features(df, column_id=\"# id\")\r\n\r\n# select relevant features for new data prediction\r\ny = np.array(y)\r\nimpute(extracted_features)\r\nfeatures_filtered = select_features(extracted_features, y)\r\n\r\n# get the list of the filtered feature names\r\nfc_settings = from_columns(features_filtered)\r\n\r\n# read the new data\r\nnew_df = pd.read_csv('new_data')\r\n\r\n# extract filtered features on new data\r\npred_extracted_features = extract_features(new_df , column_id=\"# id\", default_fc_parameters=fc_settings)\r\n\r\nError:\r\nAttributeError: module 'tsfresh.feature_extraction.feature_calculators' has no attribute 'ch6'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/618", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/618/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/618/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/618", "id": 541977773, "node_id": "MDU6SXNzdWU1NDE5Nzc3NzM=", "number": 618, "title": "pyspark", "user": {"login": "anaveenan", "id": 4349189, "node_id": "MDQ6VXNlcjQzNDkxODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4349189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anaveenan", "html_url": "https://github.com/anaveenan", "followers_url": "https://api.github.com/users/anaveenan/followers", "following_url": "https://api.github.com/users/anaveenan/following{/other_user}", "gists_url": "https://api.github.com/users/anaveenan/gists{/gist_id}", "starred_url": "https://api.github.com/users/anaveenan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anaveenan/subscriptions", "organizations_url": "https://api.github.com/users/anaveenan/orgs", "repos_url": "https://api.github.com/users/anaveenan/repos", "events_url": "https://api.github.com/users/anaveenan/events{/privacy}", "received_events_url": "https://api.github.com/users/anaveenan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-24T03:44:34Z", "updated_at": "2019-12-28T18:40:18Z", "closed_at": "2019-12-28T17:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use this package in distributed mode with pyspark? Any code example will a helpful. Thanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/617", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/617/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/617/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/617", "id": 539118729, "node_id": "MDU6SXNzdWU1MzkxMTg3Mjk=", "number": 617, "title": "what's the use of make_forecasting_frame?", "user": {"login": "vivi11130704", "id": 7614915, "node_id": "MDQ6VXNlcjc2MTQ5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7614915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivi11130704", "html_url": "https://github.com/vivi11130704", "followers_url": "https://api.github.com/users/vivi11130704/followers", "following_url": "https://api.github.com/users/vivi11130704/following{/other_user}", "gists_url": "https://api.github.com/users/vivi11130704/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivi11130704/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivi11130704/subscriptions", "organizations_url": "https://api.github.com/users/vivi11130704/orgs", "repos_url": "https://api.github.com/users/vivi11130704/repos", "events_url": "https://api.github.com/users/vivi11130704/events{/privacy}", "received_events_url": "https://api.github.com/users/vivi11130704/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-17T14:55:54Z", "updated_at": "2019-12-17T16:49:07Z", "closed_at": "2019-12-17T16:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Your operating system: \r\nwin10\r\n2. The version of *tsfresh* that you are using: \r\n0.13.0\r\n\r\n### Question Summary ###\r\nMy understanding of creating df_shift from make_forecasting_frame is that the features can be extracted from the df_shift dataframe. However after looking at the extracted features, I realized the features are calculated directly from the raw dataframe without using df_shift at all. Can someone please explain the use of df_shift if it's not used for feature extraction?\r\n\r\n### Question in detail ###\r\n\r\nI'm working on a monthly revenue data for a commercial property. The goal is to use the past revenue to predict the future revenue. You can find my data [with this link](https://drive.google.com/file/d/1_4ejPljGAQouRLoNvfYtR5Glh1Ng12pr/view?usp=sharing). This data has 22 monthly data (from Jan 2018 - Oct 2019). Here is a quick screenshot of what it looks like:\r\n\r\n![image](https://user-images.githubusercontent.com/7614915/71004789-6c358080-20b0-11ea-82fd-95decf4ee1bb.png)\r\n\r\nI created a df_shift dataframe using the below code:\r\n`df_shift, y = make_forecasting_frame(df['revenue'], kind=\"price\", max_timeshift=6, rolling_direction=1)`\r\n\r\nThe output df_shft looks like this, which you can find [with this link](https://drive.google.com/open?id=1PJCK5v4jqJrVXY1KqWLekbXqYTCQhgfG)\r\n\r\n![image](https://user-images.githubusercontent.com/7614915/71005072-fbdb2f00-20b0-11ea-83a0-cd6330549eeb.png)\r\n\r\nUpon on this point, everything makes sense to me. Then I use this code to extract features:\r\n\r\n`X = extract_features(df_shift, column_id=\"id\", column_sort=\"time\", column_value=\"value\", n_jobs=0)`\r\n\r\nThe extracted features can be find [with this link](https://drive.google.com/open?id=1DCPFwXIiuAlkAsDDBLp0Q1RMIZZe-cEp). This feature df has 21 rows which matches the 22 months (minus the first month). Here is a quick screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/7614915/71005643-ffbb8100-20b1-11ea-9eb1-729573835372.png)\r\n\r\n**Question**: in feature screenshot id=3, the value_max is 269099. However looking at the df_shift screenshot id=3 (row 5-7), the value max is apparently 274875, which doesn't match. This means that the features are not extracted from df_shift corresponding windows. Rather, the feature is calculated from the adjacent two months from the original df. For instance, when id=3, value_max = 269099 is because it's comparing 3/1/2018 value with 2/1/2018 value (first screenshot, row 3-4). \r\n\r\nIf features are not extracted from df_shift, why we spend so much effort in creating this df_shift? where it gets used? \r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/616", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/616/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/616/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/616", "id": 532188107, "node_id": "MDU6SXNzdWU1MzIxODgxMDc=", "number": 616, "title": "fft_aggregated__aggtype_\"skew\" produces different results on Windows and Linux", "user": {"login": "apcarp", "id": 22100367, "node_id": "MDQ6VXNlcjIyMTAwMzY3", "avatar_url": "https://avatars0.githubusercontent.com/u/22100367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apcarp", "html_url": "https://github.com/apcarp", "followers_url": "https://api.github.com/users/apcarp/followers", "following_url": "https://api.github.com/users/apcarp/following{/other_user}", "gists_url": "https://api.github.com/users/apcarp/gists{/gist_id}", "starred_url": "https://api.github.com/users/apcarp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apcarp/subscriptions", "organizations_url": "https://api.github.com/users/apcarp/orgs", "repos_url": "https://api.github.com/users/apcarp/repos", "events_url": "https://api.github.com/users/apcarp/events{/privacy}", "received_events_url": "https://api.github.com/users/apcarp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-12-03T18:45:40Z", "updated_at": "2019-12-12T13:52:17Z", "closed_at": "2019-12-04T20:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Problem Summary\r\ntsfresh generates different values for fft_aggregated__aggtype_\"skew\" on Windows and Linux given the same data.  I have attached a zip file containing a test script and CSV files of different lengths.  They are the same data, just truncated at various lengths.  I only see the differences appear for the 4096 and 8192 length files in my limited testing.\r\n\r\nPlease note that I have also tested this on the same Linux system using Python 3.6.8 and seen similar behavior.\r\n\r\n## 1) OS Info\r\n**LINUX**\r\n```bash\r\n uname -a\r\nLinux <hostname> 3.10.0-1062.el7.x86_64 #1 SMP Thu Jul 18 20:25:13 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n```bash\r\ncat /etc/redhat-release\r\nRed Hat Enterprise Linux Workstation release 7.7 (Maipo)\r\n```\r\n\r\n```bash\r\npython3 --version\r\n Python 3.6.9\r\n```\r\n\r\n```bash\r\npip3 freeze\r\nattrs==19.3.0\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\nClick==7.0\r\ncloudpickle==1.2.2\r\ndask==2.8.1\r\ndistributed==2.8.1\r\nfuture==0.18.2\r\nHeapDict==1.0.1\r\nidna==2.8\r\nimportlib-metadata==1.1.0\r\njsonschema==3.2.0\r\nmore-itertools==8.0.0\r\nmsgpack==0.6.2\r\nnumpy==1.16.2\r\npandas==0.23.4\r\npatsy==0.5.1\r\npsutil==5.6.7\r\npyrsistent==0.15.6\r\npython-dateutil==2.8.1\r\npytz==2019.3\r\nPyYAML==5.1.2\r\nrequests==2.22.0\r\nscikit-learn==0.20.3\r\nscipy==1.3.3\r\nsix==1.13.0\r\nsortedcontainers==2.1.0\r\nstatsmodels==0.10.2\r\ntblib==1.5.0\r\ntoolz==0.10.0\r\ntornado==6.0.3\r\ntqdm==4.40.0\r\ntsfresh==0.12.0\r\nurllib3==1.25.7\r\nzict==1.0.0\r\nzipp==0.6.0\r\n```\r\n\r\n**WINDOWS**\r\n OS Name Microsoft Windows 10 Enterprise\r\nVersion 10.0.17763 Build 17763\r\nSystem Manufacturer Dell Inc.\r\nSystem Model Precision 7530\r\nSystem Type x64-based PC\r\nSystem SKU 0831\r\nProcessor Intel(R) Core(TM) i9-8950HK CPU @ 2.90GHz, 2904 Mhz, 6 Core(s), 12 Logical Processor(s)\r\nBIOS Version/Date Dell Inc. 1.8.2, 4/26/2019\r\nSMBIOS Version 3.1\r\n\r\n```powershell\r\npython --version\r\nPython 3.6.8\r\n```\r\n\r\n```powershell\r\npip3 freeze\r\nattrs==19.3.0\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\nClick==7.0\r\ncloudpickle==1.2.2\r\ndask==2.8.1\r\ndistributed==2.8.1\r\nfuture==0.18.2\r\nHeapDict==1.0.1\r\nidna==2.8\r\nimportlib-metadata==1.1.0\r\njsonschema==3.2.0\r\nmore-itertools==8.0.0\r\nmsgpack==0.6.2\r\nnumpy==1.16.2\r\npandas==0.23.4\r\npatsy==0.5.1\r\npsutil==5.6.7\r\npyrsistent==0.15.6\r\npython-dateutil==2.8.1\r\npytz==2019.3\r\nPyYAML==5.1.2\r\nrequests==2.22.0\r\nscikit-learn==0.20.3\r\nscipy==1.3.3\r\nsix==1.13.0\r\nsortedcontainers==2.1.0\r\nstatsmodels==0.10.2\r\ntblib==1.5.0\r\ntoolz==0.10.0\r\ntornado==6.0.3\r\ntqdm==4.40.0\r\ntsfresh==0.12.0\r\nurllib3==1.25.7\r\nzict==1.0.0\r\nzipp==0.6.0\r\n```\r\n\r\n## 2) tsfresh versions:\r\n0.12.0 (most testing)\r\n0.13.0 (also demonstrated behavior)\r\n\r\n## 3) data\r\nPlease see attached zip file for examples. These are a single time series ranging in length from 32 to 8192 points.  Only see differences for the 4196 and 8192 files.\r\n\r\n[tsfresh-test.zip](https://github.com/blue-yonder/tsfresh/files/3918045/tsfresh-test.zip)\r\n\r\n## 4) code\r\nPlease see attached zip file for code.  Basic snippet is this.\r\n```python\r\ndf = pd.read_csv(file)\r\next_settings = tsfresh.feature_extraction.settings.from_columns(['GMES__fft_aggregated__aggtype_\"skew\"'])\r\nfeatures = tsfresh.extract_features(df.astype(\"float64\"),\r\n                                            column_id=\"id\",\r\n                                            column_sort=\"Time\",\r\n                                            impute_function=tsfresh.utilities.dataframe_functions.impute,\r\n                                            disable_progressbar=True,\r\n                                            default_fc_parameters={},\r\n                                            kind_to_fc_parameters=ext_settings)\r\nprint(features)\r\n```\r\n\r\n[tsfresh-test.zip](https://github.com/blue-yonder/tsfresh/files/3918045/tsfresh-test.zip)\r\n\r\n## 5) errors or tracebacks\r\n**On Windows I get this data:**\r\n```\r\n...\r\ntsfresh_4096.csv 4096\r\nvariable  GMES__fft_aggregated__aggtype_\"skew\"\r\nid\r\n1.0                                   1.779761\r\ntsfresh_8192.csv 8192\r\nvariable  GMES__fft_aggregated__aggtype_\"skew\"\r\nid\r\n1.0                                  -1.217886\r\n```\r\n\r\n**On Linux I get this data:**\r\n```\r\n...\r\nvariable  GMES__fft_aggregated__aggtype_\"skew\"\r\nid                                            \r\n1.0                                  21.501061\r\ntsfresh_8192.csv 8192\r\nvariable  GMES__fft_aggregated__aggtype_\"skew\"\r\nid                                            \r\n1.0                                   3.042428\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/615", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/615/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/615/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/615", "id": 531219513, "node_id": "MDU6SXNzdWU1MzEyMTk1MTM=", "number": 615, "title": "number_crossing_m implementation", "user": {"login": "Armannas", "id": 6339503, "node_id": "MDQ6VXNlcjYzMzk1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6339503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armannas", "html_url": "https://github.com/Armannas", "followers_url": "https://api.github.com/users/Armannas/followers", "following_url": "https://api.github.com/users/Armannas/following{/other_user}", "gists_url": "https://api.github.com/users/Armannas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armannas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armannas/subscriptions", "organizations_url": "https://api.github.com/users/Armannas/orgs", "repos_url": "https://api.github.com/users/Armannas/repos", "events_url": "https://api.github.com/users/Armannas/events{/privacy}", "received_events_url": "https://api.github.com/users/Armannas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T15:55:18Z", "updated_at": "2019-12-03T20:10:44Z", "closed_at": "2019-12-03T20:09:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "tsfresh version: 0.13.0\r\nOS: Ubuntu 18.04.3 LTS\r\n\r\nWould it be faster/more elegant to use np.sum() to count m-crossings?\r\nnp.where() returns where the crossings occured, followed by the amount through the size property.\r\nIt seems faster to just count the number of crossings directly by summing without inspecting where it occured.\r\n\r\n```\r\nx = np.array([array([1, 5, 1, 7, 7, 1])\r\npositive = x > 2\r\n```\r\n```\r\n\r\nprint(np.where(np.diff(positive))[0].size)\r\n4\r\n```\r\nSame solution:\r\n```\r\nprint(np.sum(np.diff(positive)))\r\n4\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/614", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/614/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/614/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/614", "id": 530612327, "node_id": "MDU6SXNzdWU1MzA2MTIzMjc=", "number": 614, "title": "Out of Memmory while Feature Extraction", "user": {"login": "Infatum", "id": 6483272, "node_id": "MDQ6VXNlcjY0ODMyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6483272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Infatum", "html_url": "https://github.com/Infatum", "followers_url": "https://api.github.com/users/Infatum/followers", "following_url": "https://api.github.com/users/Infatum/following{/other_user}", "gists_url": "https://api.github.com/users/Infatum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Infatum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Infatum/subscriptions", "organizations_url": "https://api.github.com/users/Infatum/orgs", "repos_url": "https://api.github.com/users/Infatum/repos", "events_url": "https://api.github.com/users/Infatum/events{/privacy}", "received_events_url": "https://api.github.com/users/Infatum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T18:07:57Z", "updated_at": "2019-11-30T20:51:57Z", "closed_at": "2019-11-30T20:51:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've faced Memory Overflow with 376Gb Ram on the Google Cloud Computation Engine, while doing Feature Extraction on the 2 years of Time-Series Data Bitcoin prices. After the progress bar showed 100% it continued to eat memory, which resulted in Memory Overflow! Please, fix this behaviour, otherwise I will write about this issue on Towards Data Science\r\n![image](https://user-images.githubusercontent.com/6483272/69904239-eb3a7180-13ac-11ea-9dac-d5d2af724984.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/613", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/613/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/613/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/613", "id": 530611659, "node_id": "MDU6SXNzdWU1MzA2MTE2NTk=", "number": 613, "title": "struct.error: (Struct Overflow) while Feature Extraction", "user": {"login": "Infatum", "id": 6483272, "node_id": "MDQ6VXNlcjY0ODMyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6483272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Infatum", "html_url": "https://github.com/Infatum", "followers_url": "https://api.github.com/users/Infatum/followers", "following_url": "https://api.github.com/users/Infatum/following{/other_user}", "gists_url": "https://api.github.com/users/Infatum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Infatum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Infatum/subscriptions", "organizations_url": "https://api.github.com/users/Infatum/orgs", "repos_url": "https://api.github.com/users/Infatum/repos", "events_url": "https://api.github.com/users/Infatum/events{/privacy}", "received_events_url": "https://api.github.com/users/Infatum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-30T18:01:48Z", "updated_at": "2020-02-03T17:46:43Z", "closed_at": "2020-02-03T17:46:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature Extraction:   0%|                                                                                                              | 0/40 [00:00<?, ?it/s]\r\nProcess ForkPoolWorker-3:                                                         \r\nTraceback (most recent call last):                                                \r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 125, in worker           \r\n    put((job, i, result))                                                          \r\n  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 347, in put        \r\n    self._writer.send_bytes(obj)                                     \r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 200, in send_bytes\r\n    self._send_bytes(m[offset:offset + size])\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 393, in _send_bytes\r\n    header = struct.pack(\"!i\", n)                                              \r\nstruct.error: 'i' format requires -2147483648 <= number <= 2147483647  \r\n                                                                       \r\nDuring handling of the above exception, another exception occurred:               \r\n                                                                        \r\nTraceback (most recent call last):                                                 \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap\r\n    self.run()                                                       \r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 93, in run           \r\n    self._target(*self._args, **self._kwargs)                      \r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 130, in worker           \r\n    put((job, i, (False, wrapped)))\r\n  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 347, in put        \r\n    self._writer.send_bytes(obj)\r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 200, in send_bytes\r\n    self._send_bytes(m[offset:offset + size])                           \r\n  File \"/usr/lib/python3.6/multiprocessing/connection.py\", line 393, in _send_bytes\r\n    header = struct.pack(\"!i\", n)                                              \r\nstruct.error: 'i' format requires -2147483648 <= number <= 2147483647  \r\nProcess ForkPoolWorker-2:                                                         \r\nTraceback (most recent call last):                                                \r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 125, in worker           \r\n    put((job, i, result))                                                          \r\n  File \"/usr/lib/python3.6/multiprocessing/queues.py\", line 347, in put        \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/604", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/604/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/604/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/604", "id": 528792374, "node_id": "MDU6SXNzdWU1Mjg3OTIzNzQ=", "number": 604, "title": "MaybeEncodingError: Error sending result", "user": {"login": "florianhumblot", "id": 31630192, "node_id": "MDQ6VXNlcjMxNjMwMTky", "avatar_url": "https://avatars2.githubusercontent.com/u/31630192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianhumblot", "html_url": "https://github.com/florianhumblot", "followers_url": "https://api.github.com/users/florianhumblot/followers", "following_url": "https://api.github.com/users/florianhumblot/following{/other_user}", "gists_url": "https://api.github.com/users/florianhumblot/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianhumblot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianhumblot/subscriptions", "organizations_url": "https://api.github.com/users/florianhumblot/orgs", "repos_url": "https://api.github.com/users/florianhumblot/repos", "events_url": "https://api.github.com/users/florianhumblot/events{/privacy}", "received_events_url": "https://api.github.com/users/florianhumblot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T15:17:31Z", "updated_at": "2020-04-11T10:00:44Z", "closed_at": "2020-04-11T10:00:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: Win 10 64-bit build 1903\r\nTSFresh version: 0.12.0\r\nThe data: A Dataframe consisting of time series data, expanded by `tsfresh.utilities.dataframe_functions.roll_time_series` with a `max_timeshift` of 4.\r\nThis results in a dataframe with the following shape: `(1106660, 6)`\r\n\r\nWhen calling `tsfresh.extract_relevant_features` with the following parameters:\r\n```\r\nextract_relevant_features(\r\n          rolled, y, column_id='id', column_value='y1', column_sort='x',\r\n          chunksize=1)\r\n```\r\n\r\nI receive the following error:\r\n` MaybeEncodingError: Error sending result: '<multiprocessing.pool.ExceptionWithTraceback object at 0x03EF7670>'. Reason: 'PicklingError(\"Can't pickle <class 'MemoryError'>: it's not the same object as builtins.MemoryError\")' `\r\n\r\nWith the following stacktrace:\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------\r\nMaybeEncodingError                        Traceback (most recent call last)\r\n<ipython-input-19-ab006a0111f4> in <module>\r\n      7 rolled_features = extract_relevant_features(\r\n      8          rolled, y, column_id='id', column_value='y1', column_sort='x',\r\n----> 9          chunksize=1)\r\n     10 # rolled_features=pd.DataFrame(rolled_features)\r\n     11 print(rolled_features.shape)\r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\tsfresh\\convenience\\relevant_extraction.py in extract_relevant_features(timeseries_container, y, X, default_fc_parameters, kind_to_fc_parameters, column_id, column_sort, column_kind, column_value, show_warnings, disable_progressbar, profile, profiling_filename, profiling_sorting, test_for_binary_target_binary_feature, test_for_binary_target_real_feature, test_for_real_target_binary_feature, test_for_real_target_real_feature, fdr_level, hypotheses_independent, n_jobs, chunksize, ml_task)\r\n    162                              column_id=column_id, column_sort=column_sort,\r\n    163                              column_kind=column_kind, column_value=column_value,\r\n--> 164                              impute_function=impute)\r\n    165 \r\n    166     X_sel = select_features(X_ext, y,\r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py in extract_features(timeseries_container, default_fc_parameters, kind_to_fc_parameters, column_id, column_sort, column_kind, column_value, chunksize, n_jobs, show_warnings, disable_progressbar, impute_function, profile, profiling_filename, profiling_sorting, distributor)\r\n    176                                 default_fc_parameters=default_fc_parameters,\r\n    177                                 kind_to_fc_parameters=kind_to_fc_parameters,\r\n--> 178                                 distributor=distributor)\r\n    179 \r\n    180         # Impute the result if requested\r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py in _do_extraction(df, column_id, column_value, column_kind, default_fc_parameters, kind_to_fc_parameters, n_jobs, chunk_size, disable_progressbar, distributor)\r\n    321     result = distributor.map_reduce(_do_extraction_on_chunk, data=data_in_chunks,\r\n    322                                     chunk_size=chunk_size,\r\n--> 323                                     function_kwargs=kwargs)\r\n    324     distributor.close()\r\n    325 \r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\tsfresh\\utilities\\distribution.py in map_reduce(self, map_function, data, function_kwargs, chunk_size, data_length)\r\n    147             result = self.distribute(_function_with_partly_reduce, chunk_generator, map_kwargs),\r\n    148 \r\n--> 149         result = list(itertools.chain.from_iterable(result))\r\n    150 \r\n    151         return result\r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\tqdm\\std.py in __iter__(self)\r\n   1089             \"\"\"), fp_write=getattr(self.fp, 'write', sys.stderr.write))\r\n   1090 \r\n-> 1091         for obj in iterable:\r\n   1092             yield obj\r\n   1093             # Update and possibly print the progressbar.\r\n\r\nc:\\users\\fhumblot\\appdata\\local\\programs\\python\\python37-32\\lib\\multiprocessing\\pool.py in next(self, timeout)\r\n    746         if success:\r\n    747             return value\r\n--> 748         raise value\r\n    749 \r\n    750     __next__ = next                    # XXX\r\n\r\nMaybeEncodingError: Error sending result: '<multiprocessing.pool.ExceptionWithTraceback object at 0x03EF7670>'. Reason: 'PicklingError(\"Can't pickle <class 'MemoryError'>: it's not the same object as builtins.MemoryError\")'\r\n\r\n```\r\n\r\nI obviously have a MemoryError but it isn't reported like usual because of the multiprocessing I guess. \r\n\r\n(side note, isn't chunksize supposed to \"solve\" the memory issues by splitting the extraction and selection of features by series?) \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/603", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/603/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/603/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/603", "id": 528170764, "node_id": "MDU6SXNzdWU1MjgxNzA3NjQ=", "number": 603, "title": "extract_relevant_features in celery tasks", "user": {"login": "flamby", "id": 1496003, "node_id": "MDQ6VXNlcjE0OTYwMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1496003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flamby", "html_url": "https://github.com/flamby", "followers_url": "https://api.github.com/users/flamby/followers", "following_url": "https://api.github.com/users/flamby/following{/other_user}", "gists_url": "https://api.github.com/users/flamby/gists{/gist_id}", "starred_url": "https://api.github.com/users/flamby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flamby/subscriptions", "organizations_url": "https://api.github.com/users/flamby/orgs", "repos_url": "https://api.github.com/users/flamby/repos", "events_url": "https://api.github.com/users/flamby/events{/privacy}", "received_events_url": "https://api.github.com/users/flamby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-25T15:44:45Z", "updated_at": "2019-11-25T18:24:50Z", "closed_at": "2019-11-25T18:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen running `extract_relevant_features` inside a celery task, I get an error: `daemonic processes are not allowed to have children`.\r\n\r\nSo I followed recommandation of [this issue](https://github.com/blue-yonder/tsfresh/issues/458) by passing `n_jobs=0`. It's a little better as the function is running but eventually is killed like so: \r\n```\r\nlib/python3.7/site-packages/billiard/pool.py\", line 1267, in mark_as_worker_lost\r\n    human_status(exitcode)),\r\nbilliard.exceptions.WorkerLostError: Worker exited prematurely: signal 9 (SIGKILL).\r\n```\r\n\r\nIs it planned to support celery? Perhaps by using [billiard](https://github.com/celery/billiard) instead of the `multiprocessing` module, or even better by using [dask](https://github.com/dask/dask).\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/601", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/601/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/601/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/601", "id": 527145970, "node_id": "MDU6SXNzdWU1MjcxNDU5NzA=", "number": 601, "title": "Index of X and y must be identical if provided", "user": {"login": "AASHISHAG", "id": 45683843, "node_id": "MDQ6VXNlcjQ1NjgzODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/45683843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AASHISHAG", "html_url": "https://github.com/AASHISHAG", "followers_url": "https://api.github.com/users/AASHISHAG/followers", "following_url": "https://api.github.com/users/AASHISHAG/following{/other_user}", "gists_url": "https://api.github.com/users/AASHISHAG/gists{/gist_id}", "starred_url": "https://api.github.com/users/AASHISHAG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AASHISHAG/subscriptions", "organizations_url": "https://api.github.com/users/AASHISHAG/orgs", "repos_url": "https://api.github.com/users/AASHISHAG/repos", "events_url": "https://api.github.com/users/AASHISHAG/events{/privacy}", "received_events_url": "https://api.github.com/users/AASHISHAG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-22T11:36:16Z", "updated_at": "2020-04-11T08:02:05Z", "closed_at": "2020-04-11T08:02:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nFirst of all, congratulations and thank you for the great work. \r\n\r\nI am trying to use tsfresh to extract features on weather data.  I followed the documentation but got stuck with the error.\r\n\r\nOS: Ubuntu 16.04\r\nTsfresh: Latest\r\n\r\n\r\n```\r\nimport pandas as pd\r\nfrom tsfresh import select_features\r\nfrom tsfresh import extract_features\r\nfrom tsfresh.utilities.dataframe_functions import impute\r\n\r\ndf = pd.read_csv('pre_processed_data.csv')\r\ndf.head()\r\ndf_X = df.iloc[:,0:15]\r\ndf_y = df.iloc[:,15]\r\n\r\nextracted_features = extract_features(df_X, column_id=\"id\")\r\nimpute(extracted_features)\r\nfeatures_filtered = select_features(extracted_features, df_y)\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"agarwal/python-environments/sah/lib/python3.5/site-packages/tsfresh/feature_selection/selection.py\", line 140, in select_features\r\n    raise ValueError(\"Index of X and y must be identical if provided\")\r\nValueError: Index of X and y must be identical if provided\r\n\r\n\r\n>>> extracted_features.shape\r\n(1999, 11116)\r\n>>> df_X.shape\r\n(1999, 15)\r\n```\r\n\r\ndata: https://github.com/AASHISHAG/time-series-classification/blob/master/pre_processed_data.csv\r\n\r\n\r\nThe number of rows in my X (features) and Y (class) are equal. Am I making some mistake? Please advise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/600", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/600/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/600/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/600", "id": 527093490, "node_id": "MDU6SXNzdWU1MjcwOTM0OTA=", "number": 600, "title": "How do extracted features and regression make predictions?", "user": {"login": "rhagan09", "id": 48289810, "node_id": "MDQ6VXNlcjQ4Mjg5ODEw", "avatar_url": "https://avatars2.githubusercontent.com/u/48289810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhagan09", "html_url": "https://github.com/rhagan09", "followers_url": "https://api.github.com/users/rhagan09/followers", "following_url": "https://api.github.com/users/rhagan09/following{/other_user}", "gists_url": "https://api.github.com/users/rhagan09/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhagan09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhagan09/subscriptions", "organizations_url": "https://api.github.com/users/rhagan09/orgs", "repos_url": "https://api.github.com/users/rhagan09/repos", "events_url": "https://api.github.com/users/rhagan09/events{/privacy}", "received_events_url": "https://api.github.com/users/rhagan09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-22T09:47:20Z", "updated_at": "2019-11-23T16:24:57Z", "closed_at": "2019-11-23T16:24:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI was wondering if someone could explain exactly how the extracted features from a time series are used with regression models (i.e. AdaBoost Regressor) to make predictions of the time series?\r\n\r\nI have read the documentation and can't seem to find an exact answer on how the predictions are actually made. \r\n\r\nMany thanks, \r\nRachael. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/598", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/598/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/598/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/598", "id": 525248417, "node_id": "MDU6SXNzdWU1MjUyNDg0MTc=", "number": 598, "title": "the install process is globally installing a \"tests\" module (using version 0.12)", "user": {"login": "thehcma", "id": 13666364, "node_id": "MDQ6VXNlcjEzNjY2MzY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13666364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehcma", "html_url": "https://github.com/thehcma", "followers_url": "https://api.github.com/users/thehcma/followers", "following_url": "https://api.github.com/users/thehcma/following{/other_user}", "gists_url": "https://api.github.com/users/thehcma/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehcma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehcma/subscriptions", "organizations_url": "https://api.github.com/users/thehcma/orgs", "repos_url": "https://api.github.com/users/thehcma/repos", "events_url": "https://api.github.com/users/thehcma/events{/privacy}", "received_events_url": "https://api.github.com/users/thehcma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T20:30:15Z", "updated_at": "2019-11-19T21:07:12Z", "closed_at": "2019-11-19T21:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oh no, you encountered a problem while using *tsfesh*.\r\n\r\nWe, the maintainers, are happy to help you. When opening an issue, please provide the following information to us:\r\n\r\n1. Your operating system\r\n\r\nUbuntu 18\r\n\r\n2. The version of *tsfresh* that you are using\r\n\r\n0.12\r\n\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\n4. A minimal code snippet which reproduces the problem/bug\r\n5. Any reported errors or traceback\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)\r\n\r\nQuestion 3-5 don't apply as this is an installation issue.\r\n\r\nThis version is globally installing a ``tests`` module, thus polluting the global namespace of modules with its own tests.\r\n\r\nOnce tsfresh is installed, we find the following under ``.../lib/python3.7/site-packages/tests``:\r\n\r\n```\r\n\u251c\u2500\u2500 fixtures.py\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 integrations\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 examples\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_driftbif_simulation.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_har_dataset.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_robot_execution_failures.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_driftbif_simulation.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_har_dataset.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_robot_execution_failures.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_full_pipeline.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_notebooks.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_relevant_feature_extraction.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 test_full_pipeline.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 test_notebooks.py\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test_relevant_feature_extraction.py\r\n\u251c\u2500\u2500 __pycache__\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fixtures.cpython-37.pyc\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.cpython-37.pyc\r\n\u2514\u2500\u2500 units\r\n    \u251c\u2500\u2500 feature_extraction\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_extraction.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_calculations.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_settings.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_extraction.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_calculations.py\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_settings.py\r\n    \u251c\u2500\u2500 feature_selection\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_benjamini_hochberg_test.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_checks.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_significance.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_relevance.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_selection.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_significance_tests.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_benjamini_hochberg_test.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_checks.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_significance.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_relevance.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_selection.py\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_significance_tests.py\r\n    \u251c\u2500\u2500 __init__.py\r\n    \u251c\u2500\u2500 __pycache__\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.cpython-37.pyc\r\n    \u251c\u2500\u2500 scripts\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_run_tsfresh.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_run_tsfresh.py\r\n    \u251c\u2500\u2500 transformers\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __pycache__\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_augmenter.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_selector.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_per_column_imputer.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_relevant_feature_augmenter.cpython-37.pyc\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_augmenter.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_feature_selector.py\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_per_column_imputer.py\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_relevant_feature_augmenter.py\r\n    \u2514\u2500\u2500 utilities\r\n        \u251c\u2500\u2500 __init__.py\r\n        \u251c\u2500\u2500 __pycache__\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.cpython-37.pyc\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_dataframe_functions.cpython-37.pyc\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 test_distribution.cpython-37.pyc\r\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_string_manipilations.cpython-37.pyc\r\n        \u251c\u2500\u2500 test_dataframe_functions.py\r\n        \u251c\u2500\u2500 test_distribution.py\r\n        \u2514\u2500\u2500 test_string_manipilations.py\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/597", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/597/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/597/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/597", "id": 525094160, "node_id": "MDU6SXNzdWU1MjUwOTQxNjA=", "number": 597, "title": "On DASK, extract_features raises ValueError: You have NaN values in your id column.", "user": {"login": "LutzFassl", "id": 37546799, "node_id": "MDQ6VXNlcjM3NTQ2Nzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/37546799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LutzFassl", "html_url": "https://github.com/LutzFassl", "followers_url": "https://api.github.com/users/LutzFassl/followers", "following_url": "https://api.github.com/users/LutzFassl/following{/other_user}", "gists_url": "https://api.github.com/users/LutzFassl/gists{/gist_id}", "starred_url": "https://api.github.com/users/LutzFassl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LutzFassl/subscriptions", "organizations_url": "https://api.github.com/users/LutzFassl/orgs", "repos_url": "https://api.github.com/users/LutzFassl/repos", "events_url": "https://api.github.com/users/LutzFassl/events{/privacy}", "received_events_url": "https://api.github.com/users/LutzFassl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-19T15:47:02Z", "updated_at": "2020-02-13T20:19:06Z", "closed_at": "2020-02-13T20:19:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all!\r\n\r\nI got a strange error when using DASK:\r\n`ValueError: You have NaN values in your id column.`\r\n\r\n\r\nOS: Windows 10, 64bit\r\ntsfresh0.12.0\r\n\r\n**data:** \r\n- dask dataframe consisting of 13 flat pandas dataframes in parquet format\r\n- Columns: Index(['DateTime', 'GunVoltage', 'Run'], dtype='object')\r\nDtypes:\r\n- DateTime      datetime64[ns]\r\n- GunVoltage           float64\r\n- Run                   object\r\n\r\nData content\r\n- Run column has just strings like \"19B0365\"\r\n- GunVoltage has floats between 0-60\r\n- Datetime is a date+time in ms notation (that was cut down from us notation when saved to parquet)\r\n\r\n**Code:**\r\n```\r\nimport dask.dataframe as dd\r\ndf = dd.read_parquet(\"dask_df/*.parquet\", engine='pyarrow')\r\n\r\n\r\nfrom tsfresh.feature_extraction import extract_features\r\nfrom tsfresh.utilities.distribution import LocalDaskDistributor\r\nDistributor = LocalDaskDistributor(n_workers=2)\r\nX = extract_features(timeseries_container=df,\r\n                     column_id=\"Run\",\r\n                     column_sort=\"DateTime\",\r\n                     column_value=\"GunVoltage\",\r\n                     distributor=Distributor)\r\n```\r\n\r\nThe error raises in\r\n```\r\ndataframe_functions.py in _normalize_input_to_internal_representation\r\nif timeseries_container[column_id].isnull().any():\r\n```\r\n\r\nBut that's a bit strange, because when I try to validate this I get a different result:\r\n`df[\"Run\"].isnull().any().compute()`\r\nresults in **False**\r\n\r\nI confirmed the same is running fine when using one pandas df instead of the DASK df.\r\nAlso the dask df seems fine, I can run computations on it like df[\"GunVoltage\"].mean().compute()\r\nThe ddf is very small at the moment for testing (no problem with size), only 3200 rows.\r\nCan anyone reproduce the error or please help me with this problem?\r\nIs it possible that the code handles the df like it's a pandas df and not a dask df, which might explain why it sees no values?\r\n\r\nHere is the full error log:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-44-aa2dcf87f2e2> in <module>\r\n     10                      column_sort=\"DateTime\",\r\n     11                      column_value=\"GunVoltage\",\r\n---> 12                      distributor=Distributor)\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\p36NN\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py in extract_features(timeseries_container, default_fc_parameters, kind_to_fc_parameters, column_id, column_sort, column_kind, column_value, chunksize, n_jobs, show_warnings, disable_progressbar, impute_function, profile, profiling_filename, profiling_sorting, distributor)\r\n    152             column_id=column_id, column_kind=column_kind,\r\n    153             column_sort=column_sort,\r\n--> 154             column_value=column_value)\r\n    155     # Use the standard setting if the user did not supply ones himself.\r\n    156     if default_fc_parameters is None and kind_to_fc_parameters is None:\r\n\r\nC:\\ProgramData\\Anaconda3\\envs\\p36NN\\lib\\site-packages\\tsfresh\\utilities\\dataframe_functions.py in _normalize_input_to_internal_representation(timeseries_container, column_id, column_sort, column_kind, column_value)\r\n    293 \r\n    294     if timeseries_container[column_id].isnull().any():\r\n--> 295         raise ValueError(\"You have NaN values in your id column.\")\r\n    296 \r\n    297     # Check sort column\r\n\r\nValueError: You have NaN values in your id column.\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/596", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/596/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/596/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/596", "id": 524745724, "node_id": "MDU6SXNzdWU1MjQ3NDU3MjQ=", "number": 596, "title": "tsfresh never passes 0% when there are around 67+ rows per ID. ", "user": {"login": "CampbellPryor", "id": 10106299, "node_id": "MDQ6VXNlcjEwMTA2Mjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/10106299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CampbellPryor", "html_url": "https://github.com/CampbellPryor", "followers_url": "https://api.github.com/users/CampbellPryor/followers", "following_url": "https://api.github.com/users/CampbellPryor/following{/other_user}", "gists_url": "https://api.github.com/users/CampbellPryor/gists{/gist_id}", "starred_url": "https://api.github.com/users/CampbellPryor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CampbellPryor/subscriptions", "organizations_url": "https://api.github.com/users/CampbellPryor/orgs", "repos_url": "https://api.github.com/users/CampbellPryor/repos", "events_url": "https://api.github.com/users/CampbellPryor/events{/privacy}", "received_events_url": "https://api.github.com/users/CampbellPryor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-19T03:11:42Z", "updated_at": "2019-11-20T20:04:35Z", "closed_at": "2019-11-20T20:04:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Your operating system\r\nUbuntu 16.04.6\r\n2. The version of *tsfresh* that you are using\r\n0.12.0\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\n\r\nDataframe with 3 columns (id, datetime, value)\r\n```\r\n<class 'pandas.core.frame.DataFrame'>\r\nRangeIndex: 87 entries, 0 to 86\r\nData columns (total 4 columns):\r\nindex       87 non-null int64\r\nid          87 non-null int64\r\ndatetime    87 non-null datetime64[ns]\r\nvalue       87 non-null float32\r\ndtypes: datetime64[ns](1), float32(1), int64(2)\r\nmemory usage: 2.5 KB\r\n```\r\n\r\n4. A minimal code snippet which reproduces the problem/bug\r\n```\r\nimport numpy as np\r\nfrom tsfresh import extract_features\r\nfrom tsfresh.feature_extraction import EfficientFCParameters\r\n\r\na = pd.DataFrame({'id': np.repeat(1,100), 'datetime': pd.to_datetime(np.arange(100)*10e13), 'value': np.random.rand(100)})\r\na = a.head(67)\r\nb = extract_features(a, column_id='id', column_sort='datetime', default_fc_parameters=EfficientFCParameters())\r\n```\r\n\r\nThe feature extraction successfully completes in <5 seconds, if I instead only have 65 rows:\r\n```\r\na = a.head(65)\r\nb = extract_features(a, column_id='id', column_sort='datetime', default_fc_parameters=EfficientFCParameters())\r\n```\r\n\r\nThe feature extraction also successfully completes when I have multiple IDs with 65 rows per group:\r\n```\r\na = pd.DataFrame({'id': np.repeat([1,2],100), 'datetime': pd.to_datetime(np.arange(200)*10e13), 'value': np.random.rand(200)})\r\na = a.groupby('id').head(65)\r\nb = extract_features(a, column_id='id', column_sort='datetime', default_fc_parameters=EfficientFCParameters())\r\n```\r\n\r\n5. Any reported errors or traceback\r\nNo. The code simply stalls with `Feature Extraction:   0%|          | 0/2 [00:00<?, ?it/s]` indefinitely. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/595", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/595/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/595/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/595", "id": 524630612, "node_id": "MDU6SXNzdWU1MjQ2MzA2MTI=", "number": 595, "title": "Optimize travis build", "user": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-18T21:29:08Z", "updated_at": "2019-11-29T20:57:08Z", "closed_at": "2019-11-29T20:57:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I think our .travis file has grown a bit historically :-)\r\n\r\nOnce python 2 support is dropped I think it can be cleaned up a bit. Also I think there should be a better way to test different dependency versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/585", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/585/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/585/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/585", "id": 522423083, "node_id": "MDU6SXNzdWU1MjI0MjMwODM=", "number": 585, "title": "Missing terms on C3 linearity check inplementation", "user": {"login": "eduardojlbatista", "id": 52418194, "node_id": "MDQ6VXNlcjUyNDE4MTk0", "avatar_url": "https://avatars1.githubusercontent.com/u/52418194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduardojlbatista", "html_url": "https://github.com/eduardojlbatista", "followers_url": "https://api.github.com/users/eduardojlbatista/followers", "following_url": "https://api.github.com/users/eduardojlbatista/following{/other_user}", "gists_url": "https://api.github.com/users/eduardojlbatista/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduardojlbatista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduardojlbatista/subscriptions", "organizations_url": "https://api.github.com/users/eduardojlbatista/orgs", "repos_url": "https://api.github.com/users/eduardojlbatista/repos", "events_url": "https://api.github.com/users/eduardojlbatista/events{/privacy}", "received_events_url": "https://api.github.com/users/eduardojlbatista/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T19:26:10Z", "updated_at": "2019-11-28T17:47:06Z", "closed_at": "2019-11-28T17:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day sir. I've been testing your library for feature selection and have been excited with the ideas presented. However, while scanning through the docummentation of the C3 feature calculator I noticed an error on the algorythm. While you present it as a mean of the lag operator in the form of \"E[L^2(X)^2*L(X)*X]\", while coding there's a missing square on the formulation. I attached some examples I tried to check if I wasn't mistake. Hope it helps! Thank you very much for your hard work!\r\n\r\n1. Windows\r\n2. Tsfresh version 0.12.0\r\n3. x = pd.Series([1, 1, 6, 9, 5, 4, 1, 2])\r\n4. \r\nlag = 2\r\nnp.mean((_roll(x, 2 * -lag) * _roll(x, -lag) * x)[0:(n - 2 * lag)])\r\nnp.mean((x**2) * x.shift(periods=lag) * x.shift(periods = 2*lag))\r\n\r\n5. From the formulation I was expecting that, for a simple example like the series t, the resulting value would be 117 but, instead got 42. I compared it with my own implementation of the formula, which I thought was somewhat clearer. Hope you can check it and, if it's wrong, fix it. \r\n\r\nThank you very much!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/581", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/581/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/581/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/581", "id": 521228917, "node_id": "MDU6SXNzdWU1MjEyMjg5MTc=", "number": 581, "title": "module 'pandas.compat' has no attribute 'string_types' ", "user": {"login": "slivka83", "id": 8715000, "node_id": "MDQ6VXNlcjg3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slivka83", "html_url": "https://github.com/slivka83", "followers_url": "https://api.github.com/users/slivka83/followers", "following_url": "https://api.github.com/users/slivka83/following{/other_user}", "gists_url": "https://api.github.com/users/slivka83/gists{/gist_id}", "starred_url": "https://api.github.com/users/slivka83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slivka83/subscriptions", "organizations_url": "https://api.github.com/users/slivka83/orgs", "repos_url": "https://api.github.com/users/slivka83/repos", "events_url": "https://api.github.com/users/slivka83/events{/privacy}", "received_events_url": "https://api.github.com/users/slivka83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-11T22:45:16Z", "updated_at": "2019-11-17T16:40:43Z", "closed_at": "2019-11-17T16:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. win10\r\n2. Pandas 0.23.4, tsfresh 0.12.0\r\n4. Code:\r\n```\r\nfrom tsfresh.examples.robot_execution_failures import download_robot_execution_failures, load_robot_execution_failures\r\nfrom tsfresh import extract_features\r\n\r\ndownload_robot_execution_failures()\r\ntimeseries, y = load_robot_execution_failures()\r\nextracted_features = extract_features(timeseries, column_id=\"id\", column_sort=\"time\")\r\n```\r\n5. Error:\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-44-4c1885da9e56> in <module>\r\n----> 1 extracted_features = extract_features(d, column_id='id', column_sort='time')\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\tsfresh\\feature_extraction\\extraction.py in extract_features(timeseries_container, default_fc_parameters, kind_to_fc_parameters, column_id, column_sort, column_kind, column_value, chunksize, n_jobs, show_warnings, disable_progressbar, impute_function, profile, profiling_filename, profiling_sorting, distributor)\r\n    176                                 default_fc_parameters=default_fc_parameters,\r\n    177                                 kind_to_fc_parameters=kind_to_fc_parameters,\r\n--> 178                                 distributor=distributor)\r\n    179 \r\n    180         # Impute the result if requested\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\tsfresh\\feature_extraction\\extraction.py in _do_extraction(df, column_id, column_value, column_kind, default_fc_parameters, kind_to_fc_parameters, n_jobs, chunk_size, disable_progressbar, distributor)\r\n    302     \"\"\"\r\n    303 \r\n--> 304     data_in_chunks = generate_data_chunk_format(df, column_id, column_kind, column_value)\r\n    305 \r\n    306     if distributor is None:\r\n\r\n~\\AppData\\Roaming\\Python\\Python37\\site-packages\\tsfresh\\feature_extraction\\extraction.py in generate_data_chunk_format(df, column_id, column_kind, column_value)\r\n    234     MAX_VALUES_GROUPBY = 2147483647\r\n    235 \r\n--> 236     if df[[column_id, column_kind]].nunique().prod() >= MAX_VALUES_GROUPBY:\r\n    237         _logger.error(\r\n    238             \"The time series container has {} different ids and {} different kind of time series, in total {} possible combinations. \"\r\n\r\nc:\\python\\lib\\site-packages\\pandas\\core\\frame.py in nunique(self, axis, dropna)\r\n\r\nc:\\python\\lib\\site-packages\\pandas\\core\\frame.py in apply(self, func, axis, broadcast, raw, reduce, result_type, args, **kwds)\r\n   6926             result = f(values)\r\n   6927 \r\n-> 6928         if hasattr(result, 'dtype') and is_object_dtype(result.dtype):\r\n   6929             try:\r\n   6930                 if filter_type is None or filter_type == 'numeric':\r\n\r\nc:\\python\\lib\\site-packages\\pandas\\core\\apply.py in get_result(self)\r\n    316                                       *self.args, **self.kwds)\r\n    317 \r\n--> 318         return super(FrameRowApply, self).get_result()\r\n    319 \r\n    320     def apply_broadcast(self):\r\n\r\nc:\\python\\lib\\site-packages\\pandas\\core\\apply.py in get_result(self)\r\n    111 \r\n    112         # string dispatch\r\n--> 113         if isinstance(self.f, compat.string_types):\r\n    114             # Support for `frame.transform('method')`\r\n    115             # Some methods (shift, etc.) require the axis argument, others\r\n\r\nAttributeError: module 'pandas.compat' has no attribute 'string_types'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/580", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/580/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/580/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/580", "id": 518704431, "node_id": "MDU6SXNzdWU1MTg3MDQ0MzE=", "number": 580, "title": "Use tqdm for Jupyter Notebooks", "user": {"login": "anderl80", "id": 23196828, "node_id": "MDQ6VXNlcjIzMTk2ODI4", "avatar_url": "https://avatars1.githubusercontent.com/u/23196828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderl80", "html_url": "https://github.com/anderl80", "followers_url": "https://api.github.com/users/anderl80/followers", "following_url": "https://api.github.com/users/anderl80/following{/other_user}", "gists_url": "https://api.github.com/users/anderl80/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderl80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderl80/subscriptions", "organizations_url": "https://api.github.com/users/anderl80/orgs", "repos_url": "https://api.github.com/users/anderl80/repos", "events_url": "https://api.github.com/users/anderl80/events{/privacy}", "received_events_url": "https://api.github.com/users/anderl80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-11-06T20:05:58Z", "updated_at": "2020-04-20T17:56:44Z", "closed_at": "2020-04-17T17:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using tsfresh in Jupyter Notebook, output from tqdm results bar is not overwriting itself but creating a line for every change in percentage. Can we somehow build a switch for using tqdm_notebook?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/579", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/579/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/579/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/579", "id": 513274114, "node_id": "MDU6SXNzdWU1MTMyNzQxMTQ=", "number": 579, "title": "Does tsfresh need new maintainer(s)?", "user": {"login": "Froskekongen", "id": 4319052, "node_id": "MDQ6VXNlcjQzMTkwNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Froskekongen", "html_url": "https://github.com/Froskekongen", "followers_url": "https://api.github.com/users/Froskekongen/followers", "following_url": "https://api.github.com/users/Froskekongen/following{/other_user}", "gists_url": "https://api.github.com/users/Froskekongen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Froskekongen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Froskekongen/subscriptions", "organizations_url": "https://api.github.com/users/Froskekongen/orgs", "repos_url": "https://api.github.com/users/Froskekongen/repos", "events_url": "https://api.github.com/users/Froskekongen/events{/privacy}", "received_events_url": "https://api.github.com/users/Froskekongen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-28T12:28:41Z", "updated_at": "2019-11-17T16:43:22Z", "closed_at": "2019-11-17T07:15:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The maintainer seems to be inactive for the moment. Is this due to this news (https://now.jda.com/blueyonder)? In any case, it would be sad for tsfresh to grow stale. It would be nice with some information on this matter (:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/577", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/577/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/577/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/577", "id": 509776522, "node_id": "MDU6SXNzdWU1MDk3NzY1MjI=", "number": 577, "title": "Off-by-one error in longest strike features", "user": {"login": "blu3r4y", "id": 10400532, "node_id": "MDQ6VXNlcjEwNDAwNTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/10400532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blu3r4y", "html_url": "https://github.com/blu3r4y", "followers_url": "https://api.github.com/users/blu3r4y/followers", "following_url": "https://api.github.com/users/blu3r4y/following{/other_user}", "gists_url": "https://api.github.com/users/blu3r4y/gists{/gist_id}", "starred_url": "https://api.github.com/users/blu3r4y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blu3r4y/subscriptions", "organizations_url": "https://api.github.com/users/blu3r4y/orgs", "repos_url": "https://api.github.com/users/blu3r4y/repos", "events_url": "https://api.github.com/users/blu3r4y/events{/privacy}", "received_events_url": "https://api.github.com/users/blu3r4y/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-21T07:18:34Z", "updated_at": "2019-10-31T22:50:17Z", "closed_at": "2019-10-31T22:50:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The two features `longest_strike_below_mean` and `longest_strike_above_mean` are implemented in a \"less-than\" and \"greater-than\" fashion, which yields incorrect results.\r\n\r\nHere is a MWE where \u00b5 = 3 and the longest strike below and above is 2 - `tsfresh` yields 3.\r\n\r\n```\r\nassert fc.longest_strike_below_mean([1, 2, 3, 4, 5]) == 2\r\nassert fc.longest_strike_above_mean([1, 2, 3, 4, 5]) == 2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/575", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/575/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/575/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/575", "id": 507504576, "node_id": "MDU6SXNzdWU1MDc1MDQ1NzY=", "number": 575, "title": "Dask no longer supports mapping over Iterators or Queues", "user": {"login": "tomzx", "id": 188960, "node_id": "MDQ6VXNlcjE4ODk2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/188960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomzx", "html_url": "https://github.com/tomzx", "followers_url": "https://api.github.com/users/tomzx/followers", "following_url": "https://api.github.com/users/tomzx/following{/other_user}", "gists_url": "https://api.github.com/users/tomzx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomzx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomzx/subscriptions", "organizations_url": "https://api.github.com/users/tomzx/orgs", "repos_url": "https://api.github.com/users/tomzx/repos", "events_url": "https://api.github.com/users/tomzx/events{/privacy}", "received_events_url": "https://api.github.com/users/tomzx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-15T21:59:17Z", "updated_at": "2019-12-03T20:12:01Z", "closed_at": "2019-12-03T20:12:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Your operating system: Mac OS X 10.14.5\r\n2. The version of *tsfresh* that you are using: master (c3d35c42c799d1f36a1aca1d90ec0ab6450ce264)\r\n3. The data on which the problem occurred: (irrelevant) https://storage.googleapis.com/tensorflow/tf-keras-datasets/jena_climate_2009_2016.csv.zip\r\n4. A minimal code snippet which reproduces the problem/bug (using `distributed==2.5.2`)\r\n```python\r\nfrom dask.distributed import Client\r\nimport pandas as pd\r\nfrom tsfresh import extract_features\r\nfrom tsfresh.feature_extraction.settings import EfficientFCParameters\r\nfrom tsfresh.utilities.distribution import ClusterDaskDistributor\r\n\r\ndf = pd.read_csv(\"jena_climate_2009_2016.csv\", parse_dates=[\"Date Time\"])\r\ndf_sub = df.head(1000)\r\ndf_sub[\"id\"] = 1\r\n\r\nclient = Client()\r\n\r\ndistributor = ClusterDaskDistributor(address=\"127.0.0.1:8786\")\r\n\r\nextracted_features = extract_features(df, column_id=\"id\", column_sort=\"Date Time\", default_fc_parameters=EfficientFCParameters(), distributor=distributor)\r\n```\r\n\r\n\r\n5. Any reported errors or traceback\r\n```\r\n~/repos/git/tsfresh/tsfresh/feature_extraction/extraction.py in extract_features(timeseries_container, default_fc_parameters, kind_to_fc_parameters, column_id, column_sort, column_kind, column_value, chunksize, n_jobs, show_warnings, disable_progressbar, impute_function, profile, profiling_filename, profiling_sorting, distributor)\r\n    176                                 default_fc_parameters=default_fc_parameters,\r\n    177                                 kind_to_fc_parameters=kind_to_fc_parameters,\r\n--> 178                                 distributor=distributor)\r\n    179 \r\n    180         # Impute the result if requested\r\n\r\n~/repos/git/tsfresh/tsfresh/feature_extraction/extraction.py in _do_extraction(df, column_id, column_value, column_kind, default_fc_parameters, kind_to_fc_parameters, n_jobs, chunk_size, disable_progressbar, distributor)\r\n    321     result = distributor.map_reduce(_do_extraction_on_chunk, data=data_in_chunks,\r\n    322                                     chunk_size=chunk_size,\r\n--> 323                                     function_kwargs=kwargs)\r\n    324     distributor.close()\r\n    325 \r\n\r\n~/repos/git/tsfresh/tsfresh/utilities/distribution.py in map_reduce(self, map_function, data, function_kwargs, chunk_size, data_length)\r\n    145                           desc=self.progressbar_title, disable=self.disable_progressbar)\r\n    146         else:\r\n--> 147             result = self.distribute(_function_with_partly_reduce, chunk_generator, map_kwargs),\r\n    148 \r\n    149         result = list(itertools.chain.from_iterable(result))\r\n\r\n~/repos/git/tsfresh/tsfresh/utilities/distribution.py in distribute(self, func, partitioned_chunks, kwargs)\r\n    321         \"\"\"\r\n    322 \r\n--> 323         result = self.client.gather(self.client.map(partial(func, **kwargs), partitioned_chunks))\r\n    324         return [item for sublist in result for item in sublist]\r\n    325 \r\n\r\n~/Library/Caches/pypoetry/virtualenvs/ts-py3.7/lib/python3.7/site-packages/distributed/client.py in map(self, func, key, workers, retries, resources, priority, allow_other_workers, fifo_timeout, actor, actors, pure, *iterables, **kwargs)\r\n   1553         ):\r\n   1554             raise TypeError(\r\n-> 1555                 \"Dask no longer supports mapping over Iterators or Queues.\"\r\n   1556                 \"Consider using a normal for loop and Client.submit\"\r\n   1557             )\r\n\r\nTypeError: Dask no longer supports mapping over Iterators or Queues.Consider using a normal for loop and Client.submit\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/573", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/573/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/573/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/573", "id": 500774817, "node_id": "MDU6SXNzdWU1MDA3NzQ4MTc=", "number": 573, "title": "Forecasting X values ahead", "user": {"login": "rhagan09", "id": 48289810, "node_id": "MDQ6VXNlcjQ4Mjg5ODEw", "avatar_url": "https://avatars2.githubusercontent.com/u/48289810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhagan09", "html_url": "https://github.com/rhagan09", "followers_url": "https://api.github.com/users/rhagan09/followers", "following_url": "https://api.github.com/users/rhagan09/following{/other_user}", "gists_url": "https://api.github.com/users/rhagan09/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhagan09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhagan09/subscriptions", "organizations_url": "https://api.github.com/users/rhagan09/orgs", "repos_url": "https://api.github.com/users/rhagan09/repos", "events_url": "https://api.github.com/users/rhagan09/events{/privacy}", "received_events_url": "https://api.github.com/users/rhagan09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-01T09:30:11Z", "updated_at": "2020-02-08T20:35:54Z", "closed_at": "2019-11-20T20:07:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI was wondering if it is possible to use the tsfresh forecasting method to predict, for example, 4 values ahead in time. I have followed the https://github.com/blue-yonder/tsfresh/blob/master/notebooks/timeseries_forecasting_google_stock.ipynb example provided and am getting some great results for prediction of next value in time series.\r\n\r\nI have a time series that has occurrences every 15 minutes and would be looking to predict an hour in advance. Is this possible?\r\n\r\nMany Thanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/566", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/566/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/566/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/566", "id": 478858610, "node_id": "MDU6SXNzdWU0Nzg4NTg2MTA=", "number": 566, "title": "multivariate time series regression", "user": {"login": "quancore", "id": 15036825, "node_id": "MDQ6VXNlcjE1MDM2ODI1", "avatar_url": "https://avatars3.githubusercontent.com/u/15036825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quancore", "html_url": "https://github.com/quancore", "followers_url": "https://api.github.com/users/quancore/followers", "following_url": "https://api.github.com/users/quancore/following{/other_user}", "gists_url": "https://api.github.com/users/quancore/gists{/gist_id}", "starred_url": "https://api.github.com/users/quancore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quancore/subscriptions", "organizations_url": "https://api.github.com/users/quancore/orgs", "repos_url": "https://api.github.com/users/quancore/repos", "events_url": "https://api.github.com/users/quancore/events{/privacy}", "received_events_url": "https://api.github.com/users/quancore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-09T08:16:19Z", "updated_at": "2020-08-08T06:38:20Z", "closed_at": "2020-04-11T09:49:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a **z** different time series with different lengths. For each time series, there are a different number of time points with timestamps and for each time point, there is an **m** different features and observed float outcome for this time point. My aim is modeling a regressor (given m features what is the outcome). I have trained a regressor by omitting the temporal dimension of a dataset (train on all data points using m features and predict the outcome), but it resulted in a poor result. \r\n\r\nMy aim is to add temporal dimension for each time point (for each time point, mean of past values of features, std of past feature values etc). As far as I understand, I can use rolling of features, however, the function creates new time series for rolling, which does not make sense to me. My aim is to add rolling features of an original feature like a column for each time point rather than a new time series. How can I resolve it? (I have checked examples but all of them focusing on univariate time series prediction after observing several data point).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/565", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/565/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/565/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/565", "id": 478371451, "node_id": "MDU6SXNzdWU0NzgzNzE0NTE=", "number": 565, "title": "[Building issue - arm64]", "user": {"login": "3sztof", "id": 31847474, "node_id": "MDQ6VXNlcjMxODQ3NDc0", "avatar_url": "https://avatars2.githubusercontent.com/u/31847474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3sztof", "html_url": "https://github.com/3sztof", "followers_url": "https://api.github.com/users/3sztof/followers", "following_url": "https://api.github.com/users/3sztof/following{/other_user}", "gists_url": "https://api.github.com/users/3sztof/gists{/gist_id}", "starred_url": "https://api.github.com/users/3sztof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3sztof/subscriptions", "organizations_url": "https://api.github.com/users/3sztof/orgs", "repos_url": "https://api.github.com/users/3sztof/repos", "events_url": "https://api.github.com/users/3sztof/events{/privacy}", "received_events_url": "https://api.github.com/users/3sztof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-08T10:03:08Z", "updated_at": "2019-08-16T08:56:41Z", "closed_at": "2019-08-16T08:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Dear Devs,\r\n\r\nI am not sure if this actually concerns you, but I have no idea who else would care... I think that something is terribly wrong with the automated build process of tsfresh (or rather its dependencies) on ARM64 (where pip can't pull wheels for numpy, pandas statsmodels, it tries to build them).\r\n\r\nWhat I have been doing is trying to build a snap using the python plugin (with python-package tsfresh as a dependency for my part). When compiling natively on ARM64, the build fails with corss-dependency errors (for instance pandas depends on numpy, which could not be found).\r\n\r\nThis is rather not an issue with Snapcraft, but with the build process using pip (the dependencies are built in wrong order, perhaps?)\r\n\r\nWhat I have tried:\r\n- Building natively on Raspberry PI Ubuntu Core 18 (with snapcraft cleanbuild)\r\n- Building natively in 'docker in docker' with qemu arm64 emulation\r\n- Building with launchpad\r\n- Installing tsfresh on Raspberry PI using pip3 (the deps still need to be built - it seems that the issue persists there - mostly module numpy not found).\r\n\r\nOr maybe the question should be: is ARM64 architecture supported at all? :(\r\n\r\nAll the best,\r\nKrzysztof", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/564", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/564/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/564/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/564", "id": 477991655, "node_id": "MDU6SXNzdWU0Nzc5OTE2NTU=", "number": 564, "title": "Extracting features for single time series", "user": {"login": "ivan94fi", "id": 30447023, "node_id": "MDQ6VXNlcjMwNDQ3MDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/30447023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan94fi", "html_url": "https://github.com/ivan94fi", "followers_url": "https://api.github.com/users/ivan94fi/followers", "following_url": "https://api.github.com/users/ivan94fi/following{/other_user}", "gists_url": "https://api.github.com/users/ivan94fi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan94fi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan94fi/subscriptions", "organizations_url": "https://api.github.com/users/ivan94fi/orgs", "repos_url": "https://api.github.com/users/ivan94fi/repos", "events_url": "https://api.github.com/users/ivan94fi/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan94fi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T15:16:34Z", "updated_at": "2019-11-14T08:56:10Z", "closed_at": "2019-11-13T21:24:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I would like to know if there is a standard way of extracting features from a single time series instead of a set of time series, for the purpose of outlier/anomaly detection on the single time series.\r\n\r\nFor single time series I mean an univariate time series, with a single observed value, e.g:\r\n\r\ntimestamp | value\r\n-------------- | -------\r\n12-11-2009 | 23\r\n13-11-2009 | 28\r\n14-11-2009 | 27\r\n15-11-2009 | 10 \r\n16-11-2009 | 25\r\n17-11-2009 | 24\r\n\r\nMy intention would be to extract features for each data point, in order to train an unsupervised model for anomaly detection (e.g. Isolation forest or One-Class SVM) with a classical n datapoints x m features dataset:\r\n\r\ntimestamp  | value | feature_1 | feature_2 | ... | feature_m |\r\n--------------- | ------- | ------------- | -------------| -- | -------------- |\r\n12-11-2009 |   23   |     0.350    |    0.501   | ... |     0.922    |\r\n13-11-2009 |   28   |     0.099    |    0.321   | ... |     0.778    |\r\n14-11-2009 |   27   |     0.383    |    0.285   | ... |     0.125    |\r\n15-11-2009 |   10   |     0.597    |    0.618   | ... |     0.771    |\r\n16-11-2009 |   25   |     0.945    |    0.173   | ... |     0.054    |\r\n17-11-2009 |   24   |     0.019    |    0.957   | ... |     0.089    |\r\n\r\nIs this something possible in `tsfresh`?\r\n\r\nThank you for your support and for this amazing package!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/561", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/561/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/561/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/561", "id": 473026863, "node_id": "MDU6SXNzdWU0NzMwMjY4NjM=", "number": 561, "title": "Extracting features from unlabeled instances ", "user": {"login": "senjed", "id": 37229164, "node_id": "MDQ6VXNlcjM3MjI5MTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/37229164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/senjed", "html_url": "https://github.com/senjed", "followers_url": "https://api.github.com/users/senjed/followers", "following_url": "https://api.github.com/users/senjed/following{/other_user}", "gists_url": "https://api.github.com/users/senjed/gists{/gist_id}", "starred_url": "https://api.github.com/users/senjed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/senjed/subscriptions", "organizations_url": "https://api.github.com/users/senjed/orgs", "repos_url": "https://api.github.com/users/senjed/repos", "events_url": "https://api.github.com/users/senjed/events{/privacy}", "received_events_url": "https://api.github.com/users/senjed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T19:13:13Z", "updated_at": "2019-07-25T21:03:11Z", "closed_at": "2019-07-25T21:03:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have a set of time-labeled data which are labeled with a target value. I am able to extract relevant features from this data and train a classifier(phase 1). I am going to use the trained model to predict the label for unlabeled instances(phase 2). I have saved the list of extracted features in phase 1. How can I pass this list to extract_features to make sure the same set of features are being extracted from train and test? Note that my test set is not labeled so I cannot first extract the features and then split the data.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/560", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/560/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/560/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/560", "id": 472853433, "node_id": "MDU6SXNzdWU0NzI4NTM0MzM=", "number": 560, "title": "Problems with  FeatureSignificanceTestsSettings", "user": {"login": "etkaminski", "id": 48828386, "node_id": "MDQ6VXNlcjQ4ODI4Mzg2", "avatar_url": "https://avatars1.githubusercontent.com/u/48828386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etkaminski", "html_url": "https://github.com/etkaminski", "followers_url": "https://api.github.com/users/etkaminski/followers", "following_url": "https://api.github.com/users/etkaminski/following{/other_user}", "gists_url": "https://api.github.com/users/etkaminski/gists{/gist_id}", "starred_url": "https://api.github.com/users/etkaminski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etkaminski/subscriptions", "organizations_url": "https://api.github.com/users/etkaminski/orgs", "repos_url": "https://api.github.com/users/etkaminski/repos", "events_url": "https://api.github.com/users/etkaminski/events{/privacy}", "received_events_url": "https://api.github.com/users/etkaminski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T13:03:26Z", "updated_at": "2019-07-29T07:57:09Z", "closed_at": "2019-07-29T07:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Max,\r\nThanku so much for tsfresh and making my master thesis possible. I am having a problem when I try to change the fdr_level for my relevant features extraction. The issue is that I become an error while importing FeatureSignificanceTestsSettings. \r\nMy current version is 0.12.0 while i already tried with the 2 versions before and that didnt solve the problem. I am operating on windows. \r\n\r\nO also tried with from tsfresh.feature_selection.settings import FeatureSignificanceTestsSettings as i saw in the documentation and also didnt work \r\n\r\n``` python\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom tsfresh import defaults\r\nfrom tsfresh.utilities.dataframe_functions import check_for_nans_in_columns\r\nfrom tsfresh.feature_selection.relevance import calculate_relevance_table\r\nfrom tsfresh.examples.robot_execution_failures import download_robot_execution_failures, load_robot_execution_failures\r\nfrom tsfresh import extract_features, extract_relevant_features, select_features, feature_selection  \r\nfrom tsfresh.utilities.dataframe_functions import impute\r\nfrom tsfresh.feature_extraction import ComprehensiveFCParameters\r\n\r\n\r\nfrom tsfresh.feature_selection import FeatureSignificanceTestsSettings\r\nsett = FeatureSignificanceTestsSettings()\r\nsett.fdr_level = 0.99 # increases the risk of unimportant features being extracted\r\nsett.write_selection_report = True # will create a report with more information\r\nImportError: cannot import name 'FeatureSignificanceTestsSettings'\r\n```\r\n\r\nIt would be awesome if you knew how to solve this. I wish you a nice day:\r\nErik ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/559", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/559/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/559/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/559", "id": 469515198, "node_id": "MDU6SXNzdWU0Njk1MTUxOTg=", "number": 559, "title": "Filtering of warnings during multiprocessing on Windows 10 not working", "user": {"login": "dmitra79", "id": 41548538, "node_id": "MDQ6VXNlcjQxNTQ4NTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/41548538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitra79", "html_url": "https://github.com/dmitra79", "followers_url": "https://api.github.com/users/dmitra79/followers", "following_url": "https://api.github.com/users/dmitra79/following{/other_user}", "gists_url": "https://api.github.com/users/dmitra79/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitra79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitra79/subscriptions", "organizations_url": "https://api.github.com/users/dmitra79/orgs", "repos_url": "https://api.github.com/users/dmitra79/repos", "events_url": "https://api.github.com/users/dmitra79/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitra79/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-18T00:40:16Z", "updated_at": "2019-12-04T20:51:14Z", "closed_at": "2019-12-04T20:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using tsfresh 0.12.0 on Windows 10 and having various problems with parallelization.  (I have previously used earlier versions of tsfresh on Windows 7 machine and didn't have such problems).\r\nThe following script runs fine (in about 1s) as long as n_jobs=0 parameter is given.\r\n\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\nimport time\r\nfrom tsfresh import extract_features\r\n\r\nif __name__ == '__main__':\r\n    d = {'one':pd.Series(np.random.randn(10)), 'two':pd.Series(np.random.randn(10)),\r\n     'three':pd.Series(np.random.randn(10))}\r\n    df = pd.DataFrame(d)\r\n    print(df)\r\n    start = time.clock()\r\n    features = extract_features(df, column_id='one',n_jobs=0)\r\n    elapsed = time.clock()-start\r\n    print(elapsed)\r\n``` \r\n\r\nWithout n_jobs=0, I get a very long list of errors (below). My colleague tried same script on Mac however without any problems.  \r\n\r\n```\r\nFeature Extraction:   0%|                                                                       | 0/20 [00:00<?, ?it/s]C:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py:1514: RuntimeWarning: invalid value encountered in true_divide\r\n  similarity_ratio = A / B\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py:1514: RuntimeWarning: invalid value encountered in true_divide\r\n  similarity_ratio = A / B\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py:1514: RuntimeWarning: invalid value encountered in true_divide\r\n  similarity_ratio = A / B\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\numpy\\core\\_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\feature_calculators.py:1514: RuntimeWarning: invalid value encountered in true_divide\r\n  similarity_ratio = A / B\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:116: RuntimeWarning: invalid value encountered in double_scalars\r\n  slope = r_num / ssxm\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:126: RuntimeWarning: invalid value encountered in sqrt\r\n  t = r * np.sqrt(df / ((1.0 - r + TINY)*(1.0 + r + TINY)))\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in greater\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in less\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:1831: RuntimeWarning: invalid value encountered in less_equal\r\n  cond2 = cond0 & (x <= self.a)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:128: RuntimeWarning: invalid value encountered in double_scalars\r\n  sterrest = np.sqrt((1 - r**2) * ssym / ssxm / df)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py:380: UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated\r\n  \"not be calculated\".format(function_name, index_type)\r\nFeature Extraction:   5%|\u2588\u2588\u2588\u258f                                                           | 1/20 [00:19<06:10, 19.49s/it]C:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:116: RuntimeWarning: invalid value encountered in double_scalars\r\n  slope = r_num / ssxm\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:126: RuntimeWarning: invalid value encountered in sqrt\r\n  t = r * np.sqrt(df / ((1.0 - r + TINY)*(1.0 + r + TINY)))\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:116: RuntimeWarning: invalid value encountered in double_scalars\r\n  slope = r_num / ssxm\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:126: RuntimeWarning: invalid value encountered in sqrt\r\n  t = r * np.sqrt(df / ((1.0 - r + TINY)*(1.0 + r + TINY)))\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in greater\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in less\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:1831: RuntimeWarning: invalid value encountered in less_equal\r\n  cond2 = cond0 & (x <= self.a)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in greater\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:128: RuntimeWarning: invalid value encountered in double_scalars\r\n  sterrest = np.sqrt((1 - r**2) * ssym / ssxm / df)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in less\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:1831: RuntimeWarning: invalid value encountered in less_equal\r\n  cond2 = cond0 & (x <= self.a)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:128: RuntimeWarning: invalid value encountered in double_scalars\r\n  sterrest = np.sqrt((1 - r**2) * ssym / ssxm / df)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py:380: UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated\r\n  \"not be calculated\".format(function_name, index_type)\r\nFeature Extraction:  10%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                                        | 2/20 [00:19<04:06, 13.69s/it]C:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py:380: UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated\r\n  \"not be calculated\".format(function_name, index_type)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:116: RuntimeWarning: invalid value encountered in double_scalars\r\n  slope = r_num / ssxm\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:126: RuntimeWarning: invalid value encountered in sqrt\r\n  t = r * np.sqrt(df / ((1.0 - r + TINY)*(1.0 + r + TINY)))\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in greater\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:877: RuntimeWarning: invalid value encountered in less\r\n  return (self.a < x) & (x < self.b)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_distn_infrastructure.py:1831: RuntimeWarning: invalid value encountered in less_equal\r\n  cond2 = cond0 & (x <= self.a)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\scipy\\stats\\_stats_mstats_common.py:128: RuntimeWarning: invalid value encountered in double_scalars\r\n  sterrest = np.sqrt((1 - r**2) * ssym / ssxm / df)\r\nC:\\anaconda3\\envs\\tf\\lib\\site-packages\\tsfresh\\feature_extraction\\extraction.py:380: UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated\r\n  \"not be calculated\".format(function_name, index_type)\r\nFeature Extraction: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20/20 [00:20<00:00,  1.03s/it]\r\n21.1180331\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/558", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/558/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/558/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/558", "id": 469271996, "node_id": "MDU6SXNzdWU0NjkyNzE5OTY=", "number": 558, "title": "Imputing  nan and inf values ", "user": {"login": "senjed", "id": 37229164, "node_id": "MDQ6VXNlcjM3MjI5MTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/37229164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/senjed", "html_url": "https://github.com/senjed", "followers_url": "https://api.github.com/users/senjed/followers", "following_url": "https://api.github.com/users/senjed/following{/other_user}", "gists_url": "https://api.github.com/users/senjed/gists{/gist_id}", "starred_url": "https://api.github.com/users/senjed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/senjed/subscriptions", "organizations_url": "https://api.github.com/users/senjed/orgs", "repos_url": "https://api.github.com/users/senjed/repos", "events_url": "https://api.github.com/users/senjed/events{/privacy}", "received_events_url": "https://api.github.com/users/senjed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-17T14:59:54Z", "updated_at": "2019-11-16T16:52:27Z", "closed_at": "2019-11-16T16:52:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nMy data does not contain any nan values. However, after extracting features with tsfresh,  I get a data frame that has many nan and non-finate values. Do you have any insight on what imputation method works the best for filling the nan values? There are so many types of features and I guess they have to be dealt with in a different manner based on the feature type(I do not mean categorical or numerical by type).   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/557", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/557/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/557/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/557", "id": 467805396, "node_id": "MDU6SXNzdWU0Njc4MDUzOTY=", "number": 557, "title": "UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated", "user": {"login": "forhonourlx", "id": 16576219, "node_id": "MDQ6VXNlcjE2NTc2MjE5", "avatar_url": "https://avatars3.githubusercontent.com/u/16576219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forhonourlx", "html_url": "https://github.com/forhonourlx", "followers_url": "https://api.github.com/users/forhonourlx/followers", "following_url": "https://api.github.com/users/forhonourlx/following{/other_user}", "gists_url": "https://api.github.com/users/forhonourlx/gists{/gist_id}", "starred_url": "https://api.github.com/users/forhonourlx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forhonourlx/subscriptions", "organizations_url": "https://api.github.com/users/forhonourlx/orgs", "repos_url": "https://api.github.com/users/forhonourlx/repos", "events_url": "https://api.github.com/users/forhonourlx/events{/privacy}", "received_events_url": "https://api.github.com/users/forhonourlx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-14T07:33:59Z", "updated_at": "2020-02-13T20:21:48Z", "closed_at": "2020-02-13T20:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am suffering this warning, could somebody know how to solve this problem?\r\n/home/simon/anaconda3/lib/python3.6/site-packages/tsfresh/feature_extraction/extraction.py:380: UserWarning: linear_trend_timewise requires the data to have a index of type <class 'pandas.core.indexes.datetimes.DatetimeIndex'>. Results will not be calculated\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/556", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/556/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/556/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/556", "id": 467722586, "node_id": "MDU6SXNzdWU0Njc3MjI1ODY=", "number": 556, "title": "Not able to import tsfresh in jupyter", "user": {"login": "vule-de", "id": 48009632, "node_id": "MDQ6VXNlcjQ4MDA5NjMy", "avatar_url": "https://avatars1.githubusercontent.com/u/48009632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vule-de", "html_url": "https://github.com/vule-de", "followers_url": "https://api.github.com/users/vule-de/followers", "following_url": "https://api.github.com/users/vule-de/following{/other_user}", "gists_url": "https://api.github.com/users/vule-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/vule-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vule-de/subscriptions", "organizations_url": "https://api.github.com/users/vule-de/orgs", "repos_url": "https://api.github.com/users/vule-de/repos", "events_url": "https://api.github.com/users/vule-de/events{/privacy}", "received_events_url": "https://api.github.com/users/vule-de/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-13T13:48:41Z", "updated_at": "2019-07-14T02:20:32Z", "closed_at": "2019-07-13T14:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, I'm facing a problem importing tsfresh in jupyter notebook with python 2. Although the  python command line works fine with tsfresh, I can't import tsfresh in jupyter. \r\n1. Your operating system\r\nRHEL 7.5\r\n2. The version of *tsfresh* that you are using\r\n0.11.0\r\n3. When I import in Jupyter, I get the following error.\r\n```\r\nImportErrorTraceback (most recent call last)\r\n<ipython-input-1-5710679c9656> in <module>()\r\n----> 1 import tsfresh\r\n\r\n/apps/anaconda2/lib/python2.7/site-packages/tsfresh/__init__.py in <module>()\r\n      2 \r\n      3 \"\"\"\r\n----> 4 At the top level we export the three most important submodules of tsfresh, which are:\r\n      5 \r\n      6     * :mod:`~tsfresh.extract_features`\r\n\r\nImportError: No module named settings\r\n```\r\nI found file settings.py in folder ...site-packages/tsfresh/feature_extraction. After doing a hack to sys.path, the problem still exists but with different import.\r\n```\r\nsys.path.append(\"/apps/anaconda2/lib/python2.7/site-packages/tsfresh/feature_extraction\")\r\nimport tsfresh\r\n```\r\n\r\n```\r\nImportErrorTraceback (most recent call last)\r\n<ipython-input-5-0a3489d32393> in <module>()\r\n      1 sys.path.append(\"/apps/anaconda2/lib/python2.7/site-packages/tsfresh/feature_extraction\")\r\n----> 2 import tsfresh\r\n\r\n/apps/anaconda2/lib/python2.7/site-packages/tsfresh/__init__.py in <module>()\r\n      2 \r\n      3 \"\"\"\r\n----> 4 At the top level we export the three most important submodules of tsfresh, which are:\r\n      5 \r\n      6     * :mod:`~tsfresh.extract_features`\r\n\r\n/apps/anaconda2/lib/python2.7/site-packages/tsfresh/feature_extraction/settings.py in <module>()\r\n     17 from itertools import product\r\n     18 \r\n---> 19 from tsfresh.feature_extraction import feature_calculators\r\n     20 from tsfresh.utilities.string_manipulation import get_config_from_string\r\n     21 \r\n\r\nImportError: No module named feature_extraction\r\n```\r\nI'm not sure the problem is with tsfresh or jupyter. Any help is appreciated, thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/554", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/554/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/554/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/554", "id": 465671501, "node_id": "MDU6SXNzdWU0NjU2NzE1MDE=", "number": 554, "title": "Multiprocessing stops working when random seed is set", "user": {"login": "thepycoder", "id": 11781950, "node_id": "MDQ6VXNlcjExNzgxOTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/11781950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thepycoder", "html_url": "https://github.com/thepycoder", "followers_url": "https://api.github.com/users/thepycoder/followers", "following_url": "https://api.github.com/users/thepycoder/following{/other_user}", "gists_url": "https://api.github.com/users/thepycoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/thepycoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thepycoder/subscriptions", "organizations_url": "https://api.github.com/users/thepycoder/orgs", "repos_url": "https://api.github.com/users/thepycoder/repos", "events_url": "https://api.github.com/users/thepycoder/events{/privacy}", "received_events_url": "https://api.github.com/users/thepycoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-09T09:26:15Z", "updated_at": "2019-11-13T21:15:29Z", "closed_at": "2019-11-13T21:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When working in a Jupyterlab environment, when setting python's random seed to anything causes the Multiprocessing functionality of tsfresh to stop working. The progress bar appears but does not leave 0%. Htop also suggests no calculations are taking place at all.\r\n\r\n1. Your operating system\r\nThe Jupyterlab environment runs on a Google Cloud AI Platform VM, which runs Linux 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1 (2019-04-12) x86_64 GNU/Linux\r\nusing python 3.5.3\r\n\r\n2. The version of *tsfresh* that you are using\r\n0.11.2\r\n\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\nAny data that I tried\r\n\r\n4. A minimal code snippet which reproduces the problem/bug\r\n```\r\nfrom tsfresh.examples.robot_execution_failures import download_robot_execution_failures, \\\r\n    load_robot_execution_failures\r\ndownload_robot_execution_failures()\r\ntimeseries, y = load_robot_execution_failures()\r\n\r\nimport random\r\n\r\nrandom.seed = 42\r\n\r\nfrom tsfresh import extract_features\r\nextracted_features = extract_features(timeseries, column_id=\"id\", column_sort=\"time\")\r\n```\r\n\r\nThis won't progress. But when either:\r\n\r\n- Commenting out the random.seed\r\n- Setting n_jobs=0\r\n\r\nIt will work perfectly. When applying any of these changes, restart kernel to get effect (and reset the seed).\r\n\r\n5. Any reported errors or traceback\r\nWhen interrupting the frozen process I get the following error stack (always the same). The rest of the error is just the keyboard interrupt, but the empty deque is an interesting one.\r\n![image](https://user-images.githubusercontent.com/11781950/60876345-078e1400-a23c-11e9-85e0-e56338f1e21e.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/549", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/549/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/549/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/549", "id": 460849626, "node_id": "MDU6SXNzdWU0NjA4NDk2MjY=", "number": 549, "title": "What's the common features to cluster?", "user": {"login": "pahome", "id": 7940699, "node_id": "MDQ6VXNlcjc5NDA2OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7940699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pahome", "html_url": "https://github.com/pahome", "followers_url": "https://api.github.com/users/pahome/followers", "following_url": "https://api.github.com/users/pahome/following{/other_user}", "gists_url": "https://api.github.com/users/pahome/gists{/gist_id}", "starred_url": "https://api.github.com/users/pahome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pahome/subscriptions", "organizations_url": "https://api.github.com/users/pahome/orgs", "repos_url": "https://api.github.com/users/pahome/repos", "events_url": "https://api.github.com/users/pahome/events{/privacy}", "received_events_url": "https://api.github.com/users/pahome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-26T09:05:52Z", "updated_at": "2020-04-11T10:06:26Z", "closed_at": "2020-04-11T10:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use ubuntu14.4 desktop and try to cluster time-series dataset.\r\n\r\nWhen I use tsfresh.extract_features, I get multiple features to cluster like  number_peaks__n_3, __maximum...etc.\r\n\r\nThere're too many features to know what is effecient for me because I do unsupervised learning so I don't have y for tslearn.select_features(X,y)\r\n\r\nAre there any common features to cluster? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/548", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/548/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/548/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/548", "id": 460519784, "node_id": "MDU6SXNzdWU0NjA1MTk3ODQ=", "number": 548, "title": "underscore not allowed in time series kind names", "user": {"login": "betizad", "id": 7482996, "node_id": "MDQ6VXNlcjc0ODI5OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7482996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/betizad", "html_url": "https://github.com/betizad", "followers_url": "https://api.github.com/users/betizad/followers", "following_url": "https://api.github.com/users/betizad/following{/other_user}", "gists_url": "https://api.github.com/users/betizad/gists{/gist_id}", "starred_url": "https://api.github.com/users/betizad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/betizad/subscriptions", "organizations_url": "https://api.github.com/users/betizad/orgs", "repos_url": "https://api.github.com/users/betizad/repos", "events_url": "https://api.github.com/users/betizad/events{/privacy}", "received_events_url": "https://api.github.com/users/betizad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nils-braun", "id": 6116188, "node_id": "MDQ6VXNlcjYxMTYxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6116188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-braun", "html_url": "https://github.com/nils-braun", "followers_url": "https://api.github.com/users/nils-braun/followers", "following_url": "https://api.github.com/users/nils-braun/following{/other_user}", "gists_url": "https://api.github.com/users/nils-braun/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-braun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-braun/subscriptions", "organizations_url": "https://api.github.com/users/nils-braun/orgs", "repos_url": "https://api.github.com/users/nils-braun/repos", "events_url": "https://api.github.com/users/nils-braun/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-braun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-25T16:19:47Z", "updated_at": "2019-11-19T21:14:20Z", "closed_at": "2019-11-19T21:14:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "there is a bug in tsfresh.feature_extraction.settings.from_columns which causes it to raise an error.\r\n\r\nIf the name of time series column ends with `_`, e.g. `temeprature_valve_`,  you get such an error:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-79-9e22830f8581> in <module>\r\n---> 12 kind_to_fc_parameters = tsfresh.feature_extraction.settings.from_columns(nan_in_cols.transpose().columns)\r\n\r\n/opt/anaconda/anaconda3/envs/MLEP/lib/python3.6/site-packages/tsfresh/feature_extraction/settings.py in from_columns(columns, columns_to_ignore)\r\n     65 \r\n     66         if not hasattr(feature_calculators, feature_name):\r\n---> 67             raise ValueError(\"Unknown feature name {}\".format(feature_name))\r\n     68 \r\n     69         config = get_config_from_string(parts)\r\n\r\nValueError: Unknown feature name _agg_linear_trend\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/547", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/547/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/547/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/547", "id": 459522815, "node_id": "MDU6SXNzdWU0NTk1MjI4MTU=", "number": 547, "title": "Issue with energy_ratio_by_chunks", "user": {"login": "betizad", "id": 7482996, "node_id": "MDQ6VXNlcjc0ODI5OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7482996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/betizad", "html_url": "https://github.com/betizad", "followers_url": "https://api.github.com/users/betizad/followers", "following_url": "https://api.github.com/users/betizad/following{/other_user}", "gists_url": "https://api.github.com/users/betizad/gists{/gist_id}", "starred_url": "https://api.github.com/users/betizad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/betizad/subscriptions", "organizations_url": "https://api.github.com/users/betizad/orgs", "repos_url": "https://api.github.com/users/betizad/repos", "events_url": "https://api.github.com/users/betizad/events{/privacy}", "received_events_url": "https://api.github.com/users/betizad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-23T00:25:43Z", "updated_at": "2019-11-17T16:35:52Z", "closed_at": "2019-11-17T16:35:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an error in feature_extraction/feature_calculators.py\r\n\r\nWhen computing the energy of each segment, and in the special case that the time series array is a constant 0.0, full_series_energy would have a value of 0.0 causing a division by zero error.\r\n\r\nThis can be resolved easily by setting full_series_energy=1.0 when the value is 0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/546", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/546/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/546/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/546", "id": 455469095, "node_id": "MDU6SXNzdWU0NTU0NjkwOTU=", "number": 546, "title": "sklearn transformers docs example fails", "user": {"login": "Whamp", "id": 1115485, "node_id": "MDQ6VXNlcjExMTU0ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1115485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Whamp", "html_url": "https://github.com/Whamp", "followers_url": "https://api.github.com/users/Whamp/followers", "following_url": "https://api.github.com/users/Whamp/following{/other_user}", "gists_url": "https://api.github.com/users/Whamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Whamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Whamp/subscriptions", "organizations_url": "https://api.github.com/users/Whamp/orgs", "repos_url": "https://api.github.com/users/Whamp/repos", "events_url": "https://api.github.com/users/Whamp/events{/privacy}", "received_events_url": "https://api.github.com/users/Whamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T23:32:32Z", "updated_at": "2020-04-11T09:04:32Z", "closed_at": "2020-04-11T09:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I tried to run the tsfresh example located here:\r\n\r\nhttps://tsfresh.readthedocs.io/en/latest/text/sklearn_transformers.html\r\n\r\nand I got two errors, one I fixed and one that I'm raising here. \r\n\r\nI'm running:\r\ntsfresh-0.11.2\r\npandas-0.24.2\r\nsystem is Ubuntu 18.04\r\n\r\nThe first error was the example requires the following code to be run before you can run the actual code shown in the example:\r\n\r\n```python\r\nfrom tsfresh.examples.robot_execution_failures import download_robot_execution_failures\r\ndownload_robot_execution_failures()\r\n```\r\n\r\nThis seems like a simple fix to the docs to me. \r\n\r\nHowever after downloading the data and running the exact code shown in the example as shown here:\r\n\r\n```python\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom tsfresh.examples import load_robot_execution_failures\r\nfrom tsfresh.transformers import RelevantFeatureAugmenter\r\n\r\npipeline = Pipeline([('augmenter', RelevantFeatureAugmenter(column_id='id', column_sort='time')),\r\n            ('classifier', RandomForestClassifier())])\r\n\r\ndf_ts, y = load_robot_execution_failures()\r\nX = pd.DataFrame(index=y.index)\r\n\r\npipeline.set_params(augmenter__timeseries_container=df_ts)\r\npipeline.fit(X, y)\r\n```\r\nI get the following error:\r\n![screencapture-localhost-8888-notebooks-Dalton-USA-USA-Feature-Creation-and-Modeling-Stacker-ipynb-2019-06-12-16_27_46](https://user-images.githubusercontent.com/1115485/59393199-6f316c00-8d2f-11e9-9e5b-a04aae1a16c1.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/545", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/545/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/545/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/545", "id": 455210783, "node_id": "MDU6SXNzdWU0NTUyMTA3ODM=", "number": 545, "title": "ndarray no attributed name todense()", "user": {"login": "KongfeiH", "id": 40188526, "node_id": "MDQ6VXNlcjQwMTg4NTI2", "avatar_url": "https://avatars0.githubusercontent.com/u/40188526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KongfeiH", "html_url": "https://github.com/KongfeiH", "followers_url": "https://api.github.com/users/KongfeiH/followers", "following_url": "https://api.github.com/users/KongfeiH/following{/other_user}", "gists_url": "https://api.github.com/users/KongfeiH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KongfeiH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KongfeiH/subscriptions", "organizations_url": "https://api.github.com/users/KongfeiH/orgs", "repos_url": "https://api.github.com/users/KongfeiH/repos", "events_url": "https://api.github.com/users/KongfeiH/events{/privacy}", "received_events_url": "https://api.github.com/users/KongfeiH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-12T13:21:49Z", "updated_at": "2019-11-13T02:38:39Z", "closed_at": "2019-11-13T02:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "in groupby.py line 5070\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/544", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/544/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/544/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/544", "id": 454277046, "node_id": "MDU6SXNzdWU0NTQyNzcwNDY=", "number": 544, "title": "Bug computing friedrich_coefficients with kind_to_fc_parameters", "user": {"login": "cdtennant", "id": 44101401, "node_id": "MDQ6VXNlcjQ0MTAxNDAx", "avatar_url": "https://avatars2.githubusercontent.com/u/44101401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdtennant", "html_url": "https://github.com/cdtennant", "followers_url": "https://api.github.com/users/cdtennant/followers", "following_url": "https://api.github.com/users/cdtennant/following{/other_user}", "gists_url": "https://api.github.com/users/cdtennant/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdtennant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdtennant/subscriptions", "organizations_url": "https://api.github.com/users/cdtennant/orgs", "repos_url": "https://api.github.com/users/cdtennant/repos", "events_url": "https://api.github.com/users/cdtennant/events{/privacy}", "received_events_url": "https://api.github.com/users/cdtennant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-06-10T17:21:27Z", "updated_at": "2019-07-09T10:56:32Z", "closed_at": "2019-07-09T10:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: Windows 7 Enterprise\r\nPython version: 3.6.4\r\ntsfresh version: 0.11.2\r\n\r\nI am aware that a similar (closed) issue has already been raised on this topic (#501), though I don't know if it is exactly the same.\r\n\r\nI am specifying a set of features to compute using `kind_to_fc_parameters`. When I read in 5 examples (i.e. 5 different instances of a signal) I get the following output:\r\n\r\n\r\n![5samples](https://user-images.githubusercontent.com/44101401/59212996-d4dff580-8b81-11e9-9115-a2b9f3de60eb.png)\r\n\r\nAll is well and the output feature matrix contains my 5 examples (rows) and the 5 features I specified (columns). However, when I remove the last two examples and read in only 3 instances of the signal, I get the following:\r\n\r\n![3samples](https://user-images.githubusercontent.com/44101401/59213085-0953b180-8b82-11e9-8879-efa20413ae2d.png)\r\n\r\nNow *none* of the features are calculated, despite the fact that all I did was to remove 2 of the 5 signals. Why should this have an impact? This is causing all sorts of problems with a trained ML application I have - where extracting features of a training set consisting of lots of examples is fine, but then trying to extract features for a single instance, things fall apart.\r\n\r\nI see there was some recent work regarding the `friedrich_coefficients` so I don't know if that will address my issue or not. How does one get an unreleased version of `tsfresh`?\r\n\r\n![unreleaed](https://user-images.githubusercontent.com/44101401/59213251-6d767580-8b82-11e9-9aab-8e2335bc8b68.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/543", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/543/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/543/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/543", "id": 451366450, "node_id": "MDU6SXNzdWU0NTEzNjY0NTA=", "number": 543, "title": "Feature extraction on eeg signals with MultiprocessingDistributor on local machine", "user": {"login": "akatav", "id": 721570, "node_id": "MDQ6VXNlcjcyMTU3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/721570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akatav", "html_url": "https://github.com/akatav", "followers_url": "https://api.github.com/users/akatav/followers", "following_url": "https://api.github.com/users/akatav/following{/other_user}", "gists_url": "https://api.github.com/users/akatav/gists{/gist_id}", "starred_url": "https://api.github.com/users/akatav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akatav/subscriptions", "organizations_url": "https://api.github.com/users/akatav/orgs", "repos_url": "https://api.github.com/users/akatav/repos", "events_url": "https://api.github.com/users/akatav/events{/privacy}", "received_events_url": "https://api.github.com/users/akatav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T08:56:23Z", "updated_at": "2019-07-07T15:31:53Z", "closed_at": "2019-07-07T15:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nThanks for the library. \r\nSo, i have about 20 eeg files from 19 channels, each with varying time series lengths. An average file is matrix of dimension (19,30000). \r\nI am on an ubuntu 16.04, 8 core. \r\nThe code i am running is like:\r\n\r\n```\r\nfrom tsfresh.feature_extraction import extract_features\r\nfrom tsfresh.utilities.distribution import MultiprocessingDistributor\r\nimport numpy as np\r\n\r\nx = [n.strip() for n in columns] # columns is the array of all channel names\r\nx.append(\"id\")\r\n\r\nDistributor = MultiprocessingDistributor(n_workers=8,                                        disable_progressbar=False,progressbar_title=\"Feature Extraction\")\r\n\r\nfor subj in allfiles:#allfiles is a list of EEGRaw objects from mne\r\n    subj=subj.get_data()#matrix shaped (n_channels, n_times)\r\n    subj=subj.T\r\n    ids = np.ones(subj.shape[0])\r\n    output = np.column_stack((subj, ids))\r\n    df=pd.DataFrame(data=output[0:,0:], columns=x)\r\n    X = extract_features(timeseries_container=df,column_id='id',distributor=Distributor)`\r\n```\r\n\r\n\r\nObviously, i have reshaped the matrix and added \"id\" column to make it suitable for extract_features function in tsfresh (although, i'd really like to know if there's a way to do just feed the actual matrix)\r\nPerhaps, it is because all 1000+ features are computed for all the 20 files which i really dont need. Is there a way to select just a few features (<5) in the extract_features() function. \r\nBut, even with just 1 file, this takes a really long time and actually breaks my system. What is wrong with the code?\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/542", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/542/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/542/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/542", "id": 451180496, "node_id": "MDU6SXNzdWU0NTExODA0OTY=", "number": 542, "title": "Almost useless feature called mean_change", "user": {"login": "thautwarm", "id": 22536460, "node_id": "MDQ6VXNlcjIyNTM2NDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/22536460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thautwarm", "html_url": "https://github.com/thautwarm", "followers_url": "https://api.github.com/users/thautwarm/followers", "following_url": "https://api.github.com/users/thautwarm/following{/other_user}", "gists_url": "https://api.github.com/users/thautwarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/thautwarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thautwarm/subscriptions", "organizations_url": "https://api.github.com/users/thautwarm/orgs", "repos_url": "https://api.github.com/users/thautwarm/repos", "events_url": "https://api.github.com/users/thautwarm/events{/privacy}", "received_events_url": "https://api.github.com/users/thautwarm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-02T11:18:21Z", "updated_at": "2019-11-16T16:53:58Z", "closed_at": "2019-11-16T16:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/blue-yonder/tsfresh/blob/00884fb2a7ed3a364ebe27f140be8bf425fcde86/tsfresh/feature_extraction/feature_calculators.py#L528\r\n\r\nThe result is equivalent to (`x_last - x_first) / (n - 1)`.\r\n\r\nIf you do want this as a feature, `(x[-1] - x[0])/(len(x) - 1)` instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/541", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/541/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/541/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/541", "id": 448443851, "node_id": "MDU6SXNzdWU0NDg0NDM4NTE=", "number": 541, "title": "Parallellization optimisation for feature extraction", "user": {"login": "jonimatix", "id": 22000043, "node_id": "MDQ6VXNlcjIyMDAwMDQz", "avatar_url": "https://avatars0.githubusercontent.com/u/22000043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonimatix", "html_url": "https://github.com/jonimatix", "followers_url": "https://api.github.com/users/jonimatix/followers", "following_url": "https://api.github.com/users/jonimatix/following{/other_user}", "gists_url": "https://api.github.com/users/jonimatix/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonimatix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonimatix/subscriptions", "organizations_url": "https://api.github.com/users/jonimatix/orgs", "repos_url": "https://api.github.com/users/jonimatix/repos", "events_url": "https://api.github.com/users/jonimatix/events{/privacy}", "received_events_url": "https://api.github.com/users/jonimatix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-25T09:21:37Z", "updated_at": "2019-07-07T07:48:36Z", "closed_at": "2019-07-07T07:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs it required to enclose the code in if __name__ == \"__main__\" in order to achieve better CPU utilization, in conjunction with n_jobs parameter? Is this included in the current release?\r\n\r\nThanks\r\nJon ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/539", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/539/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/539/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/539", "id": 446657082, "node_id": "MDU6SXNzdWU0NDY2NTcwODI=", "number": 539, "title": "timeseries_forecasting_basic_example.ipynb results seem time shifted", "user": {"login": "Chichilele", "id": 17325189, "node_id": "MDQ6VXNlcjE3MzI1MTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/17325189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chichilele", "html_url": "https://github.com/Chichilele", "followers_url": "https://api.github.com/users/Chichilele/followers", "following_url": "https://api.github.com/users/Chichilele/following{/other_user}", "gists_url": "https://api.github.com/users/Chichilele/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chichilele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chichilele/subscriptions", "organizations_url": "https://api.github.com/users/Chichilele/orgs", "repos_url": "https://api.github.com/users/Chichilele/repos", "events_url": "https://api.github.com/users/Chichilele/events{/privacy}", "received_events_url": "https://api.github.com/users/Chichilele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-21T14:36:57Z", "updated_at": "2019-06-06T08:37:24Z", "closed_at": "2019-06-06T08:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reading your forecasting jupyter notebook\r\n[timeseries_forecasting_basic_example.ipynb](https://github.com/blue-yonder/tsfresh/blob/master/notebooks/timeseries_forecasting_basic_example.ipynb)\r\nThe results seem to be time shifted (a few hours). Is it an expect behavior or a side effect ?\r\nMany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/537", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/537/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/537/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/537", "id": 444796145, "node_id": "MDU6SXNzdWU0NDQ3OTYxNDU=", "number": 537, "title": "cross_val_score works with FeatureAugmenter, but not with RelevantFeatureAugmenter", "user": {"login": "thanhd10", "id": 50167290, "node_id": "MDQ6VXNlcjUwMTY3Mjkw", "avatar_url": "https://avatars0.githubusercontent.com/u/50167290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanhd10", "html_url": "https://github.com/thanhd10", "followers_url": "https://api.github.com/users/thanhd10/followers", "following_url": "https://api.github.com/users/thanhd10/following{/other_user}", "gists_url": "https://api.github.com/users/thanhd10/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanhd10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanhd10/subscriptions", "organizations_url": "https://api.github.com/users/thanhd10/orgs", "repos_url": "https://api.github.com/users/thanhd10/repos", "events_url": "https://api.github.com/users/thanhd10/events{/privacy}", "received_events_url": "https://api.github.com/users/thanhd10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-16T07:28:21Z", "updated_at": "2019-07-12T09:56:00Z", "closed_at": "2019-07-12T09:55:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm new to tsfresh and wanted to implement the RelevantFeatureAugmenter in a sklearn.pipeline to cross-validate, but encountered the problem, that it doesn't work with RelevantFeatureAugmenter, but with FeatureAugmenter. I reconstructed the problem with the robot_failure dataset:\r\n\r\n~~~~ python\r\nfrom tsfresh.examples import load_robot_execution_failures\r\nfrom tsfresh.transformers import RelevantFeatureAugmenter, FeatureAugmenter, PerColumnImputer, FeatureSelector\r\nfrom sklearn.svm import SVC\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.pipeline import make_pipeline\r\nimport pandas as pd\r\n\r\nx, y = load_robot_execution_failures()\r\npipe = make_pipeline(RelevantFeatureAugmenter(column_id='id', column_sort='time'),\r\n                     SVC())\r\npipe.set_params(featureaugmenter__timeseries_container=x)\r\n\r\nxfit = pd.DataFrame(index=y.index)\r\nscore = cross_val_score(pipe, xfit, y, cv=4)\r\n~~~~\r\nWhen I run the program, I get the following error message:\r\n~~~~ python\r\nFile \"/anaconda3/lib/python3.7/site-packages/tsfresh/transformers/relevant_feature_augmenter.py\", line 260, in fit\r\n    X_augmented = self.feature_extractor.transform(X_tmp)\r\n  File \"/anaconda3/lib/python3.7/site-packages/tsfresh/transformers/feature_augmenter.py\", line 185, in transform\r\n    timeseries_container_X = restrict_input_to_index(self.timeseries_container, self.column_id, X.index)\r\n  File \"/anaconda3/lib/python3.7/site-packages/tsfresh/utilities/dataframe_functions.py\", line 203, in restrict_input_to_index\r\n    df_or_dict_restricted = df_or_dict[df_or_dict[column_id].isin(index)]\r\n  File \"/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py\", line 2688, in __getitem__\r\n    return self._getitem_column(key)\r\n  File \"/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py\", line 2695, in _getitem_column\r\n    return self._get_item_cache(key)\r\n  File \"/anaconda3/lib/python3.7/site-packages/pandas/core/generic.py\", line 2489, in _get_item_cache\r\n    values = self._data.get(item)\r\n  File \"/anaconda3/lib/python3.7/site-packages/pandas/core/internals.py\", line 4124, in get\r\n    raise ValueError(\"cannot label index with a null key\")\r\nValueError: cannot label index with a null key\r\n~~~~\r\nIf I run the program with FeatureAugmenter + PerColumnImputer + FeatureSelector, it works perfectly fine. Is that a bug, or did I do something wrong with the RelevantFeatureAugmenter?\r\n\r\n1. Your operating system: macOS High Sierra\r\n2. The version of *tsfresh* that you are using: 0.11.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/534", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/534/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/534/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/534", "id": 440898994, "node_id": "MDU6SXNzdWU0NDA4OTg5OTQ=", "number": 534, "title": "Memory leaks when extracting features using LocalDaskDistributor with large Dataframes", "user": {"login": "isaacWpark", "id": 33641007, "node_id": "MDQ6VXNlcjMzNjQxMDA3", "avatar_url": "https://avatars0.githubusercontent.com/u/33641007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaacWpark", "html_url": "https://github.com/isaacWpark", "followers_url": "https://api.github.com/users/isaacWpark/followers", "following_url": "https://api.github.com/users/isaacWpark/following{/other_user}", "gists_url": "https://api.github.com/users/isaacWpark/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaacWpark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaacWpark/subscriptions", "organizations_url": "https://api.github.com/users/isaacWpark/orgs", "repos_url": "https://api.github.com/users/isaacWpark/repos", "events_url": "https://api.github.com/users/isaacWpark/events{/privacy}", "received_events_url": "https://api.github.com/users/isaacWpark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-06T21:19:13Z", "updated_at": "2019-11-29T21:00:29Z", "closed_at": "2019-11-29T21:00:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I\u2019m attempting to use extract_features from a large dataframe using a LocalDaskDistributor, and am encountering the following  error:\r\n\r\nDistributed.worker - WARNING - gc.collect() took 1.732s. This is usually a sign that the some tasks handle too many Python objects at the same time. Rechunking the work into smaller tasks might help.\r\n\r\nFollowed by the following repeated error, which repeats until the kernel ultimately freezes: \r\n\r\ndistributed.worker - WARNING - Memory use is high but worker has no data to store to disk.  Perhaps some other process is leaking memory?  Process memory: 7.89 GB -- Worker memory limit: 11.38 GB\r\n\r\nThis error persists regardless of whether very large (>100,000) or very small (10) chunksizes are specified in extract_features, and appears to occur whenever attempting to extract features from a dataframe with ~100,000 rows using the localDaskDistributor.   \r\n \r\nI'm using Anaconda python 3.6.8 on Windows 7 Professional, with tsfresh v0.11.2.\r\nExample code which produces these errors follows: \r\n\r\n```Python\r\nfrom tsfresh.examples.robot_execution_failures import \\\r\n    download_robot_execution_failures, \\\r\n    load_robot_execution_failures\r\nfrom tsfresh.feature_extraction import extract_features\r\nfrom tsfresh.utilities.distribution import LocalDaskDistributor\r\nimport copy\r\nimport pandas as pd\r\n\r\n\r\ndownload_robot_execution_failures()\r\ndf, y = load_robot_execution_failures()\r\n\r\ndf_comb = copy.deepcopy(df)\r\nfor x in range(100):\r\n    df_iter = df\r\n    df_iter['id'] = df_iter['id'] + df_comb['id'].max()\r\n    df_comb = pd.concat([df_comb, df_iter], axis = 0)\r\n    print(len(df_comb))\r\n\r\ndf_comb.reset_index(inplace = True, drop = True)\r\n\r\n\r\nDistributor = LocalDaskDistributor(n_workers=3)\r\n\r\nX = extract_features(timeseries_container=df_comb,\r\n                     column_id='id', column_sort='time',\r\n                     distributor=Distributor)\r\n```\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/533", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/533/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/533/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/533", "id": 439695560, "node_id": "MDU6SXNzdWU0Mzk2OTU1NjA=", "number": 533, "title": "OSError: [Errno 22]", "user": {"login": "acmilannesta", "id": 47703762, "node_id": "MDQ6VXNlcjQ3NzAzNzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/47703762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acmilannesta", "html_url": "https://github.com/acmilannesta", "followers_url": "https://api.github.com/users/acmilannesta/followers", "following_url": "https://api.github.com/users/acmilannesta/following{/other_user}", "gists_url": "https://api.github.com/users/acmilannesta/gists{/gist_id}", "starred_url": "https://api.github.com/users/acmilannesta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acmilannesta/subscriptions", "organizations_url": "https://api.github.com/users/acmilannesta/orgs", "repos_url": "https://api.github.com/users/acmilannesta/repos", "events_url": "https://api.github.com/users/acmilannesta/events{/privacy}", "received_events_url": "https://api.github.com/users/acmilannesta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T17:08:30Z", "updated_at": "2019-05-03T16:35:25Z", "closed_at": "2019-05-03T16:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm running tsfresh 0.11.2 on win10 in python 3.6.8. When I test the sample codes I got the following error:\r\n\r\n\r\n```\r\nfrom tsfresh import extract_relevant_features, extract_features\r\nfrom tsfresh.examples.robot_execution_failures import download_robot_execution_failures, load_robot_execution_failures\r\nif __name__ == '__main__':\r\n    download_robot_execution_failures()\r\n    timeseries, y = load_robot_execution_failures()\r\n    features_filtered_direct = extract_features(timeseries, column_id='id', column_sort='time')\r\n```\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"E:\\Python 3.6\\lib\\multiprocessing\\spawn.py\", line 105, in spawn_main\r\n    exitcode = _main(fd)\r\n  File \"E:\\Python 3.6\\lib\\multiprocessing\\spawn.py\", line 114, in _main\r\n    prepare(preparation_data)\r\n  File \"E:\\Python 3.6\\lib\\multiprocessing\\spawn.py\", line 225, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"E:\\Python 3.6\\lib\\multiprocessing\\spawn.py\", line 277, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"E:\\Python 3.6\\lib\\runpy.py\", line 261, in run_path\r\n    code, fname = _get_code_from_file(run_name, path_name)\r\n  File \"E:\\Python 3.6\\lib\\runpy.py\", line 231, in _get_code_from_file\r\n    with open(fname, \"rb\") as f:\r\nOSError: [Errno 22] Invalid argument: 'Z:\\\\Zhensheng Wang\\\\Julien\\\\Adult readmission\\\\<input>'\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/532", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/532/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/532/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/532", "id": 439476133, "node_id": "MDU6SXNzdWU0Mzk0NzYxMzM=", "number": 532, "title": "Suggestion Regarding Partial Autocorrelation Function (PACF) Calculator", "user": {"login": "nicholasg97", "id": 41451570, "node_id": "MDQ6VXNlcjQxNDUxNTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/41451570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasg97", "html_url": "https://github.com/nicholasg97", "followers_url": "https://api.github.com/users/nicholasg97/followers", "following_url": "https://api.github.com/users/nicholasg97/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasg97/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasg97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasg97/subscriptions", "organizations_url": "https://api.github.com/users/nicholasg97/orgs", "repos_url": "https://api.github.com/users/nicholasg97/repos", "events_url": "https://api.github.com/users/nicholasg97/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasg97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T08:26:13Z", "updated_at": "2019-11-17T16:34:53Z", "closed_at": "2019-11-17T16:34:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys! Enjoying all the hard work you guys put into this project!\r\n\r\nJust a small observation regarding the partial_autocorrelation function in the featue_calculators module. \r\n\r\nI'm working on a fairly large signal dataset where each 'id' has ~200,000 time_steps (only one feature though). I've been testing some of the functions in the feature_calculator module, for speed.\r\n\r\nWithout parallel processing, it takes my i7-6700 ~ 11 seconds to run the \r\n<pacf(x(150,000 time_steps), method=\"ld\", nlags=2)> \r\nfunction alone on one sample. \r\n\r\nWhen using the exact same set-up, but specifying the method as 'yw' or 'Yule-Walker with bias correction in denominator for acovf'\r\n\r\nIt takes around ~.006 seconds or almost 2000x faster. This could be based on the way my enviormnent is setup, but I just wanted to let you guys know. Maybe you had a reason specifically for specifying Levinson-Durbin method! I don't know too much in-depth details about pacf. \r\n\r\nFrom the stats models documentation they also state, \"Based on simulation evidence across a range of low-order ARMA models, the best methods based on root MSE are Yule-Walker (MLW), Levinson-Durbin (MLE) and Burg, respectively. The estimators with the lowest bias included these three in addition to OLS and OLS-unbiased.\"\r\n\r\nSo it doesn't look like for Yule-Walker is terribly worse (they even state better) than Levinson-Durbin, but maybe it's different for feature engineering. \r\n\r\n\r\nThanks again for all the great work.    \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/531", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/531/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/531/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/531", "id": 438012302, "node_id": "MDU6SXNzdWU0MzgwMTIzMDI=", "number": 531, "title": "Add example notebook on how to use tsfresh for unsupervised clustering", "user": {"login": "unidev10", "id": 44429496, "node_id": "MDQ6VXNlcjQ0NDI5NDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/44429496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unidev10", "html_url": "https://github.com/unidev10", "followers_url": "https://api.github.com/users/unidev10/followers", "following_url": "https://api.github.com/users/unidev10/following{/other_user}", "gists_url": "https://api.github.com/users/unidev10/gists{/gist_id}", "starred_url": "https://api.github.com/users/unidev10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unidev10/subscriptions", "organizations_url": "https://api.github.com/users/unidev10/orgs", "repos_url": "https://api.github.com/users/unidev10/repos", "events_url": "https://api.github.com/users/unidev10/events{/privacy}", "received_events_url": "https://api.github.com/users/unidev10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 469228432, "node_id": "MDU6TGFiZWw0NjkyMjg0MzI=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-28T04:30:03Z", "updated_at": "2020-04-29T15:45:33Z", "closed_at": "2019-05-20T06:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I've got a time series dataset on which I want to perform feature extraction and then cluster the features. I don't have any output column. I want to do it in an unsupervised manner. Can tsfresh be used for unsupervised algorithms?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/529", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/529/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/529/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/529", "id": 433945230, "node_id": "MDU6SXNzdWU0MzM5NDUyMzA=", "number": 529, "title": "get_moment function integer overflow on windows", "user": {"login": "albertgt", "id": 12142953, "node_id": "MDQ6VXNlcjEyMTQyOTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/12142953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertgt", "html_url": "https://github.com/albertgt", "followers_url": "https://api.github.com/users/albertgt/followers", "following_url": "https://api.github.com/users/albertgt/following{/other_user}", "gists_url": "https://api.github.com/users/albertgt/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertgt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertgt/subscriptions", "organizations_url": "https://api.github.com/users/albertgt/orgs", "repos_url": "https://api.github.com/users/albertgt/repos", "events_url": "https://api.github.com/users/albertgt/events{/privacy}", "received_events_url": "https://api.github.com/users/albertgt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 469228432, "node_id": "MDU6TGFiZWw0NjkyMjg0MzI=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-16T19:22:02Z", "updated_at": "2019-11-16T16:55:08Z", "closed_at": "2019-11-16T16:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Operating system\r\nWindows 10 64-bit\r\nVersion\t10.0.17134 Build 17134\r\n\r\n2. tsfresh version  0.11.2\r\n\r\nCode snippet which reproduces the problem/bug:\r\n\r\n**in tsfresh/feature_extraction/feature_calculators.py**\r\n_in function def get_moment(y, moment):_\r\n> return y.dot(np.arange(len(y))**moment) / y.sum()\r\n\r\n_the ** operator on windows incorrectly calculates:\r\nassuming len(y) is 4096 and moment is 3_\r\n> np.arange(4096)**3\r\narray([         0,          1,          8, ..., -150884379, -100614152,\r\n        -50319361], dtype=int32)\r\n\r\n_but on linux and mac osx, the same code correctly calculates:_\r\n> np.arange(4096)**3\r\narray([          0,           1,           8, ..., 68568592357,\r\n       68618862584, 68669157375])\r\n\r\n_i believe the fix is to explicitly use numpy.float_power instead of the ** operator.\r\non all OS's this correctly calculates:_\r\n> array([0.00000000e+00, 1.00000000e+00, 8.00000000e+00, ...,\r\n       6.85685924e+10, 6.86188626e+10, 6.86691574e+10])", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/528", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/528/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/528/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/528", "id": 432843789, "node_id": "MDU6SXNzdWU0MzI4NDM3ODk=", "number": 528, "title": "tsfresh seems to be incompatible with latest versions of pandas", "user": {"login": "cchorn", "id": 9871941, "node_id": "MDQ6VXNlcjk4NzE5NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9871941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cchorn", "html_url": "https://github.com/cchorn", "followers_url": "https://api.github.com/users/cchorn/followers", "following_url": "https://api.github.com/users/cchorn/following{/other_user}", "gists_url": "https://api.github.com/users/cchorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cchorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cchorn/subscriptions", "organizations_url": "https://api.github.com/users/cchorn/orgs", "repos_url": "https://api.github.com/users/cchorn/repos", "events_url": "https://api.github.com/users/cchorn/events{/privacy}", "received_events_url": "https://api.github.com/users/cchorn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-13T12:49:24Z", "updated_at": "2019-11-26T18:59:05Z", "closed_at": "2019-11-26T18:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oh no, you encountered a problem while using *tsfesh*.\r\n\r\nWe, the maintainers, are happy to help you. When opening an issue, please provide the following information to us:\r\n\r\n1. Your operating system\r\nUbuntu 18.04.2 LTS\r\n\r\n2. The version of *tsfresh* that you are using\r\nlatest version\r\n3. The data on which the problem occurred (please do not upload 1000s of time series but try to boil the problem down to a small group or even a singular one)\r\n4. A minimal code snippet which reproduces the problem/bug\r\n5. Any reported errors or traceback\r\n\r\nerror when trying to install:\r\n\r\ntsfresh 0.11.2 has requirement pandas<=0.23.4,>=0.20.3, but you'll have pandas 0.24.2 which is incompatible.\r\n\r\nFor questions, you can also use our [gitter chatroom](https://gitter.im/tsfresh/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/527", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/527/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/527/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/527", "id": 431897194, "node_id": "MDU6SXNzdWU0MzE4OTcxOTQ=", "number": 527, "title": "Add check if integer time column / ZeroDivisionError in tqdm.py / pool.py", "user": {"login": "JPlanken", "id": 23149574, "node_id": "MDQ6VXNlcjIzMTQ5NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/23149574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JPlanken", "html_url": "https://github.com/JPlanken", "followers_url": "https://api.github.com/users/JPlanken/followers", "following_url": "https://api.github.com/users/JPlanken/following{/other_user}", "gists_url": "https://api.github.com/users/JPlanken/gists{/gist_id}", "starred_url": "https://api.github.com/users/JPlanken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JPlanken/subscriptions", "organizations_url": "https://api.github.com/users/JPlanken/orgs", "repos_url": "https://api.github.com/users/JPlanken/repos", "events_url": "https://api.github.com/users/JPlanken/events{/privacy}", "received_events_url": "https://api.github.com/users/JPlanken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-11T08:34:58Z", "updated_at": "2019-11-17T16:33:21Z", "closed_at": "2019-11-17T16:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I'm encountering a problem with the following characteristics\r\n\r\nWindows 10\r\ntsfresh==0.11.2\r\nPassing the following data:\r\n\r\n```\r\ntime\tflight_id\tlat\tlong\tvelocity\theading\tvertrate\tbaroaltitude\r\n0\t1510228979\t1\t52.5533\t3.12302\t224.176\t55.471\t2.276\t10325.1\r\n1\t1510229159\t1\t52.7569\t3.61336\t224.157\t55.945\t0.325\t10668\r\n2\t1510229339\t1\t52.9572\t4.10536\t227.719\t56.238\t0\t10683.2\r\n3\t1510229519\t1\t53.1597\t4.61277\t224.298\t56.602\t0\t10668\r\n4\t1510229699\t1\t53.3572\t5.11777\t223.883\t57.004\t0\t10660.4\r\n```\r\ninto this:\r\n\r\n```\r\nfrom tsfresh import extract_features\r\nextracted_features = extract_features(df_10, column_id=\"flight_id\", column_sort=\"time\")\r\n```\r\nGives a zero division error:\r\n\r\n```\r\n\\AppData\\Roaming\\Python\\Python36\\site-packages\\tqdm\\_tqdm.py in __iter__(self)\r\n   1020                 \"\"\"), fp_write=getattr(self.fp, 'write', sys.stderr.write))\r\n   1021 \r\n-> 1022             for obj in iterable:\r\n   1023                 yield obj\r\n   1024                 # Update and possibly print the progressbar.\r\n\r\n~\\AppData\\Local\\conda\\conda\\envs\\opensky\\lib\\multiprocessing\\pool.py in next(self, timeout)\r\n    733         if success:\r\n    734             return value\r\n--> 735         raise value\r\n    736 \r\n    737     __next__ = next                    # XXX\r\n\r\nZeroDivisionError: float division by zero\r\n```\r\n\r\nWhile passing the example dataframe:\r\n\r\n```\r\n\tid\ttime\tF_x\tF_y\tF_z\tT_x\tT_y\tT_z\r\n0\t1\t0\t-1\t-1\t63\t-3\t-1\t0\r\n1\t1\t1\t0\t0\t62\t-3\t-1\t0\r\n2\t1\t2\t-1\t-1\t61\t-3\t0\t0\r\n3\t1\t3\t-1\t-1\t63\t-2\t-1\t0\r\n4\t1\t4\t-1\t-1\t63\t-3\t-1\t0\r\n```\r\n\r\nto this:\r\n\r\n```\r\nfrom tsfresh import extract_features\r\nextracted_features = extract_features(timeseries, column_id=\"id\", column_sort=\"time\")\r\n```\r\nWorks absolutely fine. \r\n\r\nAny ideas on why this may occur?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/525", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/525/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/525/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/525", "id": 428271236, "node_id": "MDU6SXNzdWU0MjgyNzEyMzY=", "number": 525, "title": "chunksize in select_features()?", "user": {"login": "zygmuntz", "id": 1714767, "node_id": "MDQ6VXNlcjE3MTQ3Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1714767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zygmuntz", "html_url": "https://github.com/zygmuntz", "followers_url": "https://api.github.com/users/zygmuntz/followers", "following_url": "https://api.github.com/users/zygmuntz/following{/other_user}", "gists_url": "https://api.github.com/users/zygmuntz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zygmuntz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zygmuntz/subscriptions", "organizations_url": "https://api.github.com/users/zygmuntz/orgs", "repos_url": "https://api.github.com/users/zygmuntz/repos", "events_url": "https://api.github.com/users/zygmuntz/events{/privacy}", "received_events_url": "https://api.github.com/users/zygmuntz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228431, "node_id": "MDU6TGFiZWw0NjkyMjg0MzE=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-02T14:45:33Z", "updated_at": "2020-04-11T08:54:12Z", "closed_at": "2020-04-11T08:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "select_features() has a parameter chunksize. The docs say this:\r\n\r\n> chunksize (None or int) \u2013 The size of one chunk that is submitted to the worker process for the parallelisation. Where one chunk is defined as a singular time series for one id and one kind. If you set the chunksize to 10, then it means that one task is to calculate all features for 10 time series. If it is set it to None, depending on distributor, heuristics are used to find the optimal chunksize. If you get out of memory exceptions, you can try it with the dask distributor and a smaller chunksize.\r\n\r\nThis looks like a description copied from feature extraction. In feature selection, there's no ids and no kinds. Also, as far as I understand, selection can go in parallel column-by-column (each col tested separately), but not row-by-row (we need a vector of size [rows, 1]).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/524", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/524/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/524/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/524", "id": 427375225, "node_id": "MDU6SXNzdWU0MjczNzUyMjU=", "number": 524, "title": "ZeroDivisionError when trying to use RelevantFeatureAugmenter", "user": {"login": "nicholasg97", "id": 41451570, "node_id": "MDQ6VXNlcjQxNDUxNTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/41451570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasg97", "html_url": "https://github.com/nicholasg97", "followers_url": "https://api.github.com/users/nicholasg97/followers", "following_url": "https://api.github.com/users/nicholasg97/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasg97/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasg97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasg97/subscriptions", "organizations_url": "https://api.github.com/users/nicholasg97/orgs", "repos_url": "https://api.github.com/users/nicholasg97/repos", "events_url": "https://api.github.com/users/nicholasg97/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasg97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-03-31T09:13:27Z", "updated_at": "2020-06-11T10:40:19Z", "closed_at": "2020-06-11T10:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting an error when I attempt to use the RelevantFeatureAugmenter both by itself and within a pipeline, both produce the same error. \r\n\r\nI'm having a very similar issue as described [here](https://github.com/blue-yonder/tsfresh/issues/374#issue-307964081).\r\n\r\n\r\nMy original Dataframe \"reframed\" consists of an id, time columns as well as two additional columns, one with my time series lagged by 1 ( 'var1(t-1)' ) and the other with the target time series ( 'var1(t)' ).  Thus my data format is flat. My target and feature columns are both numerical with negative, zero, and positive values. \r\n\r\nMy code is as follows,\r\n\r\n```Python\r\nreframed_features = reframed.drop(columns=['var1(t)'])\r\ny = reframed['var1(t)']\r\n\r\naugmenter = RelevantFeatureAugmenter(column_id='id', column_sort='time')\r\n\r\naugmenter.set_timeseries_container(reframed_features)\r\nX_train = pd.DataFrame(index=y.index)\r\n\r\naugmenter.fit(X_train, y)\r\n```\r\n\r\nThe same of the y Series is (25742,) and of X_train is (25742, 0) while reframed_features has a shape of (25742, 3).  \r\n\r\nThe error I'm getting is \r\n\r\n```\r\nFile \"...\\tsfresh\\utilities\\dataframe_functions.py\", line 138 in _normalize_input_to_internal_representation\r\n\r\ntimeseries_container[column_sort] = np.repeat(sort, (len(timeseries_container) // len(sort))\r\n\r\nZeroDivisionError: integer division or modulo by zero\r\n```\r\n\r\n\r\nWhen I run the \"pipeline_with_two_datasets.ipynb\" everything works just fine. \r\n\r\nIf I add column_kind to the RelevantFeatureAugmenter I get a ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all(). Could this be because I'm attempting to only extract values from one feature (although I just tested this and adding another feature doesn't seem to correct things)? Another area where I think things could be going wrong is that the dataframe I use to \"set_timeseries_container\" is the same length as the X_test I'm attempting to extract. If this is the cause is there no other way to extract the same features on a new data set, this would be a big issue for me as I'm going to be using new \"online\" data all of the time. Please forgive me if I'm making a silly error. Thanks. \r\n\r\n1. Your operating system: Windows 10\r\n2. The version of *tsfresh* that you are using: 0.11.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/523", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/523/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/523/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/523", "id": 426460620, "node_id": "MDU6SXNzdWU0MjY0NjA2MjA=", "number": 523, "title": "tsfresh formatting for column containing list of integers", "user": {"login": "sskulki", "id": 40598921, "node_id": "MDQ6VXNlcjQwNTk4OTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/40598921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sskulki", "html_url": "https://github.com/sskulki", "followers_url": "https://api.github.com/users/sskulki/followers", "following_url": "https://api.github.com/users/sskulki/following{/other_user}", "gists_url": "https://api.github.com/users/sskulki/gists{/gist_id}", "starred_url": "https://api.github.com/users/sskulki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sskulki/subscriptions", "organizations_url": "https://api.github.com/users/sskulki/orgs", "repos_url": "https://api.github.com/users/sskulki/repos", "events_url": "https://api.github.com/users/sskulki/events{/privacy}", "received_events_url": "https://api.github.com/users/sskulki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228434, "node_id": "MDU6TGFiZWw0NjkyMjg0MzQ=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-28T12:17:11Z", "updated_at": "2020-04-11T08:38:18Z", "closed_at": "2020-04-11T08:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nNeed to understand more on tsfresh data processing. Please guid me through it.\r\n\r\n1. Your operating system : Linux\r\n2. The version of *tsfresh* that you are using : \r\n\r\nI have a dataframe containing 4 columns (id, date, col2, col3) and I want to extract the features from col2 and col3. But my col2 and col3 contains list of integers in each row. Can I extract the features using tsfresh? \r\nCould you please guide me how to proceed or any suggestions to preprocess the data before applying tsfresh?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/522", "repository_url": "https://api.github.com/repos/blue-yonder/tsfresh", "labels_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/522/comments", "events_url": "https://api.github.com/repos/blue-yonder/tsfresh/issues/522/events", "html_url": "https://github.com/blue-yonder/tsfresh/issues/522", "id": 426141535, "node_id": "MDU6SXNzdWU0MjYxNDE1MzU=", "number": 522, "title": "Fix coveralls", "user": {"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 469228429, "node_id": "MDU6TGFiZWw0NjkyMjg0Mjk=", "url": "https://api.github.com/repos/blue-yonder/tsfresh/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MaxBenChrist", "id": 13162426, "node_id": "MDQ6VXNlcjEzMTYyNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/13162426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxBenChrist", "html_url": "https://github.com/MaxBenChrist", "followers_url": "https://api.github.com/users/MaxBenChrist/followers", "following_url": "https://api.github.com/users/MaxBenChrist/following{/other_user}", "gists_url": "https://api.github.com/users/MaxBenChrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxBenChrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxBenChrist/subscriptions", "organizations_url": "https://api.github.com/users/MaxBenChrist/orgs", "repos_url": "https://api.github.com/users/MaxBenChrist/repos", "events_url": "https://api.github.com/users/MaxBenChrist/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxBenChrist/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-03-27T19:20:54Z", "updated_at": "2019-11-17T16:20:22Z", "closed_at": "2019-11-17T16:20:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I have the feeling that the coverall integration is broken, will look into that", "performed_via_github_app": null, "score": 1.0}]}