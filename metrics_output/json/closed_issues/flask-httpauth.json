{"total_count": 68, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/108", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/108/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/108/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/108", "id": 687979302, "node_id": "MDU6SXNzdWU2ODc5NzkzMDI=", "number": 108, "title": "Role Based Access Control", "user": {"login": "aniketsnv-1997", "id": 34575457, "node_id": "MDQ6VXNlcjM0NTc1NDU3", "avatar_url": "https://avatars3.githubusercontent.com/u/34575457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aniketsnv-1997", "html_url": "https://github.com/aniketsnv-1997", "followers_url": "https://api.github.com/users/aniketsnv-1997/followers", "following_url": "https://api.github.com/users/aniketsnv-1997/following{/other_user}", "gists_url": "https://api.github.com/users/aniketsnv-1997/gists{/gist_id}", "starred_url": "https://api.github.com/users/aniketsnv-1997/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aniketsnv-1997/subscriptions", "organizations_url": "https://api.github.com/users/aniketsnv-1997/orgs", "repos_url": "https://api.github.com/users/aniketsnv-1997/repos", "events_url": "https://api.github.com/users/aniketsnv-1997/events{/privacy}", "received_events_url": "https://api.github.com/users/aniketsnv-1997/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-28T10:33:32Z", "updated_at": "2020-08-28T10:50:16Z", "closed_at": "2020-08-28T10:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do we implement RBAC using the HTTP Auth functionality? Is there any guide to this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/107", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/107/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/107/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/107", "id": 676070419, "node_id": "MDU6SXNzdWU2NzYwNzA0MTk=", "number": 107, "title": "How to protect \"hidden\" endpoints/routes", "user": {"login": "Querela", "id": 1648294, "node_id": "MDQ6VXNlcjE2NDgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1648294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Querela", "html_url": "https://github.com/Querela", "followers_url": "https://api.github.com/users/Querela/followers", "following_url": "https://api.github.com/users/Querela/following{/other_user}", "gists_url": "https://api.github.com/users/Querela/gists{/gist_id}", "starred_url": "https://api.github.com/users/Querela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Querela/subscriptions", "organizations_url": "https://api.github.com/users/Querela/orgs", "repos_url": "https://api.github.com/users/Querela/repos", "events_url": "https://api.github.com/users/Querela/events{/privacy}", "received_events_url": "https://api.github.com/users/Querela/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-10T11:39:01Z", "updated_at": "2020-08-13T07:17:06Z", "closed_at": "2020-08-13T07:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I protect **arbitrary** routes in my webapp with HTTPAuth?\r\nIn particular, using flask-apispec (swagger) I just initialize the extension and optionally provide setting on what the routes are, e. g.:\r\n\r\n```python\r\nfrom flask_httpauth import HTTPBasicAuth\r\nfrom flask_apispec.extension import FlaskApiSpec\r\nfrom werkzeug.security import check_password_hash\r\n\r\nauth = HTTPBasicAuth()\r\ndocs = FlaskApiSpec()\r\n\r\ndef register_extensions(app):\r\n    # ...\r\n\r\n    @auth.verify_password\r\n    def verify_password(username, password):  # pylint: disable=unused-variable\r\n        users = app.config[\"AUTH_USERS\"]\r\n        for user in users:\r\n            if user[\"name\"] != username:\r\n                continue\r\n            if check_password_hash(user[\"password\"], password):\r\n                return user\r\n        return False\r\n\r\n    @auth.get_user_roles\r\n    def get_user_roles(user):  # pylint: disable=unused-variable\r\n        return user[\"roles\"]\r\n\r\n    # ...\r\n\r\n    app.config.update(\r\n        {\r\n            \"APISPEC_SPEC\": ...,\r\n            \"APISPEC_SWAGGER_URL\": \"/swagger/\",\r\n            \"APISPEC_SWAGGER_UI_URL\": \"/swagger-ui/\",\r\n        }\r\n    )\r\n    docs.init_app(app)\r\n\r\n    # ...\r\n```\r\n\r\nFlask-HTTPAuth only provides decorators for me, so how can I protect those routes that are not declared by me? (Besides only enabling the apispec extension in Development/Testing environments.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/106", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/106/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/106/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/106", "id": 676065839, "node_id": "MDU6SXNzdWU2NzYwNjU4Mzk=", "number": 106, "title": "HTTP Method-based role authentiation", "user": {"login": "Querela", "id": 1648294, "node_id": "MDQ6VXNlcjE2NDgyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1648294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Querela", "html_url": "https://github.com/Querela", "followers_url": "https://api.github.com/users/Querela/followers", "following_url": "https://api.github.com/users/Querela/following{/other_user}", "gists_url": "https://api.github.com/users/Querela/gists{/gist_id}", "starred_url": "https://api.github.com/users/Querela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Querela/subscriptions", "organizations_url": "https://api.github.com/users/Querela/orgs", "repos_url": "https://api.github.com/users/Querela/repos", "events_url": "https://api.github.com/users/Querela/events{/privacy}", "received_events_url": "https://api.github.com/users/Querela/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-10T11:31:10Z", "updated_at": "2020-08-13T17:03:07Z", "closed_at": "2020-08-13T17:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my REST API webapp, I wanted to provide read-only access as well as read-and-write access using different roles for different HTTP methods, and both protected by HTTPBasicAuth.\r\n\r\nMy current (working) solution is:\r\n```python\r\n# logging just to trace calls\r\nfrom functools import wraps\r\n\r\nfrom flask import Blueprint\r\nfrom flask import current_app\r\nfrom flask import request\r\n\r\nfrom ..app import auth\r\n\r\nbp_api = Blueprint(\"api\", __name__)\r\n\r\ndef login_required_method_filter(role, methods=None):\r\n    def filter_method_decorator(f):\r\n        @wraps(f)\r\n        def decorated_function(*args, **kwargs):\r\n            current_app.logger.warning(\r\n                \"request? - %s - %s of %s - %s\",\r\n                request.endpoint,\r\n                request.method,\r\n                methods,\r\n                role,\r\n            )\r\n            if methods and request.method not in methods:\r\n                # ignore and continue with request\r\n                return None\r\n\r\n            f_authd = auth.login_required(role=role)(f)\r\n            return f_authd(*args, **kwargs)\r\n\r\n        return decorated_function\r\n\r\n    return filter_method_decorator\r\n\r\n\r\n@bp_api.before_request\r\n@login_required_method_filter(role=\"api-rw\", methods=(\"POST\", \"DELETE\", \"PUT\"))\r\ndef before_request_rw():\r\n    \"\"\"Protect write API routes\"\"\"\r\n    current_app.logger.warning(\r\n        \"before_request_rw - %s - %s\", request.endpoint, request.method\r\n    )\r\n\r\n\r\n@bp_api.before_request\r\n@login_required_method_filter(role=\"api-ro\", methods=(\"GET\", \"HEAD\", \"OPTIONS\"))\r\ndef before_request_ro():\r\n    \"\"\"Protect API routes\"\"\"\r\n    # user = auth.current_user()\r\n    # roles = user[\"roles\"]\r\n    # if request.method in (\"GET\", \"HEAD\") ...\r\n    current_app.logger.warning(\r\n        \"before_request_ro - %s - %s\", request.endpoint, request.method\r\n    )\r\n\r\n# api methods, using MethodViews or MethodResource from flask_apispec\r\n```\r\n\r\n```python\r\n# app httpauth configs\r\n\"AUTH_USERS\": [\r\n    {\r\n        \"name\": \"api-ro\",\r\n        \"password\": generate_password_hash(\"api-ro\"),\r\n        \"roles\": [\"api-ro\"],\r\n    },\r\n    {\r\n        \"name\": \"api-rw\",\r\n        \"password\": generate_password_hash(\"api-rw\"),\r\n        \"roles\": [\"api-rw\", \"api-ro\"],\r\n    },\r\n]\r\n```\r\n\r\nThe idea is that the authentiation with roles only checks if the correct HTTP method is used, else the method is unprotected. But with covering all HTTP methods, one check will work and protect using the given role. So the main issue is when not all HTTP methods are covered with handlers it could potentially let a request through. (`methods=None` is the catch-all to protect against this)\r\n\r\nIn my tests it works reliably. The only problem for me is currently (in my browser) how to disable old tokens, e. g. if I want to switch between read+write and read-only ...\r\n\r\nMaybe this is a use-case that is interesting for others or can even be included into this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/104", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/104/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/104/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/104", "id": 641003955, "node_id": "MDU6SXNzdWU2NDEwMDM5NTU=", "number": 104, "title": "Using API key", "user": {"login": "wronsini", "id": 242370, "node_id": "MDQ6VXNlcjI0MjM3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wronsini", "html_url": "https://github.com/wronsini", "followers_url": "https://api.github.com/users/wronsini/followers", "following_url": "https://api.github.com/users/wronsini/following{/other_user}", "gists_url": "https://api.github.com/users/wronsini/gists{/gist_id}", "starred_url": "https://api.github.com/users/wronsini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wronsini/subscriptions", "organizations_url": "https://api.github.com/users/wronsini/orgs", "repos_url": "https://api.github.com/users/wronsini/repos", "events_url": "https://api.github.com/users/wronsini/events{/privacy}", "received_events_url": "https://api.github.com/users/wronsini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T08:13:45Z", "updated_at": "2020-06-18T11:50:16Z", "closed_at": "2020-06-18T11:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use API keys? I added a code in my fork to do this but I wonder if the original code is already capable of doing this.\r\n\r\nMy code is:\r\n\r\n```python\r\nclass HTTPApiKeyAuth(HTTPAuth):\r\n    def __init__(self, scheme='APIKey', realm=None):\r\n        super(HTTPApiKeyAuth, self).__init__(scheme, realm)\r\n        self.verify_token_callback = None\r\n\r\n    def verify_apikey(self, f):\r\n        self.verify_token_callback = f\r\n        return f\r\n\r\n    def get_auth(self):\r\n        auth = request.authorization\r\n        if auth is None and self.scheme in request.headers:\r\n            try:\r\n                apikey = request.headers[self.scheme]\r\n                auth_type = 'apikey'\r\n                auth = Authorization(auth_type, {'apikey': apikey})\r\n            except ValueError as ex:\r\n                # The Authorization header is either empty or has no api key\r\n                pass\r\n\r\n        elif auth is None and self.scheme in request.args:\r\n            try:\r\n                apikey = request.args[self.scheme]\r\n                if len(apikey) > 0:\r\n                    auth_type = 'apikey'\r\n                    auth = Authorization(auth_type, {'apikey': apikey})\r\n            except ValueError:\r\n                # Not found 'apikey' in query string\r\n                pass\r\n\r\n        # if the auth type does not match, we act as if there is no auth\r\n        # this is better than failing directly, as it allows the callback\r\n        # to handle special cases, like supporting multiple auth types\r\n        if auth is not None and auth.type.lower() != self.scheme.lower():\r\n            auth = None\r\n\r\n        return auth\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/101", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/101/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/101/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/101", "id": 604869403, "node_id": "MDU6SXNzdWU2MDQ4Njk0MDM=", "number": 101, "title": "call decorated verify_password", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T15:55:38Z", "updated_at": "2020-04-22T20:29:30Z", "closed_at": "2020-04-22T20:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering\r\n```\r\n    @auth.verify_password\r\n    def authenticate(username, password):\r\n```\r\n\r\nWe use flask as a proxy to a 3rd party website, and `HTTPBasicAuth()` to capture the credentials to pass on to the logon page and get the cookies (with requests).\r\n\r\nSometimes the target website abruptly closes the connection/session and we need to re-authenticate, which we initially do in `authenticate()`\r\n\r\nIs there a way to force for a re-authentication or call `authenticate()` from another function without passing the authenticated password ?\r\n\r\nIf not, I rather not store the user password in `g` or in flask's `session` but had hoped auth.get_password()` or similar would return it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/100", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/100/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/100/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/100", "id": 601323554, "node_id": "MDU6SXNzdWU2MDEzMjM1NTQ=", "number": 100, "title": "Authentication Help", "user": {"login": "marianakhoul", "id": 31465978, "node_id": "MDQ6VXNlcjMxNDY1OTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/31465978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marianakhoul", "html_url": "https://github.com/marianakhoul", "followers_url": "https://api.github.com/users/marianakhoul/followers", "following_url": "https://api.github.com/users/marianakhoul/following{/other_user}", "gists_url": "https://api.github.com/users/marianakhoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/marianakhoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marianakhoul/subscriptions", "organizations_url": "https://api.github.com/users/marianakhoul/orgs", "repos_url": "https://api.github.com/users/marianakhoul/repos", "events_url": "https://api.github.com/users/marianakhoul/events{/privacy}", "received_events_url": "https://api.github.com/users/marianakhoul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-16T18:36:06Z", "updated_at": "2020-04-17T14:17:02Z", "closed_at": "2020-04-17T14:17:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to authenticate my API.\r\n\r\nsome background information:\r\nI am using the HTTPBasicAuth() function (if you recommend anything else for this situation I do not mind changing the code)\r\n\r\nBelow is my app.py script \r\n```\r\nusers={}\r\nsecrets = \"./secrets.json\" \r\nwith open(secrets, 'r') as c:\r\n    secrets_json = json.load(c)\r\n\r\nuser = secrets_json['API']['user']\r\npassword = secrets_json['API']['password']\r\nusers[user] = generate_password_hash(password)\r\n\r\napp = Flask(__name__)\r\nauth = HTTPBasicAuth()\r\n\r\n@auth.verify_password\r\ndef verify_password(username, password):\r\n    if username in users:\r\n          return check_password_hash(users.get(username), password)\r\n    return False\r\n\r\n@app.route(\"/\",methods=[\"GET\"])\r\n@auth.login_required\r\ndef main():\r\n    return \"Hello World\"\r\n\r\n@app.route(\"/annotate/\",methods=[\"GET\"])\r\n@auth.login_required\r\ndef annotate():\r\n#Annotate functions.....\r\n\r\nif __name__ == \"__main__\":\r\n    http_server = WSGIServer(('0.0.0.0',5000), app)\r\n    http_server.serve_forever()\r\n\r\n```\r\n\r\nWhen I am using: curl -u Maria http://localhost:5000/\r\nIt asks for authentication, but if I call the annotate function using: \r\ncurl -u Maria http://localhost:5000/annotate/gene=BRAF&protein_change=V600E&variant_type=MISSENSE\r\n\r\nIt doesn't ask for authentication.\r\n\r\nI also want it to ask for authentication when using a web browser. When I ran it the first time, it asked through the browser but that was it. I was reading through your other issues and comments and you said it asks only once, but how can I make it ask every time?\r\n\r\nThank you very much for any help you can provide!\r\nMaria Nakhoul\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/98", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/98/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/98/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/98", "id": 596458848, "node_id": "MDU6SXNzdWU1OTY0NTg4NDg=", "number": 98, "title": "adds role based access control", "user": {"login": "gemerden", "id": 4526943, "node_id": "MDQ6VXNlcjQ1MjY5NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4526943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gemerden", "html_url": "https://github.com/gemerden", "followers_url": "https://api.github.com/users/gemerden/followers", "following_url": "https://api.github.com/users/gemerden/following{/other_user}", "gists_url": "https://api.github.com/users/gemerden/gists{/gist_id}", "starred_url": "https://api.github.com/users/gemerden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gemerden/subscriptions", "organizations_url": "https://api.github.com/users/gemerden/orgs", "repos_url": "https://api.github.com/users/gemerden/repos", "events_url": "https://api.github.com/users/gemerden/events{/privacy}", "received_events_url": "https://api.github.com/users/gemerden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123229, "node_id": "MDU6TGFiZWw0MDEyMzIyOQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-04-08T10:02:16Z", "updated_at": "2020-06-15T17:30:17Z", "closed_at": "2020-04-20T09:47:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For my own project i have added a simple way to add role based access control to BasicAuth: \r\n\r\n```\r\nclass HTTPRoleAuth(flask_httpauth.HTTPBasicAuth):\r\n    def __init__(self, scheme=None, realm=None):\r\n        super().__init__(scheme, realm)\r\n        self.get_user_roles_callback = None\r\n\r\n    def get_user_roles(self, f):\r\n        \"\"\" user roles are the roles the user has \"\"\"\r\n        self.get_user_roles_callback = f\r\n        return f\r\n\r\n    def roles_required(self, *endpoint_roles):\r\n        \"\"\" endpoint roles are the roles (str) the user has to have to get access to the (decorated) endpoint \"\"\"\r\n        def decorator(f):\r\n            @wraps(f)\r\n            def decorated(*args, **kwargs):\r\n                \"\"\" basically the login_required decorated but with a check of 'authorize' \"\"\"\r\n                auth = self.get_auth()\r\n                if request.method != 'OPTIONS':  # pragma: no cover\r\n                    password = self.get_auth_password(auth)\r\n\r\n                    if not (self.authenticate(auth, password) and\r\n                            self.authorize(auth, endpoint_roles)):\r\n                        request.data  # empty the stream\r\n                        return self.auth_error_callback()\r\n\r\n                return f(*args, **kwargs)\r\n            return decorated\r\n        return decorator\r\n\r\n    def authorize(self, auth, endpoint_roles):\r\n        \"\"\" if any of the roles of the user correspond to the endpoint roles; the user gets access \"\"\"\r\n        if not auth.username:\r\n            return False\r\n        user_roles = self.get_user_roles_callback(auth.username)\r\n        return any(role in endpoint_roles for role in user_roles)\r\n```\r\nused as in:\r\n   \r\n```\r\n    @route('/try_roles/<data>', methods=['GET'])\r\n    @auth.roles_required(\"super\", \"security\")\r\n    def try_login_with_roles(self, data):\r\n        \"\"\" roles test url \"\"\"\r\n        return {\"success\": True, \"data\": data}\r\n```\r\ncompared to:\r\n\r\n```\r\n    @route('/try_login/<data>', methods=['GET'])\r\n    @auth.login_required\r\n    def try_login(self, data):\r\n        \"\"\" login test url \"\"\"\r\n        return {\"success\": True, \"data\": data}\r\n```\r\nwith `roles_required` a replacement for `login_required` with the additional requirement that the user has one of the roles (obtained through the `get_user_roles` callback) set by the decorator.\r\n\r\nIs this something to add to the repo?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/96", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/96/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/96/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/96", "id": 574959356, "node_id": "MDU6SXNzdWU1NzQ5NTkzNTY=", "number": 96, "title": "Add functionality to accept other header names", "user": {"login": "pangolingo", "id": 1423865, "node_id": "MDQ6VXNlcjE0MjM4NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1423865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pangolingo", "html_url": "https://github.com/pangolingo", "followers_url": "https://api.github.com/users/pangolingo/followers", "following_url": "https://api.github.com/users/pangolingo/following{/other_user}", "gists_url": "https://api.github.com/users/pangolingo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pangolingo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pangolingo/subscriptions", "organizations_url": "https://api.github.com/users/pangolingo/orgs", "repos_url": "https://api.github.com/users/pangolingo/repos", "events_url": "https://api.github.com/users/pangolingo/events{/privacy}", "received_events_url": "https://api.github.com/users/pangolingo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123229, "node_id": "MDU6TGFiZWw0MDEyMzIyOQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-03T21:30:31Z", "updated_at": "2020-04-26T22:32:10Z", "closed_at": "2020-04-26T22:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently did some work where I needed to accept both an API key and a token with HTTPAuth.\r\nI ended up subclassing `HTTPTokenAuth` to look for the API key on a header called `X-API-Key` (`X-API-KEY: my_api_key`).\r\n\r\nIt would be cool if this library supported other header names besides just an `Authorization` header for tokens.\r\n\r\nMy code ended up looking something like this:\r\n\r\n```python\r\nclass HTTPAPIKeyAuth(HTTPTokenAuth):\r\n    \"\"\"\r\n    Extension of the HTTPTokenAuth class to allow sending a header like\r\n    \"X-API-KEY: my_api_key\"\r\n    It doesn't use the \"Authorization\" header name and doesn't use a scheme type\r\n    \"\"\"\r\n    def __init__(self):\r\n        super(HTTPAPIKeyAuth, self).__init__(None, None)\r\n        self.verify_token_callback = None\r\n\r\n    def get_auth(self):\r\n        if 'X-API-Key' in request.headers:\r\n            return Authorization('api_key', {'token': request.headers['X-API-Key']})\r\n        return None\r\n\r\napiKeyAuth = HTTPAPIKeyAuth()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/94", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/94/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/94/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/94", "id": 554253245, "node_id": "MDU6SXNzdWU1NTQyNTMyNDU=", "number": 94, "title": "Digest Authentication with Edge browser", "user": {"login": "c-goes", "id": 23212798, "node_id": "MDQ6VXNlcjIzMjEyNzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/23212798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-goes", "html_url": "https://github.com/c-goes", "followers_url": "https://api.github.com/users/c-goes/followers", "following_url": "https://api.github.com/users/c-goes/following{/other_user}", "gists_url": "https://api.github.com/users/c-goes/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-goes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-goes/subscriptions", "organizations_url": "https://api.github.com/users/c-goes/orgs", "repos_url": "https://api.github.com/users/c-goes/repos", "events_url": "https://api.github.com/users/c-goes/events{/privacy}", "received_events_url": "https://api.github.com/users/c-goes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-23T16:06:37Z", "updated_at": "2020-05-30T19:25:39Z", "closed_at": "2020-01-24T02:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm testing the extension with the old Edge browser (without Chromium).\r\n\r\nUsing the example for Digest authentication, the Edge browser is probably not sending the correct Header line. The server repeats 401 Error codes even when Login is correct.\r\n\r\nIt could be a bug in Edge.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/93", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/93/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/93/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/93", "id": 548293566, "node_id": "MDU6SXNzdWU1NDgyOTM1NjY=", "number": 93, "title": "How to return more information from verify_token", "user": {"login": "bshetti", "id": 1472322, "node_id": "MDQ6VXNlcjE0NzIzMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1472322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bshetti", "html_url": "https://github.com/bshetti", "followers_url": "https://api.github.com/users/bshetti/followers", "following_url": "https://api.github.com/users/bshetti/following{/other_user}", "gists_url": "https://api.github.com/users/bshetti/gists{/gist_id}", "starred_url": "https://api.github.com/users/bshetti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bshetti/subscriptions", "organizations_url": "https://api.github.com/users/bshetti/orgs", "repos_url": "https://api.github.com/users/bshetti/repos", "events_url": "https://api.github.com/users/bshetti/events{/privacy}", "received_events_url": "https://api.github.com/users/bshetti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-10T21:13:57Z", "updated_at": "2020-04-10T14:08:15Z", "closed_at": "2020-04-10T14:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using verify_token(token)\r\nseems like I can return False or True.\r\nIf I return False then I get \"Unauthorized Access\"\r\nHow do I modify this to return more information?\r\ni.e. \"Unauthorized Access - due to bad token format\" \r\netc?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/92", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/92/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/92/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/92", "id": 544098295, "node_id": "MDU6SXNzdWU1NDQwOTgyOTU=", "number": 92, "title": "Does the wheel not support HTTP DIgest in RFC 2617 protocol?", "user": {"login": "chen-zhuohan", "id": 53888869, "node_id": "MDQ6VXNlcjUzODg4ODY5", "avatar_url": "https://avatars3.githubusercontent.com/u/53888869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chen-zhuohan", "html_url": "https://github.com/chen-zhuohan", "followers_url": "https://api.github.com/users/chen-zhuohan/followers", "following_url": "https://api.github.com/users/chen-zhuohan/following{/other_user}", "gists_url": "https://api.github.com/users/chen-zhuohan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chen-zhuohan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chen-zhuohan/subscriptions", "organizations_url": "https://api.github.com/users/chen-zhuohan/orgs", "repos_url": "https://api.github.com/users/chen-zhuohan/repos", "events_url": "https://api.github.com/users/chen-zhuohan/events{/privacy}", "received_events_url": "https://api.github.com/users/chen-zhuohan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T06:02:50Z", "updated_at": "2019-12-31T12:25:00Z", "closed_at": "2019-12-31T12:22:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find where to choose qop's value. It seems like that it only supports HTTP DIgest in RFC 2069 protocol", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/90", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/90/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/90/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/90", "id": 535482575, "node_id": "MDU6SXNzdWU1MzU0ODI1NzU=", "number": 90, "title": "Add login_optional decorator", "user": {"login": "smmalmansoori", "id": 3144938, "node_id": "MDQ6VXNlcjMxNDQ5Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3144938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smmalmansoori", "html_url": "https://github.com/smmalmansoori", "followers_url": "https://api.github.com/users/smmalmansoori/followers", "following_url": "https://api.github.com/users/smmalmansoori/following{/other_user}", "gists_url": "https://api.github.com/users/smmalmansoori/gists{/gist_id}", "starred_url": "https://api.github.com/users/smmalmansoori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smmalmansoori/subscriptions", "organizations_url": "https://api.github.com/users/smmalmansoori/orgs", "repos_url": "https://api.github.com/users/smmalmansoori/repos", "events_url": "https://api.github.com/users/smmalmansoori/events{/privacy}", "received_events_url": "https://api.github.com/users/smmalmansoori/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123229, "node_id": "MDU6TGFiZWw0MDEyMzIyOQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-10T04:18:56Z", "updated_at": "2020-04-26T18:16:38Z", "closed_at": "2020-04-26T18:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having a ~~`login_accepted`~~ `login_optional` decorator in the `HTTPAuth` class would help build endpoints where authentication is optional as opposed to `login_required` (for example to add extra data when authenticated).\r\n\r\nI'm aware of issue #17 which led to providing a workaround using `verify_password` in the `HTTPBasicAuth` class but that only works for basic auth and would lead to adding `basic_auth.login_required` which communicates the wrong intent.\r\n\r\nIt can be implemented with something like this:\r\n```python\r\nclass HTTPAuth(object):\r\n    # ...\r\n\r\n    def login_optional(self, f):\r\n        @wraps(f)\r\n        def decorated(*args, **kwargs):\r\n            auth = self.get_auth()\r\n\r\n            # Flask normally handles OPTIONS requests on its own, but in the\r\n            # case it is configured to forward those to the application, we\r\n            # need to ignore authentication headers and let the request through\r\n            # to avoid unwanted interactions with CORS.\r\n            if request.method != 'OPTIONS':  # pragma: no cover\r\n                password = self.get_auth_password(auth)\r\n                self.authenticate(auth, password)\r\n\r\n            return f(*args, **kwargs)\r\n        return decorated\r\n```\r\n\r\n- In this decorator I don't think there is need to worry about connection resets brought up by issue #38 since the function at the route would be running anyways\r\n- I think this should work for both `HTTPBasicAuth` and `HTTPTokenAuth` but don't know about `HTTPDigestAuth` since I don't use it\r\n\r\nI use this already by inheriting `HTTPTokenAuth` and adding the decorator, but thought I'd share it in case there is interest in adding it to the library or sharing the pattern in the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/89", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/89/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/89/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/89", "id": 515781409, "node_id": "MDU6SXNzdWU1MTU3ODE0MDk=", "number": 89, "title": "Error with HTTPAuth by using Custom verify", "user": {"login": "Chaostheorie", "id": 42151227, "node_id": "MDQ6VXNlcjQyMTUxMjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/42151227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chaostheorie", "html_url": "https://github.com/Chaostheorie", "followers_url": "https://api.github.com/users/Chaostheorie/followers", "following_url": "https://api.github.com/users/Chaostheorie/following{/other_user}", "gists_url": "https://api.github.com/users/Chaostheorie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chaostheorie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chaostheorie/subscriptions", "organizations_url": "https://api.github.com/users/Chaostheorie/orgs", "repos_url": "https://api.github.com/users/Chaostheorie/repos", "events_url": "https://api.github.com/users/Chaostheorie/events{/privacy}", "received_events_url": "https://api.github.com/users/Chaostheorie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T22:14:22Z", "updated_at": "2019-11-01T15:15:30Z", "closed_at": "2019-11-01T15:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a broken auth that hangs, itdelf up in the verify_password phase\r\nFor the creation I have followed the Blog Entry/ guide [Here](https://blog.miguelgrinberg.com/post/restful-authentication-with-flask) for creating the basic sheme with HTTPAuth\r\nTo reproduce (testeed on ubuntu 19.04/PYthon 3.7.3):\r\ngit clone https://github.com/Chaostheorie/Penta-Tournament \r\ncd https://github.com/Chaostheorie/Penta-Tournament\r\n(virtualenv -p python3 venv)\r\npip3 install -r requeriemtns.txt\r\npython3 main.py\r\n\r\nNow start a post (JSON) request to localhost:5000/api/user/sign-in and create your user \r\nThen try to get your token at localhost:5000/api/user/token\r\n\r\nThe authentication will crash at the point with the traceback:\r\nAttributeError: 'Flask' object has no attribute 'lower'\r\n127.0.0.1 - - [31/Oct/2019 22:58:31] \"POST /api/user/token HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 2463, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 2449, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 1866, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/home/<user>Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask_httpauth.py\", line 91, in decorated\r\n    auth = self.get_auth()\r\n  File \"/home/<user>/Penta-Tournament/Backend/venv/lib/python3.7/site-packages/flask_httpauth.py\", line 75, in get_auth\r\n    if auth is not None and auth.type.lower() != self.scheme.lower():\r\nAttributeError: 'Flask' object has no attribute 'lower'\r\n\r\nI don't really get how the Flask Object ended up there and how I can pass the right thing for this function\r\nThanks in advance ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/88", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/88/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/88/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/88", "id": 500965548, "node_id": "MDU6SXNzdWU1MDA5NjU1NDg=", "number": 88, "title": "Integration with Flask-Login's current_user", "user": {"login": "mfrlin", "id": 1454607, "node_id": "MDQ6VXNlcjE0NTQ2MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1454607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfrlin", "html_url": "https://github.com/mfrlin", "followers_url": "https://api.github.com/users/mfrlin/followers", "following_url": "https://api.github.com/users/mfrlin/following{/other_user}", "gists_url": "https://api.github.com/users/mfrlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfrlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfrlin/subscriptions", "organizations_url": "https://api.github.com/users/mfrlin/orgs", "repos_url": "https://api.github.com/users/mfrlin/repos", "events_url": "https://api.github.com/users/mfrlin/events{/privacy}", "received_events_url": "https://api.github.com/users/mfrlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-01T15:14:33Z", "updated_at": "2019-10-07T08:26:42Z", "closed_at": "2019-10-07T06:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Flask-Login to do cookie based authentication and it works ok. Now I've added API that I authenticate via token with HTTPAuth. The problem I now have is that `current_user` is not set because I only do `g.current_user = user` and I don't know how to set the `current_user` that comes with Flask-Login. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/87", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/87/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/87/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/87", "id": 479210326, "node_id": "MDU6SXNzdWU0NzkyMTAzMjY=", "number": 87, "title": "token auth not validating correctly", "user": {"login": "schirino", "id": 25776145, "node_id": "MDQ6VXNlcjI1Nzc2MTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/25776145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schirino", "html_url": "https://github.com/schirino", "followers_url": "https://api.github.com/users/schirino/followers", "following_url": "https://api.github.com/users/schirino/following{/other_user}", "gists_url": "https://api.github.com/users/schirino/gists{/gist_id}", "starred_url": "https://api.github.com/users/schirino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schirino/subscriptions", "organizations_url": "https://api.github.com/users/schirino/orgs", "repos_url": "https://api.github.com/users/schirino/repos", "events_url": "https://api.github.com/users/schirino/events{/privacy}", "received_events_url": "https://api.github.com/users/schirino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-10T00:44:55Z", "updated_at": "2019-10-17T09:40:42Z", "closed_at": "2019-10-17T09:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I protected a route with Bearer.  Then tried to connect to it with Postman.  If I enter the correct token I see the page.  If I enter the wrong token I get an unauthorized message.  \r\n\r\nIf I enter no password at all I am authenticated and see the page.  If I send Basic Authentication with bogus credentials, I also see the page.\r\n\r\n```\r\nauth = HTTPTokenAuth(scheme='Bearer')\r\nauth2 = HTTPBasicAuth()\r\n```\r\n```\r\n@auth.verify_token\r\ndef verify_token(token):\r\n    if token in tokens:\r\n        return True\r\n    return False\r\n\r\n@auth2.verify_password\r\ndef verify_password(username, password):\r\n    if username in users:\r\n        return check_password_hash(users.get(username), password)\r\n    return False\r\n```\r\n```\r\n@app.route('/api/sites', methods = ['GET'])\r\n@auth.login_required\r\ndef get_sites():\r\n    sites = Site.query.all()\r\n    result = sites_schema.dump(sites)\r\n    return jsonify(result.data)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/86", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/86/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/86/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/86", "id": 452787879, "node_id": "MDU6SXNzdWU0NTI3ODc4Nzk=", "number": 86, "title": "Post token cannot use Bearer frefix, but Token is ok", "user": {"login": "de8ug", "id": 5234979, "node_id": "MDQ6VXNlcjUyMzQ5Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5234979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/de8ug", "html_url": "https://github.com/de8ug", "followers_url": "https://api.github.com/users/de8ug/followers", "following_url": "https://api.github.com/users/de8ug/following{/other_user}", "gists_url": "https://api.github.com/users/de8ug/gists{/gist_id}", "starred_url": "https://api.github.com/users/de8ug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/de8ug/subscriptions", "organizations_url": "https://api.github.com/users/de8ug/orgs", "repos_url": "https://api.github.com/users/de8ug/repos", "events_url": "https://api.github.com/users/de8ug/events{/privacy}", "received_events_url": "https://api.github.com/users/de8ug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-06T01:26:19Z", "updated_at": "2019-06-06T01:39:30Z", "closed_at": "2019-06-06T01:39:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/miguelgrinberg/Flask-HTTPAuth/tree/master/examples  got it, thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/84", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/84/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/84/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/84", "id": 443290332, "node_id": "MDU6SXNzdWU0NDMyOTAzMzI=", "number": 84, "title": "How should I send the request from front-end?", "user": {"login": "wizounovziki", "id": 42036658, "node_id": "MDQ6VXNlcjQyMDM2NjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/42036658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizounovziki", "html_url": "https://github.com/wizounovziki", "followers_url": "https://api.github.com/users/wizounovziki/followers", "following_url": "https://api.github.com/users/wizounovziki/following{/other_user}", "gists_url": "https://api.github.com/users/wizounovziki/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizounovziki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizounovziki/subscriptions", "organizations_url": "https://api.github.com/users/wizounovziki/orgs", "repos_url": "https://api.github.com/users/wizounovziki/repos", "events_url": "https://api.github.com/users/wizounovziki/events{/privacy}", "received_events_url": "https://api.github.com/users/wizounovziki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-13T09:17:46Z", "updated_at": "2019-06-03T08:03:59Z", "closed_at": "2019-06-03T08:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Miguel,\r\nThanks for sharing.\r\nBut I got some trouble when I try to send request to those login_required route with my react front-end.\r\nmy headers is written as :\r\n                                               fetch(\"http://localhost:5000/resource\",{\r\n                                                  method:'get',\r\n                                                  headers:{'Content-Type':'application/json',\r\n                                                  'Authorization': 'Token' + token,\r\n                                                  }\r\n                                                })\r\nAlso I searched and  tried many other property names like \"token\",\"Authorization\" etc.\r\nSo how should I deal with the request format?The back-end part is almost the same as yours.\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/82", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/82/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/82/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/82", "id": 431059395, "node_id": "MDU6SXNzdWU0MzEwNTkzOTU=", "number": 82, "title": "Default password comparison should use constant-time string comparison", "user": {"login": "brendanlong", "id": 1447206, "node_id": "MDQ6VXNlcjE0NDcyMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1447206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanlong", "html_url": "https://github.com/brendanlong", "followers_url": "https://api.github.com/users/brendanlong/followers", "following_url": "https://api.github.com/users/brendanlong/following{/other_user}", "gists_url": "https://api.github.com/users/brendanlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanlong/subscriptions", "organizations_url": "https://api.github.com/users/brendanlong/orgs", "repos_url": "https://api.github.com/users/brendanlong/repos", "events_url": "https://api.github.com/users/brendanlong/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanlong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-09T16:24:19Z", "updated_at": "2019-05-19T10:22:16Z", "closed_at": "2019-05-19T10:22:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The default for comparing passwords is `client_password == stored_password`:\r\n\r\nhttps://github.com/miguelgrinberg/Flask-HTTPAuth/blob/master/flask_httpauth.py#L146\r\n\r\nThis is a problem because Python compares strings character-by-character, so a password closer to the correct password takes longer to check. You might expect that this doesn't matter, but with thousands of requests and some statistics, an attacker can guess the password much faster than they should be able to:\r\n\r\nhttps://codahale.com/a-lesson-in-timing-attacks/\r\n\r\nThere are two options for working around this (not including \"don't use plaintext passwords\"):\r\n\r\n - Use a constant-time string comparison like [`hmac.compare_digest`](https://docs.python.org/3/library/hmac.html#hmac.compare_digest). This seems to require Python 3.3 but you could also just vendor this function.\r\n - Compare hashes. It's kind of silly to hash two plaintext passwords, but this is the simplest way to avoid timing attacks in this comparison. For this purpose, the hash function doesn't really matter very much and you just want it to be fast (MD5 would be fine, but SHA1 will probably get you fewer people complaining about things they don't understand)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/80", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/80/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/80/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/80", "id": 413825652, "node_id": "MDU6SXNzdWU0MTM4MjU2NTI=", "number": 80, "title": "In security context, examples in documentation are terrible", "user": {"login": "thugcee", "id": 20202, "node_id": "MDQ6VXNlcjIwMjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/20202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thugcee", "html_url": "https://github.com/thugcee", "followers_url": "https://api.github.com/users/thugcee/followers", "following_url": "https://api.github.com/users/thugcee/following{/other_user}", "gists_url": "https://api.github.com/users/thugcee/gists{/gist_id}", "starred_url": "https://api.github.com/users/thugcee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thugcee/subscriptions", "organizations_url": "https://api.github.com/users/thugcee/orgs", "repos_url": "https://api.github.com/users/thugcee/repos", "events_url": "https://api.github.com/users/thugcee/events{/privacy}", "received_events_url": "https://api.github.com/users/thugcee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436569770, "node_id": "MDU6TGFiZWw0MzY1Njk3NzA=", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/documentation", "name": "documentation", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-02-24T14:06:00Z", "updated_at": "2019-05-19T14:12:33Z", "closed_at": "2019-05-19T14:12:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got interested in Flask-HTTPAuth so I've started reading its documentation and this is what I can see in examples: clear text passwords, MD5 and SHA. It gives a bad first impression or even sheds a bad light on the framework (like nobody cares about security here). I can understand that there is `get_password` callback for those who want to play with authorization on their laptops, but in my opinion `hash_password` should be deprecated and example for `verify_password` should use BCrypt or something like that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/78", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/78/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/78/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/78", "id": 395066771, "node_id": "MDU6SXNzdWUzOTUwNjY3NzE=", "number": 78, "title": "Cannot call hash_password with one argument", "user": {"login": "Vayel", "id": 6124369, "node_id": "MDQ6VXNlcjYxMjQzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6124369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vayel", "html_url": "https://github.com/Vayel", "followers_url": "https://api.github.com/users/Vayel/followers", "following_url": "https://api.github.com/users/Vayel/following{/other_user}", "gists_url": "https://api.github.com/users/Vayel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vayel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vayel/subscriptions", "organizations_url": "https://api.github.com/users/Vayel/orgs", "repos_url": "https://api.github.com/users/Vayel/repos", "events_url": "https://api.github.com/users/Vayel/events{/privacy}", "received_events_url": "https://api.github.com/users/Vayel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-01T08:52:02Z", "updated_at": "2019-01-01T09:57:50Z", "closed_at": "2019-01-01T09:57:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation gives this example:\r\n\r\n```python\r\n@auth.hash_password\r\ndef hash_pw(password):\r\n    return md5(password).hexdigest()\r\n```\r\n\r\nBut this code raises two exceptions:\r\n\r\n```\r\nTypeError: hash_pw() takes 1 positional argument but 2 were given\r\n```\r\n\r\nAfter the above is fixed:\r\n\r\n```\r\n...\r\n    return hashlib.sha512(password).hexdigest()\r\nTypeError: Unicode-objects must be encoded before hashing\r\n```\r\n\r\nThe following code works:\r\n\r\n```python\r\n@auth.hash_password\r\ndef hash_pw(username, password):\r\n    return hashlib.sha512(password.encode(\"utf8\")).hexdigest()\r\n```\r\n\r\nI am using Python 3.7 and Flask is served through gevent.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/77", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/77/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/77/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/77", "id": 381296466, "node_id": "MDU6SXNzdWUzODEyOTY0NjY=", "number": 77, "title": "HTTPTokenAuth scheme is an optional init param", "user": {"login": "maxslimmer", "id": 4123228, "node_id": "MDQ6VXNlcjQxMjMyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4123228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxslimmer", "html_url": "https://github.com/maxslimmer", "followers_url": "https://api.github.com/users/maxslimmer/followers", "following_url": "https://api.github.com/users/maxslimmer/following{/other_user}", "gists_url": "https://api.github.com/users/maxslimmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxslimmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxslimmer/subscriptions", "organizations_url": "https://api.github.com/users/maxslimmer/orgs", "repos_url": "https://api.github.com/users/maxslimmer/repos", "events_url": "https://api.github.com/users/maxslimmer/events{/privacy}", "received_events_url": "https://api.github.com/users/maxslimmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T18:59:54Z", "updated_at": "2018-11-15T19:20:57Z", "closed_at": "2018-11-15T19:20:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs state that the scheme parameter to HTTPTokenAuth class is required, but in source it looks like it's optional (scheme=\"Bearer\")? \r\n[https://github.com/miguelgrinberg/Flask-HTTPAuth/blob/master/docs/index.rst#welcome-to-flask-httpauths-documentation](https://github.com/miguelgrinberg/Flask-HTTPAuth/blob/master/docs/index.rst#welcome-to-flask-httpauths-documentation)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/76", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/76/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/76/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/76", "id": 365992438, "node_id": "MDU6SXNzdWUzNjU5OTI0Mzg=", "number": 76, "title": "decorator encapsulation", "user": {"login": "lotekmedia", "id": 939730, "node_id": "MDQ6VXNlcjkzOTczMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/939730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lotekmedia", "html_url": "https://github.com/lotekmedia", "followers_url": "https://api.github.com/users/lotekmedia/followers", "following_url": "https://api.github.com/users/lotekmedia/following{/other_user}", "gists_url": "https://api.github.com/users/lotekmedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/lotekmedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lotekmedia/subscriptions", "organizations_url": "https://api.github.com/users/lotekmedia/orgs", "repos_url": "https://api.github.com/users/lotekmedia/repos", "events_url": "https://api.github.com/users/lotekmedia/events{/privacy}", "received_events_url": "https://api.github.com/users/lotekmedia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T17:03:30Z", "updated_at": "2018-10-03T09:29:36Z", "closed_at": "2018-10-03T09:29:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the auth working successfully, but want to apply to several different views.py.\r\n\r\nCan I wrap the following in a class like:\r\n\r\n```\r\nfrom flask_httpauth import HTTPBasicAuth\r\ndef api_authenticate():\r\n   \r\n   @auth.get_password\r\n   def get_password(username):\r\n        if username == app_.config['USER']:\r\n            return app_.config['PASSWORD']\r\n    return None\r\n\r\n    @auth.error_handler\r\n    def unauthorized():\r\n       return make_response(jsonify({'error': 'Unauthorized access'}), 401)\r\n```\r\nand then call\r\n```\r\n@api_authenticate \r\ndef my_authenticated_view():\r\n    return jsonify({\"success\": True})\r\n```\r\nas a decorator on a method in a view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/72", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/72/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/72/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/72", "id": 333014594, "node_id": "MDU6SXNzdWUzMzMwMTQ1OTQ=", "number": 72, "title": "inject current user into decorator callbacks", "user": {"login": "nestedsoftware", "id": 2969361, "node_id": "MDQ6VXNlcjI5NjkzNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2969361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nestedsoftware", "html_url": "https://github.com/nestedsoftware", "followers_url": "https://api.github.com/users/nestedsoftware/followers", "following_url": "https://api.github.com/users/nestedsoftware/following{/other_user}", "gists_url": "https://api.github.com/users/nestedsoftware/gists{/gist_id}", "starred_url": "https://api.github.com/users/nestedsoftware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nestedsoftware/subscriptions", "organizations_url": "https://api.github.com/users/nestedsoftware/orgs", "repos_url": "https://api.github.com/users/nestedsoftware/repos", "events_url": "https://api.github.com/users/nestedsoftware/events{/privacy}", "received_events_url": "https://api.github.com/users/nestedsoftware/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-16T20:57:04Z", "updated_at": "2018-06-17T22:32:30Z", "closed_at": "2018-06-17T22:32:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have recently started using flask-httpauth on a project. Something that jumped out at me is setting the current user into the flask `g` thread-local object via something like `g.current_user = user` inside `verify_password` and `verify_token`. \r\n\r\nWould it make sense to create a new decorator, something like @auth.current_user, which takes a callback that returns the current user? This callback can then be used to inject the current user as a parameter into the callbacks for the other flask-httpauth decorators, e.g. `@auth.verify_password` as well as `@auth.login_required`. \r\n\r\nI think it would be nice to be able to just receive the current user as a parameter and remove the need to use flask's `g` object.\r\n\r\nBelow is a simplified example just to illustrate the idea:\r\n\r\n```python\r\ndef login_required(f):    \r\n    user = \"jane\" # in reality obtain the user from the callback\r\n\r\n    @wraps(f) \r\n    def __decorated_function(*args, **kwargs):    \r\n        new_args = (*args, user) # inject user into parameters to `f`\r\n        f(*new_args, **kwargs)\r\n    \r\n    return __decorated_function\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/69", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/69/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/69/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/69", "id": 328971915, "node_id": "MDU6SXNzdWUzMjg5NzE5MTU=", "number": 69, "title": "Token auth and JWT term usage vs. JWS", "user": {"login": "unuseless", "id": 22882377, "node_id": "MDQ6VXNlcjIyODgyMzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/22882377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unuseless", "html_url": "https://github.com/unuseless", "followers_url": "https://api.github.com/users/unuseless/followers", "following_url": "https://api.github.com/users/unuseless/following{/other_user}", "gists_url": "https://api.github.com/users/unuseless/gists{/gist_id}", "starred_url": "https://api.github.com/users/unuseless/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unuseless/subscriptions", "organizations_url": "https://api.github.com/users/unuseless/orgs", "repos_url": "https://api.github.com/users/unuseless/repos", "events_url": "https://api.github.com/users/unuseless/events{/privacy}", "received_events_url": "https://api.github.com/users/unuseless/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-04T09:15:22Z", "updated_at": "2019-02-05T15:00:45Z", "closed_at": "2019-02-05T15:00:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In e.g. token_auth.py (and several other places) the term JWT is used for the tokens generated.  These tokens are generated with the itsdangerous TimedJSONWebSignatureSerializer.\r\nThe thing is, these are not JWT tokens, but JSON Web Signatures (JWS, see https://pythonhosted.org/itsdangerous/ ).\r\n\r\nRemedy:  Don't use the term JWT for these tokens.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/66", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/66/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/66/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/66", "id": 321380169, "node_id": "MDU6SXNzdWUzMjEzODAxNjk=", "number": 66, "title": "Can auth be imported into modules with routes that have been seperated from the main app file", "user": {"login": "strachg", "id": 29393825, "node_id": "MDQ6VXNlcjI5MzkzODI1", "avatar_url": "https://avatars1.githubusercontent.com/u/29393825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strachg", "html_url": "https://github.com/strachg", "followers_url": "https://api.github.com/users/strachg/followers", "following_url": "https://api.github.com/users/strachg/following{/other_user}", "gists_url": "https://api.github.com/users/strachg/gists{/gist_id}", "starred_url": "https://api.github.com/users/strachg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strachg/subscriptions", "organizations_url": "https://api.github.com/users/strachg/orgs", "repos_url": "https://api.github.com/users/strachg/repos", "events_url": "https://api.github.com/users/strachg/events{/privacy}", "received_events_url": "https://api.github.com/users/strachg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-08T23:26:11Z", "updated_at": "2019-01-13T22:20:29Z", "closed_at": "2019-01-13T19:47:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wanting to apply auth to a project based off this https://github.com/vmw-loginsight/webhook-shims.\r\n\r\nThe auth would be configured in the \\_\\_init\\_\\_.py and imported into the modules for each set of routes.\r\n\r\nany assitance would be appriciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/65", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/65/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/65/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/65", "id": 320333509, "node_id": "MDU6SXNzdWUzMjAzMzM1MDk=", "number": 65, "title": "Can an authorization token be handled without a prefix?", "user": {"login": "alessbelli", "id": 15571498, "node_id": "MDQ6VXNlcjE1NTcxNDk4", "avatar_url": "https://avatars0.githubusercontent.com/u/15571498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessbelli", "html_url": "https://github.com/alessbelli", "followers_url": "https://api.github.com/users/alessbelli/followers", "following_url": "https://api.github.com/users/alessbelli/following{/other_user}", "gists_url": "https://api.github.com/users/alessbelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessbelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessbelli/subscriptions", "organizations_url": "https://api.github.com/users/alessbelli/orgs", "repos_url": "https://api.github.com/users/alessbelli/repos", "events_url": "https://api.github.com/users/alessbelli/events{/privacy}", "received_events_url": "https://api.github.com/users/alessbelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-04T16:10:04Z", "updated_at": "2018-05-09T14:30:35Z", "closed_at": "2018-05-09T14:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see the authorization token has to be prepended by a keyword such as 'Bearer', 'JWT' or 'Token' etc.\r\nIt seems to me that this does not add anythings besides making the request header less understandable and more prone to errors. Could you add the option, either by setting the default to 'none',  or a keyword/boolean to say you're not sending a prefix with the token?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/64", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/64/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/64/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/64", "id": 292456175, "node_id": "MDU6SXNzdWUyOTI0NTYxNzU=", "number": 64, "title": "Problem with the installation precess", "user": {"login": "RaulP92", "id": 15608494, "node_id": "MDQ6VXNlcjE1NjA4NDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/15608494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RaulP92", "html_url": "https://github.com/RaulP92", "followers_url": "https://api.github.com/users/RaulP92/followers", "following_url": "https://api.github.com/users/RaulP92/following{/other_user}", "gists_url": "https://api.github.com/users/RaulP92/gists{/gist_id}", "starred_url": "https://api.github.com/users/RaulP92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RaulP92/subscriptions", "organizations_url": "https://api.github.com/users/RaulP92/orgs", "repos_url": "https://api.github.com/users/RaulP92/repos", "events_url": "https://api.github.com/users/RaulP92/events{/privacy}", "received_events_url": "https://api.github.com/users/RaulP92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-29T15:47:01Z", "updated_at": "2019-01-13T22:20:30Z", "closed_at": "2019-01-13T19:47:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Hi! First of all I'm not an experienced Python user (but I'm not a novice) and I hope someone can help me with the installation.\r\nMy problem is that when I use `pip install Flask-HTTTPAuth` it doesn't work. (Use WinPython Command Prompt to execute this code)\r\nHere is the error: It was not possible to find a version that satisfies the Flask-HTTPAuth requirement (from versions:) \r\nNo distribution found that matches Flask-HTTTPAuth\r\n\r\nIs there another methodology to install the extension? Am I doing something wrong?\r\n\r\nBest regards and thank you in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/62", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/62/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/62/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/62", "id": 292130188, "node_id": "MDU6SXNzdWUyOTIxMzAxODg=", "number": 62, "title": "Token verification callback is always called", "user": {"login": "brunoais", "id": 639467, "node_id": "MDQ6VXNlcjYzOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/639467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoais", "html_url": "https://github.com/brunoais", "followers_url": "https://api.github.com/users/brunoais/followers", "following_url": "https://api.github.com/users/brunoais/following{/other_user}", "gists_url": "https://api.github.com/users/brunoais/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoais/subscriptions", "organizations_url": "https://api.github.com/users/brunoais/orgs", "repos_url": "https://api.github.com/users/brunoais/repos", "events_url": "https://api.github.com/users/brunoais/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoais/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-27T15:47:27Z", "updated_at": "2018-01-29T14:55:47Z", "closed_at": "2018-01-29T14:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it by design that, for all requests, the callback user function decorated with `@auth.verify_token` is called for the `AuthToken`?\r\nIf so, why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/61", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/61/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/61/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/61", "id": 291888146, "node_id": "MDU6SXNzdWUyOTE4ODgxNDY=", "number": 61, "title": "How do I get the problem with the authentication process?", "user": {"login": "brunoais", "id": 639467, "node_id": "MDQ6VXNlcjYzOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/639467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoais", "html_url": "https://github.com/brunoais", "followers_url": "https://api.github.com/users/brunoais/followers", "following_url": "https://api.github.com/users/brunoais/following{/other_user}", "gists_url": "https://api.github.com/users/brunoais/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoais/subscriptions", "organizations_url": "https://api.github.com/users/brunoais/orgs", "repos_url": "https://api.github.com/users/brunoais/repos", "events_url": "https://api.github.com/users/brunoais/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoais/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-26T12:32:19Z", "updated_at": "2018-02-28T11:27:19Z", "closed_at": "2018-02-28T11:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "A failure in the authentication process can be:\r\n\r\n- No Authorization header given\r\n- Wrong scheme given\r\n- Wrong or missing header data\r\n- Wrong or not given nonce, opaque, etc... (for HTTPDigestAuth)\r\n\r\nAlthough in production there is not that much gain distinguishing them, in development, much more in quality environment it is good to know and log exactly what is happening inside the application and, when an authorization fails, to know what was the cause.\r\nAs it is now, the developer that uses this can only know if the login has failed or succeeded or if there was a problem somewhere between the headers parsing and developer's code.\r\n\r\nIn my situation, I need to have two programs communicating between each other where I have control over my program but no control over the program that uses this. And so, currently, with it failing, I have no idea if the other program is not sending Authorization, if it is not sending the right scheme in the authorization or if it is sending an empty token (I'm using HTTPTokenAuth).\r\n\r\nThere are solutions such as logging the Authorization header for a human to read but I really rather just have it done automatically in the response (AKA avoid wasting time with e-mails back and forward).\r\n\r\nAny suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/60", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/60/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/60/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/60", "id": 285633916, "node_id": "MDU6SXNzdWUyODU2MzM5MTY=", "number": 60, "title": "Can I access the params passed into verify_password?", "user": {"login": "sarimabbas", "id": 3000809, "node_id": "MDQ6VXNlcjMwMDA4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3000809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarimabbas", "html_url": "https://github.com/sarimabbas", "followers_url": "https://api.github.com/users/sarimabbas/followers", "following_url": "https://api.github.com/users/sarimabbas/following{/other_user}", "gists_url": "https://api.github.com/users/sarimabbas/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarimabbas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarimabbas/subscriptions", "organizations_url": "https://api.github.com/users/sarimabbas/orgs", "repos_url": "https://api.github.com/users/sarimabbas/repos", "events_url": "https://api.github.com/users/sarimabbas/events{/privacy}", "received_events_url": "https://api.github.com/users/sarimabbas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-03T09:24:46Z", "updated_at": "2018-01-04T21:11:01Z", "closed_at": "2018-01-04T21:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "After passing basic authentication in verify password, is it possible to retrieve the user param within a put/get function so that I can check if it has relevant permissions in my database? (thereby altering the data that is returned). One way seems to be creating different auth objects and callbacks, but this could get messy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/59", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/59/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/59/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/59", "id": 274802233, "node_id": "MDU6SXNzdWUyNzQ4MDIyMzM=", "number": 59, "title": "Disable http auth when testing", "user": {"login": "jxltom", "id": 1401630, "node_id": "MDQ6VXNlcjE0MDE2MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1401630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxltom", "html_url": "https://github.com/jxltom", "followers_url": "https://api.github.com/users/jxltom/followers", "following_url": "https://api.github.com/users/jxltom/following{/other_user}", "gists_url": "https://api.github.com/users/jxltom/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxltom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxltom/subscriptions", "organizations_url": "https://api.github.com/users/jxltom/orgs", "repos_url": "https://api.github.com/users/jxltom/repos", "events_url": "https://api.github.com/users/jxltom/events{/privacy}", "received_events_url": "https://api.github.com/users/jxltom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-17T09:28:38Z", "updated_at": "2018-08-17T14:19:27Z", "closed_at": "2017-11-18T01:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to disable http basic auth when set ```flask.app.test``` as ```True```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/58", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/58/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/58/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/58", "id": 271175839, "node_id": "MDU6SXNzdWUyNzExNzU4Mzk=", "number": 58, "title": "Can I define different error_handler?", "user": {"login": "Germlin", "id": 7352968, "node_id": "MDQ6VXNlcjczNTI5Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7352968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Germlin", "html_url": "https://github.com/Germlin", "followers_url": "https://api.github.com/users/Germlin/followers", "following_url": "https://api.github.com/users/Germlin/following{/other_user}", "gists_url": "https://api.github.com/users/Germlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Germlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Germlin/subscriptions", "organizations_url": "https://api.github.com/users/Germlin/orgs", "repos_url": "https://api.github.com/users/Germlin/repos", "events_url": "https://api.github.com/users/Germlin/events{/privacy}", "received_events_url": "https://api.github.com/users/Germlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-04T08:21:09Z", "updated_at": "2019-01-13T22:20:31Z", "closed_at": "2019-01-13T19:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": " I want to implement the following feature:\r\nWhen the user want to post data\uff0credirect to login page if he doesn't pass the authorization;\r\nWhen the user want to fetch data\uff0creturn part of the resource if he doesn't pass the authorization;\r\nCan I define different error_handler?\r\nSorry for my poor English.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/57", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/57/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/57/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/57", "id": 257788409, "node_id": "MDU6SXNzdWUyNTc3ODg0MDk=", "number": 57, "title": "see/capture actual error in error_handler", "user": {"login": "nagapavan", "id": 644687, "node_id": "MDQ6VXNlcjY0NDY4Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/644687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagapavan", "html_url": "https://github.com/nagapavan", "followers_url": "https://api.github.com/users/nagapavan/followers", "following_url": "https://api.github.com/users/nagapavan/following{/other_user}", "gists_url": "https://api.github.com/users/nagapavan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagapavan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagapavan/subscriptions", "organizations_url": "https://api.github.com/users/nagapavan/orgs", "repos_url": "https://api.github.com/users/nagapavan/repos", "events_url": "https://api.github.com/users/nagapavan/events{/privacy}", "received_events_url": "https://api.github.com/users/nagapavan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-14T16:54:57Z", "updated_at": "2019-01-13T22:20:31Z", "closed_at": "2019-01-13T19:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to capture the original error and pass it along as reply.\r\nIs it possible to get actual error object in error_handler?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/54", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/54/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/54/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/54", "id": 212296818, "node_id": "MDU6SXNzdWUyMTIyOTY4MTg=", "number": 54, "title": "Issues on hashed passwords", "user": {"login": "opkorz", "id": 1576089, "node_id": "MDQ6VXNlcjE1NzYwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1576089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opkorz", "html_url": "https://github.com/opkorz", "followers_url": "https://api.github.com/users/opkorz/followers", "following_url": "https://api.github.com/users/opkorz/following{/other_user}", "gists_url": "https://api.github.com/users/opkorz/gists{/gist_id}", "starred_url": "https://api.github.com/users/opkorz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opkorz/subscriptions", "organizations_url": "https://api.github.com/users/opkorz/orgs", "repos_url": "https://api.github.com/users/opkorz/repos", "events_url": "https://api.github.com/users/opkorz/events{/privacy}", "received_events_url": "https://api.github.com/users/opkorz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-07T00:49:10Z", "updated_at": "2019-01-13T22:20:32Z", "closed_at": "2019-01-13T19:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I'm having an issue passing in an already hashed password, it seems to stop at the login required decorator. All I'm trying to do is :\r\n```\r\n@app.route('/api/v2/token')\r\n@auth2.login_required\r\ndef get_auth2_token():\r\n    token = generate_auth_token(g.userV2.id, 600 * 10)\r\n    return jsonify(\r\n        {\r\n            'token': token.decode('ascii'),\r\n            'duration': 600 * 10\r\n        })\r\n```\r\n\r\nwhile sending this request:\r\n```\r\nr = requests.get(\r\n        url + '/api/v2/token',\r\n        auth=(user.email, str(user.password)))\r\n```\r\nwhere user.password is an already hashed password. Before I was passing in a SHA1 hashed password and it works with no issues, then I tried upgrading the hashing to a BCrypt hash, it seems to always stop/timeout and not even enter the method itself. Is there something I am missing here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/53", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/53/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/53/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/53", "id": 207853722, "node_id": "MDU6SXNzdWUyMDc4NTM3MjI=", "number": 53, "title": "AttributeError: 'function' object has no attribute 'verify_password'", "user": {"login": "rishits85", "id": 14956132, "node_id": "MDQ6VXNlcjE0OTU2MTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/14956132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rishits85", "html_url": "https://github.com/rishits85", "followers_url": "https://api.github.com/users/rishits85/followers", "following_url": "https://api.github.com/users/rishits85/following{/other_user}", "gists_url": "https://api.github.com/users/rishits85/gists{/gist_id}", "starred_url": "https://api.github.com/users/rishits85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rishits85/subscriptions", "organizations_url": "https://api.github.com/users/rishits85/orgs", "repos_url": "https://api.github.com/users/rishits85/repos", "events_url": "https://api.github.com/users/rishits85/events{/privacy}", "received_events_url": "https://api.github.com/users/rishits85/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-15T16:25:59Z", "updated_at": "2018-12-31T16:56:05Z", "closed_at": "2018-12-31T16:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to incorporate basic authentication as shown in this link\r\n\r\n[https://github.com/miguelgrinberg/Flask-HTTPAuth/blob/master/examples/basic_auth.py](https://github.com/miguelgrinberg/Flask-HTTPAuth/blob/master/examples/basic_auth.py)\r\n\r\nin my flask app. The app is deployed on Heroku. The error I keep getting is\r\n\r\n```\r\n@auth.verify_password \r\nAttributeError: 'function' object has no attribute 'verify_password'\r\n```\r\nBelow is my code\r\n\r\n```\r\nimport urllib\r\nimport json\r\nimport os\r\nimport string\r\nimport random\r\n\r\nfrom flask import Flask,render_template,request\r\nfrom sqlalchemy import create_engine, asc\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom database_setup import Base, User\r\nfrom flask import Flask,render_template\r\nfrom flask import request\r\nfrom flask import make_response\r\nfrom flask import session as login_session\r\nfrom flask import make_response\r\nfrom flask_httpauth import HTTPBasicAuth\r\nfrom werkzeug.security import generate_password_hash, check_password_hash\r\n\r\n@auth.verify_password\r\ndef verify_password(username_or_token, password):\r\n    #Try to see if it's a token first\r\n    user_id = User.verify_auth_token(username_or_token)\r\n    if user_id:\r\n        user = session.query(User).filter_by(id = user_id).one()\r\n    else:\r\n        user = session.query(User).filter_by(username = username_or_token).first()\r\n        if not user or not user.verify_password(password):\r\n            return False\r\n    g.user = user\r\n    return True\r\n\r\n```\r\nBelow is the traceback\r\n\r\n```\r\n2017-02-14T19:28:58.375416+00:00 heroku[web.1]: State changed from crashed to starting\r\n2017-02-14T19:29:01.124995+00:00 heroku[web.1]: Starting process with command `python test.py`\r\n2017-02-14T19:29:04.255161+00:00 heroku[web.1]: Process exited with status 1\r\n2017-02-14T19:29:04.127534+00:00 app[web.1]: Traceback (most recent call last):\r\n2017-02-14T19:29:04.127556+00:00 app[web.1]:   File \"test.py\", line 234, in <module>\r\n2017-02-14T19:29:04.127594+00:00 app[web.1]:     @auth.verify_password\r\n2017-02-14T19:29:04.127622+00:00 app[web.1]: AttributeError: 'function' object has no attribute 'verify_password'\r\n2017-02-14T19:29:04.299349+00:00 heroku[web.1]: State changed from starting to crashed\r\n2017-02-14T19:29:04.300161+00:00 heroku[web.1]: State changed from crashed to starting\r\n\r\n```\r\nMy requirements.txt file contains the following\r\n\r\n```\r\nclick==6.7\r\nFlask==0.12\r\nhttplib2==0.9.2\r\nitsdangerous==0.24\r\nJinja2==2.9.4\r\nMarkupSafe==0.23\r\npasslib==1.7.0\r\nSQLAlchemy==1.1.5\r\nvirtualenv==15.1.0\r\nWerkzeug==0.11.15\r\nFlask-HTTPauth==3.2.2\r\n\r\n```\r\nCan someone help me figure out what the issue is? I have all the correct imports as suggested on the GitHub example and also have them correctly mentioned in my requirements.txt file. Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/51", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/51/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/51/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/51", "id": 199218254, "node_id": "MDU6SXNzdWUxOTkyMTgyNTQ=", "number": 51, "title": "Multi auth error - need more than 1 value to unpack", "user": {"login": "jm66", "id": 2047620, "node_id": "MDQ6VXNlcjIwNDc2MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2047620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jm66", "html_url": "https://github.com/jm66", "followers_url": "https://api.github.com/users/jm66/followers", "following_url": "https://api.github.com/users/jm66/following{/other_user}", "gists_url": "https://api.github.com/users/jm66/gists{/gist_id}", "starred_url": "https://api.github.com/users/jm66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jm66/subscriptions", "organizations_url": "https://api.github.com/users/jm66/orgs", "repos_url": "https://api.github.com/users/jm66/repos", "events_url": "https://api.github.com/users/jm66/events{/privacy}", "received_events_url": "https://api.github.com/users/jm66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-01-06T15:24:04Z", "updated_at": "2017-01-30T02:14:04Z", "closed_at": "2017-01-30T02:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using MultiAuth (basic+token) and I'm getting an error when not providing a **scheme** in the `Authorization` header. \r\n\r\nFor instance a `http :5000/api/ \"Authorization: $TK\"` will throw a `500` error:\r\n```\r\nscheme, creds = request.headers['Authorization'].split(None, 1)\r\nValueError: need more than 1 value to unpack\r\n```\r\n\r\nUsing try-catch to bypass the exception might be one quick solution. Thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/50", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/50/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/50/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/50", "id": 198327672, "node_id": "MDU6SXNzdWUxOTgzMjc2NzI=", "number": 50, "title": "Question: is there any way to see if I logged in templates?", "user": {"login": "somenxavier", "id": 89915, "node_id": "MDQ6VXNlcjg5OTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/89915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/somenxavier", "html_url": "https://github.com/somenxavier", "followers_url": "https://api.github.com/users/somenxavier/followers", "following_url": "https://api.github.com/users/somenxavier/following{/other_user}", "gists_url": "https://api.github.com/users/somenxavier/gists{/gist_id}", "starred_url": "https://api.github.com/users/somenxavier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/somenxavier/subscriptions", "organizations_url": "https://api.github.com/users/somenxavier/orgs", "repos_url": "https://api.github.com/users/somenxavier/repos", "events_url": "https://api.github.com/users/somenxavier/events{/privacy}", "received_events_url": "https://api.github.com/users/somenxavier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-01-02T12:14:34Z", "updated_at": "2017-02-02T15:58:12Z", "closed_at": "2017-02-02T12:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI use [digest auth](http://flask-httpauth.readthedocs.io/en/latest/#digest-authentication-example). I wonder if I could see if I logged or not in *templates*.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/48", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/48/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/48/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/48", "id": 194335958, "node_id": "MDU6SXNzdWUxOTQzMzU5NTg=", "number": 48, "title": "Problem with authentication in Apache", "user": {"login": "LLCampos", "id": 12008784, "node_id": "MDQ6VXNlcjEyMDA4Nzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/12008784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LLCampos", "html_url": "https://github.com/LLCampos", "followers_url": "https://api.github.com/users/LLCampos/followers", "following_url": "https://api.github.com/users/LLCampos/following{/other_user}", "gists_url": "https://api.github.com/users/LLCampos/gists{/gist_id}", "starred_url": "https://api.github.com/users/LLCampos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LLCampos/subscriptions", "organizations_url": "https://api.github.com/users/LLCampos/orgs", "repos_url": "https://api.github.com/users/LLCampos/repos", "events_url": "https://api.github.com/users/LLCampos/events{/privacy}", "received_events_url": "https://api.github.com/users/LLCampos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191797078, "node_id": "MDU6TGFiZWwxMTkxNzk3MDc4", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/auto-closed", "name": "auto-closed", "color": "ededed", "default": false, "description": null}, {"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-08T13:29:27Z", "updated_at": "2019-01-13T22:21:24Z", "closed_at": "2019-01-13T19:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm having a similar problem as this one:\r\n\r\nhttps://www.digitalocean.com/community/questions/flask-and-http-basic-authentication\r\n\r\nIn my machine everything works as it should, but when I try it in the production server, when I try to access a page where authentication is needed, the auth prompt keeps popping up, even after inserting the correct user and password. \r\n\r\nInfo about the machine in which there are problems:\r\n\r\n```bash\r\nuname -a\r\nLinux chronos 2.6.32-431.17.1.el6.x86_64 #1 SMP Wed May 7 23:32:49 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\ncat /etc/issue\r\nCentOS release 6.5 (Final)\r\n\r\napachectl -V\r\nServer version: Apache/2.2.15 (Unix)\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/47", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/47/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/47/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/47", "id": 192254754, "node_id": "MDU6SXNzdWUxOTIyNTQ3NTQ=", "number": 47, "title": "Allow temporary users for shopping carts without registering until they're about to pay for the order", "user": {"login": "sivasivacsc", "id": 14105897, "node_id": "MDQ6VXNlcjE0MTA1ODk3", "avatar_url": "https://avatars0.githubusercontent.com/u/14105897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivasivacsc", "html_url": "https://github.com/sivasivacsc", "followers_url": "https://api.github.com/users/sivasivacsc/followers", "following_url": "https://api.github.com/users/sivasivacsc/following{/other_user}", "gists_url": "https://api.github.com/users/sivasivacsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivasivacsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivasivacsc/subscriptions", "organizations_url": "https://api.github.com/users/sivasivacsc/orgs", "repos_url": "https://api.github.com/users/sivasivacsc/repos", "events_url": "https://api.github.com/users/sivasivacsc/events{/privacy}", "received_events_url": "https://api.github.com/users/sivasivacsc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-29T11:19:05Z", "updated_at": "2016-11-30T05:02:43Z", "closed_at": "2016-11-29T15:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "My app implements a shopping cart in which anonymous users can fill their cart with products. User Login is required only before payment. How can this be implemented?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/46", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/46/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/46/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/46", "id": 177706141, "node_id": "MDU6SXNzdWUxNzc3MDYxNDE=", "number": 46, "title": "Changelog missing 3.2 release series", "user": {"login": "jeffwidman", "id": 483314, "node_id": "MDQ6VXNlcjQ4MzMxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffwidman", "html_url": "https://github.com/jeffwidman", "followers_url": "https://api.github.com/users/jeffwidman/followers", "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}", "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions", "organizations_url": "https://api.github.com/users/jeffwidman/orgs", "repos_url": "https://api.github.com/users/jeffwidman/repos", "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffwidman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-19T05:26:40Z", "updated_at": "2016-09-19T05:45:10Z", "closed_at": "2016-09-19T05:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Went to check what changed before updating and saw the changelog doesn't have the lastest releases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/45", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/45/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/45/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/45", "id": 172291514, "node_id": "MDU6SXNzdWUxNzIyOTE1MTQ=", "number": 45, "title": "Add license to packages", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-08-20T21:23:25Z", "updated_at": "2016-09-04T21:04:20Z", "closed_at": "2016-09-04T21:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could we please add the license to `MANIFEST.in` so that it will be included in `sdist`s and other packages?\n\ncc @synapticarbors @msarahan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/44", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/44/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/44/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/44", "id": 172270569, "node_id": "MDU6SXNzdWUxNzIyNzA1Njk=", "number": 44, "title": "License mismatch (BSD vs MIT)", "user": {"login": "synapticarbors", "id": 589279, "node_id": "MDQ6VXNlcjU4OTI3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/589279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synapticarbors", "html_url": "https://github.com/synapticarbors", "followers_url": "https://api.github.com/users/synapticarbors/followers", "following_url": "https://api.github.com/users/synapticarbors/following{/other_user}", "gists_url": "https://api.github.com/users/synapticarbors/gists{/gist_id}", "starred_url": "https://api.github.com/users/synapticarbors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synapticarbors/subscriptions", "organizations_url": "https://api.github.com/users/synapticarbors/orgs", "repos_url": "https://api.github.com/users/synapticarbors/repos", "events_url": "https://api.github.com/users/synapticarbors/events{/privacy}", "received_events_url": "https://api.github.com/users/synapticarbors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-08-20T13:15:30Z", "updated_at": "2016-08-20T17:26:21Z", "closed_at": "2016-08-20T15:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The license included in the repo and specified in `setup.py` is the MIT license but in the `classifiers` section of `setup.py` it says BSD as it also does in `flask_httpauth.py`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/43", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/43/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/43/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/43", "id": 171014500, "node_id": "MDU6SXNzdWUxNzEwMTQ1MDA=", "number": 43, "title": "auth mechanism in separate file", "user": {"login": "trondhindenes", "id": 1747120, "node_id": "MDQ6VXNlcjE3NDcxMjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1747120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trondhindenes", "html_url": "https://github.com/trondhindenes", "followers_url": "https://api.github.com/users/trondhindenes/followers", "following_url": "https://api.github.com/users/trondhindenes/following{/other_user}", "gists_url": "https://api.github.com/users/trondhindenes/gists{/gist_id}", "starred_url": "https://api.github.com/users/trondhindenes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trondhindenes/subscriptions", "organizations_url": "https://api.github.com/users/trondhindenes/orgs", "repos_url": "https://api.github.com/users/trondhindenes/repos", "events_url": "https://api.github.com/users/trondhindenes/events{/privacy}", "received_events_url": "https://api.github.com/users/trondhindenes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-13T15:49:52Z", "updated_at": "2016-08-13T16:47:50Z", "closed_at": "2016-08-13T16:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm refactoring some code, and having problems getting flask-httpauth to work when everything's not in the same file.\n\nin my flask app I have my **init** where imports live, and I've tried putting my verify_password def here.\nI have one file/class per route, and I'm having a hard time understanding how to wire everything up.\n\nAn example based on a more real-life setup would be super-helpful.\nHere's my code atm:\nhttps://github.com/trondhindenes/flansible/tree/e51201b3f89cab90c9d704c6d4050e27febfeaef\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/42", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/42/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/42/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/42", "id": 167328411, "node_id": "MDU6SXNzdWUxNjczMjg0MTE=", "number": 42, "title": "HTTP basicAuth and gevent WSGI", "user": {"login": "sebastien-wybo", "id": 13152569, "node_id": "MDQ6VXNlcjEzMTUyNTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/13152569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastien-wybo", "html_url": "https://github.com/sebastien-wybo", "followers_url": "https://api.github.com/users/sebastien-wybo/followers", "following_url": "https://api.github.com/users/sebastien-wybo/following{/other_user}", "gists_url": "https://api.github.com/users/sebastien-wybo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastien-wybo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastien-wybo/subscriptions", "organizations_url": "https://api.github.com/users/sebastien-wybo/orgs", "repos_url": "https://api.github.com/users/sebastien-wybo/repos", "events_url": "https://api.github.com/users/sebastien-wybo/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastien-wybo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-25T09:54:01Z", "updated_at": "2016-07-25T12:37:49Z", "closed_at": "2016-07-25T12:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm running in a strange problem running basic auth on flask on gevent WSGI.\nAuthentication works flawlessly for standard requests but as soon as I'm asking for request arguments (either GET or POST)  i'm running into errors in the login_required method\nDo you know if there's something to modify gevent to let authentication run correctly with GET/POST requests?\n\nThanks\nSebastien \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/41", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/41/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/41/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/41", "id": 156423954, "node_id": "MDU6SXNzdWUxNTY0MjM5NTQ=", "number": 41, "title": "What should I send to token-verified url?", "user": {"login": "TaylorHere", "id": 12156543, "node_id": "MDQ6VXNlcjEyMTU2NTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/12156543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaylorHere", "html_url": "https://github.com/TaylorHere", "followers_url": "https://api.github.com/users/TaylorHere/followers", "following_url": "https://api.github.com/users/TaylorHere/following{/other_user}", "gists_url": "https://api.github.com/users/TaylorHere/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaylorHere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaylorHere/subscriptions", "organizations_url": "https://api.github.com/users/TaylorHere/orgs", "repos_url": "https://api.github.com/users/TaylorHere/repos", "events_url": "https://api.github.com/users/TaylorHere/events{/privacy}", "received_events_url": "https://api.github.com/users/TaylorHere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-24T05:39:59Z", "updated_at": "2016-09-04T21:05:48Z", "closed_at": "2016-09-04T21:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use curl to debug my app , \nI use this command to my URL with token_verify based on \n`curl -H \"Authorization token:eyJhbGciOiJIUzI1NiIsImV4cCI6MTQ2NDA1NTg2OSwiaWF0IjoxNDY0MDU1MjY5fQ.eyJpZCI6bnVsbH0.4Oe60fyM8t6BvPvdZWlNqCO3ZKXW5HHsjVmoaUkp-1E\" http://127.0.0.1:5000/app/star/0\n`\nI'm sure of the token and url is true, but when I'm debug ,I find that @token_auth.verify_token function receive an None token,so How to send a token when I using  HTTPTokenAuth\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/40", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/40/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/40/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/40", "id": 151734446, "node_id": "MDU6SXNzdWUxNTE3MzQ0NDY=", "number": 40, "title": "passing token, bad signature", "user": {"login": "tharrington", "id": 1617488, "node_id": "MDQ6VXNlcjE2MTc0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1617488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tharrington", "html_url": "https://github.com/tharrington", "followers_url": "https://api.github.com/users/tharrington/followers", "following_url": "https://api.github.com/users/tharrington/following{/other_user}", "gists_url": "https://api.github.com/users/tharrington/gists{/gist_id}", "starred_url": "https://api.github.com/users/tharrington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tharrington/subscriptions", "organizations_url": "https://api.github.com/users/tharrington/orgs", "repos_url": "https://api.github.com/users/tharrington/repos", "events_url": "https://api.github.com/users/tharrington/events{/privacy}", "received_events_url": "https://api.github.com/users/tharrington/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-28T20:22:23Z", "updated_at": "2016-04-28T21:25:50Z", "closed_at": "2016-04-28T21:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I must be missing something obvious. I create a user and send back and auth token. After that I am using postman to access a protected route with that auth token, but the token is null. Here is some code:\n\nCreate the user:\n\n```\n@api.route('/users', methods=['POST'])\ndef create_user():\n    print('create user')\n    user = User(email='tyler@test.com', password='test')\n    if(user.validate_email()) :\n        db.session.add(user)\n        db.session.commit()\n        return jsonify({ 'user': user.to_json(), 'token' : user.generate_auth_token(3600) })\n    return jsonify({'error': 'email already taken' })\n```\n\nuser model:\n\n```\ndef generate_auth_token(self, expiration=600):\n        s = Serializer(current_app.config['SECRET_KEY'], expires_in=expiration)\n        return s.dumps({'id': self.id}).decode('utf-8')\n```\n\nprotected route:\n\n```\n@api.route('/users', methods=['GET'])\n@auth_token.login_required\ndef get_users():\n    users = User.query.all()\n    return jsonify({'users': [user.to_json() for user in users] })\n```\n\nVerify token method on user model: This is where I get nothing in the token print and ultimately a bad signature\n\n```\n@staticmethod\n    def verify_auth_token(token):\n        print('### verifying')\n        print(token)\n        s = Serializer(current_app.config['SECRET_KEY'])\n        try:\n            data = s.loads(token)\n        except SignatureExpired:\n            print('### expired')\n            return None    \n        except BadSignature:\n            print('### bad signature')\n            return None   \n        user = User.query.get(data['id'])\n        return user\n\n```\n\nI guess I'm a bit confused on how this works. the HTTPBasicAuth() object has a decorator method called login_required which always hits the verify_auth_method on the object? Can you please explain this?\n\nFinally, my auth token is sent in a header : \n\n{ Content-Type: application/json, Authorization : myToken}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/38", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/38/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/38/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/38", "id": 150083348, "node_id": "MDU6SXNzdWUxNTAwODMzNDg=", "number": 38, "title": "Race condition causes (104) Connection reset by peer processing invalid tokens", "user": {"login": "jkemp101", "id": 3944676, "node_id": "MDQ6VXNlcjM5NDQ2NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3944676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkemp101", "html_url": "https://github.com/jkemp101", "followers_url": "https://api.github.com/users/jkemp101/followers", "following_url": "https://api.github.com/users/jkemp101/following{/other_user}", "gists_url": "https://api.github.com/users/jkemp101/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkemp101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkemp101/subscriptions", "organizations_url": "https://api.github.com/users/jkemp101/orgs", "repos_url": "https://api.github.com/users/jkemp101/repos", "events_url": "https://api.github.com/users/jkemp101/events{/privacy}", "received_events_url": "https://api.github.com/users/jkemp101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-21T14:00:15Z", "updated_at": "2016-05-31T06:37:50Z", "closed_at": "2016-05-31T06:37:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Under certain conditions flask_httpauth may cause the OS to cause a connection reset (RST) instead of the expected clean socket shutdown (FIN).  There are various discussions around the Internet about this situation but basically if the kernel receive buffer has data in it when it receives the close request, the OS will send a RST packet instead of the normal FIN.  This causes the client side to discard the response and typically return a \"(104) Connection reset by peer.\"  In our case that means the client would regularly see a connection reset instead of the expected return code of 401 and message of EXPIRED TOKEN.\n\nThe issue is that that flask_httpauth can access the headers and determine the token is invalid before the entire request has been read out of the kernel buffer.  Runing gunicorn on a fast Centos server we can easily get a 30% failure rate.  We have proven this with Centos and .Net clients.  The proposed fix is to simply read the request.data property before we start the close sequence to ensure Flask has finished reading the entire HTTP request and the kernel buffer is empty.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/37", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/37/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/37/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/37", "id": 148724041, "node_id": "MDU6SXNzdWUxNDg3MjQwNDE=", "number": 37, "title": "HTTPBasicAuth with custom scheme", "user": {"login": "Lestt", "id": 1737422, "node_id": "MDQ6VXNlcjE3Mzc0MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1737422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lestt", "html_url": "https://github.com/Lestt", "followers_url": "https://api.github.com/users/Lestt/followers", "following_url": "https://api.github.com/users/Lestt/following{/other_user}", "gists_url": "https://api.github.com/users/Lestt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lestt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lestt/subscriptions", "organizations_url": "https://api.github.com/users/Lestt/orgs", "repos_url": "https://api.github.com/users/Lestt/repos", "events_url": "https://api.github.com/users/Lestt/events{/privacy}", "received_events_url": "https://api.github.com/users/Lestt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-15T17:48:04Z", "updated_at": "2016-09-04T21:05:48Z", "closed_at": "2016-09-04T21:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nMaybe i did something wrong, but i try to use HTTPBasicAuth with custom scheme and i am not able to get it work.\nIn my python script, i have:\n\n`from flask.ext.httpauth import HTTPBasicAuth`\n`auth = HTTPBasicAuth(\"FooBar\")`\n\nClient-Side, The header's Authorization line is the concatenation of scheme and Base64 coded of username:password string:\n`Authorization:FooBar cXNkcXNkcWQ6ZHNmZGZkZnM=`\n\nWhen the @auth.verify_password function is called, the two parameters are empty (NoneType). But if i set the scheme with default scheme('Basic'), these parameters are good.\n\nDid i miss something ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/35", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/35/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/35/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/35", "id": 141632360, "node_id": "MDU6SXNzdWUxNDE2MzIzNjA=", "number": 35, "title": "Multi Auth `login_required` decorator doesn't pass arguments to view function", "user": {"login": "vovanz", "id": 1778004, "node_id": "MDQ6VXNlcjE3NzgwMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1778004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vovanz", "html_url": "https://github.com/vovanz", "followers_url": "https://api.github.com/users/vovanz/followers", "following_url": "https://api.github.com/users/vovanz/following{/other_user}", "gists_url": "https://api.github.com/users/vovanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vovanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vovanz/subscriptions", "organizations_url": "https://api.github.com/users/vovanz/orgs", "repos_url": "https://api.github.com/users/vovanz/repos", "events_url": "https://api.github.com/users/vovanz/events{/privacy}", "received_events_url": "https://api.github.com/users/vovanz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-17T16:19:23Z", "updated_at": "2016-03-18T03:49:26Z", "closed_at": "2016-03-18T03:49:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/32", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/32/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/32/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/32", "id": 135225822, "node_id": "MDU6SXNzdWUxMzUyMjU4MjI=", "number": 32, "title": "The package's metadata doesn't specify python3 support", "user": {"login": "eli-b", "id": 834999, "node_id": "MDQ6VXNlcjgzNDk5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/834999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli-b", "html_url": "https://github.com/eli-b", "followers_url": "https://api.github.com/users/eli-b/followers", "following_url": "https://api.github.com/users/eli-b/following{/other_user}", "gists_url": "https://api.github.com/users/eli-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli-b/subscriptions", "organizations_url": "https://api.github.com/users/eli-b/orgs", "repos_url": "https://api.github.com/users/eli-b/repos", "events_url": "https://api.github.com/users/eli-b/events{/privacy}", "received_events_url": "https://api.github.com/users/eli-b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-21T16:42:49Z", "updated_at": "2016-02-22T10:03:23Z", "closed_at": "2016-02-21T18:04:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue [2](https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/2) makes it seem that python3 is supported. To signal that this package supports python3, please add the following line to the classifiers in the package's metadata: \"Programming Language :: Python :: 3\".\n\nFlask-HTTPAuth is one of the last packages blocking my move to python3, so if formalities are the only problem here that would be wonderful!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/29", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/29/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/29/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/29", "id": 114196238, "node_id": "MDU6SXNzdWUxMTQxOTYyMzg=", "number": 29, "title": "http auth with nginx and uwsgi", "user": {"login": "gensmusic", "id": 5219641, "node_id": "MDQ6VXNlcjUyMTk2NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5219641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gensmusic", "html_url": "https://github.com/gensmusic", "followers_url": "https://api.github.com/users/gensmusic/followers", "following_url": "https://api.github.com/users/gensmusic/following{/other_user}", "gists_url": "https://api.github.com/users/gensmusic/gists{/gist_id}", "starred_url": "https://api.github.com/users/gensmusic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gensmusic/subscriptions", "organizations_url": "https://api.github.com/users/gensmusic/orgs", "repos_url": "https://api.github.com/users/gensmusic/repos", "events_url": "https://api.github.com/users/gensmusic/events{/privacy}", "received_events_url": "https://api.github.com/users/gensmusic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-30T04:08:31Z", "updated_at": "2015-11-02T07:21:34Z", "closed_at": "2015-11-02T07:21:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently I use flask + uwsgi + nginx to make a server and I use Flask-HTTPAuth\nto do the digest auth in flask.\nMost ot time it works fine but when I do a large post (let's say 3M) then I got 502 error in browser.\nnginx error:\n\n [error] 3438#0: *16 sendfile() failed (32: Broken pipe) while sending request to upstream, client: 203.100.xx.xx, server: xxxx.net, request: \"POST /create_invitation HTTP/1.1\", upstream: \"uwsgi://unix:/xxxxr/uwsgi.sock:\n\nI search a lot on google to solve it but didn't success until I close the http auth.\nAnd it works well now. So should I move http auth from flask to nginx ?\n\nI guess flask-httpauth close the connection after it sends 401 ? So nginx got error ?\n\nthanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/27", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/27/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/27/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/27", "id": 102346302, "node_id": "MDU6SXNzdWUxMDIzNDYzMDI=", "number": 27, "title": "Security hole: HTTP Digest Auth implementation relies on cookies for nonce/opaque verification", "user": {"login": "proycon", "id": 75427, "node_id": "MDQ6VXNlcjc1NDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/75427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/proycon", "html_url": "https://github.com/proycon", "followers_url": "https://api.github.com/users/proycon/followers", "following_url": "https://api.github.com/users/proycon/following{/other_user}", "gists_url": "https://api.github.com/users/proycon/gists{/gist_id}", "starred_url": "https://api.github.com/users/proycon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/proycon/subscriptions", "organizations_url": "https://api.github.com/users/proycon/orgs", "repos_url": "https://api.github.com/users/proycon/repos", "events_url": "https://api.github.com/users/proycon/events{/privacy}", "received_events_url": "https://api.github.com/users/proycon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-08-21T10:13:56Z", "updated_at": "2015-08-24T10:31:59Z", "closed_at": "2015-08-22T22:18:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Correct me if I'm wrong, but since flask.session uses cookies and HTTPDigestAuth uses sessions\nto hold the nonce, the client-supplied nonce from the authentication header is simply checked against another client-supplied nonce (from the cookie), making it insecure. An attacker sniffing the network can always forge a cookie and so duplicate the same nonce. The same goes for the opaque for that matter. I think the nonce/opaque to check against should be retained fully server-side.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/26", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/26/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/26/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/26", "id": 101486441, "node_id": "MDU6SXNzdWUxMDE0ODY0NDE=", "number": 26, "title": "Digest auth", "user": {"login": "Aidenir", "id": 1444625, "node_id": "MDQ6VXNlcjE0NDQ2MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1444625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aidenir", "html_url": "https://github.com/Aidenir", "followers_url": "https://api.github.com/users/Aidenir/followers", "following_url": "https://api.github.com/users/Aidenir/following{/other_user}", "gists_url": "https://api.github.com/users/Aidenir/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aidenir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aidenir/subscriptions", "organizations_url": "https://api.github.com/users/Aidenir/orgs", "repos_url": "https://api.github.com/users/Aidenir/repos", "events_url": "https://api.github.com/users/Aidenir/events{/privacy}", "received_events_url": "https://api.github.com/users/Aidenir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123231, "node_id": "MDU6TGFiZWw0MDEyMzIzMQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-17T18:53:07Z", "updated_at": "2016-09-04T21:05:48Z", "closed_at": "2016-09-04T21:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, sorry if this is dumb, but I am pulling my hair out over issues with digest auth and this library.\nI copied the example from the readme, and just added host='0.0.0.0' to the app.run to access it from my desktop (running on server). I brought up the url i chrome, tried logging in as john with password hello. First time it worked. Then I tried in an incognito tab, and I only get 401s after that. Tried with \n\ncurl -v --digest -u \"john:hello\" host:5000/\n\nGet 401 there as well. Is there some special trick I'm missing for digest auth?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/25", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/25/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/25/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/25", "id": 94036274, "node_id": "MDU6SXNzdWU5NDAzNjI3NA==", "number": 25, "title": "The @auth.login_required() must be always after @route", "user": {"login": "somenxavier", "id": 89915, "node_id": "MDQ6VXNlcjg5OTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/89915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/somenxavier", "html_url": "https://github.com/somenxavier", "followers_url": "https://api.github.com/users/somenxavier/followers", "following_url": "https://api.github.com/users/somenxavier/following{/other_user}", "gists_url": "https://api.github.com/users/somenxavier/gists{/gist_id}", "starred_url": "https://api.github.com/users/somenxavier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/somenxavier/subscriptions", "organizations_url": "https://api.github.com/users/somenxavier/orgs", "repos_url": "https://api.github.com/users/somenxavier/repos", "events_url": "https://api.github.com/users/somenxavier/events{/privacy}", "received_events_url": "https://api.github.com/users/somenxavier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-09T12:32:17Z", "updated_at": "2015-07-10T06:15:32Z", "closed_at": "2015-07-10T06:15:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please, warn that in the [documentation](http://flask-httpauth.readthedocs.org/en/latest/), please. I got crazy with that ;-)\n\n```\n@app.route(\"/api/user/\", methods=['GET'])\n@auth.login_required\ndef get_users():\n    bla....\n\n```\n\nwill return good response. But \n\n```\n@auth.login_required\n@app.route(\"/api/user/\", methods=['GET'])\ndef get_users():\n    bla....\n\n```\n\nhas no effects.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/22", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/22/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/22/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/22", "id": 69887385, "node_id": "MDU6SXNzdWU2OTg4NzM4NQ==", "number": 22, "title": "Enable a way to provide custom method for \"WWW-Authenticate\" header", "user": {"login": "jackunion", "id": 3966730, "node_id": "MDQ6VXNlcjM5NjY3MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3966730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackunion", "html_url": "https://github.com/jackunion", "followers_url": "https://api.github.com/users/jackunion/followers", "following_url": "https://api.github.com/users/jackunion/following{/other_user}", "gists_url": "https://api.github.com/users/jackunion/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackunion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackunion/subscriptions", "organizations_url": "https://api.github.com/users/jackunion/orgs", "repos_url": "https://api.github.com/users/jackunion/repos", "events_url": "https://api.github.com/users/jackunion/events{/privacy}", "received_events_url": "https://api.github.com/users/jackunion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123229, "node_id": "MDU6TGFiZWw0MDEyMzIyOQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-04-21T16:12:51Z", "updated_at": "2015-09-20T09:50:18Z", "closed_at": "2015-09-19T23:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "i.e. avoiding browser popups for 401\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/18", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/18/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/18/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/18", "id": 60607638, "node_id": "MDU6SXNzdWU2MDYwNzYzOA==", "number": 18, "title": "Fix documentation on import", "user": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-11T04:04:47Z", "updated_at": "2015-03-22T16:45:13Z", "closed_at": "2015-03-22T16:45:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/mitsuhiko/flask/issues/1135\n\nUse `from flask_foo import bar` instead of `from flask.ext.foo import bar`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/17", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/17/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/17/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/17", "id": 56495804, "node_id": "MDU6SXNzdWU1NjQ5NTgwNA==", "number": 17, "title": "is it possible to return different versions of views based on authenticated or not", "user": {"login": "fyears", "id": 1142836, "node_id": "MDQ6VXNlcjExNDI4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyears", "html_url": "https://github.com/fyears", "followers_url": "https://api.github.com/users/fyears/followers", "following_url": "https://api.github.com/users/fyears/following{/other_user}", "gists_url": "https://api.github.com/users/fyears/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyears/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyears/subscriptions", "organizations_url": "https://api.github.com/users/fyears/orgs", "repos_url": "https://api.github.com/users/fyears/repos", "events_url": "https://api.github.com/users/fyears/events{/privacy}", "received_events_url": "https://api.github.com/users/fyears/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123229, "node_id": "MDU6TGFiZWw0MDEyMzIyOQ==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-02-04T08:42:24Z", "updated_at": "2015-03-03T03:12:13Z", "closed_at": "2015-03-02T07:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, I am building a twitter-like website. I would like the website has these responses:\n\n``` bash\ncurl https://localhost/home\n# => return a public timeline\ncurl -u username:password https://localhost/home\n# => return the personal timeline\n```\n\nHowever, if I write code like this:\n\n``` python\n@app.route('/home')\n@auth.login_required\ndef home():\n   pass\n```\n\nI would get:\n\n``` bash\ncurl https://localhost/home\n# => 401 error (default in Flask-HTTPAuth)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/16", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/16/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/16/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/16", "id": 56328567, "node_id": "MDU6SXNzdWU1NjMyODU2Nw==", "number": 16, "title": "any way to allow token somewhere and disallow token elsewhere?", "user": {"login": "fyears", "id": 1142836, "node_id": "MDQ6VXNlcjExNDI4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyears", "html_url": "https://github.com/fyears", "followers_url": "https://api.github.com/users/fyears/followers", "following_url": "https://api.github.com/users/fyears/following{/other_user}", "gists_url": "https://api.github.com/users/fyears/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyears/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyears/subscriptions", "organizations_url": "https://api.github.com/users/fyears/orgs", "repos_url": "https://api.github.com/users/fyears/repos", "events_url": "https://api.github.com/users/fyears/events{/privacy}", "received_events_url": "https://api.github.com/users/fyears/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-03T03:21:02Z", "updated_at": "2015-02-03T05:41:56Z", "closed_at": "2015-02-03T05:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example,\n\n``` python\n@auth.verify_password\ndef verify_password(email_or_token='', password=''):\n    pass\n\n@app.route('/users/<username>/', methods=['GET','POST','PUT','DELETE'])\n@auth.login_required\ndef user_all(username):\n    # general info\n    # allowing auth with username+password or token\n    pass\n\n@app.route('/users/<username>/tokens/', methods=['POST', 'DELETE'])\n@auth.login_required\ndef user_token(username):\n    # manage tokens\n    # only allowing auth with username+password\n    pass\n```\n\nIn the above routes (resources), I would like to:\nallow users manage general info using username+password or tokens,\nallow users manage tokens using username+password, but NOT tokens here.\n\nIn fact, GitHub API is designed like this. :-)\n\nIs there any way to do this with `Flask-HTTPAuth`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/14", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/14/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/14/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/14", "id": 46097014, "node_id": "MDU6SXNzdWU0NjA5NzAxNA==", "number": 14, "title": "how to do logout ", "user": {"login": "jabhishek87", "id": 2536001, "node_id": "MDQ6VXNlcjI1MzYwMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2536001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jabhishek87", "html_url": "https://github.com/jabhishek87", "followers_url": "https://api.github.com/users/jabhishek87/followers", "following_url": "https://api.github.com/users/jabhishek87/following{/other_user}", "gists_url": "https://api.github.com/users/jabhishek87/gists{/gist_id}", "starred_url": "https://api.github.com/users/jabhishek87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jabhishek87/subscriptions", "organizations_url": "https://api.github.com/users/jabhishek87/orgs", "repos_url": "https://api.github.com/users/jabhishek87/repos", "events_url": "https://api.github.com/users/jabhishek87/events{/privacy}", "received_events_url": "https://api.github.com/users/jabhishek87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123230, "node_id": "MDU6TGFiZWw0MDEyMzIzMA==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2014-10-17T13:07:17Z", "updated_at": "2019-10-31T08:58:41Z", "closed_at": "2015-04-26T06:08:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to logout ? \nlogout feature missing ..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/12", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/12/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/12/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/12", "id": 43433604, "node_id": "MDU6SXNzdWU0MzQzMzYwNA==", "number": 12, "title": "'HTTPDigestAuth' object has no attribute 'hash_password'", "user": {"login": "christianschmizz", "id": 88237, "node_id": "MDQ6VXNlcjg4MjM3", "avatar_url": "https://avatars0.githubusercontent.com/u/88237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christianschmizz", "html_url": "https://github.com/christianschmizz", "followers_url": "https://api.github.com/users/christianschmizz/followers", "following_url": "https://api.github.com/users/christianschmizz/following{/other_user}", "gists_url": "https://api.github.com/users/christianschmizz/gists{/gist_id}", "starred_url": "https://api.github.com/users/christianschmizz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christianschmizz/subscriptions", "organizations_url": "https://api.github.com/users/christianschmizz/orgs", "repos_url": "https://api.github.com/users/christianschmizz/repos", "events_url": "https://api.github.com/users/christianschmizz/events{/privacy}", "received_events_url": "https://api.github.com/users/christianschmizz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-22T07:59:08Z", "updated_at": "2014-10-09T08:55:27Z", "closed_at": "2014-10-09T08:55:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using HTTPDigestAuth as follows\n\n```\n    @auth.hash_password\n    def hash_pw(password):\n        return pwd_context.encrypt(password)\n\n\n    @auth.get_password\n    def get_pw(login):\n        account = Account.query.filter_by(login=login).first()\n        if account:\n            return account.password\n        return None\n\n\n    @auth.verify_password\n    def verify_password(login, password):\n        account = Account.query.filter_by(login).first()\n        if not account:\n            return False\n        return pwd_context.verify(password, account.password_hash)\n\n```\n\nyou get the above stated error. This is obviously caused by `class HTTPDigestAuth(HTTPAuth)` as it inherits from `HttpAuth`not `HttpBasicAuth`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/10", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/10/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/10/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/10", "id": 31354360, "node_id": "MDU6SXNzdWUzMTM1NDM2MA==", "number": 10, "title": "Push a new release to PyPi", "user": {"login": "hcarvalhoalves", "id": 161577, "node_id": "MDQ6VXNlcjE2MTU3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/161577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hcarvalhoalves", "html_url": "https://github.com/hcarvalhoalves", "followers_url": "https://api.github.com/users/hcarvalhoalves/followers", "following_url": "https://api.github.com/users/hcarvalhoalves/following{/other_user}", "gists_url": "https://api.github.com/users/hcarvalhoalves/gists{/gist_id}", "starred_url": "https://api.github.com/users/hcarvalhoalves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hcarvalhoalves/subscriptions", "organizations_url": "https://api.github.com/users/hcarvalhoalves/orgs", "repos_url": "https://api.github.com/users/hcarvalhoalves/repos", "events_url": "https://api.github.com/users/hcarvalhoalves/events{/privacy}", "received_events_url": "https://api.github.com/users/hcarvalhoalves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-11T19:14:04Z", "updated_at": "2014-10-09T22:36:54Z", "closed_at": "2014-10-09T22:36:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would be nice to get 044b7d4a44425a4b9d02280b80988e8986641a0d on PyPi, since that issue bites anyone building REST APIs to be consumed on the browser.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/9", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/9/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/9/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/9", "id": 31226005, "node_id": "MDU6SXNzdWUzMTIyNjAwNQ==", "number": 9, "title": "use auth within multiple blueprints", "user": {"login": "inkrement", "id": 604528, "node_id": "MDQ6VXNlcjYwNDUyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/604528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inkrement", "html_url": "https://github.com/inkrement", "followers_url": "https://api.github.com/users/inkrement/followers", "following_url": "https://api.github.com/users/inkrement/following{/other_user}", "gists_url": "https://api.github.com/users/inkrement/gists{/gist_id}", "starred_url": "https://api.github.com/users/inkrement/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inkrement/subscriptions", "organizations_url": "https://api.github.com/users/inkrement/orgs", "repos_url": "https://api.github.com/users/inkrement/repos", "events_url": "https://api.github.com/users/inkrement/events{/privacy}", "received_events_url": "https://api.github.com/users/inkrement/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-10T09:12:58Z", "updated_at": "2015-09-18T10:29:31Z", "closed_at": "2014-04-10T09:55:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can a single HTTPAuth setup used within multipe blueprints? I tried to configure it within the **init**.py of my package and import it within my subpackages. But this is a circular dependency. \n\n`__init__.py` imports blueprint `xy.py`, which itself imports **init**.py, because of auth.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/7", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/7/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/7/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/7", "id": 30934958, "node_id": "MDU6SXNzdWUzMDkzNDk1OA==", "number": 7, "title": "Optional Login", "user": {"login": "inkrement", "id": 604528, "node_id": "MDQ6VXNlcjYwNDUyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/604528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inkrement", "html_url": "https://github.com/inkrement", "followers_url": "https://api.github.com/users/inkrement/followers", "following_url": "https://api.github.com/users/inkrement/following{/other_user}", "gists_url": "https://api.github.com/users/inkrement/gists{/gist_id}", "starred_url": "https://api.github.com/users/inkrement/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inkrement/subscriptions", "organizations_url": "https://api.github.com/users/inkrement/orgs", "repos_url": "https://api.github.com/users/inkrement/repos", "events_url": "https://api.github.com/users/inkrement/events{/privacy}", "received_events_url": "https://api.github.com/users/inkrement/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-06T10:51:14Z", "updated_at": "2014-04-10T09:05:10Z", "closed_at": "2014-04-10T09:05:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I check if a user is logged in (the route has no `login_required` decorator)?\n\nI tried to test if g.user is not None, but I receive following error:\n\n```\nAttributeError: '_AppCtxGlobals' object has no attribute 'user'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/6", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/6/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/6/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/6", "id": 30452240, "node_id": "MDU6SXNzdWUzMDQ1MjI0MA==", "number": 6, "title": "Multiple verify_password functions?", "user": {"login": "Siecje", "id": 4069476, "node_id": "MDQ6VXNlcjQwNjk0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4069476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Siecje", "html_url": "https://github.com/Siecje", "followers_url": "https://api.github.com/users/Siecje/followers", "following_url": "https://api.github.com/users/Siecje/following{/other_user}", "gists_url": "https://api.github.com/users/Siecje/gists{/gist_id}", "starred_url": "https://api.github.com/users/Siecje/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Siecje/subscriptions", "organizations_url": "https://api.github.com/users/Siecje/orgs", "repos_url": "https://api.github.com/users/Siecje/repos", "events_url": "https://api.github.com/users/Siecje/events{/privacy}", "received_events_url": "https://api.github.com/users/Siecje/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-29T20:40:39Z", "updated_at": "2014-07-09T16:48:22Z", "closed_at": "2014-07-09T16:48:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed your REST tutorials and I am trying to build on top of your User token authentication REST app.\n\nIn addition to checking for valid login credentials I am trying to restrict some REST resources to only admins.\n\nIs this supported? Can you have multiple verify_password functions with different decorators?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/5", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/5/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/5/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/5", "id": 29499357, "node_id": "MDU6SXNzdWUyOTQ5OTM1Nw==", "number": 5, "title": "HTTPDigestAuth raise TypeError when get_password() returns None.", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-03-15T19:13:42Z", "updated_at": "2015-02-18T17:25:59Z", "closed_at": "2014-03-16T02:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "If we implement `@auth.get_password` as described in the doc:\n\n``` python\n@auth.get_password\ndef get_pw(username):\n    if username in users:\n        return users[username]\n    return None\n```\n\nWhen the user logs in with an invalid user name, the script with raise an error:\n\n```\n  File \".../env/lib/python3.3/site-packages/flask_httpauth.py\", line 52, in decorated\n    if not self.authenticate(auth, password):\n  File \".../env/lib/python3.3/site-packages/flask_httpauth.py\", line 108, in authenticate\n    a1 = auth.username + \":\" + auth.realm + \":\" + password\nTypeError: Can't convert 'NoneType' object to str implicitly\n```\n\n(BTW the test suite does not catch this because it simply makes every invalid user's password being `'other'`. This is totally wrong, and should return some non-string  to indicate unconditional rejection.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/3", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/3/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/3/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/3", "id": 19512733, "node_id": "MDU6SXNzdWUxOTUxMjczMw==", "number": 3, "title": "HTTPAuth.username is not thread safe", "user": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-09-15T01:12:13Z", "updated_at": "2013-09-26T21:45:06Z", "closed_at": "2013-09-26T21:45:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The way the logged in username is made available to view functions does not work for multi-threaded servers (multi-process servers are okay).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/2", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/2/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/2/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/2", "id": 18728809, "node_id": "MDU6SXNzdWUxODcyODgwOQ==", "number": 2, "title": "Python >= 3.2 hashlib is now expecting a byte stream", "user": {"login": "adulau", "id": 3309, "node_id": "MDQ6VXNlcjMzMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adulau", "html_url": "https://github.com/adulau", "followers_url": "https://api.github.com/users/adulau/followers", "following_url": "https://api.github.com/users/adulau/following{/other_user}", "gists_url": "https://api.github.com/users/adulau/gists{/gist_id}", "starred_url": "https://api.github.com/users/adulau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adulau/subscriptions", "organizations_url": "https://api.github.com/users/adulau/orgs", "repos_url": "https://api.github.com/users/adulau/repos", "events_url": "https://api.github.com/users/adulau/events{/privacy}", "received_events_url": "https://api.github.com/users/adulau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40123227, "node_id": "MDU6TGFiZWw0MDEyMzIyNw==", "url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-08-29T12:52:27Z", "updated_at": "2013-09-15T01:09:53Z", "closed_at": "2013-09-15T01:09:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI had some issues with Python 3.3 and hashlib as it seems that hashlib is now requiring a byte stream. \n\nLet me know if this makes sense.\n\nCheers.\n\nDiff below:\n\n``` diff\ndiff --git a/flask_httpauth.py b/flask_httpauth.py\nindex bdd8f95..55012a5 100644\n--- a/flask_httpauth.py\n+++ b/flask_httpauth.py\n@@ -76,7 +76,7 @@ class HTTPBasicAuth(HTTPAuth):\n\n class HTTPDigestAuth(HTTPAuth):\n     def get_nonce(self):\n-        return md5(str(random())).hexdigest()\n+        return md5(str(random()).encode('utf-8')).hexdigest()\n\n     def authenticate_header(self):\n         session[\"auth_nonce\"] = self.get_nonce()\n@@ -89,9 +89,9 @@ class HTTPDigestAuth(HTTPAuth):\n         if auth.nonce != session.get(\"auth_nonce\") or auth.opaque != session.get(\"auth_opaque\"):\n             return False\n         a1 = auth.username + \":\" + auth.realm + \":\" + password\n-        ha1 = md5(a1).hexdigest()\n+        ha1 = md5(a1.encode('utf-8')).hexdigest()\n         a2 = request.method + \":\" + auth.uri\n-        ha2 = md5(a2).hexdigest()\n+        ha2 = md5(a2.encode('utf-8')).hexdigest()\n         a3 = ha1 + \":\" + auth.nonce + \":\" + ha2\n-        response = md5(a3).hexdigest()\n+        response = md5(a3.encode('utf-8')).hexdigest()\n         return response == auth.response\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/1", "repository_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth", "labels_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/1/comments", "events_url": "https://api.github.com/repos/miguelgrinberg/Flask-HTTPAuth/issues/1/events", "html_url": "https://github.com/miguelgrinberg/Flask-HTTPAuth/issues/1", "id": 14683683, "node_id": "MDU6SXNzdWUxNDY4MzY4Mw==", "number": 1, "title": "Support for hashed passwords?", "user": {"login": "cliffmcc", "id": 945679, "node_id": "MDQ6VXNlcjk0NTY3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/945679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cliffmcc", "html_url": "https://github.com/cliffmcc", "followers_url": "https://api.github.com/users/cliffmcc/followers", "following_url": "https://api.github.com/users/cliffmcc/following{/other_user}", "gists_url": "https://api.github.com/users/cliffmcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cliffmcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cliffmcc/subscriptions", "organizations_url": "https://api.github.com/users/cliffmcc/orgs", "repos_url": "https://api.github.com/users/cliffmcc/repos", "events_url": "https://api.github.com/users/cliffmcc/events{/privacy}", "received_events_url": "https://api.github.com/users/cliffmcc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miguelgrinberg", "id": 2715854, "node_id": "MDQ6VXNlcjI3MTU4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgrinberg", "html_url": "https://github.com/miguelgrinberg", "followers_url": "https://api.github.com/users/miguelgrinberg/followers", "following_url": "https://api.github.com/users/miguelgrinberg/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgrinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgrinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgrinberg/subscriptions", "organizations_url": "https://api.github.com/users/miguelgrinberg/orgs", "repos_url": "https://api.github.com/users/miguelgrinberg/repos", "events_url": "https://api.github.com/users/miguelgrinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgrinberg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2013-05-23T16:37:02Z", "updated_at": "2014-06-17T19:12:10Z", "closed_at": "2013-05-24T01:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have you considered changing this module to support hashed passwords? A simple function that mutated the HTTP provided password before it was compared against the password obtained from @auth.get_password would do the trick. Perhaps a decorator called @auth.hash_password?\n\nThis would let you use Basic Auth over SSL and provide much stronger hashing than what's built into HTTP Digest, and prevent your service from storing plaintext passwords in the DB.\n", "performed_via_github_app": null, "score": 1.0}]}