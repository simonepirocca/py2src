{"total_count": 243, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/622", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/622/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/622/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/622", "id": 655454464, "node_id": "MDU6SXNzdWU2NTU0NTQ0NjQ=", "number": 622, "title": "Unable to login due to rest-auth store password in different format.", "user": {"login": "sanjaysupanch", "id": 33094031, "node_id": "MDQ6VXNlcjMzMDk0MDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/33094031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjaysupanch", "html_url": "https://github.com/sanjaysupanch", "followers_url": "https://api.github.com/users/sanjaysupanch/followers", "following_url": "https://api.github.com/users/sanjaysupanch/following{/other_user}", "gists_url": "https://api.github.com/users/sanjaysupanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjaysupanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjaysupanch/subscriptions", "organizations_url": "https://api.github.com/users/sanjaysupanch/orgs", "repos_url": "https://api.github.com/users/sanjaysupanch/repos", "events_url": "https://api.github.com/users/sanjaysupanch/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjaysupanch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T18:43:57Z", "updated_at": "2020-07-12T21:11:48Z", "closed_at": "2020-07-12T21:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Signup through all-auth form the password store in this format \r\n      \"pbkdf2_sha256$180000$cZPa7zIRuSyB$Njb3XmCAyMGvJO/49KBMqYHXYHx+m4xdf27zB+tYPvQ=\"\r\n* Signup through rest-auth the password store in this format \"!NHJPFX1g7KzLFrqCSLqNuNgeVuO1FWOS5DCxKdPT\"  thats why unable to login in django.\r\n\r\n#=================================serializers.py===============================\r\n`\r\n    class RegisterSerializer(serializers.ModelSerializer):\r\n        email = serializers.EmailField(required=allauth_settings.EMAIL_REQUIRED)\r\n        full_name = serializers.CharField(required=True, write_only=True)\r\n        phone_number = serializers.CharField(required=True, write_only=True)\r\n        password = serializers.CharField(max_length=255, style={'input_type': 'password'})\r\n\r\n    \r\n    class Meta:\r\n        model = CustomUser\r\n        fields = ['id', 'email', 'full_name', 'phone_number', 'password']\r\n        extra_kwargs = {'password': {'write_only':True}}\r\n\r\n    def validate_email(self, email):\r\n        email = get_adapter().clean_email(email)\r\n        if allauth_settings.UNIQUE_EMAIL:\r\n            if email and email_address_exists(email):\r\n                raise serializers.ValidationError(\r\n                    \"A user is already registered with this e-mail address.\")\r\n        return email\r\n\r\n    # def validate_password(self, password):\r\n    #     return make_password(password)\r\n    \r\n    def get_cleaned_data(self):\r\n        \r\n        return {\r\n            'full_name': self.validated_data.get('full_name', ''),\r\n            'phone_number': self.validated_data.get('phone_number', ''),\r\n            'password': make_password(self.validated_data.get('password', '')),\r\n            'email': self.validated_data.get('email', ''),\r\n            \r\n        }\r\n\r\n\r\n    def save(self, request):\r\n        adapter = get_adapter()\r\n        user = adapter.new_user(request)\r\n        self.cleaned_data = self.get_cleaned_data()\r\n        adapter.save_user(request, user, self)\r\n        setup_user_email(request, user, [])\r\n        return user\r\n`\r\n# Please tell me how I store password in correct hashing format", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/615", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/615/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/615/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/615", "id": 615061927, "node_id": "MDU6SXNzdWU2MTUwNjE5Mjc=", "number": 615, "title": "SocialApp matching query does not exist.", "user": {"login": "nomhoi", "id": 2551018, "node_id": "MDQ6VXNlcjI1NTEwMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2551018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nomhoi", "html_url": "https://github.com/nomhoi", "followers_url": "https://api.github.com/users/nomhoi/followers", "following_url": "https://api.github.com/users/nomhoi/following{/other_user}", "gists_url": "https://api.github.com/users/nomhoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nomhoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nomhoi/subscriptions", "organizations_url": "https://api.github.com/users/nomhoi/orgs", "repos_url": "https://api.github.com/users/nomhoi/repos", "events_url": "https://api.github.com/users/nomhoi/events{/privacy}", "received_events_url": "https://api.github.com/users/nomhoi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T01:26:54Z", "updated_at": "2020-05-09T04:26:51Z", "closed_at": "2020-05-09T04:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error:\r\n\r\n> DoesNotExist at /auth/facebook/\r\n> SocialApp matching query does not exist.\r\n\r\nSocial app Facebook was added.\r\n\r\nLocal vars:\r\n\r\nVariable | Value\r\n-- | --\r\nargs | ()\r\nclone | <QuerySet []>\r\nkwargs | {'provider': 'facebook', 'sites__id': 1}\r\nlimit | 21\r\nnum | 0\r\nself | <QuerySet [<SocialApp: Facebook>]>\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/613", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/613/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/613/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/613", "id": 610759897, "node_id": "MDU6SXNzdWU2MTA3NTk4OTc=", "number": 613, "title": "how can I change base urls names?", "user": {"login": "Pranay9752", "id": 59098761, "node_id": "MDQ6VXNlcjU5MDk4NzYx", "avatar_url": "https://avatars0.githubusercontent.com/u/59098761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pranay9752", "html_url": "https://github.com/Pranay9752", "followers_url": "https://api.github.com/users/Pranay9752/followers", "following_url": "https://api.github.com/users/Pranay9752/following{/other_user}", "gists_url": "https://api.github.com/users/Pranay9752/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pranay9752/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pranay9752/subscriptions", "organizations_url": "https://api.github.com/users/Pranay9752/orgs", "repos_url": "https://api.github.com/users/Pranay9752/repos", "events_url": "https://api.github.com/users/Pranay9752/events{/privacy}", "received_events_url": "https://api.github.com/users/Pranay9752/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-01T13:48:23Z", "updated_at": "2020-05-02T17:19:29Z", "closed_at": "2020-05-02T17:19:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**There is an url name siteurl/users, \r\nI dont want it be users i want to change the name to account.\r\nHow can i do that? please help fast**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/612", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/612/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/612/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/612", "id": 597933931, "node_id": "MDU6SXNzdWU1OTc5MzM5MzE=", "number": 612, "title": "create userprofile", "user": {"login": "Terkea", "id": 11928943, "node_id": "MDQ6VXNlcjExOTI4OTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/11928943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Terkea", "html_url": "https://github.com/Terkea", "followers_url": "https://api.github.com/users/Terkea/followers", "following_url": "https://api.github.com/users/Terkea/following{/other_user}", "gists_url": "https://api.github.com/users/Terkea/gists{/gist_id}", "starred_url": "https://api.github.com/users/Terkea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Terkea/subscriptions", "organizations_url": "https://api.github.com/users/Terkea/orgs", "repos_url": "https://api.github.com/users/Terkea/repos", "events_url": "https://api.github.com/users/Terkea/events{/privacy}", "received_events_url": "https://api.github.com/users/Terkea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T15:02:00Z", "updated_at": "2020-04-10T15:55:06Z", "closed_at": "2020-04-10T15:54:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using [django-rest-auth](https://django-rest-auth.readthedocs.io/en/latest/index.html) to handle login and registration. The problem that I stumbled upon is that I'd like to add some custom fields to the default `django User model`. I've seen you are covering that on the docs and I've tried replicating their example from [here](https://django-rest-auth.readthedocs.io/en/latest/faq.html), but when I am making a PUT request for the newly created field from the userprofile I get this error:\r\n\r\n```\r\nRelatedObjectDoesNotExist at /rest-auth/user/\r\nUser has no userprofile.\r\nRequest Method:\tPUT\r\nRequest URL:\thttp://localhost:8000/rest-auth/user/\r\nDjango Version:\t2.2.10\r\nException Type:\tRelatedObjectDoesNotExist\r\nException Value:\t\r\nUser has no userprofile.\r\nException Location:\t/home/terkea/django_react_template/src/venv/lib/python3.6/site-packages/django/db/models/fields/related_descriptors.py in __get__, line 415\r\nPython Executable:\t/home/terkea/django_react_template/src/venv/bin/python\r\nPython Version:\t3.6.9\r\nPython Path:\t\r\n['/home/terkea/django_react_template/src',\r\n '/usr/lib/python36.zip',\r\n '/usr/lib/python3.6',\r\n '/usr/lib/python3.6/lib-dynload',\r\n '/home/terkea/django_react_template/src/venv/lib/python3.6/site-packages']\r\nServer time:\tFri, 10 Apr 2020 14:56:41 +0000\r\n```\r\n\r\nThis is my model\r\n```python\r\nfrom django.db import models\r\nfrom django.conf import settings\r\nfrom django.contrib.auth.models import User\r\n\r\nclass UserProfile(models.Model):\r\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\r\n    company_name = models.CharField(max_length=100, default=None)\r\n```\r\n\r\nand here's my serializer:\r\n```python\r\nfrom rest_framework import serializers\r\nfrom rest_auth.serializers import UserDetailsSerializer\r\n\r\n\r\nclass UserSerializer(UserDetailsSerializer):\r\n\r\n    company_name = serializers.CharField(source=\"userprofile.company_name\")\r\n\r\n    class Meta(UserDetailsSerializer.Meta):\r\n        fields = UserDetailsSerializer.Meta.fields + ('company_name',)\r\n\r\n    def update(self, instance, validated_data):\r\n        profile_data = validated_data.pop('userprofile', {})\r\n        company_name = profile_data.get('company_name')\r\n\r\n        instance = super(UserSerializer, self).update(instance, validated_data)\r\n\r\n        # get and update user profile\r\n        profile = instance.userprofile\r\n        if profile_data and company_name:\r\n            profile.company_name = company_name\r\n            profile.save()\r\n        return instance\r\n```\r\nI am assuming that the userprofile entry has to be created at the same time when the user is, but I don't know how exactly should I do it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/608", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/608/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/608/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/608", "id": 579472920, "node_id": "MDU6SXNzdWU1Nzk0NzI5MjA=", "number": 608, "title": "---", "user": {"login": "iMerica", "id": 487897, "node_id": "MDQ6VXNlcjQ4Nzg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iMerica", "html_url": "https://github.com/iMerica", "followers_url": "https://api.github.com/users/iMerica/followers", "following_url": "https://api.github.com/users/iMerica/following{/other_user}", "gists_url": "https://api.github.com/users/iMerica/gists{/gist_id}", "starred_url": "https://api.github.com/users/iMerica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iMerica/subscriptions", "organizations_url": "https://api.github.com/users/iMerica/orgs", "repos_url": "https://api.github.com/users/iMerica/repos", "events_url": "https://api.github.com/users/iMerica/events{/privacy}", "received_events_url": "https://api.github.com/users/iMerica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T18:46:53Z", "updated_at": "2020-03-11T18:48:06Z", "closed_at": "2020-03-11T18:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "---", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/606", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/606/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/606/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/606", "id": 574650338, "node_id": "MDU6SXNzdWU1NzQ2NTAzMzg=", "number": 606, "title": "This repo is UNMAINTAINED please use this repo instead", "user": {"login": "lggwettmann", "id": 4527829, "node_id": "MDQ6VXNlcjQ1Mjc4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4527829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lggwettmann", "html_url": "https://github.com/lggwettmann", "followers_url": "https://api.github.com/users/lggwettmann/followers", "following_url": "https://api.github.com/users/lggwettmann/following{/other_user}", "gists_url": "https://api.github.com/users/lggwettmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lggwettmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lggwettmann/subscriptions", "organizations_url": "https://api.github.com/users/lggwettmann/orgs", "repos_url": "https://api.github.com/users/lggwettmann/repos", "events_url": "https://api.github.com/users/lggwettmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lggwettmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T12:58:33Z", "updated_at": "2020-03-03T20:23:48Z", "closed_at": "2020-03-03T20:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/jazzband/dj-rest-auth", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/600", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/600/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/600/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/600", "id": 565694795, "node_id": "MDU6SXNzdWU1NjU2OTQ3OTU=", "number": 600, "title": "abandoned?", "user": {"login": "bsdis", "id": 1256202, "node_id": "MDQ6VXNlcjEyNTYyMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsdis", "html_url": "https://github.com/bsdis", "followers_url": "https://api.github.com/users/bsdis/followers", "following_url": "https://api.github.com/users/bsdis/following{/other_user}", "gists_url": "https://api.github.com/users/bsdis/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsdis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsdis/subscriptions", "organizations_url": "https://api.github.com/users/bsdis/orgs", "repos_url": "https://api.github.com/users/bsdis/repos", "events_url": "https://api.github.com/users/bsdis/events{/privacy}", "received_events_url": "https://api.github.com/users/bsdis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-15T04:21:27Z", "updated_at": "2020-03-01T21:39:51Z", "closed_at": "2020-03-01T21:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "No maintainence, no response to issue - huge back-log....looks to me like this repo is dead :/\r\n\r\nCorrect me if i am wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/597", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/597/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/597/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/597", "id": 549780879, "node_id": "MDU6SXNzdWU1NDk3ODA4Nzk=", "number": 597, "title": "Facebook login cannot get access_token from given code", "user": {"login": "koztay", "id": 5657245, "node_id": "MDQ6VXNlcjU2NTcyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5657245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koztay", "html_url": "https://github.com/koztay", "followers_url": "https://api.github.com/users/koztay/followers", "following_url": "https://api.github.com/users/koztay/following{/other_user}", "gists_url": "https://api.github.com/users/koztay/gists{/gist_id}", "starred_url": "https://api.github.com/users/koztay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koztay/subscriptions", "organizations_url": "https://api.github.com/users/koztay/orgs", "repos_url": "https://api.github.com/users/koztay/repos", "events_url": "https://api.github.com/users/koztay/events{/privacy}", "received_events_url": "https://api.github.com/users/koztay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T19:49:28Z", "updated_at": "2020-01-15T08:40:57Z", "closed_at": "2020-01-15T08:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the foolowing error when I make a POST request to the rest-auth/registration/facebook/ end-point:\r\n\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django/contrib/staticfiles/handlers.py\", line 65, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/wsgi.py\", line 141, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/six.py\", line 695, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.6/contextlib.py\", line 52, in inner\r\n    return func(*args, **kwds)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/decorators/debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n    return view(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_auth/views.py\", line 49, in dispatch\r\n    return super(LoginView, self).dispatch(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_auth/views.py\", line 103, in post\r\n    self.serializer.is_valid(raise_exception=True)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 236, in is_valid\r\n    self._validated_data = self.run_validation(self.initial_data)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 437, in run_validation\r\n    value = self.validate(value)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_auth/registration/serializers.py\", line 111, in validate\r\n    token = client.get_access_token(code)\r\n  File \"/usr/local/lib/python3.6/site-packages/allauth/socialaccount/providers/oauth2/client.py\", line 84, in get_access_token\r\n    % resp.content)\r\nallauth.socialaccount.providers.oauth2.client.OAuth2Error: Error retrieving access token: b''\r\n```\r\n\r\nMy FacebookLogin view as follows, I installed nginx to serve https in localhost etc. : \r\n\r\n```python\r\nclass FacebookLogin(SocialLoginView):\r\n    adapter_class = FacebookOAuth2Adapter\r\n    client_class = OAuth2Client\r\n    callback_url = \"https://localhost\"\r\n```\r\n\r\nThe popup window opens and when I give permission to the app, popup windows closes and the HTTP 500 error occurs as the above trace. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/586", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/586/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/586/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/586", "id": 530103569, "node_id": "MDU6SXNzdWU1MzAxMDM1Njk=", "number": 586, "title": "rest-auth/login returns {\"detail\":\"CSRF Failed: CSRF cookie not set.\"}", "user": {"login": "redcricket", "id": 3366521, "node_id": "MDQ6VXNlcjMzNjY1MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3366521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redcricket", "html_url": "https://github.com/redcricket", "followers_url": "https://api.github.com/users/redcricket/followers", "following_url": "https://api.github.com/users/redcricket/following{/other_user}", "gists_url": "https://api.github.com/users/redcricket/gists{/gist_id}", "starred_url": "https://api.github.com/users/redcricket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redcricket/subscriptions", "organizations_url": "https://api.github.com/users/redcricket/orgs", "repos_url": "https://api.github.com/users/redcricket/repos", "events_url": "https://api.github.com/users/redcricket/events{/privacy}", "received_events_url": "https://api.github.com/users/redcricket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-29T00:00:53Z", "updated_at": "2020-08-12T14:42:29Z", "closed_at": "2019-11-30T00:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have been trying to integrate React.js application to a Django server that has django-rest-auth installed.  The details of my question are here: https://stackoverflow.com/questions/59095076/dango-react-axios-and-csrf-failed-csrf-token-missing-or-incorrect\r\nThank you  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/580", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/580/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/580/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/580", "id": 515678839, "node_id": "MDU6SXNzdWU1MTU2Nzg4Mzk=", "number": 580, "title": "Is this Repository Still maintained?", "user": {"login": "Aniket-Singla", "id": 36408298, "node_id": "MDQ6VXNlcjM2NDA4Mjk4", "avatar_url": "https://avatars0.githubusercontent.com/u/36408298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aniket-Singla", "html_url": "https://github.com/Aniket-Singla", "followers_url": "https://api.github.com/users/Aniket-Singla/followers", "following_url": "https://api.github.com/users/Aniket-Singla/following{/other_user}", "gists_url": "https://api.github.com/users/Aniket-Singla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aniket-Singla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aniket-Singla/subscriptions", "organizations_url": "https://api.github.com/users/Aniket-Singla/orgs", "repos_url": "https://api.github.com/users/Aniket-Singla/repos", "events_url": "https://api.github.com/users/Aniket-Singla/events{/privacy}", "received_events_url": "https://api.github.com/users/Aniket-Singla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T19:14:12Z", "updated_at": "2019-10-31T20:16:39Z", "closed_at": "2019-10-31T20:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello , I started using this package because it provided support for django-allauth for social media authentication. But since it's seven months since last commit, I wanted to ask whether this package is still maintained or not? There are many flaws in the documentation and jwt usage is one of them. The documentation as well as the package is not update till now even after the anouncement of djangorestframework-jwt being depricated and moved. I wanted to ask all the folks out there should I continue using this package in my development or should I shift to other packages like Djoser or should I write my own views dealing with social media authentication. Sorry for asking a question in the issues section.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/579", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/579/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/579/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/579", "id": 512619553, "node_id": "MDU6SXNzdWU1MTI2MTk1NTM=", "number": 579, "title": "Problem when using gunicorn", "user": {"login": "playma", "id": 7677470, "node_id": "MDQ6VXNlcjc2Nzc0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7677470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playma", "html_url": "https://github.com/playma", "followers_url": "https://api.github.com/users/playma/followers", "following_url": "https://api.github.com/users/playma/following{/other_user}", "gists_url": "https://api.github.com/users/playma/gists{/gist_id}", "starred_url": "https://api.github.com/users/playma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playma/subscriptions", "organizations_url": "https://api.github.com/users/playma/orgs", "repos_url": "https://api.github.com/users/playma/repos", "events_url": "https://api.github.com/users/playma/events{/privacy}", "received_events_url": "https://api.github.com/users/playma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T16:56:52Z", "updated_at": "2019-11-07T01:37:28Z", "closed_at": "2019-11-07T01:37:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use gunicorn, I can not use `/api/rest-auth/facebook/`\r\nIt works well when I use `python3 mange.py runserver`\r\n\r\nStart server\r\n`gunicorn config.wsgi -b localhost:8000 --access-logfile - --log-level debug`\r\n\r\nit returns `200` in `option` and `connection:close`\r\n```\r\nHTTP 200 OK\r\nAllow: POST, OPTIONS\r\nContent-Type: application/json\r\nVary: Accept\r\n\r\n{\r\n    \"method\": null,\r\n    \"params\": {},\r\n    \"data\": {\r\n        \"name\": \"Facebook Login\",\r\n        \"description\": \"\",\r\n        \"renders\": [\r\n            \"application/json\",\r\n            \"text/html\"\r\n        ],\r\n        \"parses\": [\r\n            \"application/json\"\r\n        ],\r\n        \"actions\": {\r\n            \"POST\": {\r\n                \"accessToken\": {\r\n                    \"type\": \"string\",\r\n                    \"required\": false,\r\n                    \"readOnly\": false,\r\n                    \"label\": \"Access token\"\r\n                },\r\n                \"code\": {\r\n                    \"type\": \"string\",\r\n                    \"required\": false,\r\n                    \"readOnly\": false,\r\n                    \"label\": \"Code\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCan any one help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/557", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/557/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/557/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/557", "id": 464883021, "node_id": "MDU6SXNzdWU0NjQ4ODMwMjE=", "number": 557, "title": "/user/ endpoint \"Credentials not provided\" no matter what", "user": {"login": "SHxKM", "id": 6573474, "node_id": "MDQ6VXNlcjY1NzM0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6573474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHxKM", "html_url": "https://github.com/SHxKM", "followers_url": "https://api.github.com/users/SHxKM/followers", "following_url": "https://api.github.com/users/SHxKM/following{/other_user}", "gists_url": "https://api.github.com/users/SHxKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHxKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHxKM/subscriptions", "organizations_url": "https://api.github.com/users/SHxKM/orgs", "repos_url": "https://api.github.com/users/SHxKM/repos", "events_url": "https://api.github.com/users/SHxKM/events{/privacy}", "received_events_url": "https://api.github.com/users/SHxKM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-06T19:18:35Z", "updated_at": "2019-07-06T21:48:25Z", "closed_at": "2019-07-06T21:48:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was thinking that maybe I'm doing something wrong with the frontend but no matter how I try to access `accounts/auth/user` and pass the user's token, I get a `401 unauthorized` error.\r\n\r\nI've tried using postman and send the token in several ways and under several names, but nothing worked.\r\n\r\nPossibly relevant snippets from `settings.py`:\r\n```\r\n\r\nAUTHENTICATION_BACKENDS = (\r\n    \"allauth.account.auth_backends.AuthenticationBackend\",\r\n    \"django.contrib.auth.backends.ModelBackend\",\r\n)\r\n\r\n\r\nACCOUNT_AUTHENTICATION_METHOD = (\"username_email\")\r\nACCOUNT_EMAIL_REQUIRED = False\r\nACCOUNT_UNIQUE_EMAIL = True\r\nACCOUNT_USERNAME_REQUIRED = False\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        # 'rest_framework.authentication.SessionAuthentication',\r\n        'rest_framework.authentication.TokenAuthentication',\r\n    ),\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/546", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/546/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/546/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/546", "id": 454741800, "node_id": "MDU6SXNzdWU0NTQ3NDE4MDA=", "number": 546, "title": "Does django-rest-auth encrypt tokens in DB?", "user": {"login": "luisroel91", "id": 44761184, "node_id": "MDQ6VXNlcjQ0NzYxMTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/44761184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisroel91", "html_url": "https://github.com/luisroel91", "followers_url": "https://api.github.com/users/luisroel91/followers", "following_url": "https://api.github.com/users/luisroel91/following{/other_user}", "gists_url": "https://api.github.com/users/luisroel91/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisroel91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisroel91/subscriptions", "organizations_url": "https://api.github.com/users/luisroel91/orgs", "repos_url": "https://api.github.com/users/luisroel91/repos", "events_url": "https://api.github.com/users/luisroel91/events{/privacy}", "received_events_url": "https://api.github.com/users/luisroel91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T14:58:07Z", "updated_at": "2019-06-11T19:00:48Z", "closed_at": "2019-06-11T19:00:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not see this mentioned anywhere in the docs...\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/543", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/543/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/543/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/543", "id": 451604989, "node_id": "MDU6SXNzdWU0NTE2MDQ5ODk=", "number": 543, "title": "Redundant `is_existing` in SocialLoginSerializer.validate", "user": {"login": "fpghost", "id": 2691631, "node_id": "MDQ6VXNlcjI2OTE2MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2691631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpghost", "html_url": "https://github.com/fpghost", "followers_url": "https://api.github.com/users/fpghost/followers", "following_url": "https://api.github.com/users/fpghost/following{/other_user}", "gists_url": "https://api.github.com/users/fpghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpghost/subscriptions", "organizations_url": "https://api.github.com/users/fpghost/orgs", "repos_url": "https://api.github.com/users/fpghost/repos", "events_url": "https://api.github.com/users/fpghost/events{/privacy}", "received_events_url": "https://api.github.com/users/fpghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T17:37:55Z", "updated_at": "2019-06-04T12:50:14Z", "closed_at": "2019-06-04T12:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "![Selection_001](https://user-images.githubusercontent.com/2691631/58821398-475a4e00-8635-11e9-928b-89ef8e512218.png)\r\n\r\n\r\nIt seems that this `is_existing` by this stage would always return `True`.  Since just above\r\n`complete_social_login` was called, which is turn calls `_complete_social_login`, which in turn calls `_process_signup(request, sociallogin)` when it doesnt exist. \r\n\r\nAfter this `_process_signup` method is ran, `login.is_existing` is always true.  Hence by the time we get to L128 of your `SocialLoginSerializer.validate`, the `is_existing` would always be `True` and therefore it serves no purpose.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/535", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/535/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/535/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/535", "id": 445528033, "node_id": "MDU6SXNzdWU0NDU1MjgwMzM=", "number": 535, "title": "Custom Password Reset Form", "user": {"login": "aaronamelgar", "id": 42826952, "node_id": "MDQ6VXNlcjQyODI2OTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/42826952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronamelgar", "html_url": "https://github.com/aaronamelgar", "followers_url": "https://api.github.com/users/aaronamelgar/followers", "following_url": "https://api.github.com/users/aaronamelgar/following{/other_user}", "gists_url": "https://api.github.com/users/aaronamelgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronamelgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronamelgar/subscriptions", "organizations_url": "https://api.github.com/users/aaronamelgar/orgs", "repos_url": "https://api.github.com/users/aaronamelgar/repos", "events_url": "https://api.github.com/users/aaronamelgar/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronamelgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-17T16:43:17Z", "updated_at": "2019-05-17T17:52:21Z", "closed_at": "2019-05-17T17:52:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Password reset flow is working, however, I'd like to customize the password reset page so that it doesn't show the UID and token fields to the user. I assume I need to modify password_reset_confirm_form.html\r\n\r\n![Screen Shot 2019-05-17 at 9 36 36 AM](https://user-images.githubusercontent.com/42826952/57943048-ea664600-7887-11e9-82d7-59bf045be95d.png)\r\n\r\nI assume I need to modify password_reset_confirm_form.html copied below, but not sure how I can modify the html to remove the UID and Token forms so that it doesn't break the flow. \r\n\r\n![Screen Shot 2019-05-17 at 9 44 25 AM](https://user-images.githubusercontent.com/42826952/57943236-652f6100-7888-11e9-83ad-f8c3ef0b2d8d.png)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/532", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/532/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/532/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/532", "id": 440471510, "node_id": "MDU6SXNzdWU0NDA0NzE1MTA=", "number": 532, "title": "When using  django-axes same response for locked users and authentication failures.", "user": {"login": "antetna", "id": 10363296, "node_id": "MDQ6VXNlcjEwMzYzMjk2", "avatar_url": "https://avatars0.githubusercontent.com/u/10363296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antetna", "html_url": "https://github.com/antetna", "followers_url": "https://api.github.com/users/antetna/followers", "following_url": "https://api.github.com/users/antetna/following{/other_user}", "gists_url": "https://api.github.com/users/antetna/gists{/gist_id}", "starred_url": "https://api.github.com/users/antetna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antetna/subscriptions", "organizations_url": "https://api.github.com/users/antetna/orgs", "repos_url": "https://api.github.com/users/antetna/repos", "events_url": "https://api.github.com/users/antetna/events{/privacy}", "received_events_url": "https://api.github.com/users/antetna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-05T17:54:44Z", "updated_at": "2019-05-06T20:39:58Z", "closed_at": "2019-05-06T20:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using these packages:  \r\n```\r\nDjango==1.11\r\ndjango-axes==5.0.1\r\ndjango-rest-auth==0.9.5\r\ndjangorestframework==3.7.0\r\n```\r\nIf I use DRF login views it works as expected, locked out users will see lockout template page. \r\n\r\nWhen using django-rest-auth how to know if wrong credentials provided or user locked out by django-axes. \r\nBefore using django-axes it was easy because repsonse was HTTP 400 for failed logins, now even when good credentials provided if user has been locked out by django-axes I will get HTTP 400.\r\n\r\nMaybe django-rest-auth should listen for signal to catch this ?\r\n\r\ndjango-axes/handlers/database \r\n```\r\n if failures_since_start >= settings.AXES_FAILURE_LIMIT:\r\n            log.warning('AXES: Locking out %s after repeated login failures.', client_str)\r\n\r\n            user_locked_out.send(\r\n                'axes',\r\n                request=request,\r\n                username=username,\r\n                ip_address=request.axes_ip_address,\r\n            )\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/529", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/529/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/529/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/529", "id": 436448075, "node_id": "MDU6SXNzdWU0MzY0NDgwNzU=", "number": 529, "title": "REST_AUTH_REGISTER_SERIALIZERS completely ignored", "user": {"login": "sudomann", "id": 16912950, "node_id": "MDQ6VXNlcjE2OTEyOTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/16912950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudomann", "html_url": "https://github.com/sudomann", "followers_url": "https://api.github.com/users/sudomann/followers", "following_url": "https://api.github.com/users/sudomann/following{/other_user}", "gists_url": "https://api.github.com/users/sudomann/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudomann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudomann/subscriptions", "organizations_url": "https://api.github.com/users/sudomann/orgs", "repos_url": "https://api.github.com/users/sudomann/repos", "events_url": "https://api.github.com/users/sudomann/events{/privacy}", "received_events_url": "https://api.github.com/users/sudomann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T00:45:58Z", "updated_at": "2019-04-24T05:32:00Z", "closed_at": "2019-04-24T05:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my `settings.py` I have set:\r\n\r\n```\r\nREST_AUTH_REGISTER_SERIALIZERS = {\r\n    'REGISTER_SERIALIZER': 'users.serializers.UserRegisterSerializer',\r\n}\r\n```\r\n\r\nwhere:\r\n-  `users` is my Django app containing my custom user model\r\n- `serializers` is a python file in which\r\n  - `UserRegisterSerializer` is defined\r\n\r\nThis is in accordance with the [docs](https://django-rest-auth.readthedocs.io/en/0.9.4/configuration.html):\r\n\r\n> REST_AUTH_REGISTER_SERIALIZERS\r\n> \r\n> You can define your custom serializers for registration endpoint. Possible key values:\r\n> \r\n> REGISTER_SERIALIZER - serializer class in rest_auth.registration.views.RegisterView, default value rest_auth.registration.serializers.RegisterSerializer\r\n\r\n`django-rest-auth` still tries to use its default `RegisterSerializer` which causes Django to crash, as my `CustomUser` model does not have a username field (why I need a custom REGISTER_SERIALIZER in the first place).\r\n\r\n\r\n```\r\n$ python manage.py runserver\r\nWatching for file changes with StatReloader\r\nPerforming system checks...\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/db/models/options.py\", line 565, in get_field\r\n    return self.fields_map[field_name]\r\nKeyError: 'username'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 60, in execute\r\n    super().execute(*args, **options)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 95, in handle\r\n    self.run(**options)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 102, in run\r\n    autoreload.run_with_reloader(self.inner_run, **options)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 579, in run_with_reloader\r\n    start_django(reloader, main_func, *args, **kwargs)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 564, in start_django\r\n    reloader.run(django_main_thread)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/utils/autoreload.py\", line 272, in run\r\n    get_resolver().urlconf_module\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/utils/functional.py\", line 80, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/urls/resolvers.py\", line 564, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/sudomann/repos/divvy-env/divvy/django/divvy/urls.py\", line 22, in <module>\r\n    path('api/', include('api.urls')),\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/urls/conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/sudomann/repos/divvy-env/divvy/django/api/urls.py\", line 6, in <module>\r\n    path('rest-auth/registration/', include('rest_auth.registration.urls')),\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/urls/conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/rest_auth/registration/urls.py\", line 4, in <module>\r\n    from .views import RegisterView, VerifyEmailView\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/rest_auth/registration/views.py\", line 26, in <module>\r\n    from rest_auth.registration.serializers import (VerifyEmailSerializer,\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/rest_auth/registration/serializers.py\", line 166, in <module>\r\n    class RegisterSerializer(serializers.Serializer):\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/rest_auth/registration/serializers.py\", line 168, in RegisterSerializer\r\n    max_length=get_username_max_length(),\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/allauth/utils.py\", line 68, in get_username_max_length\r\n    max_length = User._meta.get_field(USER_MODEL_USERNAME_FIELD).max_length\r\n  File \"/home/sudomann/repos/divvy-env/lib/python3.6/site-packages/django/db/models/options.py\", line 567, in get_field\r\n    raise FieldDoesNotExist(\"%s has no field named '%s'\" % (self.object_name, field_name))\r\ndjango.core.exceptions.FieldDoesNotExist: CustomUser has no field named 'username'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/520", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/520/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/520/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/520", "id": 423073540, "node_id": "MDU6SXNzdWU0MjMwNzM1NDA=", "number": 520, "title": "Email address is not present in System still it send me this message .", "user": {"login": "Javedgouri", "id": 14862494, "node_id": "MDQ6VXNlcjE0ODYyNDk0", "avatar_url": "https://avatars1.githubusercontent.com/u/14862494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Javedgouri", "html_url": "https://github.com/Javedgouri", "followers_url": "https://api.github.com/users/Javedgouri/followers", "following_url": "https://api.github.com/users/Javedgouri/following{/other_user}", "gists_url": "https://api.github.com/users/Javedgouri/gists{/gist_id}", "starred_url": "https://api.github.com/users/Javedgouri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Javedgouri/subscriptions", "organizations_url": "https://api.github.com/users/Javedgouri/orgs", "repos_url": "https://api.github.com/users/Javedgouri/repos", "events_url": "https://api.github.com/users/Javedgouri/events{/privacy}", "received_events_url": "https://api.github.com/users/Javedgouri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-20T05:26:39Z", "updated_at": "2019-03-22T11:00:33Z", "closed_at": "2019-03-22T11:00:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "{\r\n    \"detail\": \"Password reset e-mail has been sent.\"\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/519", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/519/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/519/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/519", "id": 419821489, "node_id": "MDU6SXNzdWU0MTk4MjE0ODk=", "number": 519, "title": "When is the next release planned ?", "user": {"login": "Dineshs91", "id": 2663505, "node_id": "MDQ6VXNlcjI2NjM1MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2663505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dineshs91", "html_url": "https://github.com/Dineshs91", "followers_url": "https://api.github.com/users/Dineshs91/followers", "following_url": "https://api.github.com/users/Dineshs91/following{/other_user}", "gists_url": "https://api.github.com/users/Dineshs91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dineshs91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dineshs91/subscriptions", "organizations_url": "https://api.github.com/users/Dineshs91/orgs", "repos_url": "https://api.github.com/users/Dineshs91/repos", "events_url": "https://api.github.com/users/Dineshs91/events{/privacy}", "received_events_url": "https://api.github.com/users/Dineshs91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T06:26:55Z", "updated_at": "2019-04-01T08:17:22Z", "closed_at": "2019-04-01T08:17:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing an issue with logout and it has been fixed in this commit a3d38f4c59a9b9dbe1ca8c3408b103f307d47e81 For now I'm using master directly. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/517", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/517/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/517/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/517", "id": 419175268, "node_id": "MDU6SXNzdWU0MTkxNzUyNjg=", "number": 517, "title": "Override add_message in AllauthAccountAdapter", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-10T11:31:33Z", "updated_at": "2019-07-05T18:05:04Z", "closed_at": "2019-07-05T18:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, guys! I think, in django-rest-auth we should override AccountAdapter from allauth package and provide another behaviour for add_message method. Internally, django-allauth uses that method to provide feedback for a user via django-messages, but in our case user is an api client and we should raise ValidationError. What do you think? Thanks!\r\n\r\n```python\r\nclass RestAuthAccountAdapter(AllauthAccountAdapter):\r\n\r\n    def add_message(self, request, level, message_template, message_context=None, extra_tags=''):\r\n        if level == messages.ERROR:\r\n            try:\r\n                message = render_to_string(message_template, message_context).strip()\r\n                raise ValidationError(detail=message)\r\n            except TemplateDoesNotExist:\r\n                pass\r\n\r\n        super().add_message(request, level, message_template,\r\n                            message_context=message_context,\r\n                            extra_tags=extra_tags)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/515", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/515/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/515/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/515", "id": 416095784, "node_id": "MDU6SXNzdWU0MTYwOTU3ODQ=", "number": 515, "title": "Timeout", "user": {"login": "gargisawhney", "id": 36028054, "node_id": "MDQ6VXNlcjM2MDI4MDU0", "avatar_url": "https://avatars3.githubusercontent.com/u/36028054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gargisawhney", "html_url": "https://github.com/gargisawhney", "followers_url": "https://api.github.com/users/gargisawhney/followers", "following_url": "https://api.github.com/users/gargisawhney/following{/other_user}", "gists_url": "https://api.github.com/users/gargisawhney/gists{/gist_id}", "starred_url": "https://api.github.com/users/gargisawhney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gargisawhney/subscriptions", "organizations_url": "https://api.github.com/users/gargisawhney/orgs", "repos_url": "https://api.github.com/users/gargisawhney/repos", "events_url": "https://api.github.com/users/gargisawhney/events{/privacy}", "received_events_url": "https://api.github.com/users/gargisawhney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-01T13:09:06Z", "updated_at": "2019-03-01T13:09:39Z", "closed_at": "2019-03-01T13:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/512", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/512/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/512/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/512", "id": 411678004, "node_id": "MDU6SXNzdWU0MTE2NzgwMDQ=", "number": 512, "title": "Django/Vue braces added to request method after logout", "user": {"login": "jeffpohlmeyer", "id": 17696558, "node_id": "MDQ6VXNlcjE3Njk2NTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/17696558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffpohlmeyer", "html_url": "https://github.com/jeffpohlmeyer", "followers_url": "https://api.github.com/users/jeffpohlmeyer/followers", "following_url": "https://api.github.com/users/jeffpohlmeyer/following{/other_user}", "gists_url": "https://api.github.com/users/jeffpohlmeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffpohlmeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffpohlmeyer/subscriptions", "organizations_url": "https://api.github.com/users/jeffpohlmeyer/orgs", "repos_url": "https://api.github.com/users/jeffpohlmeyer/repos", "events_url": "https://api.github.com/users/jeffpohlmeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffpohlmeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-18T23:04:16Z", "updated_at": "2019-03-10T14:28:46Z", "closed_at": "2019-03-10T14:19:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cross-post from [axios/axios#1994 (comment)](https://github.com/axios/axios/issues/1994#issuecomment-464779874) that I thought was an axios issue but a user tried it out with a mock backend server and didn't have a problem. I'm also posting on https://github.com/davesque/django-rest-framework-simplejwt/ because I'm not sure if it's a simplejwt issue or a rest-auth issue (or maybe even further down into Django/DRF)\r\n\r\nI have a basic user management project that I'm using off of which to scaffold other projects. It is a Vue CLI 3 front end and Django/Django REST Framework/Django REST Auth back end. The project I'm posting here uses sqllite but it can relatively easily be converted to another db.\r\n\r\nHere is the link to the full repo for anyone who is willing to download to try to replicate my issue: https://github.com/JVP3122/user-project\r\n\r\nI'm having a very strange problem in that when I log out of the site and then try to log back in directly from the same page it seems that axios is adding the payload to the beginning of the request method.\r\n\r\nFor example, in the images found in the post I put up in Imgur (https://imgur.com/a/bEsx662) the user name is simply \"test\" with the password \"password\", and when I try to log back in after logging out the subsequent login attempt is no longer a POST route, but instead a {}POST route. If I try again, the route becomes a {\"USERNAME\":\"TEST\",\"PASSWORD\":\"PASSWORD\"}POST method.\r\n\r\nI've tried looking at the config in the axios request interceptor, looking at the dispatch method in the rest_framework source code (checking request details in the dispatch function in , and I can't figure out what is going on or how to solve this. It's a small bug that doesn't take away from the rest of the functionality, but it's a bug nonetheless.\r\n\r\nAny help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/510", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/510/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/510/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/510", "id": 411040718, "node_id": "MDU6SXNzdWU0MTEwNDA3MTg=", "number": 510, "title": "How to access as an authenticated user once I register the social account?", "user": {"login": "spider-hand", "id": 35469843, "node_id": "MDQ6VXNlcjM1NDY5ODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/35469843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spider-hand", "html_url": "https://github.com/spider-hand", "followers_url": "https://api.github.com/users/spider-hand/followers", "following_url": "https://api.github.com/users/spider-hand/following{/other_user}", "gists_url": "https://api.github.com/users/spider-hand/gists{/gist_id}", "starred_url": "https://api.github.com/users/spider-hand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spider-hand/subscriptions", "organizations_url": "https://api.github.com/users/spider-hand/orgs", "repos_url": "https://api.github.com/users/spider-hand/repos", "events_url": "https://api.github.com/users/spider-hand/events{/privacy}", "received_events_url": "https://api.github.com/users/spider-hand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-16T07:21:47Z", "updated_at": "2019-04-22T11:13:15Z", "closed_at": "2019-02-18T10:10:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I could figure out how to register with Google account but I still don't understand how to use `key` which I get in exchange for `access_token`. How  can I access as an authenticated user once I register the account? \r\nI tried to send request with header like `Authorization: Token <key>` and `Authorization: Token <access_token>` and  some other ways but API always returns `403`. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/508", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/508/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/508/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/508", "id": 406266648, "node_id": "MDU6SXNzdWU0MDYyNjY2NDg=", "number": 508, "title": "error while password reset ", "user": {"login": "labglo", "id": 33147469, "node_id": "MDQ6VXNlcjMzMTQ3NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/33147469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/labglo", "html_url": "https://github.com/labglo", "followers_url": "https://api.github.com/users/labglo/followers", "following_url": "https://api.github.com/users/labglo/following{/other_user}", "gists_url": "https://api.github.com/users/labglo/gists{/gist_id}", "starred_url": "https://api.github.com/users/labglo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/labglo/subscriptions", "organizations_url": "https://api.github.com/users/labglo/orgs", "repos_url": "https://api.github.com/users/labglo/repos", "events_url": "https://api.github.com/users/labglo/events{/privacy}", "received_events_url": "https://api.github.com/users/labglo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-04T10:34:54Z", "updated_at": "2019-02-22T18:53:15Z", "closed_at": "2019-02-22T18:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm getting this error, while trying to reset password\r\n\r\nNoReverseMatch at /rest-auth/password/reset/\r\n\r\nReverse for 'password_reset_confirm' not found. 'password_reset_confirm' is not a valid view function or pattern name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/507", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/507/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/507/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/507", "id": 406092158, "node_id": "MDU6SXNzdWU0MDYwOTIxNTg=", "number": 507, "title": "Reverse for 'redirect' not found. Social auth for google with auth token", "user": {"login": "sojad", "id": 47297851, "node_id": "MDQ6VXNlcjQ3Mjk3ODUx", "avatar_url": "https://avatars3.githubusercontent.com/u/47297851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sojad", "html_url": "https://github.com/sojad", "followers_url": "https://api.github.com/users/sojad/followers", "following_url": "https://api.github.com/users/sojad/following{/other_user}", "gists_url": "https://api.github.com/users/sojad/gists{/gist_id}", "starred_url": "https://api.github.com/users/sojad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sojad/subscriptions", "organizations_url": "https://api.github.com/users/sojad/orgs", "repos_url": "https://api.github.com/users/sojad/repos", "events_url": "https://api.github.com/users/sojad/events{/privacy}", "received_events_url": "https://api.github.com/users/sojad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-03T14:10:12Z", "updated_at": "2019-02-04T11:47:21Z", "closed_at": "2019-02-04T11:47:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've configured Facebook and it works perfectly but I've got some issues with Google social auth.\r\n\r\nI've added to INSTALLED_APPS:\r\n`allauth.socialaccount.providers.google',\r\n`\r\nCreated views:\r\n\r\n```\r\nfrom allauth.socialaccount.providers.google.views import GoogleOAuth2Adapter\r\nfrom allauth.socialaccount.providers.oauth2.client import OAuth2Client\r\n\r\nclass CustomGoogleOAuth2Adapter(GoogleOAuth2Adapter):\r\n    basic_auth = False\r\n\r\n\r\nclass GoogleLogin(SocialLoginView):\r\n    adapter_class = CustomGoogleOAuth2Adapter\r\n    client_class = OAuth2Client\r\n```\r\nCreated app by admin panel\r\nI've got access_token from https://developers.google.com/oauthplayground/\r\nWhen I tried to auth by endpoint I got an error:\r\n`Reverse for 'redirect' not found. 'redirect' is not a valid view function or pattern name.\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/505", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/505/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/505/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/505", "id": 405392914, "node_id": "MDU6SXNzdWU0MDUzOTI5MTQ=", "number": 505, "title": "Would you be able to say how to use the newer re_path syntax? The only example I've found fails with a syntax error:", "user": {"login": "Shelagh-Lewins", "id": 15693742, "node_id": "MDQ6VXNlcjE1NjkzNzQy", "avatar_url": "https://avatars2.githubusercontent.com/u/15693742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shelagh-Lewins", "html_url": "https://github.com/Shelagh-Lewins", "followers_url": "https://api.github.com/users/Shelagh-Lewins/followers", "following_url": "https://api.github.com/users/Shelagh-Lewins/following{/other_user}", "gists_url": "https://api.github.com/users/Shelagh-Lewins/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shelagh-Lewins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shelagh-Lewins/subscriptions", "organizations_url": "https://api.github.com/users/Shelagh-Lewins/orgs", "repos_url": "https://api.github.com/users/Shelagh-Lewins/repos", "events_url": "https://api.github.com/users/Shelagh-Lewins/events{/privacy}", "received_events_url": "https://api.github.com/users/Shelagh-Lewins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-31T19:04:59Z", "updated_at": "2019-01-31T19:05:12Z", "closed_at": "2019-01-31T19:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you be able to say how to use your regex with the newer re_path syntax? The only example I've found fails with a syntax error:\r\n`re_path(r'^rest-auth/registration/account-confirm-email/(?P<key>[\\s\\d\\w().+-_',:&]+)/$', TemplateView.as_view(), name='account_confirm_email'),`\r\n\r\n_Originally posted by @Shelagh-Lewins in https://github.com/Tivix/django-rest-auth/issues/290#issuecomment-459448523_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/504", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/504/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/504/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/504", "id": 404197974, "node_id": "MDU6SXNzdWU0MDQxOTc5NzQ=", "number": 504, "title": "Is it compatible with django 2.1 and python3.7?", "user": {"login": "Rishi-jha", "id": 16021537, "node_id": "MDQ6VXNlcjE2MDIxNTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/16021537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rishi-jha", "html_url": "https://github.com/Rishi-jha", "followers_url": "https://api.github.com/users/Rishi-jha/followers", "following_url": "https://api.github.com/users/Rishi-jha/following{/other_user}", "gists_url": "https://api.github.com/users/Rishi-jha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rishi-jha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rishi-jha/subscriptions", "organizations_url": "https://api.github.com/users/Rishi-jha/orgs", "repos_url": "https://api.github.com/users/Rishi-jha/repos", "events_url": "https://api.github.com/users/Rishi-jha/events{/privacy}", "received_events_url": "https://api.github.com/users/Rishi-jha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-29T09:33:35Z", "updated_at": "2019-04-22T20:42:42Z", "closed_at": "2019-04-22T20:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/501", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/501/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/501/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/501", "id": 397726158, "node_id": "MDU6SXNzdWUzOTc3MjYxNTg=", "number": 501, "title": "Email confirmation on Get", "user": {"login": "josephbiko", "id": 17003173, "node_id": "MDQ6VXNlcjE3MDAzMTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/17003173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephbiko", "html_url": "https://github.com/josephbiko", "followers_url": "https://api.github.com/users/josephbiko/followers", "following_url": "https://api.github.com/users/josephbiko/following{/other_user}", "gists_url": "https://api.github.com/users/josephbiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephbiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephbiko/subscriptions", "organizations_url": "https://api.github.com/users/josephbiko/orgs", "repos_url": "https://api.github.com/users/josephbiko/repos", "events_url": "https://api.github.com/users/josephbiko/events{/privacy}", "received_events_url": "https://api.github.com/users/josephbiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-10T08:46:05Z", "updated_at": "2019-01-10T08:50:55Z", "closed_at": "2019-01-10T08:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get the email confirmation on Get to work, but I get an error the key is not supplied.\r\n\r\nNow looking at the code:\r\n\r\n\r\n    class VerifyEmailView(APIView, ConfirmEmailView):\r\n        permission_classes = (AllowAny,)\r\n        allowed_methods = ('POST', 'OPTIONS', 'HEAD')\r\n\r\n        def get_serializer(self, *args, **kwargs):\r\n            return VerifyEmailSerializer(*args, **kwargs)\r\n\r\n        def post(self, request, *args, **kwargs):\r\n            serializer = self.get_serializer(data=request.data)\r\n            serializer.is_valid(raise_exception=True)\r\n            self.kwargs['key'] = serializer.validated_data['key']\r\n            confirmation = self.get_object()\r\n            confirmation.confirm(self.request)\r\n            return Response({'detail': _('ok')}, status=status.HTTP_200_OK)\r\n\r\n\r\nI see the key is gathered from the request, but if you use a get request the key will be in the kwargs. \r\nIs there a mistake in the code, or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/500", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/500/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/500/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/500", "id": 396693096, "node_id": "MDU6SXNzdWUzOTY2OTMwOTY=", "number": 500, "title": "Reverse for 'account_inactive' not found. 'account_inactive' is not a valid view function or pattern name.", "user": {"login": "Odin04ka", "id": 7266340, "node_id": "MDQ6VXNlcjcyNjYzNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7266340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Odin04ka", "html_url": "https://github.com/Odin04ka", "followers_url": "https://api.github.com/users/Odin04ka/followers", "following_url": "https://api.github.com/users/Odin04ka/following{/other_user}", "gists_url": "https://api.github.com/users/Odin04ka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Odin04ka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Odin04ka/subscriptions", "organizations_url": "https://api.github.com/users/Odin04ka/orgs", "repos_url": "https://api.github.com/users/Odin04ka/repos", "events_url": "https://api.github.com/users/Odin04ka/events{/privacy}", "received_events_url": "https://api.github.com/users/Odin04ka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-07T23:39:48Z", "updated_at": "2019-01-08T02:08:52Z", "closed_at": "2019-01-08T02:08:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "try change is_active to False after adding\r\n\r\nclass MyRegisterSerializer(serializers.Serializer):\r\n    email = serializers.EmailField(required=settings.EMAIL_REQUIRED)\r\n    contract = serializers.CharField(required=False, write_only=False)\r\n    tole = serializers.CharField(required=False, write_only=False)\r\n    # is_active= serializers.CharField(required=True, write_only=True)\r\n    password1 = serializers.CharField(required=True, write_only=True)\r\n    password2 = serializers.CharField(required=True, write_only=True)\r\n\r\n    def validate_email(self, email):\r\n        email = get_adapter().clean_email(email)\r\n        if settings.UNIQUE_EMAIL:\r\n            if email and email_address_exists(email):\r\n                raise serializers.ValidationError(\r\n                    _(\"\u042d\u0442\u043e\u0442 email \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\"))\r\n        return email\r\n\r\n    def validate_password1(self, password):\r\n        return get_adapter().clean_password(password)\r\n\r\n    def validate(self, data):\r\n        if data['contract']:\r\n            try:\r\n                ContractModel.objects.get(number=data['contract'])\r\n            except ContractModel.DoesNotExist:\r\n                raise serializers.ValidationError(\r\n                    _(\"\u0414\u043e\u0433\u043e\u0432\u043e\u0440\u0430 '\" + data['contract'] + \"' \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442.\"))\r\n\r\n        # if data['role']:\r\n        #     try:\r\n        #         ContractModel.objects.get(number=data['contract'])\r\n        #     except ContractModel.DoesNotExist:\r\n        #         raise serializers.ValidationError(\r\n        #             _(\"\u0414\u043e\u0433\u043e\u0432\u043e\u0440\u0430 '\" + data['contract'] + \"' \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442.\"))\r\n\r\n        if data['password1'] != data['password2']:\r\n            raise serializers.ValidationError(\r\n                _(\"\u041f\u0430\u0440\u043e\u043b\u0438 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442.\"))\r\n\r\n        return data\r\n\r\n    def get_cleaned_data(self):\r\n        return {\r\n            'is_active': False,\r\n            # 'email': self.validated_data.get('email', ''),\r\n            'contract': self.validated_data.get('contract', ''),\r\n            'password1': self.validated_data.get('password1', ''),\r\n            'email': self.validated_data.get('email', ''),\r\n        }\r\n\r\n    def save(self, request):\r\n        adapter = get_adapter()\r\n        user = adapter.new_user(request)\r\n        self.cleaned_data = self.get_cleaned_data()\r\n        adapter.save_user(request, user, self)\r\n        setup_user_email(request, user, [])\r\n        user.profile.save()\r\n        return user\r\n\r\n\r\n@receiver(pre_save, sender=User)\r\ndef set_new_user_inactive(sender, instance, **kwargs):\r\n    if instance._state.adding is True:\r\n        instance.is_active = False\r\n\r\nBut get error \r\n\r\nReverse for 'account_inactive' not found. 'account_inactive' is not a valid view function or pattern name.\r\n\r\nHow i can fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/499", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/499/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/499/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/499", "id": 396338239, "node_id": "MDU6SXNzdWUzOTYzMzgyMzk=", "number": 499, "title": "How set new user is_active  False?", "user": {"login": "Odin04ka", "id": 7266340, "node_id": "MDQ6VXNlcjcyNjYzNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7266340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Odin04ka", "html_url": "https://github.com/Odin04ka", "followers_url": "https://api.github.com/users/Odin04ka/followers", "following_url": "https://api.github.com/users/Odin04ka/following{/other_user}", "gists_url": "https://api.github.com/users/Odin04ka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Odin04ka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Odin04ka/subscriptions", "organizations_url": "https://api.github.com/users/Odin04ka/orgs", "repos_url": "https://api.github.com/users/Odin04ka/repos", "events_url": "https://api.github.com/users/Odin04ka/events{/privacy}", "received_events_url": "https://api.github.com/users/Odin04ka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T03:48:11Z", "updated_at": "2019-05-29T22:51:13Z", "closed_at": "2019-05-29T22:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all. Can u help me how create new user with is_active = False? And set is to True when he is come to verification email?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/498", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/498/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/498/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/498", "id": 396142605, "node_id": "MDU6SXNzdWUzOTYxNDI2MDU=", "number": 498, "title": "What should be the redirect_url in case of Andoid", "user": {"login": "mohi7solanki", "id": 23032010, "node_id": "MDQ6VXNlcjIzMDMyMDEw", "avatar_url": "https://avatars3.githubusercontent.com/u/23032010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohi7solanki", "html_url": "https://github.com/mohi7solanki", "followers_url": "https://api.github.com/users/mohi7solanki/followers", "following_url": "https://api.github.com/users/mohi7solanki/following{/other_user}", "gists_url": "https://api.github.com/users/mohi7solanki/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohi7solanki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohi7solanki/subscriptions", "organizations_url": "https://api.github.com/users/mohi7solanki/orgs", "repos_url": "https://api.github.com/users/mohi7solanki/repos", "events_url": "https://api.github.com/users/mohi7solanki/events{/privacy}", "received_events_url": "https://api.github.com/users/mohi7solanki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-05T07:34:14Z", "updated_at": "2019-01-06T14:22:59Z", "closed_at": "2019-01-06T14:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/497", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/497/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/497/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/497", "id": 395415111, "node_id": "MDU6SXNzdWUzOTU0MTUxMTE=", "number": 497, "title": "Error 500 during registration", "user": {"login": "mastrobirraio", "id": 23040569, "node_id": "MDQ6VXNlcjIzMDQwNTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/23040569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastrobirraio", "html_url": "https://github.com/mastrobirraio", "followers_url": "https://api.github.com/users/mastrobirraio/followers", "following_url": "https://api.github.com/users/mastrobirraio/following{/other_user}", "gists_url": "https://api.github.com/users/mastrobirraio/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastrobirraio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastrobirraio/subscriptions", "organizations_url": "https://api.github.com/users/mastrobirraio/orgs", "repos_url": "https://api.github.com/users/mastrobirraio/repos", "events_url": "https://api.github.com/users/mastrobirraio/events{/privacy}", "received_events_url": "https://api.github.com/users/mastrobirraio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-02T23:33:50Z", "updated_at": "2020-04-13T09:27:51Z", "closed_at": "2019-01-16T20:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Request\r\n```\r\nhttp POST http://localhost:8000/rest-auth/registration/ username=\"testuser\" password1=\"examplepassword\" password2=\"examplepassword\" email=\"testuser@example.com\"\r\n```\r\n\r\nResponse\r\n```\r\nHTTP/1.1 500 Internal Server Error\r\nContent-Length: 22351\r\nContent-Type: text/plain; charset=utf-8\r\nDate: Wed, 02 Jan 2019 23:29:22 GMT\r\nServer: WSGIServer/0.2 CPython/3.6.7\r\nVary: Cookie\r\nX-Frame-Options: SAMEORIGIN\r\n\r\nConnectionRefusedError at /rest-auth/registration/\r\n[Errno 111] Connection refused\r\n```\r\n\r\nBut actually the user is created, indeed if I do again the same request, I receive this response:\r\n```\r\nHTTP/1.1 400 Bad Request\r\nAllow: POST, OPTIONS\r\nContent-Length: 125\r\nContent-Type: application/json\r\nDate: Wed, 02 Jan 2019 23:33:18 GMT\r\nServer: WSGIServer/0.2 CPython/3.6.7\r\nVary: Accept, Cookie\r\nX-Frame-Options: SAMEORIGIN\r\n\r\n{\r\n    \"email\": [\r\n        \"A user is already registered with this e-mail address.\"\r\n    ],\r\n    \"username\": [\r\n        \"A user with that username already exists.\"\r\n    ]\r\n}\r\n```\r\n\r\nWhere is the bug to fix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/494", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/494/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/494/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/494", "id": 390716554, "node_id": "MDU6SXNzdWUzOTA3MTY1NTQ=", "number": 494, "title": "In build myown site", "user": {"login": "frost0103q", "id": 45119262, "node_id": "MDQ6VXNlcjQ1MTE5MjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/45119262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frost0103q", "html_url": "https://github.com/frost0103q", "followers_url": "https://api.github.com/users/frost0103q/followers", "following_url": "https://api.github.com/users/frost0103q/following{/other_user}", "gists_url": "https://api.github.com/users/frost0103q/gists{/gist_id}", "starred_url": "https://api.github.com/users/frost0103q/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frost0103q/subscriptions", "organizations_url": "https://api.github.com/users/frost0103q/orgs", "repos_url": "https://api.github.com/users/frost0103q/repos", "events_url": "https://api.github.com/users/frost0103q/events{/privacy}", "received_events_url": "https://api.github.com/users/frost0103q/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-13T14:58:12Z", "updated_at": "2018-12-13T21:33:17Z", "closed_at": "2018-12-13T21:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "**\"Notice: CSRF failed! in /storage/ssd3/344/8216344/public_html/admin.php on line 41\"**\r\n\r\n\r\nAbout same code In my localhost using Xampp there is no problem to build it.\r\nBut In hosting server above message is shown and I can not pass login.\r\nHow can I correct it?\r\n\r\nIf anybody know about it ,please discuss the way to solve it\r\nThank you\r\n![issue](https://user-images.githubusercontent.com/45119262/49946719-678a2b00-fea4-11e8-91f8-f7ac78f84012.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/490", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/490/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/490/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/490", "id": 388923807, "node_id": "MDU6SXNzdWUzODg5MjM4MDc=", "number": 490, "title": "SocialConnectView not working to connect existing/logged in user", "user": {"login": "PedroBern", "id": 39778068, "node_id": "MDQ6VXNlcjM5Nzc4MDY4", "avatar_url": "https://avatars0.githubusercontent.com/u/39778068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PedroBern", "html_url": "https://github.com/PedroBern", "followers_url": "https://api.github.com/users/PedroBern/followers", "following_url": "https://api.github.com/users/PedroBern/following{/other_user}", "gists_url": "https://api.github.com/users/PedroBern/gists{/gist_id}", "starred_url": "https://api.github.com/users/PedroBern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PedroBern/subscriptions", "organizations_url": "https://api.github.com/users/PedroBern/orgs", "repos_url": "https://api.github.com/users/PedroBern/repos", "events_url": "https://api.github.com/users/PedroBern/events{/privacy}", "received_events_url": "https://api.github.com/users/PedroBern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-08T13:48:19Z", "updated_at": "2020-06-12T11:43:28Z", "closed_at": "2018-12-23T17:48:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im trying to connect social account to existing user.\r\n\r\n**Social login works great, the problem is to connect an already registered user.**\r\n \r\nas the docs:\r\n\r\n```\r\n#views.py\r\n\r\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\r\nfrom rest_auth.registration.views import SocialLoginView, SocialConnectView\r\n\r\nclass FacebookLogin(SocialLoginView):\r\n    adapter_class = FacebookOAuth2Adapter\r\n\r\nclass FacebookConnect(SocialConnectView):\r\n    adapter_class = FacebookOAuth2Adapter\r\n```\r\n\r\nand\r\n\r\n```\r\n\r\n#urls.py\r\n\r\n...\r\nfrom .views import FacebookLogin, FacebookConnect\r\n\r\nurlpatterns = [\r\n    ....\r\n    path('facebook/connect/', FacebookConnect.as_view(), name='fb_connect'),\r\n    path('facebook/', FacebookLogin.as_view(), name='fb_login'),\r\n    ....\r\n]\r\n```\r\n\r\non my fronend, when the user is logged in and try to connect his account to facebook:\r\n\r\n```\r\naxios.post('auth/v1/facebook/connect/', {\r\n     // token is access_token from facebook response\r\n      access_token: token,\r\n    })\r\n```\r\n\r\nbut the backend response is:\r\n\r\n```\r\n...\r\nstatus: 401\r\nstatusText: \"Unauthorized\"\r\ndetail:\"Authentication credentials were not provided.\"\r\n...\r\n```\r\n\r\nmy settings:\r\n\r\n```\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'rest_framework.authentication.TokenAuthentication',\r\n    ),\r\n    'DEFAULT_PERMISSION_CLASSES': (\r\n        'rest_framework.permissions.IsAuthenticated',\r\n    ),\r\n}\r\n\r\n...\r\n\r\n# allauth settings\r\nACCOUNT_AUTHENTICATION_METHOD = 'email'\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_USERNAME_REQUIRED = False\r\nSOCIALACCOUNT_QUERY_EMAIL= True\r\n```\r\n\r\nPS: Im using react frontend with webpack\r\n\r\n**Am I missing something that I should send to '...facebook/connect/' besides access_token ?**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/489", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/489/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/489/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/489", "id": 386609905, "node_id": "MDU6SXNzdWUzODY2MDk5MDU=", "number": 489, "title": "User registration", "user": {"login": "moas", "id": 594529, "node_id": "MDQ6VXNlcjU5NDUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/594529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moas", "html_url": "https://github.com/moas", "followers_url": "https://api.github.com/users/moas/followers", "following_url": "https://api.github.com/users/moas/following{/other_user}", "gists_url": "https://api.github.com/users/moas/gists{/gist_id}", "starred_url": "https://api.github.com/users/moas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moas/subscriptions", "organizations_url": "https://api.github.com/users/moas/orgs", "repos_url": "https://api.github.com/users/moas/repos", "events_url": "https://api.github.com/users/moas/events{/privacy}", "received_events_url": "https://api.github.com/users/moas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-02T22:53:07Z", "updated_at": "2019-03-16T13:53:11Z", "closed_at": "2019-03-16T13:53:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nWhy create authentication token in registration process ? Do you explain me !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/488", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/488/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/488/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/488", "id": 386455627, "node_id": "MDU6SXNzdWUzODY0NTU2Mjc=", "number": 488, "title": "allow extra fields in singup forms like phone number", "user": {"login": "prologic-dev", "id": 43576180, "node_id": "MDQ6VXNlcjQzNTc2MTgw", "avatar_url": "https://avatars1.githubusercontent.com/u/43576180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prologic-dev", "html_url": "https://github.com/prologic-dev", "followers_url": "https://api.github.com/users/prologic-dev/followers", "following_url": "https://api.github.com/users/prologic-dev/following{/other_user}", "gists_url": "https://api.github.com/users/prologic-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/prologic-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prologic-dev/subscriptions", "organizations_url": "https://api.github.com/users/prologic-dev/orgs", "repos_url": "https://api.github.com/users/prologic-dev/repos", "events_url": "https://api.github.com/users/prologic-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/prologic-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-01T12:51:24Z", "updated_at": "2019-03-16T13:54:24Z", "closed_at": "2019-03-16T13:54:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to add extra fields in the singup forms ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/477", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/477/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/477/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/477", "id": 378309566, "node_id": "MDU6SXNzdWUzNzgzMDk1NjY=", "number": 477, "title": "compatibility with django-axes", "user": {"login": "jedie", "id": 71315, "node_id": "MDQ6VXNlcjcxMzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/71315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedie", "html_url": "https://github.com/jedie", "followers_url": "https://api.github.com/users/jedie/followers", "following_url": "https://api.github.com/users/jedie/following{/other_user}", "gists_url": "https://api.github.com/users/jedie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedie/subscriptions", "organizations_url": "https://api.github.com/users/jedie/orgs", "repos_url": "https://api.github.com/users/jedie/repos", "events_url": "https://api.github.com/users/jedie/events{/privacy}", "received_events_url": "https://api.github.com/users/jedie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-07T14:25:03Z", "updated_at": "2019-07-03T17:31:31Z", "closed_at": "2019-03-16T13:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use django-rest-auth with django-axes.\r\n\r\nI raise into `AxesModelBackend.RequestParameterRequired` because `AxesModelBackend` needs the request object, see: https://django-axes.readthedocs.io/en/latest/configuration.html#authentication-backend-problems\r\n\r\nThe Django Rest Framework will pass it since v3.7\r\n\r\n`rest_auth/serializers.py` doesn't do this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/473", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/473/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/473/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/473", "id": 374858168, "node_id": "MDU6SXNzdWUzNzQ4NTgxNjg=", "number": 473, "title": "Cannot Login (allauth.account.models.EmailAddress.DoesNotExist)", "user": {"login": "yongwoon", "id": 9317029, "node_id": "MDQ6VXNlcjkzMTcwMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9317029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongwoon", "html_url": "https://github.com/yongwoon", "followers_url": "https://api.github.com/users/yongwoon/followers", "following_url": "https://api.github.com/users/yongwoon/following{/other_user}", "gists_url": "https://api.github.com/users/yongwoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongwoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongwoon/subscriptions", "organizations_url": "https://api.github.com/users/yongwoon/orgs", "repos_url": "https://api.github.com/users/yongwoon/repos", "events_url": "https://api.github.com/users/yongwoon/events{/privacy}", "received_events_url": "https://api.github.com/users/yongwoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-29T04:54:07Z", "updated_at": "2018-10-29T05:31:33Z", "closed_at": "2018-10-29T05:31:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I set as blew, I could user registration, verify-mail. But when I try to login, occur the error.\r\nHow to solve the problem? \r\n\r\n* version\r\n  * django 2.1.2\r\n  * django-allauth 0.38.0\r\n  * django-rest-auth 0.9.3\r\n* urls\r\n```\r\nurlpatterns = [\r\n    path('', include('rest_auth.urls')),\r\n    path('registration/account-email-verification-sent/', django_rest_auth_null, name='account_email_verification_sent'),\r\n    path('registration/', include('rest_auth.registration.urls')),\r\n]\r\n```\r\n\r\n* settings\r\n```\r\n# Rest-framework\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_RENDERER_CLASSES': (\r\n        'rest_framework.renderers.JSONRenderer',\r\n        'rest_framework.renderers.BrowsableAPIRenderer',\r\n    ),\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'rest_framework.authentication.TokenAuthentication',\r\n    ),\r\n    'DEFAULT_PERMISSION_CLASSES': (\r\n        'rest_framework.permissions.AllowAny',\r\n    )\r\n}\r\n\r\nSITE_ID = 1\r\nACCOUNT_EMAIL_SUBJECT_PREFIX = \"[test blog]\"\r\nACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = False\r\nACCOUNT_AUTHENTICATION_METHOD = \"email\"\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_USERNAME_REQUIRED = False\r\nACCOUNT_EMAIL_VERIFICATION = \"mandatory\"\r\nACCOUNT_UNIQUE_EMAIL = True\r\nAUTHENTICATION_BACKENDS = (\r\n    # Needed to login by username in Django admin, regardless of `allauth`\r\n    'django.contrib.auth.backends.ModelBackend',\r\n    # `allauth` specific authentication methods, such as login by e-mail\r\n    'allauth.account.auth_backends.AuthenticationBackend',\r\n)\r\n\r\n\r\nREST_AUTH_SERIALIZERS = {\r\n    'USER_DETAILS_SERIALIZER': 'users.api.serializers.UserSerializer'\r\n}\r\n```\r\n\r\n### ERROR\r\n```\r\nnternal Server Error: /api/accounts/login/\r\nTraceback (most recent call last):\r\n  File \"/blog_env/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/core/handlers/base.py\", line 124, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/views/decorators/debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n    return view(request, *args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_auth/views.py\", line 49, in dispatch\r\n    return super(LoginView, self).dispatch(*args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_auth/views.py\", line 93, in post\r\n    self.serializer.is_valid(raise_exception=True)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_framework/serializers.py\", line 236, in is_valid\r\n    self._validated_data = self.run_validation(self.initial_data)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_framework/serializers.py\", line 437, in run_validation\r\n    value = self.validate(value)\r\n  File \"/blog_env/lib/python3.7/site-packages/rest_auth/serializers.py\", line 105, in validate\r\n    email_address = user.emailaddress_set.get(email=user.email)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/blog_env/lib/python3.7/site-packages/django/db/models/query.py\", line 399, in get\r\n    self.model._meta.object_name\r\nallauth.account.models.EmailAddress.DoesNotExist: EmailAddress matching query does not exist.\r\n[29/Oct/2018 03:59:35] \"POST /api/accounts/login/ HTTP/1.1\" 500 18654\r\n[29/Oct/2018 04:41:41] \"GET /admin/ HTTP/1.1\" 200 7533\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/471", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/471/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/471/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/471", "id": 374638494, "node_id": "MDU6SXNzdWUzNzQ2Mzg0OTQ=", "number": 471, "title": "Change User Email Endpoint", "user": {"login": "joeldhenry", "id": 12555860, "node_id": "MDQ6VXNlcjEyNTU1ODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/12555860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeldhenry", "html_url": "https://github.com/joeldhenry", "followers_url": "https://api.github.com/users/joeldhenry/followers", "following_url": "https://api.github.com/users/joeldhenry/following{/other_user}", "gists_url": "https://api.github.com/users/joeldhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeldhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeldhenry/subscriptions", "organizations_url": "https://api.github.com/users/joeldhenry/orgs", "repos_url": "https://api.github.com/users/joeldhenry/repos", "events_url": "https://api.github.com/users/joeldhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/joeldhenry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-27T12:08:52Z", "updated_at": "2019-03-07T12:20:38Z", "closed_at": "2019-01-16T22:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "User should be able to modify email address & confirm email Change on their account. \r\nSuch as Auth/changeEmail & Auth/confirmEmail", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/451", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/451/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/451/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/451", "id": 352774478, "node_id": "MDU6SXNzdWUzNTI3NzQ0Nzg=", "number": 451, "title": "Only Allow Social Authentication (Except on Admin Page)", "user": {"login": "mdettelson", "id": 8668413, "node_id": "MDQ6VXNlcjg2Njg0MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8668413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdettelson", "html_url": "https://github.com/mdettelson", "followers_url": "https://api.github.com/users/mdettelson/followers", "following_url": "https://api.github.com/users/mdettelson/following{/other_user}", "gists_url": "https://api.github.com/users/mdettelson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdettelson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdettelson/subscriptions", "organizations_url": "https://api.github.com/users/mdettelson/orgs", "repos_url": "https://api.github.com/users/mdettelson/repos", "events_url": "https://api.github.com/users/mdettelson/events{/privacy}", "received_events_url": "https://api.github.com/users/mdettelson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-22T02:08:12Z", "updated_at": "2018-08-31T03:12:27Z", "closed_at": "2018-08-31T03:12:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI would like to use this package to build an API that supports on social authentication through facebook.  I would also like to keep non-social auth available for admin links, but nothing beyond that.\r\n\r\nCurrently, my urls.py looks like this:\r\n\r\n```\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('api/v0/', include(router.urls)),\r\n    path('api-token-auth/', views.obtain_auth_token),\r\n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework')),\r\n\r\n    re_path(r'^logout/$', ra_views.LogoutView.as_view(), name='rest_logout'),\r\n    re_path(r'^rest-auth/facebook/$', FacebookLogin.as_view(), name='fb_login'),\r\n\r\n    # the 'api-root' from django rest-frameworks default router\r\n    # http://www.django-rest-framework.org/api-guide/routers/#defaultrouter\r\n    re_path(r'^$', RedirectView.as_view(url=reverse_lazy('api-root'), permanent=False)),\r\n```\r\n\r\nHas anyone attempted this before?  Is there anything I'm missing here?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/447", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/447/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/447/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/447", "id": 341269419, "node_id": "MDU6SXNzdWUzNDEyNjk0MTk=", "number": 447, "title": "POST Request returns \"Method \\\"GET\\\" not allowed.\"", "user": {"login": "realPrimoh", "id": 24800437, "node_id": "MDQ6VXNlcjI0ODAwNDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/24800437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realPrimoh", "html_url": "https://github.com/realPrimoh", "followers_url": "https://api.github.com/users/realPrimoh/followers", "following_url": "https://api.github.com/users/realPrimoh/following{/other_user}", "gists_url": "https://api.github.com/users/realPrimoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/realPrimoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realPrimoh/subscriptions", "organizations_url": "https://api.github.com/users/realPrimoh/orgs", "repos_url": "https://api.github.com/users/realPrimoh/repos", "events_url": "https://api.github.com/users/realPrimoh/events{/privacy}", "received_events_url": "https://api.github.com/users/realPrimoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-14T21:26:09Z", "updated_at": "2020-02-20T16:03:33Z", "closed_at": "2018-07-16T23:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have set up django-rest-auth as per the installation tutorial, yet I am not able to use the login API endpoint. When I send a POST request with the correct information, I receive a 405 status error in response with  \"Method \\\"GET\\\" not allowed.\"\r\n\r\nHowever, when I navigate to the actual URL and POST it from the online form, it works fine and returns a token.\r\n\r\nHelp?!\r\n\r\nEDIT:\r\n\r\nTurned out to be an issue with URL redirection on the server-side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/446", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/446/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/446/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/446", "id": 341024841, "node_id": "MDU6SXNzdWUzNDEwMjQ4NDE=", "number": 446, "title": "While deleting a user from django admin: getting error\t no such table: allauth_socialaccount", "user": {"login": "prem2282", "id": 39880108, "node_id": "MDQ6VXNlcjM5ODgwMTA4", "avatar_url": "https://avatars0.githubusercontent.com/u/39880108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prem2282", "html_url": "https://github.com/prem2282", "followers_url": "https://api.github.com/users/prem2282/followers", "following_url": "https://api.github.com/users/prem2282/following{/other_user}", "gists_url": "https://api.github.com/users/prem2282/gists{/gist_id}", "starred_url": "https://api.github.com/users/prem2282/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prem2282/subscriptions", "organizations_url": "https://api.github.com/users/prem2282/orgs", "repos_url": "https://api.github.com/users/prem2282/repos", "events_url": "https://api.github.com/users/prem2282/events{/privacy}", "received_events_url": "https://api.github.com/users/prem2282/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T13:44:52Z", "updated_at": "2018-07-13T15:18:27Z", "closed_at": "2018-07-13T15:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added users using the rest-auth/register url. but i am not able to delete the users from the django admin console. it is giving the error \r\n\r\n**OperationalError at /admin/auth/user/\r\nno such table: allauth_socialaccount**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/433", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/433/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/433/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/433", "id": 325839795, "node_id": "MDU6SXNzdWUzMjU4Mzk3OTU=", "number": 433, "title": "rest-auth/login returns key but I would like the user", "user": {"login": "cavalryjim", "id": 658783, "node_id": "MDQ6VXNlcjY1ODc4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/658783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavalryjim", "html_url": "https://github.com/cavalryjim", "followers_url": "https://api.github.com/users/cavalryjim/followers", "following_url": "https://api.github.com/users/cavalryjim/following{/other_user}", "gists_url": "https://api.github.com/users/cavalryjim/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavalryjim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavalryjim/subscriptions", "organizations_url": "https://api.github.com/users/cavalryjim/orgs", "repos_url": "https://api.github.com/users/cavalryjim/repos", "events_url": "https://api.github.com/users/cavalryjim/events{/privacy}", "received_events_url": "https://api.github.com/users/cavalryjim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-23T19:19:44Z", "updated_at": "2018-06-05T23:09:58Z", "closed_at": "2018-06-05T23:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can register & login to include receiving a key but need the user returned.\r\nI found https://stackoverflow.com/questions/44965908/django-rest-auth-registration-how-to-return-user-id-with-the-key-when-using-tok and https://stackoverflow.com/questions/48314694/after-login-the-rest-auth-how-to-return-more-information but neither solution seems complete.\r\n\r\n```\r\nREST_AUTH_REGISTER_SERIALIZERS = {\r\n    'TOKEN_SERIALIZER': 'api.serializers.CustomTokenSerializer',\r\n    'REGISTER_SERIALIZER': 'api.serializers.CustomRegisterSerializer',\r\n```\r\n\r\n```\r\nfrom rest_auth.registration.serializers import RegisterSerializer\r\nfrom rest_framework.authtoken.models import Token\r\nfrom rest_auth.models import TokenModel\r\nfrom rest_framework import serializers\r\nfrom rest_framework.response import Response\r\nfrom users.serializers import UserSerializer\r\n\r\nclass CustomTokenSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = TokenModel\r\n        fields = ('key', 'user')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/432", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/432/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/432/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/432", "id": 322954950, "node_id": "MDU6SXNzdWUzMjI5NTQ5NTA=", "number": 432, "title": "Registration turns on csrf token required (weirdest bug ever)", "user": {"login": "janhesters", "id": 31096420, "node_id": "MDQ6VXNlcjMxMDk2NDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/31096420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janhesters", "html_url": "https://github.com/janhesters", "followers_url": "https://api.github.com/users/janhesters/followers", "following_url": "https://api.github.com/users/janhesters/following{/other_user}", "gists_url": "https://api.github.com/users/janhesters/gists{/gist_id}", "starred_url": "https://api.github.com/users/janhesters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janhesters/subscriptions", "organizations_url": "https://api.github.com/users/janhesters/orgs", "repos_url": "https://api.github.com/users/janhesters/repos", "events_url": "https://api.github.com/users/janhesters/events{/privacy}", "received_events_url": "https://api.github.com/users/janhesters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-14T19:46:55Z", "updated_at": "2019-04-17T10:13:27Z", "closed_at": "2018-05-14T21:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm building a REST API with Django Rest Framework and django-rest-auth.\r\n\r\nHere is a list of all the packages I'm using:\r\n```\r\nPackage             Version\r\n------------------- ---------\r\ncertifi             2018.4.16\r\nchardet             3.0.4\r\ndefusedxml          0.5.0\r\nDjango              1.11.13\r\ndjango-allauth      0.36.0\r\ndjango-authtools    1.6.0\r\ndjango-model-utils  3.1.2\r\ndjango-rest-auth    0.9.3\r\ndjangorestframework 3.8.2\r\nidna                2.6\r\n\r\noauthlib            2.0.7\r\npip                 10.0.1\r\npython3-openid      3.1.0\r\npytz                2018.4\r\nrequests            2.18.4\r\nrequests-oauthlib   0.8.0\r\nsetuptools          39.1.0\r\nsix                 1.11.0\r\nurllib3             1.22\r\nwheel               0.31.1\r\n```\r\n\r\nSo you'll also have to install pip install django-rest-auth[with_social]\r\nMake sure you are in the correct branch:|\r\n18-05-14-loginandstuffstillworking\r\n\r\nEverything works fine, except as soon as I create a user using rest-auth's registration view, the project gets screwed. One of the bugs is, that login suddenly requires a CSRF Token to be send. And my login view isn't even imported from rest auth.\r\nBelow I post a link to the repository so you can fork it and also the easy steps to reproduce the bug. It's very easy and very weird.\r\nRepository: https://github.com/janhesters/BasicRestAPI/tree/18-05-14-loginandstuffstillworking\r\n\r\nSteps to reproduce:\r\n1. Fork the repository.\r\n2. Make post requests to the login route (http://localhost:8000/api/auth/login/). You can use the users jan@web.de and bob@web.de. Both have the password root1234. Jan can log in, Bob doesn't, because only Jan has a verified e-mail.\r\nSo the keys for the post request should be:\r\nemail: jan@web.de\r\npassword: root1234\r\n3. If you made sure that jan@web.de can log in, go on and the register view to the urls.py file.\r\nHere is the code that needs to be added (add it to accounts/api/urls.py):\r\n\r\n```\r\nfrom rest_auth.registration import views as rest_auth_registration_views\r\n...\r\n  url(\r\n        r'^registration/$',\r\n        rest_auth_registration_views.RegisterView.as_view(),\r\n        name='rest_register'\r\n    ),\r\n```\r\n\r\n4.  Make a POST request to the register route. \r\nemail: jim@web.de\r\npassword1: root1234\r\npassword2: root1234\r\n5. When you now try to log in with jan@web.de or any other user, see that suddenly there is an error involving csrf tokens.\r\n\r\nI don't know what causes this bug, but it's super inconvenient. Does anyone know how to fix this?\r\n\r\n![screen shot 2018-05-14 at 22 43 19](https://user-images.githubusercontent.com/31096420/40022448-530b1e74-57c8-11e8-987d-67e636176eb3.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/429", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/429/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/429/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/429", "id": 313289028, "node_id": "MDU6SXNzdWUzMTMyODkwMjg=", "number": 429, "title": "ImportError: No module named core.serializers", "user": {"login": "andreyshipilov", "id": 188876, "node_id": "MDQ6VXNlcjE4ODg3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/188876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreyshipilov", "html_url": "https://github.com/andreyshipilov", "followers_url": "https://api.github.com/users/andreyshipilov/followers", "following_url": "https://api.github.com/users/andreyshipilov/following{/other_user}", "gists_url": "https://api.github.com/users/andreyshipilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreyshipilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreyshipilov/subscriptions", "organizations_url": "https://api.github.com/users/andreyshipilov/orgs", "repos_url": "https://api.github.com/users/andreyshipilov/repos", "events_url": "https://api.github.com/users/andreyshipilov/events{/privacy}", "received_events_url": "https://api.github.com/users/andreyshipilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-11T11:46:52Z", "updated_at": "2018-05-05T07:18:33Z", "closed_at": "2018-05-05T07:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically I get this error from the issue title when adding this to the `urls.py`:\r\n```\r\nurl(r'^rest-api/auth/registration/', include('rest_auth.registration.urls')),\r\n```\r\nThis is the traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/utils/autoreload.py\", line 228, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 124, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 359, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/management/base.py\", line 346, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/checks/registry.py\", line 81, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/checks/urls.py\", line 16, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/core/checks/urls.py\", line 26, in check_resolver\r\n    return check_method()\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/urls/resolvers.py\", line 254, in check\r\n    for pattern in self.url_patterns:\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/urls/resolvers.py\", line 405, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/urls/resolvers.py\", line 398, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/Users/a/Projects/project/project_app_django/project_app/urls.py\", line 49, in <module>\r\n    url(r'^rest-api/auth/registration/', include('rest_auth.registration.urls')),\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/django/conf/urls/__init__.py\", line 50, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/rest_auth/registration/urls.py\", line 4, in <module>\r\n    from .views import RegisterView, VerifyEmailView\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/rest_auth/registration/views.py\", line 32, in <module>\r\n    from .app_settings import RegisterSerializer, register_permission_classes\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/rest_auth/registration/app_settings.py\", line 12, in <module>\r\n    serializers.get('REGISTER_SERIALIZER', DefaultRegisterSerializer))\r\n  File \"/Users/a/Projects/project/venv/lib/python2.7/site-packages/rest_auth/utils.py\", line 11, in import_callable\r\n    return getattr(import_module(package), attr)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named core.serializers\r\n```\r\nThis is `urls.py`:\r\n```\r\napi_router = routers.DefaultRouter()\r\napi_router.register(r'cities', app.viewsets.CitiesViewSet)\r\n\r\nurlpatterns += [\r\n    # API URLs\r\n    url(r'^rest-api/', include('rest_framework.urls', namespace='rest_framework')),\r\n    url(r'^rest-api/', include(api_router.urls)),\r\n\r\n    # Rest auth.\r\n    url(r'^rest-api/auth/', include('rest_auth.urls')),\r\n    url(r'^rest-api/auth/registration/', include('rest_auth.registration.urls')),\r\n\r\n    # Allauth\r\n    url(r'^account/', include('allauth.urls')),\r\n]\r\n```\r\nInstalled apps:\r\n```\r\nINSTALLED_APPS = (\r\n    'crispy_forms',\r\n    'compressor',\r\n    'typogrify',\r\n    'meta',\r\n    'any_imagefield',\r\n    'django_countries',\r\n    'sorl.thumbnail',\r\n    'clear_cache',\r\n    'annoying',\r\n    'markdown_deux',\r\n    'django_filters',\r\n\r\n    'rest_framework',\r\n    'rest_framework.authtoken',\r\n    'rest_framework_filters',\r\n    'rest_auth',\r\n\r\n    'allauth',\r\n    'allauth.account',\r\n    'rest_auth.registration',\r\n    'allauth.socialaccount.providers.instagram',\r\n    'allauth.socialaccount.providers.twitter',\r\n)\r\n```\r\nAny thoughts? If I comment the `rest-api/auth/registration/` in the `urls.py` there are no errors of course.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/426", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/426/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/426/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/426", "id": 310460996, "node_id": "MDU6SXNzdWUzMTA0NjA5OTY=", "number": 426, "title": "Allow access to user details with an Api Token", "user": {"login": "arlyon", "id": 8715352, "node_id": "MDQ6VXNlcjg3MTUzNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8715352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arlyon", "html_url": "https://github.com/arlyon", "followers_url": "https://api.github.com/users/arlyon/followers", "following_url": "https://api.github.com/users/arlyon/following{/other_user}", "gists_url": "https://api.github.com/users/arlyon/gists{/gist_id}", "starred_url": "https://api.github.com/users/arlyon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arlyon/subscriptions", "organizations_url": "https://api.github.com/users/arlyon/orgs", "repos_url": "https://api.github.com/users/arlyon/repos", "events_url": "https://api.github.com/users/arlyon/events{/privacy}", "received_events_url": "https://api.github.com/users/arlyon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-02T11:20:39Z", "updated_at": "2018-09-08T15:25:10Z", "closed_at": "2018-09-08T15:25:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the `UserDetailsView` only allows `SessionAuthentication` and `BasicAuthentication`. It would be nice to be able to change the `authentication_classes` to include `TokenAuthentication` so that api users with a token can get the user associated with that token.\r\n\r\nAddressed in PR #425 \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/420", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/420/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/420/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/420", "id": 305492091, "node_id": "MDU6SXNzdWUzMDU0OTIwOTE=", "number": 420, "title": "To get Custom JSON from Login and Register View", "user": {"login": "ParasBotadra", "id": 12979223, "node_id": "MDQ6VXNlcjEyOTc5MjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/12979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ParasBotadra", "html_url": "https://github.com/ParasBotadra", "followers_url": "https://api.github.com/users/ParasBotadra/followers", "following_url": "https://api.github.com/users/ParasBotadra/following{/other_user}", "gists_url": "https://api.github.com/users/ParasBotadra/gists{/gist_id}", "starred_url": "https://api.github.com/users/ParasBotadra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ParasBotadra/subscriptions", "organizations_url": "https://api.github.com/users/ParasBotadra/orgs", "repos_url": "https://api.github.com/users/ParasBotadra/repos", "events_url": "https://api.github.com/users/ParasBotadra/events{/privacy}", "received_events_url": "https://api.github.com/users/ParasBotadra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-15T10:24:54Z", "updated_at": "2018-04-25T18:19:46Z", "closed_at": "2018-04-25T18:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I implemented django-restauth and django-allauth with my DRF project for user registration and login both from email and social accounts. Everything is working fine but I want to customize the JSON response which I get on successful Login. Is there any method to achieve that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/416", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/416/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/416/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/416", "id": 302453504, "node_id": "MDU6SXNzdWUzMDI0NTM1MDQ=", "number": 416, "title": "email&username encoding/decoding", "user": {"login": "criss2525", "id": 15670060, "node_id": "MDQ6VXNlcjE1NjcwMDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/15670060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/criss2525", "html_url": "https://github.com/criss2525", "followers_url": "https://api.github.com/users/criss2525/followers", "following_url": "https://api.github.com/users/criss2525/following{/other_user}", "gists_url": "https://api.github.com/users/criss2525/gists{/gist_id}", "starred_url": "https://api.github.com/users/criss2525/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/criss2525/subscriptions", "organizations_url": "https://api.github.com/users/criss2525/orgs", "repos_url": "https://api.github.com/users/criss2525/repos", "events_url": "https://api.github.com/users/criss2525/events{/privacy}", "received_events_url": "https://api.github.com/users/criss2525/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-05T20:39:54Z", "updated_at": "2018-04-15T22:05:41Z", "closed_at": "2018-04-15T22:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a problem when I try to update the userprofile of an extended user.\r\n\r\nHere is the description of the issue: https://stackoverflow.com/questions/49119044/django-rest-auth-encoding-email-username", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/411", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/411/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/411/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/411", "id": 298429865, "node_id": "MDU6SXNzdWUyOTg0Mjk4NjU=", "number": 411, "title": "\"RelatedObjectDoesNotExist at /rest-auth/user/ User has no userprofile.", "user": {"login": "popovvasile", "id": 15171012, "node_id": "MDQ6VXNlcjE1MTcxMDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/15171012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popovvasile", "html_url": "https://github.com/popovvasile", "followers_url": "https://api.github.com/users/popovvasile/followers", "following_url": "https://api.github.com/users/popovvasile/following{/other_user}", "gists_url": "https://api.github.com/users/popovvasile/gists{/gist_id}", "starred_url": "https://api.github.com/users/popovvasile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popovvasile/subscriptions", "organizations_url": "https://api.github.com/users/popovvasile/orgs", "repos_url": "https://api.github.com/users/popovvasile/repos", "events_url": "https://api.github.com/users/popovvasile/events{/privacy}", "received_events_url": "https://api.github.com/users/popovvasile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-19T23:43:36Z", "updated_at": "2018-03-02T16:34:27Z", "closed_at": "2018-02-27T16:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed exactly the instructions in the documentation about extending the UserProfile. And got the following traceback when trying to login/update\r\n```\r\nRequest Method: PUT\r\nRequest URL: http://127.0.0.1:8000/rest-auth/user/\r\nDjango Version: 2.0.2\r\nPython Executable: /home/kali/Development/EmailAuth/venv/bin/python\r\nPython Version: 3.6.4\r\nPython Path: ['/home/kali/Development/EmailAuth/backend_api', '/home/kali/Development/EmailAuth/venv/lib/python36.zip', '/home/kali/Development/EmailAuth/venv/lib/python3.6', '/home/kali/Development/EmailAuth/venv/lib/python3.6/lib-dynload', '/usr/lib/python3.6', '/home/kali/Development/EmailAuth/venv/lib/python3.6/site-packages']\r\nServer time: Mon, 19 Feb 2018 23:54:38 +0000\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/410", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/410/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/410/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/410", "id": 296113724, "node_id": "MDU6SXNzdWUyOTYxMTM3MjQ=", "number": 410, "title": "401 Unauthorized error on calling social_account_disconnect ", "user": {"login": "EvanZ", "id": 1295082, "node_id": "MDQ6VXNlcjEyOTUwODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1295082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanZ", "html_url": "https://github.com/EvanZ", "followers_url": "https://api.github.com/users/EvanZ/followers", "following_url": "https://api.github.com/users/EvanZ/following{/other_user}", "gists_url": "https://api.github.com/users/EvanZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanZ/subscriptions", "organizations_url": "https://api.github.com/users/EvanZ/orgs", "repos_url": "https://api.github.com/users/EvanZ/repos", "events_url": "https://api.github.com/users/EvanZ/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-10T16:35:52Z", "updated_at": "2018-02-10T17:34:35Z", "closed_at": "2018-02-10T17:34:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a 401 error (\"Authentication credentials were not provided.\") after making the following api call:\r\n\r\n```\r\naxios.post(`/socialaccounts/${account.id}/disconnect/`, {\r\n                    headers: {\r\n                        'Authorization': 'Token ' + this.getAuthToken,\r\n                    }\r\n                })\r\n```\r\nThe token being included is the same token being used for every other TokenAuth call to DRF and django-rest-auth.  \r\n\r\nEdit: Ok, this is really strange. The same request works if I use the REST client in WebStorm. And the correct token is definitely being sent with the request. Really no idea what is going on here. In the same view I perform a GET to the social_account_list and that works just fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/409", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/409/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/409/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/409", "id": 294616201, "node_id": "MDU6SXNzdWUyOTQ2MTYyMDE=", "number": 409, "title": "\"User is already registered with this e-mail address.\"", "user": {"login": "EvanZ", "id": 1295082, "node_id": "MDQ6VXNlcjEyOTUwODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1295082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanZ", "html_url": "https://github.com/EvanZ", "followers_url": "https://api.github.com/users/EvanZ/followers", "following_url": "https://api.github.com/users/EvanZ/following{/other_user}", "gists_url": "https://api.github.com/users/EvanZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanZ/subscriptions", "organizations_url": "https://api.github.com/users/EvanZ/orgs", "repos_url": "https://api.github.com/users/EvanZ/repos", "events_url": "https://api.github.com/users/EvanZ/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-06T03:00:17Z", "updated_at": "2018-02-15T17:18:46Z", "closed_at": "2018-02-15T17:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to implement a FB login flow. I upgraded to v.0.9.3 because I thought it fixes the bug where you are already signed up via email. However, it now seems that the code knows the user is registered but doesn't sign him in anyway. I am getting the access_token just fine from FB. I have tried both the `/rest-auth/facebook/` and `/rest-auth/facebook/connect/ `endpoints, although not quite understanding the difference. At any rate, they are both resulting in the same 400 error.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/407", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/407/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/407/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/407", "id": 294221289, "node_id": "MDU6SXNzdWUyOTQyMjEyODk=", "number": 407, "title": "rest-auth/registration returns connection refused", "user": {"login": "KaiserKarel", "id": 28512997, "node_id": "MDQ6VXNlcjI4NTEyOTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/28512997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaiserKarel", "html_url": "https://github.com/KaiserKarel", "followers_url": "https://api.github.com/users/KaiserKarel/followers", "following_url": "https://api.github.com/users/KaiserKarel/following{/other_user}", "gists_url": "https://api.github.com/users/KaiserKarel/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaiserKarel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaiserKarel/subscriptions", "organizations_url": "https://api.github.com/users/KaiserKarel/orgs", "repos_url": "https://api.github.com/users/KaiserKarel/repos", "events_url": "https://api.github.com/users/KaiserKarel/events{/privacy}", "received_events_url": "https://api.github.com/users/KaiserKarel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-04T19:05:59Z", "updated_at": "2019-04-20T16:55:55Z", "closed_at": "2018-02-08T16:53:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "ConnectionRefusedError: [Errno 111] Connection refused is returned after registration. The user is however successfully registered and able to log in. Currently I have only tested this using postman.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/402", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/402/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/402/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/402", "id": 290244861, "node_id": "MDU6SXNzdWUyOTAyNDQ4NjE=", "number": 402, "title": "pip install django-rest-auth[with_social] not working", "user": {"login": "mhoonjeon", "id": 16588135, "node_id": "MDQ6VXNlcjE2NTg4MTM1", "avatar_url": "https://avatars3.githubusercontent.com/u/16588135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhoonjeon", "html_url": "https://github.com/mhoonjeon", "followers_url": "https://api.github.com/users/mhoonjeon/followers", "following_url": "https://api.github.com/users/mhoonjeon/following{/other_user}", "gists_url": "https://api.github.com/users/mhoonjeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhoonjeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhoonjeon/subscriptions", "organizations_url": "https://api.github.com/users/mhoonjeon/orgs", "repos_url": "https://api.github.com/users/mhoonjeon/repos", "events_url": "https://api.github.com/users/mhoonjeon/events{/privacy}", "received_events_url": "https://api.github.com/users/mhoonjeon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-21T03:56:11Z", "updated_at": "2018-08-05T06:52:29Z", "closed_at": "2018-01-22T16:49:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to integrate django-rest-auth with django-allauth to support social login.\r\nSo I tried the following, after the reading the doc\r\n\r\n```pip install django-rest-auth[with_social]```\r\n \r\nBut I could not install the package with the error message returning \r\n\r\n`zsh: no matches found: django-rest-auth[with_social]`\r\n\r\nAny ideas why this happens? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/401", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/401/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/401/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/401", "id": 286566763, "node_id": "MDU6SXNzdWUyODY1NjY3NjM=", "number": 401, "title": "Login with Google", "user": {"login": "umarmughal824", "id": 4043989, "node_id": "MDQ6VXNlcjQwNDM5ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4043989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umarmughal824", "html_url": "https://github.com/umarmughal824", "followers_url": "https://api.github.com/users/umarmughal824/followers", "following_url": "https://api.github.com/users/umarmughal824/following{/other_user}", "gists_url": "https://api.github.com/users/umarmughal824/gists{/gist_id}", "starred_url": "https://api.github.com/users/umarmughal824/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umarmughal824/subscriptions", "organizations_url": "https://api.github.com/users/umarmughal824/orgs", "repos_url": "https://api.github.com/users/umarmughal824/repos", "events_url": "https://api.github.com/users/umarmughal824/events{/privacy}", "received_events_url": "https://api.github.com/users/umarmughal824/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-07T12:50:19Z", "updated_at": "2018-01-20T01:07:00Z", "closed_at": "2018-01-20T01:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I give it \r\n\r\naccess_key = id_token (obtained from android / ios app which had taken it from google api)\r\n\r\nI get the following error.\r\n\r\nIncorrect value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/400", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/400/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/400/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/400", "id": 285262811, "node_id": "MDU6SXNzdWUyODUyNjI4MTE=", "number": 400, "title": "400 error when testing 'rest_register'", "user": {"login": "whoisearth", "id": 5064995, "node_id": "MDQ6VXNlcjUwNjQ5OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5064995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whoisearth", "html_url": "https://github.com/whoisearth", "followers_url": "https://api.github.com/users/whoisearth/followers", "following_url": "https://api.github.com/users/whoisearth/following{/other_user}", "gists_url": "https://api.github.com/users/whoisearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/whoisearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whoisearth/subscriptions", "organizations_url": "https://api.github.com/users/whoisearth/orgs", "repos_url": "https://api.github.com/users/whoisearth/repos", "events_url": "https://api.github.com/users/whoisearth/events{/privacy}", "received_events_url": "https://api.github.com/users/whoisearth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-31T15:24:40Z", "updated_at": "2017-12-31T16:13:45Z", "closed_at": "2017-12-31T16:13:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following Test Case:\r\n\r\n```\r\nclass UserTests(APITestCase):\r\n    def test_register_user(self):\r\n        client = APIClient()\r\n        url = reverse('rest_register')\r\n        data = {\r\n            'username': 'test',\r\n            'password1': 'test123',\r\n            'password2': 'test123',\r\n            'email': 'test@test.com'\r\n        }\r\n        response = client.post(url, data, format='json')\r\n        self.assertEqual(response.status_code, status.HTTP_201_CREATED)\r\n        self.assertEqual(User.objects.count(), 1)\r\n        self.assertEqual(User.objects.get().usernamename, 'test')\r\n        client.logout()\r\n```\r\n\r\nOn running I get the following Traceback:\r\n\r\n```\r\nCreating test database for alias 'default'...\r\nSystem check identified no issues (0 silenced).\r\n\r\nFailure\r\nTraceback (most recent call last):\r\n  File \"D:\\Projects\\enterpass\\api\\core\\tests.py\", line 18, in test_register_user\r\n    self.assertEqual(response.status_code, status.HTTP_201_CREATED)\r\nAssertionError: 400 != 201\r\n\r\nDestroying test database for alias 'default'...\r\n\r\nProcess finished with exit code 1\r\n\r\n```\r\nNot sure why I'm getting a 400 error.  I can use the app correctly and create the user with no issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/399", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/399/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/399/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/399", "id": 284673081, "node_id": "MDU6SXNzdWUyODQ2NzMwODE=", "number": 399, "title": "Use HTTP Status Code 403 when login authentication fails ", "user": {"login": "Neo-Zhixing", "id": 8980455, "node_id": "MDQ6VXNlcjg5ODA0NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8980455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neo-Zhixing", "html_url": "https://github.com/Neo-Zhixing", "followers_url": "https://api.github.com/users/Neo-Zhixing/followers", "following_url": "https://api.github.com/users/Neo-Zhixing/following{/other_user}", "gists_url": "https://api.github.com/users/Neo-Zhixing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neo-Zhixing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neo-Zhixing/subscriptions", "organizations_url": "https://api.github.com/users/Neo-Zhixing/orgs", "repos_url": "https://api.github.com/users/Neo-Zhixing/repos", "events_url": "https://api.github.com/users/Neo-Zhixing/events{/privacy}", "received_events_url": "https://api.github.com/users/Neo-Zhixing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-27T08:19:45Z", "updated_at": "2018-12-10T07:59:54Z", "closed_at": "2018-12-10T07:59:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the login view returns HTTP Code 400 (bad request) when a bad login credential was provided - not an \"apparent client error\" as code 400 implicates. The framework is doing this only because 400 is the default code of rest_framework.exceptions.ValidationError, which was raised when login authentication fails. Code 403 should be appropriate here. The problem can be easily resolved by adding a \"code=403\" parameter to the exception.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/395", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/395/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/395/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/395", "id": 282652501, "node_id": "MDU6SXNzdWUyODI2NTI1MDE=", "number": 395, "title": "Demo project setup fails with Django-2.0", "user": {"login": "lukasgebhard", "id": 16634824, "node_id": "MDQ6VXNlcjE2NjM0ODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/16634824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukasgebhard", "html_url": "https://github.com/lukasgebhard", "followers_url": "https://api.github.com/users/lukasgebhard/followers", "following_url": "https://api.github.com/users/lukasgebhard/following{/other_user}", "gists_url": "https://api.github.com/users/lukasgebhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukasgebhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukasgebhard/subscriptions", "organizations_url": "https://api.github.com/users/lukasgebhard/orgs", "repos_url": "https://api.github.com/users/lukasgebhard/repos", "events_url": "https://api.github.com/users/lukasgebhard/events{/privacy}", "received_events_url": "https://api.github.com/users/lukasgebhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-16T21:39:05Z", "updated_at": "2017-12-16T21:55:14Z", "closed_at": "2017-12-16T21:55:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting up the demo project [as described in the docs](http://django-rest-auth.readthedocs.io/en/latest/demo.html) works perfectly fine with Django-1.11 but it fails with Django-2.0.\r\n\r\n```\r\n>>>python manage.py migrate --settings=demo.settings --noinput\r\nTraceback (most recent call last):\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/rest_framework/compat.py\", line 27, in <module>\r\n    from django.urls import (\r\nImportError: cannot import name 'RegexURLPattern'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 365, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/base.py\", line 288, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/base.py\", line 332, in execute\r\n    self.check()\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/base.py\", line 364, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/commands/migrate.py\", line 58, in _run_checks\r\n    issues.extend(super()._run_checks(**kwargs))\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/management/base.py\", line 351, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/checks/registry.py\", line 73, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/checks/urls.py\", line 40, in check_url_namespaces_unique\r\n    all_namespaces = _load_all_namespaces(resolver)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/core/checks/urls.py\", line 57, in _load_all_namespaces\r\n    url_patterns = getattr(resolver, 'url_patterns', [])\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/utils/functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/urls/resolvers.py\", line 536, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/utils/functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/django/urls/resolvers.py\", line 529, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/importlib/__init__.py\", line 109, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\r\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\r\n  File \"/tmp/django-rest-auth/demo/demo/urls.py\", line 5, in <module>\r\n    from rest_framework_swagger.views import get_swagger_view\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/rest_framework_swagger/views.py\", line 1, in <module>\r\n    from rest_framework import exceptions\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/rest_framework/exceptions.py\", line 17, in <module>\r\n    from rest_framework.utils.serializer_helpers import ReturnDict, ReturnList\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/rest_framework/utils/serializer_helpers.py\", line 8, in <module>\r\n    from rest_framework.compat import unicode_to_repr\r\n  File \"/tmp/django-rest-auth/demo/env/lib/python3.4/site-packages/rest_framework/compat.py\", line 31, in <module>\r\n    from django.core.urlresolvers import (  # Will be removed in Django 2.0\r\nImportError: No module named 'django.core.urlresolvers'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/393", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/393/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/393/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/393", "id": 281376240, "node_id": "MDU6SXNzdWUyODEzNzYyNDA=", "number": 393, "title": "Can't override \"password_reset_key_message.txt\"", "user": {"login": "MadReal", "id": 19192679, "node_id": "MDQ6VXNlcjE5MTkyNjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/19192679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MadReal", "html_url": "https://github.com/MadReal", "followers_url": "https://api.github.com/users/MadReal/followers", "following_url": "https://api.github.com/users/MadReal/following{/other_user}", "gists_url": "https://api.github.com/users/MadReal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MadReal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MadReal/subscriptions", "organizations_url": "https://api.github.com/users/MadReal/orgs", "repos_url": "https://api.github.com/users/MadReal/repos", "events_url": "https://api.github.com/users/MadReal/events{/privacy}", "received_events_url": "https://api.github.com/users/MadReal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-12-12T13:01:45Z", "updated_at": "2020-07-23T03:40:23Z", "closed_at": "2019-05-29T22:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having issues overriding the default email for the \"forgot password\". I can override the 2 email for \"email confirmation\" without any issue but not with this one.\r\n\r\nNot matter the extension, the one sent is always the default one that comes with the package.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/392", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/392/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/392/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/392", "id": 280832656, "node_id": "MDU6SXNzdWUyODA4MzI2NTY=", "number": 392, "title": "password/reset Error being thrown", "user": {"login": "qarthandgi", "id": 25380187, "node_id": "MDQ6VXNlcjI1MzgwMTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/25380187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qarthandgi", "html_url": "https://github.com/qarthandgi", "followers_url": "https://api.github.com/users/qarthandgi/followers", "following_url": "https://api.github.com/users/qarthandgi/following{/other_user}", "gists_url": "https://api.github.com/users/qarthandgi/gists{/gist_id}", "starred_url": "https://api.github.com/users/qarthandgi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qarthandgi/subscriptions", "organizations_url": "https://api.github.com/users/qarthandgi/orgs", "repos_url": "https://api.github.com/users/qarthandgi/repos", "events_url": "https://api.github.com/users/qarthandgi/events{/privacy}", "received_events_url": "https://api.github.com/users/qarthandgi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-10T18:47:25Z", "updated_at": "2017-12-10T22:43:32Z", "closed_at": "2017-12-10T22:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to implement a _Forgot Password_ button, utilizing the url `/rest_auth/pasword/reset`.\r\n\r\nMy assumption, from reading the [docs](http://django-rest-auth.readthedocs.io/en/latest/api_endpoints.html#basic) on this endpoint, is that you only need to pass an `email` to the endpoint, and then the reset email will be sent, prompting the user to reset their password.\r\n\r\nThe issue is, this flow only works when the user is actually logged in, thus when the session has a valid token key to send back to the server.\r\n\r\nIf the user forgets their password, they obviously won't be logged in, and thus won't have a token to send back to the server. This is the error I get when trying to post to the endpoint with just the email and no token header.\r\n`{\"detail\":\"Invalid token header. No credentials provided.\"}`\r\n\r\nI didn't think that we should need to include a token in the header because that defeats the purpose. Am I misunderstanding how this endpoint is supposed to be used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/390", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/390/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/390/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/390", "id": 278915584, "node_id": "MDU6SXNzdWUyNzg5MTU1ODQ=", "number": 390, "title": "Is it possible to override the responseParams?", "user": {"login": "maxim25", "id": 8139830, "node_id": "MDQ6VXNlcjgxMzk4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8139830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim25", "html_url": "https://github.com/maxim25", "followers_url": "https://api.github.com/users/maxim25/followers", "following_url": "https://api.github.com/users/maxim25/following{/other_user}", "gists_url": "https://api.github.com/users/maxim25/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim25/subscriptions", "organizations_url": "https://api.github.com/users/maxim25/orgs", "repos_url": "https://api.github.com/users/maxim25/repos", "events_url": "https://api.github.com/users/maxim25/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim25/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-04T08:50:14Z", "updated_at": "2017-12-04T08:50:48Z", "closed_at": "2017-12-04T08:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "wrong lib :/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/389", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/389/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/389/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/389", "id": 278775521, "node_id": "MDU6SXNzdWUyNzg3NzU1MjE=", "number": 389, "title": "Wrong reset password link when using nginx", "user": {"login": "dpstart", "id": 10325302, "node_id": "MDQ6VXNlcjEwMzI1MzAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10325302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpstart", "html_url": "https://github.com/dpstart", "followers_url": "https://api.github.com/users/dpstart/followers", "following_url": "https://api.github.com/users/dpstart/following{/other_user}", "gists_url": "https://api.github.com/users/dpstart/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpstart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpstart/subscriptions", "organizations_url": "https://api.github.com/users/dpstart/orgs", "repos_url": "https://api.github.com/users/dpstart/repos", "events_url": "https://api.github.com/users/dpstart/events{/privacy}", "received_events_url": "https://api.github.com/users/dpstart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-03T13:20:49Z", "updated_at": "2018-04-30T08:06:15Z", "closed_at": "2018-02-09T22:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using nginx to handle my requests.\r\nHere's the problem: The rest password link that is send via email has the wrong domani.\r\nMore specifically, the domani is the value to which proxy_pass is set in the nginx configurations.\r\n\r\nHere's my config file:\r\n\r\n```upstream web {\r\n  ip_hash;\r\n  server web:8000;\r\n}\r\n\r\n# portal\r\nserver {\r\nserver_name bibshake.dis.uniroma1.it;\r\n\r\n  location / {\r\n\r\n  proxy_pass_header Server;\r\n   proxy_set_header Host $http_host;\r\n   proxy_redirect off;\r\n   proxy_set_header X-Real-IP $remote_addr;\r\n   proxy_set_header X-Scheme $scheme;\r\n   proxy_connect_timeout 10;\r\n   proxy_read_timeout 10;\r\n   proxy_pass http://web/;\r\n    }\r\n\r\n  listen 80;\r\n\r\n}\r\n```\r\n\r\nAnd here's the link I receive:\r\n\r\n`http://web/contrib/reset/MQ/4ro-0e344c54202eac16a2e9/`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/388", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/388/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/388/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/388", "id": 278747505, "node_id": "MDU6SXNzdWUyNzg3NDc1MDU=", "number": 388, "title": "Password reset email not sending", "user": {"login": "cmelone", "id": 12242980, "node_id": "MDQ6VXNlcjEyMjQyOTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/12242980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmelone", "html_url": "https://github.com/cmelone", "followers_url": "https://api.github.com/users/cmelone/followers", "following_url": "https://api.github.com/users/cmelone/following{/other_user}", "gists_url": "https://api.github.com/users/cmelone/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmelone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmelone/subscriptions", "organizations_url": "https://api.github.com/users/cmelone/orgs", "repos_url": "https://api.github.com/users/cmelone/repos", "events_url": "https://api.github.com/users/cmelone/events{/privacy}", "received_events_url": "https://api.github.com/users/cmelone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-03T05:50:41Z", "updated_at": "2018-05-08T16:38:45Z", "closed_at": "2017-12-08T05:25:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m using the default endpoint \u2018/rest-auth/password/reset/\u2018 and posting an email address. But the email never sends, and no error is given in the console or else ware.\r\n\r\nIt even says \u201cpassword reset email sent\u201d. I have already determined that it\u2019s not an email backend issue because when I sign up for an account, an email is sent", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/385", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/385/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/385/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/385", "id": 276781247, "node_id": "MDU6SXNzdWUyNzY3ODEyNDc=", "number": 385, "title": "LoginSerializer validation called twice when using Allauth with email", "user": {"login": "ducheneaut", "id": 219241, "node_id": "MDQ6VXNlcjIxOTI0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/219241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ducheneaut", "html_url": "https://github.com/ducheneaut", "followers_url": "https://api.github.com/users/ducheneaut/followers", "following_url": "https://api.github.com/users/ducheneaut/following{/other_user}", "gists_url": "https://api.github.com/users/ducheneaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/ducheneaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ducheneaut/subscriptions", "organizations_url": "https://api.github.com/users/ducheneaut/orgs", "repos_url": "https://api.github.com/users/ducheneaut/repos", "events_url": "https://api.github.com/users/ducheneaut/events{/privacy}", "received_events_url": "https://api.github.com/users/ducheneaut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-25T22:04:34Z", "updated_at": "2017-11-27T07:15:34Z", "closed_at": "2017-11-27T07:15:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Very minor issue: when using Allauth with \"email\" as the authentication method, the \"else\" statement at L78 causes the input to be validated twice - first with _validate_email, then again with _validate_username_email:\r\n\r\nhttps://github.com/Tivix/django-rest-auth/blob/658664a7d4240e3c5abfe9bbcb123cfc13df0f1b/rest_auth/serializers.py#L66-L79\r\n\r\nShould probably have an \"elif\" at L74 instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/384", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/384/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/384/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/384", "id": 274510710, "node_id": "MDU6SXNzdWUyNzQ1MTA3MTA=", "number": 384, "title": "Use only rest_password_reset without exposing django endpoints", "user": {"login": "dpstart", "id": 10325302, "node_id": "MDQ6VXNlcjEwMzI1MzAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10325302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpstart", "html_url": "https://github.com/dpstart", "followers_url": "https://api.github.com/users/dpstart/followers", "following_url": "https://api.github.com/users/dpstart/following{/other_user}", "gists_url": "https://api.github.com/users/dpstart/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpstart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpstart/subscriptions", "organizations_url": "https://api.github.com/users/dpstart/orgs", "repos_url": "https://api.github.com/users/dpstart/repos", "events_url": "https://api.github.com/users/dpstart/events{/privacy}", "received_events_url": "https://api.github.com/users/dpstart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-16T13:11:26Z", "updated_at": "2018-04-25T18:18:52Z", "closed_at": "2017-11-16T13:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using this library only for the password reset functionality.\r\n\r\nHowever, my urls only work if I expose `django.contrib.auth.urls'`, which gives access to all other authentication endpoint such as /login etc.\r\n\r\nIs there a way I can only use rest-auth's password_rest and password_reset confirm without exposing the other endpoints?\r\n\r\nHere are my  urls patterns:\r\n\r\n```\r\nurlpatterns = [\r\n\r\n    url(r'^api', include('django.contrib.auth.urls')), #Exposing dangerous endpoints!!!\r\n    url(r'^api/rest-auth/password/reset/$', auth_views.PasswordResetView.as_view(),\r\n        name='rest_password_reset'),\r\n    url(r'^api/rest-auth/password/reset/confirm/$', auth_views.PasswordResetConfirmView.as_view(),\r\n        name='rest_password_reset_confirm'),\r\n]\r\n```\r\n\r\nIf I remove the first url, I get:\r\n\r\n> NoReverseMatch at /api/rest-auth/password/reset/\r\nReverse for 'password_reset_confirm' not found. 'password_reset_confirm' is not a valid view function or pattern name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/381", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/381/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/381/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/381", "id": 270301929, "node_id": "MDU6SXNzdWUyNzAzMDE5Mjk=", "number": 381, "title": "PasswordReset template doesn't exist", "user": {"login": "mbaragiola", "id": 3682895, "node_id": "MDQ6VXNlcjM2ODI4OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3682895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbaragiola", "html_url": "https://github.com/mbaragiola", "followers_url": "https://api.github.com/users/mbaragiola/followers", "following_url": "https://api.github.com/users/mbaragiola/following{/other_user}", "gists_url": "https://api.github.com/users/mbaragiola/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbaragiola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbaragiola/subscriptions", "organizations_url": "https://api.github.com/users/mbaragiola/orgs", "repos_url": "https://api.github.com/users/mbaragiola/repos", "events_url": "https://api.github.com/users/mbaragiola/events{/privacy}", "received_events_url": "https://api.github.com/users/mbaragiola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T13:04:37Z", "updated_at": "2018-02-09T22:03:31Z", "closed_at": "2018-02-09T22:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, `restauth:rest_password_change` is trying to use template `registration/password_reset_email.html` but fails to find it. I haven't find such template neither in `django-allauth` nor `django-rest-auth` when looking myself.\r\n\r\nAny heads up?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/378", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/378/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/378/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/378", "id": 270004429, "node_id": "MDU6SXNzdWUyNzAwMDQ0Mjk=", "number": 378, "title": "Build not passing due to DRF 3.7 not supporting django 1.8 anymore", "user": {"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-10-31T15:31:43Z", "updated_at": "2017-10-31T17:27:42Z", "closed_at": "2017-10-31T17:27:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Things need fixing:\r\n- add DRF test dependency in `travis.yml`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/377", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/377/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/377/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/377", "id": 269694975, "node_id": "MDU6SXNzdWUyNjk2OTQ5NzU=", "number": 377, "title": "Check if email is verified restriction on LoginSerializer not working", "user": {"login": "mbaragiola", "id": 3682895, "node_id": "MDQ6VXNlcjM2ODI4OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3682895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbaragiola", "html_url": "https://github.com/mbaragiola", "followers_url": "https://api.github.com/users/mbaragiola/followers", "following_url": "https://api.github.com/users/mbaragiola/following{/other_user}", "gists_url": "https://api.github.com/users/mbaragiola/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbaragiola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbaragiola/subscriptions", "organizations_url": "https://api.github.com/users/mbaragiola/orgs", "repos_url": "https://api.github.com/users/mbaragiola/repos", "events_url": "https://api.github.com/users/mbaragiola/events{/privacy}", "received_events_url": "https://api.github.com/users/mbaragiola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-30T17:53:17Z", "updated_at": "2017-10-31T15:37:46Z", "closed_at": "2017-10-31T15:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code in question is:\r\n\r\nhttps://github.com/Tivix/django-rest-auth/blob/42d039b473bc18080d58656f50f379005cd70499/rest_auth/serializers.py#L101-L107\r\n\r\nI have correctly configured both `django-allauth` and `django-rest-auth`:\r\n\r\n```\r\nPython 3.6.3 (default, Oct 10 2017, 02:32:38) \r\n[GCC 4.9.2] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n(InteractiveConsole)\r\n>>> from django.conf import settings\r\n>>> 'rest_auth.registration' in settings.INSTALLED_APPS\r\nTrue\r\n>>> from allauth.account import app_settings\r\n>>> app_settings.EMAIL_VERIFICATION == app_settings.EmailVerificationMethod.MANDATORY\r\nTrue\r\n```\r\n\r\nI registered an example user for testing purposes, it gets created correctly and the confirmation email is sent correctly. Before confirming the email, I try to login with said user to see what happens and to my surprise I get correctly logged in. I tried to see if for any reason `verified` is set to True, but it isn't.\r\n\r\n```\r\ndjangodev_1        | [30/Oct/2017 17:15:06] \"OPTIONS /v1/token-auth/ HTTP/1.1\" 200 0\r\ndjangodev_1        | [30/Oct/2017 17:15:06] \"POST /v1/token-auth/ HTTP/1.1\" 200 220\r\n```\r\n\r\nHere's what `python manage.py dumpdata --indent 1 account.emailaddresses` throws:\r\n\r\n```json\r\n{\r\n \"model\": \"account.emailaddress\",\r\n \"pk\": 7,\r\n \"fields\": {\r\n  \"user\": 41,\r\n  \"email\": \"test@test.com\",\r\n  \"verified\": false,\r\n  \"primary\": true\r\n }\r\n}\r\n```\r\n\r\nIs anybody else having this problem?\r\n\r\nHere are my settings, just in case:\r\n\r\n```python\r\n# django-allauth\r\nAUTH_USER_MODEL = 'auth.User'\r\nACCOUNT_ADAPTER = 'users.adapter.AccountAdapter'\r\nACCOUNT_USERNAME_REQUIRED = False\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_EMAIL_VERIFICATION = 'mandatory'\r\nACCOUNT_UNIQUE_EMAIL = True\r\nACCOUNT_USER_DISPLAY = lambda user: user.get_full_name()\r\nACCOUNT_USER_MODEL_EMAIL_FIELD = 'email'\r\nACCOUNT_USER_MODEL_USERNAME_FIELD = 'username'\r\n\r\n# django-allauth: account\r\nLOGIN_URL = '/login'\r\nLOGIN_REDIRECT_URL = '/'\r\nPASSWORD_RESET_TIMEOUT_DAYS = 1\r\nACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True\r\nACCOUNT_AUTHENTICATION_METHOD = 'email'\r\nACCOUNT_CONFIRM_EMAIL_ON_GET = False\r\nACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL\r\nACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = LOGIN_REDIRECT_URL\r\nACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3\r\nACCOUNT_EMAIL_CONFIRMATION_HMAC = True\r\nACCOUNT_EMAIL_SUBJECT_PREFIX = ''\r\nACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'\r\nACCOUNT_FORMS = {}\r\nACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5\r\nACCOUNT_LOGIN_ATTEMTPS_TIMEOUT = 300\r\nACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False\r\nACCOUNT_LOGOUT_ON_GET = False\r\nACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = False\r\nACCOUNT_LOGIN_ON_PASSWORD_RESET = False\r\nACCOUNT_LOGOUT_REDIRECT_URL = '/'\r\nACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False\r\nACCOUNT_PASSWORD_MIN_LENGTH = 6\r\nACCOUNT_SESSION_REMEMBER = None\r\nACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = False\r\nACCOUNT_SIGNUP_FORM_CLASS = None\r\nACCOUNT_TEMPLATE_EXTENSION = 'html'\r\nACCOUNT_USERNAME_BLACKLIST = []\r\nACCOUNT_USERAME_MIN_LENGTH = 0\r\n\r\n# django-allauth: social\r\nSOCIALACCOUNT_ADAPTER = (\r\n    'allauth.socialaccount.adapter.DefaultSocialAccountAdapter'\r\n)\r\nSOCIALACCOUNT_AUTO_SIGNUP = True\r\nSOCIALACCOUNT_EMAIL_VERIFICATION = 'none'\r\nSOCIALACCOUNT_EMAIL_REQUIRED = True\r\nSOCIALACCOUNT_QUERY_EMAIL = True\r\nSOCIALACCOUNT_STORE_TOKENS = False\r\nSOCIALACCOUNT_FORMS = {}\r\nSOCIALACCOUNT_PROVIDERS = {\r\n    'facebook': {\r\n        'METHOD': 'oauth2',\r\n        'SCOPE': ['email', 'public_profile'],\r\n        'FIELDS': [\r\n            'id',\r\n            'email',\r\n            'name',\r\n            'first_name',\r\n            'last_name',\r\n            'verified',\r\n            'locale',\r\n            'link',\r\n            'gender',\r\n            'updated_time'\r\n        ],\r\n        'EXCHANGE_TOKEN': False,\r\n        'VERIFIED_EMAIL': True,\r\n        'VERSION': 'v2.4'\r\n    },\r\n'google': {\r\n        'SCOPE': [\r\n            'profile',\r\n            'email',\r\n        ],\r\n        'FIELDS': [\r\n            'id',\r\n            'email',\r\n            'given_name',\r\n            'family_name',\r\n        ],\r\n        'AUTH_PARAMS': {\r\n            'acces_type': 'online',\r\n        }\r\n    }\r\n}\r\n\r\n# django-rest-auth\r\nREST_AUTH_SERIALIZERS = {\r\n    'LOGIN_SERIALIZER': 'rest_auth.serializers.LoginSerializer',\r\n    'JWT_SERIALIZER': 'rest_auth.serializers.JWTSerializer',\r\n    'USER_DETAILS_SERIALIZER': 'users.v1.serializers.UserProfileSerializer',\r\n    'PASSWORD_RESET_SERIALIZER': (\r\n        'rest_auth.serializers.PasswordResetSerializer'\r\n    ),\r\n    'PASSWORD_RESET_CONFIRM_SERIALIZER': (\r\n        'rest_auth.serializers.PasswordResetConfirmSerializer'\r\n    ),\r\n    'PASSWORD_CHANGE_SERIALIZER': (\r\n        'rest_auth.serializers.PasswordChangeSerializer'\r\n    )\r\n}\r\nREST_AUTH_REGISTER_SERIALIZERS = {\r\n    'REGISTER_SERIALIZER': (\r\n        'users.v1.serializers.RegisterSerializer'\r\n    )\r\n}\r\nREST_SESSION_LOGIN = False\r\nREST_USE_JWT = True\r\nOLD_PASSWORD_FIELD_ENABLED = True\r\nLOGOUT_ON_PASSWORD_CHANGE = False\r\n```\r\n\r\nPlease, let me know if anything else is further needed. Thank you advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/376", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/376/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/376/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/376", "id": 269351771, "node_id": "MDU6SXNzdWUyNjkzNTE3NzE=", "number": 376, "title": "Documentation should mention to add the allauth urls", "user": {"login": "oliverandrich", "id": 758, "node_id": "MDQ6VXNlcjc1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverandrich", "html_url": "https://github.com/oliverandrich", "followers_url": "https://api.github.com/users/oliverandrich/followers", "following_url": "https://api.github.com/users/oliverandrich/following{/other_user}", "gists_url": "https://api.github.com/users/oliverandrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverandrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverandrich/subscriptions", "organizations_url": "https://api.github.com/users/oliverandrich/orgs", "repos_url": "https://api.github.com/users/oliverandrich/repos", "events_url": "https://api.github.com/users/oliverandrich/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverandrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-28T21:33:43Z", "updated_at": "2017-10-28T21:49:40Z", "closed_at": "2017-10-28T21:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added django-rest-auth along with registration to my project. It took a while for me to figure out, that I have to add\r\n\r\nurl(r'^accounts/', include('allauth.urls')),\r\n\r\nalso to my urls.py. Otherwise I get an exception when I use the registration endpoints in my project. May be you should add this to the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/375", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/375/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/375/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/375", "id": 268639789, "node_id": "MDU6SXNzdWUyNjg2Mzk3ODk=", "number": 375, "title": "`version` error when URLPathVersioning is enabled in DRF", "user": {"login": "lukik", "id": 3744924, "node_id": "MDQ6VXNlcjM3NDQ5MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3744924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukik", "html_url": "https://github.com/lukik", "followers_url": "https://api.github.com/users/lukik/followers", "following_url": "https://api.github.com/users/lukik/following{/other_user}", "gists_url": "https://api.github.com/users/lukik/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukik/subscriptions", "organizations_url": "https://api.github.com/users/lukik/orgs", "repos_url": "https://api.github.com/users/lukik/repos", "events_url": "https://api.github.com/users/lukik/events{/privacy}", "received_events_url": "https://api.github.com/users/lukik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-26T06:07:15Z", "updated_at": "2017-11-02T08:12:33Z", "closed_at": "2017-11-02T08:12:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling: `/v1/rest-auth/logout/` and `/v1/rest-auth/password/change` with URL Versioning enabled in Django Rest Framework throws the error:\r\n\r\n`TypeError: post() got an unexpected keyword argument 'version'`\r\n\r\n**settings.py:**\r\n\r\n```\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',\r\n    'DEFAULT_VERSION': 'v1', \r\n    'ALLOWED_VERSIONS': ('v1', ),\r\n\r\n}\r\n```\r\n\r\n**urls.py:**\r\n\r\n```\r\nURL_VERSION = r'^(?P<version>v[1])'\r\nurl(f'{URL_VERSION}/rest-auth/', include('rest_auth.urls'))\r\n```\r\n\r\nElse without URL versioning the URLs work okay.\r\n\r\nPackages:\r\n\r\n> django==1.10.8\r\n> djangorestframework==3.5.1\r\n> django-rest-auth==0.9.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/368", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/368/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/368/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/368", "id": 263756326, "node_id": "MDU6SXNzdWUyNjM3NTYzMjY=", "number": 368, "title": "Field name `username` is not valid for model `User`.", "user": {"login": "igsm", "id": 12541683, "node_id": "MDQ6VXNlcjEyNTQxNjgz", "avatar_url": "https://avatars3.githubusercontent.com/u/12541683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igsm", "html_url": "https://github.com/igsm", "followers_url": "https://api.github.com/users/igsm/followers", "following_url": "https://api.github.com/users/igsm/following{/other_user}", "gists_url": "https://api.github.com/users/igsm/gists{/gist_id}", "starred_url": "https://api.github.com/users/igsm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igsm/subscriptions", "organizations_url": "https://api.github.com/users/igsm/orgs", "repos_url": "https://api.github.com/users/igsm/repos", "events_url": "https://api.github.com/users/igsm/events{/privacy}", "received_events_url": "https://api.github.com/users/igsm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-08T22:11:14Z", "updated_at": "2018-04-15T23:52:26Z", "closed_at": "2018-04-15T23:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use custom user model. I thought that by defining the following settings it will ignore 'username'. However, I still hit the same error.\r\n\r\nField name `username` is not valid for model `User`.\r\n_~/lib/python3.6/site-packages/rest_framework/serializers.py in build_unknown_field, line 1258_\r\n\r\n```\r\nACCOUNT_EMAIL_VERIFICATION = 'mandatory'\r\nACCOUNT_AUTHENTICATION_METHOD = 'email'\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_USER_MODEL_USERNAME_FIELD = None\r\nACCOUNT_USERNAME_REQUIRED = False\r\nACCOUNT_UNIQUE_EMAIL = True\r\nREST_USE_JWT = True\r\nJWT_SERIALIZER = True\r\nREST_USE_JWT=True\r\n```\r\n\r\nI am going nuts implementing this stuff. What am I missing? Lets assume that email is verified, I'd like to login and get JWT in the response. Do I need to implement custom LoginSerializer? But, then if you look at how it is [configured by default](https://github.com/Tivix/django-rest-auth/blob/master/rest_auth/serializers.py), you can see that it has some logic that checks what kind of credentials have been used on login attempt. I am lost.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/365", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/365/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/365/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/365", "id": 261746731, "node_id": "MDU6SXNzdWUyNjE3NDY3MzE=", "number": 365, "title": "Bug: code assumes email is unique", "user": {"login": "adamdonahue", "id": 2406542, "node_id": "MDQ6VXNlcjI0MDY1NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2406542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamdonahue", "html_url": "https://github.com/adamdonahue", "followers_url": "https://api.github.com/users/adamdonahue/followers", "following_url": "https://api.github.com/users/adamdonahue/following{/other_user}", "gists_url": "https://api.github.com/users/adamdonahue/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamdonahue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamdonahue/subscriptions", "organizations_url": "https://api.github.com/users/adamdonahue/orgs", "repos_url": "https://api.github.com/users/adamdonahue/repos", "events_url": "https://api.github.com/users/adamdonahue/events{/privacy}", "received_events_url": "https://api.github.com/users/adamdonahue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-29T19:33:37Z", "updated_at": "2018-01-16T07:24:24Z", "closed_at": "2018-01-16T07:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "During login, this code fails if more than one user has the same email:\r\n\r\n`rest_auth/serializers.py in validate`:\r\n\r\n![image](https://user-images.githubusercontent.com/2406542/31032728-384f0e38-a52b-11e7-9004-509b3b93c248.png)\r\n\r\nDjango allows for multiple users to leverage the same email address.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/361", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/361/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/361/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/361", "id": 259947424, "node_id": "MDU6SXNzdWUyNTk5NDc0MjQ=", "number": 361, "title": "Please release version 0.9.2", "user": {"login": "jrief", "id": 1132472, "node_id": "MDQ6VXNlcjExMzI0NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1132472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrief", "html_url": "https://github.com/jrief", "followers_url": "https://api.github.com/users/jrief/followers", "following_url": "https://api.github.com/users/jrief/following{/other_user}", "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrief/subscriptions", "organizations_url": "https://api.github.com/users/jrief/orgs", "repos_url": "https://api.github.com/users/jrief/repos", "events_url": "https://api.github.com/users/jrief/events{/privacy}", "received_events_url": "https://api.github.com/users/jrief/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-22T21:52:42Z", "updated_at": "2017-10-03T15:59:40Z", "closed_at": "2017-10-03T15:59:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/360", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/360/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/360/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/360", "id": 259103982, "node_id": "MDU6SXNzdWUyNTkxMDM5ODI=", "number": 360, "title": "Invalid grant error", "user": {"login": "pkyalo", "id": 24449269, "node_id": "MDQ6VXNlcjI0NDQ5MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/24449269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkyalo", "html_url": "https://github.com/pkyalo", "followers_url": "https://api.github.com/users/pkyalo/followers", "following_url": "https://api.github.com/users/pkyalo/following{/other_user}", "gists_url": "https://api.github.com/users/pkyalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkyalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkyalo/subscriptions", "organizations_url": "https://api.github.com/users/pkyalo/orgs", "repos_url": "https://api.github.com/users/pkyalo/repos", "events_url": "https://api.github.com/users/pkyalo/events{/privacy}", "received_events_url": "https://api.github.com/users/pkyalo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-20T09:47:18Z", "updated_at": "2017-10-16T18:30:23Z", "closed_at": "2017-10-16T18:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am always getting **Error retrieving access token: b'{\\n  \"error\" : \"invalid_grant\"\\n}**'\r\n when using google auth id_token. Access_token works fine though", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/358", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/358/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/358/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/358", "id": 256476115, "node_id": "MDU6SXNzdWUyNTY0NzYxMTU=", "number": 358, "title": "SocialLoginSerializer.validate saves", "user": {"login": "hgezim", "id": 124675, "node_id": "MDQ6VXNlcjEyNDY3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/124675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgezim", "html_url": "https://github.com/hgezim", "followers_url": "https://api.github.com/users/hgezim/followers", "following_url": "https://api.github.com/users/hgezim/following{/other_user}", "gists_url": "https://api.github.com/users/hgezim/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgezim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgezim/subscriptions", "organizations_url": "https://api.github.com/users/hgezim/orgs", "repos_url": "https://api.github.com/users/hgezim/repos", "events_url": "https://api.github.com/users/hgezim/events{/privacy}", "received_events_url": "https://api.github.com/users/hgezim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-10T00:44:37Z", "updated_at": "2018-04-15T23:47:02Z", "closed_at": "2018-04-15T23:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to me completely odd that `SocialLoginSerializer.validate` goes on to save the `SocialLogin` which in turn saves the User...all inside a validate method!\r\n\r\nReason I started digging was [this](https://github.com/pennersr/django-allauth/issues/1821).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/354", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/354/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/354/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/354", "id": 250985197, "node_id": "MDU6SXNzdWUyNTA5ODUxOTc=", "number": 354, "title": "Custom Serializer Problem", "user": {"login": "deepak1725", "id": 21026016, "node_id": "MDQ6VXNlcjIxMDI2MDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/21026016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepak1725", "html_url": "https://github.com/deepak1725", "followers_url": "https://api.github.com/users/deepak1725/followers", "following_url": "https://api.github.com/users/deepak1725/following{/other_user}", "gists_url": "https://api.github.com/users/deepak1725/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepak1725/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepak1725/subscriptions", "organizations_url": "https://api.github.com/users/deepak1725/orgs", "repos_url": "https://api.github.com/users/deepak1725/repos", "events_url": "https://api.github.com/users/deepak1725/events{/privacy}", "received_events_url": "https://api.github.com/users/deepak1725/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-17T15:35:24Z", "updated_at": "2019-12-08T09:26:36Z", "closed_at": "2017-08-19T07:01:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using custom Registration serializer, here it is:\r\n#settings.py\r\n`REST_AUTH_REGISTER_SERIALIZERS = {\r\n    'REGISTER_SERIALIZER': 'api.serializers.MyRegisterSerializer'\r\n}`\r\n\r\n#serializers.py\r\n\r\n```\r\nclass MyRegisterSerializer(RegisterSerializer):\r\n    first_name = serializers.CharField()\r\n    last_name = serializers.CharField()\r\n    password = serializers.CharField(write_only=True)\r\n    password1 = password2 = password\r\n    \r\n    def validate(self, data):\r\n        return data\r\n\r\n    def get_cleaned_data(self):\r\n        super(MyRegisterSerializer, self).get_cleaned_data()\r\n        return {\r\n            'username': self.validated_data.get('username', ''),\r\n            'password': self.validated_data.get('password', ''),\r\n            'email': self.validated_data.get('email', ''),\r\n            'first_name': self.validated_data.get('first_name', ''),\r\n            'last_name': self.validated_data.get('last_name', '')\r\n        }\r\n\r\n```\r\n\r\nIssue is : i am getting an unknown `!` prepended to my password, hence forth my password is unrecogonized during login.\r\n\r\nWith using MYREGISTERSERIALIZER : \r\npassword = !HnBxoehpig...\r\n\r\nwithout using MYREGISTERSERIALIZER:\r\npassword = pbkdf2_sha256...\r\ni know password depends on many factors (SALT, Datetime and so),, but my presumption is may this is the issue that causing me login problems as all the signups done with custom serializer has this `!` prepended.\r\n\r\nKindly check the root cause.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/353", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/353/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/353/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/353", "id": 249034601, "node_id": "MDU6SXNzdWUyNDkwMzQ2MDE=", "number": 353, "title": "502 Bad Gateway nginx/1.13.1 during registration via facebook", "user": {"login": "Przemek625", "id": 15988345, "node_id": "MDQ6VXNlcjE1OTg4MzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/15988345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Przemek625", "html_url": "https://github.com/Przemek625", "followers_url": "https://api.github.com/users/Przemek625/followers", "following_url": "https://api.github.com/users/Przemek625/following{/other_user}", "gists_url": "https://api.github.com/users/Przemek625/gists{/gist_id}", "starred_url": "https://api.github.com/users/Przemek625/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Przemek625/subscriptions", "organizations_url": "https://api.github.com/users/Przemek625/orgs", "repos_url": "https://api.github.com/users/Przemek625/repos", "events_url": "https://api.github.com/users/Przemek625/events{/privacy}", "received_events_url": "https://api.github.com/users/Przemek625/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-09T13:41:39Z", "updated_at": "2018-04-15T23:46:05Z", "closed_at": "2018-04-15T23:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Localy everything seems to work fine but in production server registration via faceebok results with 502 Bad Gateway. Do you know what might be the problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/352", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/352/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/352/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/352", "id": 248987356, "node_id": "MDU6SXNzdWUyNDg5ODczNTY=", "number": 352, "title": "auto login user while registering second time", "user": {"login": "karthikrajender", "id": 7234578, "node_id": "MDQ6VXNlcjcyMzQ1Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7234578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karthikrajender", "html_url": "https://github.com/karthikrajender", "followers_url": "https://api.github.com/users/karthikrajender/followers", "following_url": "https://api.github.com/users/karthikrajender/following{/other_user}", "gists_url": "https://api.github.com/users/karthikrajender/gists{/gist_id}", "starred_url": "https://api.github.com/users/karthikrajender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karthikrajender/subscriptions", "organizations_url": "https://api.github.com/users/karthikrajender/orgs", "repos_url": "https://api.github.com/users/karthikrajender/repos", "events_url": "https://api.github.com/users/karthikrajender/events{/privacy}", "received_events_url": "https://api.github.com/users/karthikrajender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T10:33:58Z", "updated_at": "2017-10-02T16:53:20Z", "closed_at": "2017-10-02T16:53:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI want to generate the key token for already exist user, when he register for second time with same username and email id , i am using custom adapter but in save_user () i got struck it checks for duplicate username or email id, but that also i made a condition to avoid that problem but with out using save function, ValueError: save() prohibited to prevent data loss due to unsaved related object 'user'.\r\nkindly help me how can i generate auth token or login", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/350", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/350/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/350/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/350", "id": 246966783, "node_id": "MDU6SXNzdWUyNDY5NjY3ODM=", "number": 350, "title": "Send real email", "user": {"login": "vince015", "id": 2938118, "node_id": "MDQ6VXNlcjI5MzgxMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2938118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vince015", "html_url": "https://github.com/vince015", "followers_url": "https://api.github.com/users/vince015/followers", "following_url": "https://api.github.com/users/vince015/following{/other_user}", "gists_url": "https://api.github.com/users/vince015/gists{/gist_id}", "starred_url": "https://api.github.com/users/vince015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vince015/subscriptions", "organizations_url": "https://api.github.com/users/vince015/orgs", "repos_url": "https://api.github.com/users/vince015/repos", "events_url": "https://api.github.com/users/vince015/events{/privacy}", "received_events_url": "https://api.github.com/users/vince015/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T06:24:20Z", "updated_at": "2017-08-19T13:40:56Z", "closed_at": "2017-08-19T13:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Is it possible to send an actual e-mail (on sign-up and reset password)? If so how to change the e-mail body?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/347", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/347/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/347/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/347", "id": 241245105, "node_id": "MDU6SXNzdWUyNDEyNDUxMDU=", "number": 347, "title": "Connect functionality for social account linking", "user": {"login": "aleksihakli", "id": 2477934, "node_id": "MDQ6VXNlcjI0Nzc5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2477934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksihakli", "html_url": "https://github.com/aleksihakli", "followers_url": "https://api.github.com/users/aleksihakli/followers", "following_url": "https://api.github.com/users/aleksihakli/following{/other_user}", "gists_url": "https://api.github.com/users/aleksihakli/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksihakli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksihakli/subscriptions", "organizations_url": "https://api.github.com/users/aleksihakli/orgs", "repos_url": "https://api.github.com/users/aleksihakli/repos", "events_url": "https://api.github.com/users/aleksihakli/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksihakli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-07T12:09:45Z", "updated_at": "2018-01-19T02:02:49Z", "closed_at": "2018-01-19T02:02:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI recently wrote some account connection logic into our application with `django-allauth` and `django-rest-auth` for use with a mobile application and REST API.\r\n\r\nI found out that it would be fairly easy to bundle connect and disconnect views in the application.\r\n\r\nShould these serializers and views be included in the `django-rest-auth` package? \r\n\r\n```python\r\nfrom allauth.socialaccount.adapter import get_adapter\r\nfrom allauth.socialaccount.models import SocialAccount\r\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\r\n\r\nfrom rest_auth.registration.serializers import SocialLoginSerializer\r\n\r\nfrom rest_framework.permissions import IsAuthenticated\r\nfrom rest_framework.response import Response\r\n\r\n### \r\n# Social account connect functionality for django-rest-auth\r\n\r\nclass SocialConnectSerializer(SocialLoginSerializer):\r\n     \"\"\"Specialize social login process state to `connect`\"\"\"\r\n\r\n    def get_social_login(self, *args, **kwargs):\r\n        social_login = super().get_social_login(*args, **kwargs)\r\n        social_login.state['process'] = 'connect'\r\n        return social_login\r\n\r\n\r\nclass SocialConnectMixin(SocialLoginView):\r\n    \"\"\"Connect view for logged in users\r\n\r\n    The django-allauth module internally uses a request attribute\r\n    called 'process' to set the required action, we override that\r\n    in the SocialConnectSerializer for use with the REST API.\r\n    \"\"\"\r\n\r\n    serializer_class = SocialConnectSerializer\r\n    permission_classes = (IsAuthenticated, )\r\n\r\n###\r\n# Usage example of login and connect functionality for Facebook\r\n\r\nclass FacebookConfigurationMixin(object):\r\n    adapter_class = FacebookOAuth2Adapter\r\n\r\n\r\nclass FacebookLogin(FacebookConfigurationMixin, SocialLoginView):\r\n    \"\"\"Login user with given Facebook account\"\"\"\r\n    pass\r\n\r\nclass FacebookConnect(FacebookConfigurationMixin, SocialConnectMixin, SocialLoginView):\r\n    \"\"\"Connect given Facebook account for logged in user\"\"\"\r\n    pass\r\n\r\n\r\n###\r\n# SocialAccount viewing and disconnection\r\n\r\nclass SocialAccountSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = SocialAccount\r\n        fields = (\r\n            'id',\r\n            'provider',\r\n            'uid',\r\n            'last_login',\r\n            'date_joined',\r\n            'extra_data',\r\n        )\r\n\r\n\r\nclass SocialAccountViewSet(GenericViewSet):\r\n    \"\"\"SocialAccount views for logged in users\"\"\"\r\n\r\n    permission_classes = (IsAuthenticated, )\r\n    serializer_class = SocialAccountSerializer\r\n    queryset = SocialAccount.objects.none()\r\n\r\n    def get_queryset(self):\r\n        return SocialAccount.objects.filter(user=self.request.user)\r\n\r\n    def list(self, request):\r\n        \"\"\"List SocialAccounts for currently logged in user\"\"\"\r\n\r\n        return Response(self.get_serializer(self.get_queryset(), many=True).data)\r\n\r\n    @detail_route(methods=['POST'])\r\n    def disconnect(self, request, pk):\r\n        \"\"\"Disconnect SocialAccount from remote service\r\n\r\n        This is the same logic as used in the web UI form,\r\n        refer to the allauth implementation for more details.\r\n        \"\"\"\r\n\r\n        accounts = self.get_queryset()\r\n        account = accounts.get(pk=pk)\r\n        get_adapter(self.request).validate_disconnect(account, accounts)\r\n\r\n        account.delete()\r\n        signals.social_account_removed.send(\r\n            sender=SocialAccount,\r\n            request=self.request,\r\n            socialaccount=account\r\n        )\r\n\r\n        return Response(self.get_serializer(account).data)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/340", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/340/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/340/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/340", "id": 238316754, "node_id": "MDU6SXNzdWUyMzgzMTY3NTQ=", "number": 340, "title": "Pass request in context to `LoginSerializer` in `LoginView`", "user": {"login": "bIgBV", "id": 5019938, "node_id": "MDQ6VXNlcjUwMTk5Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5019938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bIgBV", "html_url": "https://github.com/bIgBV", "followers_url": "https://api.github.com/users/bIgBV/followers", "following_url": "https://api.github.com/users/bIgBV/following{/other_user}", "gists_url": "https://api.github.com/users/bIgBV/gists{/gist_id}", "starred_url": "https://api.github.com/users/bIgBV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bIgBV/subscriptions", "organizations_url": "https://api.github.com/users/bIgBV/orgs", "repos_url": "https://api.github.com/users/bIgBV/repos", "events_url": "https://api.github.com/users/bIgBV/events{/privacy}", "received_events_url": "https://api.github.com/users/bIgBV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-24T13:15:01Z", "updated_at": "2018-02-27T10:44:50Z", "closed_at": "2017-10-02T18:32:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In Django 1.11, support for passing the `request` object to a custom authentication backend was added. When using a custom `LoginSerializer` one might use a custom backend too. django-rest-auth currently doesn't pass the request to the serializer from the `LoginView` from where it could be passed to the custom authentication backend via a `validate` method.\r\n\r\nThe change is pretty small, from the following:\r\n\r\n    self.serializer = self.get_serializer(data=self.request.data)\r\n\r\nto\r\n\r\n    self.serializer = self.get_serializer(data=self.request.data, context={'request': request})\r\n\r\nI have already made the changes to the local version of the library I have. I can submit a PR with the change. Is there anywhere I can look for the contributing guidelines so that I don't miss anything?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/339", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/339/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/339/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/339", "id": 237126988, "node_id": "MDU6SXNzdWUyMzcxMjY5ODg=", "number": 339, "title": "User authentication with mobile browser doesn't work after upgrade", "user": {"login": "stefko18", "id": 24191063, "node_id": "MDQ6VXNlcjI0MTkxMDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/24191063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefko18", "html_url": "https://github.com/stefko18", "followers_url": "https://api.github.com/users/stefko18/followers", "following_url": "https://api.github.com/users/stefko18/following{/other_user}", "gists_url": "https://api.github.com/users/stefko18/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefko18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefko18/subscriptions", "organizations_url": "https://api.github.com/users/stefko18/orgs", "repos_url": "https://api.github.com/users/stefko18/repos", "events_url": "https://api.github.com/users/stefko18/events{/privacy}", "received_events_url": "https://api.github.com/users/stefko18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-20T08:13:05Z", "updated_at": "2017-08-14T04:34:09Z", "closed_at": "2017-08-14T04:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently upgraded my Django to 1.11.2, my rest-framework to 3.6.3 and the rest-auth to 0.6 it worked fine until I checked out the mobile version via Chrome. The logged in user is always Anonymous, i don't know why. Don't understand what happend. Before (on Django 1.8 and rest on 3.3 and auth on 0.5) it worked fine everywhere, the settings remained unchanged:\r\n\r\nREST_SESSION_LOGIN = False\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        #'rest_framework_expiring_authtoken.authentication.ExpiringTokenAuthentication',\r\n        'rest_framework.authentication.BasicAuthentication',\r\n        'rest_framework.authentication.SessionAuthentication',\r\n    ),\r\n    'DEFAULT_THROTTLE_CLASSES': (\r\n        'rest_framework.throttling.AnonRateThrottle',\r\n        'rest_framework.throttling.UserRateThrottle'\r\n    ),\r\n    'DEFAULT_THROTTLE_RATES': {\r\n        'anon': '100/day',\r\n        'user': '1000/day'\r\n    }\r\n}\r\nThis is in my installed apps:\r\n\r\nINSTALLED_APPS = (\r\n'django.contrib.admin',\r\n'django.contrib.auth',\r\n'django.contrib.contenttypes',\r\n'django.contrib.sessions',\r\n'django.contrib.messages',\r\n'django.contrib.staticfiles',\r\n'django.contrib.sites',\r\n'django.contrib.flatpages',\r\n\r\n'rest_framework',\r\n'rest_framework.authtoken',\r\n'rest_auth',\r\n'drf_braces',\r\n'sekizai',\r\n'allauth',\r\n'allauth.account',\r\n'allauth.socialaccount',\r\n'allauth.socialaccount.providers.facebook',\r\n'allauth.socialaccount.providers.google',\r\n'allauth.socialaccount.providers.linkedin_oauth2',\r\n'rest_auth.registration',\r\n'corsheaders'\r\n)\r\nWhat is really weird is that Django itself authenticates the user, just the ApiView doesn't, so I can not send information about the user to components in browser.\r\n\r\nAfter some two hours on this issue, it seems to be some mobile/browser/APIView  issue don't know what ... desktop users are authenticated by the APIView without problems. Issue persists on mobile Firefox.\r\n\r\nAny ideas why this happens? Thanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/333", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/333/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/333/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/333", "id": 232058795, "node_id": "MDU6SXNzdWUyMzIwNTg3OTU=", "number": 333, "title": "Support for Google Captcha code", "user": {"login": "icecoldfire", "id": 8460328, "node_id": "MDQ6VXNlcjg0NjAzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8460328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icecoldfire", "html_url": "https://github.com/icecoldfire", "followers_url": "https://api.github.com/users/icecoldfire/followers", "following_url": "https://api.github.com/users/icecoldfire/following{/other_user}", "gists_url": "https://api.github.com/users/icecoldfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/icecoldfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icecoldfire/subscriptions", "organizations_url": "https://api.github.com/users/icecoldfire/orgs", "repos_url": "https://api.github.com/users/icecoldfire/repos", "events_url": "https://api.github.com/users/icecoldfire/events{/privacy}", "received_events_url": "https://api.github.com/users/icecoldfire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-29T16:08:15Z", "updated_at": "2017-08-29T13:34:30Z", "closed_at": "2017-08-29T13:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is possible to add Google Recaptcha validation by adding these code in the RegisterSerializer class:\r\n\r\n    import requests\r\n    class RegisterSerializer(serializers.Serializer):\r\n         captcha_token = serializers.CharField(required=True, write_only=True)\r\n    \r\n        def validate_captcha_token(self, value):\r\n            try:\r\n                r = requests.post(\r\n                    'https://www.google.com/recaptcha/api/siteverify',\r\n                    {\r\n                        'secret': settings.RECAPTCHA_PRIVATE_KEY,\r\n                        'response': value\r\n                    },\r\n                    timeout=5\r\n                )\r\n                r.raise_for_status()\r\n            except requests.RequestException as e:\r\n                raise ValidationError(\r\n                    _('Connection to reCaptcha server failed')\r\n                )\r\n    \r\n            json_response = r.json()\r\n    \r\n            if bool(json_response['success']):\r\n                return value\r\n            else:\r\n                if 'error-codes' in json_response:\r\n                    if 'missing-input-secret' in json_response['error-codes'] or \\\r\n                                    'invalid-input-secret' in json_response['error-codes']:\r\n                        raise serializers.ValidationError(\r\n                            _('Connection to reCaptcha server failed')\r\n                        )\r\n                    else:\r\n                        raise serializers.ValidationError(\r\n                            _('reCaptcha invalid or expired, try again')\r\n                        )\r\n                else:\r\n                    raise serializers.ValidationError(\r\n                        _('reCaptcha response from Google not valid, try again')\r\n                    )\r\n\r\nThe code comes from [here](https://github.com/kbytesys/django-recaptcha2/blob/master/snowpenguin/django/recaptcha2/fields.py)\r\n\r\nIn settings.py add:\r\n\r\n    RECAPTCHA_PRIVATE_KEY = ''", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/332", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/332/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/332/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/332", "id": 229612190, "node_id": "MDU6SXNzdWUyMjk2MTIxOTA=", "number": 332, "title": "Logout view change permission_classes", "user": {"login": "shaklev", "id": 11219290, "node_id": "MDQ6VXNlcjExMjE5Mjkw", "avatar_url": "https://avatars3.githubusercontent.com/u/11219290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaklev", "html_url": "https://github.com/shaklev", "followers_url": "https://api.github.com/users/shaklev/followers", "following_url": "https://api.github.com/users/shaklev/following{/other_user}", "gists_url": "https://api.github.com/users/shaklev/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaklev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaklev/subscriptions", "organizations_url": "https://api.github.com/users/shaklev/orgs", "repos_url": "https://api.github.com/users/shaklev/repos", "events_url": "https://api.github.com/users/shaklev/events{/privacy}", "received_events_url": "https://api.github.com/users/shaklev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-18T09:43:49Z", "updated_at": "2018-04-16T00:07:26Z", "closed_at": "2018-04-16T00:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shouldn't the LogoutView have permission_classes set to `permission_classes = (IsAuthenticated,)` instead of `permission_classes = (AllowAny,)` , regardless of GET/POST method ?\r\n\r\n* in addition in the `logout` function:\r\n\r\n```\r\n def logout(self, request):\r\n    try:\r\n            request.user.auth_token.delete()\r\n      except (AttributeError, ObjectDoesNotExist):\r\n            pass\r\n```\r\nshould be changed to \r\n\r\n```\r\n   def logout(self, request):\r\n        try:\r\n            request.user.auth_token.delete()\r\n        except (AttributeError, ObjectDoesNotExist):\r\n            # handle NotAuthenticated\r\n````\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/326", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/326/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/326/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/326", "id": 224528574, "node_id": "MDU6SXNzdWUyMjQ1Mjg1NzQ=", "number": 326, "title": "When submitting email to reset password, 500 status because the password reset confirm URL is missing arguments?", "user": {"login": "sushifan", "id": 13437904, "node_id": "MDQ6VXNlcjEzNDM3OTA0", "avatar_url": "https://avatars3.githubusercontent.com/u/13437904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sushifan", "html_url": "https://github.com/sushifan", "followers_url": "https://api.github.com/users/sushifan/followers", "following_url": "https://api.github.com/users/sushifan/following{/other_user}", "gists_url": "https://api.github.com/users/sushifan/gists{/gist_id}", "starred_url": "https://api.github.com/users/sushifan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sushifan/subscriptions", "organizations_url": "https://api.github.com/users/sushifan/orgs", "repos_url": "https://api.github.com/users/sushifan/repos", "events_url": "https://api.github.com/users/sushifan/events{/privacy}", "received_events_url": "https://api.github.com/users/sushifan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-26T16:34:18Z", "updated_at": "2018-02-28T14:51:15Z", "closed_at": "2017-05-11T01:33:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like django-rest-auth, by default, simply uses native Django's contrib/admin/templates/registration/password_reset_email.html template when you submit your email to reset your password.\r\n\r\nIf you look at urlpatterns in django.contrib.auth.urls, the password_reset_confirm URL takes uidb64 and token params, which makes sense--when clicked on, this will identify the user resetting the password. However, django-rest-auth's rest_password_reset_confirm URL doesn't take any arguments: it just goes to password/reset/confirm/. How can it work? I get the following 500 error when submitting my email to reset my password, and I'm not surprised--the error makes sense:\r\n\r\nNoReverseMatch: Reverse for 'password_reset_confirm' with arguments '()' and keyword arguments '{u'uidb64': 'NA', u'token': u'4lj-65cd7b4219c9206126b4'}' not found.\r\n\r\nWhat I don't understand is it seems like such a basic thing that I must be doing something wrong--otherwise everyone using django-rest-auth would get this error because the arguments are clearly missing in the URL definition. Has anyone else experienced it and if so, did you update urlpatterns to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/325", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/325/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/325/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/325", "id": 218922300, "node_id": "MDU6SXNzdWUyMTg5MjIzMDA=", "number": 325, "title": "VKOAuth2Adapter doesn't work", "user": {"login": "MIRAMAXED", "id": 5852641, "node_id": "MDQ6VXNlcjU4NTI2NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5852641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MIRAMAXED", "html_url": "https://github.com/MIRAMAXED", "followers_url": "https://api.github.com/users/MIRAMAXED/followers", "following_url": "https://api.github.com/users/MIRAMAXED/following{/other_user}", "gists_url": "https://api.github.com/users/MIRAMAXED/gists{/gist_id}", "starred_url": "https://api.github.com/users/MIRAMAXED/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MIRAMAXED/subscriptions", "organizations_url": "https://api.github.com/users/MIRAMAXED/orgs", "repos_url": "https://api.github.com/users/MIRAMAXED/repos", "events_url": "https://api.github.com/users/MIRAMAXED/events{/privacy}", "received_events_url": "https://api.github.com/users/MIRAMAXED/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-03T12:48:18Z", "updated_at": "2017-10-14T06:58:09Z", "closed_at": "2017-06-22T14:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I passed the access_token using two different methods:\r\nhttps://vk.com/dev/implicit_flow_user\r\nhttps://vk.com/dev/authcode_flow_group\r\n\r\nFor the code I tried to pass both the code from:\r\nhttps://vk.com/dev/authcode_flow_group\r\n\r\nand when I realised that it doesn't work, I also tried to pass the app id as the code\r\n\r\nException Location:\t.../api/views.py in complete_login, line 42\r\n\r\n42. uid = kwargs['response']['user_id']\r\n\r\nException Type: TypeError at /api/vk/\r\nException Value: string indices must be integers\r\n\r\nCan You please let me know what is wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/320", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/320/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/320/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/320", "id": 213001510, "node_id": "MDU6SXNzdWUyMTMwMDE1MTA=", "number": 320, "title": "NoReverseMatch at /rest-auth/registration/account-confirm-email/OQ:1cltRJ:Suk-ByPIoc5fpzcVjTBcgm2dh88/", "user": {"login": "Tatenda", "id": 1932165, "node_id": "MDQ6VXNlcjE5MzIxNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1932165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tatenda", "html_url": "https://github.com/Tatenda", "followers_url": "https://api.github.com/users/Tatenda/followers", "following_url": "https://api.github.com/users/Tatenda/following{/other_user}", "gists_url": "https://api.github.com/users/Tatenda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tatenda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tatenda/subscriptions", "organizations_url": "https://api.github.com/users/Tatenda/orgs", "repos_url": "https://api.github.com/users/Tatenda/repos", "events_url": "https://api.github.com/users/Tatenda/events{/privacy}", "received_events_url": "https://api.github.com/users/Tatenda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-09T10:55:28Z", "updated_at": "2017-03-20T08:53:27Z", "closed_at": "2017-03-20T08:53:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to impliment rest-auth in my project which uses angular in front-end. I have managed to get the user to register, however the problem is that when I click the registration link from my email, I get this error\r\nNoReverseMatch at /rest-auth/registration/account-confirm-email/OQ:1cltRJ:Suk-ByPIoc5fpzcVjTBcgm2dh88/\r\n\r\nhere is the whole traceback\r\n\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://localhost:8000/rest-auth/registration/account-confirm-email/OQ:1cltRJ:Suk-ByPIoc5fpzcVjTBcgm2dh88/\r\n\r\nDjango Version: 1.10.6\r\nPython Version: 3.6.0\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.sites',\r\n 'corsheaders',\r\n 'marks_app',\r\n 'profiles_app',\r\n 'search_app',\r\n 'timeline_app',\r\n 'accounts_app',\r\n 'sectors_app',\r\n 'videos_app',\r\n 'university_app',\r\n 'rest_framework',\r\n 'rest_framework.authentication',\r\n 'rest_framework.authtoken',\r\n 'allauth',\r\n 'allauth.account',\r\n 'allauth.socialaccount',\r\n 'allauth.socialaccount.providers.facebook',\r\n 'allauth.socialaccount.providers.twitter',\r\n 'rest_auth.registration',\r\n 'rest_auth',\r\n 'debug_toolbar',\r\n 'rest_framework_swagger',\r\n 'api',\r\n 'djangular']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'corsheaders.middleware.CorsMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n 'debug_toolbar.middleware.DebugToolbarMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\nTemplate error:\r\nIn template C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\allauth\\templates\\account\\email_confirm.html, error at line 16\r\n   Reverse for 'account_email' with arguments '()' and keyword arguments '{}' not found. 0 pattern(s) tried: []   6 : {% block head_title %}{% trans \"Confirm E-mail Address\" %}{% endblock %}\r\n   7 : \r\n   8 : \r\n   9 : {% block content %}\r\n   10 : <h1>{% trans \"Confirm E-mail Address\" %}</h1>\r\n   11 : \r\n   12 : {% if confirmation %}\r\n   13 : \r\n   14 : {% user_display confirmation.email_address.user as user_display %}\r\n   15 : \r\n   16 : <p>{% blocktrans with confirmation.email_address.email as email %}Please confirm that <a href=\"mailto:{{ email }}\">{{ email }}</a> is an e-mail addres s for user {{ user_displa y }}.{% endblocktrans %}</p>\r\n   17 : \r\n   18 : <form method=\"post\" action=\"{% url 'account_confirm_email' confirmation.key %}\">\r\n   19 : {% csrf_token %}\r\n   20 :     <button type=\"submit\">{% trans 'Confirm' %}</button>\r\n   21 : </form>\r\n   22 : \r\n   23 : {% else %}\r\n   24 : \r\n   25 : {% url 'account_email' as email_url %}\r\n   26 : \r\n\r\n\r\nTraceback:\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\core\\handlers\\exception.py\" in inner\r\n  42.             response = get_response(request)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\core\\handlers\\base.py\" in _legacy_get_response\r\n  249.             response = self._get_response(request)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\core\\handlers\\base.py\" in _get_response\r\n  217.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\core\\handlers\\base.py\" in _get_response\r\n  215.                 response = response.render()\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\response.py\" in render\r\n  109.             self.content = self.rendered_content\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\response.py\" in rendered_content\r\n  86.         content = template.render(context, self._request)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\backends\\django.py\" in render\r\n  66.             return self.template.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  208.                     return self._render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\test\\utils.py\" in instrumented_test_render\r\n  94.     return self.nodelist.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  994.                 bit = node.render_annotated(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render_annotated\r\n  961.             return self.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\loader_tags.py\" in render\r\n  174.         return compiled_parent._render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\test\\utils.py\" in instrumented_test_render\r\n  94.     return self.nodelist.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  994.                 bit = node.render_annotated(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render_annotated\r\n  961.             return self.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\loader_tags.py\" in render\r\n  174.         return compiled_parent._render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\test\\utils.py\" in instrumented_test_render\r\n  94.     return self.nodelist.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  994.                 bit = node.render_annotated(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render_annotated\r\n  961.             return self.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\loader_tags.py\" in render\r\n  70.                 result = block.nodelist.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  994.                 bit = node.render_annotated(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render_annotated\r\n  961.             return self.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\defaulttags.py\" in render\r\n  315.                 return nodelist.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render\r\n  994.                 bit = node.render_annotated(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\base.py\" in render_annotated\r\n  961.             return self.render(context)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\template\\defaulttags.py\" in render\r\n  439.             url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\urls\\base.py\" in reverse\r\n  91.     return force_text(iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs)))\r\n\r\nFile \"C:\\Users\\Nibit\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\django\\urls\\resolvers.py\" in _reverse_with_prefix\r\n  392.             (lookup_view_s, args, kwargs, len(patterns), patterns)\r\n\r\nException Type: NoReverseMatch at /rest-auth/registration/account-confirm-email/OQ:1cltRJ:Suk-ByPIoc5fpzcVjTBcgm2dh88/\r\nException Value: Reverse for 'account_email' with arguments '()' and keyword arguments '{}' not found. 0 pattern(s) tried: []\r\n\r\nCan anyone help me please. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/319", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/319/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/319/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/319", "id": 212803063, "node_id": "MDU6SXNzdWUyMTI4MDMwNjM=", "number": 319, "title": "Common serializer for linkedin and twiter and so and so ", "user": {"login": "jthoth", "id": 15039162, "node_id": "MDQ6VXNlcjE1MDM5MTYy", "avatar_url": "https://avatars2.githubusercontent.com/u/15039162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jthoth", "html_url": "https://github.com/jthoth", "followers_url": "https://api.github.com/users/jthoth/followers", "following_url": "https://api.github.com/users/jthoth/following{/other_user}", "gists_url": "https://api.github.com/users/jthoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/jthoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jthoth/subscriptions", "organizations_url": "https://api.github.com/users/jthoth/orgs", "repos_url": "https://api.github.com/users/jthoth/repos", "events_url": "https://api.github.com/users/jthoth/events{/privacy}", "received_events_url": "https://api.github.com/users/jthoth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-08T17:32:53Z", "updated_at": "2017-03-08T17:46:44Z", "closed_at": "2017-03-08T17:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "from rest_auth.social_serializers \r\n\r\nOriginal Code of TwitterLoginSerializer\r\n\r\n        request.session['oauth_api.twitter.com_access_token'] = {\r\n            'oauth_token': access_token,\r\n            'oauth_token_secret': token_secret,\r\n        }\r\n\r\nProposel code Common LoginSerializer\r\n\r\nsession = \"oauth_api.%s.com_access_token\" % app.provider\r\nrequest.session[session] = {\r\n            'oauth_token': access_token,\r\n            'oauth_token_secret': token_secret,\r\n        }", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/318", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/318/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/318/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/318", "id": 211900823, "node_id": "MDU6SXNzdWUyMTE5MDA4MjM=", "number": 318, "title": "AttributeError when using custom UserDetailsSerializer", "user": {"login": "anarute", "id": 333447, "node_id": "MDQ6VXNlcjMzMzQ0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/333447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anarute", "html_url": "https://github.com/anarute", "followers_url": "https://api.github.com/users/anarute/followers", "following_url": "https://api.github.com/users/anarute/following{/other_user}", "gists_url": "https://api.github.com/users/anarute/gists{/gist_id}", "starred_url": "https://api.github.com/users/anarute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anarute/subscriptions", "organizations_url": "https://api.github.com/users/anarute/orgs", "repos_url": "https://api.github.com/users/anarute/repos", "events_url": "https://api.github.com/users/anarute/events{/privacy}", "received_events_url": "https://api.github.com/users/anarute/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-04T19:21:05Z", "updated_at": "2017-03-07T18:57:15Z", "closed_at": "2017-03-07T18:49:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have created a custom `UserDetailsSerializer` but when trying to run the application we get the error:\r\n\r\n`AttributeError: module 'path.to.serializers' has no attribute 'MPUserDetailsSerializer'`\r\n\r\nThe full error is [pasted here](http://pastebin.com/c6NFpmFF).\r\n\r\nThe setup for REST_AUTH_SERIALIZERS and USER_DETAILS_SERIALIZER in the django settings is:\r\n```\r\nREST_AUTH_SERIALIZERS = {\r\n    'LOGIN_SERIALIZER': 'questions.serializers.LoginSerializer',\r\n    'JWT_SERIALIZER' : 'questions.serializers.JWTSerializer',\r\n    'USER_DETAILS_SERIALIZER' : 'questions.serializers.MPUserDetailsSerializer',\r\n}\r\n```\r\n\r\nThe custom serializer is:\r\n\r\n```\r\nfrom rest_auth import serializers as auth_serializers\r\n\r\nclass MPUserDetailsSerializer(auth_serializers.UserDetailsSerializer):\r\n\"\"\"\r\nUser model w/o password\r\n\"\"\"\r\nclass Meta:\r\n    model = User\r\n    fields = ('pk', 'username', 'email', 'name')\r\n    read_only_fields = ('username', )\r\n\r\ndef validate_email(self, email):\r\n    email = get_adapter().clean_email(email)\r\n    if allauth_settings.UNIQUE_EMAIL:\r\n        if email and email_address_exists(email):\r\n            raise serializers.ValidationError(\r\n                _(\"A user is already registered with this e-mail address.\"))\r\n    return email\r\n```\r\n\r\nThe workaround that we did was to remove the following lines from our local virtualenv, in the file `/lib/python3.5/site-packages/rest-auth/serializers.py`:\r\n\r\n```\r\n# Required to allow using custom USER_DETAILS_SERIALIZER  in\r\n# JWTSerializer. Defining it here to avoid circular imports\r\nrest_auth_serializers = getattr(settings, 'REST_AUTH_SERIALIZERS', {})\r\nJWTUserDetailsSerializer = import_callable(\r\n  rest_auth_serializers.get('USER_DETAILS_SERIALIZER', UserDetailsSerializer)\r\n)\r\n```\r\n\r\nAnd replacing `JWTUserDetailsSerializer` with `UserDetailsSerializer` in the same file. But that's a really bad solution since we are changing third parties code and it doesn't make any sense to remove specifically the lines that are told to be required to allow custom `USER_DETAILS_SERIALIZER`, but we don't know what else to do to make it work, are we missing something? a config maybe?\r\n\r\nWe're using django v1.10.1, djangorestframework v3.4.7 and django-rest-auth v0.9.0\r\n\r\n(This issue was firstly created at [stackoverflow](http://stackoverflow.com/questions/41965340/attributeerror-when-using-custom-userdetailsserializer-in-django-rest-auth))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/317", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/317/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/317/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/317", "id": 211841053, "node_id": "MDU6SXNzdWUyMTE4NDEwNTM=", "number": 317, "title": "locale directory skipped with pip install ", "user": {"login": "1-bit", "id": 18352781, "node_id": "MDQ6VXNlcjE4MzUyNzgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18352781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1-bit", "html_url": "https://github.com/1-bit", "followers_url": "https://api.github.com/users/1-bit/followers", "following_url": "https://api.github.com/users/1-bit/following{/other_user}", "gists_url": "https://api.github.com/users/1-bit/gists{/gist_id}", "starred_url": "https://api.github.com/users/1-bit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1-bit/subscriptions", "organizations_url": "https://api.github.com/users/1-bit/orgs", "repos_url": "https://api.github.com/users/1-bit/repos", "events_url": "https://api.github.com/users/1-bit/events{/privacy}", "received_events_url": "https://api.github.com/users/1-bit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-04T01:01:03Z", "updated_at": "2017-10-03T20:30:07Z", "closed_at": "2017-10-03T20:30:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, all.\r\n\r\nLatest version of package is installed without translations directory (locale) using pip.\r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/309", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/309/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/309/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/309", "id": 205161376, "node_id": "MDU6SXNzdWUyMDUxNjEzNzY=", "number": 309, "title": "ImportError: cannot import name 'PasswordResetSerializer' (circular import)", "user": {"login": "simion", "id": 2630797, "node_id": "MDQ6VXNlcjI2MzA3OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2630797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simion", "html_url": "https://github.com/simion", "followers_url": "https://api.github.com/users/simion/followers", "following_url": "https://api.github.com/users/simion/following{/other_user}", "gists_url": "https://api.github.com/users/simion/gists{/gist_id}", "starred_url": "https://api.github.com/users/simion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simion/subscriptions", "organizations_url": "https://api.github.com/users/simion/orgs", "repos_url": "https://api.github.com/users/simion/repos", "events_url": "https://api.github.com/users/simion/events{/privacy}", "received_events_url": "https://api.github.com/users/simion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-02-03T13:47:53Z", "updated_at": "2017-03-07T18:49:27Z", "closed_at": "2017-03-07T18:49:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of this commit: https://github.com/Tivix/django-rest-auth/commit/dd6db3563f9205e4a42d171f25948cc110e13b8b I cannot import and extend any serializer. \r\n\r\nIn my project, i extend `PasswordResetSerializer` to override`get_email_options`. \r\nNow, a circular import is created because of that commit. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/304", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/304/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/304/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/304", "id": 201163713, "node_id": "MDU6SXNzdWUyMDExNjM3MTM=", "number": 304, "title": "Error to register through REST API", "user": {"login": "chika-kasymov", "id": 2662182, "node_id": "MDQ6VXNlcjI2NjIxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2662182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chika-kasymov", "html_url": "https://github.com/chika-kasymov", "followers_url": "https://api.github.com/users/chika-kasymov/followers", "following_url": "https://api.github.com/users/chika-kasymov/following{/other_user}", "gists_url": "https://api.github.com/users/chika-kasymov/gists{/gist_id}", "starred_url": "https://api.github.com/users/chika-kasymov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chika-kasymov/subscriptions", "organizations_url": "https://api.github.com/users/chika-kasymov/orgs", "repos_url": "https://api.github.com/users/chika-kasymov/repos", "events_url": "https://api.github.com/users/chika-kasymov/events{/privacy}", "received_events_url": "https://api.github.com/users/chika-kasymov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-17T02:56:15Z", "updated_at": "2017-01-17T03:27:05Z", "closed_at": "2017-01-17T03:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have error when making registration through POST request to `/api/v1/auth/registration/` which says `NoReverseMatch at /api/v1/auth/registration/. 'users' is not a registered namespace`.\r\n\r\nIn my **urls.py**:\r\n```\r\nurl(r'^api/v1/auth/', include('rest_auth.urls')),\r\nurl(r'^api/v1/auth/registration/', include('rest_auth.registration.urls')),\r\n```\r\n\r\nIn my settings:\r\n```\r\n# APP CONFIGURATION\r\n# ------------------------------------------------------------------------------\r\nDJANGO_APPS = (\r\n    # Default Django apps:\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.sites',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n\r\n    # Useful template tags:\r\n    # 'django.contrib.humanize',\r\n\r\n    # Admin\r\n    'django.contrib.admin',\r\n)\r\nTHIRD_PARTY_APPS = (\r\n    'crispy_forms',  # Form layouts\r\n    'allauth',  # registration\r\n    'allauth.account',  # registration\r\n    'allauth.socialaccount',  # registration\r\n    'allauth.socialaccount.providers.facebook',\r\n    'allauth.socialaccount.providers.linkedin_oauth2',\r\n    'rest_framework',\r\n    'rest_framework.authtoken',\r\n    'rest_auth',\r\n    'rest_auth.registration',\r\n)\r\n\r\n# Apps specific for this project go here.\r\nLOCAL_APPS = (\r\n    # custom users app\r\n    'myapp.users.apps.UsersConfig',\r\n    # Your stuff: custom apps go here\r\n)\r\n\r\n# See: https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps\r\nINSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/302", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/302/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/302/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/302", "id": 200804141, "node_id": "MDU6SXNzdWUyMDA4MDQxNDE=", "number": 302, "title": "JWT Support - Documentation Clarity", "user": {"login": "stantond", "id": 3207366, "node_id": "MDQ6VXNlcjMyMDczNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3207366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stantond", "html_url": "https://github.com/stantond", "followers_url": "https://api.github.com/users/stantond/followers", "following_url": "https://api.github.com/users/stantond/following{/other_user}", "gists_url": "https://api.github.com/users/stantond/gists{/gist_id}", "starred_url": "https://api.github.com/users/stantond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stantond/subscriptions", "organizations_url": "https://api.github.com/users/stantond/orgs", "repos_url": "https://api.github.com/users/stantond/repos", "events_url": "https://api.github.com/users/stantond/events{/privacy}", "received_events_url": "https://api.github.com/users/stantond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "verkaufer", "id": 680527, "node_id": "MDQ6VXNlcjY4MDUyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/680527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verkaufer", "html_url": "https://github.com/verkaufer", "followers_url": "https://api.github.com/users/verkaufer/followers", "following_url": "https://api.github.com/users/verkaufer/following{/other_user}", "gists_url": "https://api.github.com/users/verkaufer/gists{/gist_id}", "starred_url": "https://api.github.com/users/verkaufer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verkaufer/subscriptions", "organizations_url": "https://api.github.com/users/verkaufer/orgs", "repos_url": "https://api.github.com/users/verkaufer/repos", "events_url": "https://api.github.com/users/verkaufer/events{/privacy}", "received_events_url": "https://api.github.com/users/verkaufer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "verkaufer", "id": 680527, "node_id": "MDQ6VXNlcjY4MDUyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/680527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verkaufer", "html_url": "https://github.com/verkaufer", "followers_url": "https://api.github.com/users/verkaufer/followers", "following_url": "https://api.github.com/users/verkaufer/following{/other_user}", "gists_url": "https://api.github.com/users/verkaufer/gists{/gist_id}", "starred_url": "https://api.github.com/users/verkaufer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verkaufer/subscriptions", "organizations_url": "https://api.github.com/users/verkaufer/orgs", "repos_url": "https://api.github.com/users/verkaufer/repos", "events_url": "https://api.github.com/users/verkaufer/events{/privacy}", "received_events_url": "https://api.github.com/users/verkaufer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-01-14T13:39:39Z", "updated_at": "2017-10-11T15:09:05Z", "closed_at": "2017-10-11T15:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation states that `django-rest-framework-jwt` needs to be installed for JWT support. Does this mean `django-rest-auth` takes care of the settings, or does `django-rest-framework-jwt` also need to be set up as per the `django-rest-framework-jwt` documentation, and if so to what extent?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/301", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/301/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/301/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/301", "id": 200643119, "node_id": "MDU6SXNzdWUyMDA2NDMxMTk=", "number": 301, "title": "How to create new UserProfile automatically when a user is created?", "user": {"login": "Jakobovski", "id": 2724082, "node_id": "MDQ6VXNlcjI3MjQwODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2724082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jakobovski", "html_url": "https://github.com/Jakobovski", "followers_url": "https://api.github.com/users/Jakobovski/followers", "following_url": "https://api.github.com/users/Jakobovski/following{/other_user}", "gists_url": "https://api.github.com/users/Jakobovski/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jakobovski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jakobovski/subscriptions", "organizations_url": "https://api.github.com/users/Jakobovski/orgs", "repos_url": "https://api.github.com/users/Jakobovski/repos", "events_url": "https://api.github.com/users/Jakobovski/events{/privacy}", "received_events_url": "https://api.github.com/users/Jakobovski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-13T14:30:09Z", "updated_at": "2017-05-04T22:34:05Z", "closed_at": "2017-05-04T22:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am wondering how to create new UserProfile automatically when a new user is created?\r\n\r\nI tried adding a `create()` method to a custom user serializer class, (hinted at in FAQ) but the `create` method is not being called.\r\n\r\nI also tried using a custom `all-auth` signup form, but unfortunately the `signup()` method is not being called when a new user is created from django-rest-auth.\r\n\r\nSee: http://stackoverflow.com/questions/12303478/how-to-customize-user-profile-when-using-django-allauth\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/299", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/299/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/299/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/299", "id": 200338438, "node_id": "MDU6SXNzdWUyMDAzMzg0Mzg=", "number": 299, "title": "How to refresh JWT token?", "user": {"login": "chika-kasymov", "id": 2662182, "node_id": "MDQ6VXNlcjI2NjIxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2662182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chika-kasymov", "html_url": "https://github.com/chika-kasymov", "followers_url": "https://api.github.com/users/chika-kasymov/followers", "following_url": "https://api.github.com/users/chika-kasymov/following{/other_user}", "gists_url": "https://api.github.com/users/chika-kasymov/gists{/gist_id}", "starred_url": "https://api.github.com/users/chika-kasymov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chika-kasymov/subscriptions", "organizations_url": "https://api.github.com/users/chika-kasymov/orgs", "repos_url": "https://api.github.com/users/chika-kasymov/repos", "events_url": "https://api.github.com/users/chika-kasymov/events{/privacy}", "received_events_url": "https://api.github.com/users/chika-kasymov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-12T11:05:32Z", "updated_at": "2017-01-16T05:26:25Z", "closed_at": "2017-01-16T05:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I know it is good practice to set JWT live time short. For example, 15 minutes. Is it possible to control this functionality using your library or I should use `djangorestframework-jwt'?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/298", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/298/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/298/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/298", "id": 199276545, "node_id": "MDU6SXNzdWUxOTkyNzY1NDU=", "number": 298, "title": "400 error when logging in when using email only mode.", "user": {"login": "genomics-geek", "id": 18250655, "node_id": "MDQ6VXNlcjE4MjUwNjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/18250655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genomics-geek", "html_url": "https://github.com/genomics-geek", "followers_url": "https://api.github.com/users/genomics-geek/followers", "following_url": "https://api.github.com/users/genomics-geek/following{/other_user}", "gists_url": "https://api.github.com/users/genomics-geek/gists{/gist_id}", "starred_url": "https://api.github.com/users/genomics-geek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genomics-geek/subscriptions", "organizations_url": "https://api.github.com/users/genomics-geek/orgs", "repos_url": "https://api.github.com/users/genomics-geek/repos", "events_url": "https://api.github.com/users/genomics-geek/events{/privacy}", "received_events_url": "https://api.github.com/users/genomics-geek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-06T20:05:58Z", "updated_at": "2020-07-07T20:22:38Z", "closed_at": "2017-01-09T00:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to set up authentication using django-rest-auth and django-allauth. The user exists in the database and I can login to the django admin site. When I try to login using the rest-auth/login/ endpoint posting email/password, I receive a 400 error with the following response:\r\n\r\n```\r\n{\r\n    \"non_field_errors\": [\r\n        \"Unable to log in with provided credentials.\"\r\n    ]\r\n}\r\n```\r\n\r\nI followed the instructions here: http://django-allauth.readthedocs.io/en/latest/configuration.html#configuration\r\n\r\nIn my settings file I have the following:\r\n\r\n```\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_UNIQUE_EMAIL = True\r\nACCOUNT_AUTHENTICATION_METHOD = 'email' \r\n```\r\n\r\nIf I comment out the three lines above and use the same endpoint but add the username it works. It seems to only not work with email only mode.\r\n\r\nThanks for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/297", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/297/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/297/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/297", "id": 198220321, "node_id": "MDU6SXNzdWUxOTgyMjAzMjE=", "number": 297, "title": "password reset field error", "user": {"login": "mohammad-ghanbari", "id": 12512593, "node_id": "MDQ6VXNlcjEyNTEyNTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/12512593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohammad-ghanbari", "html_url": "https://github.com/mohammad-ghanbari", "followers_url": "https://api.github.com/users/mohammad-ghanbari/followers", "following_url": "https://api.github.com/users/mohammad-ghanbari/following{/other_user}", "gists_url": "https://api.github.com/users/mohammad-ghanbari/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohammad-ghanbari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohammad-ghanbari/subscriptions", "organizations_url": "https://api.github.com/users/mohammad-ghanbari/orgs", "repos_url": "https://api.github.com/users/mohammad-ghanbari/repos", "events_url": "https://api.github.com/users/mohammad-ghanbari/events{/privacy}", "received_events_url": "https://api.github.com/users/mohammad-ghanbari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-31T06:15:25Z", "updated_at": "2018-04-18T14:32:05Z", "closed_at": "2018-04-16T00:13:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I send a password reset request to the backend, I get the following error:\r\n\r\nFieldError at /rest-auth/password/reset/\r\nCannot resolve keyword 'is_active' into field. Choices are: auth_token, created_at, email, emailaddress, first_name, id, is_admin, last_login, last_name, logentry, password, purchaseorder, salesorder, tagline, updated_at, username\r\n\r\nany hint how to resolve this issue is highly appreciated.\r\n\r\nThanks,\r\nMohamad", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/296", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/296/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/296/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/296", "id": 197829908, "node_id": "MDU6SXNzdWUxOTc4Mjk5MDg=", "number": 296, "title": "Don't understand how social login is supposed to work", "user": {"login": "velis74", "id": 5511919, "node_id": "MDQ6VXNlcjU1MTE5MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5511919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velis74", "html_url": "https://github.com/velis74", "followers_url": "https://api.github.com/users/velis74/followers", "following_url": "https://api.github.com/users/velis74/following{/other_user}", "gists_url": "https://api.github.com/users/velis74/gists{/gist_id}", "starred_url": "https://api.github.com/users/velis74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velis74/subscriptions", "organizations_url": "https://api.github.com/users/velis74/orgs", "repos_url": "https://api.github.com/users/velis74/repos", "events_url": "https://api.github.com/users/velis74/events{/privacy}", "received_events_url": "https://api.github.com/users/velis74/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-28T10:20:21Z", "updated_at": "2018-03-27T18:08:15Z", "closed_at": "2018-03-27T18:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The views require token & secret fields. However, to my understanding, those are obtained by actually triggering the respective service's social login procedure and are returned via a callback page.\r\n\r\nHowever, how can I provide a callback URL on a client device in order to obtain the token & secret values?\r\n\r\nI'm sure I'm missing something here.\r\nWhat I expected:\r\nCall rest-auth/facebook API which triggers the appropriate social login action on the server. To the client an URL is returned (if necessary) telling the client what URL to render in order to successfully login.\r\nClient renders the URL which already contains the allauth callback URL to the server. When that URL is called, user is logged in and rest-auth/facebook now returns a valid session id or token.\r\n\r\nSo what is rest-auth's expected method of obtaining the token & secret values?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/295", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/295/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/295/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/295", "id": 197756135, "node_id": "MDU6SXNzdWUxOTc3NTYxMzU=", "number": 295, "title": "Login with username or password", "user": {"login": "alphiii", "id": 13146946, "node_id": "MDQ6VXNlcjEzMTQ2OTQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/13146946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alphiii", "html_url": "https://github.com/alphiii", "followers_url": "https://api.github.com/users/alphiii/followers", "following_url": "https://api.github.com/users/alphiii/following{/other_user}", "gists_url": "https://api.github.com/users/alphiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/alphiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alphiii/subscriptions", "organizations_url": "https://api.github.com/users/alphiii/orgs", "repos_url": "https://api.github.com/users/alphiii/repos", "events_url": "https://api.github.com/users/alphiii/events{/privacy}", "received_events_url": "https://api.github.com/users/alphiii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-27T20:50:37Z", "updated_at": "2016-12-27T21:47:25Z", "closed_at": "2016-12-27T21:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder if there is any easy way to set login with either username or password. When I read the doc it does specify this. But allauth does have that feature. It is activated by putting ACCOUNT_AUTHENTICATION_METHOD = \"username_email\" in settings file. But clearly this does not apply for the django-rest-auth.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/287", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/287/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/287/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/287", "id": 192494459, "node_id": "MDU6SXNzdWUxOTI0OTQ0NTk=", "number": 287, "title": "perform extra actions after user signin", "user": {"login": "veris-neerajdhiman", "id": 15321333, "node_id": "MDQ6VXNlcjE1MzIxMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/15321333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veris-neerajdhiman", "html_url": "https://github.com/veris-neerajdhiman", "followers_url": "https://api.github.com/users/veris-neerajdhiman/followers", "following_url": "https://api.github.com/users/veris-neerajdhiman/following{/other_user}", "gists_url": "https://api.github.com/users/veris-neerajdhiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/veris-neerajdhiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veris-neerajdhiman/subscriptions", "organizations_url": "https://api.github.com/users/veris-neerajdhiman/orgs", "repos_url": "https://api.github.com/users/veris-neerajdhiman/repos", "events_url": "https://api.github.com/users/veris-neerajdhiman/events{/privacy}", "received_events_url": "https://api.github.com/users/veris-neerajdhiman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-30T07:29:20Z", "updated_at": "2016-12-12T06:13:46Z", "closed_at": "2016-12-12T06:13:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am implementing `Google` provider. Everything is working fine. But I need to perform extra tasks as soon as a user social account is created or after user signs in. \r\n\r\nIn `all-auth` you have `DefaultSocialAccountAdapter` where you can apply a hook. \r\n\r\nDo `rest-auth` provide any such kind of hook ? I didn't found any your docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/282", "repository_url": "https://api.github.com/repos/Tivix/django-rest-auth", "labels_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/282/comments", "events_url": "https://api.github.com/repos/Tivix/django-rest-auth/issues/282/events", "html_url": "https://github.com/Tivix/django-rest-auth/issues/282", "id": 191627991, "node_id": "MDU6SXNzdWUxOTE2Mjc5OTE=", "number": 282, "title": "Using django-rest-framework-json-api with Rest Auth", "user": {"login": "jranand", "id": 2572347, "node_id": "MDQ6VXNlcjI1NzIzNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2572347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jranand", "html_url": "https://github.com/jranand", "followers_url": "https://api.github.com/users/jranand/followers", "following_url": "https://api.github.com/users/jranand/following{/other_user}", "gists_url": "https://api.github.com/users/jranand/gists{/gist_id}", "starred_url": "https://api.github.com/users/jranand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jranand/subscriptions", "organizations_url": "https://api.github.com/users/jranand/orgs", "repos_url": "https://api.github.com/users/jranand/repos", "events_url": "https://api.github.com/users/jranand/events{/privacy}", "received_events_url": "https://api.github.com/users/jranand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-25T05:34:21Z", "updated_at": "2016-11-29T07:44:26Z", "closed_at": "2016-11-29T07:44:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Presently I am working on a app which uses  Emberjs/Django-Rest-Framework. \r\nI need Django Rest Auth for Authentication and User Registration. But Ember Model only supports  JSON API spec. Kindly let me know how can I use it or extend the api view set.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}