{"total_count": 23, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sumerc/yappi/issues/56", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/56/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/56/events", "html_url": "https://github.com/sumerc/yappi/issues/56", "id": 605152639, "node_id": "MDU6SXNzdWU2MDUxNTI2Mzk=", "number": 56, "title": "The new tag and ctx_id parameters of get_func_stats() are ignored", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-23T00:17:19Z", "updated_at": "2020-04-27T19:39:07Z", "closed_at": "2020-04-27T11:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest release of yappi has begun to phase out `get_func_stats(filter={})` in favor of `tag`, `ctx_id` and `filter_callback`. However, I ended up noticing while using `tag` to profile coroutines, it seems that `tag` and `ctx_id` are currently being ignored.\r\n\r\nhttps://github.com/sumerc/yappi/blob/b0e424fb269ffa9fe91690343a09f65016f42ab1/yappi/yappi.py#L1094-L1104\r\n\r\n(Notice how both variables aren't passed or stored anywhere)\r\n\r\nIt can currently be worked around by writing this:\r\n\r\n```py\r\nyappi.get_func_stats(\r\n\tfilter=dict(tag=ctx_tag),\r\n\t#...\r\n)\r\n```\r\nrather than this\r\n```py\r\nyappi.get_func_stats(tag=ctx_tag)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/49", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/49/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/49/events", "html_url": "https://github.com/sumerc/yappi/issues/49", "id": 598293705, "node_id": "MDU6SXNzdWU1OTgyOTM3MDU=", "number": 49, "title": "Deprecation warning due to invalid escape sequences in Python 3.7", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-11T15:46:09Z", "updated_at": "2020-04-11T23:26:35Z", "closed_at": "2020-04-11T23:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals.\r\n\r\n```\r\nfind . -iname '*.py' | grep -v example | xargs -P 4 -I{} python3.8 -Wall -m py_compile {} ./tests/test_functionality.py:299: DeprecationWarning: invalid escape sequence \\s\r\n  b'name\\s+id\\s+tid\\s+ttot\\s+scnt\\s*\\n', out\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/46", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/46/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/46/events", "html_url": "https://github.com/sumerc/yappi/issues/46", "id": 587527574, "node_id": "MDU6SXNzdWU1ODc1Mjc1NzQ=", "number": 46, "title": "YThreadStat should provide os_tid", "user": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-25T08:31:23Z", "updated_at": "2020-04-08T11:47:59Z", "closed_at": "2020-04-08T11:47:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently YThreadStat does not provide OS thread id. We only provide `ctx_id` which is specific to yappi. It would be nice to have this information as users might be able to more introspection with this information from the `Thread` object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/43", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/43/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/43/events", "html_url": "https://github.com/sumerc/yappi/issues/43", "id": 547601634, "node_id": "MDU6SXNzdWU1NDc2MDE2MzQ=", "number": 43, "title": "Documentation: Clarify filter function behaviors", "user": {"login": "vEpiphyte", "id": 26100278, "node_id": "MDQ6VXNlcjI2MTAwMjc4", "avatar_url": "https://avatars2.githubusercontent.com/u/26100278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vEpiphyte", "html_url": "https://github.com/vEpiphyte", "followers_url": "https://api.github.com/users/vEpiphyte/followers", "following_url": "https://api.github.com/users/vEpiphyte/following{/other_user}", "gists_url": "https://api.github.com/users/vEpiphyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/vEpiphyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vEpiphyte/subscriptions", "organizations_url": "https://api.github.com/users/vEpiphyte/orgs", "repos_url": "https://api.github.com/users/vEpiphyte/repos", "events_url": "https://api.github.com/users/vEpiphyte/events{/privacy}", "received_events_url": "https://api.github.com/users/vEpiphyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-09T16:55:27Z", "updated_at": "2020-04-08T11:49:14Z", "closed_at": "2020-04-08T11:49:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Filters appear to behave as negative filters, removing data from the output.  Is this correct/intended?\r\n\r\nThis is a test harness I was using to determine filter behavior (called `genr.py`):\r\n\r\n```\r\nimport time\r\nimport random\r\nimport asyncio\r\n\r\nimport yappi\r\n\r\nbasename = 'genr'\r\ndebug = ''\r\nif __debug__:\r\n    debug = '_debug'\r\nstatsname = f'./{basename}{debug}.pstats'\r\n\r\nN = 4\r\nSLEEP = 0.5\r\n\r\ntimes = [random.random() for i in range(N)]\r\n\r\nasync def genr():\r\n    for t in times:\r\n        await asyncio.sleep(t)\r\n        yield t\r\n\r\nasync def sleeploop(i):\r\n    time.sleep(i)\r\n    # await asyncio.sleep(i)\r\n\r\nasync def run():\r\n    values = []\r\n\r\n    async for t in genr():\r\n        values.append(t)\r\n\r\n    await sleeploop(SLEEP)\r\n\r\n    return values\r\n\r\nasync def main():\r\n    print('start')\r\n\r\n    yappi.set_clock_type('wall')\r\n    tick = time.time()\r\n    yappi.clear_stats()\r\n    yappi.start(builtins=False)\r\n\r\n    values = await run()\r\n\r\n    yappi.stop()\r\n    tock = time.time()\r\n    filter = {}\r\n    ##########################\r\n    # DEFINE FILTER HERE \r\n    # filter['module'] = 'genr.py'\r\n    ##########################\r\n    stats = yappi.get_func_stats(filter=filter)  # type: yappi.YFuncStats\r\n    for stat in stats:\r\n        print(\"%s %s %0.6f\" % (stat.name, stat.module, stat.ttot))\r\n    # stats.print_all()\r\n    # stas.print_all()\r\n    # obj = yappi.convert2pstats(stats)  # type: profile.Stats\r\n    # obj.dump_stats(statsname)\r\n\r\n    print(f'took: {tock - tick}')\r\n\r\n    assert values == times\r\n    print(times)\r\n    print(f'Total random time: {sum(times)}')\r\n    print(f'Total run time: {sum(times) + SLEEP}')\r\n    print('fin')\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\n\r\nIf this is intended behavior, would you accept a PR updating the filter docs to mention this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/41", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/41/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/41/events", "html_url": "https://github.com/sumerc/yappi/issues/41", "id": 546940907, "node_id": "MDU6SXNzdWU1NDY5NDA5MDc=", "number": 41, "title": "Feature request: Filter stats by function descriptor", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2020-01-08T15:41:39Z", "updated_at": "2020-04-13T10:29:07Z", "closed_at": "2020-04-08T17:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "As part of an application profiler plugin project for the ASGI protocol, where users can just pass a list of functions to profile, I was using a simple `yappi.get_func_stats({\"name\": somefunction.__qualname__, \"tag\": ctx_tag})` filter, thinking it would be enough to unambigously select those functions. I later found out that `__qualname__` is only unambiguous within the scope of a module, so I should in all likelyhood specify `somefunction.__module__` as part of the filter as well, but that got me to look at the code yappi uses to identify the functions being called:\r\n\r\nhttps://github.com/sumerc/yappi/blob/6c97f55ae69a0979bdea8e557510a5d349da340c/yappi/_yappi.c#L546-L567\r\n\r\nIt uses `ml_name` as the function name, [which apparently corresponds to `__name__`, not `__qualname__`](https://github.com/python/cpython/blob/4dedd0f0ddc5a983a57bf0105eb34f948a91d2c4/Objects/methodobject.c#L152-L156) like I initially figured yappi would use, and has a few edge-cases for both function and module name that could make it difficult/unreliable to build the correct filter automatically.\r\n\r\nShouldn't yappi have some kind of `filter_from_function_descriptor` function to generate a detailled filter from a function descriptor automatically, instead of leaving users guessing as to whether they're accidentally profiling other functions with the same name as the one they want?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/40", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/40/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/40/events", "html_url": "https://github.com/sumerc/yappi/issues/40", "id": 546928911, "node_id": "MDU6SXNzdWU1NDY5Mjg5MTE=", "number": 40, "title": "Documentation: Reproducing asyncio tests", "user": {"login": "vEpiphyte", "id": 26100278, "node_id": "MDQ6VXNlcjI2MTAwMjc4", "avatar_url": "https://avatars2.githubusercontent.com/u/26100278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vEpiphyte", "html_url": "https://github.com/vEpiphyte", "followers_url": "https://api.github.com/users/vEpiphyte/followers", "following_url": "https://api.github.com/users/vEpiphyte/following{/other_user}", "gists_url": "https://api.github.com/users/vEpiphyte/gists{/gist_id}", "starred_url": "https://api.github.com/users/vEpiphyte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vEpiphyte/subscriptions", "organizations_url": "https://api.github.com/users/vEpiphyte/orgs", "repos_url": "https://api.github.com/users/vEpiphyte/repos", "events_url": "https://api.github.com/users/vEpiphyte/events{/privacy}", "received_events_url": "https://api.github.com/users/vEpiphyte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-08T15:21:34Z", "updated_at": "2020-04-08T11:47:14Z", "closed_at": "2020-04-08T11:47:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the docs aren't in git, I can't make a PR to update them.\r\n1. I'd suggest updating the asyncio documentation to include a work example that can be copied and pasted:\r\n\r\n```\r\n$ cat profile_asyncio.py \r\nimport time\r\nimport asyncio\r\n\r\n\r\ndef burn_cpu(secs):\r\n    t0 = time.process_time()\r\n    elapsed = 0\r\n    while (elapsed <= secs):\r\n        for _ in range(1000):\r\n            pass\r\n        elapsed = time.process_time() - t0\r\n\r\nasync def burn_async_io(secs):\r\n    await asyncio.sleep(secs)\r\n\r\n\r\ndef burn_io(secs):\r\n    time.sleep(secs)\r\n\r\n\r\nasync def foo():\r\n    burn_cpu(1.0)\r\n    await burn_async_io(1.0)\r\n    burn_io(1.0)\r\n    await burn_async_io(1.0)\r\n\r\n\r\nasyncio.run(foo())\r\n\r\n```\r\n\r\n2. Include an example of executing yappi against that code.  I was a bit confused at first because just running that code produced different numbers due to cpu time vs. wall time.\r\n\r\n```\r\n# Confusing numbers\r\n$ python -m yappi profile_asyncio.py | grep profile_asyncio\r\nprofile_asyncio.py:1 <module>         1      0.000047  1.083084  1.083084\r\nprofile_asyncio.py:21 foo             1      0.000097  1.000622  1.000622\r\nprofile_asyncio.py:5 burn_cpu         1      0.936388  1.000017  1.000017\r\nprofile_asyncio.py:13 burn_async_io   2      0.000053  0.000433  0.000216\r\nprofile_asyncio.py:17 burn_io         1      0.000020  0.000075  0.000075\r\n\r\n# Consistent numbers with the documentation\r\n$ python -m yappi -c wall profile_asyncio.py | grep profile_asyncio\r\nprofile_asyncio.py:1 <module>         1      0.000044  4.057246  4.057246\r\nprofile_asyncio.py:21 foo             1      0.000095  4.006760  4.006760\r\nprofile_asyncio.py:13 burn_async_io   2      0.000038  2.003446  1.001723\r\nprofile_asyncio.py:5 burn_cpu         1      0.955977  1.002077  1.002077\r\nprofile_asyncio.py:17 burn_io         1      0.000017  1.001142  1.001142\r\n\r\n\r\n```\r\n\r\n\r\nedit:\r\nEnvironment: Ubuntu 18.04, python 3.7.3, yappi 1.2.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/38", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/38/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/38/events", "html_url": "https://github.com/sumerc/yappi/issues/38", "id": 545920949, "node_id": "MDU6SXNzdWU1NDU5MjA5NDk=", "number": 38, "title": "Context ID callback does not check if returned integer is a valid long", "user": {"login": "sm-Fifteen", "id": 516999, "node_id": "MDQ6VXNlcjUxNjk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/516999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sm-Fifteen", "html_url": "https://github.com/sm-Fifteen", "followers_url": "https://api.github.com/users/sm-Fifteen/followers", "following_url": "https://api.github.com/users/sm-Fifteen/following{/other_user}", "gists_url": "https://api.github.com/users/sm-Fifteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sm-Fifteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sm-Fifteen/subscriptions", "organizations_url": "https://api.github.com/users/sm-Fifteen/orgs", "repos_url": "https://api.github.com/users/sm-Fifteen/repos", "events_url": "https://api.github.com/users/sm-Fifteen/events{/privacy}", "received_events_url": "https://api.github.com/users/sm-Fifteen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T20:21:02Z", "updated_at": "2020-01-08T13:20:46Z", "closed_at": "2020-01-08T13:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the callback passed to `set_context_id_callback` returns a number that is too large for a C `long`, yappi will throw an error along the lines of\r\n\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  ...\r\n  File \"./test_bench.py\", line 37, in dispatch\r\n    tracked_stats[name] = yappi.get_func_stats({\"name\": call_to_track, \"ctx_id\": ctx_id})\r\n  File \"C:\\Users\\royrenn\\Documents\\prog\\fastapi-test\\.pyenv\\lib\\site-packages\\yappi.py\", line 1001, in get_func_stats\r\n    stats = YFuncStats().get(filter=filter)\r\n  File \"C:\\Users\\royrenn\\Documents\\prog\\fastapi-test\\.pyenv\\lib\\site-packages\\yappi.py\", line 660, in get\r\n    _yappi.enum_func_stats(self._enumerator, filter)\r\nSystemError: <built-in function enum_func_stats> returned a result with an error set\r\n```\r\n\r\nwith the following error sometimes(?) being logged:\r\n\r\n```\r\n[*]     [yappi-err]     context id callback returned non-integer\r\n```\r\n\r\nHaving looked into it, this seems to be related to the use of `PyLong_AsLong` here:\r\n\r\nhttps://github.com/sumerc/yappi/blob/7b3f08f5ad9d56e806ef2ddd9bf81a17f25f0fff/yappi/_yappi.c#L363-L376\r\n\r\nI ended up running into this issue when running code similar to [this](https://github.com/tiangolo/fastapi/issues/701#issuecomment-552602490) on Windows. As it happens, `id(my_object)` is a 64 bits unsigned integer on 64-bits CPython, but a `long` on Windows is only 32 bits; only `long long`s are 64 bits. This could turn out to be an issue in other use cases, so something should probably be done to adress the potential mismatch between the range of Python `int`s and C types.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/37", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/37/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/37/events", "html_url": "https://github.com/sumerc/yappi/issues/37", "id": 545460780, "node_id": "MDU6SXNzdWU1NDU0NjA3ODA=", "number": 37, "title": "Need Event loop and more thread info", "user": {"login": "t3chboy", "id": 3822294, "node_id": "MDQ6VXNlcjM4MjIyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3822294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t3chboy", "html_url": "https://github.com/t3chboy", "followers_url": "https://api.github.com/users/t3chboy/followers", "following_url": "https://api.github.com/users/t3chboy/following{/other_user}", "gists_url": "https://api.github.com/users/t3chboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/t3chboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t3chboy/subscriptions", "organizations_url": "https://api.github.com/users/t3chboy/orgs", "repos_url": "https://api.github.com/users/t3chboy/repos", "events_url": "https://api.github.com/users/t3chboy/events{/privacy}", "received_events_url": "https://api.github.com/users/t3chboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-05T20:08:39Z", "updated_at": "2020-03-01T18:58:24Z", "closed_at": "2020-03-01T18:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThis project is really awesome and useful for people looking for thread related information.\r\n\r\n1. I was doing some PoC for a aiohttp project, here i found some unclear data in thread stats as follows:\r\n\r\n2. I have created 2 aiohttp session :\r\n   1. First() : It makes http request with response delayed by 2sec and threadstat shows it was scheduled twice.\r\n   2. Second() : It makes 2 http request with delayed response delayed by 2 and 4sec and threadstat shows it was also scheduled twice.\r\n_Here this stats sounds fishy as why second() thread got scheduled only twice, it should be more than 2._\r\n\r\n3. Also from stats i m not able to get which thread is assigned to particluar function,it would be great if we can link somehow which thread belongs to which async code block, so it would help to find and improvise long running thread's code/function. \r\n\r\n4. Most important it would be **big advantage to have event loop stats** also, as it will solve many problems faced in frameworks like aiohttp, where you would definitely like to know which threads are taking long time on eventloop.\r\n\r\nPoc code : \r\n```Python\r\nimport aiohttp\r\nimport asyncio\r\nimport time\r\nimport yappi\r\n\r\nasync def first():\r\n    url = \"http://www.mocky.io/v2/5e11f1513100005a37593fa8?mocky-delay=2000ms\"\r\n    async with aiohttp.ClientSession().get(url) as resp:\r\n        print(resp.status)\r\n        print(await resp.text())\r\n\r\nasync def second():\r\n    url = \"http://www.mocky.io/v2/5e11f339310000c956593fa9?mocky-delay=4000ms\"\r\n    session = aiohttp.ClientSession()\r\n    async with session.get(url) as resp:\r\n        print(resp.status)\r\n        print(await resp.text())\r\n\r\n    url = \"http://www.mocky.io/v2/5e11f1513100005a37593fa8?mocky-delay=2000ms\"\r\n    async with session.get(url) as resp:\r\n        print(resp.status)\r\n        print(await resp.text())\r\n\r\nasync def third():\r\n    for a in range(1000):\r\n        print(a)\r\n\r\ndef newf():\r\n    print(\"in newf\")\r\n\r\nasync def fire():\r\n    s = time.time()\r\n    await third()\r\n    newf()\r\n    await second()\r\n    await first()\r\n    print(time.time() - s)\r\n\r\nyappi.start()\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(fire())\r\nyappi.stop()\r\nyappi.get_thread_stats().print_all()\r\n```\r\n\r\nThreadStat : \r\n```\r\nname           id     tid              ttot      scnt        \r\nThread         1      139813237880576  0.186779  2         \r\nThread         2      139813220611840  0.186705  2         \r\n_MainThread    0      139813331167040  0.041664  5  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/35", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/35/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/35/events", "html_url": "https://github.com/sumerc/yappi/issues/35", "id": 542657718, "node_id": "MDU6SXNzdWU1NDI2NTc3MTg=", "number": 35, "title": "Feature request: Filter stats by package", "user": {"login": "MatthewWilkes", "id": 98908, "node_id": "MDQ6VXNlcjk4OTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/98908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewWilkes", "html_url": "https://github.com/MatthewWilkes", "followers_url": "https://api.github.com/users/MatthewWilkes/followers", "following_url": "https://api.github.com/users/MatthewWilkes/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewWilkes/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewWilkes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewWilkes/subscriptions", "organizations_url": "https://api.github.com/users/MatthewWilkes/orgs", "repos_url": "https://api.github.com/users/MatthewWilkes/repos", "events_url": "https://api.github.com/users/MatthewWilkes/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewWilkes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-26T20:00:23Z", "updated_at": "2020-04-08T11:54:54Z", "closed_at": "2020-04-08T11:51:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIt would be lovely to filter stats by package. Because you're using `PyObject_RichCompareBool` as part of the filter it's already possible to achieve this with a helper object. Would you be interested in integrating this as a feature with a stable API?\r\n\r\nMy current implementation is:\r\n\r\n    import dataclasses\r\n    import importlib\r\n    import os\r\n\r\n    @dataclasses.dataclass\r\n    class PackageModule:\r\n        package: str\r\n        \r\n        def __post_init__(self):\r\n            mod = importlib.import_module(self.package)\r\n            self.fn = mod.__file__\r\n            if self.fn.endswith(\"__init__.py\"):\r\n                self.fn = os.path.dirname(self.fn)\r\n        \r\n        def __eq__(self, other):\r\n            return other.startswith(self.fn)\r\n            \r\n\r\n    yappi.get_func_stats(filter={\"modname\": PackageModule(\"apd.aggregation\")}).print_all()\r\n\r\nThere are caveats to this, mainly that it requires the module to be importable, and not undesirable to import (such as potential import-time side-effects), but I think it improves the usability a fair bit.\r\n\r\nWhat do you think? If you're interested I'm happy to put together a PR.\r\n\r\nMatt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/34", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/34/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/34/events", "html_url": "https://github.com/sumerc/yappi/issues/34", "id": 542652006, "node_id": "MDU6SXNzdWU1NDI2NTIwMDY=", "number": 34, "title": "Filtering by module name is mis-documented", "user": {"login": "MatthewWilkes", "id": 98908, "node_id": "MDQ6VXNlcjk4OTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/98908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewWilkes", "html_url": "https://github.com/MatthewWilkes", "followers_url": "https://api.github.com/users/MatthewWilkes/followers", "following_url": "https://api.github.com/users/MatthewWilkes/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewWilkes/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewWilkes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewWilkes/subscriptions", "organizations_url": "https://api.github.com/users/MatthewWilkes/orgs", "repos_url": "https://api.github.com/users/MatthewWilkes/repos", "events_url": "https://api.github.com/users/MatthewWilkes/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewWilkes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1740062561, "node_id": "MDU6TGFiZWwxNzQwMDYyNTYx", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.3", "name": "1.3", "color": "20bfa2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-26T19:32:22Z", "updated_at": "2019-12-31T16:29:46Z", "closed_at": "2019-12-31T16:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation says that to filter function call stats by module name to use `{\"module\": \"...\"}`\r\n\r\nhttps://github.com/sumerc/yappi/blob/f638a12d074fef6190ad9be808e0f223386d0a6e/doc/api.md#L90-L94\r\n\r\nHowever, the C code has the following:\r\n\r\nhttps://github.com/sumerc/yappi/blob/f638a12d074fef6190ad9be808e0f223386d0a6e/yappi/_yappi.c#L1594-L1618\r\n\r\nThis can be demonstrated by working with the actual code:\r\n\r\n    (Pdb) all_results = yappi.get_func_stats()\r\n    (Pdb) len(all_results)\r\n    2558\r\n    (Pdb) len(yappi.get_func_stats(filter={\"module\": all_results[0].module}))\r\n    2558\r\n    (Pdb) len(yappi.get_func_stats(filter={\"modname\": all_results[0].module}))\r\n    55\r\n\r\nIn addition, there are no automated tests for filtering by module name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/32", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/32/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/32/events", "html_url": "https://github.com/sumerc/yappi/issues/32", "id": 539423973, "node_id": "MDU6SXNzdWU1Mzk0MjM5NzM=", "number": 32, "title": "Internal Error 15", "user": {"login": "divi255", "id": 40633781, "node_id": "MDQ6VXNlcjQwNjMzNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/40633781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divi255", "html_url": "https://github.com/divi255", "followers_url": "https://api.github.com/users/divi255/followers", "following_url": "https://api.github.com/users/divi255/following{/other_user}", "gists_url": "https://api.github.com/users/divi255/gists{/gist_id}", "starred_url": "https://api.github.com/users/divi255/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divi255/subscriptions", "organizations_url": "https://api.github.com/users/divi255/orgs", "repos_url": "https://api.github.com/users/divi255/repos", "events_url": "https://api.github.com/users/divi255/events{/privacy}", "received_events_url": "https://api.github.com/users/divi255/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1680633262, "node_id": "MDU6TGFiZWwxNjgwNjMzMjYy", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.2", "name": "1.2", "color": "9ef98e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-12-18T03:06:24Z", "updated_at": "2019-12-19T13:04:13Z", "closed_at": "2019-12-19T13:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day,\r\n\r\nI'm author of [pptop](https://pptop.io/), which has a plugin for yappi profiler. After updating to 1.2.1, Yappi prints a lot of \"Internal Error 15\" messages when working. I believe the issue is because pptop plugin starts yappi from the own thread, however everything seems to work fine except this message.\r\n\r\np.s. it would be also nice to have an ability obtaining data fields from get_func_stats() by keywords, as I see some of their indexes are changed from version to version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/31", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/31/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/31/events", "html_url": "https://github.com/sumerc/yappi/issues/31", "id": 539274337, "node_id": "MDU6SXNzdWU1MzkyNzQzMzc=", "number": 31, "title": "Failing 2 CI tests on Windows - Py3.7 and Py3.8", "user": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1740062561, "node_id": "MDU6TGFiZWwxNzQwMDYyNTYx", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.3", "name": "1.3", "color": "20bfa2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-17T19:47:31Z", "updated_at": "2020-04-08T11:52:31Z", "closed_at": "2020-04-08T11:52:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```bash\r\n======================================================================\r\nFAIL: test_async_wall (test_asyncio_context_vars.AsyncUsage)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests\\test_asyncio_context_vars.py\", line 50, in test_async_wall\r\n    self.assertGreaterEqual(ttot, self.duration)\r\nAssertionError: 0.059142719999999996 not greater than or equal to 0.1\r\n======================================================================\r\nFAIL: test_async_wall (test_asyncio_context_vars.AsyncUsageWithContextvars)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests\\test_asyncio_context_vars.py\", line 50, in test_async_wall\r\n    self.assertGreaterEqual(ttot, self.duration)\r\nAssertionError: 0.090103 not greater than or equal to 0.1\r\n----------------------------------------------------------------------\r\nRan 77 tests in 17.157s\r\nFAILED (failures=2, skipped=2)\r\nCommand exited with code 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/29", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/29/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/29/events", "html_url": "https://github.com/sumerc/yappi/issues/29", "id": 538203113, "node_id": "MDU6SXNzdWU1MzgyMDMxMTM=", "number": 29, "title": "Error installing through pip on windows", "user": {"login": "klaipher", "id": 33063280, "node_id": "MDQ6VXNlcjMzMDYzMjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/33063280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klaipher", "html_url": "https://github.com/klaipher", "followers_url": "https://api.github.com/users/klaipher/followers", "following_url": "https://api.github.com/users/klaipher/following{/other_user}", "gists_url": "https://api.github.com/users/klaipher/gists{/gist_id}", "starred_url": "https://api.github.com/users/klaipher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klaipher/subscriptions", "organizations_url": "https://api.github.com/users/klaipher/orgs", "repos_url": "https://api.github.com/users/klaipher/repos", "events_url": "https://api.github.com/users/klaipher/events{/privacy}", "received_events_url": "https://api.github.com/users/klaipher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-16T05:59:33Z", "updated_at": "2019-12-20T08:56:40Z", "closed_at": "2019-12-20T08:56:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install yappi and got this error. I use Windows 10 1909 and Python 3.7. I cloned the repository from the github and removed the slash symbol from https://github.com/sumerc/yappi/blob/master/setup.py#L82. Then I installed yappi via `python setup.py install`\r\n\r\n```(venv) C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot>pip install yappi\r\nCollecting yappi\r\n  Using cached https://files.pythonhosted.org/packages/90/8e/ac718e8ffaffb7c92c09eb2cec33557f8f1b3ec32af5b7599a993a7700c8/yappi-1.2.1.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    running egg_info\r\n    creating pip-egg-info\\yappi.egg-info\r\n    writing pip-egg-info\\yappi.egg-info\\PKG-INFO\r\n    writing dependency_links to pip-egg-info\\yappi.egg-info\\dependency_links.txt\r\n    writing entry points to pip-egg-info\\yappi.egg-info\\entry_points.txt\r\n    writing top-level names to pip-egg-info\\yappi.egg-info\\top_level.txt\r\n    writing manifest file 'pip-egg-info\\yappi.egg-info\\SOURCES.txt'\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Temp\\pip-install-b6ze0_h7\\yappi\\setup.py\", line 95, in <module>\r\n        url=HOMEPAGE,\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\__init__.py\", line 145, in setup\r\n        return distutils.core.setup(**attrs)\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\core.py\", line 148, in setup\r\n        dist.run_commands()\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\dist.py\", line 966, in run_commands\r\n        self.run_command(cmd)\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\dist.py\", line 985, in run_command\r\n        cmd_obj.run()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 296, in run\r\n        self.find_sources()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 303, in find_sources\r\n        mm.run()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 534, in run\r\n        self.add_defaults()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\egg_info.py\", line 570, in add_defaults\r\n        sdist.add_defaults(self)\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\command\\sdist.py\", line 226, in add_defaults\r\n        self._add_defaults_python()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\sdist.py\", line 127, in _add_defaults_python\r\n        build_py = self.get_finalized_command('build_py')\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\cmd.py\", line 299, in get_finalized_command\r\n        cmd_obj.ensure_finalized()\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\cmd.py\", line 107, in ensure_finalized\r\n        self.finalize_options()\r\n      File \"C:\\Users\\dimam\\Desktop\\Programming\\exchange_bot\\venv\\lib\\site-packages\\setuptools\\command\\build_py.py\", line 34, in finalize_options\r\n        orig.build_py.finalize_options(self)\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\command\\build_py.py\", line 55, in finalize_options\r\n        self.package_dir[name] = convert_path(path)\r\n      File \"C:\\Users\\dimam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\distutils\\util.py\", line 112, in convert_path\r\n        raise ValueError(\"path '%s' cannot end with '/'\" % pathname)\r\n    ValueError: path 'yappi/' cannot end with '/'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\dimam\\AppData\\Local\\Temp\\pip-install-b6ze0_h7\\yappi\\\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/25", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/25/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/25/events", "html_url": "https://github.com/sumerc/yappi/issues/25", "id": 531135282, "node_id": "MDU6SXNzdWU1MzExMzUyODI=", "number": 25, "title": "Can I format function names with print_all() ?", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-02T13:40:24Z", "updated_at": "2019-12-02T14:34:57Z", "closed_at": "2019-12-02T14:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a rather cosmetic issue, yet I'm running a `logger.debug(yappi.get_func_stats({\"tag\": ctx_id}).print_all())` and find it difficult to read the output for the names (see below), is it possible to get a \"nicer\" output\r\n\r\nI thought using a `fmt` kwarg and passingsomething like in https://docs.python.org/3/library/logging.html#logrecord-attributes would be awesome, at least it would feel natural\r\n\r\nI currently have to use `debug_print()` to get a sense of those names but it would be awesome to be able to do a `print_all(fmt=''%(filename)s %(funcName)s %(lineno)d\")` for instance\r\n\r\n\r\n```\r\nClock type: WALL\r\nOrdered by: totaltime, desc\r\n\r\nname                                  ncall  tsub      ttot      tavg      \r\n..ase.py:19 BenchMiddleware.__call__  1      0.000016  0.009153  0.009153\r\n..arlette/middleware/base.py:36 coro  2      0.000000  0.009081  0.004540\r\n./main.py:116 middleware              1      0.000017  0.009018  0.009018\r\n..se.py:28 BenchMiddleware.call_next  2      0.006288  0.006426  0.003213\r\n..py:47 ExceptionMiddleware.__call__  1      0.000009  0.006233  0.006233\r\n../routing.py:578 APIRouter.__call__  1      0.000029  0.006224  0.006224\r\n..e/routing.py:200 APIRoute.__call__  1      0.000015  0.006133  0.006133\r\n..ckages/starlette/routing.py:38 app  1      0.000029  0.006118  0.006118\r\n..ackages/fastapi/routing.py:100 app  1      0.000024  0.006025  0.006025\r\n..ection.py:1400 Connection._execute  2      0.000035  0.004728  0.002364\r\n..ction.py:1406 Connection.__execute  2      0.000027  0.004687  0.002344\r\n..ion.py:1421 Connection._do_execute  2      0.002150  0.004648  0.002324\r\n..py:137 circuits_json_in_postgresql  1      0.000034  0.003894  0.003894\r\n..nection.py:443 Connection.fetchrow  1      0.000005  0.003417  0.003417`\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/24", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/24/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/24/events", "html_url": "https://github.com/sumerc/yappi/issues/24", "id": 523880836, "node_id": "MDU6SXNzdWU1MjM4ODA4MzY=", "number": 24, "title": "filtering results prevents child funcs. to be added", "user": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1740062561, "node_id": "MDU6TGFiZWwxNzQwMDYyNTYx", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.3", "name": "1.3", "color": "20bfa2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-16T18:44:00Z", "updated_at": "2020-04-08T11:53:51Z", "closed_at": "2020-04-08T11:53:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\nself._filter = filter\r\n_yappi.enum_func_stats(self._enumerator)\r\nself._filter = None\r\n```\r\nenumeration is done based on filter and then when we try to make the YChildFuncs we cannot get them because filter excluded them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/22", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/22/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/22/events", "html_url": "https://github.com/sumerc/yappi/issues/22", "id": 521406890, "node_id": "MDU6SXNzdWU1MjE0MDY4OTA=", "number": 22, "title": "Question: Easy way to determine full_name of provided callable?", "user": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-12T08:44:26Z", "updated_at": "2019-12-17T21:27:35Z", "closed_at": "2019-12-17T21:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering if there is a good way to convert a callable into its `full_name` representation, for passing to a filter. This would make it easier to extract targeted results from profiler output.\r\n\r\nIt seems to me this is, in general, the most reliable way to ensure you are getting the results of precisely the function you want to track, but I don't see an easy way to get the `full_name` of a function given just a reference to the function (it looks like this is computed inside the C code?). \r\n\r\nPerhaps I should just filter on the combination of `name` and `modname` instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/21", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/21/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/21/events", "html_url": "https://github.com/sumerc/yappi/issues/21", "id": 521140371, "node_id": "MDU6SXNzdWU1MjExNDAzNzE=", "number": 21, "title": "Coroutine-aware wall-time profiling ", "user": {"login": "dmontagu", "id": 35119617, "node_id": "MDQ6VXNlcjM1MTE5NjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/35119617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmontagu", "html_url": "https://github.com/dmontagu", "followers_url": "https://api.github.com/users/dmontagu/followers", "following_url": "https://api.github.com/users/dmontagu/following{/other_user}", "gists_url": "https://api.github.com/users/dmontagu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmontagu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmontagu/subscriptions", "organizations_url": "https://api.github.com/users/dmontagu/orgs", "repos_url": "https://api.github.com/users/dmontagu/repos", "events_url": "https://api.github.com/users/dmontagu/events{/privacy}", "received_events_url": "https://api.github.com/users/dmontagu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1680633262, "node_id": "MDU6TGFiZWwxNjgwNjMzMjYy", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.2", "name": "1.2", "color": "9ef98e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 46, "created_at": "2019-11-11T19:22:20Z", "updated_at": "2020-01-23T14:59:18Z", "closed_at": "2019-12-12T10:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the sake of profiling ASGI apps, it would be really helpful if there was a way to make use of python 3.7's [contextvars](https://docs.python.org/3/library/contextvars.html) while filtering via `yappi.get_func_stats`. If yappi supported this, you could get per-request-response-cycle profiling through an ASGI middleware.\r\n\r\nI'm not sure if the necessary functionality already exists or not, but wanted to open an issue in case anyone else has thought about this, or in case someone is aware of an existing way to accomplish this.\r\n\r\nSee https://github.com/tiangolo/fastapi/issues/701 for more context on how we'd like to use this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/20", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/20/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/20/events", "html_url": "https://github.com/sumerc/yappi/issues/20", "id": 493253029, "node_id": "MDU6SXNzdWU0OTMyNTMwMjk=", "number": 20, "title": "Bug when installed with pip", "user": {"login": "xkcdjerry", "id": 49294431, "node_id": "MDQ6VXNlcjQ5Mjk0NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/49294431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkcdjerry", "html_url": "https://github.com/xkcdjerry", "followers_url": "https://api.github.com/users/xkcdjerry/followers", "following_url": "https://api.github.com/users/xkcdjerry/following{/other_user}", "gists_url": "https://api.github.com/users/xkcdjerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkcdjerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkcdjerry/subscriptions", "organizations_url": "https://api.github.com/users/xkcdjerry/orgs", "repos_url": "https://api.github.com/users/xkcdjerry/repos", "events_url": "https://api.github.com/users/xkcdjerry/events{/privacy}", "received_events_url": "https://api.github.com/users/xkcdjerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-13T10:31:47Z", "updated_at": "2019-12-12T09:30:06Z", "closed_at": "2019-12-12T09:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When yappi is installed with pip, it crashes with the following error:\r\n![image](https://user-images.githubusercontent.com/49294431/64856513-b98af780-d654-11e9-9a41-08a9f768fbca.png)\r\n\r\n\r\nTEXT VERSION:\r\nCollecting yappi\r\n  Using cached https://files.pythonhosted.org/packages/d2/92/7cd637a19fa2a10c0e55a44f8b36bcb83f0e1943ba8f1fb5edb15c819f2e/yappi-1.0.tar.gz\r\nInstalling collected packages: yappi\r\n  Running setup.py install for yappi ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: 'c:\\users\\58394\\appdata\\local\\programs\\python\\python37\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\58394\\\\AppData\\\\Local\\\\Temp\\\\pip-install-zsdo72o2\\\\yappi\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\58394\\\\AppData\\\\Local\\\\Temp\\\\pip-install-zsdo72o2\\\\yappi\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\58394\\AppData\\Local\\Temp\\pip-record-1uijfgsm\\install-record.txt' --single-version-externally-managed --compile\r\n         cwd: C:\\Users\\58394\\AppData\\Local\\Temp\\pip-install-zsdo72o2\\yappi\\\r\n    Complete output (9 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win-amd64-3.7\r\n    copying yappi.py -> build\\lib.win-amd64-3.7\r\n    running build_ext\r\n    building '_yappi' extension\r\n    error: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": https://visualstudio.microsoft.com/downloads/\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: 'c:\\users\\58394\\appdata\\local\\programs\\python\\python37\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\58394\\\\AppData\\\\Local\\\\Temp\\\\pip-install-zsdo72o2\\\\yappi\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\58394\\\\AppData\\\\Local\\\\Temp\\\\pip-install-zsdo72o2\\\\yappi\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\58394\\AppData\\Local\\Temp\\pip-record-1uijfgsm\\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/12", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/12/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/12/events", "html_url": "https://github.com/sumerc/yappi/issues/12", "id": 427531665, "node_id": "MDU6SXNzdWU0Mjc1MzE2NjU=", "number": 12, "title": "pypi doesn't seem to detect readme format", "user": {"login": "dimaqq", "id": 662249, "node_id": "MDQ6VXNlcjY2MjI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/662249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimaqq", "html_url": "https://github.com/dimaqq", "followers_url": "https://api.github.com/users/dimaqq/followers", "following_url": "https://api.github.com/users/dimaqq/following{/other_user}", "gists_url": "https://api.github.com/users/dimaqq/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimaqq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimaqq/subscriptions", "organizations_url": "https://api.github.com/users/dimaqq/orgs", "repos_url": "https://api.github.com/users/dimaqq/repos", "events_url": "https://api.github.com/users/dimaqq/events{/privacy}", "received_events_url": "https://api.github.com/users/dimaqq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1740062561, "node_id": "MDU6TGFiZWwxNzQwMDYyNTYx", "url": "https://api.github.com/repos/sumerc/yappi/labels/1.3", "name": "1.3", "color": "20bfa2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-04-01T06:24:43Z", "updated_at": "2019-12-17T21:28:44Z", "closed_at": "2019-12-17T21:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pypi.org/project/yappi/\r\n\r\nThere's some trick to pass content type along with `long_description` through `setup.py` to fix that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/11", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/11/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/11/events", "html_url": "https://github.com/sumerc/yappi/issues/11", "id": 413339359, "node_id": "MDU6SXNzdWU0MTMzMzkzNTk=", "number": 11, "title": "Version 1.0 is in pypi but latest in master is 0.99", "user": {"login": "amoralej", "id": 1783517, "node_id": "MDQ6VXNlcjE3ODM1MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1783517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoralej", "html_url": "https://github.com/amoralej", "followers_url": "https://api.github.com/users/amoralej/followers", "following_url": "https://api.github.com/users/amoralej/following{/other_user}", "gists_url": "https://api.github.com/users/amoralej/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoralej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoralej/subscriptions", "organizations_url": "https://api.github.com/users/amoralej/orgs", "repos_url": "https://api.github.com/users/amoralej/repos", "events_url": "https://api.github.com/users/amoralej/events{/privacy}", "received_events_url": "https://api.github.com/users/amoralej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T10:27:34Z", "updated_at": "2019-02-24T10:44:25Z", "closed_at": "2019-02-24T10:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Latest version in pypi is 1.0 but latest version in setup.py in master is 0.99.\r\n\r\nThis is inconsistent and makes difficult to track what is actually in pypi and should be fixed. BTW, where is the tarball in pypi coming from?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/9", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/9/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/9/events", "html_url": "https://github.com/sumerc/yappi/issues/9", "id": 402111288, "node_id": "MDU6SXNzdWU0MDIxMTEyODg=", "number": 9, "title": "Request: Support for per-thread function stats", "user": {"login": "nav-agarwal", "id": 4910144, "node_id": "MDQ6VXNlcjQ5MTAxNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4910144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nav-agarwal", "html_url": "https://github.com/nav-agarwal", "followers_url": "https://api.github.com/users/nav-agarwal/followers", "following_url": "https://api.github.com/users/nav-agarwal/following{/other_user}", "gists_url": "https://api.github.com/users/nav-agarwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/nav-agarwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nav-agarwal/subscriptions", "organizations_url": "https://api.github.com/users/nav-agarwal/orgs", "repos_url": "https://api.github.com/users/nav-agarwal/repos", "events_url": "https://api.github.com/users/nav-agarwal/events{/privacy}", "received_events_url": "https://api.github.com/users/nav-agarwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-23T07:49:38Z", "updated_at": "2019-06-11T08:39:50Z", "closed_at": "2019-06-11T08:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to get thread stats in pstats format?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/6", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/6/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/6/events", "html_url": "https://github.com/sumerc/yappi/issues/6", "id": 401091836, "node_id": "MDU6SXNzdWU0MDEwOTE4MzY=", "number": 6, "title": "UnicodeDecodeError: 'charmap' codec can't decode byte 0x9d in position 1847: character maps to <undefined>", "user": {"login": "alexandrul", "id": 663809, "node_id": "MDQ6VXNlcjY2MzgwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/663809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandrul", "html_url": "https://github.com/alexandrul", "followers_url": "https://api.github.com/users/alexandrul/followers", "following_url": "https://api.github.com/users/alexandrul/following{/other_user}", "gists_url": "https://api.github.com/users/alexandrul/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandrul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandrul/subscriptions", "organizations_url": "https://api.github.com/users/alexandrul/orgs", "repos_url": "https://api.github.com/users/alexandrul/repos", "events_url": "https://api.github.com/users/alexandrul/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandrul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-20T12:16:00Z", "updated_at": "2019-01-20T13:29:04Z", "closed_at": "2019-01-20T13:29:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting this error when attempting to install 0.99 on Python 3.7 + Windows 7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sumerc/yappi/issues/2", "repository_url": "https://api.github.com/repos/sumerc/yappi", "labels_url": "https://api.github.com/repos/sumerc/yappi/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/sumerc/yappi/issues/2/comments", "events_url": "https://api.github.com/repos/sumerc/yappi/issues/2/events", "html_url": "https://github.com/sumerc/yappi/issues/2", "id": 191576885, "node_id": "MDU6SXNzdWUxOTE1NzY4ODU=", "number": 2, "title": "Python 3.4 support", "user": {"login": "JetStarBlues", "id": 4354703, "node_id": "MDQ6VXNlcjQzNTQ3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4354703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JetStarBlues", "html_url": "https://github.com/JetStarBlues", "followers_url": "https://api.github.com/users/JetStarBlues/followers", "following_url": "https://api.github.com/users/JetStarBlues/following{/other_user}", "gists_url": "https://api.github.com/users/JetStarBlues/gists{/gist_id}", "starred_url": "https://api.github.com/users/JetStarBlues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JetStarBlues/subscriptions", "organizations_url": "https://api.github.com/users/JetStarBlues/orgs", "repos_url": "https://api.github.com/users/JetStarBlues/repos", "events_url": "https://api.github.com/users/JetStarBlues/events{/privacy}", "received_events_url": "https://api.github.com/users/JetStarBlues/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-24T18:35:12Z", "updated_at": "2016-11-25T05:45:37Z", "closed_at": "2016-11-24T22:48:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nWhen attempting to build for Python 3.4 (with mingw32), I get the following error:\r\n\r\n```\r\n_yappi.c: In function '_yapp_callback':\r\n_yappi.c:680:36: error: 'PyFrameObject {aka struct _frame}' has no member named 'f_tstate'\r\n     current_ctx = _thread2ctx(frame->f_tstate);\r\n```\r\n\r\nI opened up `C:\\Python34\\include\\frameobject.h` on my PC, and indeed no such member is present in the 3.4 version of `frameobject.h`, despite it being present in [earlier versions][0] of Python.\r\n\r\nWhat would be a way to work around this?\r\n\r\n[0]: https://svn.python.org/projects/python/trunk/Include/frameobject.h", "performed_via_github_app": null, "score": 1.0}]}