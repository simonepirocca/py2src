{"total_count": 8, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/11", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/11/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/11/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/11", "id": 538652092, "node_id": "MDU6SXNzdWU1Mzg2NTIwOTI=", "number": 11, "title": "Import of pystore/yfinance breaks set_max_threads", "user": {"login": "rdiere", "id": 12029654, "node_id": "MDQ6VXNlcjEyMDI5NjU0", "avatar_url": "https://avatars2.githubusercontent.com/u/12029654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdiere", "html_url": "https://github.com/rdiere", "followers_url": "https://api.github.com/users/rdiere/followers", "following_url": "https://api.github.com/users/rdiere/following{/other_user}", "gists_url": "https://api.github.com/users/rdiere/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdiere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdiere/subscriptions", "organizations_url": "https://api.github.com/users/rdiere/orgs", "repos_url": "https://api.github.com/users/rdiere/repos", "events_url": "https://api.github.com/users/rdiere/events{/privacy}", "received_events_url": "https://api.github.com/users/rdiere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T20:55:22Z", "updated_at": "2019-12-17T20:53:36Z", "closed_at": "2019-12-17T20:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ran,\r\n\r\nI have a problem running your example.py on a single core machine after importing one of your other libraries e,g, pystore or yfinance. I can see you are using multitasking in these libraries. I even tried to import multitasking as _test in staid but this does not seem to help. Disabling pystore and yfinance and it works like charm.\r\n\r\nAny idea how to come around this issue?\r\n\r\nBest regards,\r\n\r\nRutger \r\n\r\n**Used code**\r\n```\r\nimport pystore \r\nimport yfinance\r\n\r\nimport multitasking as _test\r\n\r\nimport time\r\nimport random\r\nimport signal\r\n\r\n# kill all tasks on ctrl-c\r\nsignal.signal(signal.SIGINT, _test.killall)\r\n_test.set_max_threads(10)\r\n\r\n# or, wait for task to finish on ctrl-c:\r\n# signal.signal(signal.SIGINT, multitasking.wait_for_tasks)\r\n\r\n@_test.task # <== this is all it takes :-)\r\ndef hello(count):\r\n    sleep = random.randint(1,10)/2\r\n    print(\"Hello %s (sleeping for %ss)\" % (count, sleep))\r\n    time.sleep(sleep)\r\n    print(\"Goodbye %s (after for %ss)\" % (count, sleep))\r\n\r\nif __name__ == \"__main__\":\r\n    for i in range(0, 10):\r\n        hello(i+1)\r\n```\r\n**Unwanted result**\r\n> Hello 1 (sleeping for 5.0s)\r\n> Goodbye 1 (after for 5.0s)\r\n> Hello 2 (sleeping for 0.5s)\r\n> Goodbye 2 (after for 0.5s)\r\n> Hello 3 (sleeping for 4.5s)\r\n> Goodbye 3 (after for 4.5s)\r\n> Hello 4 (sleeping for 1.5s)\r\n> Goodbye 4 (after for 1.5s)\r\n> Hello 5 (sleeping for 3.5s)\r\n> Goodbye 5 (after for 3.5s)\r\n> Hello 6 (sleeping for 4.5s)\r\n> Goodbye 6 (after for 4.5s)\r\n> Hello 7 (sleeping for 2.0s)\r\n> Goodbye 7 (after for 2.0s)\r\n> Hello 8 (sleeping for 3.0s)\r\n> Goodbye 8 (after for 3.0s)\r\n> Hello 9 (sleeping for 1.5s)\r\n> Goodbye 9 (after for 1.5s)\r\n> Hello 10 (sleeping for 3.5s)\r\n> Goodbye 10 (after for 3.5s)\r\n\r\n**Pystore and yfinance both removed**\r\n```\r\n#import pystore \r\n#import yfinance\r\n\r\nimport multitasking as _test\r\n\r\nimport time\r\nimport random\r\nimport signal\r\n\r\n# kill all tasks on ctrl-c\r\nsignal.signal(signal.SIGINT, _test.killall)\r\n_test.set_max_threads(10)\r\n\r\n# or, wait for task to finish on ctrl-c:\r\n# signal.signal(signal.SIGINT, multitasking.wait_for_tasks)\r\n\r\n@_test.task # <== this is all it takes :-)\r\ndef hello(count):\r\n    sleep = random.randint(1,10)/2\r\n    print(\"Hello %s (sleeping for %ss)\" % (count, sleep))\r\n    time.sleep(sleep)\r\n    print(\"Goodbye %s (after for %ss)\" % (count, sleep))\r\n\r\nif __name__ == \"__main__\":\r\n    for i in range(0, 10):\r\n        hello(i+1)\r\n```\r\n**Wanted result**\r\n> Hello 1 (sleeping for 5.0s)\r\n> Hello 2 (sleeping for 4.5s)\r\n> Hello 3 (sleeping for 4.0s)\r\n> Hello 4 (sleeping for 4.5s)\r\n> Hello 5 (sleeping for 3.0s)\r\n> Hello 6 (sleeping for 3.0s)\r\n> Hello 7 (sleeping for 3.0s)\r\n> Hello 8 (sleeping for 1.5s)\r\n> Hello 9 (sleeping for 0.5s)\r\n> Hello 10 (sleeping for 3.5s)\r\n> Goodbye 9 (after for 0.5s)\r\n> Goodbye 8 (after for 1.5s)\r\n> Goodbye 5 (after for 3.0s)\r\n> Goodbye 6 (after for 3.0s)\r\n> Goodbye 7 (after for 3.0s)\r\n> Goodbye 10 (after for 3.5s)\r\n> Goodbye 3 (after for 4.0s)\r\n> Goodbye 2 (after for 4.5s)\r\n> Goodbye 4 (after for 4.5s)\r\n> Goodbye 1 (after for 5.0s)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/10", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/10/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/10/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/10", "id": 503684891, "node_id": "MDU6SXNzdWU1MDM2ODQ4OTE=", "number": 10, "title": "Returning values", "user": {"login": "eevleevs", "id": 5012744, "node_id": "MDQ6VXNlcjUwMTI3NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5012744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eevleevs", "html_url": "https://github.com/eevleevs", "followers_url": "https://api.github.com/users/eevleevs/followers", "following_url": "https://api.github.com/users/eevleevs/following{/other_user}", "gists_url": "https://api.github.com/users/eevleevs/gists{/gist_id}", "starred_url": "https://api.github.com/users/eevleevs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eevleevs/subscriptions", "organizations_url": "https://api.github.com/users/eevleevs/orgs", "repos_url": "https://api.github.com/users/eevleevs/repos", "events_url": "https://api.github.com/users/eevleevs/events{/privacy}", "received_events_url": "https://api.github.com/users/eevleevs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T20:52:48Z", "updated_at": "2019-10-27T17:58:24Z", "closed_at": "2019-10-27T17:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is it possible to return a value from a method decorated with @multitasking.task? I always get the task reference, no matter what I try to return.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/9", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/9/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/9/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/9", "id": 442770709, "node_id": "MDU6SXNzdWU0NDI3NzA3MDk=", "number": 9, "title": "Feature Request: Enable multiple joins", "user": {"login": "bcbrock", "id": 11968347, "node_id": "MDQ6VXNlcjExOTY4MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11968347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcbrock", "html_url": "https://github.com/bcbrock", "followers_url": "https://api.github.com/users/bcbrock/followers", "following_url": "https://api.github.com/users/bcbrock/following{/other_user}", "gists_url": "https://api.github.com/users/bcbrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcbrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcbrock/subscriptions", "organizations_url": "https://api.github.com/users/bcbrock/orgs", "repos_url": "https://api.github.com/users/bcbrock/repos", "events_url": "https://api.github.com/users/bcbrock/events{/privacy}", "received_events_url": "https://api.github.com/users/bcbrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T15:17:59Z", "updated_at": "2019-05-24T14:23:05Z", "closed_at": "2019-05-24T12:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ran,\r\n\r\nI am using this package in scripts where I need to spawn some work, wait for it to complete, then spawn more work, wait, etc. etc. The issue is that the join method wait_for_tasks() is one-shot, because it keeps config[\"KILL_RECEIVED\"]=True after the join completes, and when config[\"KILL_RECEIVED\"] is True, task() is a NOP. Would you consider changing wait_for_tasks()  to enable multiple joins()? Also, to me not would be good for task() to throw an exception if it is called while a join is pending rather than silently doing nothing.\r\n\r\nThanks,\r\n\r\nBishop Brock", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/7", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/7/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/7/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/7", "id": 441343445, "node_id": "MDU6SXNzdWU0NDEzNDM0NDU=", "number": 7, "title": "wait_for_tasks() does not work", "user": {"login": "bcbrock", "id": 11968347, "node_id": "MDQ6VXNlcjExOTY4MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11968347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcbrock", "html_url": "https://github.com/bcbrock", "followers_url": "https://api.github.com/users/bcbrock/followers", "following_url": "https://api.github.com/users/bcbrock/following{/other_user}", "gists_url": "https://api.github.com/users/bcbrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcbrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcbrock/subscriptions", "organizations_url": "https://api.github.com/users/bcbrock/orgs", "repos_url": "https://api.github.com/users/bcbrock/repos", "events_url": "https://api.github.com/users/bcbrock/events{/privacy}", "received_events_url": "https://api.github.com/users/bcbrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T17:11:34Z", "updated_at": "2019-05-07T19:31:58Z", "closed_at": "2019-05-07T19:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `wait_for_tasks()`, the calls `t.isAlive()` should be `t.is_alive()`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/6", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/6/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/6/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/6", "id": 441293678, "node_id": "MDU6SXNzdWU0NDEyOTM2Nzg=", "number": 6, "title": "Using Processes Rather than Threads Doesn't Work as Documented + Workaround", "user": {"login": "bcbrock", "id": 11968347, "node_id": "MDQ6VXNlcjExOTY4MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11968347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcbrock", "html_url": "https://github.com/bcbrock", "followers_url": "https://api.github.com/users/bcbrock/followers", "following_url": "https://api.github.com/users/bcbrock/following{/other_user}", "gists_url": "https://api.github.com/users/bcbrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcbrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcbrock/subscriptions", "organizations_url": "https://api.github.com/users/bcbrock/orgs", "repos_url": "https://api.github.com/users/bcbrock/repos", "events_url": "https://api.github.com/users/bcbrock/events{/privacy}", "received_events_url": "https://api.github.com/users/bcbrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T15:22:28Z", "updated_at": "2019-05-07T19:31:56Z", "closed_at": "2019-05-07T19:31:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ran,\r\n\r\nThank you for publishing this package.\r\n\r\nThe issue is that the documented method to use processes rather than threads:\r\n```\r\nimport multitasking\r\nmultitasking.set_engine(\"process\") # \"process\" or \"thread\"\r\n```\r\ndoes not work. I don't believe that the `set_engine` call has any effect at all on the behavior of the package. This is because `createPool` always overwrites the \"ENGINE\" from it's parameter (defaulting to 'thread').\r\n\r\nFor others having this issue, a simple workaround is to create a default pool explicitly:\r\n```\r\nimport multitasking\r\nmultitasking.createPool(engine='process')\r\n```\r\n\r\nThanks,\r\n\r\nBishop Brock\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/5", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/5/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/5/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/5", "id": 395164968, "node_id": "MDU6SXNzdWUzOTUxNjQ5Njg=", "number": 5, "title": "a bug when i want to use multitasking twice", "user": {"login": "LogicJake", "id": 20673460, "node_id": "MDQ6VXNlcjIwNjczNDYw", "avatar_url": "https://avatars0.githubusercontent.com/u/20673460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LogicJake", "html_url": "https://github.com/LogicJake", "followers_url": "https://api.github.com/users/LogicJake/followers", "following_url": "https://api.github.com/users/LogicJake/following{/other_user}", "gists_url": "https://api.github.com/users/LogicJake/gists{/gist_id}", "starred_url": "https://api.github.com/users/LogicJake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LogicJake/subscriptions", "organizations_url": "https://api.github.com/users/LogicJake/orgs", "repos_url": "https://api.github.com/users/LogicJake/repos", "events_url": "https://api.github.com/users/LogicJake/events{/privacy}", "received_events_url": "https://api.github.com/users/LogicJake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-02T07:11:12Z", "updated_at": "2019-05-24T13:00:34Z", "closed_at": "2019-05-24T07:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your great work.\r\nBut when i want to use multitasking twice, it does not work as expected at the second time. If you want to  reproduce the bug, you can run the following code.\r\n```\r\nimport multitasking\r\nimport signal\r\nmultitasking.set_max_threads()\r\nmultitasking.set_engine(\"process\")\r\nsignal.signal(signal.SIGINT, multitasking.killall)\r\n\r\n\r\n@multitasking.task\r\ndef task1():\r\n    print(1)\r\n\r\n\r\n@multitasking.task\r\ndef task2():\r\n    print(2)\r\n\r\n\r\nif __name__ == '__main__':\r\n    for i in range(3):\r\n        task1()\r\n\r\n    multitasking.wait_for_tasks()\r\n    # multitasking.config[\"KILL_RECEIVED\"] = False\r\n\r\n    for i in range(3):\r\n        task2()\r\n    multitasking.wait_for_tasks()\r\n\r\n```\r\nAfter reading your code, it seems that config[\"KILL_RECEIVED\"] prevents adding new task into the pool  because the value of config[\"KILL_RECEIVED\"] is True.\r\n\r\nSo the problem is that after using wait_for_tasks, you can not add new task because of config[\"KILL_RECEIVED\"]. Now I just add 'config[\"KILL_RECEIVED\"] = False' after wait_for_tasks to avoid this bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/4", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/4/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/4/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/4", "id": 338434095, "node_id": "MDU6SXNzdWUzMzg0MzQwOTU=", "number": 4, "title": "A fail before any task being processed", "user": {"login": "Antisunny", "id": 2398514, "node_id": "MDQ6VXNlcjIzOTg1MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2398514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Antisunny", "html_url": "https://github.com/Antisunny", "followers_url": "https://api.github.com/users/Antisunny/followers", "following_url": "https://api.github.com/users/Antisunny/following{/other_user}", "gists_url": "https://api.github.com/users/Antisunny/gists{/gist_id}", "starred_url": "https://api.github.com/users/Antisunny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Antisunny/subscriptions", "organizations_url": "https://api.github.com/users/Antisunny/orgs", "repos_url": "https://api.github.com/users/Antisunny/repos", "events_url": "https://api.github.com/users/Antisunny/events{/privacy}", "received_events_url": "https://api.github.com/users/Antisunny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-05T05:45:58Z", "updated_at": "2019-10-27T17:58:47Z", "closed_at": "2019-10-27T17:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nTraceback (most recent call last):\r\n  File \"fixed/insert_journal.py\", line 132, in <module>\r\n    get_content(key, _ind)\r\n  File \"/usr/local/lib/python3.7/site-packages/multitasking/__init__.py\", line 118, in async_method\r\n    single.start()\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\r\n```\r\nBut after a seconds or several seconds pause, the processing is going on well.\r\n\r\nIt seems the init stage of multitasking has some errors unhandled", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ranaroussi/multitasking/issues/1", "repository_url": "https://api.github.com/repos/ranaroussi/multitasking", "labels_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/1/comments", "events_url": "https://api.github.com/repos/ranaroussi/multitasking/issues/1/events", "html_url": "https://github.com/ranaroussi/multitasking/issues/1", "id": 254106596, "node_id": "MDU6SXNzdWUyNTQxMDY1OTY=", "number": 1, "title": "TypeError: __init__() got an unexpected keyword argument 'daemon' in Python 2.7.13", "user": {"login": "maneeshd", "id": 22632767, "node_id": "MDQ6VXNlcjIyNjMyNzY3", "avatar_url": "https://avatars2.githubusercontent.com/u/22632767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maneeshd", "html_url": "https://github.com/maneeshd", "followers_url": "https://api.github.com/users/maneeshd/followers", "following_url": "https://api.github.com/users/maneeshd/following{/other_user}", "gists_url": "https://api.github.com/users/maneeshd/gists{/gist_id}", "starred_url": "https://api.github.com/users/maneeshd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maneeshd/subscriptions", "organizations_url": "https://api.github.com/users/maneeshd/orgs", "repos_url": "https://api.github.com/users/maneeshd/repos", "events_url": "https://api.github.com/users/maneeshd/events{/privacy}", "received_events_url": "https://api.github.com/users/maneeshd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-30T19:17:10Z", "updated_at": "2017-12-13T18:18:08Z", "closed_at": "2017-12-13T18:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nGetting this exception when multitasking.task is run\r\n\r\n> Traceback (most recent call last):\r\nFile \"C:/Users/mdivana/PythonProjects/Get Platform Details FlaskApp/wonder.py\", line 16, in <module> \r\n    run()\r\nFile \"C:\\Users\\mdivana\\AppData\\Local\\Continuum\\Anaconda3\\envs\\py27\\lib\\site-packages\\multitasking\\__init__.py\", line 107, in async_method\r\n    target=_run_via_pool, args=args, kwargs=kwargs, daemon=False)\r\nTypeError: __init__() got an unexpected keyword argument 'daemon'\r\n\r\nThis is the code I ran:\r\n\r\n```python\r\nimport multitasking\r\n\r\n@multitasking.task\r\ndef run():\r\n    print(\"Yes!\")\r\n\r\nif __name__ == '__main__':\r\n    for i in range(5):\r\n        run()\r\n    print(\"Hello\")\r\n```\r\n\r\nPython: 2.7.13\r\nmultitasking: 0.0.4\r\nOS: Windows 10\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}]}