{"total_count": 413, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/851", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/851/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/851/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/851", "id": 655171636, "node_id": "MDU6SXNzdWU2NTUxNzE2MzY=", "number": 851, "title": "how can i change the access token and refresh token length?", "user": {"login": "raju010193", "id": 10616289, "node_id": "MDQ6VXNlcjEwNjE2Mjg5", "avatar_url": "https://avatars1.githubusercontent.com/u/10616289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raju010193", "html_url": "https://github.com/raju010193", "followers_url": "https://api.github.com/users/raju010193/followers", "following_url": "https://api.github.com/users/raju010193/following{/other_user}", "gists_url": "https://api.github.com/users/raju010193/gists{/gist_id}", "starred_url": "https://api.github.com/users/raju010193/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raju010193/subscriptions", "organizations_url": "https://api.github.com/users/raju010193/orgs", "repos_url": "https://api.github.com/users/raju010193/repos", "events_url": "https://api.github.com/users/raju010193/events{/privacy}", "received_events_url": "https://api.github.com/users/raju010193/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-11T09:22:21Z", "updated_at": "2020-07-16T09:20:28Z", "closed_at": "2020-07-16T09:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- What is your question? -->\r\nhow can i change the access token and refresh token length?\r\n\"token\": {\r\n    \"access_token\": \"bLAJ72PTuTZjXfckxtmPs2mYDkWt6T\",\r\n    \"expires_in\": 36000,\r\n    \"token_type\": \"Bearer\",\r\n    \"scope\": \"read write groups\",\r\n    \"refresh_token\": \"zr4m88eRv0ckjuUekhZRkYFiv6M7dW\"\r\n  }\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/850", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/850/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/850/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/850/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/850", "id": 649534455, "node_id": "MDU6SXNzdWU2NDk1MzQ0NTU=", "number": 850, "title": "How do i set cleartokens in cron or celery-beat?", "user": {"login": "Kiel-Hyre", "id": 40416631, "node_id": "MDQ6VXNlcjQwNDE2NjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/40416631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kiel-Hyre", "html_url": "https://github.com/Kiel-Hyre", "followers_url": "https://api.github.com/users/Kiel-Hyre/followers", "following_url": "https://api.github.com/users/Kiel-Hyre/following{/other_user}", "gists_url": "https://api.github.com/users/Kiel-Hyre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kiel-Hyre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kiel-Hyre/subscriptions", "organizations_url": "https://api.github.com/users/Kiel-Hyre/orgs", "repos_url": "https://api.github.com/users/Kiel-Hyre/repos", "events_url": "https://api.github.com/users/Kiel-Hyre/events{/privacy}", "received_events_url": "https://api.github.com/users/Kiel-Hyre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T02:13:18Z", "updated_at": "2020-07-18T02:30:26Z", "closed_at": "2020-07-18T02:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- What is your question? -->\r\nHi new here. Just stumble in the docs management in which it has cleartokens command\r\n\r\nI manage to run it on shell python3 manage.py cleartokens (Very funny I spend long time how to run this too because I do not know that thing can run in terminal. # sorry newbie django) \r\n\r\nThough I do not have any idea how to do it in cron (said in the docs)\r\nAnd if possible in celery-beat :)\r\n\r\nso if anyone can give just a little example or tips on how to do it is much appreciated.\r\n\r\n#ps if there is, maybe its a good idea to update the docs with example ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/847", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/847/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/847/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/847", "id": 639605466, "node_id": "MDU6SXNzdWU2Mzk2MDU0NjY=", "number": 847, "title": "Return appropriate error messages when response from authentication server is not successful", "user": {"login": "Chouvic", "id": 33321001, "node_id": "MDQ6VXNlcjMzMzIxMDAx", "avatar_url": "https://avatars2.githubusercontent.com/u/33321001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chouvic", "html_url": "https://github.com/Chouvic", "followers_url": "https://api.github.com/users/Chouvic/followers", "following_url": "https://api.github.com/users/Chouvic/following{/other_user}", "gists_url": "https://api.github.com/users/Chouvic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chouvic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chouvic/subscriptions", "organizations_url": "https://api.github.com/users/Chouvic/orgs", "repos_url": "https://api.github.com/users/Chouvic/repos", "events_url": "https://api.github.com/users/Chouvic/events{/privacy}", "received_events_url": "https://api.github.com/users/Chouvic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359606, "node_id": "MDU6TGFiZWw0MDM1OTYwNg==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T11:55:50Z", "updated_at": "2020-06-17T13:24:39Z", "closed_at": "2020-06-17T13:24:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nIf the introspection_token is not correct in the resource server, then a JSONDecoderError is raised when there is a token to be verified via oauth2_provider. This kind of logger error and exception would make the debugging procedure quite complicated because the user wouldn't know the cause of why there is a JSON_DecoderError.\r\n\r\nRelated method: [oauth2_validators.py line 307 - 311.\r\n](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L307)\r\n\r\nExample traceback in resource server when the authentication server returns a 403 response to the resource server.\r\n```\r\nIntrospection: Failed to parse response as json\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\oauth2_provider\\oauth2_validators.py\", line 308, in _get_token_from_authentication_server\r\n    content = response.json()\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\models.py\", line 897, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"C:\\Python37\\lib\\json\\__init__.py\", line 348, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"C:\\Python37\\lib\\json\\decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"C:\\Python37\\lib\\json\\decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nIf the response from authentication server is not successful(e.g. status code is not 200), then an exception should be logged with the response's status code and its cause.\r\n\r\nE.g. If we add the following code block before [line 307](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L307):\r\n```\r\n        if response.status_code != 200:\r\n            log.exception(\"Introspection: Failed to get a valid response \"\r\n                          \"from authentication server. status code ={}, \"\r\n                          \"reason {}\".format(response.status_code, \r\n                                             response.reason))\r\n```\r\n\r\nThen, the traceback error message would be:\r\n```\r\nIntrospection: Failed to get a valid response from authentication server. status code =403, reason Forbidden\r\nTraceback (most recent call last):\r\n  File \"/home/jun/.local/share/virtualenvs/maio-engine-OAc_wQKR/lib/python3.8/site-packages/oauth2_provider/oauth2_validators.py\", line 371, in validate_bearer_token\r\n    access_token = AccessToken.objects.select_related(\"application\", \"user\").get(token=token)\r\n  File \"/home/jun/.local/share/virtualenvs/maio-engine-OAc_wQKR/lib/python3.8/site-packages/django/db/models/query.py\", line 406, in get\r\n    raise self.model.DoesNotExist(\r\noauth2_provider.models.AccessToken.DoesNotExist: AccessToken matching query does not exist.\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nIdeally, all connections with authentication server using RESOURCE_SERVER_AUTH_TOKEN should return the error messages and its status code back to resource server if the response is not successful.\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\nResponse from authentication server:\r\n`WARNING 2020-06-16 11:53:11,274 basehttp 18318 140462266509056 \"POST /oauth2/introspect/ HTTP/1.1\" 403 0`\r\n\r\nTraceback image without verification:\r\n![image](https://user-images.githubusercontent.com/33321001/84770924-632a5b00-afd0-11ea-8091-5965c56b77ad.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/845", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/845/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/845/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/845", "id": 629391472, "node_id": "MDU6SXNzdWU2MjkzOTE0NzI=", "number": 845, "title": "Status 500 when trying to renew token using refresh_token from logged out user", "user": {"login": "panteparak", "id": 16161996, "node_id": "MDQ6VXNlcjE2MTYxOTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/16161996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panteparak", "html_url": "https://github.com/panteparak", "followers_url": "https://api.github.com/users/panteparak/followers", "following_url": "https://api.github.com/users/panteparak/following{/other_user}", "gists_url": "https://api.github.com/users/panteparak/gists{/gist_id}", "starred_url": "https://api.github.com/users/panteparak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panteparak/subscriptions", "organizations_url": "https://api.github.com/users/panteparak/orgs", "repos_url": "https://api.github.com/users/panteparak/repos", "events_url": "https://api.github.com/users/panteparak/events{/privacy}", "received_events_url": "https://api.github.com/users/panteparak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T17:44:14Z", "updated_at": "2020-06-04T07:04:57Z", "closed_at": "2020-06-04T07:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAttempted call token renew by using refresh_token of a already logged out user caused error 500\r\n\r\n**To Reproduce**\r\nLogin -> Remember refresh_token -> revoke_token -> call /token/ with grant_type `refresh_token`\r\n<img width=\"1235\" alt=\"Screen Shot 2563-06-03 at 00 32 19\" src=\"https://user-images.githubusercontent.com/16161996/83552016-51a67500-a533-11ea-8dac-985dfde55dd4.png\">\r\n\r\n\r\n**Expected behavior**\r\nExpected some sort of 401, 403 etc\r\n\r\n**Version**\r\n<!-- Version of django-oauth-toolkit -->\r\ndjango-oauth-toolkit 1.3.2\r\ndrf 3.11.0\r\ndjango 3.0.6\r\n\r\n<!-- Have you tested with the latest version and/or master branch? -->\r\n<!-- Replace '[ ]' with '[x]' to indicate that. -->\r\n- [x] I have tested with the latest published release and it's still a problem.\r\n- [ ] I have tested with the master branch and it's still a problem.\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/844", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/844/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/844/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/844", "id": 626785103, "node_id": "MDU6SXNzdWU2MjY3ODUxMDM=", "number": 844, "title": "Best practice for for creating a user based token for 3rd party apps in Django", "user": {"login": "andrijan", "id": 250780, "node_id": "MDQ6VXNlcjI1MDc4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/250780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrijan", "html_url": "https://github.com/andrijan", "followers_url": "https://api.github.com/users/andrijan/followers", "following_url": "https://api.github.com/users/andrijan/following{/other_user}", "gists_url": "https://api.github.com/users/andrijan/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrijan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrijan/subscriptions", "organizations_url": "https://api.github.com/users/andrijan/orgs", "repos_url": "https://api.github.com/users/andrijan/repos", "events_url": "https://api.github.com/users/andrijan/events{/privacy}", "received_events_url": "https://api.github.com/users/andrijan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T20:13:40Z", "updated_at": "2020-08-07T15:39:41Z", "closed_at": "2020-08-07T15:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an application that needs users to give access to a 3rd party application.\r\n\r\nThe requirements are that the 3rd party application has the same permissions as the user (acts on the user's behalf)\r\n\r\nThe 3rd party application has no frontend, so the oauth2 redirection flow doesn't quite work.\r\n\r\nMy initial thought was to create a model for 3rd-party applications and the User can add their own apps.\r\n\r\nBy adding an app, the user would receive a app ID (or client id) and a app Secret (or client secret). The user gives the 3rd party app this information and it can request a Bearer Token once (After that, this combination of ID and Secret won't work). That Bearer Token will live for X seconds, but the application can refresh the Token with a Refresh Token it will get back as well.\r\n\r\nI realize this looks almost identical to Oauth2, but I haven't figured out how to achieve it with Django Oauth Toolkit at least.\r\n\r\nAny recommendations?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/836", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/836/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/836/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/836/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/836", "id": 611517896, "node_id": "MDU6SXNzdWU2MTE1MTc4OTY=", "number": 836, "title": "define access token scopes per resource per action", "user": {"login": "JialunC", "id": 17030942, "node_id": "MDQ6VXNlcjE3MDMwOTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/17030942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JialunC", "html_url": "https://github.com/JialunC", "followers_url": "https://api.github.com/users/JialunC/followers", "following_url": "https://api.github.com/users/JialunC/following{/other_user}", "gists_url": "https://api.github.com/users/JialunC/gists{/gist_id}", "starred_url": "https://api.github.com/users/JialunC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JialunC/subscriptions", "organizations_url": "https://api.github.com/users/JialunC/orgs", "repos_url": "https://api.github.com/users/JialunC/repos", "events_url": "https://api.github.com/users/JialunC/events{/privacy}", "received_events_url": "https://api.github.com/users/JialunC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-03T22:00:44Z", "updated_at": "2020-06-10T19:14:39Z", "closed_at": "2020-06-10T19:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello community,\r\n\r\nI am trying to make scopes more granular. I have two models, one is User, and the other one is Listing. I am trying to achieve this:\r\n\r\nIf the scope is `read_user, read_listing`, then the token can only read user and listings.\r\nIf the scope is `read_user, create_listing`, then the token can only read user, and create listings.\r\n\r\nI know scope can be either action(read, write) or resource (user, listing). Is there a way to achieve this out of the box with this library.\r\n\r\nThank you everyone! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/824", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/824/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/824/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/824", "id": 590885818, "node_id": "MDU6SXNzdWU1OTA4ODU4MTg=", "number": 824, "title": "Getting \"Not Found: /accounts/login/\" error", "user": {"login": "ashiksl", "id": 62906253, "node_id": "MDQ6VXNlcjYyOTA2MjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/62906253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashiksl", "html_url": "https://github.com/ashiksl", "followers_url": "https://api.github.com/users/ashiksl/followers", "following_url": "https://api.github.com/users/ashiksl/following{/other_user}", "gists_url": "https://api.github.com/users/ashiksl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashiksl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashiksl/subscriptions", "organizations_url": "https://api.github.com/users/ashiksl/orgs", "repos_url": "https://api.github.com/users/ashiksl/repos", "events_url": "https://api.github.com/users/ashiksl/events{/privacy}", "received_events_url": "https://api.github.com/users/ashiksl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T08:01:50Z", "updated_at": "2020-04-08T15:53:35Z", "closed_at": "2020-04-08T15:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am setting the OAuth server with this toolkit (using the https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html). I am able to create the Auth2 client application with the Auth code grant. And configured the client ID and client secret on the Postman tool.\r\nWhen I try the request token from postman tool I am seeing the below error on server side.\r\n[30/Mar/2020 19:03:03] \"GET /o/authorize?client_id=NsYV8XeU4JBZCvxGd0P7OvT1pkqnfSHksTGELMSK&scope=&state=1009630&redirect_uri=https%3A%2F%2Fwww.getpostman.com%2Foauth2%2Fcallback&response_type=code HTTP/1.1\" 301 0\r\n[30/Mar/2020 19:03:03] \"GET /o/authorize/?client_id=NsYV8XeU4JBZCvxGd0P7OvT1pkqnfSHksTGELMSK&scope=&state=1009630&redirect_uri=https%3A%2F%2Fwww.getpostman.com%2Foauth2%2Fcallback&response_type=code HTTP/1.1\" 302 0\r\nNot Found: /accounts/login/\r\n[30/Mar/2020 19:03:04] \"GET /accounts/login/?next=/o/authorize/%3Fclient_id%3DNsYV8XeU4JBZCvxGd0P7OvT1pkqnfSHksTGELMSK%26scope%3D%26state%3D1009630%26redirect_uri%3Dhttps%253A%252F%252Fwww.getpostman.com%252Foauth2%252Fcallback%26response_type%3Dcode HTTP/1.1\" 404 2298\r\n\r\nPlease help in resolving this issue\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/823", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/823/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/823/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/823", "id": 588989268, "node_id": "MDU6SXNzdWU1ODg5ODkyNjg=", "number": 823, "title": "Generate access token using user instance (not username, password and grant_type)", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T09:07:30Z", "updated_at": "2020-03-30T12:21:23Z", "closed_at": "2020-03-30T12:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm using **Django REST Framework** and using this library to provide token based authentication to the frontend applications.\r\n\r\nThere is Login with Google implementation using `django-allauth` plugin.\r\n\r\nI want to generate access token when user login using social account.\r\n\r\nFor handling social login and generating social account, I have created this view.\r\n\r\n```\r\nclass GoogleLoginView(LoginView):\r\n    \"\"\"\r\n    Enable login using google\r\n    \"\"\"\r\n    adapter_class = GoogleOAuth2Adapter\r\n    serializer_class = CustomSocialLoginSerializer\r\n\r\n    def login(self):\r\n        self.user = self.serializer.validated_data['user']\r\n        self.token = TokenView().create_token_response(self.request)\r\n        return self.token\r\n\r\n    def post(self, request, *args, **kwargs):\r\n        self.request = request\r\n        self.serializer = self.get_serializer(\r\n            data=self.request.data,\r\n            context={'request': request}\r\n        )\r\n        self.serializer.is_valid(raise_exception=True)\r\n\r\n        url, header, body, status_ = self.login()\r\n        return Response(json.loads(body), status=status_)\r\n```\r\n\r\nThe request data has `user` instance along with `client_id` and `client_secret` of the application.\r\n\r\nBut this gives error\r\n```\r\n'{\"error\": \"unsupported_grant_type\"}'\r\n```\r\n\r\n**To Reproduce**\r\n<!-- Steps to reproduce the behavior -->\r\n\r\n**Expected behavior**\r\nThere should a method that can be used to generate access token using `client_id`, `client_secret` and `user` instance.\r\n\r\n**Version**\r\ndjango-oauth-toolkit==1.3.0\r\n\r\n<!-- Have you tested with the latest version and/or master branch? -->\r\n<!-- Replace '[ ]' with '[x]' to indicate that. -->\r\n- [ ] I have tested with the latest published release and it's still a problem.\r\n- [ ] I have tested with the master branch and it's still a problem.\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/821", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/821/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/821/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/821", "id": 587700591, "node_id": "MDU6SXNzdWU1ODc3MDA1OTE=", "number": 821, "title": "request.user in custom middleware gives AnonymousUser", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541678631, "node_id": "MDU6TGFiZWw1NDE2Nzg2MzE=", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/api", "name": "api", "color": "f9d0c4", "default": false, "description": null}, {"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 46846133, "node_id": "MDU6TGFiZWw0Njg0NjEzMw==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-25T13:34:42Z", "updated_at": "2020-06-09T18:27:10Z", "closed_at": "2020-06-09T18:27:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn my application, based on the user property, I need to change the request.user to a different user.\r\n```\r\nclass CustomMiddleware:\r\n  def __init__(self, get_response):\r\n     self.get_response = get_response\r\n\r\n  def __call__(self, request):\r\n     print(request.user)\r\n\r\n     response = self.get_response(request)\r\n     return response\r\n```\r\n\r\nand the `MIDDLEWARE` stack is\r\n```\r\nMIDDLEWARE = [\r\n    'django_hosts.middleware.HostsRequestMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n\r\n    'whitenoise.middleware.WhiteNoiseMiddleware',\r\n\r\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\r\n    'silk.middleware.SilkyMiddleware',\r\n    'django_hosts.middleware.HostsResponseMiddleware',\r\n\r\n    'oauth2_provider.middleware.OAuth2TokenMiddleware',\r\n    'myapp.middleware.CustomMiddleware',\r\n]\r\n```\r\n\r\n**Rest Framework Configuration**\r\n```\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': [\r\n        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',\r\n    ]\r\n}\r\n```\r\n\r\nThe `request.user` in the `CustomMiddleware` gives `AnonymousUser` object even though user is authenticated. It gives user object in the views.\r\n\r\nSame middleware is working fine when using `admin` panel.\r\n\r\n**Expected behavior**\r\nIt should return the authenticated user.\r\n\r\n**Version**\r\ndjango-oauth-toolkit==1.3.0\r\n\r\n<!-- Have you tested with the latest version and/or master branch? -->\r\n- [ ] I have tested with the latest published release and it's still a problem.\r\n- [ ] I have tested with the master branch and it's still a problem.\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/819", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/819/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/819/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/819", "id": 587226013, "node_id": "MDU6SXNzdWU1ODcyMjYwMTM=", "number": 819, "title": "Release 1.3.1 is incorrect on pypi", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/18", "html_url": "https://github.com/jazzband/django-oauth-toolkit/milestone/18", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/18/labels", "id": 5233964, "node_id": "MDk6TWlsZXN0b25lNTIzMzk2NA==", "number": 18, "title": "1.3.2", "description": "", "creator": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2020-03-24T21:18:54Z", "updated_at": "2020-04-10T14:21:26Z", "due_on": "2020-03-25T07:00:00Z", "closed_at": "2020-04-10T14:21:26Z"}, "comments": 3, "created_at": "2020-03-24T19:26:13Z", "updated_at": "2020-03-26T04:13:28Z", "closed_at": "2020-03-26T04:13:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nI inadvertently pushed release 1.3.1 to pypi with a migration that was laying around from a dev branch.\r\n\r\n**Version**\r\n<!-- Version of django-oauth-toolkit -->\r\n1.3.1\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\nI have maintainer but not owner access in pypi so can't delete the incorrect package.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/816", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/816/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/816/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/816", "id": 584769447, "node_id": "MDU6SXNzdWU1ODQ3Njk0NDc=", "number": 816, "title": "how can i implement anonymous users?", "user": {"login": "FelipeSanchezCalzada", "id": 24756466, "node_id": "MDQ6VXNlcjI0NzU2NDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/24756466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelipeSanchezCalzada", "html_url": "https://github.com/FelipeSanchezCalzada", "followers_url": "https://api.github.com/users/FelipeSanchezCalzada/followers", "following_url": "https://api.github.com/users/FelipeSanchezCalzada/following{/other_user}", "gists_url": "https://api.github.com/users/FelipeSanchezCalzada/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelipeSanchezCalzada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelipeSanchezCalzada/subscriptions", "organizations_url": "https://api.github.com/users/FelipeSanchezCalzada/orgs", "repos_url": "https://api.github.com/users/FelipeSanchezCalzada/repos", "events_url": "https://api.github.com/users/FelipeSanchezCalzada/events{/privacy}", "received_events_url": "https://api.github.com/users/FelipeSanchezCalzada/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46641940, "node_id": "MDU6TGFiZWw0NjY0MTk0MA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/help-wanted", "name": "help-wanted", "color": "009800", "default": false, "description": null}, {"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T00:08:17Z", "updated_at": "2020-03-20T01:56:12Z", "closed_at": "2020-03-20T01:56:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, suppose I want to protect the /register endpoint. The user does not yet have credentials (username + password). what would be the correct way to protect my api from external clients to mine with this toolkit?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/815", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/815/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/815/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/815", "id": 584351005, "node_id": "MDU6SXNzdWU1ODQzNTEwMDU=", "number": 815, "title": "Source to the OAuth Playground Heroku App?", "user": {"login": "winsmith", "id": 954120, "node_id": "MDQ6VXNlcjk1NDEyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/954120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/winsmith", "html_url": "https://github.com/winsmith", "followers_url": "https://api.github.com/users/winsmith/followers", "following_url": "https://api.github.com/users/winsmith/following{/other_user}", "gists_url": "https://api.github.com/users/winsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/winsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/winsmith/subscriptions", "organizations_url": "https://api.github.com/users/winsmith/orgs", "repos_url": "https://api.github.com/users/winsmith/repos", "events_url": "https://api.github.com/users/winsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/winsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46641940, "node_id": "MDU6TGFiZWw0NjY0MTk0MA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/help-wanted", "name": "help-wanted", "color": "009800", "default": false, "description": null}, {"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-19T11:39:37Z", "updated_at": "2020-03-23T09:28:08Z", "closed_at": "2020-03-23T09:28:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- What is your question? -->\r\nAfter creating a provider using OAuth Toolkit (really awesome documentation for that, btw), I want to have a separate app instance that uses the provider as auth server, but I don't really know how. \r\n\r\nThe documentation for this is a bit unclear to me, either this topic is missing or I just don't get it. Either way, it would help me a lot if I could get a look at the source of the OAuth Playground app that's mentioned in the tutorial. \r\n\r\nIs this app open source, and if yes, does anyone have a link? If not, would the maintainers consider open sourcing the app, or relevant parts of it? Thanks :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/811", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/811/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/811/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/811", "id": 580676418, "node_id": "MDU6SXNzdWU1ODA2NzY0MTg=", "number": 811, "title": "ModuleNotFoundError: No module named 'oauth2_provider'", "user": {"login": "yxm1277", "id": 38699391, "node_id": "MDQ6VXNlcjM4Njk5Mzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/38699391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxm1277", "html_url": "https://github.com/yxm1277", "followers_url": "https://api.github.com/users/yxm1277/followers", "following_url": "https://api.github.com/users/yxm1277/following{/other_user}", "gists_url": "https://api.github.com/users/yxm1277/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxm1277/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxm1277/subscriptions", "organizations_url": "https://api.github.com/users/yxm1277/orgs", "repos_url": "https://api.github.com/users/yxm1277/repos", "events_url": "https://api.github.com/users/yxm1277/events{/privacy}", "received_events_url": "https://api.github.com/users/yxm1277/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-13T15:28:47Z", "updated_at": "2020-03-17T20:59:42Z", "closed_at": "2020-03-17T20:56:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run drf-yasg, but I got \r\nModuleNotFoundError: No module named 'oauth2_provider'\r\nMy setting.py\r\n\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'oauth2_provider',\r\n    'corsheaders',\r\n\r\n    'drf_yasg',\r\n    'snippets',\r\n    'users',\r\n    'articles',\r\n    'todo',\r\n    'people'\r\n]\r\n\r\n\r\nST_FRAMEWORK = {\r\n    'DEFAULT_PERMISSION_CLASSES': (\r\n        'rest_framework.permissions.IsAuthenticated',\r\n    ),\r\n    'DEFAYLTA_AUTHENTICATION_CLASSED': (\r\n        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',\r\n    )\r\n}\r\n\r\nOAUTH2_CLIENT_ID = '12ee6bgxtpSEgP8TioWcHSXOiDBOUrVav4mRbVEs'\r\nOAUTH2_CLIENT_SECRET = '5FvYALo7W4uNnWE2ySw7Yzpkxh9PSf5GuY37RvOys00ydEyph64dbl1ECOKI9ceQ' \\\r\n                       'AKoz0JpiVQtq0DUnsxNhU3ubrJgZ9YbtiXymbLGJq8L7n4fiER7gXbXaNSbze3BN'\r\nOAUTH2_APP_NAME = 'drf-yasg OAuth2 provider'\r\n\r\nOAUTH2_REDIRECT_URL = static_lazy('drf-yasg/swagger-ui-dist/oauth2-redirect.html')\r\nOAUTH2_AUTHORIZE_URL = reverse_lazy('oauth2_provider:authorize')\r\nOAUTH2_TOKEN_URL = reverse_lazy('oauth2_provider:token')\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/809", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/809/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/809/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/809", "id": 578967428, "node_id": "MDU6SXNzdWU1Nzg5Njc0Mjg=", "number": 809, "title": "Column `source_refresh_token_id` of `oauth2_provider_accesstoken` does not exist", "user": {"login": "mauroveron", "id": 129478, "node_id": "MDQ6VXNlcjEyOTQ3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/129478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mauroveron", "html_url": "https://github.com/mauroveron", "followers_url": "https://api.github.com/users/mauroveron/followers", "following_url": "https://api.github.com/users/mauroveron/following{/other_user}", "gists_url": "https://api.github.com/users/mauroveron/gists{/gist_id}", "starred_url": "https://api.github.com/users/mauroveron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mauroveron/subscriptions", "organizations_url": "https://api.github.com/users/mauroveron/orgs", "repos_url": "https://api.github.com/users/mauroveron/repos", "events_url": "https://api.github.com/users/mauroveron/events{/privacy}", "received_events_url": "https://api.github.com/users/mauroveron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541678631, "node_id": "MDU6TGFiZWw1NDE2Nzg2MzE=", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/api", "name": "api", "color": "f9d0c4", "default": false, "description": null}, {"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 46846133, "node_id": "MDU6TGFiZWw0Njg0NjEzMw==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T02:25:37Z", "updated_at": "2020-03-17T21:01:57Z", "closed_at": "2020-03-17T21:01:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm getting an error when creating a token that refers to a refresh token:\r\n\r\n```\r\n14.1.51.50 - - [11/Mar/2020 00:21:20] \"GET /o/authorize/?state=<hidden>&redirect_uri=https%3A%2F%2Fmyapp.dev%2Flogin%2Foauth%2Fcallback%2F&response_type=code&client_id=QZQffAvhGPmiQz3gwv2HU0MYV61XrmCu5WubnEBw HTTP/1.1\" 302 -\r\nDEBUG 2020-03-11 00:21:22,097 oauthlib.oauth2.rfc6749.endpoints.token Dispatching grant_type authorization_code request to <oauthlib.oauth2.rfc6749.grant_types.authorization_code.AuthorizationCodeGrant object at 0x7f666c555f10>.\r\nDEBUG 2020-03-11 00:21:22,131 oauthlib.oauth2.rfc6749.grant_types.authorization_code Using provided redirect_uri https://myapp.dev/login/oauth/callback/\r\nDEBUG 2020-03-11 00:21:22,136 oauthlib.oauth2.rfc6749.grant_types.authorization_code Token request validation ok for <oauthlib.Request SANITIZED>.\r\n14.1.51.50 - - [11/Mar/2020 00:21:22] \"POST /o/token/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\npsycopg2.ProgrammingError: column \"source_refresh_token_id\" of relation \"oauth2_provider_accesstoken\" does not exist\r\nLINE 1: ...RT INTO \"oauth2_provider_accesstoken\" (\"user_id\", \"source_re...\r\n                                                             ^\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/venv/lib/python3.7/site-packages/django/contrib/staticfiles/handlers.py\", line 65, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/wsgi.py\", line 141, in __call__\r\n    response = self.get_response(request)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/venv/lib/python3.7/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/venv/lib/python3.7/site-packages/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/lib/python3.7/contextlib.py\", line 74, in inner\r\n    return func(*args, **kwds)\r\n  File \"/venv/lib/python3.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/views/decorators/debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n    return view(request, *args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/oauth2_provider/views/base.py\", line 260, in post\r\n    url, headers, body, status = self.create_token_response(request)\r\n  File \"/venv/lib/python3.7/site-packages/oauth2_provider/views/mixins.py\", line 124, in create_token_response\r\n    return core.create_token_response(request)\r\n  File \"/venv/lib/python3.7/site-packages/oauth2_provider/oauth2_backends.py\", line 145, in create_token_response\r\n    headers, extra_credentials)\r\n  File \"/venv/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 116, in wrapper\r\n    return f(endpoint, uri, *args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/token.py\", line 119, in create_token_response\r\n    request, self.default_token_type)\r\n  File \"/venv/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py\", line 313, in create_token_response\r\n    self.request_validator.save_token(token, request)\r\n  File \"/venv/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/request_validator.py\", line 306, in save_token\r\n    return self.save_bearer_token(token, request, *args, **kwargs)\r\n  File \"/usr/lib/python3.7/contextlib.py\", line 74, in inner\r\n    return func(*args, **kwds)\r\n  File \"/venv/lib/python3.7/site-packages/oauth2_provider/oauth2_validators.py\", line 548, in save_bearer_token\r\n    source_refresh_token=refresh_token_instance,\r\n  File \"/venv/lib/python3.7/site-packages/oauth2_provider/oauth2_validators.py\", line 572, in _create_access_token\r\n    source_refresh_token=source_refresh_token,\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/query.py\", line 422, in create\r\n    obj.save(force_insert=True, using=self.db)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 741, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 779, in save_base\r\n    force_update, using, update_fields,\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 870, in _save_table\r\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/base.py\", line 908, in _do_insert\r\n    using=using, raw=raw)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/query.py\", line 1186, in _insert\r\n    return query.get_compiler(using=using).execute_sql(return_id)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/models/sql/compiler.py\", line 1368, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 99, in execute\r\n    return super().execute(sql, params)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 67, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 76, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/venv/lib/python3.7/site-packages/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/venv/lib/python3.7/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\ndjango.db.utils.ProgrammingError: column \"source_refresh_token_id\" of relation \"oauth2_provider_accesstoken\" does not exist\r\nLINE 1: ...RT INTO \"oauth2_provider_accesstoken\" (\"user_id\", \"source_re...\r\n                                                             ^\r\n```\r\n\r\nThis started happening after an upgrade to `1.3.0` from `1.0.0`. \r\n\r\nI was able to track down the missing column to the [squashed migration 0001 here](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/migrations/0001_initial.py#L57)\r\n\r\nI'm not sure if the column should be re-introduced or the code that refers to the refresh token should be updated?\r\n\r\n**To Reproduce**\r\nThe app just does a GET request to the `/authorize` endpoint and then POST request to the `/token` endpoint, with the following details:\r\n\r\n```\r\n{\r\nu'client_id': u'QZQffAvhGPmiQz3gwv2HU0MYV61XrmCu5WubnEBw',\r\nu'client_secret': u'THE_SECRET',\r\nu'code': u'RAoSfks5cA0FZomN6Tnmc7lkyAk0K4',\r\nu'grant_type': u'authorization_code',\r\nu'redirect_uri': 'https://myapp.dev/login/oauth/callback/'\r\n}\r\n```\r\n\r\nThis is where the error with the `source_refresh_token_id` happens\r\n\r\n**Expected behavior**\r\nI should get the access token\r\n\r\n**Version**\r\n1.3.0 after an upgrade from 1.0.0\r\n\r\n<!-- Have you tested with the latest version and/or master branch? -->\r\n- [x] I have tested with the latest published release and it's still a problem.\r\n- [x] I have tested with the master branch and it's still a problem.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/808", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/808/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/808/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/808", "id": 577599934, "node_id": "MDU6SXNzdWU1Nzc1OTk5MzQ=", "number": 808, "title": "AttributeError: get_full_path when running any rest_framework.test.APITestCase", "user": {"login": "dms-cat", "id": 45862333, "node_id": "MDQ6VXNlcjQ1ODYyMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/45862333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dms-cat", "html_url": "https://github.com/dms-cat", "followers_url": "https://api.github.com/users/dms-cat/followers", "following_url": "https://api.github.com/users/dms-cat/following{/other_user}", "gists_url": "https://api.github.com/users/dms-cat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dms-cat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dms-cat/subscriptions", "organizations_url": "https://api.github.com/users/dms-cat/orgs", "repos_url": "https://api.github.com/users/dms-cat/repos", "events_url": "https://api.github.com/users/dms-cat/events{/privacy}", "received_events_url": "https://api.github.com/users/dms-cat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541678631, "node_id": "MDU6TGFiZWw1NDE2Nzg2MzE=", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/api", "name": "api", "color": "f9d0c4", "default": false, "description": null}, {"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 46846133, "node_id": "MDU6TGFiZWw0Njg0NjEzMw==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-09T01:06:15Z", "updated_at": "2020-03-16T07:51:06Z", "closed_at": "2020-03-16T07:51:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAfter upgrading from django-oauth-toolkit==1.2.0 to django-oauth-toolkit==1.3.0 every single test using `from rest_framework.test import APITestCase` and then calling `self.client.post` and the like fails with this stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/utils/decorators.py\", line 45, in _wrapper\r\n    return bound_method(*args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/views/decorators/debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n    return view(request, *args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/views/base.py\", line 260, in post\r\n    url, headers, body, status = self.create_token_response(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/views/mixins.py\", line 124, in create_token_response\r\n    return core.create_token_response(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/oauth2_backends.py\", line 145, in create_token_response\r\n    headers, extra_credentials)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 116, in wrapper\r\n    return f(endpoint, uri, *args, **kwargs)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/endpoints/token.py\", line 119, in create_token_response\r\n    request, self.default_token_type)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py\", line 101, in create_token_response\r\n    self.validate_token_request(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py\", line 184, in validate_token_request\r\n    request.password, request.client, request):\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/oauth2_validators.py\", line 611, in validate_user\r\n    u = authenticate(request, username=username, password=password)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/django/contrib/auth/__init__.py\", line 73, in authenticate\r\n    user = backend.authenticate(request, **credentials)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/backends.py\", line 17, in authenticate\r\n    valid, r = OAuthLibCore.verify_request(request, scopes=[])\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/oauth2_backends.py\", line 172, in verify_request\r\n    uri, http_method, body, headers = self._extract_params(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/oauth2_backends.py\", line 58, in _extract_params\r\n    uri = self._get_escaped_full_path(request)\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauth2_provider/oauth2_backends.py\", line 34, in _get_escaped_full_path\r\n    parsed = list(urlparse(request.get_full_path()))\r\n  File \"/src/app/.venv/lib/python3.6/site-packages/oauthlib/common.py\", line 436, in __getattr__\r\n    raise AttributeError(name)\r\nAttributeError: get_full_path\r\n```\r\n\r\n**To Reproduce**\r\n\r\nTest case:\r\n\r\n```\r\nfrom django.conf import settings\r\nfrom django.contrib.auth.models import User\r\nfrom rest_framework import status\r\nfrom rest_framework.test import APITestCase\r\n\r\n\r\nclass OauthAuthenticationTest(APITestCase):\r\n    def test_should_should_return_ok_when_valid_credentials_passed(self) -> None:\r\n        username = \"user\"\r\n        password = \"pw\"\r\n        User.objects.create_user(username=username, email=\"test@example.com\", password=password)\r\n        response = self.client.post(\r\n            \"/api/oauth/token/\",\r\n            {\r\n                \"grant_type\": \"password\",\r\n                \"username\": username,\r\n                \"password\": password,\r\n                \"client_id\": settings.REACT_APP_OAUTH_CLIENT_ID,\r\n            }\r\n        )\r\n        self.assertEqual(status.HTTP_200_OK, response.status_code)\r\n```\r\n\r\n**Expected behavior**\r\nThis test should pass, as it did with version 1.2.0.\r\n\r\n**Version**\r\n1.3.0\r\n\r\n- [x] I have tested with the latest published release and it's still a problem.\r\n- [ ] I have tested with the master branch and it's still a problem.\r\n\r\n**Additional context**\r\n\r\nUsing django==2.2.11 and djangorestframework==3.11.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/807", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/807/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/807/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/807", "id": 577438789, "node_id": "MDU6SXNzdWU1Nzc0Mzg3ODk=", "number": 807, "title": "unsupported_grant_type on rest example", "user": {"login": "Blanen", "id": 7236824, "node_id": "MDQ6VXNlcjcyMzY4MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7236824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blanen", "html_url": "https://github.com/Blanen", "followers_url": "https://api.github.com/users/Blanen/followers", "following_url": "https://api.github.com/users/Blanen/following{/other_user}", "gists_url": "https://api.github.com/users/Blanen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blanen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blanen/subscriptions", "organizations_url": "https://api.github.com/users/Blanen/orgs", "repos_url": "https://api.github.com/users/Blanen/repos", "events_url": "https://api.github.com/users/Blanen/events{/privacy}", "received_events_url": "https://api.github.com/users/Blanen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541678631, "node_id": "MDU6TGFiZWw1NDE2Nzg2MzE=", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/api", "name": "api", "color": "f9d0c4", "default": false, "description": null}, {"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 46846133, "node_id": "MDU6TGFiZWw0Njg0NjEzMw==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-03-08T03:32:31Z", "updated_at": "2020-03-23T14:37:52Z", "closed_at": "2020-03-23T14:37:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nDoing the rest example with:\r\n\r\n```\r\nasgiref==3.2.3\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\nDjango==3.0.4\r\ndjango-oauth-toolkit==1.3.0\r\ndjangorestframework==3.11.0\r\nidna==2.9\r\noauthlib==3.1.0\r\npsycopg2==2.8.4\r\npytz==2019.3\r\nrequests==2.23.0\r\nsqlparse==0.3.1\r\nurllib3==1.25.8\r\n```\r\n\r\ndoesn't work and simply returns this error:\r\n`{\"error\": \"unsupported_grant_type\"}`\r\n\r\nand this in the log:\r\n\r\n```\r\nBad Request: /o/token/\r\n[08/Mar/2020 04:31:42] \"POST /o/token/ HTTP/1.1\" 400 35\r\n```\r\n\r\n**To Reproduce**\r\nDo the example\r\n\r\n**Expected behavior**\r\nIt should work.\r\n\r\n**Version**\r\n<!-- Version of django-oauth-toolkit -->\r\n\r\n<!-- Have you tested with the latest version and/or master branch? -->\r\n- [x] I have tested with the latest published release and it's still a problem.\r\n- [x] I have tested with the master branch and it's still a problem. \r\n\r\n\r\n**Additional context**\r\nQuite hard to believe this, honestly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/804", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/804/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/804/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/804", "id": 575424928, "node_id": "MDU6SXNzdWU1NzU0MjQ5Mjg=", "number": 804, "title": "push release 1.3.0 to pypi", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14", "html_url": "https://github.com/jazzband/django-oauth-toolkit/milestone/14", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14/labels", "id": 5127090, "node_id": "MDk6TWlsZXN0b25lNTEyNzA5MA==", "number": 14, "title": "1.3", "description": "It's time for a release. Last release was 1.2.0 in 2018.", "creator": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2020-02-20T19:01:45Z", "updated_at": "2020-03-24T12:48:34Z", "due_on": "2020-03-01T08:00:00Z", "closed_at": "2020-03-24T12:48:34Z"}, "comments": 11, "created_at": "2020-03-04T14:01:46Z", "updated_at": "2020-03-24T13:36:29Z", "closed_at": "2020-03-14T19:24:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Push release 1.3.0 to pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/802", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/802/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/802/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/802", "id": 574827475, "node_id": "MDU6SXNzdWU1NzQ4Mjc0NzU=", "number": 802, "title": "Getting error: \"unsupported_grant_type\" with grant_type: 'authorization_code'", "user": {"login": "godhar", "id": 19662952, "node_id": "MDQ6VXNlcjE5NjYyOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/19662952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/godhar", "html_url": "https://github.com/godhar", "followers_url": "https://api.github.com/users/godhar/followers", "following_url": "https://api.github.com/users/godhar/following{/other_user}", "gists_url": "https://api.github.com/users/godhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/godhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/godhar/subscriptions", "organizations_url": "https://api.github.com/users/godhar/orgs", "repos_url": "https://api.github.com/users/godhar/repos", "events_url": "https://api.github.com/users/godhar/events{/privacy}", "received_events_url": "https://api.github.com/users/godhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-03T17:31:57Z", "updated_at": "2020-03-10T15:03:32Z", "closed_at": "2020-03-10T15:03:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With these POST request params:\r\n     \r\ngrant_type: 'authorization_code',\r\n        redirect_uri: 'http://localhost:4200/dashboard',\r\n        client_id: 'CLIENT_ID',\r\n        code,\r\n        state,\r\n        verifier\r\n\r\nAnd header:\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n\r\nI am getting a 400, with message: {error: 'unsupported_grant_type'}\r\n\r\nSurely django supports 'authorization_code' grant type? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/796", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/796/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/796/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/796", "id": 573598527, "node_id": "MDU6SXNzdWU1NzM1OTg1Mjc=", "number": 796, "title": "Undo commented-out PEP8 tests", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14", "html_url": "https://github.com/jazzband/django-oauth-toolkit/milestone/14", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14/labels", "id": 5127090, "node_id": "MDk6TWlsZXN0b25lNTEyNzA5MA==", "number": 14, "title": "1.3", "description": "It's time for a release. Last release was 1.2.0 in 2018.", "creator": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2020-02-20T19:01:45Z", "updated_at": "2020-03-24T12:48:34Z", "due_on": "2020-03-01T08:00:00Z", "closed_at": "2020-03-24T12:48:34Z"}, "comments": 0, "created_at": "2020-03-01T19:11:42Z", "updated_at": "2020-03-02T01:49:28Z", "closed_at": "2020-03-02T01:49:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some flake8 tests were commented-out/disabled (with `--exit-zero`) from tox.ini (see #749 for example). Restore these tests and fix the code that caused them to fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/785", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/785/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/785/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/785/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/785", "id": 567168907, "node_id": "MDU6SXNzdWU1NjcxNjg5MDc=", "number": 785, "title": "Release 1.3", "user": {"login": "rhenter", "id": 2206875, "node_id": "MDQ6VXNlcjIyMDY4NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2206875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhenter", "html_url": "https://github.com/rhenter", "followers_url": "https://api.github.com/users/rhenter/followers", "following_url": "https://api.github.com/users/rhenter/following{/other_user}", "gists_url": "https://api.github.com/users/rhenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhenter/subscriptions", "organizations_url": "https://api.github.com/users/rhenter/orgs", "repos_url": "https://api.github.com/users/rhenter/repos", "events_url": "https://api.github.com/users/rhenter/events{/privacy}", "received_events_url": "https://api.github.com/users/rhenter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14", "html_url": "https://github.com/jazzband/django-oauth-toolkit/milestone/14", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14/labels", "id": 5127090, "node_id": "MDk6TWlsZXN0b25lNTEyNzA5MA==", "number": 14, "title": "1.3", "description": "It's time for a release. Last release was 1.2.0 in 2018.", "creator": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2020-02-20T19:01:45Z", "updated_at": "2020-03-24T12:48:34Z", "due_on": "2020-03-01T08:00:00Z", "closed_at": "2020-03-24T12:48:34Z"}, "comments": 10, "created_at": "2020-02-18T21:27:38Z", "updated_at": "2020-03-02T15:40:53Z", "closed_at": "2020-03-02T15:40:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some things we need to do for this release:\r\n\r\n- [x] update CHANGELOG. It was last updated with PR #668 yet there have been about 30 PRs merged since then. There must be *something* that rates being listed in the CHANGELOG! See https://keepachangelog.com/en/1.0.0/.\r\n- [x] make ONE CHANGELOG. There are currently two: [CHANGELOG.md](https://github.com/jazzband/django-oauth-toolkit/blob/master/CHANGELOG.md) and [docs/changelog.rst](https://github.com/jazzband/django-oauth-toolkit/blob/master/docs/changelog.rst).\r\n- [x] Update [docs/index.rst](https://github.com/jazzband/django-oauth-toolkit/blob/master/docs/index.rst) to reflect oauthlib versions required.\r\n- [x] update AUTHORS to reflect current contributors -- not updated in 3 years.\r\n- [x] consider updating CONTRIBUTING to more clearly require CHANGELOG, etc. updates with any merged PR. \r\n- [x] add a pull request template like [this example](https://github.com/django-json-api/django-rest-framework-json-api/blob/master/docs/pull_request_template.md)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/784", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/784/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/784/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/784", "id": 560997433, "node_id": "MDU6SXNzdWU1NjA5OTc0MzM=", "number": 784, "title": "How To Customize Responses for Invalid Credentials Given", "user": {"login": "mmohajer9", "id": 34323369, "node_id": "MDQ6VXNlcjM0MzIzMzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/34323369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmohajer9", "html_url": "https://github.com/mmohajer9", "followers_url": "https://api.github.com/users/mmohajer9/followers", "following_url": "https://api.github.com/users/mmohajer9/following{/other_user}", "gists_url": "https://api.github.com/users/mmohajer9/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmohajer9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmohajer9/subscriptions", "organizations_url": "https://api.github.com/users/mmohajer9/orgs", "repos_url": "https://api.github.com/users/mmohajer9/repos", "events_url": "https://api.github.com/users/mmohajer9/events{/privacy}", "received_events_url": "https://api.github.com/users/mmohajer9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-06T13:00:18Z", "updated_at": "2020-06-18T15:33:08Z", "closed_at": "2020-06-18T15:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi !\r\ni'm implementing **OTP** by over riding **OAuth2_VALIDATOR_CLASS** method called **validate_user**\r\n\r\nwhen the function returns false every time its response is \r\n`{\r\n  \"error\": \"invalid_grant\",\r\n  \"error_description\": \"Invalid credentials given.\"\r\n}\r\n`\r\nso i wanna change this to my customize response and i'm a little bit confused!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/782", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/782/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/782/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/782", "id": 558815858, "node_id": "MDU6SXNzdWU1NTg4MTU4NTg=", "number": 782, "title": "Sending empty Authorization Header just sets a default request.user", "user": {"login": "prossir", "id": 8839805, "node_id": "MDQ6VXNlcjg4Mzk4MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8839805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prossir", "html_url": "https://github.com/prossir", "followers_url": "https://api.github.com/users/prossir/followers", "following_url": "https://api.github.com/users/prossir/following{/other_user}", "gists_url": "https://api.github.com/users/prossir/gists{/gist_id}", "starred_url": "https://api.github.com/users/prossir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prossir/subscriptions", "organizations_url": "https://api.github.com/users/prossir/orgs", "repos_url": "https://api.github.com/users/prossir/repos", "events_url": "https://api.github.com/users/prossir/events{/privacy}", "received_events_url": "https://api.github.com/users/prossir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-03T03:17:24Z", "updated_at": "2020-02-03T04:33:27Z", "closed_at": "2020-02-03T04:33:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using a grant type :password and client: confidential application. If no authorization header is send with a request, the superuser that created that application becomes the user in that request and the other user can access all its information. Is there a way to block this behaviour?. Have I configured something wrong? Help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/781", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/781/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/781/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/781", "id": 557787715, "node_id": "MDU6SXNzdWU1NTc3ODc3MTU=", "number": 781, "title": "Subclassing grant model", "user": {"login": "indigodomo", "id": 5844438, "node_id": "MDQ6VXNlcjU4NDQ0Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5844438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indigodomo", "html_url": "https://github.com/indigodomo", "followers_url": "https://api.github.com/users/indigodomo/followers", "following_url": "https://api.github.com/users/indigodomo/following{/other_user}", "gists_url": "https://api.github.com/users/indigodomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/indigodomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indigodomo/subscriptions", "organizations_url": "https://api.github.com/users/indigodomo/orgs", "repos_url": "https://api.github.com/users/indigodomo/repos", "events_url": "https://api.github.com/users/indigodomo/events{/privacy}", "received_events_url": "https://api.github.com/users/indigodomo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T22:12:55Z", "updated_at": "2020-01-31T16:32:12Z", "closed_at": "2020-01-31T16:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the need to add a field to the grant model. I've subclassed thusly:\r\n\r\n    class GrantWithLicense(AbstractGrant):\r\n        transaction_id = models.IntegerField(\"Transaction ID\", blank=True, null=True)\r\n\r\nin a different app (account) models.py. When I attempt to **makemigration**, I get:\r\n\r\n\tTracking file by folder pattern:  migrations\r\n\tTraceback (most recent call last):\r\n\t  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pycharm/django_manage.py\", line 52, in <module>\r\n\t\trun_command()\r\n\t  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pycharm/django_manage.py\", line 46, in run_command\r\n\t\trun_module(manage_file, None, '__main__', True)\r\n\t  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 205, in run_module\r\n\t\treturn _run_module_code(code, init_globals, run_name, mod_spec)\r\n\t  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 96, in _run_module_code\r\n\t\tmod_name, mod_spec, pkg_name, script_name)\r\n\t  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 85, in _run_code\r\n\t\texec(code, run_globals)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/manage.py\", line 10, in <module>\r\n\t\texecute_from_command_line(sys.argv)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n\t\tutility.execute()\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n\t\tself.fetch_command(subcommand).run_from_argv(self.argv)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n\t\tself.execute(*args, **cmd_options)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/base.py\", line 364, in execute\r\n\t\toutput = self.handle(*args, **options)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/base.py\", line 83, in wrapped\r\n\t\tres = handle_func(*args, **kwargs)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/core/management/commands/makemigrations.py\", line 168, in handle\r\n\t\tmigration_name=self.migration_name,\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/db/migrations/autodetector.py\", line 43, in changes\r\n\t\tchanges = self._detect_changes(convert_apps, graph)\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/db/migrations/autodetector.py\", line 194, in _detect_changes\r\n\t\tself._sort_migrations()\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/db/migrations/autodetector.py\", line 349, in _sort_migrations\r\n\t\tdep = self._resolve_dependency(dep)[0]\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/db/migrations/autodetector.py\", line 247, in _resolve_dependency\r\n\t\tresolved_app_label, resolved_object_name = getattr(settings, dependency[1]).split('.')\r\n\t  File \"/Users/USER/Projects/Python/PROJECTPATH/venv/lib/python3.7/site-packages/django/conf/__init__.py\", line 80, in __getattr__\r\n\t\tval = getattr(self._wrapped, name)\r\n\tAttributeError: 'Settings' object has no attribute 'OAUTH2_PROVIDER_APPLICATION_MODEL'\r\n\r\nI'm also upgrading my Django install to 2.2.1 (from 1.9) so there may be something about subclassing models in 2.2 that I'm not understanding.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/777", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/777/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/777/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/777", "id": 551881837, "node_id": "MDU6SXNzdWU1NTE4ODE4Mzc=", "number": 777, "title": "access token detail page in admin very slow", "user": {"login": "Yiling-J", "id": 20703055, "node_id": "MDQ6VXNlcjIwNzAzMDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/20703055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yiling-J", "html_url": "https://github.com/Yiling-J", "followers_url": "https://api.github.com/users/Yiling-J/followers", "following_url": "https://api.github.com/users/Yiling-J/following{/other_user}", "gists_url": "https://api.github.com/users/Yiling-J/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yiling-J/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yiling-J/subscriptions", "organizations_url": "https://api.github.com/users/Yiling-J/orgs", "repos_url": "https://api.github.com/users/Yiling-J/repos", "events_url": "https://api.github.com/users/Yiling-J/events{/privacy}", "received_events_url": "https://api.github.com/users/Yiling-J/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-19T07:48:17Z", "updated_at": "2020-02-07T05:24:59Z", "closed_at": "2020-02-07T05:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "We upgrade django-oauth-toolkit recently, and can't open access token detail page in admin now, because source_refresh_token is not in raw_id_fields, and can be a very large list. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/772", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/772/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/772/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/772", "id": 543458695, "node_id": "MDU6SXNzdWU1NDM0NTg2OTU=", "number": 772, "title": "Incompatibility with Django 3.0", "user": {"login": "rajeshyogeshwar", "id": 7311146, "node_id": "MDQ6VXNlcjczMTExNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7311146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajeshyogeshwar", "html_url": "https://github.com/rajeshyogeshwar", "followers_url": "https://api.github.com/users/rajeshyogeshwar/followers", "following_url": "https://api.github.com/users/rajeshyogeshwar/following{/other_user}", "gists_url": "https://api.github.com/users/rajeshyogeshwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajeshyogeshwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajeshyogeshwar/subscriptions", "organizations_url": "https://api.github.com/users/rajeshyogeshwar/orgs", "repos_url": "https://api.github.com/users/rajeshyogeshwar/repos", "events_url": "https://api.github.com/users/rajeshyogeshwar/events{/privacy}", "received_events_url": "https://api.github.com/users/rajeshyogeshwar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-29T16:06:52Z", "updated_at": "2019-12-29T17:15:47Z", "closed_at": "2019-12-29T17:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently tried to use the package with on Django 3.0 application and encountered an error relating to `python_2_unicode_compatible`. As per the release Django 3.0, it has removed the python 2 compatibility apis .\r\n![screenshot-docs djangoproject com-2019 12](https://user-images.githubusercontent.com/7311146/71559351-e851a000-2a82-11ea-9496-9eb4337cab50.png)\r\n\r\nBelow is the screenshot for the encountered error.\r\n\r\n![Screenshot from 2019-12-29 21-35-57](https://user-images.githubusercontent.com/7311146/71559392-3e264800-2a83-11ea-9a9d-0d12330dbd75.png)\r\n\r\nIs there anything planned in immediate future for this or is there a clean workaround for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/771", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/771/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/771/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/771", "id": 542457722, "node_id": "MDU6SXNzdWU1NDI0NTc3MjI=", "number": 771, "title": "How can I override OAUTH2_BACKEND_CLASS or OAUTH2_VALIDATOR_CLASS?", "user": {"login": "kaeruko", "id": 4452841, "node_id": "MDQ6VXNlcjQ0NTI4NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4452841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaeruko", "html_url": "https://github.com/kaeruko", "followers_url": "https://api.github.com/users/kaeruko/followers", "following_url": "https://api.github.com/users/kaeruko/following{/other_user}", "gists_url": "https://api.github.com/users/kaeruko/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaeruko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaeruko/subscriptions", "organizations_url": "https://api.github.com/users/kaeruko/orgs", "repos_url": "https://api.github.com/users/kaeruko/repos", "events_url": "https://api.github.com/users/kaeruko/events{/privacy}", "received_events_url": "https://api.github.com/users/kaeruko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-26T07:01:49Z", "updated_at": "2020-01-20T04:58:56Z", "closed_at": "2020-01-20T04:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I set  OAUTH2_BACKEND_CLASS  own project's class file, like\r\n\r\n```python\r\nOAUTH2_PROVIDER = {\r\n  \"OAUTH2_VALIDATOR_CLASS\": \"myproject.my_oauth2_backends.MyOAuth2Validator\",\r\n```\r\nbut it dosen't work.\r\n\r\n```bash\r\n...\r\n    from . import views\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/views/__init__.py\", line 6, in <module>\r\n    from .base import AuthorizationView, RevokeTokenView, TokenView\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/views/base.py\", line 64, in <module>\r\n    class AuthorizationView(BaseAuthorizationView, FormView):\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/views/base.py\", line 88, in AuthorizationView\r\n    validator_class = oauth2_settings.OAUTH2_VALIDATOR_CLASS\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 171, in __getattr__\r\n    val = perform_import(val, attr)\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 125, in perform_import\r\n    return import_from_string(val, setting_name)\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 137, in import_from_string\r\n    module = importlib.import_module(module_path)\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"/Users/kaeruko/work/rails/auth-server/myproject/my_oauth2_backends.py\", line 3, in <module>\r\n    from oauth2_provider.backends import OAuthLibCore\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/backends.py\", line 7, in <module>\r\n    OAuthLibCore = get_oauthlib_core()\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/oauth2_backends.py\", line 218, in get_oauthlib_core\r\n    validator = oauth2_settings.OAUTH2_VALIDATOR_CLASS()\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 171, in __getattr__\r\n    val = perform_import(val, attr)\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 125, in perform_import\r\n    return import_from_string(val, setting_name)\r\n  File \"/Users/kaeruko/.local/share/virtualenvs/auth-server-cnlgdylV/lib/python3.8/site-packages/oauth2_provider/settings.py\", line 138, in import_from_string\r\n    return getattr(module, class_name)\r\nAttributeError: partially initialized module 'myproject.my_oauth2_backends' has no attribute 'myOAuth2Validator' (most likely due to a circular import)\r\n```\r\n\r\nDo I need override `get_oauthlib_core `?\r\n\r\n```\r\n    validator = oauth2_settings.OAUTH2_VALIDATOR_CLASS()\r\n    server = oauth2_settings.OAUTH2_SERVER_CLASS(validator)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/770", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/770/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/770/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/770", "id": 541678040, "node_id": "MDU6SXNzdWU1NDE2NzgwNDA=", "number": 770, "title": "Not able to get Access token, getting unsupported grant type", "user": {"login": "Jithinqw", "id": 20675707, "node_id": "MDQ6VXNlcjIwNjc1NzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/20675707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jithinqw", "html_url": "https://github.com/Jithinqw", "followers_url": "https://api.github.com/users/Jithinqw/followers", "following_url": "https://api.github.com/users/Jithinqw/following{/other_user}", "gists_url": "https://api.github.com/users/Jithinqw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jithinqw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jithinqw/subscriptions", "organizations_url": "https://api.github.com/users/Jithinqw/orgs", "repos_url": "https://api.github.com/users/Jithinqw/repos", "events_url": "https://api.github.com/users/Jithinqw/events{/privacy}", "received_events_url": "https://api.github.com/users/Jithinqw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-23T10:00:43Z", "updated_at": "2020-03-12T01:46:18Z", "closed_at": "2020-03-03T20:55:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am calling my api route for getting the token. I am using following code \r\n\r\n```\r\nr = requests.post('http://0.0.0.0:8000/o/token/', \r\n            data={\r\n                'grant_type': 'password',\r\n                'username': request.data['username'],\r\n                'password': request.data['password'],\r\n                'client_id': 'TqyO7q1WeimGDK96ivlsiUei0CHVT9GP08uCoVvE',\r\n                'client_secret': 'yZXdwi36Za8SB1RlBvZmwMsyvctAG3uN5VnROZSkDgAeENuE2ldSDDNa9OWuKtRW9fcI2c4hCsABrjgWqnq3NGKdOv1Uc1nknRGyRH8KWvUnLAFl8cwnvnITt5QjggiT',\r\n            },\r\n            headers= {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                'cache-control': 'no-cache',\r\n            },\r\n        )\r\n        print(r.json())\r\n```\r\n\r\nIn my settings.py I am using \r\n\r\n`'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',  `\r\n\r\nBut the response is\r\n```\r\n {\r\n    \"error\": \"unsupported_grant_type\"\r\n}\r\n```\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/769", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/769/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/769/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/769/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/769", "id": 540267052, "node_id": "MDU6SXNzdWU1NDAyNjcwNTI=", "number": 769, "title": "OAauth authorization error status 400/401", "user": {"login": "timabilov", "id": 17686230, "node_id": "MDQ6VXNlcjE3Njg2MjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/17686230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabilov", "html_url": "https://github.com/timabilov", "followers_url": "https://api.github.com/users/timabilov/followers", "following_url": "https://api.github.com/users/timabilov/following{/other_user}", "gists_url": "https://api.github.com/users/timabilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabilov/subscriptions", "organizations_url": "https://api.github.com/users/timabilov/orgs", "repos_url": "https://api.github.com/users/timabilov/repos", "events_url": "https://api.github.com/users/timabilov/events{/privacy}", "received_events_url": "https://api.github.com/users/timabilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T11:53:20Z", "updated_at": "2020-07-21T11:50:38Z", "closed_at": "2020-07-21T11:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There should be flexible way to return 401 status only for password error.\r\n\r\nRight now status 400 is natively written on ```OAuth2Error```\r\nfor example on password grant type - there is no way to technically say whether it is password error or request body problem. \r\nFor example,  other services have issues about the proper frontend error message \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/766", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/766/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/766/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/766", "id": 529141983, "node_id": "MDU6SXNzdWU1MjkxNDE5ODM=", "number": 766, "title": "Revoke token endpoint returns nothing with 200 response.", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T06:20:37Z", "updated_at": "2019-11-28T06:06:46Z", "closed_at": "2019-11-28T06:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Revoking token is giving `200` response with blank/empty body.\r\n\r\nMy payload is\r\n```\r\nclient_id: \"<client id>\"\r\nclient_secret: \"<client secret>\"\r\ntoken: \"hWYM8L7GIyTLDen1ZVRvUx43cBhkJD\"\r\ntoken_type_hint: \"refresh_token\"\r\n```\r\n\r\n### Expected Behaviour\r\nIt should return the new access token.\r\n\r\n### Using version\r\n```\r\n1.2.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/765", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/765/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/765/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/765", "id": 528819547, "node_id": "MDU6SXNzdWU1Mjg4MTk1NDc=", "number": 765, "title": "Error while migration 0006", "user": {"login": "boris-savic", "id": 1744926, "node_id": "MDQ6VXNlcjE3NDQ5MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1744926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boris-savic", "html_url": "https://github.com/boris-savic", "followers_url": "https://api.github.com/users/boris-savic/followers", "following_url": "https://api.github.com/users/boris-savic/following{/other_user}", "gists_url": "https://api.github.com/users/boris-savic/gists{/gist_id}", "starred_url": "https://api.github.com/users/boris-savic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boris-savic/subscriptions", "organizations_url": "https://api.github.com/users/boris-savic/orgs", "repos_url": "https://api.github.com/users/boris-savic/repos", "events_url": "https://api.github.com/users/boris-savic/events{/privacy}", "received_events_url": "https://api.github.com/users/boris-savic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-26T16:00:37Z", "updated_at": "2019-11-26T20:27:24Z", "closed_at": "2019-11-26T20:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nrecently we've upgraded our Django from 1.11.x to 2.2.7 and also our django-oauth-toolkit to 1.2.0 from 0.12.0. \r\n\r\nWhile running migrations there is an error with migration 0006: \r\n\r\n``` \r\n Applying oauth2_provider.0005_auto_20170514_1141... OK\r\n  Applying oauth2_provider.0006_auto_20171214_2232...Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\npsycopg2.errors.UndefinedObject: constraint \"idx_24507_oauth2_provider_refreshtoken_token_d090daa4_uniq\" of relation \"oauth2_provider_refreshtoken\" does not exist\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/base.py\", line 83, in wrapped\r\n    res = handle_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/commands/migrate.py\", line 234, in handle\r\n    fake_initial=fake_initial,\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 117, in migrate\r\n    state = self._migrate_all_forwards(state, plan, full_plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 147, in _migrate_all_forwards\r\n    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 245, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/migrations/migration.py\", line 124, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/migrations/operations/fields.py\", line 249, in database_forwards\r\n    schema_editor.alter_field(from_model, from_field, to_field)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 535, in alter_field\r\n    old_db_params, new_db_params, strict)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/postgresql/schema.py\", line 124, in _alter_field\r\n    new_db_params, strict,\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 568, in _alter_field\r\n    self.execute(self._delete_unique_sql(model, constraint_name))\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 137, in execute\r\n    cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 99, in execute\r\n    return super().execute(sql, params)\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/django/client.py\", line 127, in execute\r\n    return real_execute(self, sql, params)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 67, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 76, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\r\n    return self.cursor.execute(sql, params)\r\ndjango.db.utils.ProgrammingError: constraint \"idx_24507_oauth2_provider_refreshtoken_token_d090daa4_uniq\" of relation \"oauth2_provider_refreshtoken\" does not exist\r\n```\r\n\r\nWhat are we missing here?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/764", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/764/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/764/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/764", "id": 527734896, "node_id": "MDU6SXNzdWU1Mjc3MzQ4OTY=", "number": 764, "title": "Please release new version - Cannot revoke all tokens: AccessToken matching query does not exist", "user": {"login": "thenewguy", "id": 77731, "node_id": "MDQ6VXNlcjc3NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/77731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thenewguy", "html_url": "https://github.com/thenewguy", "followers_url": "https://api.github.com/users/thenewguy/followers", "following_url": "https://api.github.com/users/thenewguy/following{/other_user}", "gists_url": "https://api.github.com/users/thenewguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thenewguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thenewguy/subscriptions", "organizations_url": "https://api.github.com/users/thenewguy/orgs", "repos_url": "https://api.github.com/users/thenewguy/repos", "events_url": "https://api.github.com/users/thenewguy/events{/privacy}", "received_events_url": "https://api.github.com/users/thenewguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-24T18:12:58Z", "updated_at": "2020-03-23T14:33:08Z", "closed_at": "2020-03-23T14:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting a DoesNotExist exception trying to clean up when a user logs out.\r\n\r\n\r\ndjango-oauth-toolkit==1.2.0\r\n\r\n```\r\nfrom itertools import chain\r\nfrom oauth2_provider.models import get_access_token_model, get_application_model, get_refresh_token_model\r\n\r\n    access_tokens = get_access_token_model().objects.filter(user=user)\r\n    refresh_tokens = get_refresh_token_model().objects.filter(user=user)\r\n\r\n    for token in chain(access_tokens, refresh_tokens):\r\n        token.revoke()\r\n\r\n```\r\n\r\n\r\nIt appears this is fixed in master: https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/models.py#L397\r\n\r\nIt looks like the fix is a year old: https://github.com/jazzband/django-oauth-toolkit/commit/5b51da74019046ef4c8c81c9975db029a2113d52#diff-ac3d3b1e30eb6e828386263c3a1256ca\r\n\r\nPlease release a new version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/761", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/761/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/761/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/761", "id": 521795717, "node_id": "MDU6SXNzdWU1MjE3OTU3MTc=", "number": 761, "title": "Small typo in tests/utils.py", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-12T20:52:46Z", "updated_at": "2020-02-01T16:14:13Z", "closed_at": "2020-02-01T16:14:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should read containing instead of containg.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/752", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/752/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/752/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/752", "id": 511324687, "node_id": "MDU6SXNzdWU1MTEzMjQ2ODc=", "number": 752, "title": "Something is broken with current Django master", "user": {"login": "IvanAnishchuk", "id": 3095764, "node_id": "MDQ6VXNlcjMwOTU3NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3095764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IvanAnishchuk", "html_url": "https://github.com/IvanAnishchuk", "followers_url": "https://api.github.com/users/IvanAnishchuk/followers", "following_url": "https://api.github.com/users/IvanAnishchuk/following{/other_user}", "gists_url": "https://api.github.com/users/IvanAnishchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/IvanAnishchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IvanAnishchuk/subscriptions", "organizations_url": "https://api.github.com/users/IvanAnishchuk/orgs", "repos_url": "https://api.github.com/users/IvanAnishchuk/repos", "events_url": "https://api.github.com/users/IvanAnishchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/IvanAnishchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-23T13:29:58Z", "updated_at": "2020-08-06T23:06:26Z", "closed_at": "2020-03-17T21:50:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Tests fail with Django master branch. It might be a problem with DRF or tests themselves, of course, needs further investigation.\r\n\r\n```\r\n======================================== test session starts ========================================\r\nplatform linux -- Python 3.8.0, pytest-5.2.1, py-1.8.0, pluggy-0.13.0\r\ncachedir: .tox/py38-djangomaster/.pytest_cache\r\nDjango settings: tests.settings (from environment variable)\r\nrootdir: /home/user/src/django-oauth-toolkit, inifile: tox.ini\r\nplugins: forked-1.1.3, django-3.6.0, cov-2.8.1, xdist-1.30.0\r\ncollected 217 items / 1 errors / 216 selected                                                       \r\n\r\n============================================== ERRORS ===============================================\r\n___________________________ ERROR collecting tests/test_rest_framework.py ___________________________\r\nImportError while importing test module '/home/user/src/django-oauth-toolkit/tests/test_rest_framework.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/settings.py:177: in import_from_string\r\n    return import_string(val)\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/django/utils/module_loading.py:17: in import_string\r\n    module = import_module(module_path)\r\n.tox/py38-djangomaster/lib/python3.8/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1014: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:991: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:671: in _load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap_external>:783: in exec_module\r\n    ???\r\n<frozen importlib._bootstrap>:219: in _call_with_frames_removed\r\n    ???\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/renderers.py:23: in <module>\r\n    from rest_framework import VERSION, exceptions, serializers, status\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/serializers.py:24: in <module>\r\n    from django.db.models.fields import FieldDoesNotExist\r\nE   ImportError: cannot import name 'FieldDoesNotExist' from 'django.db.models.fields' (/home/user/src/django-oauth-toolkit/.tox/py38-djangomaster/lib/python3.8/site-packages/django/db/models/fields/__init__.py)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\ntests/test_rest_framework.py:12: in <module>\r\n    from rest_framework.test import APIRequestFactory, force_authenticate\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/test.py:138: in <module>\r\n    class APIRequestFactory(DjangoRequestFactory):\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/test.py:139: in APIRequestFactory\r\n    renderer_classes_list = api_settings.TEST_REQUEST_RENDERER_CLASSES\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/settings.py:220: in __getattr__\r\n    val = perform_import(val, attr)\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/settings.py:168: in perform_import\r\n    return [import_from_string(item, setting_name) for item in val]\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/settings.py:168: in <listcomp>\r\n    return [import_from_string(item, setting_name) for item in val]\r\n.tox/py38-djangomaster/lib/python3.8/site-packages/rest_framework/settings.py:180: in import_from_string\r\n    raise ImportError(msg)\r\nE   ImportError: Could not import 'rest_framework.renderers.MultiPartRenderer' for API setting 'TEST_REQUEST_RENDERER_CLASSES'. ImportError: cannot import name 'FieldDoesNotExist' from 'django.db.models.fields' (/home/user/src/django-oauth-toolkit/.tox/py38-djangomaster/lib/python3.8/site-packages/django/db/models/fields/__init__.py).\r\n\r\n\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================= 1 error in 3.38s ==========================================\r\nERROR: InvocationError for command /home/user/src/django-oauth-toolkit/.tox/py38-djangomaster/bin/pytest --cov=oauth2_provider --cov-report= --cov-append (exited with code 2)\r\n______________________________________________ summary ______________________________________________\r\nERROR:   py38-djangomaster: commands failed\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/748", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/748/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/748/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/748", "id": 509502490, "node_id": "MDU6SXNzdWU1MDk1MDI0OTA=", "number": 748, "title": "Test suite fails with new django and oauthlib", "user": {"login": "IvanAnishchuk", "id": 3095764, "node_id": "MDQ6VXNlcjMwOTU3NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3095764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IvanAnishchuk", "html_url": "https://github.com/IvanAnishchuk", "followers_url": "https://api.github.com/users/IvanAnishchuk/followers", "following_url": "https://api.github.com/users/IvanAnishchuk/following{/other_user}", "gists_url": "https://api.github.com/users/IvanAnishchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/IvanAnishchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IvanAnishchuk/subscriptions", "organizations_url": "https://api.github.com/users/IvanAnishchuk/orgs", "repos_url": "https://api.github.com/users/IvanAnishchuk/repos", "events_url": "https://api.github.com/users/IvanAnishchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/IvanAnishchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-19T19:58:45Z", "updated_at": "2019-10-20T01:16:11Z", "closed_at": "2019-10-20T01:16:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Multiple tests fail when using latest django and oauthlib. I couldn't find any open issue about this and not sure which parts break because of which upgrade. Everything seems to run correctly with at least django==2.0.13 and oauthlib==3.0.1 while upgrading either breaks some of the tests (I'll update this description once I collect more info)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/738", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/738/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/738/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/738", "id": 495296161, "node_id": "MDU6SXNzdWU0OTUyOTYxNjE=", "number": 738, "title": "unsupported_grant_type when verifying token at introspection endpoint", "user": {"login": "mhyousefi", "id": 23746875, "node_id": "MDQ6VXNlcjIzNzQ2ODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/23746875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhyousefi", "html_url": "https://github.com/mhyousefi", "followers_url": "https://api.github.com/users/mhyousefi/followers", "following_url": "https://api.github.com/users/mhyousefi/following{/other_user}", "gists_url": "https://api.github.com/users/mhyousefi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhyousefi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhyousefi/subscriptions", "organizations_url": "https://api.github.com/users/mhyousefi/orgs", "repos_url": "https://api.github.com/users/mhyousefi/repos", "events_url": "https://api.github.com/users/mhyousefi/events{/privacy}", "received_events_url": "https://api.github.com/users/mhyousefi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-18T15:22:18Z", "updated_at": "2019-09-23T12:09:59Z", "closed_at": "2019-09-23T12:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\r\n\r\nIn my **authorization server**, I have registered my **resource server** with the following specs:\r\n- `Client-type`: `confidential` \r\n- `Authorization grant type`: `Resource owner password-based`\r\n\r\nThe way I look at this, the JS client will carry out the first step once (as sort of like a login process) to acquire an `access_token`. And then, every time it needs to use an API, it has to provide the `access_token` to the **API server (resource server)**. Then, the resource server sends a POST request to the authorization server to verify the `access_token` before it starts to process the JS client request.\r\n\r\n1. I send the following POST request:\r\n```curl -X POST -d \"grant_type=password&username=<USER>&password=<PASS>&scope=<SCOPE>\" -u\"<CLIENT_ID>:<CLIENT_SECRET>\" http://localhost:8000/o/token/```  \r\nThis works fine and I get an `access_token`.\r\n\r\n2. I try this POST request to verify that the token is valid:\r\n```curl -X POST -d \"token=<ACCESS_TOKEN>\" http://localhost:8000/o/token/```\r\nThis is when I get `{\"error\": \"unsupported_grant_type\"}`.\r\n\r\nIs there something wrong with my request structure or am I wrong with the overall process?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/737", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/737/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/737/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/737", "id": 493427760, "node_id": "MDU6SXNzdWU0OTM0Mjc3NjA=", "number": 737, "title": "Package latest release", "user": {"login": "hcNick", "id": 513009, "node_id": "MDQ6VXNlcjUxMzAwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/513009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hcNick", "html_url": "https://github.com/hcNick", "followers_url": "https://api.github.com/users/hcNick/followers", "following_url": "https://api.github.com/users/hcNick/following{/other_user}", "gists_url": "https://api.github.com/users/hcNick/gists{/gist_id}", "starred_url": "https://api.github.com/users/hcNick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hcNick/subscriptions", "organizations_url": "https://api.github.com/users/hcNick/orgs", "repos_url": "https://api.github.com/users/hcNick/repos", "events_url": "https://api.github.com/users/hcNick/events{/privacy}", "received_events_url": "https://api.github.com/users/hcNick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-13T17:01:26Z", "updated_at": "2019-09-16T11:10:49Z", "closed_at": "2019-09-16T11:10:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just upgraded to the latest everything and we're getting ```'Request' object has no attribute 'oauth2_error'```, which I can see has been fixed in master however there hasn't been a packaged release since last year. Are there any plans to release a new version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/736", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/736/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/736/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/736", "id": 490098223, "node_id": "MDU6SXNzdWU0OTAwOTgyMjM=", "number": 736, "title": "The `protected_resource` decorator for function based views not work", "user": {"login": "rainytooo", "id": 761979, "node_id": "MDQ6VXNlcjc2MTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/761979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainytooo", "html_url": "https://github.com/rainytooo", "followers_url": "https://api.github.com/users/rainytooo/followers", "following_url": "https://api.github.com/users/rainytooo/following{/other_user}", "gists_url": "https://api.github.com/users/rainytooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainytooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainytooo/subscriptions", "organizations_url": "https://api.github.com/users/rainytooo/orgs", "repos_url": "https://api.github.com/users/rainytooo/repos", "events_url": "https://api.github.com/users/rainytooo/events{/privacy}", "received_events_url": "https://api.github.com/users/rainytooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T02:38:30Z", "updated_at": "2019-09-06T03:29:02Z", "closed_at": "2019-09-06T03:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had Function-based views like this:\r\n```\r\n@protected_resource(scopes=['read'])\r\n@api_view(['POST'])\r\n# @rw_protected_resource()\r\ndef login(request):\r\n    _precondition_login(request)\r\n    try:\r\n        user_profile = UserProfile.objects.get(telnum=request.POST.get('mobile'))\r\n        user = user_profile.user\r\n        if user.check_password(request.POST.get('password')):\r\n            serializer = UserSerializer(user, many=False)\r\n            return Response(serializer.data, status=status.HTTP_200_OK)\r\n        else:\r\n            raise RestBadRequestException(\"wrong password\", 41003)\r\n    except UserProfile.DoesNotExist:\r\n        raise RestBadRequestException(\"mobile number not exist\", 41001)\r\n\r\n```\r\n\r\n\r\nMy Token's grant type is `credentials`, and the token has `read write groups` scope\r\n\r\nMy `DEFAULT_PERMISSION_CLASSES` is `IsAuthenticatedOrTokenHasScope`\r\n\r\nBut when I tried to visit the login API, I got this message in the debug log\r\n\r\n```\r\nERROR TokenHasScope requires the view to define the required_scopes attribute\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/735", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/735/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/735/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/735", "id": 486916851, "node_id": "MDU6SXNzdWU0ODY5MTY4NTE=", "number": 735, "title": "Specifying a namespace in include() without providing an app_name is not supported", "user": {"login": "priyashpatil", "id": 38959321, "node_id": "MDQ6VXNlcjM4OTU5MzIx", "avatar_url": "https://avatars1.githubusercontent.com/u/38959321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyashpatil", "html_url": "https://github.com/priyashpatil", "followers_url": "https://api.github.com/users/priyashpatil/followers", "following_url": "https://api.github.com/users/priyashpatil/following{/other_user}", "gists_url": "https://api.github.com/users/priyashpatil/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyashpatil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyashpatil/subscriptions", "organizations_url": "https://api.github.com/users/priyashpatil/orgs", "repos_url": "https://api.github.com/users/priyashpatil/repos", "events_url": "https://api.github.com/users/priyashpatil/events{/privacy}", "received_events_url": "https://api.github.com/users/priyashpatil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-29T12:04:33Z", "updated_at": "2020-04-08T06:30:51Z", "closed_at": "2020-04-08T06:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using django 2.2.4\r\n\r\nurls.py\r\n```\r\nfrom django.conf.urls import url, include\r\nimport oauth2_provider.views as oauth2_views\r\nfrom django.conf import settings\r\n# from .views import ApiEndpoint\r\n\r\n# OAuth2 provider endpoints\r\noauth2_endpoint_views = [\r\n    url(r'^authorize/$', oauth2_views.AuthorizationView.as_view(), name=\"authorize\"),\r\n    url(r'^token/$', oauth2_views.TokenView.as_view(), name=\"token\"),\r\n    url(r'^revoke-token/$', oauth2_views.RevokeTokenView.as_view(), name=\"revoke-token\"),\r\n]\r\n\r\nif settings.DEBUG:\r\n    # OAuth2 Application Management endpoints\r\n    oauth2_endpoint_views += [\r\n        url(r'^applications/$', oauth2_views.ApplicationList.as_view(), name=\"list\"),\r\n        url(r'^applications/register/$', oauth2_views.ApplicationRegistration.as_view(), name=\"register\"),\r\n        url(r'^applications/(?P<pk>\\d+)/$', oauth2_views.ApplicationDetail.as_view(), name=\"detail\"),\r\n        url(r'^applications/(?P<pk>\\d+)/delete/$', oauth2_views.ApplicationDelete.as_view(), name=\"delete\"),\r\n        url(r'^applications/(?P<pk>\\d+)/update/$', oauth2_views.ApplicationUpdate.as_view(), name=\"update\"),\r\n    ]\r\n\r\n    # OAuth2 Token Management endpoints\r\n    oauth2_endpoint_views += [\r\n        url(r'^authorized-tokens/$', oauth2_views.AuthorizedTokensListView.as_view(), name=\"authorized-token-list\"),\r\n        url(r'^authorized-tokens/(?P<pk>\\d+)/delete/$', oauth2_views.AuthorizedTokenDeleteView.as_view(),\r\n            name=\"authorized-token-delete\"),\r\n    ]\r\n\r\nurlpatterns = [\r\n    # OAuth 2 endpoints:\r\n    url(r'^o/', include(oauth2_endpoint_views, namespace=\"oauth2_provider\")),\r\n    # url(r'^api/hello', ApiEndpoint.as_view()),  # an example resource endpoint\r\n]\r\n```\r\nError I'm getting\r\n`\r\ndjango.core.exceptions.ImproperlyConfigured: Specifying a namespace in include() without providing an app_name is not supported. Set the app_name attribute in the included module, or pass a 2-tuple containing the list of patterns and app_name instead.\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/731", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/731/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/731/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/731", "id": 479637327, "node_id": "MDU6SXNzdWU0Nzk2MzczMjc=", "number": 731, "title": "Restricting allowed scopes for users", "user": {"login": "KhashayarMirMS", "id": 11523685, "node_id": "MDQ6VXNlcjExNTIzNjg1", "avatar_url": "https://avatars1.githubusercontent.com/u/11523685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KhashayarMirMS", "html_url": "https://github.com/KhashayarMirMS", "followers_url": "https://api.github.com/users/KhashayarMirMS/followers", "following_url": "https://api.github.com/users/KhashayarMirMS/following{/other_user}", "gists_url": "https://api.github.com/users/KhashayarMirMS/gists{/gist_id}", "starred_url": "https://api.github.com/users/KhashayarMirMS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KhashayarMirMS/subscriptions", "organizations_url": "https://api.github.com/users/KhashayarMirMS/orgs", "repos_url": "https://api.github.com/users/KhashayarMirMS/repos", "events_url": "https://api.github.com/users/KhashayarMirMS/events{/privacy}", "received_events_url": "https://api.github.com/users/KhashayarMirMS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-12T13:10:05Z", "updated_at": "2020-05-15T13:14:31Z", "closed_at": "2019-08-15T10:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\nI want to have a custom scope required for some of my views and when a user requests an access token with that scope, check to see if the user is actually allowed to have that scope in my system. How can I achieve this?\r\n\r\nHere's an example for clarifying the question: The users in my website are either students or are teachers. I want to add a `teacher` scope and when a user requests an access token with the `teacher` scope, check to see if the user is one of the teachers so that if he's not a teacher he won't be able to get an access token.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/726", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/726/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/726/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/726", "id": 474220970, "node_id": "MDU6SXNzdWU0NzQyMjA5NzA=", "number": 726, "title": "clear_expired filters AccessToken with refresh_token field that doesn't exist", "user": {"login": "Alir3z4", "id": 591113, "node_id": "MDQ6VXNlcjU5MTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/591113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alir3z4", "html_url": "https://github.com/Alir3z4", "followers_url": "https://api.github.com/users/Alir3z4/followers", "following_url": "https://api.github.com/users/Alir3z4/following{/other_user}", "gists_url": "https://api.github.com/users/Alir3z4/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alir3z4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alir3z4/subscriptions", "organizations_url": "https://api.github.com/users/Alir3z4/orgs", "repos_url": "https://api.github.com/users/Alir3z4/repos", "events_url": "https://api.github.com/users/Alir3z4/events{/privacy}", "received_events_url": "https://api.github.com/users/Alir3z4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-29T19:37:33Z", "updated_at": "2019-07-31T19:16:58Z", "closed_at": "2019-07-31T19:16:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed [clear_expired](https://github.com/jazzband/django-oauth-toolkit/blob/1.2.0/oauth2_provider/models.py#L438) is filtering AccessToken model with refresh_token field that doesn't exist on AccessToken\r\n\r\n```python\r\naccess_token_model.objects.filter(refresh_token__isnull=True, expires__lt=now).delete()\r\n```\r\n\r\nAs from the code base, [AbstractAccessToken](https://github.com/jazzband/django-oauth-toolkit/blob/1.2.0/oauth2_provider/models.py#L243-L275) doesn't have a `refresh_token`, the closest field to refresh_token is [source_refresh_token](https://github.com/jazzband/django-oauth-toolkit/blob/1.2.0/oauth2_provider/models.py#L262) \r\n\r\nI wonder if this intentional or a bug ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/724", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/724/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/724/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/724", "id": 472960054, "node_id": "MDU6SXNzdWU0NzI5NjAwNTQ=", "number": 724, "title": "Missing self argument when trying to create Application from code", "user": {"login": "sometimescool22", "id": 20865218, "node_id": "MDQ6VXNlcjIwODY1MjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/20865218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sometimescool22", "html_url": "https://github.com/sometimescool22", "followers_url": "https://api.github.com/users/sometimescool22/followers", "following_url": "https://api.github.com/users/sometimescool22/following{/other_user}", "gists_url": "https://api.github.com/users/sometimescool22/gists{/gist_id}", "starred_url": "https://api.github.com/users/sometimescool22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sometimescool22/subscriptions", "organizations_url": "https://api.github.com/users/sometimescool22/orgs", "repos_url": "https://api.github.com/users/sometimescool22/repos", "events_url": "https://api.github.com/users/sometimescool22/events{/privacy}", "received_events_url": "https://api.github.com/users/sometimescool22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T16:27:53Z", "updated_at": "2019-07-25T16:30:35Z", "closed_at": "2019-07-25T16:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would I create an application from a view? I've tried copying the management command as closely as I could, like this:\r\n\r\n```\r\nfrom oauth2_provider.models import get_application_model\r\nApplication = get_application_model()\r\nApplication(client_id=serializer.data['client_id'], user=request.user, redirect_uris=\"https://google.com\", client_type=\"Public\", authorization_grant_type=\"Authorization code\", name=\"Modeltest\")\r\nApplication.save()\r\n```\r\n\r\nBut I keep getting `TypeError: full_clean() missing 1 required positional argument: 'self'`. Why is this? I've initialised Application, right?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/720", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/720/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/720/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/720", "id": 463496773, "node_id": "MDU6SXNzdWU0NjM0OTY3NzM=", "number": 720, "title": "Cannot register user in the authorization server", "user": {"login": "PinkFLoyd92", "id": 8844096, "node_id": "MDQ6VXNlcjg4NDQwOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8844096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkFLoyd92", "html_url": "https://github.com/PinkFLoyd92", "followers_url": "https://api.github.com/users/PinkFLoyd92/followers", "following_url": "https://api.github.com/users/PinkFLoyd92/following{/other_user}", "gists_url": "https://api.github.com/users/PinkFLoyd92/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkFLoyd92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkFLoyd92/subscriptions", "organizations_url": "https://api.github.com/users/PinkFLoyd92/orgs", "repos_url": "https://api.github.com/users/PinkFLoyd92/repos", "events_url": "https://api.github.com/users/PinkFLoyd92/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkFLoyd92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T01:04:01Z", "updated_at": "2019-08-06T20:43:49Z", "closed_at": "2019-07-14T07:10:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I setup an authorization server using this library following the instructions of the documentation.\r\n[https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html](tutorial)\r\n\r\nI created a simple application using the route /o/applications.\r\n![image](https://user-images.githubusercontent.com/8844096/60555814-1a688c00-9d04-11e9-84e6-594619848c0a.png)\r\n\r\nThen I began to test its url using curl\r\n\r\n> `curl -X POST -d \"grant_type=password&username=ldavid&password=root\" -u'MQep09BSYVM5keB8FRUKmhL6GhDAXfCmEAzL3iI9:1TyaQ2hgwcJdqyk55URqQXvUXFemtYOjv48R2NVGYIcFa9GW7H7mMO9y5jFzVjAzYoJwk4MYUHWR6oJhb1Z5JTcPrWsvGodVQ2uIPPxSVS0s4bzovvJDkfeoz0LbkpA6' http://localhost:7000/o/token/\r\n> `\r\n\r\nand it keeps sending me the message `{\"error\": \"invalid_grant\", \"error_description\": \"Invalid credentials given.\"}`\r\n\r\nThe setup seemed fine, I am just trying to create a simple user on this application and retrieve the token but it does not work. Is the documentation outdated? or am I sending something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/717", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/717/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/717/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/717", "id": 451190542, "node_id": "MDU6SXNzdWU0NTExOTA1NDI=", "number": 717, "title": "Revoke/remove all tokens when user gets inactive", "user": {"login": "singhravi1", "id": 20294674, "node_id": "MDQ6VXNlcjIwMjk0Njc0", "avatar_url": "https://avatars1.githubusercontent.com/u/20294674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singhravi1", "html_url": "https://github.com/singhravi1", "followers_url": "https://api.github.com/users/singhravi1/followers", "following_url": "https://api.github.com/users/singhravi1/following{/other_user}", "gists_url": "https://api.github.com/users/singhravi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/singhravi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singhravi1/subscriptions", "organizations_url": "https://api.github.com/users/singhravi1/orgs", "repos_url": "https://api.github.com/users/singhravi1/repos", "events_url": "https://api.github.com/users/singhravi1/events{/privacy}", "received_events_url": "https://api.github.com/users/singhravi1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-02T13:11:35Z", "updated_at": "2019-06-12T13:29:17Z", "closed_at": "2019-06-12T13:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a user is_active becomes false, we should expire (better remove) all the tokens (access and refresh) associated with that user.\r\n\r\nIs there any reason we have not done this yet?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/714", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/714/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/714/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/714", "id": 441763491, "node_id": "MDU6SXNzdWU0NDE3NjM0OTE=", "number": 714, "title": "FOR UPDATE cannot be applied to the nullable side of an outer join", "user": {"login": "egegunes", "id": 9077618, "node_id": "MDQ6VXNlcjkwNzc2MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9077618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egegunes", "html_url": "https://github.com/egegunes", "followers_url": "https://api.github.com/users/egegunes/followers", "following_url": "https://api.github.com/users/egegunes/following{/other_user}", "gists_url": "https://api.github.com/users/egegunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/egegunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egegunes/subscriptions", "organizations_url": "https://api.github.com/users/egegunes/orgs", "repos_url": "https://api.github.com/users/egegunes/repos", "events_url": "https://api.github.com/users/egegunes/events{/privacy}", "received_events_url": "https://api.github.com/users/egegunes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T14:25:22Z", "updated_at": "2019-05-09T09:16:47Z", "closed_at": "2019-05-09T09:16:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since Postgresql doesn't support `FOR UPDATE` in nullable side of outer join (see [here](https://www.postgresql.org/message-id/21634.1160151923@sss.pgh.pa.us)), caching access token after introspection throws this error on master branch:\r\n\r\nPostgresql:\r\n```SQL\r\nERROR:  FOR UPDATE cannot be applied to the nullable side of an outer join                                                                                                                          \r\nSTATEMENT:  SELECT \"oauth2_provider_accesstoken\".\"id\", \"oauth2_provider_accesstoken\".\"user_id\", \"oauth2_provider_accesstoken\".\"source_refresh_token_id\", \"oauth2_provider_accesstoken\".\"token\",     \"oauth2_provider_accesstoken\".\"application_id\", \"oauth2_provider_accesstoken\".\"expires\", \"oauth2_provider_accesstoken\".\"scope\", \"oauth2_provider_accessto ken\".\"created\",                           \"oauth2_provider_accesstoken\".\"updated\", \"auth_user\".\"id\", \"auth_user\".\"password\", \"auth_user\".\"last_login\", \"auth_user\".\"is_superuser\", \"auth_user\".\"username\", \"auth_user\".\"first_ name\",         \"auth_user\".\"last_name\", \"auth_user\".\"email\", \"auth_user\".\"is_staff\", \"auth_user\".\"is_active\", \"auth_user\".\"date_joined\", \"oauth2_provider_application\".\"id\", \"oauth2_provider_application\".\"       client_id\", \"oauth2_provider_application\".\"user_id\", \"oauth2_provider_application\".\"redirect_uris\", \"oauth2_provider_application\".\"client_type\", \"oauth2_provider_application\".                     \"authorization_grant_ type\", \"oauth2_provider_application\".\"client_secret\", \"oauth2_provider_application\".\"name\", \"oauth2_provider_application\".\"skip_authorization\", \"oauth2_provider_application\".\"created\", \"oauth2_pro vider_application\".\"updated\" FROM \"oauth2_provider_accesstoken\" LEFT OUTER JOIN \"auth_user\" ON (\"oauth2_provider_accesstoken\".\"user_id\" = \"auth_user\".\"id\") LEFT OUTER JOIN  \"oauth2_provider_application\" ON (\"oauth2_provider_accesstoken\".\"application_id\" = \"oauth2_provider_application\".\"id\") WHERE \"oauth2_provider_accesstoken\".\"token\" = 'TOKEN' FOR UPDATE\r\n```\r\n\r\nDjango:\r\n```Python\r\nTraceback (most recent call last):                                                                                                                                                                  \r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner                                                                                                \r\n    response = get_response(request)                                                                                                                                                                \r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 126, in _get_response                                                                                            \r\n    response = self.process_exception_by_middleware(e, request)                                                                                                                                     \r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py\", line 124, in _get_response                                                                                            \r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)                                                                                                                         \r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view                                                                                           \r\n    return view_func(*args, **kwargs)                                                                                                                                                               \r\n  File \"/usr/local/lib/python3.7/site-packages/django/views/generic/base.py\", line 68, in view                                                                                                      \r\n    return self.dispatch(request, *args, **kwargs)                                                                                                                                                  \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 495, in dispatch                                                                                                      \r\n    response = self.handle_exception(exc)                                                                                                                                                           \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 455, in handle_exception                                                                                              \r\n    self.raise_uncaught_exception(exc)                                                                                                                                                              \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 483, in dispatch                                                                                                      \r\n    self.initial(request, *args, **kwargs)                                                                                                                                                          \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 400, in initial                                                                                                       \r\n    self.perform_authentication(request)                                                                                                                                                            \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/views.py\", line 326, in perform_authentication                                                                                        \r\n    request.user                                                                                                                                                                                    \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/request.py\", line 223, in user                                                                                                        \r\n    self._authenticate()                                                                                                                                                                            \r\n  File \"/usr/local/lib/python3.7/site-packages/rest_framework/request.py\", line 376, in _authenticate                                                                                               \r\n    user_auth_tuple = authenticator.authenticate(self)                                                                                                                                              \r\n  File \"/usr/local/lib/python3.7/site-packages/oauth2_provider/contrib/rest_framework/authentication.py\", line 29, in authenticate                                                                  \r\n    valid, r = oauthlib_core.verify_request(request, scopes=[])                                                                                                                                     \r\n  File \"/usr/local/lib/python3.7/site-packages/oauth2_provider/oauth2_backends.py\", line 166, in verify_request                                                                                     \r\n    valid, r = self.server.verify_request(uri, http_method, body, headers, scopes=scopes)                                                                                                           \r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/base.py\", line 87, in wrapper                                                                                      \r\n    return f(endpoint, uri, *args, **kwargs)                                                                                                                                                        \r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/endpoints/resource.py\", line 75, in verify_request                                                                           \r\n    return token_type_handler.validate_request(request), request                                                                                                                                    \r\n  File \"/usr/local/lib/python3.7/site-packages/oauthlib/oauth2/rfc6749/tokens.py\", line 351, in validate_request                                                                                    \r\n    token, request.scopes, request)                                                                                                                                                                 \r\n  File \"/usr/local/lib/python3.7/site-packages/oauth2_provider/oauth2_validators.py\", line 370, in validate_bearer_token                                                                            \r\n    introspection_credentials                                                                                                                                                                       \r\n  File \"/usr/local/lib/python3.7/site-packages/oauth2_provider/oauth2_validators.py\", line 342, in _get_token_from_authentication_server                                                            \r\n    \"expires\": expires,                                                                                                                                                                             \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 502, in update_or_create                                                                                            \r\n    obj = self.select_for_update().get(**lookup)                                                                                                                                                    \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 393, in get                                                                                                         \r\n    num = len(clone)                                                                                                                                                                                \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 250, in __len__                                                                                                     \r\n    self._fetch_all()                                                                                                                                                                               \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 1186, in _fetch_all                                                                                                 \r\n    self._result_cache = list(self._iterable_class(self))                                                                                                                                           \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 54, in __iter__                                                                                                     \r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)                                                                                                    \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/models/sql/compiler.py\", line 1065, in execute_sql                                                                                         \r\n    cursor.execute(sql, params)                                                                                                                                                                     \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/backends/utils.py\", line 100, in execute                                                                                                   \r\n    return super().execute(sql, params)                                                                                                                                                             \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/backends/utils.py\", line 68, in execute                                                                                                    \r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)                                                                                                             \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/backends/utils.py\", line 77, in _execute_with_wrappers                                                                                     \r\n    return executor(sql, params, many, context)                                                                                                                                                     \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/backends/utils.py\", line 85, in _execute                                                                                                   \r\n    return self.cursor.execute(sql, params)                                                                                                                                                         \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/utils.py\", line 89, in __exit__                                                                                                            \r\n    raise dj_exc_value.with_traceback(traceback) from exc_value                                                                                                                                     \r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/backends/utils.py\", line 85, in _execute                                                                                                   \r\n    return self.cursor.execute(sql, params)                                                                                                                                                         \r\n  django.db.utils.NotSupportedError: FOR UPDATE cannot be applied to the nullable side of an outer join\r\n```\r\n\r\nRemoving `select_related` fixes the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/711", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/711/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/711/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/711", "id": 437050168, "node_id": "MDU6SXNzdWU0MzcwNTAxNjg=", "number": 711, "title": "authorization_code should use pkce to verify public clients", "user": {"login": "Abhishek8394", "id": 5524161, "node_id": "MDQ6VXNlcjU1MjQxNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5524161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abhishek8394", "html_url": "https://github.com/Abhishek8394", "followers_url": "https://api.github.com/users/Abhishek8394/followers", "following_url": "https://api.github.com/users/Abhishek8394/following{/other_user}", "gists_url": "https://api.github.com/users/Abhishek8394/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abhishek8394/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abhishek8394/subscriptions", "organizations_url": "https://api.github.com/users/Abhishek8394/orgs", "repos_url": "https://api.github.com/users/Abhishek8394/repos", "events_url": "https://api.github.com/users/Abhishek8394/events{/privacy}", "received_events_url": "https://api.github.com/users/Abhishek8394/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-25T07:34:41Z", "updated_at": "2019-05-29T19:20:23Z", "closed_at": "2019-05-29T19:15:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to RFC [https://tools.ietf.org/html/rfc7636#section-4](https://tools.ietf.org/html/rfc7636#section-4)  For public clients with `authorization_code` grant PKCE's `code_verifier` must be used to authenticate client. Currently authentication for public client is dropped altogether. \r\n\r\n**Current behaviour:**\r\nClient's `code_challenge` is not used to authenticate public clients. This leaves public clients vulnerable to token interception attack.\r\n\r\n**Expected behaviour:**\r\nPublic clients on `authorization_code` grant type must be verified by method described in RFC linked in the issue. \r\n\r\nI am not sure how much it would affect existing deployments by making this mandatory, but there should be some option / setting switch that we can flip to enable this security feature. \r\n\r\nI'll be open to working on this, let me know if I should.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/709", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/709/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/709/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/709", "id": 436483596, "node_id": "MDU6SXNzdWU0MzY0ODM1OTY=", "number": 709, "title": "HTTP Basic Auth support for introspection", "user": {"login": "Abhishek8394", "id": 5524161, "node_id": "MDQ6VXNlcjU1MjQxNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5524161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abhishek8394", "html_url": "https://github.com/Abhishek8394", "followers_url": "https://api.github.com/users/Abhishek8394/followers", "following_url": "https://api.github.com/users/Abhishek8394/following{/other_user}", "gists_url": "https://api.github.com/users/Abhishek8394/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abhishek8394/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abhishek8394/subscriptions", "organizations_url": "https://api.github.com/users/Abhishek8394/orgs", "repos_url": "https://api.github.com/users/Abhishek8394/repos", "events_url": "https://api.github.com/users/Abhishek8394/events{/privacy}", "received_events_url": "https://api.github.com/users/Abhishek8394/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-04-24T03:47:04Z", "updated_at": "2020-03-23T13:57:02Z", "closed_at": "2020-03-23T13:57:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Expanding upon the issue #529** \r\n\r\nIt seems that introspection endpoint is not allowing client authentication via HTTP Basic auth. As mentioned in the comments in the code at [introspect.py#L13](https://github.com/jazzband/django-oauth-toolkit/blob/2fdb0fea4efec9bc79708f0ac1b4b24884f26f97/oauth2_provider/views/introspect.py#L13) \r\nThe RFC allows for HTTP basic auth: [https://tools.ietf.org/html/rfc7662#section-2.1](https://tools.ietf.org/html/rfc7662#section-2.1)\r\n\r\nIt seems that the authentication is bound to access tokens. This is a problem because the only straight forward way to get access tokens is using `client_credentials` grant type. But currently apps are allowed only one grant type. \r\n\r\n**Reproducing issue**\r\n1. Create an `confidential` application with grant type `authorization_code`\r\n2. Get an access token for some user with respect to the newly created app.\r\n3. send introspection request\r\n\r\n```python\r\nimport requests\r\nimport base64\r\nCLIENT_ID='aa'\r\nCLIENT_SECRET='aa'\r\n\r\ndef introspect(access_token):\r\n\tpayload = {\r\n\t\t'token': access_token\r\n\t}\r\n\tauth = base64.b64encode((CLIENT_ID + ':' + SECRET).encode())\r\n\tresp = requests.post('http://localhost:8000/o/introspect/', payload, \r\n\t\theaders={\r\n\t\t\t'Authorization': 'Basic ' + auth.decode('latin-1')\r\n\t\t})\r\n\treturn resp\r\n\r\nprint(introspect('tokenhere').text)\r\n```\r\n\r\nThere is a workaround proposed for going into django admin and creating an access token for the app but that wouldn't scale. \r\n\r\nAn alternative would be to use the setting for resource auth token and exclusively allow it only for introspection routes. That might work too, but it would have you leak your introspection token across several resource services. \r\n\r\nI would like to work on this if this qualifies as a bug/issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/705", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/705/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/705/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/705", "id": 431993908, "node_id": "MDU6SXNzdWU0MzE5OTM5MDg=", "number": 705, "title": "Allow access to only specific endpoints", "user": {"login": "hamza-jutt", "id": 15797356, "node_id": "MDQ6VXNlcjE1Nzk3MzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/15797356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamza-jutt", "html_url": "https://github.com/hamza-jutt", "followers_url": "https://api.github.com/users/hamza-jutt/followers", "following_url": "https://api.github.com/users/hamza-jutt/following{/other_user}", "gists_url": "https://api.github.com/users/hamza-jutt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamza-jutt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamza-jutt/subscriptions", "organizations_url": "https://api.github.com/users/hamza-jutt/orgs", "repos_url": "https://api.github.com/users/hamza-jutt/repos", "events_url": "https://api.github.com/users/hamza-jutt/events{/privacy}", "received_events_url": "https://api.github.com/users/hamza-jutt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-11T12:23:24Z", "updated_at": "2019-05-29T14:44:16Z", "closed_at": "2019-05-29T14:44:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "By default all endpoints can be accessed with access token if permissions and scopes_required is not set on view. \r\nFor example if I have 200 endpoints and only 3 should be accessed via access_token(OAuth 2.0). I'll have to add permission classes on all 197 views to not allow via access_token(Also there is not any clear way to make sure some endpoint is not accessed via access_token). \r\n\r\nIs there any way I could allow only specific views via access_token by some setting?\r\nAPI is created with DRF", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/702", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/702/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/702/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/702", "id": 431299004, "node_id": "MDU6SXNzdWU0MzEyOTkwMDQ=", "number": 702, "title": "Grace period incompatible with token rotation", "user": {"login": "Maronato", "id": 19658460, "node_id": "MDQ6VXNlcjE5NjU4NDYw", "avatar_url": "https://avatars1.githubusercontent.com/u/19658460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maronato", "html_url": "https://github.com/Maronato", "followers_url": "https://api.github.com/users/Maronato/followers", "following_url": "https://api.github.com/users/Maronato/following{/other_user}", "gists_url": "https://api.github.com/users/Maronato/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maronato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maronato/subscriptions", "organizations_url": "https://api.github.com/users/Maronato/orgs", "repos_url": "https://api.github.com/users/Maronato/repos", "events_url": "https://api.github.com/users/Maronato/events{/privacy}", "received_events_url": "https://api.github.com/users/Maronato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-10T04:30:28Z", "updated_at": "2019-04-10T06:23:49Z", "closed_at": "2019-04-10T06:23:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This has been discussed on #631, but I think the merged solution(#660) does not fix it.\r\n\r\nFrom what I understand, the objective of the grace period is to allow clients to send another refresh_token request using the same refresh token and get the newly generated access token back every time during such period.\r\n\r\nThe problem with #660 is that it only makes sure the new access token is returned, not the new refresh token generated by the token rotation.\r\n\r\nThis means that all refresh_token requests made during the grace period will return the **revoked refresh token** instead of the new one generated during the first refresh_token request. As such, if the client loses the new refresh token returned during the first call, it won't be able to renew tokens anymore.\r\n\r\nTo illustrate, assume we have a pair of access-refresh(A1, R1) tokens that we want to refresh.\r\nThis is the current behavior:\r\n## First refresh\r\n- R1 is sent to /o/token/\r\n- R1 is revoked\r\n- /o/token/ returns a pair (A2, R2) of new access and refresh tokens (per token rotation)\r\n\r\n## Second refresh (during grace period)\r\n- R1 is sent to /o/token/\r\n- R1 is already revoked\r\n- /o/token/ returns a pair (A2, R1) of the new access token and the **old, revoked refresh token**\r\n\r\nShouldn't the second refresh call return (A2, R2)? Is this the desired behavior? \r\nIf not, I already have a fix and will create a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/701", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/701/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/701/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/701", "id": 431270635, "node_id": "MDU6SXNzdWU0MzEyNzA2MzU=", "number": 701, "title": "Django master branch no longer support Python 2", "user": {"login": "wiliamsouza", "id": 215986, "node_id": "MDQ6VXNlcjIxNTk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/215986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiliamsouza", "html_url": "https://github.com/wiliamsouza", "followers_url": "https://api.github.com/users/wiliamsouza/followers", "following_url": "https://api.github.com/users/wiliamsouza/following{/other_user}", "gists_url": "https://api.github.com/users/wiliamsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiliamsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiliamsouza/subscriptions", "organizations_url": "https://api.github.com/users/wiliamsouza/orgs", "repos_url": "https://api.github.com/users/wiliamsouza/repos", "events_url": "https://api.github.com/users/wiliamsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/wiliamsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-10T02:07:54Z", "updated_at": "2019-04-10T04:24:59Z", "closed_at": "2019-04-10T02:54:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nTraceback:                                                                                                                                                                                                           \r\ntests/test_rest_framework.py:10: in <module>                                                                                                                                                                         \r\n    from rest_framework import permissions                                                                                                                                                                           \r\n.tox/py36-djangomaster/lib/python3.6/site-packages/rest_framework/permissions.py:7: in <module>                                                                                                                      \r\n    from django.utils import six                                                                                                                                                                                     \r\nE   ImportError: cannot import name 'six'  \r\n``` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/697", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/697/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/697/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/697", "id": 418768775, "node_id": "MDU6SXNzdWU0MTg3Njg3NzU=", "number": 697, "title": "Do you plan to release a new version soon? ", "user": {"login": "andrroy", "id": 2963972, "node_id": "MDQ6VXNlcjI5NjM5NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2963972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrroy", "html_url": "https://github.com/andrroy", "followers_url": "https://api.github.com/users/andrroy/followers", "following_url": "https://api.github.com/users/andrroy/following{/other_user}", "gists_url": "https://api.github.com/users/andrroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrroy/subscriptions", "organizations_url": "https://api.github.com/users/andrroy/orgs", "repos_url": "https://api.github.com/users/andrroy/repos", "events_url": "https://api.github.com/users/andrroy/events{/privacy}", "received_events_url": "https://api.github.com/users/andrroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-03-08T12:32:08Z", "updated_at": "2020-05-03T19:46:09Z", "closed_at": "2020-05-03T19:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Are you planning a new release soon? We have been waiting for https://github.com/jazzband/django-oauth-toolkit/pull/611 for a while, as it is causing a lot of exceptions in production. I know we can install the latest version via Github, but I'm really looking forward to having the last version in pip", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/696", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/696/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/696/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/696", "id": 417500445, "node_id": "MDU6SXNzdWU0MTc1MDA0NDU=", "number": 696, "title": "Django session is not allowing logging out entirely", "user": {"login": "joshnewlinatclearobject", "id": 29074853, "node_id": "MDQ6VXNlcjI5MDc0ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/29074853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshnewlinatclearobject", "html_url": "https://github.com/joshnewlinatclearobject", "followers_url": "https://api.github.com/users/joshnewlinatclearobject/followers", "following_url": "https://api.github.com/users/joshnewlinatclearobject/following{/other_user}", "gists_url": "https://api.github.com/users/joshnewlinatclearobject/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshnewlinatclearobject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshnewlinatclearobject/subscriptions", "organizations_url": "https://api.github.com/users/joshnewlinatclearobject/orgs", "repos_url": "https://api.github.com/users/joshnewlinatclearobject/repos", "events_url": "https://api.github.com/users/joshnewlinatclearobject/events{/privacy}", "received_events_url": "https://api.github.com/users/joshnewlinatclearobject/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-05T21:03:59Z", "updated_at": "2019-03-07T14:43:40Z", "closed_at": "2019-03-07T14:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nI don't really think this is an issue with oauth-toolkit, but I'm not sure where put this question.\r\n\r\nI'm using a frontend application which redirects to a custom `auth_views.LoginView` on the backend (django-oauth-toolkit) with the `client_id`, etc. I have all of this working. (I'm using implicit grant, btw).\r\n\r\nThe problem is when the user logs out, I use `/o/revoke_token`, which successfully removes the token from the db. However, when the user will turn around and log back in, it never prompts them for their username/password again. The `auth_views.LoginView` will give a 302 and redirect back to the frontend with a valid `api_key`.\r\n\r\nHow can I prevent this? I want to prompt the user EVERY TIME they hit that page for their username/password. This way, they can log out and log back in with a different user, if necessary.\r\n\r\nThanks!\r\nJosh N.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/693", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/693/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/693/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/693", "id": 410250959, "node_id": "MDU6SXNzdWU0MTAyNTA5NTk=", "number": 693, "title": "Upgrade 1.0.0 -> 1.1.2 inactive user error code 400 instead of 401 ", "user": {"login": "extremoburo", "id": 40734, "node_id": "MDQ6VXNlcjQwNzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/40734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/extremoburo", "html_url": "https://github.com/extremoburo", "followers_url": "https://api.github.com/users/extremoburo/followers", "following_url": "https://api.github.com/users/extremoburo/following{/other_user}", "gists_url": "https://api.github.com/users/extremoburo/gists{/gist_id}", "starred_url": "https://api.github.com/users/extremoburo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/extremoburo/subscriptions", "organizations_url": "https://api.github.com/users/extremoburo/orgs", "repos_url": "https://api.github.com/users/extremoburo/repos", "events_url": "https://api.github.com/users/extremoburo/events{/privacy}", "received_events_url": "https://api.github.com/users/extremoburo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-14T11:18:36Z", "updated_at": "2019-02-18T13:32:50Z", "closed_at": "2019-02-18T13:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nafter upgrading from 1.0.0 to 1.1.2 I've noticed I'm getting an error 400 code when the user is  expired, before I was getting code 401. the same request returns 200 if the user is valid so I don't think I'm creating a wrong request, my fault or not? \r\n\r\nhere is my test : \r\n\r\n   ```\r\nfrom django.core.urlresolvers import reverse\r\nfrom django.test import override_settings\r\nfrom django.utils import timezone\r\n\r\nfrom rest_framework import status\r\nfrom rest_framework.test import APITestCase\r\n\r\nfrom . import factories as f\r\n\r\nclass TestPasswordGrant(APITestCase):\r\n    def test_access_token_not_granted_when_user_inactive(self):\r\n        user = f.UserFactory(expires=timezone.now() - timezone.timedelta(seconds=1))  # user is expired\r\n        app = f.OAuth2AppFactory()\r\n\r\n        token_request_data = {\r\n            'client_id': app.client_id, 'grant_type': 'password',\r\n            'username': user.username, 'password': '123456'\r\n        }\r\n        response = self.client.post(reverse('oauth2_provider:token'), data=token_request_data, format=\"multipart\")\r\n        self.assertEqual(response.status_code, status.HTTP_401_UNAUTHORIZED)\r\n```\r\n\r\nAnd the UserFactory Class:\r\n\r\n```\r\nimport factory\r\nfrom factory import fuzzy\r\n\r\nclass UserFactory(factory.django.DjangoModelFactory):\r\n    class Meta:\r\n        model = 'profiles.User'\r\n        django_get_or_create = ('username',)\r\n\r\n    username = fuzzy.FuzzyText()\r\n    password = factory.PostGenerationMethodCall('set_password', '123456')\r\n    email = 'test@test.com'\r\n\r\nclass OAuth2AppFactory(factory.django.DjangoModelFactory):\r\n    class Meta:\r\n        model = 'oauth2_provider.Application'\r\n\r\n    name = 'test application'\r\n    user = factory.SubFactory(UserFactory)\r\n    client_type = 'public'\r\n    authorization_grant_type = 'password'\r\n```\r\n\r\nthanks in advance for any tip", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/692", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/692/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/692/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/692", "id": 407153672, "node_id": "MDU6SXNzdWU0MDcxNTM2NzI=", "number": 692, "title": "revoke token on invalid token returns 200 instead of 4xx", "user": {"login": "ashishmohite", "id": 5551367, "node_id": "MDQ6VXNlcjU1NTEzNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5551367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashishmohite", "html_url": "https://github.com/ashishmohite", "followers_url": "https://api.github.com/users/ashishmohite/followers", "following_url": "https://api.github.com/users/ashishmohite/following{/other_user}", "gists_url": "https://api.github.com/users/ashishmohite/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashishmohite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashishmohite/subscriptions", "organizations_url": "https://api.github.com/users/ashishmohite/orgs", "repos_url": "https://api.github.com/users/ashishmohite/repos", "events_url": "https://api.github.com/users/ashishmohite/events{/privacy}", "received_events_url": "https://api.github.com/users/ashishmohite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-06T09:50:47Z", "updated_at": "2019-05-29T14:47:08Z", "closed_at": "2019-05-29T14:47:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "revoke_token endpoint on passing  invalid token returns 200 instead of 4xx\r\nI'm not sure whether it's intended way of working or a bug. To me it looks like a bug", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/691", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/691/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/691/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/691", "id": 404111835, "node_id": "MDU6SXNzdWU0MDQxMTE4MzU=", "number": 691, "title": "How to skip approval promp after token expire", "user": {"login": "cloverink", "id": 26240331, "node_id": "MDQ6VXNlcjI2MjQwMzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/26240331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cloverink", "html_url": "https://github.com/cloverink", "followers_url": "https://api.github.com/users/cloverink/followers", "following_url": "https://api.github.com/users/cloverink/following{/other_user}", "gists_url": "https://api.github.com/users/cloverink/gists{/gist_id}", "starred_url": "https://api.github.com/users/cloverink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cloverink/subscriptions", "organizations_url": "https://api.github.com/users/cloverink/orgs", "repos_url": "https://api.github.com/users/cloverink/repos", "events_url": "https://api.github.com/users/cloverink/events{/privacy}", "received_events_url": "https://api.github.com/users/cloverink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-29T03:56:21Z", "updated_at": "2019-05-29T14:49:52Z", "closed_at": "2019-05-29T14:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI have a question. \r\nI was setting OAUTH2_PROVIDER as below\r\n```\r\nACCESS_TOKEN_EXPIRE_SECONDS: 1800,\r\nREQUEST_APPROVAL_PROMPT: 'auto'\r\n```\r\n\r\nIt works correctly but after _1800_ second.\r\n\r\nI try to login again from popup window.\r\nIt still show approval prompt.\r\n\r\n(I expect a system will not ask me again when I approved this site)\r\nAny suggesstion ?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/689", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/689/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/689/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/689", "id": 403424975, "node_id": "MDU6SXNzdWU0MDM0MjQ5NzU=", "number": 689, "title": "Management command to create a Client Application", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-26T09:42:22Z", "updated_at": "2019-05-21T10:24:56Z", "closed_at": "2019-05-21T10:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use this library in my 1 API and 2 clients: 1 webclient and 1 android application.\r\nI normally us automated CI/CD pipelines to deploy my scripts.\r\n\r\nI am unable to easily auto-create the `Client Application` - https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html#create-an-oauth2-client-application\r\n\r\nIt would be awesome if there is a management command to do this so I can just run that and create 2 clients using a secret/key I create during my deployment process", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/688", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/688/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/688/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/688", "id": 403106523, "node_id": "MDU6SXNzdWU0MDMxMDY1MjM=", "number": 688, "title": "Auto logoff after granting application access", "user": {"login": "shallquist", "id": 3285533, "node_id": "MDQ6VXNlcjMyODU1MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3285533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shallquist", "html_url": "https://github.com/shallquist", "followers_url": "https://api.github.com/users/shallquist/followers", "following_url": "https://api.github.com/users/shallquist/following{/other_user}", "gists_url": "https://api.github.com/users/shallquist/gists{/gist_id}", "starred_url": "https://api.github.com/users/shallquist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shallquist/subscriptions", "organizations_url": "https://api.github.com/users/shallquist/orgs", "repos_url": "https://api.github.com/users/shallquist/repos", "events_url": "https://api.github.com/users/shallquist/events{/privacy}", "received_events_url": "https://api.github.com/users/shallquist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-25T10:56:22Z", "updated_at": "2019-01-31T08:40:03Z", "closed_at": "2019-01-31T08:40:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I realize this isn't an issue, but this seems like the best place to get a response.\r\n\r\nWe are using Oauth2 on our project and have set up an Authentication Server per the recipe for.  [ \"Make a Provider in a Minute\"](https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html).\r\n\r\nThe thing that I have noticed is that after the workflow for requesting an access token completes it leaves the user logged in on the Authentication Server.  For example, after a user has completed the access token workflow, a user can navigate back to /o/applications and not be challenged to enter a password, since they are still logged in.\r\n\r\nOur objective is to have single-sign-on using Oauth2 Authentication Server using the Django OAuth Toolkit and allow angular client applications to request access tokens without having to pass login credentials from the Angular Client to the Authentication server.\r\n\r\nIs there anyway to automatically log the user off of the Authorization server, once the user has granted access to the application?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/685", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/685/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/685/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/685", "id": 396591968, "node_id": "MDU6SXNzdWUzOTY1OTE5Njg=", "number": 685, "title": "If you are using implicit, authorization_codeor all-in-one grant_type, you must define redirect_uris field in your Application model", "user": {"login": "idobrodushniy", "id": 29353214, "node_id": "MDQ6VXNlcjI5MzUzMjE0", "avatar_url": "https://avatars1.githubusercontent.com/u/29353214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idobrodushniy", "html_url": "https://github.com/idobrodushniy", "followers_url": "https://api.github.com/users/idobrodushniy/followers", "following_url": "https://api.github.com/users/idobrodushniy/following{/other_user}", "gists_url": "https://api.github.com/users/idobrodushniy/gists{/gist_id}", "starred_url": "https://api.github.com/users/idobrodushniy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idobrodushniy/subscriptions", "organizations_url": "https://api.github.com/users/idobrodushniy/orgs", "repos_url": "https://api.github.com/users/idobrodushniy/repos", "events_url": "https://api.github.com/users/idobrodushniy/events{/privacy}", "received_events_url": "https://api.github.com/users/idobrodushniy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T18:07:59Z", "updated_at": "2020-08-12T21:10:58Z", "closed_at": "2020-08-12T21:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI have got an error because of trying to access the AuthorizationView with credentials of application with grant type  'client-credentials'.\r\nWhat is the right way to allow only \"authorization-code\" grant type in this view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/684", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/684/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/684/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/684", "id": 393712893, "node_id": "MDU6SXNzdWUzOTM3MTI4OTM=", "number": 684, "title": "SessionAuthenticationMiddleware removed from django v2.0 onwards.", "user": {"login": "vishal-pandey", "id": 19498820, "node_id": "MDQ6VXNlcjE5NDk4ODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/19498820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishal-pandey", "html_url": "https://github.com/vishal-pandey", "followers_url": "https://api.github.com/users/vishal-pandey/followers", "following_url": "https://api.github.com/users/vishal-pandey/following{/other_user}", "gists_url": "https://api.github.com/users/vishal-pandey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishal-pandey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishal-pandey/subscriptions", "organizations_url": "https://api.github.com/users/vishal-pandey/orgs", "repos_url": "https://api.github.com/users/vishal-pandey/repos", "events_url": "https://api.github.com/users/vishal-pandey/events{/privacy}", "received_events_url": "https://api.github.com/users/vishal-pandey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-23T00:31:11Z", "updated_at": "2020-04-17T15:23:21Z", "closed_at": "2018-12-23T00:33:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django.contrib.auth.middleware.SessionAuthenticationMiddleware is removed from django 2.0 onwards\r\n\r\nIt is still mentioned in the documentation [https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_03.html#setup-a-provider](https://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_03.html#setup-a-provider)\r\nIs there any work around of this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/683", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/683/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/683/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/683", "id": 393695440, "node_id": "MDU6SXNzdWUzOTM2OTU0NDA=", "number": 683, "title": "Rest Framework: no such table: main.oauth2_provider_refreshtoken__old", "user": {"login": "softwaresale", "id": 23638963, "node_id": "MDQ6VXNlcjIzNjM4OTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/23638963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/softwaresale", "html_url": "https://github.com/softwaresale", "followers_url": "https://api.github.com/users/softwaresale/followers", "following_url": "https://api.github.com/users/softwaresale/following{/other_user}", "gists_url": "https://api.github.com/users/softwaresale/gists{/gist_id}", "starred_url": "https://api.github.com/users/softwaresale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/softwaresale/subscriptions", "organizations_url": "https://api.github.com/users/softwaresale/orgs", "repos_url": "https://api.github.com/users/softwaresale/repos", "events_url": "https://api.github.com/users/softwaresale/events{/privacy}", "received_events_url": "https://api.github.com/users/softwaresale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-22T18:53:16Z", "updated_at": "2019-03-02T18:01:50Z", "closed_at": "2019-03-02T18:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all.\r\n\r\nCurrently, I am trying to use django oauth toolkit with my REST api, which is built with django-rest-framework. I followed the django rest framework tutorial [here](https://django-oauth-toolkit.readthedocs.io/en/stable/rest-framework/rest-framework.html) to the letter. \r\n\r\nEverything for the most part works fine. I can access the admin site and register new applications. However, my problem comes when I try to request a new token.\r\n\r\nWhenever I run\r\n`$ curl -X POST -d \"grant_type=password&username=<user_name>&password=<password>\" -u\"<client_id>:<client_secret>\" http://localhost:8000/o/token/\r\n` with the proper data filled in (I actually put my own username, password, client id, and client secret  in), I get a 500 error and get the following exception: \r\n`\r\nno such table: main.oauth2_provider_refreshtoken__old\r\n`.\r\n\r\nDoes anyone know how to fix this? I migrated prior to running, and the migration ran fine. I am also using a custom user class, if it makes a difference. It extends \r\n`django.contrib.auth.models.AbstractUser` and is registered in `settings.py` via the `AUTH_USER_MODEL` setting.\r\n\r\nI am using django-oauth-toolkit v1.2.0, django-rest-framework v3.9.0, and django v2.1.4.\r\n\r\nThanks for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/682", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/682/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/682/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/682", "id": 392991611, "node_id": "MDU6SXNzdWUzOTI5OTE2MTE=", "number": 682, "title": "Authentication failed: unauthorized_client", "user": {"login": "rafahsolis", "id": 9390569, "node_id": "MDQ6VXNlcjkzOTA1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9390569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafahsolis", "html_url": "https://github.com/rafahsolis", "followers_url": "https://api.github.com/users/rafahsolis/followers", "following_url": "https://api.github.com/users/rafahsolis/following{/other_user}", "gists_url": "https://api.github.com/users/rafahsolis/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafahsolis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafahsolis/subscriptions", "organizations_url": "https://api.github.com/users/rafahsolis/orgs", "repos_url": "https://api.github.com/users/rafahsolis/repos", "events_url": "https://api.github.com/users/rafahsolis/events{/privacy}", "received_events_url": "https://api.github.com/users/rafahsolis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-20T10:54:23Z", "updated_at": "2019-09-03T21:50:37Z", "closed_at": "2019-05-29T14:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm having trouble implementing an Oauth2 server with django-oauth-toolkit and connecting client with social_auth.\r\nMy client does corectly redirect to the oauth server login page, but when the server returns the redirect i get an error message:\r\n\r\n    AuthFailed at /complete/mybackend/ \r\n    Authentication failed: unauthorized_client\r\n\r\nI've been trying to debug this but it's a bit hard, what i found out is that the oauth server is the one returning this message, but if i try to login directly with the same user to the oauth server it works.\r\nI'm using:\r\n## Server\r\nPython 3.6.7\r\nDjango==2.1.4\r\ndjango-oauth-toolkit==1.2.0\r\n\r\n## Client\r\nPython 3.6.7\r\nDjango==2.1.4\r\nsocial-auth-app-django==3.1.0\r\n\r\n### Here is the full traceback that i get on the client server:\r\n    Internal Server Error: /complete/mybackend/\r\n    Traceback (most recent call last):\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n        response = get_response(request)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n        response = self.process_exception_by_middleware(e, request)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/django/core/handlers/base.py\", line 124, in _get_response\r\n        response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/django/views/decorators/cache.py\", line 44, in _wrapped_view_func\r\n        response = view_func(request, *args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n        return view_func(*args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_django/utils.py\", line 49, in wrapper\r\n        return func(request, backend, *args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_django/views.py\", line 34, in complete\r\n        *args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_core/actions.py\", line 43, in do_complete\r\n        user = backend.complete(user=user, *args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_core/backends/base.py\", line 40, in complete\r\n        return self.auth_complete(*args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_core/utils.py\", line 259, in wrapper\r\n        return func(*args, **kwargs)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_core/backends/oauth.py\", line 391, in auth_complete\r\n        self.process_error(self.data)\r\n    File \"/home/ubuntu/.virtualenvs/Oauth2Client/lib/python3.6/site-packages/social_core/backends/oauth.py\", line 383, in process_error\r\n        data['error'])\r\n    social_core.exceptions.AuthFailed: Authentication failed: unauthorized_client\r\n    [20/Dec/2018 10:34:39] \"GET /complete/mybackend/?redirect_state=EQWtzLd****************I9DNIhJD6&error=unauthorized_client&state=EQWtzLd2RG****************NIhJD6 HTTP/1.1\" 500 106974\r\n\r\nI coudn't find out why this is happening yet...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/677", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/677/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/677/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/677", "id": 391363788, "node_id": "MDU6SXNzdWUzOTEzNjM3ODg=", "number": 677, "title": "When the access_token is expired \"Authentication credentials were not provided.\" is returned", "user": {"login": "smn-snkl", "id": 11544327, "node_id": "MDQ6VXNlcjExNTQ0MzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/11544327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smn-snkl", "html_url": "https://github.com/smn-snkl", "followers_url": "https://api.github.com/users/smn-snkl/followers", "following_url": "https://api.github.com/users/smn-snkl/following{/other_user}", "gists_url": "https://api.github.com/users/smn-snkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/smn-snkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smn-snkl/subscriptions", "organizations_url": "https://api.github.com/users/smn-snkl/orgs", "repos_url": "https://api.github.com/users/smn-snkl/repos", "events_url": "https://api.github.com/users/smn-snkl/events{/privacy}", "received_events_url": "https://api.github.com/users/smn-snkl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-15T10:06:05Z", "updated_at": "2020-03-16T14:52:39Z", "closed_at": "2020-03-16T14:52:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the token is expired it returns\r\n\r\n`{\"detail\":\"Authentication credentials were not provided.\"}`\r\n\r\neven though the credentials are provided in the request headers: \r\n\r\n`'HTTP_AUTHORIZATION': 'Bearer DJoUxCatnmzeh4ZGGUNhBxZP3erbdq'`\r\n\r\nA better error message might be helpful, what do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/674", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/674/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/674/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/674", "id": 390265473, "node_id": "MDU6SXNzdWUzOTAyNjU0NzM=", "number": 674, "title": "source refresh token is always null", "user": {"login": "singhravi1", "id": 20294674, "node_id": "MDQ6VXNlcjIwMjk0Njc0", "avatar_url": "https://avatars1.githubusercontent.com/u/20294674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singhravi1", "html_url": "https://github.com/singhravi1", "followers_url": "https://api.github.com/users/singhravi1/followers", "following_url": "https://api.github.com/users/singhravi1/following{/other_user}", "gists_url": "https://api.github.com/users/singhravi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/singhravi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singhravi1/subscriptions", "organizations_url": "https://api.github.com/users/singhravi1/orgs", "repos_url": "https://api.github.com/users/singhravi1/repos", "events_url": "https://api.github.com/users/singhravi1/events{/privacy}", "received_events_url": "https://api.github.com/users/singhravi1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-12-12T15:02:19Z", "updated_at": "2018-12-13T18:31:04Z", "closed_at": "2018-12-13T18:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every access token is created with the source_refresh_token as null.\r\n\r\nIf we have specified this field as one to one, it should be stored in the access token object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/673", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/673/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/673/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/673", "id": 389052618, "node_id": "MDU6SXNzdWUzODkwNTI2MTg=", "number": 673, "title": "How do i implement Passwordless authentication OTP? ", "user": {"login": "amir5121", "id": 14313737, "node_id": "MDQ6VXNlcjE0MzEzNzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/14313737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir5121", "html_url": "https://github.com/amir5121", "followers_url": "https://api.github.com/users/amir5121/followers", "following_url": "https://api.github.com/users/amir5121/following{/other_user}", "gists_url": "https://api.github.com/users/amir5121/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir5121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir5121/subscriptions", "organizations_url": "https://api.github.com/users/amir5121/orgs", "repos_url": "https://api.github.com/users/amir5121/repos", "events_url": "https://api.github.com/users/amir5121/events{/privacy}", "received_events_url": "https://api.github.com/users/amir5121/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-09T18:58:41Z", "updated_at": "2020-06-28T09:14:24Z", "closed_at": "2018-12-09T19:40:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "is there a way to specify how to validate a user other that username and password? i couldn't find anything in the settings.\r\nsimilar to #380 but apparently the link referenced in the comments is invalid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/672", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/672/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/672/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/672", "id": 387713856, "node_id": "MDU6SXNzdWUzODc3MTM4NTY=", "number": 672, "title": "Invalid grant_type refresh_token", "user": {"login": "tximpa91", "id": 10771626, "node_id": "MDQ6VXNlcjEwNzcxNjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/10771626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tximpa91", "html_url": "https://github.com/tximpa91", "followers_url": "https://api.github.com/users/tximpa91/followers", "following_url": "https://api.github.com/users/tximpa91/following{/other_user}", "gists_url": "https://api.github.com/users/tximpa91/gists{/gist_id}", "starred_url": "https://api.github.com/users/tximpa91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tximpa91/subscriptions", "organizations_url": "https://api.github.com/users/tximpa91/orgs", "repos_url": "https://api.github.com/users/tximpa91/repos", "events_url": "https://api.github.com/users/tximpa91/events{/privacy}", "received_events_url": "https://api.github.com/users/tximpa91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-05T11:29:43Z", "updated_at": "2020-02-04T06:59:21Z", "closed_at": "2019-05-29T14:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I am trying to get a refresh token with this endpoint 127.0.0.1:8000/o/token/ and the payload , I already try with json and x-www-form-urlencoded. The response is always 401 invalid grant type\r\n{\r\n\t\r\n\t\"grant_type\": \"refresh_token\",\r\n\t\"refresh_token\":\"xxxxxx\",\r\n\t\"client_id\":\"xxxxx\",\r\n\t\"client_secret\":\"xxxxxx\"\r\n\r\n\t\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/665", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/665/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/665/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/665", "id": 378869198, "node_id": "MDU6SXNzdWUzNzg4NjkxOTg=", "number": 665, "title": "\"+\" in username for password grant?", "user": {"login": "bartmika", "id": 5767602, "node_id": "MDQ6VXNlcjU3Njc2MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5767602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartmika", "html_url": "https://github.com/bartmika", "followers_url": "https://api.github.com/users/bartmika/followers", "following_url": "https://api.github.com/users/bartmika/following{/other_user}", "gists_url": "https://api.github.com/users/bartmika/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartmika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartmika/subscriptions", "organizations_url": "https://api.github.com/users/bartmika/orgs", "repos_url": "https://api.github.com/users/bartmika/repos", "events_url": "https://api.github.com/users/bartmika/events{/privacy}", "received_events_url": "https://api.github.com/users/bartmika/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T18:52:05Z", "updated_at": "2018-11-08T19:03:29Z", "closed_at": "2018-11-08T19:03:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using the **resource password grant** option. I successfully manage to get the following console code to run:\r\n\r\n``\r\ncurl -X POST -d \"grant_type=password&username=johnsmith@some_email.com&password=<password>\" -u\"<client_id>:<client_secret>\" http://localhost:8000/o/token/\r\n``\r\n\r\nHowever, when I run the following, I get a *Invalid credentials given* error:\r\n\r\n``\r\ncurl -X POST -d \"grant_type=password&username=johnsmith+1@some_email.com&password=<password>\" -u\"<client_id>:<client_secret>\" http://localhost:8000/o/token/\r\n``\r\n\r\nDo you know what is going on? I am simply adding `+1` to the email and this issue happens.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/663", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/663/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/663/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/663", "id": 378463686, "node_id": "MDU6SXNzdWUzNzg0NjM2ODY=", "number": 663, "title": "OneToOneField causes duplicate NULL key errors", "user": {"login": "lcary", "id": 6766704, "node_id": "MDQ6VXNlcjY3NjY3MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6766704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcary", "html_url": "https://github.com/lcary", "followers_url": "https://api.github.com/users/lcary/followers", "following_url": "https://api.github.com/users/lcary/following{/other_user}", "gists_url": "https://api.github.com/users/lcary/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcary/subscriptions", "organizations_url": "https://api.github.com/users/lcary/orgs", "repos_url": "https://api.github.com/users/lcary/repos", "events_url": "https://api.github.com/users/lcary/events{/privacy}", "received_events_url": "https://api.github.com/users/lcary/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-11-07T20:50:48Z", "updated_at": "2020-07-14T17:05:00Z", "closed_at": "2018-11-17T18:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line [L262](https://github.com/jazzband/django-oauth-toolkit/blob/5b51da74019046ef4c8c81c9975db029a2113d52/oauth2_provider/models.py#L262) appears to be causing us some bugs. Having a `source_refresh_token` on the `AccessToken` as a `OneToOneField` seems to cause duplicate NULL key errors. Why isn't this a `ForeignKey`?\r\n\r\nWith any version newer than 1.1 that I have tested against MS SQL (perhaps this only appears on MS SQL because it enforces the constraint more rigidly than other databases?) we see the following error when adding or updating tokens:\r\n```\r\n('23000', \"[23000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Violation of UNIQUE KEY constraint 'UQ__oauth2_p__A1C69CA6C6465E5D'. Cannot insert duplicate key in object 'dbo.oauth2_provider_accesstoken'. The duplicate key value is (<NULL>). (2627) (SQLExecDirectW)\")\r\n```\r\n\r\nAt first I thought it was inserting NULL tokens, but then I looked a bit deeper and noticed that the insert statements looked fine from the token perspective: they all had non-null tokens. However, the `source_refresh_token_id` is NULL in our case:\r\n```\r\n[07/Nov/2018 20:18:43+0000] DEBUG [django.db.backends:111] (0.015) QUERY = 'SET NOCOUNT ON INSERT INTO [oauth2_provider_accesstoken] ([user_id], [source_refresh_token_id], [token], [application_id], [expires], [scope], [created], [updated]) VALUES (%s, %s, %s, %s, %s, %s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = (2034, None, '<redacted>', None, datetime.datetime(2018, 11, 7, 22, 3, 33), '<redacted>, datetime.datetime(2018, 11, 7, 20, 18, 43, 670891), datetime.datetime(2018, 11, 7, 20, 18, 43, 670906)); args=(2034, None, '<redacted>', None, datetime.datetime(2018, 11, 7, 22, 3, 33), '<redacted>', datetime.datetime(2018, 11, 7, 20, 18, 43, 670891), datetime.datetime(2018, 11, 7, 20, 18, 43, 670906))\r\n```\r\n\r\nLooking deeper, I noticed that there was an extra unique constraint at the database level, at which point I noticed in the migrations that `OneToOneField` is used, which enforces that unique constraint. This appears to have been added in commit https://github.com/jazzband/django-oauth-toolkit/commit/2e4d15ee9372eb65289382dae0ee3c82a54cac06. That commit explains why I started seeing this issue only after upgrading beyond version 1.1.0 of the library. I don't think it makes sense to enforce the `unique=True` rule (which occurs by default for `OneToOneField` fields) if the field also allows NULL value. To be clear, the code that's causing the issue is:\r\n```\r\n    source_refresh_token = models.OneToOneField(\r\n        # unique=True implied by the OneToOneField\r\n        oauth2_settings.REFRESH_TOKEN_MODEL, on_delete=models.SET_NULL, blank=True, null=True,\r\n        related_name=\"refreshed_access_token\"\r\n    )\r\n```\r\n\r\nFor now, I'm working around this by forking the library internally, and changing the `OneToOneField` to a `ForeignKey`, which seems to work fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/662", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/662/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/662/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/662", "id": 378107978, "node_id": "MDU6SXNzdWUzNzgxMDc5Nzg=", "number": 662, "title": "Generate token only if email is verified using allauth", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-07T01:47:55Z", "updated_at": "2018-11-09T09:26:44Z", "closed_at": "2018-11-09T09:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `allauth` to handle user registration and confirmation.\r\n\r\nWhen the user registers an account, it is mandatory to confirm the email address before login.\r\n```\r\n# allauth configuration\r\nACCOUNT_EMAIL_REQUIRED = True\r\nACCOUNT_EMAIL_VERIFICATION = 'mandatory'\r\n```\r\n\r\nBut on calling `o/token` endpoint with username and password, it generates access token even when user's email is not confirmed.\r\n\r\nHow can I integrate this with `allauth` and generate token only when user email is confirmed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/658", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/658/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/658/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/658", "id": 374598681, "node_id": "MDU6SXNzdWUzNzQ1OTg2ODE=", "number": 658, "title": "Can we track each client usage?", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-27T02:51:17Z", "updated_at": "2018-11-09T14:58:03Z", "closed_at": "2018-11-09T14:58:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using **Django-OAuth-Toolkit** to allow client based authorization.\r\n\r\nI have set different client for different platforms. Like for Android, a different client is used to generate the access token and for the web, a different client is used to generate the access token.\r\n\r\nI want to log which the client is making the request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/654", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/654/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/654/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/654", "id": 370261646, "node_id": "MDU6SXNzdWUzNzAyNjE2NDY=", "number": 654, "title": "releases vs. tags", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-15T17:18:35Z", "updated_at": "2018-10-17T09:54:44Z", "closed_at": "2018-10-17T09:54:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@jleclanche I note that the last and latest [\"Release\" in github is 1.0.0](https://github.com/jazzband/django-oauth-toolkit/releases/tag/1.0.0) but that there are many newer tags:\r\n```\r\n1.1.3  \u2026\r\n b31d693   zip   tar.gz\r\non Jun 3 \r\n1.2.0  \u2026\r\n 86e8f9b   zip   tar.gz\r\non May 11 \r\n1.1.2  \u2026\r\n 096ed11   zip   tar.gz\r\non May 8 \r\n1.1.1  \u2026\r\n 0ae7548   zip   tar.gz\r\non Apr 13 \r\n1.1.0  \u2026\r\n e7c3558   zip   tar.gz\r\n```\r\nI see you(?) have been pushing these to [pypi.org](https://pypi.org/project/django-oauth-toolkit/#history) just not creating a github Release to match. Should there be github Releases published as well or just drop doing them as tags are sufficient?\r\n\r\nHow can I help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/652", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/652/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/652/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/652", "id": 369002879, "node_id": "MDU6SXNzdWUzNjkwMDI4Nzk=", "number": 652, "title": "Provide _create_refresh_token method in oauth2_validators", "user": {"login": "thedustyrover", "id": 1179614, "node_id": "MDQ6VXNlcjExNzk2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1179614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedustyrover", "html_url": "https://github.com/thedustyrover", "followers_url": "https://api.github.com/users/thedustyrover/followers", "following_url": "https://api.github.com/users/thedustyrover/following{/other_user}", "gists_url": "https://api.github.com/users/thedustyrover/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedustyrover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedustyrover/subscriptions", "organizations_url": "https://api.github.com/users/thedustyrover/orgs", "repos_url": "https://api.github.com/users/thedustyrover/repos", "events_url": "https://api.github.com/users/thedustyrover/events{/privacy}", "received_events_url": "https://api.github.com/users/thedustyrover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-11T08:15:22Z", "updated_at": "2019-10-17T03:36:43Z", "closed_at": "2019-10-17T03:36:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "A handy overrideable method is provided for creating access tokens in the OAuth2Validator:\r\n\r\nhttps://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L543\r\n\r\nHowever there is no equivalent hook for creating refresh tokens, which is just a part of the save_bearer_token method:\r\n\r\nhttps://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L523\r\n\r\nSuch a method is handy to override the default way that Tokens are constructed. E.g. in my case the User model does not exist in the same database as the Token, breaking the foreign-key constraint and making it impossible to actually create a RefreshToken with an attached user.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/647", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/647/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/647/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/647", "id": 365411622, "node_id": "MDU6SXNzdWUzNjU0MTE2MjI=", "number": 647, "title": "Support native apps", "user": {"login": "asharif1990", "id": 35602900, "node_id": "MDQ6VXNlcjM1NjAyOTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/35602900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asharif1990", "html_url": "https://github.com/asharif1990", "followers_url": "https://api.github.com/users/asharif1990/followers", "following_url": "https://api.github.com/users/asharif1990/following{/other_user}", "gists_url": "https://api.github.com/users/asharif1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/asharif1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asharif1990/subscriptions", "organizations_url": "https://api.github.com/users/asharif1990/orgs", "repos_url": "https://api.github.com/users/asharif1990/repos", "events_url": "https://api.github.com/users/asharif1990/events{/privacy}", "received_events_url": "https://api.github.com/users/asharif1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-01T11:06:31Z", "updated_at": "2019-06-09T07:54:23Z", "closed_at": "2019-06-09T07:54:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope that I ask the question in a right place. I would like to know that whether by using the tool kit I can support the OAuth flow for native apps (Mobile) as well? Indeed, I would like to know, if it is possible to redirect by using custon_uri_scheme that is widely used in android apps", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/646", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/646/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/646/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/646", "id": 362066789, "node_id": "MDU6SXNzdWUzNjIwNjY3ODk=", "number": 646, "title": "Custom restrictions and permissions in TokenView", "user": {"login": "papayuca", "id": 37576489, "node_id": "MDQ6VXNlcjM3NTc2NDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/37576489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papayuca", "html_url": "https://github.com/papayuca", "followers_url": "https://api.github.com/users/papayuca/followers", "following_url": "https://api.github.com/users/papayuca/following{/other_user}", "gists_url": "https://api.github.com/users/papayuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/papayuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papayuca/subscriptions", "organizations_url": "https://api.github.com/users/papayuca/orgs", "repos_url": "https://api.github.com/users/papayuca/repos", "events_url": "https://api.github.com/users/papayuca/events{/privacy}", "received_events_url": "https://api.github.com/users/papayuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-20T08:08:22Z", "updated_at": "2019-03-12T21:36:12Z", "closed_at": "2019-03-12T21:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhat would be a preferred approach to add some restrictions based on combination of the application (client_id) and the user, when providing an access token? E.g. users coming from admin application (client) can obtain token only if they meet certain requirements, e.g. they are admin.\r\nMy idea is to override the TokenView, and add this in the post handler, but not sure if that would be a good practice. Any suggestions are welcome!\r\n\r\nThanks and cheers!\r\nP", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/635", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/635/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/635/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/635", "id": 351195303, "node_id": "MDU6SXNzdWUzNTExOTUzMDM=", "number": 635, "title": "Refresh token usage not clear", "user": {"login": "doc-E-brown", "id": 6936084, "node_id": "MDQ6VXNlcjY5MzYwODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6936084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doc-E-brown", "html_url": "https://github.com/doc-E-brown", "followers_url": "https://api.github.com/users/doc-E-brown/followers", "following_url": "https://api.github.com/users/doc-E-brown/following{/other_user}", "gists_url": "https://api.github.com/users/doc-E-brown/gists{/gist_id}", "starred_url": "https://api.github.com/users/doc-E-brown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doc-E-brown/subscriptions", "organizations_url": "https://api.github.com/users/doc-E-brown/orgs", "repos_url": "https://api.github.com/users/doc-E-brown/repos", "events_url": "https://api.github.com/users/doc-E-brown/events{/privacy}", "received_events_url": "https://api.github.com/users/doc-E-brown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-16T13:01:12Z", "updated_at": "2019-02-21T10:19:40Z", "closed_at": "2019-02-21T10:19:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Within the documentation it is not clear as to how to use a refresh token to get a new OAUTH token.  I am happy to issue a pull request against this issue.  There is documentation regarding the expiration and clearing of refresh tokens, but not how to use them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/633", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/633/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/633/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/633", "id": 350691030, "node_id": "MDU6SXNzdWUzNTA2OTEwMzA=", "number": 633, "title": "Undocumented (error prone) django-rest-framework authentication side-effect", "user": {"login": "gbataille", "id": 1113065, "node_id": "MDQ6VXNlcjExMTMwNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1113065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbataille", "html_url": "https://github.com/gbataille", "followers_url": "https://api.github.com/users/gbataille/followers", "following_url": "https://api.github.com/users/gbataille/following{/other_user}", "gists_url": "https://api.github.com/users/gbataille/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbataille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbataille/subscriptions", "organizations_url": "https://api.github.com/users/gbataille/orgs", "repos_url": "https://api.github.com/users/gbataille/repos", "events_url": "https://api.github.com/users/gbataille/events{/privacy}", "received_events_url": "https://api.github.com/users/gbataille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14", "html_url": "https://github.com/jazzband/django-oauth-toolkit/milestone/14", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/milestones/14/labels", "id": 5127090, "node_id": "MDk6TWlsZXN0b25lNTEyNzA5MA==", "number": 14, "title": "1.3", "description": "It's time for a release. Last release was 1.2.0 in 2018.", "creator": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 20, "state": "closed", "created_at": "2020-02-20T19:01:45Z", "updated_at": "2020-03-24T12:48:34Z", "due_on": "2020-03-01T08:00:00Z", "closed_at": "2020-03-24T12:48:34Z"}, "comments": 0, "created_at": "2018-08-15T05:32:52Z", "updated_at": "2020-03-01T02:43:38Z", "closed_at": "2020-03-01T02:43:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nIn here https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/contrib/rest_framework/authentication.py, the `authenticate` method has a hidden that effect. On authentication error, it sets a `oauth2_error` attribute on the request and then `authenticate_header` assumes it's there.\r\n\r\nThis caused me an issue because I have subclasses `OAuth2Authentication` and to override `authenticate`. Of course I did not know of this \"side effect\" and a lot of tests started to fail on my project. Was quite hard to debug.\r\n\r\nGranted it's odd that we override this class, we have legacy reasons to do so. I think the `authenticate_header` method should be more relaxed and look like\r\n```\r\nif hasattr(request, 'oauth2_error'):\r\n    www_authenticate_attributes.update(request.oauth2_error)\r\n```\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/631", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/631/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/631/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/631", "id": 348715494, "node_id": "MDU6SXNzdWUzNDg3MTU0OTQ=", "number": 631, "title": "REFRESH_TOKEN_GRACE_PERIOD_SECONDS is broken", "user": {"login": "glassfordm", "id": 8523751, "node_id": "MDQ6VXNlcjg1MjM3NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8523751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glassfordm", "html_url": "https://github.com/glassfordm", "followers_url": "https://api.github.com/users/glassfordm/followers", "following_url": "https://api.github.com/users/glassfordm/following{/other_user}", "gists_url": "https://api.github.com/users/glassfordm/gists{/gist_id}", "starred_url": "https://api.github.com/users/glassfordm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glassfordm/subscriptions", "organizations_url": "https://api.github.com/users/glassfordm/orgs", "repos_url": "https://api.github.com/users/glassfordm/repos", "events_url": "https://api.github.com/users/glassfordm/events{/privacy}", "received_events_url": "https://api.github.com/users/glassfordm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-08T13:00:49Z", "updated_at": "2019-04-10T06:42:24Z", "closed_at": "2019-04-10T06:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using django-oauth-toolkit 1.1.2, since I need to use it with Django 1.11, but I believe the issue still exists in the latest django-oauth-toolkit.\r\n\r\nREFRESH_TOKEN_GRACE_PERIOD_SECONDS is supposed to make it possible to use a refresh token once, then use it a second time within the grace period in case the response to the first refresh request is lost. However, the refresh token returned by the second request is never saved to the database, and so is invalid and unusable.\r\n\r\n# Obtain the initial refresh token\r\n`$ curl -X POST -d \"client_id=[INSERT ID]&client_secret=[INSERT SECRET]&grant_type=authorization_code&code=XOJQVyWLXSCOE20wgDv7HKyc2sYrVf&redirect_uri=http://127.0.0.1:8000/\" http://127.0.0.1:8000/o/token/`\r\n\r\n`{\"access_token\": \"eW2Ph0TyGFV139hbf9iKY6YgKX1cO1\", \"token_type\": \"Bearer\", \"expires_in\": 36000, \"refresh_token\": \"4oHfArCi0fn9NJEQnWAVo9sRgBgn2h\", \"scope\": \"read\"}`\r\n\r\n# Use the refresh token\r\n`$ curl -X POST -d \"client_id=[INSERT ID]&client_secret=[INSERT SECRET]&grant_type=refresh_token&refresh_token=4oHfArCi0fn9NJEQnWAVo9sRgBgn2h\" http://127.0.0.1:8000/o/token/`\r\n\r\n`{\"access_token\": \"YwUOsNq7HTVJcleIdvbx6tKPdBiO3v\", \"token_type\": \"Bearer\", \"expires_in\": 36000, \"refresh_token\": \"1P7zayXdg3FpgZ0fN6mZfuPRw1E4nN\", \"scope\": \"read\"}`\r\n\r\n# Use the same refresh token a 2nd time\r\n`$ curl -X POST -d \"client_id=[INSERT ID]&client_secret=[INSERT SECRET]&grant_type=refresh_token&refresh_token=4oHfArCi0fn9NJEQnWAVo9sRgBgn2h\" http://127.0.0.1:8000/o/token/`\r\n\r\n`{\"access_token\": \"YwUOsNq7HTVJcleIdvbx6tKPdBiO3v\", \"token_type\": \"Bearer\", \"expires_in\": 36000, \"refresh_token\": \"GvgyHHkqGuBTOgakNA14rqfMS56E4B\", \"scope\": \"read\"}`\r\n\r\n# The refresh token returned by the 2nd refresh request is invalid\r\n`$ curl -X POST -d \"client_id=[INSERT ID]&client_secret=[INSERT SECRET]&grant_type=refresh_token&refresh_token=GvgyHHkqGuBTOgakNA14rqfMS56E4B\" http://127.0.0.1:8000/o/token/`\r\n\r\n`{\"error\": \"invalid_grant\"}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/628", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/628/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/628/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/628", "id": 347753752, "node_id": "MDU6SXNzdWUzNDc3NTM3NTI=", "number": 628, "title": "exposing only /token/ endpoint to public", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-06T01:54:53Z", "updated_at": "2018-08-07T04:42:53Z", "closed_at": "2018-08-07T04:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using this plugin which does not require applications creation by any user and any OAuth application can be only added by **superuser**.\r\n\r\nI have this included in the `urlpatterns`\r\n```\r\npath('auth/', include('oauth2_provider.urls', namespace='oauth2_provider')),\r\n```\r\nThis is exposing all `urls` including enpoints for managing applications to the public\r\n```\r\nauth/ ^authorize/$ [name='authorize']\r\nauth/ ^token/$ [name='token']\r\nauth/ ^revoke_token/$ [name='revoke-token']\r\nauth/ ^introspect/$ [name='introspect']\r\nauth/ ^applications/$ [name='list']\r\nauth/ ^applications/register/$ [name='register']\r\nauth/ ^applications/(?P<pk>[\\w-]+)/$ [name='detail']\r\nauth/ ^applications/(?P<pk>[\\w-]+)/delete/$ [name='delete']\r\nauth/ ^applications/(?P<pk>[\\w-]+)/update/$ [name='update']\r\nauth/ ^authorized_tokens/$ [name='authorized-token-list']\r\nauth/ ^authorized_tokens/(?P<pk>[\\w-]+)/delete/$ [name='authorized-token-delete'] \r\n```\r\n\r\nI want only `/token/` endpoint for the public to generate an access token and refresh token.\r\n\r\n**How can I prevent other endpoints from the public and allow only from admin panel?**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/625", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/625/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/625/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/625", "id": 343771600, "node_id": "MDU6SXNzdWUzNDM3NzE2MDA=", "number": 625, "title": "Cannot revoke OAuth2 RefreshToken without related Token", "user": {"login": "rooftopcellist", "id": 11698892, "node_id": "MDQ6VXNlcjExNjk4ODky", "avatar_url": "https://avatars1.githubusercontent.com/u/11698892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rooftopcellist", "html_url": "https://github.com/rooftopcellist", "followers_url": "https://api.github.com/users/rooftopcellist/followers", "following_url": "https://api.github.com/users/rooftopcellist/following{/other_user}", "gists_url": "https://api.github.com/users/rooftopcellist/gists{/gist_id}", "starred_url": "https://api.github.com/users/rooftopcellist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rooftopcellist/subscriptions", "organizations_url": "https://api.github.com/users/rooftopcellist/orgs", "repos_url": "https://api.github.com/users/rooftopcellist/repos", "events_url": "https://api.github.com/users/rooftopcellist/events{/privacy}", "received_events_url": "https://api.github.com/users/rooftopcellist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-23T19:51:21Z", "updated_at": "2018-10-17T09:45:31Z", "closed_at": "2018-10-17T09:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "##### SUMMARY\r\nDjango-OAuth-Toolkit supports deleting a token, but does not cascade on delete for it's RefreshToken anymore as of DOT 1.1.2.  This creates an issue when you try to revoke a RefreshToken that no longer has an associated AccessToken.  This will cause a traceback at [this line](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/models.py#L380).  \r\n\r\n> This could also potentially become an issue in reverse [here](https://github.com/jazzband/django-oauth-toolkit/blob/1.1.2/oauth2_provider/models.py#L365), but is unlikely to be hit unless a user is manually deleting RefreshTokens.  \r\n\r\nCurrently, users have no way to delete RefreshToken's as of DOT 1.1.2 given these circumstances, which is an issue because RefreshTokens can be used to issue a new AccessToken.  \r\n\r\n\r\n##### ENVIRONMENT\r\n* Django OAuth Toolkit version 1.1.2\r\n* Python version 2.7.5\r\n\r\n##### STEPS TO REPRODUCE\r\n\r\n1. Create App\r\n2. Create AccessToken\r\n3. Revoke AccessToken using either method (`api/o/revoke_token`)\r\n4. Observe that the RefreshToken remains and the AccessToken is deleted. \r\n^^ This all is as expected\r\n5. Revoke RefreshToken (we currently can't do this)\r\n\r\n```\r\nawx.main.models.oauth.DoesNotExist: OAuth2AccessToken matching query does not exist.\r\n```\r\n\r\nRelated Issue from AWX: https://github.com/ansible/awx/pull/2044\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/624", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/624/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/624/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/624", "id": 342024517, "node_id": "MDU6SXNzdWUzNDIwMjQ1MTc=", "number": 624, "title": "created and modified fields not added in migration", "user": {"login": "michi88", "id": 1010260, "node_id": "MDQ6VXNlcjEwMTAyNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1010260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michi88", "html_url": "https://github.com/michi88", "followers_url": "https://api.github.com/users/michi88/followers", "following_url": "https://api.github.com/users/michi88/following{/other_user}", "gists_url": "https://api.github.com/users/michi88/gists{/gist_id}", "starred_url": "https://api.github.com/users/michi88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michi88/subscriptions", "organizations_url": "https://api.github.com/users/michi88/orgs", "repos_url": "https://api.github.com/users/michi88/repos", "events_url": "https://api.github.com/users/michi88/events{/privacy}", "received_events_url": "https://api.github.com/users/michi88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-17T18:01:01Z", "updated_at": "2018-07-17T19:41:20Z", "closed_at": "2018-07-17T19:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'll probably have to add the fields manually but when upgrading from 0.12.0 to 1.1.2 with a swappable `OAUTH2_PROVIDER_APPLICATION_MODEL` defined the `created` and `modified` fields are not added/run in the 0005 migration. When I do a sqlmigrate you can also see that the fields are skipped.\r\n\r\n```\r\n-- Add field created to accesstoken\r\n--\r\nALTER TABLE \"oauth2_provider_accesstoken\" ADD COLUMN \"created\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.282083+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_accesstoken\" ALTER COLUMN \"created\" DROP DEFAULT;\r\n--\r\n-- Add field updated to accesstoken\r\n--\r\nALTER TABLE \"oauth2_provider_accesstoken\" ADD COLUMN \"updated\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.305375+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_accesstoken\" ALTER COLUMN \"updated\" DROP DEFAULT;\r\n--\r\n-- Add field created to application\r\n--\r\n--\r\n-- Add field updated to application\r\n--\r\n--\r\n-- Add field created to grant\r\n--\r\nALTER TABLE \"oauth2_provider_grant\" ADD COLUMN \"created\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.375529+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_grant\" ALTER COLUMN \"created\" DROP DEFAULT;\r\n--\r\n-- Add field updated to grant\r\n--\r\nALTER TABLE \"oauth2_provider_grant\" ADD COLUMN \"updated\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.398283+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_grant\" ALTER COLUMN \"updated\" DROP DEFAULT;\r\n--\r\n-- Add field created to refreshtoken\r\n--\r\nALTER TABLE \"oauth2_provider_refreshtoken\" ADD COLUMN \"created\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.422099+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_refreshtoken\" ALTER COLUMN \"created\" DROP DEFAULT;\r\n--\r\n-- Add field updated to refreshtoken\r\n--\r\nALTER TABLE \"oauth2_provider_refreshtoken\" ADD COLUMN \"updated\" timestamp with time zone DEFAULT '2018-07-17T17:44:54.561337+00:00'::timestamptz NOT NULL;\r\nALTER TABLE \"oauth2_provider_refreshtoken\" ALTER COLUMN \"updated\" DROP DEFAULT;\r\nCOMMIT;\r\n```\r\n\r\nNote that we do not have migrations for the swapped app itself. Which is weird but it was a long time this was added. I think what we have done in the past is run makemigrations on oauth2_provider and run that migration. That was probably not how we should have done it. We can fix this for ourselves but just wondering if this is a problem in general that needs fixing or if it's just our incorrect usage of this package.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/623", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/623/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/623/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/623", "id": 340637892, "node_id": "MDU6SXNzdWUzNDA2Mzc4OTI=", "number": 623, "title": "How to use custom user model", "user": {"login": "panzailiang", "id": 37063021, "node_id": "MDQ6VXNlcjM3MDYzMDIx", "avatar_url": "https://avatars1.githubusercontent.com/u/37063021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panzailiang", "html_url": "https://github.com/panzailiang", "followers_url": "https://api.github.com/users/panzailiang/followers", "following_url": "https://api.github.com/users/panzailiang/following{/other_user}", "gists_url": "https://api.github.com/users/panzailiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/panzailiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panzailiang/subscriptions", "organizations_url": "https://api.github.com/users/panzailiang/orgs", "repos_url": "https://api.github.com/users/panzailiang/repos", "events_url": "https://api.github.com/users/panzailiang/events{/privacy}", "received_events_url": "https://api.github.com/users/panzailiang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46641940, "node_id": "MDU6TGFiZWw0NjY0MTk0MA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/help-wanted", "name": "help-wanted", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-12T13:28:16Z", "updated_at": "2018-07-23T20:28:41Z", "closed_at": "2018-07-23T20:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a custom User model like below,\r\n\r\n```python\r\nfrom django.contrib.auth.models import User\r\nclass MyUser(models.Model):\r\n    user = models.OneToOneField(User)\r\n    email = models.EmailField(unique=True)\r\n```\r\n\r\nI want to use email as username in the password grant type\u3002\r\n> curl -X POST -d \"grant_type=password&username=<user_name>&password=<password>\" -u\"<client_id>:<client_secret>\" http://localhost:8000/o/token/\r\n\r\nIn above code, I want the username to be email field in MyUser. \r\nHow can I achieve that? \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/619", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/619/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/619/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/619", "id": 339475031, "node_id": "MDU6SXNzdWUzMzk0NzUwMzE=", "number": 619, "title": "Django Rest Framework oauth2 consumer", "user": {"login": "diegotejadav", "id": 3412546, "node_id": "MDQ6VXNlcjM0MTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3412546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegotejadav", "html_url": "https://github.com/diegotejadav", "followers_url": "https://api.github.com/users/diegotejadav/followers", "following_url": "https://api.github.com/users/diegotejadav/following{/other_user}", "gists_url": "https://api.github.com/users/diegotejadav/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegotejadav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegotejadav/subscriptions", "organizations_url": "https://api.github.com/users/diegotejadav/orgs", "repos_url": "https://api.github.com/users/diegotejadav/repos", "events_url": "https://api.github.com/users/diegotejadav/events{/privacy}", "received_events_url": "https://api.github.com/users/diegotejadav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-09T14:32:37Z", "updated_at": "2018-07-16T22:46:30Z", "closed_at": "2018-07-16T22:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nHow can I implement the django oauth toolkit to make a OAuth2 consumer, I want my users to authenticate through third party OAuth2 provider, can you give me some advice to achieve this? I'm newbie to DRF, I'm using a Vue 2 frontend and DRF backend.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/617", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/617/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/617/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/617", "id": 339055789, "node_id": "MDU6SXNzdWUzMzkwNTU3ODk=", "number": 617, "title": "Python 3.4 or Python 3.5", "user": {"login": "robrap", "id": 14576445, "node_id": "MDQ6VXNlcjE0NTc2NDQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/14576445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robrap", "html_url": "https://github.com/robrap", "followers_url": "https://api.github.com/users/robrap/followers", "following_url": "https://api.github.com/users/robrap/following{/other_user}", "gists_url": "https://api.github.com/users/robrap/gists{/gist_id}", "starred_url": "https://api.github.com/users/robrap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robrap/subscriptions", "organizations_url": "https://api.github.com/users/robrap/orgs", "repos_url": "https://api.github.com/users/robrap/repos", "events_url": "https://api.github.com/users/robrap/events{/privacy}", "received_events_url": "https://api.github.com/users/robrap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-06T20:02:01Z", "updated_at": "2018-07-21T15:30:05Z", "closed_at": "2018-07-21T15:30:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [README for 1.2.0](https://github.com/jazzband/django-oauth-toolkit/blob/86e8f9b22c9d5957b8ff6097208de69758a3c013/README.rst) states that the requirement is Python 3.5+. \r\n\r\nHowever, the [Changelog](https://github.com/jazzband/django-oauth-toolkit/blob/master/CHANGELOG.md) states that the minimum is Python 3.4+.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/616", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/616/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/616/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/616", "id": 337890725, "node_id": "MDU6SXNzdWUzMzc4OTA3MjU=", "number": 616, "title": "error 500 and ORA-00907: missing right parenthesis on request http://localhost:8000/o/token/?grant_type=refresh_token&refresh_token=xxx&client_id=xxx", "user": {"login": "e-sft", "id": 35725930, "node_id": "MDQ6VXNlcjM1NzI1OTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/35725930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e-sft", "html_url": "https://github.com/e-sft", "followers_url": "https://api.github.com/users/e-sft/followers", "following_url": "https://api.github.com/users/e-sft/following{/other_user}", "gists_url": "https://api.github.com/users/e-sft/gists{/gist_id}", "starred_url": "https://api.github.com/users/e-sft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e-sft/subscriptions", "organizations_url": "https://api.github.com/users/e-sft/orgs", "repos_url": "https://api.github.com/users/e-sft/repos", "events_url": "https://api.github.com/users/e-sft/events{/privacy}", "received_events_url": "https://api.github.com/users/e-sft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-03T13:05:54Z", "updated_at": "2018-07-23T19:14:09Z", "closed_at": "2018-07-23T19:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6.3\r\nDjango==1.11.11\r\ndjangorestframework==3.8.2\r\ndjango-oauth-toolkit==1.1.0\r\noauthlib==2.1.0\r\ncx-Oracle==6.1\r\n\r\nWhen I try to refresh token, this end up with an error 500.\r\nhttp://localhost:8000/o/token/?grant_type=refresh_token&refresh_token=xxx&client_id=xxx\r\n\r\n  File \"/Users/eugene/django/mobapp/.env/lib/python3.6/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/eugene/django/mobapp/.env/lib/python3.6/site-packages/django/db/backends/oracle/base.py\", line 497, in execute\r\n    return self.cursor.execute(query, self._param_generator(params))\r\ndjango.db.utils.DatabaseError: ORA-00907: missing right parenthesis\r\n\r\n\r\nparams | {':arg0': <django.db.backends.oracle.base.OracleParam object at 0x11cfbba58>}\r\n-- | --\r\nquery | ('SELECT * FROM (SELECT \"_SUB\".* FROM (SELECT '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" AS Col1, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"USER_ID\" AS Col2, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"TOKEN\" AS Col3, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"APPLICATION_ID\" AS Col4, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ACCESS_TOKEN_ID\" AS Col5, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"CREATED\" AS Col6, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"UPDATED\" AS Col7, '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"REVOKED\" AS Col8 FROM '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\" WHERE (\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" = '  ':arg0 AND \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"REVOKED\" IS NULL) ORDER BY '  '\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" ASC FOR UPDATE) \"_SUB\" WHERE ROWNUM <= '  '1)')\r\nself | <django.db.backends.oracle.base.FormatStylePlaceholderCursor object at 0x11cfbbda0>\r\n\r\nWhen I execute SQL in debugger I receive this error too.\r\n \r\nSELECT * FROM (SELECT \"_SUB\".* FROM (SELECT \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" AS Col1, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"USER_ID\" AS Col2, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"TOKEN\" AS Col3, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"APPLICATION_ID\" AS Col4, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ACCESS_TOKEN_ID\" AS Col5, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"CREATED\" AS Col6, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"UPDATED\" AS Col7, \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"REVOKED\" AS Col8 FROM \r\n API.OAUTH2_PROVIDER_REFRESHTOKEN WHERE (\"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" = \r\n 23 AND \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"REVOKED\" IS NULL) ORDER BY \r\n \"OAUTH2_PROVIDER_REFRESHTOKEN\".\"ID\" ASC FOR UPDATE) \"_SUB\" WHERE ROWNUM <= \r\n 1) \r\n\r\nORA-00907: missing right parenthesis\r\n00907. 00000 -  \"missing right parenthesis\"\r\n*Cause:    \r\n*Action:\r\nError at Line: 12 Column: 42\r\nIf I'm deleting \"FOR UPDATE\" from SQL request, request execute without errors.\r\n\r\nHelp me, please.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/610", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/610/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/610/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/610", "id": 335836836, "node_id": "MDU6SXNzdWUzMzU4MzY4MzY=", "number": 610, "title": "should contributions require review?", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T14:07:38Z", "updated_at": "2018-06-26T16:24:12Z", "closed_at": "2018-06-26T16:24:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I note that there seem to be some PRs (for example #606) that are merged by the contributor without a review by someone else. Shouldn't there be at least one other reviewer's approval before a PR is merged?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/609", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/609/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/609/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/609", "id": 335831430, "node_id": "MDU6SXNzdWUzMzU4MzE0MzA=", "number": 609, "title": "Race condition in creation of Access Token with external OAuth2 server", "user": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-26T13:55:07Z", "updated_at": "2018-07-30T20:32:25Z", "closed_at": "2018-07-30T20:32:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In [oauth2_validators._get_token_from_authentication_server](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L335-L350) there's a race condition when two requests both present a new Bearer Access Token causing a SQL insertion error for a uniqueness constraint violation. \r\n\r\nThis has been exercised in the wild by our project that has a client that makes near simultaneous requests of the same Django endpoint with the same Bearer token (see [validate_bearer_token](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L384-L402). \r\n\r\nI believe the fix is to use `AccessToken.objects.get_or_create()`. Does this make sense @jleclanche?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/608", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/608/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/608/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/608", "id": 334821716, "node_id": "MDU6SXNzdWUzMzQ4MjE3MTY=", "number": 608, "title": "email + password authentication", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-22T10:06:34Z", "updated_at": "2018-06-28T07:13:21Z", "closed_at": "2018-06-28T07:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am successfully separate the `Provider` and `Resource` server. Right now I want to add up my email authentication feature.\r\n\r\nHere is my attempt to the [problem](https://stackoverflow.com/questions/50985054/django-how-to-add-email-password-authentication-to-oauth-using-rest)\r\n\r\nAlthough I am successfully hack the code. But I prefer the conventional approach on this problem.\r\nHow do I make it a better code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/605", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/605/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/605/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/605", "id": 332501861, "node_id": "MDU6SXNzdWUzMzI1MDE4NjE=", "number": 605, "title": "After i swap the application model access_token fail", "user": {"login": "tximpa91", "id": 10771626, "node_id": "MDQ6VXNlcjEwNzcxNjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/10771626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tximpa91", "html_url": "https://github.com/tximpa91", "followers_url": "https://api.github.com/users/tximpa91/followers", "following_url": "https://api.github.com/users/tximpa91/following{/other_user}", "gists_url": "https://api.github.com/users/tximpa91/gists{/gist_id}", "starred_url": "https://api.github.com/users/tximpa91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tximpa91/subscriptions", "organizations_url": "https://api.github.com/users/tximpa91/orgs", "repos_url": "https://api.github.com/users/tximpa91/repos", "events_url": "https://api.github.com/users/tximpa91/events{/privacy}", "received_events_url": "https://api.github.com/users/tximpa91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-14T17:50:22Z", "updated_at": "2018-06-28T12:35:09Z", "closed_at": "2018-06-28T12:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the last version of the package the error that is giving me is \r\n\r\n('INSERT INTO \"oauth2_provider_accesstoken\" (\"user_id\", '  '\"source_refresh_token_id\", \"token\", \"application_id\", \"expires\", \"scope\", '  '\"created\", \"updated\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s) RETURNING '  '\"oauth2_provider_accesstoken\".\"id\"')\r\n \r\nand of course source_refresh_token_id doesnt exists in the access_token table\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/604", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/604/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/604/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/604", "id": 332177566, "node_id": "MDU6SXNzdWUzMzIxNzc1NjY=", "number": 604, "title": "Is Resource owner flow possible or not and if yes how?", "user": {"login": "ohcibi", "id": 61993, "node_id": "MDQ6VXNlcjYxOTkz", "avatar_url": "https://avatars1.githubusercontent.com/u/61993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohcibi", "html_url": "https://github.com/ohcibi", "followers_url": "https://api.github.com/users/ohcibi/followers", "following_url": "https://api.github.com/users/ohcibi/following{/other_user}", "gists_url": "https://api.github.com/users/ohcibi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohcibi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohcibi/subscriptions", "organizations_url": "https://api.github.com/users/ohcibi/orgs", "repos_url": "https://api.github.com/users/ohcibi/repos", "events_url": "https://api.github.com/users/ohcibi/events{/privacy}", "received_events_url": "https://api.github.com/users/ohcibi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-13T21:50:54Z", "updated_at": "2018-10-23T16:52:08Z", "closed_at": "2018-10-23T16:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm coming from #581 which involves some knowledge and some questions that are kinda off topic there and therefore I made a new issue.\r\n\r\nThe problem I have is that the documentation is to centric on using some html views that ship with this plugin. My goal is to create a single page application that authorizes itself in a similar way as any other potential client would do via oauth2. For this I basically want to follow the resource owner flow as described in the rfc here: https://tools.ietf.org/html/rfc6749#section-4.3\r\n\r\nSo I want to \r\n\r\n1. let user enter credentials in a form\r\n2. make a POST request with those credentials\r\n3. receive the oauth token as a response when the credentials are correct\r\n\r\nIs this even possible with django-oauth-toolkit or is dot not meant to be used for this flow? Please explain how if the answer is that its possible. I'm happy to PR an understandable documentation if things are clear then.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/603", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/603/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/603/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/603", "id": 327200763, "node_id": "MDU6SXNzdWUzMjcyMDA3NjM=", "number": 603, "title": "Grant type client_credentials implementation", "user": {"login": "mekza", "id": 554440, "node_id": "MDQ6VXNlcjU1NDQ0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mekza", "html_url": "https://github.com/mekza", "followers_url": "https://api.github.com/users/mekza/followers", "following_url": "https://api.github.com/users/mekza/following{/other_user}", "gists_url": "https://api.github.com/users/mekza/gists{/gist_id}", "starred_url": "https://api.github.com/users/mekza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mekza/subscriptions", "organizations_url": "https://api.github.com/users/mekza/orgs", "repos_url": "https://api.github.com/users/mekza/repos", "events_url": "https://api.github.com/users/mekza/events{/privacy}", "received_events_url": "https://api.github.com/users/mekza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-29T07:31:55Z", "updated_at": "2019-05-29T13:43:52Z", "closed_at": "2019-05-29T13:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe are implementing a OAuth 2.0 provider using `django-oauth-toolkit` and `django-rest-framework` for a ecommerce site using `django-oscar`. We have a SPA and our API, it makes sense to use `client_credentials` grant type as requests between SPA and API are only machine to machine. \r\n\r\nhttps://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/oauth2_validators.py#L477 \r\n\r\nHere `request.user` is set to `None` which breaks `django-oscar-api` as it expects a user object (logged or anonymous). I can't understand why it was changed from `request.client.user` to `None` (https://github.com/jazzband/django-oauth-toolkit/commit/628f9e6ba98007d2940bb1a4c28136c03d81c245). \r\n\r\nDid anyone as ever face the same problem? Why `request.user` is set to `None`? \r\n\r\nCheers\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/601", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/601/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/601/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/601", "id": 326034570, "node_id": "MDU6SXNzdWUzMjYwMzQ1NzA=", "number": 601, "title": "Docs URL?", "user": {"login": "rfleschenberg", "id": 4319330, "node_id": "MDQ6VXNlcjQzMTkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfleschenberg", "html_url": "https://github.com/rfleschenberg", "followers_url": "https://api.github.com/users/rfleschenberg/followers", "following_url": "https://api.github.com/users/rfleschenberg/following{/other_user}", "gists_url": "https://api.github.com/users/rfleschenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfleschenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfleschenberg/subscriptions", "organizations_url": "https://api.github.com/users/rfleschenberg/orgs", "repos_url": "https://api.github.com/users/rfleschenberg/repos", "events_url": "https://api.github.com/users/rfleschenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rfleschenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-24T09:20:50Z", "updated_at": "2018-05-28T22:05:58Z", "closed_at": "2018-05-28T21:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seem to be two instances of the docs on RTD:\r\n\r\n* https://django-oauth-toolkit-latest.readthedocs.io/en/latest/\r\n* https://django-oauth-toolkit.readthedocs.io/en/latest/\r\n\r\nThe first one looks more up to date. Which are the canonical docs? Should the link in the README be updated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/600", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/600/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/600/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/600", "id": 324184061, "node_id": "MDU6SXNzdWUzMjQxODQwNjE=", "number": 600, "title": "Application name shouldn't allow blank?", "user": {"login": "aalvrz", "id": 6859247, "node_id": "MDQ6VXNlcjY4NTkyNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6859247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalvrz", "html_url": "https://github.com/aalvrz", "followers_url": "https://api.github.com/users/aalvrz/followers", "following_url": "https://api.github.com/users/aalvrz/following{/other_user}", "gists_url": "https://api.github.com/users/aalvrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalvrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalvrz/subscriptions", "organizations_url": "https://api.github.com/users/aalvrz/orgs", "repos_url": "https://api.github.com/users/aalvrz/repos", "events_url": "https://api.github.com/users/aalvrz/events{/privacy}", "received_events_url": "https://api.github.com/users/aalvrz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T21:00:21Z", "updated_at": "2018-05-18T07:40:34Z", "closed_at": "2018-05-18T07:40:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I accidentally created an application and forgot entering a name for it, which results in the list view looking like this:\r\n\r\n![image](https://user-images.githubusercontent.com/6859247/40203565-d6e5e780-59e2-11e8-917a-b31a432b122f.png)\r\n\r\nFor me this seems like an unwanted behavior. Plus, there is no link available to enter the detail view of the application.\r\n\r\nI checked the model and found this:\r\n\r\n```python\r\nclass AbstractApplication(models.Model):\r\n    name = models.CharField(max_length=255, blank=True)\r\n```\r\n\r\nSeems to me that the model field should not allow blank values?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/599", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/599/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/599/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/599", "id": 323108674, "node_id": "MDU6SXNzdWUzMjMxMDg2NzQ=", "number": 599, "title": "Ditch custom Path implementation", "user": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-15T08:06:24Z", "updated_at": "2018-05-15T08:07:01Z", "closed_at": "2018-05-15T08:06:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Is there any good reason why this library implements it's own path implementation even tho there is a builtin in Python?\r\nhttps://docs.python.org/3/library/pathlib.html#module-pathlib\r\nhttps://www.python.org/dev/peps/pep-0428/\r\n\r\nMy suggestion would be to replace it, to reduce complexity and avoid people confusing them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/596", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/596/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/596/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/596", "id": 322330014, "node_id": "MDU6SXNzdWUzMjIzMzAwMTQ=", "number": 596, "title": "Oauth2 Custom Login Authentication", "user": {"login": "hassanali97", "id": 39195114, "node_id": "MDQ6VXNlcjM5MTk1MTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/39195114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hassanali97", "html_url": "https://github.com/hassanali97", "followers_url": "https://api.github.com/users/hassanali97/followers", "following_url": "https://api.github.com/users/hassanali97/following{/other_user}", "gists_url": "https://api.github.com/users/hassanali97/gists{/gist_id}", "starred_url": "https://api.github.com/users/hassanali97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hassanali97/subscriptions", "organizations_url": "https://api.github.com/users/hassanali97/orgs", "repos_url": "https://api.github.com/users/hassanali97/repos", "events_url": "https://api.github.com/users/hassanali97/events{/privacy}", "received_events_url": "https://api.github.com/users/hassanali97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-11T15:03:29Z", "updated_at": "2018-05-19T10:07:54Z", "closed_at": "2018-05-19T10:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\ni wanted to use my own custom login for authentication of Api and also i wanted to change\r\nthis url (accounts/login/?next=/o/applications)\r\ni am not able to get the above url kindly help me out thank you ^_^\r\nalso i wanted to redirect url to /o/authorized after user logged in", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/594", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/594/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/594/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/594", "id": 322186404, "node_id": "MDU6SXNzdWUzMjIxODY0MDQ=", "number": 594, "title": "[Question]: What is music?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359608, "node_id": "MDU6TGFiZWw0MDM1OTYwOA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-11T06:48:06Z", "updated_at": "2018-05-19T10:08:20Z", "closed_at": "2018-05-11T12:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have questions\r\n1. What is `scope` in the document context?\r\n     ```python\r\n     OAUTH2_PROVIDER = {\r\n    # this is the list of available scopes\r\n    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'}\r\n    }\r\n    ```\r\n    Because `scopes` contain `verb`, and `plural nouns`. I am confusing the usage and key idea of it\r\n\r\n2. ` required_scopes = ['music']` What is music? Is it model\r\n3. What is the relation between `music` and `song`? What is the model relation?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/591", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/591/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/591/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/591", "id": 321308791, "node_id": "MDU6SXNzdWUzMjEzMDg3OTE=", "number": 591, "title": "Error 500 Value error on invalid base64 basic auth header.", "user": {"login": "d1p", "id": 6053636, "node_id": "MDQ6VXNlcjYwNTM2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6053636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d1p", "html_url": "https://github.com/d1p", "followers_url": "https://api.github.com/users/d1p/followers", "following_url": "https://api.github.com/users/d1p/following{/other_user}", "gists_url": "https://api.github.com/users/d1p/gists{/gist_id}", "starred_url": "https://api.github.com/users/d1p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d1p/subscriptions", "organizations_url": "https://api.github.com/users/d1p/orgs", "repos_url": "https://api.github.com/users/d1p/repos", "events_url": "https://api.github.com/users/d1p/events{/privacy}", "received_events_url": "https://api.github.com/users/d1p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-08T19:02:47Z", "updated_at": "2018-05-08T19:40:57Z", "closed_at": "2018-05-08T19:40:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for this amazing package.\r\nI just ran into an issue where If someone submits crafted basic auth header with a crafted base64 string like\r\n`Basic ZHVtbXk=:ZHVtbXk=`\r\nit results in an Error 500, ValueError: not enough values to unpack (expected 2, got 1)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/589", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/589/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/589/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/589", "id": 321022676, "node_id": "MDU6SXNzdWUzMjEwMjI2NzY=", "number": 589, "title": "Release new version to PyPI to address bad default value for RefreshToken `revoked`", "user": {"login": "wli", "id": 649892, "node_id": "MDQ6VXNlcjY0OTg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/649892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wli", "html_url": "https://github.com/wli", "followers_url": "https://api.github.com/users/wli/followers", "following_url": "https://api.github.com/users/wli/following{/other_user}", "gists_url": "https://api.github.com/users/wli/gists{/gist_id}", "starred_url": "https://api.github.com/users/wli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wli/subscriptions", "organizations_url": "https://api.github.com/users/wli/orgs", "repos_url": "https://api.github.com/users/wli/repos", "events_url": "https://api.github.com/users/wli/events{/privacy}", "received_events_url": "https://api.github.com/users/wli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-08T02:38:55Z", "updated_at": "2018-05-08T11:33:44Z", "closed_at": "2018-05-08T11:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The version on pypi (1.1.0) contains a critical bug that invalidates all refresh tokens when running a migration, and is NOT noted in the changelog. This was corrected in a follow-up pull request, but was not released yet.\r\n\r\nhttps://github.com/jazzband/django-oauth-toolkit/commit/83ec4ac1e774641670d4641483e622f9b60b50ae\r\n\r\nI just ran into this bug in my production instance, which logged out all my users. For anyone else who hits this, you can run the following code AFTER you run the migration (0006_auto_20171214_2232).\r\n```\r\nfrom oauth2_provider.models import RefreshToken\r\nRefreshToken.objects.update(revoked=None)\r\n```\r\n\r\n@jleclanche ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/587", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/587/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/587/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/587", "id": 319567829, "node_id": "MDU6SXNzdWUzMTk1Njc4Mjk=", "number": 587, "title": "Social Login & Client-Secret", "user": {"login": "mertgunay", "id": 13817811, "node_id": "MDQ6VXNlcjEzODE3ODEx", "avatar_url": "https://avatars2.githubusercontent.com/u/13817811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mertgunay", "html_url": "https://github.com/mertgunay", "followers_url": "https://api.github.com/users/mertgunay/followers", "following_url": "https://api.github.com/users/mertgunay/following{/other_user}", "gists_url": "https://api.github.com/users/mertgunay/gists{/gist_id}", "starred_url": "https://api.github.com/users/mertgunay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mertgunay/subscriptions", "organizations_url": "https://api.github.com/users/mertgunay/orgs", "repos_url": "https://api.github.com/users/mertgunay/repos", "events_url": "https://api.github.com/users/mertgunay/events{/privacy}", "received_events_url": "https://api.github.com/users/mertgunay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-02T14:08:08Z", "updated_at": "2018-05-02T14:53:06Z", "closed_at": "2018-05-02T14:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First of all, I check all of your documentation but I cannot find a why to solve my problems, \r\nSuggest that, I have mobile application for both ios and android.\r\n\r\nIn this mobile app, we have only social (facebook) login. For this senerio I have 2 questions;\r\n\r\n1-) How should I save the application client id and client secret to obtain acces token.\r\nExample: \r\n`curl -X POST -d \"grant_type=password&username=<user_name>&password=<password>\" -u\"<client_id>:<client_secret>\" http://localhost:8000/o/token/`\r\n\r\nMy app requests to this url. should I put client id and client secret as a variable without encrpyt ? \r\n\r\n2-) For `grant_type=password ` we need both username and password. But I'm trying to register a user with social login. So I do not have any kind of password. How can I do this. What do you suggest to solve these problems effeciantly ?\r\n### Thanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/583", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/583/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/583/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/583", "id": 313718469, "node_id": "MDU6SXNzdWUzMTM3MTg0Njk=", "number": 583, "title": "Migrations Broken With django-pyodbc-driver", "user": {"login": "beh9540", "id": 1061928, "node_id": "MDQ6VXNlcjEwNjE5Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1061928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beh9540", "html_url": "https://github.com/beh9540", "followers_url": "https://api.github.com/users/beh9540/followers", "following_url": "https://api.github.com/users/beh9540/following{/other_user}", "gists_url": "https://api.github.com/users/beh9540/gists{/gist_id}", "starred_url": "https://api.github.com/users/beh9540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beh9540/subscriptions", "organizations_url": "https://api.github.com/users/beh9540/orgs", "repos_url": "https://api.github.com/users/beh9540/repos", "events_url": "https://api.github.com/users/beh9540/events{/privacy}", "received_events_url": "https://api.github.com/users/beh9540/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40359604, "node_id": "MDU6TGFiZWw0MDM1OTYwNA==", "url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "n2ygk", "id": 4356471, "node_id": "MDQ6VXNlcjQzNTY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4356471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2ygk", "html_url": "https://github.com/n2ygk", "followers_url": "https://api.github.com/users/n2ygk/followers", "following_url": "https://api.github.com/users/n2ygk/following{/other_user}", "gists_url": "https://api.github.com/users/n2ygk/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2ygk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2ygk/subscriptions", "organizations_url": "https://api.github.com/users/n2ygk/orgs", "repos_url": "https://api.github.com/users/n2ygk/repos", "events_url": "https://api.github.com/users/n2ygk/events{/privacy}", "received_events_url": "https://api.github.com/users/n2ygk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-04-12T13:05:25Z", "updated_at": "2020-02-05T04:35:33Z", "closed_at": "2018-07-30T20:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running migrations on a new project using [django-pyodbc-driver](https://github.com/michiya/django-pyodbc-azure), migrations fail due to the changing of the primary keys from AutoField to BigAutoField in [this migration](https://github.com/jazzband/django-oauth-toolkit/blob/master/oauth2_provider/migrations/0005_auto_20170514_1141.py) because of the limited capability of SQL Server to edit an IDENTITY property.\r\n\r\nI'm able to work around this by manually changing the migrations (obviously not preferred) but I'm curious if you'd be open to collapsing this in the future? I'd be happy to work on putting a PR together.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/582", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/582/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/582/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/582", "id": 313200632, "node_id": "MDU6SXNzdWUzMTMyMDA2MzI=", "number": 582, "title": "new release", "user": {"login": "MattBlack85", "id": 4163222, "node_id": "MDQ6VXNlcjQxNjMyMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4163222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattBlack85", "html_url": "https://github.com/MattBlack85", "followers_url": "https://api.github.com/users/MattBlack85/followers", "following_url": "https://api.github.com/users/MattBlack85/following{/other_user}", "gists_url": "https://api.github.com/users/MattBlack85/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattBlack85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattBlack85/subscriptions", "organizations_url": "https://api.github.com/users/MattBlack85/orgs", "repos_url": "https://api.github.com/users/MattBlack85/repos", "events_url": "https://api.github.com/users/MattBlack85/events{/privacy}", "received_events_url": "https://api.github.com/users/MattBlack85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T07:16:31Z", "updated_at": "2018-04-11T08:56:06Z", "closed_at": "2018-04-11T08:56:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi people, is it possible to issue a new release to pypi? We're actually using master which carries a couple of needed changes but I'd like to avoid keeping a reference to master in production.\r\nAlso, I wanted to post this to the google group but it seems the link is broken, which is the right link?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/581", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/581/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/581/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/581", "id": 312940206, "node_id": "MDU6SXNzdWUzMTI5NDAyMDY=", "number": 581, "title": "Skip authorization does not prevent redirect to authorization page", "user": {"login": "HawiCaesar", "id": 6042152, "node_id": "MDQ6VXNlcjYwNDIxNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6042152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HawiCaesar", "html_url": "https://github.com/HawiCaesar", "followers_url": "https://api.github.com/users/HawiCaesar/followers", "following_url": "https://api.github.com/users/HawiCaesar/following{/other_user}", "gists_url": "https://api.github.com/users/HawiCaesar/gists{/gist_id}", "starred_url": "https://api.github.com/users/HawiCaesar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HawiCaesar/subscriptions", "organizations_url": "https://api.github.com/users/HawiCaesar/orgs", "repos_url": "https://api.github.com/users/HawiCaesar/repos", "events_url": "https://api.github.com/users/HawiCaesar/events{/privacy}", "received_events_url": "https://api.github.com/users/HawiCaesar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-10T14:10:06Z", "updated_at": "2018-10-23T16:53:10Z", "closed_at": "2018-10-23T16:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day, \r\n\r\nI was trying to implement the [skip authorization](https://django-oauth-toolkit.readthedocs.io/en/latest/advanced_topics.html#skip-authorization-completely-for-trusted-applications) feature but I ran into a hurdle while testing it out on postman. \r\nCheck out the screenshot\r\n<img width=\"1440\" alt=\"screen shot 2018-04-10 at 17 00 23\" src=\"https://user-images.githubusercontent.com/6042152/38561436-b7052a1c-3ce0-11e8-95f4-240499281e29.png\">\r\nSending a request via postman is redirecting me to the `/accounts/login...` of which I am trying skip.\r\nThis is the terminal response. \r\n```terminal\r\n[10/Apr/2018 14:01:28] \"GET /o/authorize/?client_id=4TUHT8bGgJ4Pl2UBVu7GLTHyuBohC8zpFUkkXRrN&scope=&state=11647116&redirect_uri=https%3A%2F%2Fwww.getpostman.com%2Foauth2%2Fcallback&response_type=code HTTP/1.1\" 302 0\r\nNot Found: /accounts/login/\r\n[10/Apr/2018 14:01:28] \"GET /accounts/login/?next=/o/authorize/%3Fclient_id%3D4TUHT8bGgJ4Pl2UBVu7GLTHyuBohC8zpFUkkXRrN%26scope%3D%26state%3D11647116%26redirect_uri%3Dhttps%253A%252F%252Fwww.getpostman.com%252Foauth2%252Fcallback%26response_type%3Dcode HTTP/1.1\" 404 12484\r\n```\r\nI followed [this](http://django-oauth-toolkit.readthedocs.io/en/latest/install.html) and [this](http://django-oauth-toolkit.readthedocs.io/en/latest/rest-framework/getting_started.html#step-1-minimal-setup) when setting up the oauth toolkit\r\n\r\nWhat could I be doing wrong ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/579", "repository_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit", "labels_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/579/comments", "events_url": "https://api.github.com/repos/jazzband/django-oauth-toolkit/issues/579/events", "html_url": "https://github.com/jazzband/django-oauth-toolkit/issues/579", "id": 312260290, "node_id": "MDU6SXNzdWUzMTIyNjAyOTA=", "number": 579, "title": "Dropping Python 2.7 support in 1.2.0", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-04-08T01:27:57Z", "updated_at": "2018-06-03T20:09:38Z", "closed_at": "2018-06-03T08:35:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi folks, bit of a heads up.\r\n\r\nI would like to drop support for Python 2.7 in **DOT 1.2.0** (the major release after the next one, out some time this year hopefully). That means the next release will support 1.11+ only, and the one after 2.0+ only.\r\n\r\nReasoning: Django 2.0 now being out, the latest releases of Django have dropped Python 2.7 support.\r\nDjango 1.11 still supports 2.7 and 1.11 will be supported until, roughly, April 2020. I fully intend to continue supporting the 1.1.0 branch with bugfixes until that time.\r\n\r\nIn other words, I would like to follow in the same footsteps that Django established with 1.11 (->1.1.0) and 2.0 (->1.2.0).\r\n\r\nAny immediate reactions?", "performed_via_github_app": null, "score": 1.0}]}