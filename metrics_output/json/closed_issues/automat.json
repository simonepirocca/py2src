{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/glyph/automat/issues/118", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/118/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/118/events", "html_url": "https://github.com/glyph/automat/issues/118", "id": 509500094, "node_id": "MDU6SXNzdWU1MDk1MDAwOTQ=", "number": 118, "title": "Automat throws exceptions on Python 3.8", "user": {"login": "hawkowl", "id": 3307100, "node_id": "MDQ6VXNlcjMzMDcxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3307100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkowl", "html_url": "https://github.com/hawkowl", "followers_url": "https://api.github.com/users/hawkowl/followers", "following_url": "https://api.github.com/users/hawkowl/following{/other_user}", "gists_url": "https://api.github.com/users/hawkowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkowl/subscriptions", "organizations_url": "https://api.github.com/users/hawkowl/orgs", "repos_url": "https://api.github.com/users/hawkowl/repos", "events_url": "https://api.github.com/users/hawkowl/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkowl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-19T19:38:07Z", "updated_at": "2019-10-20T12:23:17Z", "closed_at": "2019-10-20T12:23:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "May be related to the specific implementation of ClientService in Twisted, but filing it here as the error may be able to be caught and handled more gracefully.\r\n\r\nTwisted bug: https://twistedmatrix.com/trac/ticket/9718#ticket", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/117", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/117/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/117/events", "html_url": "https://github.com/glyph/automat/issues/117", "id": 503759016, "node_id": "MDU6SXNzdWU1MDM3NTkwMTY=", "number": 117, "title": "attrs 19.2.0 cmp deprecation warnings", "user": {"login": "twm", "id": 43662, "node_id": "MDQ6VXNlcjQzNjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/43662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twm", "html_url": "https://github.com/twm", "followers_url": "https://api.github.com/users/twm/followers", "following_url": "https://api.github.com/users/twm/following{/other_user}", "gists_url": "https://api.github.com/users/twm/gists{/gist_id}", "starred_url": "https://api.github.com/users/twm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twm/subscriptions", "organizations_url": "https://api.github.com/users/twm/orgs", "repos_url": "https://api.github.com/users/twm/repos", "events_url": "https://api.github.com/users/twm/events{/privacy}", "received_events_url": "https://api.github.com/users/twm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-08T00:28:17Z", "updated_at": "2020-02-05T11:29:22Z", "closed_at": "2020-02-05T11:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "automat (as used in Twisted) is producing deprecation warnings since the [attrs 19.2.0](http://www.attrs.org/en/stable/changelog.html#id1) release last week:\r\n\r\n```\r\nautomat/_methodical.py:209: DeprecationWarning: The usage of `cmp` is deprecated and will be removed on or after 2021-06-01.  Please use `eq` and `order` instead.\r\nautomat/_methodical.py:288: DeprecationWarning: The usage of `cmp` is deprecated and will be removed on or after 2021-06-01.  Please use `eq` and `order` instead.\r\n```\r\n\r\nThis is Automat 0.7.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/101", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/101/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/101/events", "html_url": "https://github.com/glyph/automat/issues/101", "id": 329703949, "node_id": "MDU6SXNzdWUzMjk3MDM5NDk=", "number": 101, "title": "f strings raise syntax error in visualize", "user": {"login": "ReblochonMasque", "id": 6275531, "node_id": "MDQ6VXNlcjYyNzU1MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6275531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ReblochonMasque", "html_url": "https://github.com/ReblochonMasque", "followers_url": "https://api.github.com/users/ReblochonMasque/followers", "following_url": "https://api.github.com/users/ReblochonMasque/following{/other_user}", "gists_url": "https://api.github.com/users/ReblochonMasque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ReblochonMasque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ReblochonMasque/subscriptions", "organizations_url": "https://api.github.com/users/ReblochonMasque/orgs", "repos_url": "https://api.github.com/users/ReblochonMasque/repos", "events_url": "https://api.github.com/users/ReblochonMasque/events{/privacy}", "received_events_url": "https://api.github.com/users/ReblochonMasque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-06T04:11:26Z", "updated_at": "2018-08-27T11:12:52Z", "closed_at": "2018-08-27T11:12:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "f strings in automat class or client raise a `SyntaxError` in visualize.  \r\nMaybe it is a `GraphViz` problem?\r\n\r\ndownload and save [this gist](https://gist.github.com/ReblochonMasque/0ff302bc48b78e7938a939d2c12ff824) as `tennisgamescore.py` in a tree structure like this:\r\n```\r\ntennis/\r\n\u251c\u2500\u2500 __init__.py\r\n\u2514\u2500\u2500 tennisgamescore.py\r\n```\r\nuncomment line 23 and run `automat-visualize tennis` to reproduce.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/100", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/100/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/100/events", "html_url": "https://github.com/glyph/automat/issues/100", "id": 329699487, "node_id": "MDU6SXNzdWUzMjk2OTk0ODc=", "number": 100, "title": "Examples, docs, best practices", "user": {"login": "ReblochonMasque", "id": 6275531, "node_id": "MDQ6VXNlcjYyNzU1MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6275531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ReblochonMasque", "html_url": "https://github.com/ReblochonMasque", "followers_url": "https://api.github.com/users/ReblochonMasque/followers", "following_url": "https://api.github.com/users/ReblochonMasque/following{/other_user}", "gists_url": "https://api.github.com/users/ReblochonMasque/gists{/gist_id}", "starred_url": "https://api.github.com/users/ReblochonMasque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ReblochonMasque/subscriptions", "organizations_url": "https://api.github.com/users/ReblochonMasque/orgs", "repos_url": "https://api.github.com/users/ReblochonMasque/repos", "events_url": "https://api.github.com/users/ReblochonMasque/events{/privacy}", "received_events_url": "https://api.github.com/users/ReblochonMasque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-06T03:41:06Z", "updated_at": "2018-08-27T11:18:28Z", "closed_at": "2018-08-27T11:18:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working my may through the docs to discover and learn automat. I am finding the docs well done, and the library well documented. It seems, however, to mostly cater to the _\"already well informed gentleman\"_'s questions though!  \r\nWhat I think is missing, is a sort of a step by step process for creating a state machine, and using it.\r\n\r\nI am willing to contribute and write such a process, but I am afraid I need a little bit of feedback, for calibration, and best practices:\r\n\r\nI have written a state machine that models the [scoring of a tennis game](https://gist.github.com/ReblochonMasque/0ff302bc48b78e7938a939d2c12ff824), linked as a `gist`. If someone would provide feedback, and maybe guidance, I would spend the time to polish it, and attempt to produce a useful step by step tutorial to include in the documentation of the library.\r\n\r\nA short list of what I think are bad ideas I used to solve the problems encountered:\r\n- use of `from automat._core import NoTransition` to use in a try/except block to exit a loop in the client. The problem was: how can I know the process has ended (reach a winning state).\r\n- Creating a \"pre-initial state\" (instead of starting at `_love_love`) that requires a state transition to the real initial state in order to allow for variable initialization - maybe there is a better way to init variables? or maybe there is an approach that does not require these variables?:\r\n```python\r\n    @_machine.state(initial=True)\r\n    def _state__(self):\r\n        \"\"\"\r\n        State __\r\n        \"\"\"\r\n\r\n    @_machine.output()\r\n    def _output_on_initialize_game(self):\r\n        \"\"\"\r\n        State __ -> State love-love\r\n        \"\"\"\r\n        self._server_points = 0\r\n        self._receiver_points = 0\r\n        self.winner = None\r\n        self._set_increments()\r\n        self._show_score()\r\n```\r\n\r\n- having to build a list of states to assign a query to each:\r\n```python\r\n    states = (_love_love, _15_love, _love_15, _love_30, _love_40, _30_love, _40_love, _15_all, _30_15, _15_30\r\n              , _40_15, _30_all, _15_40, _30_40, _40_30, _40_all, _deuce, _advantage_serve, _advantage_receive,\r\n              _server_wins, _receiver_wins)\r\n\r\n    for state in states:\r\n        state.upon(query_score, enter=state, outputs=[_output_on_query_score], collector=itemgetter(0))\r\n```\r\n--> maybe there is an `automat.method` that does this.\r\n--> or maybe there is a better approach.\r\n--> attaching a these queries as a state transition from/to the same state is also making the rendering of the [Tennis Game state machine visualization](http://s994.photobucket.com/user/FredInChina/media/tennis.tennisgamescore.TennisGame._machine.dot_zps0m9bdssf.png.html) overly crowded by adding a transition to self to each state..\r\n- Having to initiate class constants in order to mimic the passing of parameters that I could not quite figure out. It seemed to be a way to prevent a multiplication of `machine.input / machine.output` pairs to handle the transitions each time a player scored. \r\n```python\r\n    SCORING = {0: 15, 15: 15, 30: 10}\r\n    SCORING.update({k: 1 for k in range(40, 80)})\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/97", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/97/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/97/events", "html_url": "https://github.com/glyph/automat/issues/97", "id": 325530046, "node_id": "MDU6SXNzdWUzMjU1MzAwNDY=", "number": 97, "title": "New release", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-23T02:49:11Z", "updated_at": "2018-08-27T10:16:01Z", "closed_at": "2018-08-27T10:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "@glyph Hey man! Could you please push to PyPI? The last release was May 16, 2017.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/93", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/93/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/93/events", "html_url": "https://github.com/glyph/automat/issues/93", "id": 313968830, "node_id": "MDU6SXNzdWUzMTM5Njg4MzA=", "number": 93, "title": "Include Automat in the Intersphinx inventory", "user": {"login": "markrwilliams", "id": 704247, "node_id": "MDQ6VXNlcjcwNDI0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/704247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markrwilliams", "html_url": "https://github.com/markrwilliams", "followers_url": "https://api.github.com/users/markrwilliams/followers", "following_url": "https://api.github.com/users/markrwilliams/following{/other_user}", "gists_url": "https://api.github.com/users/markrwilliams/gists{/gist_id}", "starred_url": "https://api.github.com/users/markrwilliams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markrwilliams/subscriptions", "organizations_url": "https://api.github.com/users/markrwilliams/orgs", "repos_url": "https://api.github.com/users/markrwilliams/repos", "events_url": "https://api.github.com/users/markrwilliams/events{/privacy}", "received_events_url": "https://api.github.com/users/markrwilliams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-13T04:52:39Z", "updated_at": "2018-04-13T05:13:30Z", "closed_at": "2018-04-13T05:13:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This will let pydoctor resolve `L{automat}`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/91", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/91/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/91/events", "html_url": "https://github.com/glyph/automat/issues/91", "id": 312090115, "node_id": "MDU6SXNzdWUzMTIwOTAxMTU=", "number": 91, "title": "Link to ReadTheDocs from GitHub (e.g. in README)", "user": {"login": "itamarst", "id": 3266662, "node_id": "MDQ6VXNlcjMyNjY2NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3266662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itamarst", "html_url": "https://github.com/itamarst", "followers_url": "https://api.github.com/users/itamarst/followers", "following_url": "https://api.github.com/users/itamarst/following{/other_user}", "gists_url": "https://api.github.com/users/itamarst/gists{/gist_id}", "starred_url": "https://api.github.com/users/itamarst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itamarst/subscriptions", "organizations_url": "https://api.github.com/users/itamarst/orgs", "repos_url": "https://api.github.com/users/itamarst/repos", "events_url": "https://api.github.com/users/itamarst/events{/privacy}", "received_events_url": "https://api.github.com/users/itamarst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-06T19:26:30Z", "updated_at": "2018-04-13T05:13:30Z", "closed_at": "2018-04-13T05:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Finding docs is non-obvious if you just end up in github repo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/89", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/89/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/89/events", "html_url": "https://github.com/glyph/automat/issues/89", "id": 295977832, "node_id": "MDU6SXNzdWUyOTU5Nzc4MzI=", "number": 89, "title": "inheritance - object oriented machines", "user": {"login": "bitfinity", "id": 209595, "node_id": "MDQ6VXNlcjIwOTU5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/209595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitfinity", "html_url": "https://github.com/bitfinity", "followers_url": "https://api.github.com/users/bitfinity/followers", "following_url": "https://api.github.com/users/bitfinity/following{/other_user}", "gists_url": "https://api.github.com/users/bitfinity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitfinity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitfinity/subscriptions", "organizations_url": "https://api.github.com/users/bitfinity/orgs", "repos_url": "https://api.github.com/users/bitfinity/repos", "events_url": "https://api.github.com/users/bitfinity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitfinity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T19:03:18Z", "updated_at": "2018-09-21T20:32:10Z", "closed_at": "2018-09-21T20:32:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed problems while trying to develop machines using automat that inherit from base machine classes.\r\n1. @output's defined in base methods misinterpret the fact that the super() is called in the following way:\r\n`\r\nFile \".../automat/_methodical.py\", line 274, in __get__method=self.method.__name__\r\nAttributeError: GiveFeedback._initialize is a state-machine output method; to produce this output, call an input method instead.\r\n`\r\n2. It is not obvious how to define transitions using states and outputs defined in base classes. It appears that states are attached to the base class before instantiation as methodicStates but how do you reference them? Outputs seem to be instantiated upon object creation. \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/88", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/88/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/88/events", "html_url": "https://github.com/glyph/automat/issues/88", "id": 294168129, "node_id": "MDU6SXNzdWUyOTQxNjgxMjk=", "number": 88, "title": "Link to ClusterHQ article is broken", "user": {"login": "adiroiban", "id": 204609, "node_id": "MDQ6VXNlcjIwNDYwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adiroiban", "html_url": "https://github.com/adiroiban", "followers_url": "https://api.github.com/users/adiroiban/followers", "following_url": "https://api.github.com/users/adiroiban/following{/other_user}", "gists_url": "https://api.github.com/users/adiroiban/gists{/gist_id}", "starred_url": "https://api.github.com/users/adiroiban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adiroiban/subscriptions", "organizations_url": "https://api.github.com/users/adiroiban/orgs", "repos_url": "https://api.github.com/users/adiroiban/repos", "events_url": "https://api.github.com/users/adiroiban/events{/privacy}", "received_events_url": "https://api.github.com/users/adiroiban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-04T04:07:57Z", "updated_at": "2018-04-13T05:13:30Z", "closed_at": "2018-04-13T05:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "And it is not archived :( \r\nhttps://web.archive.org/web/*/https://clusterhq.com/blog/what-is-a-state-machine/\r\n\r\nMaybe just remove the link, or maybe @exarkun or someone else from ClusterHQ have a copy and can republish it\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/78", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/78/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/78/events", "html_url": "https://github.com/glyph/automat/issues/78", "id": 255366820, "node_id": "MDU6SXNzdWUyNTUzNjY4MjA=", "number": 78, "title": "Programmatically create/manipulate state machines", "user": {"login": "tonnydourado", "id": 891178, "node_id": "MDQ6VXNlcjg5MTE3OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/891178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonnydourado", "html_url": "https://github.com/tonnydourado", "followers_url": "https://api.github.com/users/tonnydourado/followers", "following_url": "https://api.github.com/users/tonnydourado/following{/other_user}", "gists_url": "https://api.github.com/users/tonnydourado/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonnydourado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonnydourado/subscriptions", "organizations_url": "https://api.github.com/users/tonnydourado/orgs", "repos_url": "https://api.github.com/users/tonnydourado/repos", "events_url": "https://api.github.com/users/tonnydourado/events{/privacy}", "received_events_url": "https://api.github.com/users/tonnydourado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-05T18:27:12Z", "updated_at": "2017-09-24T17:48:17Z", "closed_at": "2017-09-24T17:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a question than an issue, but there's no #automat tag in stack overflow (yet!), so I hope it's ok to ask it here. Also, it kinda relates to #70, I think?\r\n\r\nI would like to build a state machine class programmatically, with a decorator, for instance, that takes a class with a MethodicalMachine attribute, and set some methods as inputs, some as outputs, some as states, and add the transitions (which methods are what, and which transitions should be add will come from somewhere else). However, I'm hitting into the fact that I can't access the inputs and outputs from outside the class scope, it seems like the descriptors block me from doing that.\r\n\r\nSo, my question: Is there a way to manipulate the states, inputs and outpus programmatically like that, that I'm missing somehow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/77", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/77/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/77/events", "html_url": "https://github.com/glyph/automat/issues/77", "id": 254912432, "node_id": "MDU6SXNzdWUyNTQ5MTI0MzI=", "number": 77, "title": "Please write in setup.py which versions of python are supported", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-04T00:50:17Z", "updated_at": "2017-09-07T18:15:33Z", "closed_at": "2017-09-07T18:15:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/65", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/65/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/65/events", "html_url": "https://github.com/glyph/automat/issues/65", "id": 229628614, "node_id": "MDU6SXNzdWUyMjk2Mjg2MTQ=", "number": 65, "title": "\"got an unexpected keyword argument 'frozen'\" without attrs>=16.1.0", "user": {"login": "neirbowj", "id": 1879063, "node_id": "MDQ6VXNlcjE4NzkwNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1879063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neirbowj", "html_url": "https://github.com/neirbowj", "followers_url": "https://api.github.com/users/neirbowj/followers", "following_url": "https://api.github.com/users/neirbowj/following{/other_user}", "gists_url": "https://api.github.com/users/neirbowj/gists{/gist_id}", "starred_url": "https://api.github.com/users/neirbowj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neirbowj/subscriptions", "organizations_url": "https://api.github.com/users/neirbowj/orgs", "repos_url": "https://api.github.com/users/neirbowj/repos", "events_url": "https://api.github.com/users/neirbowj/events{/privacy}", "received_events_url": "https://api.github.com/users/neirbowj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-18T10:47:05Z", "updated_at": "2017-05-19T01:38:48Z", "closed_at": "2017-05-19T01:38:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The patch for #62 in 3766391 that passes the `frozen` keyword to `attr.s` assumes `attrs>=16.1.0` per python-attrs/attrs@cfa6d2e.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/62", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/62/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/62/events", "html_url": "https://github.com/glyph/automat/issues/62", "id": 229145214, "node_id": "MDU6SXNzdWUyMjkxNDUyMTQ=", "number": 62, "title": "broken with attrs 17.1.0", "user": {"login": "tardyp", "id": 109859, "node_id": "MDQ6VXNlcjEwOTg1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/109859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tardyp", "html_url": "https://github.com/tardyp", "followers_url": "https://api.github.com/users/tardyp/followers", "following_url": "https://api.github.com/users/tardyp/following{/other_user}", "gists_url": "https://api.github.com/users/tardyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tardyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tardyp/subscriptions", "organizations_url": "https://api.github.com/users/tardyp/orgs", "repos_url": "https://api.github.com/users/tardyp/repos", "events_url": "https://api.github.com/users/tardyp/events{/privacy}", "received_events_url": "https://api.github.com/users/tardyp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-16T19:34:54Z", "updated_at": "2017-05-17T04:07:51Z", "closed_at": "2017-05-16T23:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Buildbot CI Just got issues with automat and the release of the new attrs:\r\nhttps://nine.buildbot.net/#/builders/8/builds/235/steps/5/logs/stdio\r\n\r\n```\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/trial/runner.py\", line 508, in loadPackage\r\n    module = modinfo.load()\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/python/modules.py\", line 392, in load\r\n    return self.pathEntry.pythonPath.moduleLoader(self.name)\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/python/reflect.py\", line 301, in namedAny\r\n    topLevelPackage = _importAndCheckStack(trialname)\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/python/reflect.py\", line 240, in _importAndCheckStack\r\n    return __import__(importName)\r\n  File \"/buildbot/buildbot-job/build/master/buildbot/test/integration/test_custom_buildstep.py\", line 30, in <module>\r\n    from buildbot.process import builder\r\n  File \"/buildbot/buildbot-job/build/master/buildbot/process/builder.py\", line 23, in <module>\r\n    from twisted.application import internet\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/application/internet.py\", line 542, in <module>\r\n    class _ClientMachine(object):\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/twisted/application/internet.py\", line 842, in _ClientMachine\r\n    outputs=[_connect])\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/automat/_methodical.py\", line 62, in upon\r\n    self.machine._oneTransition(self, input, enter, outputs, collector)\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/automat/_methodical.py\", line 255, in _oneTransition\r\n    tuple(outputTokens))\r\n  File \"/buildbot/buildbot-job/build/sandbox/local/lib/python2.7/site-packages/automat/_core.py\", line 74, in addTransition\r\n    (inState, inputSymbol, outState, tuple(outputSymbols))\r\n```\r\nI believe I am the first to find out, but we will soon have lots of CI broken.\r\nnot sure if this is automat or attrs fault yet...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/58", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/58/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/58/events", "html_url": "https://github.com/glyph/automat/issues/58", "id": 219356333, "node_id": "MDU6SXNzdWUyMTkzNTYzMzM=", "number": 58, "title": "tests fail on py3.6", "user": {"login": "warner", "id": 27146, "node_id": "MDQ6VXNlcjI3MTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/27146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warner", "html_url": "https://github.com/warner", "followers_url": "https://api.github.com/users/warner/followers", "following_url": "https://api.github.com/users/warner/following{/other_user}", "gists_url": "https://api.github.com/users/warner/gists{/gist_id}", "starred_url": "https://api.github.com/users/warner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warner/subscriptions", "organizations_url": "https://api.github.com/users/warner/orgs", "repos_url": "https://api.github.com/users/warner/repos", "events_url": "https://api.github.com/users/warner/events{/privacy}", "received_events_url": "https://api.github.com/users/warner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-04T19:24:39Z", "updated_at": "2017-04-13T20:52:59Z", "closed_at": "2017-04-13T20:52:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@tardyp pointed out (in #54) that the function-bodies-are-empty check fails on python3.6, causing tests to fail. Oops.\r\n\r\nI've got a PR to add test coverage for py3.6: #57, which should fail until we fix this check. I tried to add py3.6 support a few weeks ago, but at that point Travis didn't provide python3.6 in the normal `python: 2.7` environment. I don't know if they do now or not.. I'll wait to see how that PR fails.\r\n\r\nI'll file a PR to fix this function-bodies-are-empty check, we should land it first, so the add-py3.6 can pass CI before landing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/52", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/52/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/52/events", "html_url": "https://github.com/glyph/automat/issues/52", "id": 216962926, "node_id": "MDU6SXNzdWUyMTY5NjI5MjY=", "number": 52, "title": "Consider combining with visio2python", "user": {"login": "vesellov", "id": 5828660, "node_id": "MDQ6VXNlcjU4Mjg2NjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5828660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vesellov", "html_url": "https://github.com/vesellov", "followers_url": "https://api.github.com/users/vesellov/followers", "following_url": "https://api.github.com/users/vesellov/following{/other_user}", "gists_url": "https://api.github.com/users/vesellov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vesellov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vesellov/subscriptions", "organizations_url": "https://api.github.com/users/vesellov/orgs", "repos_url": "https://api.github.com/users/vesellov/repos", "events_url": "https://api.github.com/users/vesellov/events{/privacy}", "received_events_url": "https://api.github.com/users/vesellov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-25T09:39:30Z", "updated_at": "2017-03-25T19:32:44Z", "closed_at": "2017-03-25T19:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://bitdust.io/visio2python/\r\n\r\nHi. Just found that nice project and I like it.\r\nAs part of my works I also developed a tool to develop code using state machine, it is called visio2python. I think it is very related to https://pypi.python.org/pypi/Automat/ . If you think combining both methods together may have some value, lets communicate/coordinate and do it.\r\nGood luck, Glyph. Thanks for your work! I love Twisted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/51", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/51/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/51/events", "html_url": "https://github.com/glyph/automat/issues/51", "id": 210259307, "node_id": "MDU6SXNzdWUyMTAyNTkzMDc=", "number": 51, "title": "assert that transitions are unique", "user": {"login": "warner", "id": 27146, "node_id": "MDQ6VXNlcjI3MTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/27146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warner", "html_url": "https://github.com/warner", "followers_url": "https://api.github.com/users/warner/followers", "following_url": "https://api.github.com/users/warner/following{/other_user}", "gists_url": "https://api.github.com/users/warner/gists{/gist_id}", "starred_url": "https://api.github.com/users/warner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warner/subscriptions", "organizations_url": "https://api.github.com/users/warner/orgs", "repos_url": "https://api.github.com/users/warner/repos", "events_url": "https://api.github.com/users/warner/events{/privacy}", "received_events_url": "https://api.github.com/users/warner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T20:23:08Z", "updated_at": "2017-03-29T08:32:07Z", "closed_at": "2017-03-29T08:32:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "While working on adding tracing, I accidentally had a machine with transitions like this:\r\n\r\n```python\r\n    begin.upon(go1, middle, [out])\r\n    middle.upon(go2, end, [out])\r\n    end.upon(back, middle, [])\r\n    end.upon(back, begin, [])\r\n```\r\n\r\nand then I was surprised when calling ``m.back`` from the ``end`` state gave me an error:\r\n\r\n```\r\n    raise NoTransition(state=inState, symbol=inputSymbol)\r\nautomat._core.NoTransition: no transition for MethodicalInput(method=<function go2 at 0x10365d1b8>) in MethodicalState(method=<function begin at 0x103653f50>)\r\n```\r\n\r\nOf course my machine should have used:\r\n\r\n```python\r\n    begin.upon(go1, middle, [out])\r\n    middle.upon(go2, end, [out])\r\n    end.upon(back, middle, [])\r\n    middle.upon(back, begin, [])\r\n```\r\n\r\nI could have discovered this earlier if MethodicalMachine had complained to me that I was registering two transitions with the same state and the same input, instead of allowing the most recent ``.upon()`` call to silently win.\r\n\r\nI think this might require the `Automaton._transitions` to record dicts of dicts instead of a flat list of tuples. Or maybe the `Automaton.addTransition` method could just search the existing list for partial matches and raise an exception if one is found.\r\n\r\nIncidentally, is there much value in having that NoTransition exception's string form include all that \"MethodicalInput\" and object ID noise? I'd find it easier to read if it said:\r\n\r\n```\r\n    raise NoTransition(state=inState, symbol=inputSymbol)\r\nautomat._core.NoTransition: no transition from state=begin for input=go2\r\n```\r\n\r\nThe actual state and input \"symbol\" objects are available on the exception object, should any exception handlers need them.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/50", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/50/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/50/events", "html_url": "https://github.com/glyph/automat/issues/50", "id": 210206005, "node_id": "MDU6SXNzdWUyMTAyMDYwMDU=", "number": 50, "title": "bodies of Inputs are executed, but shouldn't be", "user": {"login": "warner", "id": 27146, "node_id": "MDQ6VXNlcjI3MTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/27146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warner", "html_url": "https://github.com/warner", "followers_url": "https://api.github.com/users/warner/followers", "following_url": "https://api.github.com/users/warner/following{/other_user}", "gists_url": "https://api.github.com/users/warner/gists{/gist_id}", "starred_url": "https://api.github.com/users/warner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warner/subscriptions", "organizations_url": "https://api.github.com/users/warner/orgs", "repos_url": "https://api.github.com/users/warner/repos", "events_url": "https://api.github.com/users/warner/events{/privacy}", "received_events_url": "https://api.github.com/users/warner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-25T03:11:46Z", "updated_at": "2017-03-29T08:33:21Z", "closed_at": "2017-03-29T08:33:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "With Automat-0.5.0, the following program:\r\n\r\n```python\r\nfrom automat import MethodicalMachine\r\nclass Code(object):\r\n    m = MethodicalMachine()\r\n    @m.state(initial=True)\r\n    def S0(self):\r\n        print \"S0\"\r\n    @m.state()\r\n    def S1(self):\r\n        print \"S1\"\r\n\r\n    @m.input()\r\n    def go(self):\r\n        print \"go\"\r\n    S0.upon(go, enter=S1, outputs=[])\r\n\r\nprint \"doing construction\"\r\nc = Code()\r\nprint \"doing go\"\r\nc.go()\r\nprint \"done\"\r\n```\r\n\r\nproduces the following output:\r\n\r\n```% python input-run.py\r\ndoing construction\r\ndoing go\r\ngo\r\ndone\r\n```\r\n\r\nI believe the intention of Automat is that States are methods (rather than attributes like `attr.ib` would do it) only for:\r\n\r\n* their names, which can then appear as nicely-accessible attributes of the hosting class, making all the `.upon()` statements easy to write\r\n* a place to add arguments things like `(initial=True)`\r\n\r\nand Inputs are methods only for:\r\n\r\n* their names, as above\r\n* their names, to be accessible from outside the class, so other \"upstream\" objects can invoke `target.inputXYZ(args)` to effect a state transition\r\n* their method signatures, so they can be compared against Outputs\r\n\r\nOutputs are allowed to have behavior, so they're fully justified in being real methods.\r\n\r\nThe bodies of States aren't executed, but apparently the bodies of Inputs are, when the input function is executed.\r\n\r\nAs Glyph pointed out, really Automat should use `dis` to inspect the bodies of both Inputs and States, and insist that they're empty at class-evaluation time. But a good starting point would be to ensure that the bodies aren't ever invoked, since that will help teach users about the intended emptiness.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/36", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/36/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/36/events", "html_url": "https://github.com/glyph/automat/issues/36", "id": 201486587, "node_id": "MDU6SXNzdWUyMDE0ODY1ODc=", "number": 36, "title": "Tracing API", "user": {"login": "markrwilliams", "id": 704247, "node_id": "MDQ6VXNlcjcwNDI0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/704247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markrwilliams", "html_url": "https://github.com/markrwilliams", "followers_url": "https://api.github.com/users/markrwilliams/followers", "following_url": "https://api.github.com/users/markrwilliams/following{/other_user}", "gists_url": "https://api.github.com/users/markrwilliams/gists{/gist_id}", "starred_url": "https://api.github.com/users/markrwilliams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markrwilliams/subscriptions", "organizations_url": "https://api.github.com/users/markrwilliams/orgs", "repos_url": "https://api.github.com/users/markrwilliams/repos", "events_url": "https://api.github.com/users/markrwilliams/events{/privacy}", "received_events_url": "https://api.github.com/users/markrwilliams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-18T05:58:22Z", "updated_at": "2017-04-13T20:55:24Z", "closed_at": "2017-04-13T20:55:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should work out an API that allows you to trace the execution of an Automat machine.  You should able to register with a machine an object that receives a sequence of `(input, state, outputs)` tuples and then unregister it.  It should help with [other issues](https://github.com/glyph/automat/issues/8).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/35", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/35/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/35/events", "html_url": "https://github.com/glyph/automat/issues/35", "id": 198601496, "node_id": "MDU6SXNzdWUxOTg2MDE0OTY=", "number": 35, "title": "add more information on PyPI", "user": {"login": "termim", "id": 200767, "node_id": "MDQ6VXNlcjIwMDc2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/200767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/termim", "html_url": "https://github.com/termim", "followers_url": "https://api.github.com/users/termim/followers", "following_url": "https://api.github.com/users/termim/following{/other_user}", "gists_url": "https://api.github.com/users/termim/gists{/gist_id}", "starred_url": "https://api.github.com/users/termim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/termim/subscriptions", "organizations_url": "https://api.github.com/users/termim/orgs", "repos_url": "https://api.github.com/users/termim/repos", "events_url": "https://api.github.com/users/termim/events{/privacy}", "received_events_url": "https://api.github.com/users/termim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-04T00:10:43Z", "updated_at": "2018-06-24T22:00:36Z", "closed_at": "2018-06-24T22:00:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add some more description and links to documentation and source on PyPI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/34", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/34/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/34/events", "html_url": "https://github.com/glyph/automat/issues/34", "id": 196850305, "node_id": "MDU6SXNzdWUxOTY4NTAzMDU=", "number": 34, "title": "Create some API docs.", "user": {"login": "tomprince", "id": 283816, "node_id": "MDQ6VXNlcjI4MzgxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/283816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomprince", "html_url": "https://github.com/tomprince", "followers_url": "https://api.github.com/users/tomprince/followers", "following_url": "https://api.github.com/users/tomprince/following{/other_user}", "gists_url": "https://api.github.com/users/tomprince/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomprince/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomprince/subscriptions", "organizations_url": "https://api.github.com/users/tomprince/orgs", "repos_url": "https://api.github.com/users/tomprince/repos", "events_url": "https://api.github.com/users/tomprince/events{/privacy}", "received_events_url": "https://api.github.com/users/tomprince/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-21T05:35:49Z", "updated_at": "2017-11-04T21:52:20Z", "closed_at": "2017-11-04T21:52:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to link to automat's docs in https://github.com/twisted/twisted/pull/588 but since there are no docs, pydoctor complained at me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/30", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/30/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/30/events", "html_url": "https://github.com/glyph/automat/issues/30", "id": 188083338, "node_id": "MDU6SXNzdWUxODgwODMzMzg=", "number": 30, "title": "Not all outputs get run if the collector does not exhaust the generator.", "user": {"login": "tomprince", "id": 283816, "node_id": "MDQ6VXNlcjI4MzgxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/283816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomprince", "html_url": "https://github.com/tomprince", "followers_url": "https://api.github.com/users/tomprince/followers", "following_url": "https://api.github.com/users/tomprince/following{/other_user}", "gists_url": "https://api.github.com/users/tomprince/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomprince/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomprince/subscriptions", "organizations_url": "https://api.github.com/users/tomprince/orgs", "repos_url": "https://api.github.com/users/tomprince/repos", "events_url": "https://api.github.com/users/tomprince/events{/privacy}", "received_events_url": "https://api.github.com/users/tomprince/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-08T19:36:25Z", "updated_at": "2018-04-13T18:01:30Z", "closed_at": "2018-04-13T18:00:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have multiple outputs, and want to return the result of the first one, an obvious option is to \r\n```python\r\nstate.upon(input, enter=next_state, outputs=[first_output, second_output], collect=next)\r\n```\r\nBut since collect is passed a generator of outputs, the collector being `next` causes the second output to not be evaluated.\r\n\r\nThis is related to #18.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/15", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/15/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/15/events", "html_url": "https://github.com/glyph/automat/issues/15", "id": 142027083, "node_id": "MDU6SXNzdWUxNDIwMjcwODM=", "number": 15, "title": "Sending an invalid input causes KeyError to be raised", "user": {"login": "moshez", "id": 422703, "node_id": "MDQ6VXNlcjQyMjcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/422703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshez", "html_url": "https://github.com/moshez", "followers_url": "https://api.github.com/users/moshez/followers", "following_url": "https://api.github.com/users/moshez/following{/other_user}", "gists_url": "https://api.github.com/users/moshez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshez/subscriptions", "organizations_url": "https://api.github.com/users/moshez/orgs", "repos_url": "https://api.github.com/users/moshez/repos", "events_url": "https://api.github.com/users/moshez/events{/privacy}", "received_events_url": "https://api.github.com/users/moshez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-03-19T05:02:20Z", "updated_at": "2016-04-10T22:36:27Z", "closed_at": "2016-04-10T22:36:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When an input is sent to a state that has not defined an \"upon\" on it, it raises KeyError. This is an implementation detail -- internally, valid transitions are kept in a dictionary and the look-up fails.\n\nThe right thing is to raise an exception, but this is not really the right semantics for LookupError, which is meant to function as a \"you have tried to look for a missing key\". For an example where this might cause harm in practice, imagine a class which is meant to have a \"lookup(key)\" method, but which looks in different dictionaries depending on the state. It is natural to catch a KeyError from this, for example to substitute a default value. However, if a state for which \"lookup()\" is invalid [e.g., before the dictionaries are initialized] we do not want to mask that error.\n\nI suggest \"InputInvalidForState\" inherit from \"ValueError\". As a precedent, trying to perform \".read()\" from a closed file raises ValueError. UnicodeError, which is also a case of \"bad current configuration of input\", is also a subclass of ValueError.\n\nMy understanding is that there has been a previous suggestion of NotImplementedError. However, NIE is supposed to indicate an unfinished class, not a bad (possibly temporary) state. It is normally implemented class-wide. I do not think we should consider different states to be different classes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/11", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/11/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/11/events", "html_url": "https://github.com/glyph/automat/issues/11", "id": 114957650, "node_id": "MDU6SXNzdWUxMTQ5NTc2NTA=", "number": 11, "title": "release 0.0.3 with current state", "user": {"login": "moshez", "id": 422703, "node_id": "MDQ6VXNlcjQyMjcwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/422703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshez", "html_url": "https://github.com/moshez", "followers_url": "https://api.github.com/users/moshez/followers", "following_url": "https://api.github.com/users/moshez/following{/other_user}", "gists_url": "https://api.github.com/users/moshez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshez/subscriptions", "organizations_url": "https://api.github.com/users/moshez/orgs", "repos_url": "https://api.github.com/users/moshez/repos", "events_url": "https://api.github.com/users/moshez/events{/privacy}", "received_events_url": "https://api.github.com/users/moshez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-04T02:48:46Z", "updated_at": "2015-12-22T20:35:11Z", "closed_at": "2015-12-22T20:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/10", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/10/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/10/events", "html_url": "https://github.com/glyph/automat/issues/10", "id": 109540103, "node_id": "MDU6SXNzdWUxMDk1NDAxMDM=", "number": 10, "title": "transitions with condition?", "user": {"login": "aborilov", "id": 2526284, "node_id": "MDQ6VXNlcjI1MjYyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2526284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aborilov", "html_url": "https://github.com/aborilov", "followers_url": "https://api.github.com/users/aborilov/followers", "following_url": "https://api.github.com/users/aborilov/following{/other_user}", "gists_url": "https://api.github.com/users/aborilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/aborilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aborilov/subscriptions", "organizations_url": "https://api.github.com/users/aborilov/orgs", "repos_url": "https://api.github.com/users/aborilov/repos", "events_url": "https://api.github.com/users/aborilov/events{/privacy}", "received_events_url": "https://api.github.com/users/aborilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-10-02T17:56:53Z", "updated_at": "2016-01-09T11:35:52Z", "closed_at": "2015-12-22T20:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "is any way to create transition with condition?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/7", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/7/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/7/events", "html_url": "https://github.com/glyph/automat/issues/7", "id": 106967068, "node_id": "MDU6SXNzdWUxMDY5NjcwNjg=", "number": 7, "title": "documentation for serialization API", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-17T11:55:29Z", "updated_at": "2015-09-17T18:41:17Z", "closed_at": "2015-09-17T18:41:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "this should go in the now-immense README I guess\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/glyph/automat/issues/5", "repository_url": "https://api.github.com/repos/glyph/automat", "labels_url": "https://api.github.com/repos/glyph/automat/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/glyph/automat/issues/5/comments", "events_url": "https://api.github.com/repos/glyph/automat/issues/5/events", "html_url": "https://github.com/glyph/automat/issues/5", "id": 55559593, "node_id": "MDU6SXNzdWU1NTU1OTU5Mw==", "number": 5, "title": "command-line tool for actually doing visualization", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-27T00:40:27Z", "updated_at": "2016-05-25T04:17:42Z", "closed_at": "2016-05-25T04:17:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There's some code now that can do state-machine visualization, but actually getting a PNG out should be as simplified as possible.\n", "performed_via_github_app": null, "score": 1.0}]}