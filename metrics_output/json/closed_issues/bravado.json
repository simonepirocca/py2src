{"total_count": 126, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Yelp/bravado/issues/461", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/461/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/461/events", "html_url": "https://github.com/Yelp/bravado/issues/461", "id": 649260987, "node_id": "MDU6SXNzdWU2NDkyNjA5ODc=", "number": 461, "title": "follow_redirects config option seems to have no effect", "user": {"login": "amancevice", "id": 157711, "node_id": "MDQ6VXNlcjE1NzcxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/157711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amancevice", "html_url": "https://github.com/amancevice", "followers_url": "https://api.github.com/users/amancevice/followers", "following_url": "https://api.github.com/users/amancevice/following{/other_user}", "gists_url": "https://api.github.com/users/amancevice/gists{/gist_id}", "starred_url": "https://api.github.com/users/amancevice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amancevice/subscriptions", "organizations_url": "https://api.github.com/users/amancevice/orgs", "repos_url": "https://api.github.com/users/amancevice/repos", "events_url": "https://api.github.com/users/amancevice/events{/privacy}", "received_events_url": "https://api.github.com/users/amancevice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T19:36:33Z", "updated_at": "2020-07-01T23:19:29Z", "closed_at": "2020-07-01T20:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to create a Swagger client that follows redirects but I am not seeing the behavior I would expect (it raises `HTTPFound: 302 Found`)\r\n\r\nHere is essentially what I am trying to do:\r\n\r\n```python\r\nfrom bravado.client import SwaggerClient\r\n\r\nclient = SwaggerClient.from_url('https://my.swagger.endpoint/', config={'follow_redirects': True})\r\nclient.resource.example().response()\r\n# BOOM!\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/459", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/459/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/459/events", "html_url": "https://github.com/Yelp/bravado/issues/459", "id": 600990305, "node_id": "MDU6SXNzdWU2MDA5OTAzMDU=", "number": 459, "title": "Question: How to increase connection pool?", "user": {"login": "ErikKalkoken", "id": 7696155, "node_id": "MDQ6VXNlcjc2OTYxNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7696155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikKalkoken", "html_url": "https://github.com/ErikKalkoken", "followers_url": "https://api.github.com/users/ErikKalkoken/followers", "following_url": "https://api.github.com/users/ErikKalkoken/following{/other_user}", "gists_url": "https://api.github.com/users/ErikKalkoken/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikKalkoken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikKalkoken/subscriptions", "organizations_url": "https://api.github.com/users/ErikKalkoken/orgs", "repos_url": "https://api.github.com/users/ErikKalkoken/repos", "events_url": "https://api.github.com/users/ErikKalkoken/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikKalkoken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266879, "node_id": "MDU6TGFiZWwxMDMyNjY4Nzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T12:02:00Z", "updated_at": "2020-06-02T22:57:41Z", "closed_at": "2020-06-02T22:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using bravado in our Django app to provide access to an API and it works great so far.\r\n\r\nNow we would like to use one bravado client with multiple parallel threads (celery with gevent). But when running with about 30 threads for some time we are getting warnings that the connection pool is exhausted:\r\n\r\n```plain\r\n[2020-04-15 23:44:53,585: WARNING/MainProcess] Connection pool is full, discarding connection: esi.evetech.net\r\n```\r\n\r\nOur assumption is that the urllib connection pool that bravado uses has less connections than the number of threads we are running (e.g. 30 in our test).\r\n\r\nSo my question is: Is there a way to configure the size of the urllib connection pool that bravado uses? This is with the normal SwaggerClient, not Fido.\r\n\r\nAny help would be very much appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/453", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/453/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/453/events", "html_url": "https://github.com/Yelp/bravado/issues/453", "id": 580070167, "node_id": "MDU6SXNzdWU1ODAwNzAxNjc=", "number": 453, "title": "Plans for a new major version of Bravado (e.g. based on Hip)?", "user": {"login": "twosigmajab", "id": 40300730, "node_id": "MDQ6VXNlcjQwMzAwNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/40300730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twosigmajab", "html_url": "https://github.com/twosigmajab", "followers_url": "https://api.github.com/users/twosigmajab/followers", "following_url": "https://api.github.com/users/twosigmajab/following{/other_user}", "gists_url": "https://api.github.com/users/twosigmajab/gists{/gist_id}", "starred_url": "https://api.github.com/users/twosigmajab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twosigmajab/subscriptions", "organizations_url": "https://api.github.com/users/twosigmajab/orgs", "repos_url": "https://api.github.com/users/twosigmajab/repos", "events_url": "https://api.github.com/users/twosigmajab/events{/privacy}", "received_events_url": "https://api.github.com/users/twosigmajab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T16:44:10Z", "updated_at": "2020-03-19T09:20:20Z", "closed_at": "2020-03-19T09:20:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thanks for maintaining Bravado! Just started looking at it, and so far it looks like the best basis for generating Python clients for OpenAPI-enabled services.\r\n\r\nWhen I see all these [HttpFuture](https://github.com/Yelp/bravado/blob/28700d2a4bb19736307fecf7b8e35684c6f2d31d/bravado/http_future.py#L133)-style APIs, I can't help but ask if you've read [this post](https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/) and have given any thought yet to basing a future version of Bravado on https://github.com/python-trio/hip? (Started as an async-first fork of urllib3 by the author of Trio, but the urllib3 maintainer has moved to co-maintaining Hip for the future async HTTP Python client to rule them all.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/452", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/452/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/452/events", "html_url": "https://github.com/Yelp/bravado/issues/452", "id": 569997810, "node_id": "MDU6SXNzdWU1Njk5OTc4MTA=", "number": 452, "title": "RPM Packaging", "user": {"login": "micahculpepper", "id": 16106100, "node_id": "MDQ6VXNlcjE2MTA2MTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/16106100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micahculpepper", "html_url": "https://github.com/micahculpepper", "followers_url": "https://api.github.com/users/micahculpepper/followers", "following_url": "https://api.github.com/users/micahculpepper/following{/other_user}", "gists_url": "https://api.github.com/users/micahculpepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/micahculpepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micahculpepper/subscriptions", "organizations_url": "https://api.github.com/users/micahculpepper/orgs", "repos_url": "https://api.github.com/users/micahculpepper/repos", "events_url": "https://api.github.com/users/micahculpepper/events{/privacy}", "received_events_url": "https://api.github.com/users/micahculpepper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T17:12:26Z", "updated_at": "2020-02-28T08:16:34Z", "closed_at": "2020-02-28T08:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello folks,\r\n\r\nWould you be willing to publish RPMs of Bravado in addition to the Python packages you already provide? I've got an application where I would like to use Bravado, but due to restrictions on the environment, I can't install dependencies with pip; I have to use yum.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/449", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/449/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/449/events", "html_url": "https://github.com/Yelp/bravado/issues/449", "id": 566236524, "node_id": "MDU6SXNzdWU1NjYyMzY1MjQ=", "number": 449, "title": "Bravado should not silently follow redirects", "user": {"login": "mattdowdell", "id": 20556265, "node_id": "MDQ6VXNlcjIwNTU2MjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/20556265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattdowdell", "html_url": "https://github.com/mattdowdell", "followers_url": "https://api.github.com/users/mattdowdell/followers", "following_url": "https://api.github.com/users/mattdowdell/following{/other_user}", "gists_url": "https://api.github.com/users/mattdowdell/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattdowdell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattdowdell/subscriptions", "organizations_url": "https://api.github.com/users/mattdowdell/orgs", "repos_url": "https://api.github.com/users/mattdowdell/repos", "events_url": "https://api.github.com/users/mattdowdell/events{/privacy}", "received_events_url": "https://api.github.com/users/mattdowdell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T11:27:38Z", "updated_at": "2020-03-27T20:38:53Z", "closed_at": "2020-03-27T20:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my API spec, I have an endpoint that returns a 301 redirect. This redirects to another URL on a different server that subsequently returns a 200. However, because bravado is using requests, this redirect never comes back to bravado which gets the 200 (which is not a specified response) and then throws an error.\r\n\r\nRelevant section of logs below. Logs without a prefix for where it came from comes from setting `http.client.HTTPConnection.debuglevel = 5`. Comments are inserted for clarity and some addresses are redacted for privacy (as this is on a private network).\r\n\r\n```\r\n# here we send the initial request which responds with a 301\r\n[10:11:10.432][bravado.client][DEBUG] getSecureClient({'_request_options': {'headers': {'UserID': '123456'}}, 'storeID': '3888d0f1-7896-4c8e-98c8-4934d5a37aff'})\r\nsend: b'GET /api/v2/backup/stores/3888d0f1-7896-4c8e-98c8-4934d5a37aff/secure-client HTTP/1.1\\r\\nHost: localhost:4000\\r\\nUser-Agent: python-requests/2.22.0\\r\\nAccept-Encoding: gzip, d                                        eflate\\r\\nAccept: */*\\r\\nConnection: keep-alive\\r\\nUserID: 123456\\r\\n\\r\\n'\r\nreply: 'HTTP/1.1 301 Moved Permanently\\r\\n'\r\nheader: Location: http://<redirected-url>/<somefile>\r\nheader: Vary: Origin\r\nheader: Date: Mon, 17 Feb 2020 10:11:10 GMT\r\nheader: Content-Length: 0\r\n[10:11:10.437][urllib3.connectionpool][DEBUG] http://localhost:4000 \"GET /api/v2/backup/stores/3888d0f1-7896-4c8e-98c8-4934d5a37aff/secure-client HTTP/1.1\" 301 0\r\n\r\n# because bravado doesn't configure anything for redirects\r\n# they are automatically followed by requests/urllib3\r\n[10:11:10.440][urllib3.connectionpool][DEBUG] Starting new HTTP connection (1): web-proxy.sdc.hpecorp.net:8080\r\nsend: b'GET http://<redirected-url>/<somefile> HTTP/1.1\\r\\nHost: 16.26.136.45:8080\\r\\nUser-Agent: python-requests/2.22.0\\r\\nAccept-Encoding: gzip, deflate\\r\\nAccept: */*\\r\\nConnection: keep-alive\\r\\nUserID: 123456\\r\\n\\r\\n'\r\nreply: 'HTTP/1.1 200 OK\\r\\n'\r\nheader: Date: Mon, 17 Feb 2020 10:12:29 GMT\r\nheader: X-Content-Type-Options: nosniff\r\nheader: Content-Security-Policy: sandbox; default-src 'none'; img-src 'self'; style-src 'self';\r\nheader: X-WebKit-CSP: sandbox; default-src 'none'; img-src 'self'; style-src 'self';\r\nheader: X-Content-Security-Policy: sandbox; default-src 'none'; img-src 'self'; style-src 'self';\r\nheader: Last-Modified: Mon, 17 Feb 2020 09:49:05 GMT\r\nheader: Expires: Mon, 17 Feb 2020 09:49:05 GMT\r\nheader: Accept-Ranges: bytes\r\nheader: Content-Type: application/octet-stream\r\nheader: Content-Length: 17681912\r\nheader: Server: Jetty(9.4.z-SNAPSHOT)\r\nheader: Connection: Keep-Alive\r\nheader: Age: 0\r\n[10:11:10.474][urllib3.connectionpool][DEBUG] http://<proxy>:8080 \"GET http://<redirected-url>/<somefile> HTTP/1.1\" 200 17681912\r\nTraceback (most recent call last):\r\n  File \"/home/matt/repos/baas-cli/.venv/lib/python3.7/site-packages/bravado/http_future.py\", line 337, in unmarshal_response\r\n    op=operation,\r\n  File \"/home/matt/repos/baas-cli/.venv/lib/python3.7/site-packages/bravado/http_future.py\", line 370, in unmarshal_response_inner\r\n    response_spec = get_response_spec(status_code=response.status_code, op=op)\r\n  File \"/home/matt/repos/baas-cli/.venv/lib/python3.7/site-packages/bravado_core/response.py\", line 160, in get_response_spec\r\n    \"status_code or use a `default` response.\".format(status_code, op),\r\nbravado_core.exception.MatchingResponseNotFound: Response specification matching http status_code 200 not found for operation Operation(getSecureClient). Either add a response specifi                                        cation for the status_code or use a `default` response.\r\n```\r\n\r\nInitially I wondered if it was worth exposing out redirect configuration to the bravado client, but on reflection I don't think bravado should be doing anything in this area. If the API spec says it returns a 301, bravado should not be doing anything extra that might obscure that. I also wondered that if the responses claim they should return a 30X status then redirects should be implicitly disabled, but that creeps into the territory of being a bit too smart or non-obvious.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/443", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/443/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/443/events", "html_url": "https://github.com/Yelp/bravado/issues/443", "id": 524403043, "node_id": "MDU6SXNzdWU1MjQ0MDMwNDM=", "number": 443, "title": "cannot create SwaggerClient from https URL", "user": {"login": "williehallock802", "id": 55203841, "node_id": "MDQ6VXNlcjU1MjAzODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/55203841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williehallock802", "html_url": "https://github.com/williehallock802", "followers_url": "https://api.github.com/users/williehallock802/followers", "following_url": "https://api.github.com/users/williehallock802/following{/other_user}", "gists_url": "https://api.github.com/users/williehallock802/gists{/gist_id}", "starred_url": "https://api.github.com/users/williehallock802/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williehallock802/subscriptions", "organizations_url": "https://api.github.com/users/williehallock802/orgs", "repos_url": "https://api.github.com/users/williehallock802/repos", "events_url": "https://api.github.com/users/williehallock802/events{/privacy}", "received_events_url": "https://api.github.com/users/williehallock802/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T14:29:05Z", "updated_at": "2019-11-23T22:43:48Z", "closed_at": "2019-11-23T22:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error I am getting is:\r\n\r\n`HTTPSConnectionPool(host='10.10.8.142', port=8088): Max retries exceeded with url: /v2/api-docs (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:847)'),))`\r\n\r\nNow, I assume this is because I need to find a way to pass along the certificate needed to authenticate with the https server, but I am not sure how to do that with Bravado and my google searches haven't turn up anything.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/438", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/438/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/438/events", "html_url": "https://github.com/Yelp/bravado/issues/438", "id": 516964762, "node_id": "MDU6SXNzdWU1MTY5NjQ3NjI=", "number": 438, "title": "Can not pass a parameter whose name is python keyword", "user": {"login": "SimonZgx", "id": 22232328, "node_id": "MDQ6VXNlcjIyMjMyMzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/22232328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonZgx", "html_url": "https://github.com/SimonZgx", "followers_url": "https://api.github.com/users/SimonZgx/followers", "following_url": "https://api.github.com/users/SimonZgx/following{/other_user}", "gists_url": "https://api.github.com/users/SimonZgx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonZgx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonZgx/subscriptions", "organizations_url": "https://api.github.com/users/SimonZgx/orgs", "repos_url": "https://api.github.com/users/SimonZgx/repos", "events_url": "https://api.github.com/users/SimonZgx/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonZgx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-04T05:30:49Z", "updated_at": "2019-11-05T03:47:52Z", "closed_at": "2019-11-05T03:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to use bravado and Swagger to build REST APIs client, there is a problem that I can't pass a parameter whose name is python keyword.\r\n\r\nFor instance, I need a variable named \"from\" that in python is a key word. My code is:\r\n\r\n```js\r\nfrom bravado.client import SwaggerClient\r\n\r\nhost = 'https://api-testnet.bybit.com'\r\nspec_uri = host + \"/doc/swagger.txt\"\r\n...\r\n...\r\nclient = SwaggerClient.from_url(spec_uri, config=config, http_client=request_client)\r\n\r\nclient.Kline.Kline_get(symbol='BTCUSD', interval='1m', from='1572231328')\r\n```\r\n\r\nBecause `from` is a keyword in python, so there is a syntax error.\r\n\r\nSo I have to add this code in the call function to change the variable name\r\n\r\n```js\r\nif \"from_time\" in op_kwargs: op_kwargs[\"from\"]=op_kwargs.pop(\"from_time\")\r\n```\r\n\r\nCan you provide me a batter way to solve the problem? Or fix it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/437", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/437/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/437/events", "html_url": "https://github.com/Yelp/bravado/issues/437", "id": 515541794, "node_id": "MDU6SXNzdWU1MTU1NDE3OTQ=", "number": 437, "title": "How to get server response messages in the event of HTTP error codes?", "user": {"login": "pastet89", "id": 7469057, "node_id": "MDQ6VXNlcjc0NjkwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7469057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pastet89", "html_url": "https://github.com/pastet89", "followers_url": "https://api.github.com/users/pastet89/followers", "following_url": "https://api.github.com/users/pastet89/following{/other_user}", "gists_url": "https://api.github.com/users/pastet89/gists{/gist_id}", "starred_url": "https://api.github.com/users/pastet89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pastet89/subscriptions", "organizations_url": "https://api.github.com/users/pastet89/orgs", "repos_url": "https://api.github.com/users/pastet89/repos", "events_url": "https://api.github.com/users/pastet89/events{/privacy}", "received_events_url": "https://api.github.com/users/pastet89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T15:48:48Z", "updated_at": "2019-10-31T16:09:59Z", "closed_at": "2019-10-31T16:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the request fail with a HTTP error, sometimes the server sends a response code.\r\nHowever, in that case bravado fails with its own exceptions, the program breaks. The server response is included as a string in the bravado exception. \r\nHowever, this is not useful. \r\n\r\nHow can my program get the response message in a JSON/dict format without crashing and do something because of it? Handling exceptions based solely on HTTP code is not sufficient. The same HTTP error code may contain multiple different messages with useful information how to fix the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/434", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/434/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/434/events", "html_url": "https://github.com/Yelp/bravado/issues/434", "id": 507896746, "node_id": "MDU6SXNzdWU1MDc4OTY3NDY=", "number": 434, "title": "[question] Are there any plans for a new release of bravado?", "user": {"login": "andriis", "id": 864061, "node_id": "MDQ6VXNlcjg2NDA2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/864061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andriis", "html_url": "https://github.com/andriis", "followers_url": "https://api.github.com/users/andriis/followers", "following_url": "https://api.github.com/users/andriis/following{/other_user}", "gists_url": "https://api.github.com/users/andriis/gists{/gist_id}", "starred_url": "https://api.github.com/users/andriis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andriis/subscriptions", "organizations_url": "https://api.github.com/users/andriis/orgs", "repos_url": "https://api.github.com/users/andriis/repos", "events_url": "https://api.github.com/users/andriis/events{/privacy}", "received_events_url": "https://api.github.com/users/andriis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T14:39:45Z", "updated_at": "2019-10-16T16:05:30Z", "closed_at": "2019-10-16T16:05:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The last release was done in May 2019. Are there plans to release a new minor version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/424", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/424/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/424/events", "html_url": "https://github.com/Yelp/bravado/issues/424", "id": 455660752, "node_id": "MDU6SXNzdWU0NTU2NjA3NTI=", "number": 424, "title": "Add setup_requires or a requirements.txt to improve pip installs.", "user": {"login": "JoshuaC3", "id": 11645712, "node_id": "MDQ6VXNlcjExNjQ1NzEy", "avatar_url": "https://avatars3.githubusercontent.com/u/11645712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshuaC3", "html_url": "https://github.com/JoshuaC3", "followers_url": "https://api.github.com/users/JoshuaC3/followers", "following_url": "https://api.github.com/users/JoshuaC3/following{/other_user}", "gists_url": "https://api.github.com/users/JoshuaC3/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshuaC3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshuaC3/subscriptions", "organizations_url": "https://api.github.com/users/JoshuaC3/orgs", "repos_url": "https://api.github.com/users/JoshuaC3/repos", "events_url": "https://api.github.com/users/JoshuaC3/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshuaC3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T10:27:22Z", "updated_at": "2019-06-13T12:31:13Z", "closed_at": "2019-06-13T12:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "On occasions, when installing bravado into a directory using pip, the requirements are not installed to the directory. After some searching, I found [this](https://stackoverflow.com/questions/35516059/python-is-not-installing-dependencies-listed-in-install-requires-of-setuptools) which hints a package would benefit from having these listed in the `setup_requires` as well as `install_requires` in the `setup.py` file. This [SO question](https://stackoverflow.com/questions/43658870/requirements-txt-vs-setup-py) highlights that having `setup_requires` is useful when redistributing the package. This is the use case I have; I am trying to use bravado in an AWS Layer to work with AWS Lambda.\r\n\r\nAlternatively, having a `requirements.txt` instead of listing deps in `setup.py` would also address this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/422", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/422/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/422/events", "html_url": "https://github.com/Yelp/bravado/issues/422", "id": 446684049, "node_id": "MDU6SXNzdWU0NDY2ODQwNDk=", "number": 422, "title": "rtypes for SwaggerClient.from_url and SwaggerClient.from_spec", "user": {"login": "aviskase", "id": 3819473, "node_id": "MDQ6VXNlcjM4MTk0NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3819473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviskase", "html_url": "https://github.com/aviskase", "followers_url": "https://api.github.com/users/aviskase/followers", "following_url": "https://api.github.com/users/aviskase/following{/other_user}", "gists_url": "https://api.github.com/users/aviskase/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviskase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviskase/subscriptions", "organizations_url": "https://api.github.com/users/aviskase/orgs", "repos_url": "https://api.github.com/users/aviskase/repos", "events_url": "https://api.github.com/users/aviskase/events{/privacy}", "received_events_url": "https://api.github.com/users/aviskase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-21T15:25:48Z", "updated_at": "2019-05-22T16:22:15Z", "closed_at": "2019-05-22T16:22:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason why `SwaggerClient.from_url` and `SwaggerClient.from_spec` have `Spec` as return type instead of `SwaggerClient` ?\r\n\r\nhttps://github.com/Yelp/bravado/blob/384db8ae6e3950edc7cfeb2ba68c50273ceedcd7/bravado/client.py#L120\r\n\r\nhttps://github.com/Yelp/bravado/blob/384db8ae6e3950edc7cfeb2ba68c50273ceedcd7/bravado/client.py#L91\r\n\r\nIf it's a bug, I can do a pull request, but as I understand with #403 there is a possibility that someone is already working on adding and fixing typing for `client`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/421", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/421/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/421/events", "html_url": "https://github.com/Yelp/bravado/issues/421", "id": 443475977, "node_id": "MDU6SXNzdWU0NDM0NzU5Nzc=", "number": 421, "title": "Example using an authorization bearer token", "user": {"login": "ras44", "id": 9282281, "node_id": "MDQ6VXNlcjkyODIyODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9282281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ras44", "html_url": "https://github.com/ras44", "followers_url": "https://api.github.com/users/ras44/followers", "following_url": "https://api.github.com/users/ras44/following{/other_user}", "gists_url": "https://api.github.com/users/ras44/gists{/gist_id}", "starred_url": "https://api.github.com/users/ras44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ras44/subscriptions", "organizations_url": "https://api.github.com/users/ras44/orgs", "repos_url": "https://api.github.com/users/ras44/repos", "events_url": "https://api.github.com/users/ras44/events{/privacy}", "received_events_url": "https://api.github.com/users/ras44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T15:53:39Z", "updated_at": "2019-05-14T11:16:07Z", "closed_at": "2019-05-14T11:10:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be helpful to see an example using an authentication bearer token similar to the one shown in javascript at https://developers.optimizely.com/x/rest/conventions/#openapi\r\n\r\nI am able to create a simple API interface using `requests` module that authenticates correctly and receives a response from the API.  However, when I attempt to add a bearer token in the requests header when using bravado, it fails with :\r\n\r\n```\r\nbravado.exception.HTTPUnauthorized: 401 Unauthorized: Error(code=u'invalid_credentials', message=u'Missing authorization header',\r\n```\r\n\r\nI believe I am adding the authorization headers, though.\r\n\r\nThe code I'm using to create the client is below.  As shown, I've tried to add an Authorization token :\r\n\r\n- in the `http_client` setup via `set_api_key`\r\n- in the `Swagger.from_url(...)` step by adding `request_headers`.\r\n\r\nHowever both options fail.\r\n\r\n```\r\nfrom bravado.requests_client import RequestsClient\r\nfrom bravado.client import SwaggerClient\r\n\r\nhttp_client = RequestsClient()\r\nhttp_client.set_api_key(\r\n    'https://api.optimizely.com/v2', 'Bearer <TOKEN>',\r\n    param_name='Authorization', param_in='header'\r\n)\r\n\r\nAUTH_TOKEN = '<TOKEN>'\r\n\r\nheaders = {\r\n    'Authorization': 'Bearer {}'.format(AUTH_TOKEN),\r\n}\r\n\r\nclient = SwaggerClient.from_url(\r\n    'https://api.optimizely.com/v2/swagger.json',\r\n    #http_client=http_client,\r\n    #request_headers=headers\r\n)\r\n```\r\n\r\nPlease let me know if it's more appropriate to post this on stackoverflow.  I'd be happy to contribute a PR with the example included once I can get this working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/420", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/420/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/420/events", "html_url": "https://github.com/Yelp/bravado/issues/420", "id": 442691604, "node_id": "MDU6SXNzdWU0NDI2OTE2MDQ=", "number": 420, "title": "final readthedocs quickstart example not producing expected result", "user": {"login": "ras44", "id": 9282281, "node_id": "MDQ6VXNlcjkyODIyODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9282281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ras44", "html_url": "https://github.com/ras44", "followers_url": "https://api.github.com/users/ras44/followers", "following_url": "https://api.github.com/users/ras44/following{/other_user}", "gists_url": "https://api.github.com/users/ras44/gists{/gist_id}", "starred_url": "https://api.github.com/users/ras44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ras44/subscriptions", "organizations_url": "https://api.github.com/users/ras44/orgs", "repos_url": "https://api.github.com/users/ras44/repos", "events_url": "https://api.github.com/users/ras44/events{/privacy}", "received_events_url": "https://api.github.com/users/ras44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T12:21:49Z", "updated_at": "2019-05-10T16:22:42Z", "closed_at": "2019-05-10T16:22:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The final example at:\r\nhttps://bravado.readthedocs.io/en/stable/quickstart.html\r\n\r\nhttps://github.com/Yelp/bravado/blame/master/docs/source/quickstart.rst#L94-L110\r\n\r\ndoes not seem to produce a dict.  `print(type(result))` shows an object of the same class as the first example's result: `<class 'abc.Pet'>` and `print(result)` is:\r\n\r\n['category', 'id', 'name', 'photoUrls', 'status', 'tags']", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/416", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/416/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/416/events", "html_url": "https://github.com/Yelp/bravado/issues/416", "id": 441487729, "node_id": "MDU6SXNzdWU0NDE0ODc3Mjk=", "number": 416, "title": "Not all models get loaded properly", "user": {"login": "OiCMudkips", "id": 4535575, "node_id": "MDQ6VXNlcjQ1MzU1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4535575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OiCMudkips", "html_url": "https://github.com/OiCMudkips", "followers_url": "https://api.github.com/users/OiCMudkips/followers", "following_url": "https://api.github.com/users/OiCMudkips/following{/other_user}", "gists_url": "https://api.github.com/users/OiCMudkips/gists{/gist_id}", "starred_url": "https://api.github.com/users/OiCMudkips/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OiCMudkips/subscriptions", "organizations_url": "https://api.github.com/users/OiCMudkips/orgs", "repos_url": "https://api.github.com/users/OiCMudkips/repos", "events_url": "https://api.github.com/users/OiCMudkips/events{/privacy}", "received_events_url": "https://api.github.com/users/OiCMudkips/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-07T23:31:52Z", "updated_at": "2019-05-10T10:54:41Z", "closed_at": "2019-05-10T10:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Loading [this example spec from OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v2.0/yaml/petstore-expanded.yaml) into bravado doesn't load all of the the models for some reason:\r\n\r\n```\r\nPython 3.7.1 (default, Oct 20 2018, 21:59:34) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from bravado.client import SwaggerClient\r\n>>> client = SwaggerClient.from_url(\"https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/yaml/petstore-expanded.yaml\")\r\n>>> client.get_model(\"Pet\")\r\n<class 'abc.Pet'>\r\n>>> client.get_model(\"Error\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/nail/home/vzhou/pg/fuzz_lightyear/venv/lib/python3.7/site-packages/bravado/client.py\", line 139, in get_model\r\n    return self.swagger_spec.definitions[model_name]\r\nKeyError: 'Error'\r\n>>> client.get_model(\"NewPet\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/nail/home/vzhou/pg/fuzz_lightyear/venv/lib/python3.7/site-packages/bravado/client.py\", line 139, in get_model\r\n    return self.swagger_spec.definitions[model_name]\r\nKeyError: 'NewPet'\r\n```\r\n\r\nHere are my (I think relevant) versions:\r\n```\r\nbravado==10.3.2\r\nbravado-core==5.12.0\r\n```\r\n\r\nThis is reproducible with `(python3.7.1, bravado==10.3.2, bravado-core==5.12.0)` (the REPL environment), `(python3.7.1, bravado==10.4.0, bravado-core==5.12.1)` and `(python3.6.0, bravado==10.4.0, bravado-core==5.12.1)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/409", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/409/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/409/events", "html_url": "https://github.com/Yelp/bravado/issues/409", "id": 413208040, "node_id": "MDU6SXNzdWU0MTMyMDgwNDA=", "number": 409, "title": "is_fallback_result no longer accurate", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-02-22T02:03:08Z", "updated_at": "2019-02-27T15:53:09Z", "closed_at": "2019-02-27T15:53:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`is_fallback_result` always returns `True` as of 10.3.0 due to #403. Specifically the change [here](https://github.com/Yelp/bravado/pull/403/files#diff-dfa77bc847cf31d43435498de902fe9bL146) which makes `exc_info` from an `Optional` to a non-optional `List`.\r\n\r\nI made the following one-liner change, which seems to (at least locally) fix our internal package tests that are failing:\r\n\r\n```diff\r\ndiff --git a/bravado/response.py b/bravado/response.py\r\nindex d023c0d..e34e780 100644\r\n--- a/bravado/response.py\r\n+++ b/bravado/response.py\r\n@@ -102,7 +102,7 @@ class BravadoResponseMetadata(typing.Generic[T]):\r\n     @property\r\n     def is_fallback_result(self):\r\n         # type: () -> bool\r\n-        return self.handled_exception_info is not None\r\n+        return self.handled_exception_info != []\r\n\r\n     @property\r\n     def request_elapsed_time(self):\r\n```\r\n\r\nIt's weird that this didn't get caught by type checking or tests.\r\n\r\nSince it's toward the end of the day here in SF, i'm opening this issue instead of trying to whip up a PR with tests and such.\r\n\r\n@sjaensch or @macisamuele if you decide to take this, let me know. Otherwise i'll tackle this tomorrow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/404", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/404/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/404/events", "html_url": "https://github.com/Yelp/bravado/issues/404", "id": 395912664, "node_id": "MDU6SXNzdWUzOTU5MTI2NjQ=", "number": 404, "title": "Error 400 does not have response", "user": {"login": "lunne", "id": 7102889, "node_id": "MDQ6VXNlcjcxMDI4ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7102889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lunne", "html_url": "https://github.com/lunne", "followers_url": "https://api.github.com/users/lunne/followers", "following_url": "https://api.github.com/users/lunne/following{/other_user}", "gists_url": "https://api.github.com/users/lunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/lunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lunne/subscriptions", "organizations_url": "https://api.github.com/users/lunne/orgs", "repos_url": "https://api.github.com/users/lunne/repos", "events_url": "https://api.github.com/users/lunne/events{/privacy}", "received_events_url": "https://api.github.com/users/lunne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T12:41:12Z", "updated_at": "2019-01-04T14:10:22Z", "closed_at": "2019-01-04T14:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im not getting the reponse from the raised error as expected.\r\ne.response is \"400 BAD REQUEST\"\r\n\r\n```\r\n  try:\r\n      data = self.client.object.postObject(body=kwargs).result()\r\n  except HTTPBadRequest as e:\r\n      # In this case, the raw HTTP response is only available in the exception object\r\n      r = e.response\r\n```\r\n\r\nWhen the api returns a 400 the response body is this but this is not included in the raised error:\r\n{\r\n  \"message\": \"Object xxx already exists. Please change the object number\"\r\n}\r\n\r\nthis is the client config:\r\n```\r\nbravado_config = {\r\n    'validate_swagger_spec': True,\r\n    'validate_requests': False,\r\n    'validate_responses': False,\r\n    'use_models': True,\r\n    'also_return_response': False\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/401", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/401/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/401/events", "html_url": "https://github.com/Yelp/bravado/issues/401", "id": 392619853, "node_id": "MDU6SXNzdWUzOTI2MTk4NTM=", "number": 401, "title": "AttributeError: 'NoneType' object has no attribute 'setdefault' if HTTP_PROXY is set", "user": {"login": "LourensVeen", "id": 17028817, "node_id": "MDQ6VXNlcjE3MDI4ODE3", "avatar_url": "https://avatars1.githubusercontent.com/u/17028817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LourensVeen", "html_url": "https://github.com/LourensVeen", "followers_url": "https://api.github.com/users/LourensVeen/followers", "following_url": "https://api.github.com/users/LourensVeen/following{/other_user}", "gists_url": "https://api.github.com/users/LourensVeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/LourensVeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LourensVeen/subscriptions", "organizations_url": "https://api.github.com/users/LourensVeen/orgs", "repos_url": "https://api.github.com/users/LourensVeen/repos", "events_url": "https://api.github.com/users/LourensVeen/events{/privacy}", "received_events_url": "https://api.github.com/users/LourensVeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-19T14:14:05Z", "updated_at": "2019-01-03T13:30:47Z", "closed_at": "2019-01-03T13:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Okay, this was a nice bit of detective work. I'm calling SwaggerClient.from_url(...), which gives me\r\n```\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/client.py:96: in from_url\r\n    spec_dict = loader.load_spec(spec_url)\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/swagger_model.py:104: in load_spec\r\n    self.request_headers,\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/http_future.py:213: in result\r\n    incoming_response = self._get_incoming_response(timeout)\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/http_future.py:97: in wrapper\r\n    return func(self, *args, **kwargs)\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/http_future.py:228: in _get_incoming_response\r\n    inner_response = self.future.result(timeout=timeout)\r\n../../../virtualenv/python3.6.3/lib/python3.6/site-packages/bravado/requests_client.py:310: in result\r\n    self.misc_options['ssl_cert'],\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = <requests.sessions.Session object at 0x2af3ea842390>\r\nurl = 'http://localhost:29593/swagger.json', proxies = None, stream = None\r\nverify = True, cert = None\r\n    def merge_environment_settings(self, url, proxies, stream, verify, cert):\r\n        \"\"\"\r\n            Check the environment and merge it with some settings.\r\n    \r\n            :rtype: dict\r\n            \"\"\"\r\n        # Gather clues from the surrounding environment.\r\n        if self.trust_env:\r\n            # Set environment's proxies.\r\n            no_proxy = proxies.get('no_proxy') if proxies is not None else None\r\n            env_proxies = get_environ_proxies(url, no_proxy=no_proxy)\r\n            for (k, v) in env_proxies.items():\r\n>               proxies.setdefault(k, v)\r\nE               AttributeError: 'NoneType' object has no attribute 'setdefault'\r\n```\r\nThis seems to be caused by a bug in Bravado. In particular, in requests_client.py on line 305, requests.Session.merge_environment_settings is called with None for the `proxies` (second) parameter, which will work as long as no HTTP_PROXY or similar environment variable is set, but will raise that exception if one is.\r\n\r\nThe Requests maintainers consider the exception to not be a bug in requests (and I agree, although they could document that function better), but the result of passing invalid input for the proxies parameter, which is required to be a dict. See also https://github.com/requests/requests/pull/4636.\r\n\r\nOn the Bravado side, this code was introduced in 59ef48f572655f6c8f57f1d7878561c16c29c509 by @sjaensch. Fixing it should just be a matter of changing None to {} on line 305, but I haven't tested this. I can confirm that downgrading Bravado to 10.1.0 fixes it for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/393", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/393/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/393/events", "html_url": "https://github.com/Yelp/bravado/issues/393", "id": 372469346, "node_id": "MDU6SXNzdWUzNzI0NjkzNDY=", "number": 393, "title": "Direct access to binary content without encoding", "user": {"login": "rubyshamir", "id": 5376214, "node_id": "MDQ6VXNlcjUzNzYyMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5376214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubyshamir", "html_url": "https://github.com/rubyshamir", "followers_url": "https://api.github.com/users/rubyshamir/followers", "following_url": "https://api.github.com/users/rubyshamir/following{/other_user}", "gists_url": "https://api.github.com/users/rubyshamir/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubyshamir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubyshamir/subscriptions", "organizations_url": "https://api.github.com/users/rubyshamir/orgs", "repos_url": "https://api.github.com/users/rubyshamir/repos", "events_url": "https://api.github.com/users/rubyshamir/events{/privacy}", "received_events_url": "https://api.github.com/users/rubyshamir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T10:34:32Z", "updated_at": "2018-10-22T10:41:26Z", "closed_at": "2018-10-22T10:41:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello and thanks for this great software!\r\n\r\nWe have a swagger definition containing a \"GET\" command returning a large file (format: \"application/octet-stream\").\r\n\r\nThe current implementation of response() eventually calls \"unmarshal_response_inner\" in \"http_future.py\". This method does not have a specific handling for binary data and encodes the data to string. \r\n\r\nOn large files, like in our case, this is a very time consuming process (2-3 seconds per 0.5 MB). \r\nWe have locally altered the code to return the binary data in case of \"application/octet-stream\" format and the time was reduced to ~0.1 seconds per 0.5 MB.\r\n\r\nThe altered function is as follows:\r\n\r\n```\r\ndef unmarshal_response_inner(response, op):    \r\n    ...\r\n    # Code we added ##\r\n    if content_type.startswith('application/octet'):\r\n        return response.raw_bytes\r\n\r\n    # TODO: Non-json response contents\r\n    return response.text\r\n```\r\n\r\nWe will be glad to learn if there is another workaround without changing the code.\r\n\r\nThanks in advance,\r\n\r\nRuby\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/389", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/389/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/389/events", "html_url": "https://github.com/Yelp/bravado/issues/389", "id": 363595963, "node_id": "MDU6SXNzdWUzNjM1OTU5NjM=", "number": 389, "title": "set_api_key is not working", "user": {"login": "lunne", "id": 7102889, "node_id": "MDQ6VXNlcjcxMDI4ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7102889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lunne", "html_url": "https://github.com/lunne", "followers_url": "https://api.github.com/users/lunne/followers", "following_url": "https://api.github.com/users/lunne/following{/other_user}", "gists_url": "https://api.github.com/users/lunne/gists{/gist_id}", "starred_url": "https://api.github.com/users/lunne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lunne/subscriptions", "organizations_url": "https://api.github.com/users/lunne/orgs", "repos_url": "https://api.github.com/users/lunne/repos", "events_url": "https://api.github.com/users/lunne/events{/privacy}", "received_events_url": "https://api.github.com/users/lunne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-25T14:04:18Z", "updated_at": "2019-09-26T03:26:44Z", "closed_at": "2018-09-25T19:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n```\r\nhttp_client = RequestsClient()\r\nhttp_client.set_api_key(\r\n    'api.yourhost.com', 'token',\r\n    param_name='api_key', param_in='query'\r\n)\r\nclient = SwaggerClient.from_url(\r\n    'http://petstore.swagger.io/v2/swagger.json',\r\n    http_client=http_client,\r\n)\r\npet = client.pet.getPetById(petId=1).response().result\r\n\r\n```\r\nIt doesn't seems like this adds anything to the request.\r\n![image](https://user-images.githubusercontent.com/7102889/46019286-07bd8880-c0dc-11e8-81ba-f5a343fee703.png)\r\n\r\nThats a dump from the package going from the client. the uri should be &api_key=token ?\r\nI have tried with headers also and its **not** setting that in the requests either.\r\n\r\nso the set_api_key doesn't seem to work.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/388", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/388/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/388/events", "html_url": "https://github.com/Yelp/bravado/issues/388", "id": 353449718, "node_id": "MDU6SXNzdWUzNTM0NDk3MTg=", "number": 388, "title": "Can I get CSV in my response?", "user": {"login": "thejohnfreeman", "id": 1133852, "node_id": "MDQ6VXNlcjExMzM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1133852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thejohnfreeman", "html_url": "https://github.com/thejohnfreeman", "followers_url": "https://api.github.com/users/thejohnfreeman/followers", "following_url": "https://api.github.com/users/thejohnfreeman/following{/other_user}", "gists_url": "https://api.github.com/users/thejohnfreeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/thejohnfreeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thejohnfreeman/subscriptions", "organizations_url": "https://api.github.com/users/thejohnfreeman/orgs", "repos_url": "https://api.github.com/users/thejohnfreeman/repos", "events_url": "https://api.github.com/users/thejohnfreeman/events{/privacy}", "received_events_url": "https://api.github.com/users/thejohnfreeman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T16:03:52Z", "updated_at": "2018-08-23T16:22:28Z", "closed_at": "2018-08-23T16:22:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a service that defines `\"produces\" : [ \"application/json\", \"text/csv\" ]` for a path. I'd like to tell Bravado that I want the response result as CSV. Is that possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/387", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/387/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/387/events", "html_url": "https://github.com/Yelp/bravado/issues/387", "id": 352350076, "node_id": "MDU6SXNzdWUzNTIzNTAwNzY=", "number": 387, "title": "Support for generating enums from swagger file in clientlib", "user": {"login": "AndrewPau", "id": 15070265, "node_id": "MDQ6VXNlcjE1MDcwMjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/15070265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewPau", "html_url": "https://github.com/AndrewPau", "followers_url": "https://api.github.com/users/AndrewPau/followers", "following_url": "https://api.github.com/users/AndrewPau/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewPau/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewPau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewPau/subscriptions", "organizations_url": "https://api.github.com/users/AndrewPau/orgs", "repos_url": "https://api.github.com/users/AndrewPau/repos", "events_url": "https://api.github.com/users/AndrewPau/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewPau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-21T01:15:56Z", "updated_at": "2018-08-23T17:18:05Z", "closed_at": "2018-08-23T17:18:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Enums declared in swagger files currently don't get generated in their corresponding clientlibs. It would be useful for clients to easily and programmatically access all enum values in the clientlib in the form of an array or set, instead of manually looking through the swagger file. This would help clients avoid having to guess enum input values/spelling mistakes and waiting for a failure response for validation, or making multiple queries to see all enum response values.\r\n\r\nIt would be really helpful if this feature could be implemented. Thank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/385", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/385/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/385/events", "html_url": "https://github.com/Yelp/bravado/issues/385", "id": 345544770, "node_id": "MDU6SXNzdWUzNDU1NDQ3NzA=", "number": 385, "title": "ValidationError: do not match any of the regexes:", "user": {"login": "machinekoder", "id": 1467368, "node_id": "MDQ6VXNlcjE0NjczNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1467368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machinekoder", "html_url": "https://github.com/machinekoder", "followers_url": "https://api.github.com/users/machinekoder/followers", "following_url": "https://api.github.com/users/machinekoder/following{/other_user}", "gists_url": "https://api.github.com/users/machinekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/machinekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machinekoder/subscriptions", "organizations_url": "https://api.github.com/users/machinekoder/orgs", "repos_url": "https://api.github.com/users/machinekoder/repos", "events_url": "https://api.github.com/users/machinekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/machinekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-29T16:42:41Z", "updated_at": "2018-07-30T07:27:27Z", "closed_at": "2018-07-30T07:27:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to swaggerize the shoeboxed API I get the following error:\r\n```\r\nswagger_spec_validator.common.SwaggerValidationError: ('\\'apiVersion\\', \\'apis\\', \\'authorizations\\', \\'description\\', \\'models\\', \\'resourcePath\\', \\'swaggerVersion\\' do not match any of the regexes: \\'^x-\\'\\n\\nFailed validating \\'additionalProperties\\' in schema:\r\n```\r\nThe full error message can be found here:\r\nhttps://gist.github.com/machinekoder/7fc53b2cc2235210d317aebc27a6351a\r\n\r\nThe client code is something along the lines of:\r\n```python\r\nclient = SwaggerClient.from_url(\r\n    'https://api.shoeboxed.com/v2/explorer/swagger.json'\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/363", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/363/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/363/events", "html_url": "https://github.com/Yelp/bravado/issues/363", "id": 327063009, "node_id": "MDU6SXNzdWUzMjcwNjMwMDk=", "number": 363, "title": "requests.exception.ReadTimeout import error with 2.0<=requests<2.4", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-28T15:34:34Z", "updated_at": "2018-05-28T15:43:30Z", "closed_at": "2018-05-28T15:43:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Context on https://github.com/Yelp/bravado-core/issues/271\r\nLong story short: bravado uses `requests.exception.ReadTimeout` which was added into requests==2.4.0; the current min required version of `requests` is 2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/350", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/350/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/350/events", "html_url": "https://github.com/Yelp/bravado/issues/350", "id": 292665043, "node_id": "MDU6SXNzdWUyOTI2NjUwNDM=", "number": 350, "title": "Default parameters are not unmarshalled correctly", "user": {"login": "benfiola", "id": 1628263, "node_id": "MDQ6VXNlcjE2MjgyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1628263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benfiola", "html_url": "https://github.com/benfiola", "followers_url": "https://api.github.com/users/benfiola/followers", "following_url": "https://api.github.com/users/benfiola/following{/other_user}", "gists_url": "https://api.github.com/users/benfiola/gists{/gist_id}", "starred_url": "https://api.github.com/users/benfiola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benfiola/subscriptions", "organizations_url": "https://api.github.com/users/benfiola/orgs", "repos_url": "https://api.github.com/users/benfiola/repos", "events_url": "https://api.github.com/users/benfiola/events{/privacy}", "received_events_url": "https://api.github.com/users/benfiola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-30T06:17:04Z", "updated_at": "2018-01-31T06:51:20Z", "closed_at": "2018-01-31T06:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Long story short, I'm trying to use bravado to auto-generate a client around a versioned API.\r\n\r\nLet's say I have these endpoints.\r\n\r\n```\r\n/api/ping?version=1.0.0\r\n/api/ping?version=2.0.0\r\n```\r\n\r\nWhen a user requests a swagger spec, they might ask for something like`/api/swagger/json/2.0.0`, which will give them something like so:\r\n\r\n```\r\n{\r\n  \"basePath\": \"/api\", \r\n  \"definitions\": {}, \r\n  \"info\": {\r\n    \"title\": \"service\", \r\n    \"version\": \"2.0.0\"\r\n  }, \r\n  \"parameters\": {}, \r\n  \"paths\": {\r\n    \"/ping\": {\r\n      \"get\": {\r\n        \"description\": \"Ping 2.0 endpoint\", \r\n        \"parameters\": [\r\n          {\r\n            \"default\": \"2.0.0\", \r\n            \"in\": \"query\", \r\n            \"name\": \"version\", \r\n            \"type\": \"string\"\r\n          }\r\n        ], \r\n        \"responses\": {\r\n          \"200\": {}, \r\n          \"400\": {}, \r\n          \"401\": {}, \r\n          \"404\": {}\r\n        }\r\n      }\r\n    }\r\n  }, \r\n  \"swagger\": \"2.0\", \r\n  \"tags\": []\r\n}\r\n```\r\n\r\nThe goal here is to have the user specify up front that they want to use a specific version of the API and no longer need to provide the version as an argument to every API that they call through bravado.\r\n\r\nHowever, I'm finding the following behavior happening:\r\n\r\nIf the `version` parameter is set to default and the user specifies the version manually when invoking the `Operation`, everything works fine.\r\n\r\nIf the `version`parameter is set to default, and the user doesn't specify the version manually when invoking the `Operation`, the parameter never gets unmarshalled - this is because of the following block of code located in `bravado_core.param.marshal_param:116`:\r\n\r\n```\r\n    # Rely on unmarshalling behavior on the other side of the pipe to use\r\n    # the default value if one is availabe.\r\n    if value is None and not schema.is_required(swagger_spec, param_spec):\r\n        return\r\n```\r\n\r\nIn a last ditch effort to see if I can work around this, I tried specifying that this parameter has both a default value and is required (I'm aware that this is ambiguous in the swagger spec to my understanding), but despite this, setting the parameter to required results in an exception thrown in `bravado.client.construct_params:317` through the following code block:\r\n\r\n```\r\n    # Check required params and non-required params with a 'default' value\r\n    for remaining_param in itervalues(current_params):\r\n        if remaining_param.location == 'header' and remaining_param.name in request['headers']:\r\n            marshal_param(remaining_param, request['headers'][remaining_param.name], request)\r\n        else:\r\n            if remaining_param.required:\r\n                raise SwaggerMappingError(\r\n                    '{0} is a required parameter'.format(remaining_param.name))\r\n            if not remaining_param.required and remaining_param.has_default():\r\n                marshal_param(remaining_param, None, request)\r\n```\r\n\r\nAs I'm seeing it default parameters only get unmarshaled if they're required.  However, setting them to required will trigger an exception (because they don't have a value provided manually by the end user earlier in the code path) - if my understanding of the logic is correct, it looks like default parameters that don't have a manual value appear to never get unmarshaled.  If this is the case, and this isn't what it's supposed to do, I can put up a quick PR to fix this - otherwise, is there any workaround I can use to get this working?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/349", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/349/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/349/events", "html_url": "https://github.com/Yelp/bravado/issues/349", "id": 292286262, "node_id": "MDU6SXNzdWUyOTIyODYyNjI=", "number": 349, "title": "list_models to match get_models, maybe list_resources too", "user": {"login": "bdowling", "id": 4137660, "node_id": "MDQ6VXNlcjQxMzc2NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4137660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdowling", "html_url": "https://github.com/bdowling", "followers_url": "https://api.github.com/users/bdowling/followers", "following_url": "https://api.github.com/users/bdowling/following{/other_user}", "gists_url": "https://api.github.com/users/bdowling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdowling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdowling/subscriptions", "organizations_url": "https://api.github.com/users/bdowling/orgs", "repos_url": "https://api.github.com/users/bdowling/repos", "events_url": "https://api.github.com/users/bdowling/events{/privacy}", "received_events_url": "https://api.github.com/users/bdowling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-29T05:10:49Z", "updated_at": "2018-01-31T10:28:58Z", "closed_at": "2018-01-31T10:28:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Curious if others think it makes sense that there should be a `list_models` to correspond to `get_models` so that an implementation can easily enumerate them.  While you could reach into `client.swagger_spec.definitions`, that feels a little like it is reaching too far with get_models hiding the implementation details.  As I was implementing this I also considered a `list_resources`, but then I realized that `__dir__` was overridden to return the same.  That might still make sense for feel of consistency?\r\n\r\n e.g.:\r\n\r\n```diff\r\n--- a/bravado/client.py\r\n+++ b/bravado/client.py\r\n@@ -133,6 +133,12 @@ class SwaggerClient(object):\r\n     def get_model(self, model_name):\r\n         return self.swagger_spec.definitions[model_name]\r\n\r\n+    def list_models(self):\r\n+        return self.swagger_spec.definitions.keys()\r\n+\r\n+    def list_resources(self):\r\n+        return self.swagger_spec.resources.keys()\r\n+\r\n     def _get_resource(self, item):\r\n         \"\"\"\r\n         :param item: name of the resource to return\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/339", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/339/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/339/events", "html_url": "https://github.com/Yelp/bravado/issues/339", "id": 282971569, "node_id": "MDU6SXNzdWUyODI5NzE1Njk=", "number": 339, "title": "umsgpack is not a dependency", "user": {"login": "jessemyers", "id": 477722, "node_id": "MDQ6VXNlcjQ3NzcyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/477722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessemyers", "html_url": "https://github.com/jessemyers", "followers_url": "https://api.github.com/users/jessemyers/followers", "following_url": "https://api.github.com/users/jessemyers/following{/other_user}", "gists_url": "https://api.github.com/users/jessemyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessemyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessemyers/subscriptions", "organizations_url": "https://api.github.com/users/jessemyers/orgs", "repos_url": "https://api.github.com/users/jessemyers/repos", "events_url": "https://api.github.com/users/jessemyers/events{/privacy}", "received_events_url": "https://api.github.com/users/jessemyers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-18T18:07:57Z", "updated_at": "2017-12-18T20:14:26Z", "closed_at": "2017-12-18T20:14:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nonetheless, it is imported in `bravado/http_future.py`\r\n\r\n```\r\n>>> import bravado.http_future\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/jessemyers/code/opensource/bravado/bravado/http_future.py\", line 6, in <module>\r\n    import umsgpack\r\nModuleNotFoundError: No module named 'umsgpack'\r\n```\r\n\r\nThis is breaking.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/338", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/338/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/338/events", "html_url": "https://github.com/Yelp/bravado/issues/338", "id": 281707001, "node_id": "MDU6SXNzdWUyODE3MDcwMDE=", "number": 338, "title": "Bravado only see first part of the path as a \"Resource\"", "user": {"login": "vavdagic", "id": 11805427, "node_id": "MDQ6VXNlcjExODA1NDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/11805427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vavdagic", "html_url": "https://github.com/vavdagic", "followers_url": "https://api.github.com/users/vavdagic/followers", "following_url": "https://api.github.com/users/vavdagic/following{/other_user}", "gists_url": "https://api.github.com/users/vavdagic/gists{/gist_id}", "starred_url": "https://api.github.com/users/vavdagic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vavdagic/subscriptions", "organizations_url": "https://api.github.com/users/vavdagic/orgs", "repos_url": "https://api.github.com/users/vavdagic/repos", "events_url": "https://api.github.com/users/vavdagic/events{/privacy}", "received_events_url": "https://api.github.com/users/vavdagic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-13T10:59:05Z", "updated_at": "2017-12-13T11:28:51Z", "closed_at": "2017-12-13T11:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Part of my .yaml tree shown bellow\r\n```yaml\r\nbasePath: /wp-json\r\nschemes:\r\n  - http\r\nconsumes:\r\n  - multipart/form-data\r\nproduces:\r\n  - application/json\r\npaths:\r\n  /wp/v2/posts:\r\n    get:\r\n      parameters:\r\n        - name: context\r\n          type: string\r\n```\r\nWhy does SwaggerClient only sees \"wp\" as a Resource? How can i, for instance, get posts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/335", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/335/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/335/events", "html_url": "https://github.com/Yelp/bravado/issues/335", "id": 279580550, "node_id": "MDU6SXNzdWUyNzk1ODA1NTA=", "number": 335, "title": "Add a _compress_response option for operation calls", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T00:27:09Z", "updated_at": "2017-12-06T01:55:52Z", "closed_at": "2017-12-06T01:55:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When https://github.com/Yelp/bravado-core/issues/231 is merged to bravado-core, bravado should have an easy way to initiate requests for compressed responses.\r\nSpecifically, users should be able to add a _compress_response=True flag, which would then cause an `Accept-Encoding: deflate` header to be automatically included in the request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/333", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/333/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/333/events", "html_url": "https://github.com/Yelp/bravado/issues/333", "id": 278325168, "node_id": "MDU6SXNzdWUyNzgzMjUxNjg=", "number": 333, "title": "Add a _use_msgpack option", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-01T01:10:05Z", "updated_at": "2017-12-11T19:19:17Z", "closed_at": "2017-12-11T19:19:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/Yelp/bravado-core/pull/216 added support for msgpack, but to use it with bravado the following is required\r\n\r\n```\r\nresult = swagger_client.tag.operation(\r\n    body=your_body,\r\n    _request_options={\"headers\": {\r\n        \"Accept\": \"application/msgpack\"\r\n    }},\r\n).result()\r\n```\r\n\r\ninstead, the header adding should happen behind the scenes, and there would be a simple flag that a user would enable to add it instead, so it would look something like\r\n\r\n```\r\nresult = swagger_client.tag.operation(\r\n    body=your_body,\r\n    _use_msgpack=True,\r\n).result()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/332", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/332/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/332/events", "html_url": "https://github.com/Yelp/bravado/issues/332", "id": 276173821, "node_id": "MDU6SXNzdWUyNzYxNzM4MjE=", "number": 332, "title": "bravado_core should use the msgpack module instead of umsgpack", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T18:58:21Z", "updated_at": "2017-11-22T18:58:27Z", "closed_at": "2017-11-22T18:58:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that the umsgpack module, implemented in pure python, is an order of magnitude slower than the msgpack module, written with CPython bindings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/327", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/327/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/327/events", "html_url": "https://github.com/Yelp/bravado/issues/327", "id": 271615920, "node_id": "MDU6SXNzdWUyNzE2MTU5MjA=", "number": 327, "title": "Can't parse spec file from Jupyter", "user": {"login": "mikepurvis", "id": 944666, "node_id": "MDQ6VXNlcjk0NDY2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/944666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikepurvis", "html_url": "https://github.com/mikepurvis", "followers_url": "https://api.github.com/users/mikepurvis/followers", "following_url": "https://api.github.com/users/mikepurvis/following{/other_user}", "gists_url": "https://api.github.com/users/mikepurvis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikepurvis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikepurvis/subscriptions", "organizations_url": "https://api.github.com/users/mikepurvis/orgs", "repos_url": "https://api.github.com/users/mikepurvis/repos", "events_url": "https://api.github.com/users/mikepurvis/events{/privacy}", "received_events_url": "https://api.github.com/users/mikepurvis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-06T20:51:17Z", "updated_at": "2017-11-07T04:43:39Z", "closed_at": "2017-11-06T22:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The errors are opaque enough that I don't really know where to begin, but neither `from_url` or `from_spec` was able to do the right thing. See https://github.com/jupyter/jupyter/issues/297.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/326", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/326/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/326/events", "html_url": "https://github.com/Yelp/bravado/issues/326", "id": 271272830, "node_id": "MDU6SXNzdWUyNzEyNzI4MzA=", "number": 326, "title": "KeyError: 'also_return_response' exception with bravado-core 4.10.0", "user": {"login": "elmirjagudin", "id": 3404641, "node_id": "MDQ6VXNlcjM0MDQ2NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3404641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elmirjagudin", "html_url": "https://github.com/elmirjagudin", "followers_url": "https://api.github.com/users/elmirjagudin/followers", "following_url": "https://api.github.com/users/elmirjagudin/following{/other_user}", "gists_url": "https://api.github.com/users/elmirjagudin/gists{/gist_id}", "starred_url": "https://api.github.com/users/elmirjagudin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elmirjagudin/subscriptions", "organizations_url": "https://api.github.com/users/elmirjagudin/orgs", "repos_url": "https://api.github.com/users/elmirjagudin/repos", "events_url": "https://api.github.com/users/elmirjagudin/events{/privacy}", "received_events_url": "https://api.github.com/users/elmirjagudin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2017-11-05T12:29:05Z", "updated_at": "2017-11-06T08:46:30Z", "closed_at": "2017-11-06T08:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The hello word example from documentation fails with KeyError: 'also_return_response'\r\nexception. This is with bravado 9.1.1 and bravado-core 4.10.0 packages installed.\r\n\r\n```\r\n>>> from bravado.client import SwaggerClient\r\n>>> client = SwaggerClient.from_url('http://petstore.swagger.io/v2/swagger.json')\r\n<....>/lib/python3.5/site-packages/bravado_core/spec.py:144: Warning: config also_return_response is been removed because is not a recognized config key\r\n  category=Warning,\r\n>>> pet = client.pet.getPetById(petId=42).result()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<....>/lib/python3.5/site-packages/bravado/client.py\", line 261, in __call__\r\n    config['also_return_response'])\r\nKeyError: 'also_return_response'\r\n```\r\n\r\nA work-around is to downgrade bravado-core to 4.9.1, then at least hello world example works.\r\n\r\nI'm guessing this is related to this change in bravado-core:\r\nhttps://github.com/Yelp/bravado-core/commit/aecd9122f5301973f0114ca3f101657ce6b9e046\r\n\r\nAlso these Issue and PR seems related:\r\nhttps://github.com/Yelp/bravado-core/issues/217\r\nhttps://github.com/Yelp/bravado-core/pull/218", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/323", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/323/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/323/events", "html_url": "https://github.com/Yelp/bravado/issues/323", "id": 271109248, "node_id": "MDU6SXNzdWUyNzExMDkyNDg=", "number": 323, "title": "Add raw_bytes attribute to RequestClient and FidoClient", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-03T20:27:37Z", "updated_at": "2017-11-08T16:52:54Z", "closed_at": "2017-11-08T16:52:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Once https://github.com/Yelp/bravado-core/issues/214 is completed, all classes using the `IncomingResponse` will be required to have a new attribute, `raw_bytes` defined. Responses in RequestClient and FidoClient will need to but updated for this change", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/315", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/315/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/315/events", "html_url": "https://github.com/Yelp/bravado/issues/315", "id": 257554921, "node_id": "MDU6SXNzdWUyNTc1NTQ5MjE=", "number": 315, "title": "tcp_nodelay for FidoClient", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-13T23:54:11Z", "updated_at": "2017-10-09T11:00:54Z", "closed_at": "2017-10-09T11:00:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Fido now [supports](https://github.com/Yelp/fido/blob/master/fido/fido.py#L299) tcp_nodelay as a fetch argument. We should support it here: https://github.com/Yelp/bravado/blob/215e1a15e107ee034622d88612637fd31e53233e/bravado/fido_client.py#L156", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/313", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/313/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/313/events", "html_url": "https://github.com/Yelp/bravado/issues/313", "id": 257062597, "node_id": "MDU6SXNzdWUyNTcwNjI1OTc=", "number": 313, "title": "Validating responses even with validate_responses = False?", "user": {"login": "lcofre", "id": 1630156, "node_id": "MDQ6VXNlcjE2MzAxNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1630156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcofre", "html_url": "https://github.com/lcofre", "followers_url": "https://api.github.com/users/lcofre/followers", "following_url": "https://api.github.com/users/lcofre/following{/other_user}", "gists_url": "https://api.github.com/users/lcofre/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcofre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcofre/subscriptions", "organizations_url": "https://api.github.com/users/lcofre/orgs", "repos_url": "https://api.github.com/users/lcofre/repos", "events_url": "https://api.github.com/users/lcofre/events{/privacy}", "received_events_url": "https://api.github.com/users/lcofre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-12T14:25:04Z", "updated_at": "2017-09-13T07:08:05Z", "closed_at": "2017-09-13T07:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI am testing the cases where my api should return an error response code, so I send a request that will fail. I configured bravado to not validate the responses:\r\n```\r\napi = SwaggerClient.from_url('path/to/swagger.yaml', config=config = {'also_return_response': True, 'validate_responses': False, 'use_models': False})\r\n```\r\n\r\nBut anyway I receive the error:\r\n```\r\nhttp_response = <bravado.requests_client.RequestsResponseAdapter object at 0x7fbf9bac9cf8>\r\n\r\n    def raise_on_expected(http_response):\r\n        \"\"\"Raise an HTTPError if the response is non-2XX and matches a response\r\n        in the swagger spec.\r\n    \r\n        :param http_response: :class:`bravado_core.response.IncomingResponse`\r\n        :raises: HTTPError\r\n        \"\"\"\r\n        if not 200 <= http_response.status_code < 300:\r\n            raise make_http_exception(\r\n                response=http_response,\r\n>               swagger_result=http_response.swagger_result)\r\nE           bravado.exception.HTTPBadRequest: 400 Bad Request: {'message': 'Error message'}\r\n\r\nenv3.5/lib/python3.5/site-packages/bravado/http_future.py:154: HTTPBadRequest\r\n```\r\n\r\nThanks for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/312", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/312/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/312/events", "html_url": "https://github.com/Yelp/bravado/issues/312", "id": 256985235, "node_id": "MDU6SXNzdWUyNTY5ODUyMzU=", "number": 312, "title": "How to inspect a request before is sent?", "user": {"login": "lcofre", "id": 1630156, "node_id": "MDQ6VXNlcjE2MzAxNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1630156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcofre", "html_url": "https://github.com/lcofre", "followers_url": "https://api.github.com/users/lcofre/followers", "following_url": "https://api.github.com/users/lcofre/following{/other_user}", "gists_url": "https://api.github.com/users/lcofre/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcofre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcofre/subscriptions", "organizations_url": "https://api.github.com/users/lcofre/orgs", "repos_url": "https://api.github.com/users/lcofre/repos", "events_url": "https://api.github.com/users/lcofre/events{/privacy}", "received_events_url": "https://api.github.com/users/lcofre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T09:56:05Z", "updated_at": "2017-09-12T17:46:46Z", "closed_at": "2017-09-12T10:01:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nWhile executing a request I am getting a 401 response from my api when I am expecting a 200, so I was wondering if it's possible to see how the request was built before it was sent.\r\n\r\nThe request I am testing has a parameter in the path, another in the body, and the authentication as a query param. Something like this (though the definition is not complete):\r\n\r\n```\r\n  /resources/{id}:\r\n    patch:\r\n      summary: Changes properties on the resource\r\n      tags:\r\n        - resource\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: resource id\r\n          required: true\r\n          type: string\r\n        - name: resourceProperties\r\n          in: body\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/ResourceProperties'\r\n      security:\r\n        - Token: []\r\n      responses:\r\n        200:\r\n          $ref: '#/responses/Successful'\r\n        400:\r\n          $ref: '#/responses/Error'\r\n        401:\r\n          $ref: '#/responses/UnknownUser'\r\ndefinitions:\r\n  ResourceProperties:\r\n    type: object\r\n    properties:\r\n      property1:\r\n        type: boolean\r\n        description:  The property to change\r\nsecurityDefinitions:\r\n  Token:\r\n   type: apiKey\r\n   in: query\r\n   name: token\r\n```\r\n\r\nAnd I call the api like this\r\n```\r\napi = SwaggerClient.from_url('path/to/swagger/definition.yaml', config={'use_models': False, 'also_return_response': True})\r\n\r\nmsg, r = api.resource.patch_resources_id(id='...', resourceProperties={'property1': True}, token='...').result()\r\n```\r\n\r\nThanks very much for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/311", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/311/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/311/events", "html_url": "https://github.com/Yelp/bravado/issues/311", "id": 252938523, "node_id": "MDU6SXNzdWUyNTI5Mzg1MjM=", "number": 311, "title": "Implement environment merge capability for requests sessions", "user": {"login": "PascalVA", "id": 24897834, "node_id": "MDQ6VXNlcjI0ODk3ODM0", "avatar_url": "https://avatars2.githubusercontent.com/u/24897834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PascalVA", "html_url": "https://github.com/PascalVA", "followers_url": "https://api.github.com/users/PascalVA/followers", "following_url": "https://api.github.com/users/PascalVA/following{/other_user}", "gists_url": "https://api.github.com/users/PascalVA/gists{/gist_id}", "starred_url": "https://api.github.com/users/PascalVA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PascalVA/subscriptions", "organizations_url": "https://api.github.com/users/PascalVA/orgs", "repos_url": "https://api.github.com/users/PascalVA/repos", "events_url": "https://api.github.com/users/PascalVA/events{/privacy}", "received_events_url": "https://api.github.com/users/PascalVA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-08-25T15:33:45Z", "updated_at": "2018-10-19T09:31:19Z", "closed_at": "2018-10-19T09:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bravado requests throws an SSL: CERTIFICATE_VERIFY_FAILED error while requests is working.\r\nI have tested this with bravado 9.0.0 and 9.1.0.\r\n> bravado (9.1.0)                                                                                                                                                                               \r\n> bravado-core (4.8.0)\r\n> requests (2.18.4)\r\n\r\n   * I have added the certificate in question to the Debian ca-certificates and it is also working in curl\r\n   * I have exported the REQUESTS_CA_BUNDLE environment variable (this fixed it for using requests, but not for bravado)\r\n\r\nI don't know if it could be relevant, but the kubernetes certificate validates multiple names.\r\n(kubernetes, kubernetes.default, kubernetes.default.svc,...)\r\n\r\n## Expected Result\r\nAnd \"Unauthorized\" HTTP response from the kubernetes API.\r\n\r\n## Actual Result\r\nBravado throws a requests exception:\r\n> Traceback (most recent call last):\r\n>   File \"<stdin>\", line 1, in <module>\r\n>   File \"py/vendor/openapi/client.py\", line 46, in clientCallableOperationCallHook\r\n>     return httpFuture.result() # HACK automatically call .result()\r\n>   File \"/usr/local/lib/python2.7/site-packages/bravado/http_future.py\", line 71, in result\r\n>     inner_response = self.future.result(timeout=timeout)\r\n>   File \"/usr/local/lib/python2.7/site-packages/bravado/requests_client.py\", line 289, in result\r\n>     timeout=self.build_timeout(timeout),\r\n>   File \"/usr/local/lib/python2.7/site-packages/requests/sessions.py\", line 612, in send\r\n>     r = adapter.send(request, **kwargs)\r\n>   File \"/usr/local/lib/python2.7/site-packages/requests/adapters.py\", line 504, in send\r\n>     raise ConnectionError(e, request=request)\r\n> requests.exceptions.ConnectionError: HTTPSConnectionPool(host='kubernetes.default.svc', port=443): Max retries exceeded with url: /api/v1/namespaces/namespace/services/name (Caused by SSLError(SSLError(1, u'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:661)'),))\r\n\r\n\r\n## Reproduction Steps\r\nThe following excerpts were all ran in the same interactive python session\r\n```python\r\nimport requests\r\nrequests.get(\"https://kubernetes.default.svc\")\r\n<Response [401]>\r\nrequests.get(\"https://kubernetes.default.svc\").text\r\nu'Unauthorized\\n' \r\n\r\nimport os; import bravado_client; import yaml\r\nwith open('py/vendor/kubernetes/kubernetes.openapi.json', 'r') as f:\r\n  specification = yaml.load(f.read())\r\n\r\nconfig = {'validate_swagger_spec': False, 'use_models': False, 'validate_requests': False, 'validate_responses': False}\r\nhttpClient = bravado.requests_client.RequestsClient()\r\nopenapiClient = bravado.client.SwaggerClient.from_spec(specification, config=config, http_client=httpClient, origin_url=os.environ.get('KUBERNETES_URL'))\r\nresult = openapiClient.core_v1.readCoreV1NamespacedService(name=\"name\", namespace=\"namespace\").result()\r\nTraceback (most recent call last):   \r\n  File \"<stdin>\", line 1, in <module>                                      \r\n  File \"/usr/local/lib/python2.7/site-packages/bravado/http_future.py\", line 71, in result                                                            \r\n    inner_response = self.future.result(timeout=timeout)                   \r\n  File \"/usr/local/lib/python2.7/site-packages/bravado/requests_client.py\", line 289, in result                                                       \r\n    timeout=self.build_timeout(timeout),                                   \r\n  File \"/usr/local/lib/python2.7/site-packages/requests/sessions.py\", line 612, in send                                                               \r\n    r = adapter.send(request, **kwargs)                                    \r\n  File \"/usr/local/lib/python2.7/site-packages/requests/adapters.py\", line 504, in send                                                               \r\n    raise ConnectionError(e, request=request)                              \r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='kubernetes.default.svc', port=443): Max retries exceeded with url: /api/v1/namespaces/namespace/services/name (Caused by SSLError(SSLError(1, u'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:661)'),))                 \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/307", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/307/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/307/events", "html_url": "https://github.com/Yelp/bravado/issues/307", "id": 246891156, "node_id": "MDU6SXNzdWUyNDY4OTExNTY=", "number": 307, "title": "Resources created when tags have spaces are inaccessible", "user": {"login": "ritwik", "id": 683227, "node_id": "MDQ6VXNlcjY4MzIyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/683227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritwik", "html_url": "https://github.com/ritwik", "followers_url": "https://api.github.com/users/ritwik/followers", "following_url": "https://api.github.com/users/ritwik/following{/other_user}", "gists_url": "https://api.github.com/users/ritwik/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritwik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritwik/subscriptions", "organizations_url": "https://api.github.com/users/ritwik/orgs", "repos_url": "https://api.github.com/users/ritwik/repos", "events_url": "https://api.github.com/users/ritwik/events{/privacy}", "received_events_url": "https://api.github.com/users/ritwik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-31T21:33:36Z", "updated_at": "2017-10-12T09:32:25Z", "closed_at": "2017-10-12T09:32:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is a mix of Bravado / Bravado core so I'm filing here but happy to move to Bravado core if that is more appropriate.\r\n\r\n# Summary:\r\nWhen a resource has tags which have spaces, e.g \"contact activites\", its operations become inaccessible in the generated swagger client, because they must be accessed with the space (which isn't possible in python).\r\n\r\n# Background:\r\nWe use bravado to create a client for this swagger spec: http://api.cordial.io/docs/v1/api-docs.php\r\nIn that spec, there are some resources with two word names (e.g `contactactivities`, `messagetransports`). In that spec, the tags for these have spaces in them (`contact activities`, `message transports`). See snippets below:\r\n\r\n```json\r\n\"/v1/contactactivities\":{\r\n            \"get\":{\r\n                \"summary\": \"Get Activity list\",\r\n                \"operationId\": \"getActivityList\",\r\n                \"tags\":[\r\n                    \"contact activities\"\r\n                ],\r\n  ...\r\n```\r\n\r\n```json\r\n\"/v1/messagetransports/{id}\":{\r\n            \"get\": {\r\n                \"summary\": \"Get a transport's properties\",\r\n                \"operationId\": \"getsingletransport\",\r\n                \"tags\":[\r\n                    \"message transports\"\r\n                ],\r\n  ...\r\n```\r\n\r\nWhen we build a swagger client from this spec using bravado, we can't access those resouces:\r\n```python\r\nclient = SwaggerClient.from_spec(\r\n    CORDIAL_SPEC,\r\n    http_client=http_client,\r\n)\r\nclient.contactactivities.getActivityList() # Raises exception.\r\nclient.contact_activities.getActivityList() # Raises exception.\r\n\r\n# Example exception (with some noise removed):\r\n# ...\r\n# File \"../sales/coupons.py\", line 256, in _send_to_cordial\r\n#    client.contactactivities.addActivity(a=\"gotCoupon\", email=email,\r\n#  File \"../lib/thirdparty/bravado/client.py\", line 161, in __getattr__\r\n#    .format(item, ', '.join(dir(self))))\r\n# AttributeError: Resource contactactivities not found. Available resources: account attributes, account lists, automation templates, batch messages, contact activities, contact exports, contact imports, contacts, jobs, message content includes, message transports, orders, productimports, products, supplements\r\n```\r\n\r\nThe exceptions happen because (from what I understand so far):\r\n- `client.<anything>` works by overriding `__getattr__(self, attr)` to look up `attr` inside the resources dictionary\r\n- bravado_core builds the resources dictionary from the tags if they exist. This means that for this spec, the dictionary has: `contact activities` and `message transports` as keys. \r\n- There's no way to access those without manually calling `__getattr__`. e.g It works if I do: `client.__getattr__(\"contact activities\")`, but it seems wrong to directly access that as a user of the client.\r\n\r\nUnfortunately I don't control the spec, so we can't just add more tags that are accessible.\r\n\r\n# Suggestions\r\n- Could the bravado_core create _'d versions of tags with spaces? That way you would have both `contact activities` and the accessible `contact_activities` in the resources dict. \r\n- Could the swagger client implement `__getitem__` so that `client[\"contact activities\"]` works? This feels less semantically correct but is a workaround rather than directly calling the private function.\r\n- Could bravado_core create resources for the tags and also the path its on (which I imagine is the behaviour when there's no tags). That way `.contactactivities` would work too.\r\n\r\nI'm no expert on Swagger (this is my first API using it that I'm connecting to), so I'm unclear whether the tags property is meant to be used for creating the client resources. If it is, I can ask the spec authors to add more tags. But if not, they aren't obliged to tag things in a way my client will handle. Ideally bravado creates clients that match the API endpoints whether there are tags or not? \r\n\r\nIf this is missing information that would be useful, happy to add more. Also, I'm happy to create a PR with what I think would help, but just want to make sure (as a first time contributor) that the general suggestion is reasonable (and perhaps, which one would be preferred).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/298", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/298/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/298/events", "html_url": "https://github.com/Yelp/bravado/issues/298", "id": 238918556, "node_id": "MDU6SXNzdWUyMzg5MTg1NTY=", "number": 298, "title": "cannot test against foreign URL target once imported URL spec", "user": {"login": "openfly", "id": 645837, "node_id": "MDQ6VXNlcjY0NTgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/645837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/openfly", "html_url": "https://github.com/openfly", "followers_url": "https://api.github.com/users/openfly/followers", "following_url": "https://api.github.com/users/openfly/following{/other_user}", "gists_url": "https://api.github.com/users/openfly/gists{/gist_id}", "starred_url": "https://api.github.com/users/openfly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/openfly/subscriptions", "organizations_url": "https://api.github.com/users/openfly/orgs", "repos_url": "https://api.github.com/users/openfly/repos", "events_url": "https://api.github.com/users/openfly/events{/privacy}", "received_events_url": "https://api.github.com/users/openfly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-27T17:00:58Z", "updated_at": "2017-06-27T19:10:45Z", "closed_at": "2017-06-27T19:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```   \r\n    url = operation.swagger_spec.api_url.rstrip('/') + operation.path_name\r\n    request = {\r\n        'method': str(operation.http_method.upper()),\r\n        'url': url,\r\n        'params': {},  # filled in downstream\r\n        'headers': request_options.get('headers', {}),\r\n    }\r\n```\r\n\r\nbasically it might be wise to setup the logic to check for a request_options.get('url', {}) style query.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/293", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/293/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/293/events", "html_url": "https://github.com/Yelp/bravado/issues/293", "id": 237666774, "node_id": "MDU6SXNzdWUyMzc2NjY3NzQ=", "number": 293, "title": "QUESTION:  ", "user": {"login": "mikepietsch11", "id": 22895146, "node_id": "MDQ6VXNlcjIyODk1MTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/22895146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikepietsch11", "html_url": "https://github.com/mikepietsch11", "followers_url": "https://api.github.com/users/mikepietsch11/followers", "following_url": "https://api.github.com/users/mikepietsch11/following{/other_user}", "gists_url": "https://api.github.com/users/mikepietsch11/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikepietsch11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikepietsch11/subscriptions", "organizations_url": "https://api.github.com/users/mikepietsch11/orgs", "repos_url": "https://api.github.com/users/mikepietsch11/repos", "events_url": "https://api.github.com/users/mikepietsch11/events{/privacy}", "received_events_url": "https://api.github.com/users/mikepietsch11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-21T21:15:07Z", "updated_at": "2017-10-23T22:04:46Z", "closed_at": "2017-06-22T20:19:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would one work with ResourceDecorators that contain a dash?  \r\n\r\nI can create a client from_url and when debugging can see:\r\n\r\nclient\r\n  resource-one\r\n      operationone\r\n      operationtwo\r\n  resource-two\r\n  \r\nbut when I try to actually write python code to use the client object like:\r\n     print(client.resource-one) \r\n\r\nI get AttributeErrors\r\n\r\nAttributeError: Resource resources not found. Available resources: resource-one, resource-two\r\n\r\nI am guessing this has to do with the fact that - is not valid in variable/function naming.\r\n\r\nAny suggestions?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/285", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/285/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/285/events", "html_url": "https://github.com/Yelp/bravado/issues/285", "id": 232396205, "node_id": "MDU6SXNzdWUyMzIzOTYyMDU=", "number": 285, "title": "Read the docs module index broken", "user": {"login": "colton-leadpages", "id": 27742714, "node_id": "MDQ6VXNlcjI3NzQyNzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/27742714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colton-leadpages", "html_url": "https://github.com/colton-leadpages", "followers_url": "https://api.github.com/users/colton-leadpages/followers", "following_url": "https://api.github.com/users/colton-leadpages/following{/other_user}", "gists_url": "https://api.github.com/users/colton-leadpages/gists{/gist_id}", "starred_url": "https://api.github.com/users/colton-leadpages/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colton-leadpages/subscriptions", "organizations_url": "https://api.github.com/users/colton-leadpages/orgs", "repos_url": "https://api.github.com/users/colton-leadpages/repos", "events_url": "https://api.github.com/users/colton-leadpages/events{/privacy}", "received_events_url": "https://api.github.com/users/colton-leadpages/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-30T22:06:40Z", "updated_at": "2019-11-15T15:13:55Z", "closed_at": "2019-11-15T15:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, the link to the module index in RTD is broken:\r\n\r\nhttp://bravado.readthedocs.io/en/latest/py-modindex.html\r\n\r\nThis is linked to from the docs root:\r\n\r\nhttp://bravado.readthedocs.io/en/latest/index.html\r\n\r\nHow can I view the API docs for Bravado?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/283", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/283/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/283/events", "html_url": "https://github.com/Yelp/bravado/issues/283", "id": 222985509, "node_id": "MDU6SXNzdWUyMjI5ODU1MDk=", "number": 283, "title": "additionalProperties is not False by default", "user": {"login": "Amedeo91", "id": 8645312, "node_id": "MDQ6VXNlcjg2NDUzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8645312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amedeo91", "html_url": "https://github.com/Amedeo91", "followers_url": "https://api.github.com/users/Amedeo91/followers", "following_url": "https://api.github.com/users/Amedeo91/following{/other_user}", "gists_url": "https://api.github.com/users/Amedeo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amedeo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amedeo91/subscriptions", "organizations_url": "https://api.github.com/users/Amedeo91/orgs", "repos_url": "https://api.github.com/users/Amedeo91/repos", "events_url": "https://api.github.com/users/Amedeo91/events{/privacy}", "received_events_url": "https://api.github.com/users/Amedeo91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-20T08:18:57Z", "updated_at": "2017-04-20T14:40:59Z", "closed_at": "2017-04-20T13:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possbile to have additionalProperties False by default without having to manually setted it?\r\n\r\nRegards\r\nAmedeo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/281", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/281/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/281/events", "html_url": "https://github.com/Yelp/bravado/issues/281", "id": 221260192, "node_id": "MDU6SXNzdWUyMjEyNjAxOTI=", "number": 281, "title": "pattern with regex", "user": {"login": "Amedeo91", "id": 8645312, "node_id": "MDQ6VXNlcjg2NDUzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8645312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amedeo91", "html_url": "https://github.com/Amedeo91", "followers_url": "https://api.github.com/users/Amedeo91/followers", "following_url": "https://api.github.com/users/Amedeo91/following{/other_user}", "gists_url": "https://api.github.com/users/Amedeo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amedeo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amedeo91/subscriptions", "organizations_url": "https://api.github.com/users/Amedeo91/orgs", "repos_url": "https://api.github.com/users/Amedeo91/repos", "events_url": "https://api.github.com/users/Amedeo91/events{/privacy}", "received_events_url": "https://api.github.com/users/Amedeo91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-12T13:21:39Z", "updated_at": "2017-04-19T15:52:15Z", "closed_at": "2017-04-19T15:52:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to add pattern in the pattern swagger file to validate the format of my input, but I saw that the regex has not been evaluated.\r\n\r\nWhat do you think about providing such functionality?\r\n\r\nRegards,\r\nAmedeo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/279", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/279/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/279/events", "html_url": "https://github.com/Yelp/bravado/issues/279", "id": 218512148, "node_id": "MDU6SXNzdWUyMTg1MTIxNDg=", "number": 279, "title": "SwaggerValidationError: discriminator (type) must be defined in properties", "user": {"login": "drmikecrowe", "id": 90312, "node_id": "MDQ6VXNlcjkwMzEy", "avatar_url": "https://avatars1.githubusercontent.com/u/90312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmikecrowe", "html_url": "https://github.com/drmikecrowe", "followers_url": "https://api.github.com/users/drmikecrowe/followers", "following_url": "https://api.github.com/users/drmikecrowe/following{/other_user}", "gists_url": "https://api.github.com/users/drmikecrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmikecrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmikecrowe/subscriptions", "organizations_url": "https://api.github.com/users/drmikecrowe/orgs", "repos_url": "https://api.github.com/users/drmikecrowe/repos", "events_url": "https://api.github.com/users/drmikecrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/drmikecrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-31T14:04:34Z", "updated_at": "2017-03-31T14:48:17Z", "closed_at": "2017-03-31T14:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can anybody help me understand this error?  The swagger.json is auto-generated from their source code, so I'm trying to understand how this needs to be fixed so I can use bravado.  http://editor.swagger.io/#!/ appears to (mostly) load it, at least enough to generate a library.\r\n\r\nswagger_spec_validator.common.SwaggerValidationError: discriminator (type) must be defined in properties\r\n   \r\nThis is in this section of swagger.json:\r\n```json\r\n    \"FacetMember\" : {\r\n        \"type\" : \"object\",\r\n        \"discriminator\" : \"type\"                        <<--here\r\n    },\r\n```\r\n\r\nJSON file located here:  https://api.squidsolutions.com/release/v4.2/swagger.json\r\n\r\nMy program is simply:\r\n\r\n```python\r\n    from bravado.client import SwaggerClient\r\n    from bravado.requests_client import RequestsClient\r\n    \r\n    http_client = RequestsClient()\r\n    http_client.set_api_key(\r\n        'http://localhost:8889', 'xxxxxxxxxxxxxxxxxxx', param_name='access_token'\r\n    )\r\n    client = SwaggerClient.from_url(\r\n        'http://localhost:8889/release/v4.2/swagger.json',\r\n        http_client=http_client,\r\n    )\r\n    projects = client.projects.get().result()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/278", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/278/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/278/events", "html_url": "https://github.com/Yelp/bravado/issues/278", "id": 218363308, "node_id": "MDU6SXNzdWUyMTgzNjMzMDg=", "number": 278, "title": "Bravado can't deal with self-signed certs or certs not in default store", "user": {"login": "kenrestivo-stem", "id": 26154869, "node_id": "MDQ6VXNlcjI2MTU0ODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/26154869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrestivo-stem", "html_url": "https://github.com/kenrestivo-stem", "followers_url": "https://api.github.com/users/kenrestivo-stem/followers", "following_url": "https://api.github.com/users/kenrestivo-stem/following{/other_user}", "gists_url": "https://api.github.com/users/kenrestivo-stem/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrestivo-stem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrestivo-stem/subscriptions", "organizations_url": "https://api.github.com/users/kenrestivo-stem/orgs", "repos_url": "https://api.github.com/users/kenrestivo-stem/repos", "events_url": "https://api.github.com/users/kenrestivo-stem/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrestivo-stem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-03-31T00:12:27Z", "updated_at": "2018-10-19T09:22:32Z", "closed_at": "2018-10-19T09:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> client = SwaggerClient.from_url('https://somewhere/api/swagger.json')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/client.py\", line 111, in from_url\r\n    spec_dict = loader.load_spec(spec_url)\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/swagger_model.py\", line 98, in load_spec\r\n    self.request_headers,\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/http_future.py\", line 70, in result\r\n    inner_response = self.future.result(timeout=timeout)\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/requests_client.py\", line 271, in result\r\n    timeout=self.build_timeout(timeout))\r\n  File \"/home/krestivo/.local/lib/python2.7/site-packages/requests/sessions.py\", line 596, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/krestivo/.local/lib/python2.7/site-packages/requests/adapters.py\", line 497, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: (\"bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')],)\",)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/277", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/277/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/277/events", "html_url": "https://github.com/Yelp/bravado/issues/277", "id": 216066023, "node_id": "MDU6SXNzdWUyMTYwNjYwMjM=", "number": 277, "title": "bravado on pypi does not offer extra 'fido'", "user": {"login": "ivanlei", "id": 1002798, "node_id": "MDQ6VXNlcjEwMDI3OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1002798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanlei", "html_url": "https://github.com/ivanlei", "followers_url": "https://api.github.com/users/ivanlei/followers", "following_url": "https://api.github.com/users/ivanlei/following{/other_user}", "gists_url": "https://api.github.com/users/ivanlei/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanlei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanlei/subscriptions", "organizations_url": "https://api.github.com/users/ivanlei/orgs", "repos_url": "https://api.github.com/users/ivanlei/repos", "events_url": "https://api.github.com/users/ivanlei/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanlei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-03-22T13:40:27Z", "updated_at": "2017-06-06T15:49:56Z", "closed_at": "2017-06-06T15:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "```shell\r\n(default) \u279c  ~ pip install 'bravado[fido]'\r\nCollecting bravado[fido]\r\n  Downloading bravado-8.4.0.tar.gz\r\n  bravado 8.4.0 does not provide the extra 'fido'\r\n  ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/272", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/272/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/272/events", "html_url": "https://github.com/Yelp/bravado/issues/272", "id": 204938652, "node_id": "MDU6SXNzdWUyMDQ5Mzg2NTI=", "number": 272, "title": "Package at pypi.python.org is obsolete", "user": {"login": "lucafavatella", "id": 1344255, "node_id": "MDQ6VXNlcjEzNDQyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1344255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucafavatella", "html_url": "https://github.com/lucafavatella", "followers_url": "https://api.github.com/users/lucafavatella/followers", "following_url": "https://api.github.com/users/lucafavatella/following{/other_user}", "gists_url": "https://api.github.com/users/lucafavatella/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucafavatella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucafavatella/subscriptions", "organizations_url": "https://api.github.com/users/lucafavatella/orgs", "repos_url": "https://api.github.com/users/lucafavatella/repos", "events_url": "https://api.github.com/users/lucafavatella/events{/privacy}", "received_events_url": "https://api.github.com/users/lucafavatella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-02T17:15:50Z", "updated_at": "2017-02-02T17:19:37Z", "closed_at": "2017-02-02T17:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pypi.python.org/pypi/bravado has version 8.4.0. Git repo has release 0.9.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/266", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/266/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/266/events", "html_url": "https://github.com/Yelp/bravado/issues/266", "id": 190128508, "node_id": "MDU6SXNzdWUxOTAxMjg1MDg=", "number": 266, "title": "Method type with swaggerpy and python3 are getting clobbered", "user": {"login": "podarsmarty", "id": 1999688, "node_id": "MDQ6VXNlcjE5OTk2ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1999688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podarsmarty", "html_url": "https://github.com/podarsmarty", "followers_url": "https://api.github.com/users/podarsmarty/followers", "following_url": "https://api.github.com/users/podarsmarty/following{/other_user}", "gists_url": "https://api.github.com/users/podarsmarty/gists{/gist_id}", "starred_url": "https://api.github.com/users/podarsmarty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podarsmarty/subscriptions", "organizations_url": "https://api.github.com/users/podarsmarty/orgs", "repos_url": "https://api.github.com/users/podarsmarty/repos", "events_url": "https://api.github.com/users/podarsmarty/events{/privacy}", "received_events_url": "https://api.github.com/users/podarsmarty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-17T18:39:07Z", "updated_at": "2016-11-17T20:26:04Z", "closed_at": "2016-11-17T20:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to https://github.com/Yelp/bravado/pull/131\r\n\r\nWith the changes in python3 to str/unicode `.encode('utf8')` now gives us the byte `b'GET'` instead of the string `'GET'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/265", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/265/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/265/events", "html_url": "https://github.com/Yelp/bravado/issues/265", "id": 184447924, "node_id": "MDU6SXNzdWUxODQ0NDc5MjQ=", "number": 265, "title": "Error when API has a attribute called `self`", "user": {"login": "jakul", "id": 862794, "node_id": "MDQ6VXNlcjg2Mjc5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/862794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakul", "html_url": "https://github.com/jakul", "followers_url": "https://api.github.com/users/jakul/followers", "following_url": "https://api.github.com/users/jakul/following{/other_user}", "gists_url": "https://api.github.com/users/jakul/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakul/subscriptions", "organizations_url": "https://api.github.com/users/jakul/orgs", "repos_url": "https://api.github.com/users/jakul/repos", "events_url": "https://api.github.com/users/jakul/events{/privacy}", "received_events_url": "https://api.github.com/users/jakul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-21T10:05:12Z", "updated_at": "2016-11-29T09:26:49Z", "closed_at": "2016-10-21T10:25:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get this error when calling my API, because the `self` from the API response clashes with the `self` from the Python object. I have `self` in my API because I'm following the HAL draft specification for adding metadata to responses - https://tools.ietf.org/html/draft-kelly-json-hal-08.\n\n```\nIn [1]: import uuid\n\nIn [2]: duuid = str(uuid.uuid4())\n\nIn [3]: from bravado import client\n\nIn [4]: cli = client.SwaggerClient.from_url('http://localhost:5005/swagger.json')\n\nIn [5]: cli.Policies.app_policies_views_get_policy(definition_uuid=duuid, policy_uuid='4\n   ...: 29389ec-3c01-44be-98bc-7618b8bc3e30').result()\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/spec.py:246: Warning: uuid format is not registered with bravado-core!\n  .format(name), Warning)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-55a6669afcdf> in <module>()\n----> 1 cli.Policies.app_policies_views_get_policy(definition_uuid=duuid, policy_uuid='429389ec-3c01-44be-98bc-7618b8bc3e30').result()\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado/http_future.pyc in result(self, timeout)\n     75                 incoming_response,\n     76                 self.operation,\n---> 77                 self.response_callbacks)\n     78\n     79             swagger_result = incoming_response.swagger_result\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado/http_future.pyc in unmarshal_response(incoming_response, operation, response_callbacks)\n    113             bravado_core.response.unmarshal_response(\n    114                 incoming_response,\n--> 115                 operation)\n    116     except MatchingResponseNotFound as e:\n    117         exception = make_http_exception(\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/response.pyc in unmarshal_response(response, op)\n    108\n    109     return unmarshal_schema_object(\n--> 110         op.swagger_spec, content_spec, content_value)\n    111\n    112\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/unmarshal.py in unmarshal_schema_object(swagger_spec, schema_object_spec, value)\n     49         # Model specs also have type 'object' but also have the additional\n     50         # MODEL_MARKER key for identification.\n---> 51         return unmarshal_model(swagger_spec, schema_object_spec, value)\n     52\n     53     if obj_type == 'object':\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/unmarshal.py in unmarshal_model(swagger_spec, model_spec, model_value)\n    171             .format(model_value, model_type, type(model_value)))\n    172\n--> 173     model_as_dict = unmarshal_object(swagger_spec, model_spec, model_value)\n    174     # import ipdb; ipdb.set_trace()\n    175     model_instance = model_type(**model_as_dict)\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/unmarshal.py in unmarshal_object(swagger_spec, object_spec, object_value)\n    131             result[k] = None\n    132         elif prop_spec:\n--> 133             result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n    134         else:\n    135             # Don't marshal when a spec is not available - just pass through\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/unmarshal.py in unmarshal_schema_object(swagger_spec, schema_object_spec, value)\n     49         # Model specs also have type 'object' but also have the additional\n     50         # MODEL_MARKER key for identification.\n---> 51         return unmarshal_model(swagger_spec, schema_object_spec, value)\n     52\n     53     if obj_type == 'object':\n\n/Users/craigblaszczyk/.virtualenvs/service-policy/lib/python2.7/site-packages/bravado_core/unmarshal.py in unmarshal_model(swagger_spec, model_spec, model_value)\n    173     model_as_dict = unmarshal_object(swagger_spec, model_spec, model_value)\n    174     # import ipdb; ipdb.set_trace()\n--> 175     model_instance = model_type(**model_as_dict)\n    176     return model_instance\n\nTypeError: <lambda>() got multiple values for keyword argument 'self'\n```\n\nHere's a sample Swagger schema that should generate the same problem:\n\n```\n{\n  \"basePath\": \"/\", \n  \"consumes\": [\n    \"application/json\"\n  ], \n  \"paths\": {\n    \"/something/\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"properties\": {\n              \"self\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }, \n  \"produces\": [\n    \"application/json\"\n  ], \n  \"swagger\": \"2.0\"\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/263", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/263/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/263/events", "html_url": "https://github.com/Yelp/bravado/issues/263", "id": 181134794, "node_id": "MDU6SXNzdWUxODExMzQ3OTQ=", "number": 263, "title": "Create request without swagger.json", "user": {"login": "pavolloffay", "id": 5618424, "node_id": "MDQ6VXNlcjU2MTg0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5618424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavolloffay", "html_url": "https://github.com/pavolloffay", "followers_url": "https://api.github.com/users/pavolloffay/followers", "following_url": "https://api.github.com/users/pavolloffay/following{/other_user}", "gists_url": "https://api.github.com/users/pavolloffay/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavolloffay/subscriptions", "organizations_url": "https://api.github.com/users/pavolloffay/orgs", "repos_url": "https://api.github.com/users/pavolloffay/repos", "events_url": "https://api.github.com/users/pavolloffay/events{/privacy}", "received_events_url": "https://api.github.com/users/pavolloffay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-05T12:05:29Z", "updated_at": "2017-03-26T14:57:01Z", "closed_at": "2017-03-26T14:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nIs it possible to create a http request without pointing to the swagger.json file? \n\n(I'm trying to use https://github.com/Yelp/swagger_zipkin)\n\nPavol\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/260", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/260/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/260/events", "html_url": "https://github.com/Yelp/bravado/issues/260", "id": 180673676, "node_id": "MDU6SXNzdWUxODA2NzM2NzY=", "number": 260, "title": "http exception by status code causes AttributeError: str has no status_code", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-03T15:41:28Z", "updated_at": "2016-10-22T12:52:24Z", "closed_at": "2016-10-22T12:52:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See comments on:\nhttps://github.com/Yelp/bravado/commit/87fa6813c7367a066eaa76db0dfad8483067aad4#diff-0a21d9158985f1ced07c9ef0ad7bb297\n\n```\n>       self.status_code = getattr(self.response, 'status_code')\nE       AttributeError: 'str' object has no attribute 'status_code'\n```\n\nThis may be bad testing code on our end.  Either way the `getattr` should be changed to just attribute access or to default to `None`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/258", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/258/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/258/events", "html_url": "https://github.com/Yelp/bravado/issues/258", "id": 179094948, "node_id": "MDU6SXNzdWUxNzkwOTQ5NDg=", "number": 258, "title": "Travis build failure (Python 2.6)", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-25T16:32:41Z", "updated_at": "2016-09-27T13:57:54Z", "closed_at": "2016-09-27T13:57:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The travis build is starting to fail after #257 merge.\n\nThe travis build job is available [here](https://travis-ci.org/Yelp/bravado/builds/162590659).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/256", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/256/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/256/events", "html_url": "https://github.com/Yelp/bravado/issues/256", "id": 176223446, "node_id": "MDU6SXNzdWUxNzYyMjM0NDY=", "number": 256, "title": "Automatic PyPi deployment", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-11T06:02:46Z", "updated_at": "2016-09-12T16:45:51Z", "closed_at": "2016-09-12T11:21:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Would be nice to setup our travis ci to automatically deploy to pypi when a tag on master is created.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/255", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/255/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/255/events", "html_url": "https://github.com/Yelp/bravado/issues/255", "id": 176223045, "node_id": "MDU6SXNzdWUxNzYyMjMwNDU=", "number": 255, "title": "Changelog for 0.9.3 (+proposal)", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-11T05:50:54Z", "updated_at": "2016-09-25T16:04:57Z", "closed_at": "2016-09-25T16:04:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The changelog is missing an entry for 0.9.3. (Also its not on pypi)\n\nI would like to propose we add a \"Master\" version to the changelog, above the version numbers. As developers commit changes, they can add a message to that section on what they added. When it comes time to release a new version, a maintainer renames that section with the version number, and adds a new blank Master section.\n\nThis is how the Django project does it. It makes it easier to remember what has changed when it comes time to release a new version. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/252", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/252/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/252/events", "html_url": "https://github.com/Yelp/bravado/issues/252", "id": 175302392, "node_id": "MDU6SXNzdWUxNzUzMDIzOTI=", "number": 252, "title": "Better HTTP Exceptions?", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-06T17:18:36Z", "updated_at": "2016-09-09T20:01:55Z", "closed_at": "2016-09-09T20:01:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to have a little more granular HTTP Exceptions, rather than just a single one.\n\nAll HTTPExceptions could inherit from the existing HTTPException class, but we could have ones like:\n\nNotFoundHTTPException(HTTPException):\nForbiddenHTTPException(HTTPException):\nGatewayTimeoutHTTPException(HTTPException):\n\nIt would be nice for when I'm catching different exceptions and trying to handle each one differently.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/246", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/246/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/246/events", "html_url": "https://github.com/Yelp/bravado/issues/246", "id": 173075482, "node_id": "MDU6SXNzdWUxNzMwNzU0ODI=", "number": 246, "title": "Bravado decorators hide SwaggerClient.get_model()", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-24T22:44:00Z", "updated_at": "2016-08-25T18:31:18Z", "closed_at": "2016-08-25T18:31:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using a bravado client wrapper with some of the bravado decorators, I'm unable to access my models:\n\n```\ndecorated_client.get_model('MyModel')\n*** TypeError: 'ZipkinResourceDecorator' object is not callable\n```\n\nI would have to go all the way up the stack to access this function (I'm using 3 decorators here):\n\n```\n# I can access it via:\ndecorated_client.client.client.get_model\n<bound method SwaggerClient.get_model of SwaggerClient(http://localhost:13895/)>\n\n# But not directly \ndecorated_client.get_model\n<bravado_decorators.zipkin_decorator.ZipkinResourceDecorator object at 0x7f421231dbe0>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/242", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/242/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/242/events", "html_url": "https://github.com/Yelp/bravado/issues/242", "id": 172022331, "node_id": "MDU6SXNzdWUxNzIwMjIzMzE=", "number": 242, "title": "Bravado client hangs a lot on HTTPS connections on _lib.SSL_read", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-18T23:16:14Z", "updated_at": "2017-02-20T09:27:29Z", "closed_at": "2017-02-20T09:27:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When trying to use the Bravado  client to make a POST over HTTPS. I find my request hangs about 70% of the time. I get tired, and I interrupt it to see where its hanging at.\n\nIt looks like its hanging at some SSL read function.\n\nCURL is working fine.\n\n```\nFile \"test_forward.py\", line 53, in <module>\n  result =  client.forwarding_service.forward_scrubbed(body=body).result()\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/bravado/http_future.py\", line 70, in result\n  inner_response = self.future.result(timeout=timeout)\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/bravado/requests_client.py\", line 271, in result\n  timeout=self.build_timeout(timeout))\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/requests/sessions.py\", line 576, in send\n  r = adapter.send(request, **kwargs)\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/requests/adapters.py\", line 370, in send\n  timeout=timeout\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\n  body=body, headers=headers)\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 372, in _make_request\n  httplib_response = conn.getresponse(buffering=True)\nFile \"/usr/lib/python2.7/httplib.py\", line 1089, in getresponse\n  response.begin()\nFile \"/usr/lib/python2.7/httplib.py\", line 416, in begin\n  version, status, reason = self._read_status()\nFile \"/usr/lib/python2.7/httplib.py\", line 372, in _read_status\n  line = self.fp.readline(_MAXLINE + 1)\nFile \"/usr/lib/python2.7/socket.py\", line 476, in readline\n  data = self._sock.recv(self._rbufsize)\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/requests/packages/urllib3/contrib/pyopenssl.py\", line 188, in recv\n  data = self.connection.recv(*args, **kwargs)\nFile \"/nail/home/bmarty/pg/scrubbed/virtualenv_run/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 1319, in recv\n  result = _lib.SSL_read(self._ssl, buf, bufsiz)\nKeyboardInterrupt\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/240", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/240/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/240/events", "html_url": "https://github.com/Yelp/bravado/issues/240", "id": 171787671, "node_id": "MDU6SXNzdWUxNzE3ODc2NzE=", "number": 240, "title": "Documentation update. SwaggerClient.from_spec", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-17T23:55:15Z", "updated_at": "2016-08-18T14:29:25Z", "closed_at": "2016-08-18T14:29:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "http://bravado.readthedocs.io/en/latest/advanced.html#loading-swagger-json-by-file-path\n\n```\nfrom bravado.swagger_model import load_file\n\nclient = SwaggerClient.from_dict(load_file('/path/to/swagger.json'))\n```\n\nAttributeError: type object 'SwaggerClient' has no attribute 'from_dict'\n\nI think the documentation should say:\n\n```\nfrom bravado.swagger_model import load_file\n\nclient = SwaggerClient.from_spec(load_file('/path/to/swagger.json'))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/237", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/237/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/237/events", "html_url": "https://github.com/Yelp/bravado/issues/237", "id": 167438744, "node_id": "MDU6SXNzdWUxNjc0Mzg3NDQ=", "number": 237, "title": "pip install latest version", "user": {"login": "hachreak", "id": 377047, "node_id": "MDQ6VXNlcjM3NzA0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/377047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hachreak", "html_url": "https://github.com/hachreak", "followers_url": "https://api.github.com/users/hachreak/followers", "following_url": "https://api.github.com/users/hachreak/following{/other_user}", "gists_url": "https://api.github.com/users/hachreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/hachreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hachreak/subscriptions", "organizations_url": "https://api.github.com/users/hachreak/orgs", "repos_url": "https://api.github.com/users/hachreak/repos", "events_url": "https://api.github.com/users/hachreak/events{/privacy}", "received_events_url": "https://api.github.com/users/hachreak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-25T18:53:03Z", "updated_at": "2016-07-28T13:38:32Z", "closed_at": "2016-07-28T13:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi at all,\nI see that the latest version on github (`8.3.0`) is different from the latest version available on pip (`8.1.2`).\nCould you please update the latest available version? \n\nThanks a lot. :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/230", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/230/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/230/events", "html_url": "https://github.com/Yelp/bravado/issues/230", "id": 159258633, "node_id": "MDU6SXNzdWUxNTkyNTg2MzM=", "number": 230, "title": "Passing multiple query parameters with same name", "user": {"login": "wasbazi", "id": 1082191, "node_id": "MDQ6VXNlcjEwODIxOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1082191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasbazi", "html_url": "https://github.com/wasbazi", "followers_url": "https://api.github.com/users/wasbazi/followers", "following_url": "https://api.github.com/users/wasbazi/following{/other_user}", "gists_url": "https://api.github.com/users/wasbazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasbazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasbazi/subscriptions", "organizations_url": "https://api.github.com/users/wasbazi/orgs", "repos_url": "https://api.github.com/users/wasbazi/repos", "events_url": "https://api.github.com/users/wasbazi/events{/privacy}", "received_events_url": "https://api.github.com/users/wasbazi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266879, "node_id": "MDU6TGFiZWwxMDMyNjY4Nzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-08T20:06:06Z", "updated_at": "2016-06-08T20:58:31Z", "closed_at": "2016-06-08T20:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "From digging through the issues in this repository I found an a merged PR from when swaggerpy existed that allowed you to pass a string query parameter as an array so that you could generate this as a query parameter: `http://www.petstore.swagger.io?foo=bar&foo=foobar` https://github.com/Yelp/bravado/pull/24\n\nIt appears that you used to be able to pass parameters like this:\n\n```\nfrom bravado.client import SwaggerClient\nclient = SwaggerClient.from_url(\"http://petstore.swagger.io/v2/swagger.json\")\npet = client.pet.getPetBySearch(foo=[\"bar\", \"foobar\"]).result()\n```\n\nNow that throws this error:\n\n```\nself = <jsonschema.validators.create.<locals>.Validator object at 0x1122c9f60>, args = (['bar', 'foobar'],), kwargs = {}\nerror = <ValidationError: \"['bar', 'foobar'] is not of type 'string'\">\n\n    def validate(self, *args, **kwargs):\n        for error in self.iter_errors(*args, **kwargs):\n>           raise error\nE           jsonschema.exceptions.ValidationError: ['bar', 'foobar'] is not of type 'string'\n```\n\nIs this by design to no longer allow query parameters like this? Or would it be helpful for me to track down what's preventing passing query parameters like this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/229", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/229/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/229/events", "html_url": "https://github.com/Yelp/bravado/issues/229", "id": 158448924, "node_id": "MDU6SXNzdWUxNTg0NDg5MjQ=", "number": 229, "title": "Should fetching swagger specs be done at buildtime instead of runtime?", "user": {"login": "struys", "id": 232692, "node_id": "MDQ6VXNlcjIzMjY5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/232692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/struys", "html_url": "https://github.com/struys", "followers_url": "https://api.github.com/users/struys/followers", "following_url": "https://api.github.com/users/struys/following{/other_user}", "gists_url": "https://api.github.com/users/struys/gists{/gist_id}", "starred_url": "https://api.github.com/users/struys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/struys/subscriptions", "organizations_url": "https://api.github.com/users/struys/orgs", "repos_url": "https://api.github.com/users/struys/repos", "events_url": "https://api.github.com/users/struys/events{/privacy}", "received_events_url": "https://api.github.com/users/struys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266879, "node_id": "MDU6TGFiZWwxMDMyNjY4Nzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-03T20:32:11Z", "updated_at": "2016-06-09T22:19:29Z", "closed_at": "2016-06-09T22:19:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example usage of bravado suggests to fetch the spec via a url at runtime - https://github.com/Yelp/bravado#example-usage\n\nThere's a tradeoff doing this when you have many instances of a service with many web workers connecting to the same api - the number of requests to fetch the swagger spec is really high.\n\nIs there a technical/philosophical reason why we don't suggest fetching the spec as part of building a service and then just load the spec from disk when a service starts? I understand we always want the specs to be up to date but that's only useful if the service making the api call needs to use the new functionality in which case they'd rebuild and redeploy anyways.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/227", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/227/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/227/events", "html_url": "https://github.com/Yelp/bravado/issues/227", "id": 157021759, "node_id": "MDU6SXNzdWUxNTcwMjE3NTk=", "number": 227, "title": "Should fido / twisted / requests be optional requirements?", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-26T16:12:44Z", "updated_at": "2019-08-18T04:00:02Z", "closed_at": "2019-08-18T04:00:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Or perhaps split out into separate packages?  To me it doesn't make too much sense to drag them along if they're not essential for functionality\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/225", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/225/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/225/events", "html_url": "https://github.com/Yelp/bravado/issues/225", "id": 156073225, "node_id": "MDU6SXNzdWUxNTYwNzMyMjU=", "number": 225, "title": "Question: Swagger spec 1.2", "user": {"login": "danielfrg", "id": 1580714, "node_id": "MDQ6VXNlcjE1ODA3MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1580714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielfrg", "html_url": "https://github.com/danielfrg", "followers_url": "https://api.github.com/users/danielfrg/followers", "following_url": "https://api.github.com/users/danielfrg/following{/other_user}", "gists_url": "https://api.github.com/users/danielfrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielfrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielfrg/subscriptions", "organizations_url": "https://api.github.com/users/danielfrg/orgs", "repos_url": "https://api.github.com/users/danielfrg/repos", "events_url": "https://api.github.com/users/danielfrg/events{/privacy}", "received_events_url": "https://api.github.com/users/danielfrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-21T00:23:21Z", "updated_at": "2016-05-23T14:51:37Z", "closed_at": "2016-05-23T14:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all thanks for supporting library :)\n\nAll the documentation says that only swagger spec `2.0` is supported but I still see that there is some test data for swagger version `1.2` in the `test-data` directory so I wanted to know if its possible to use a swagger spec of `1.2` with the latest version of the library. If the answer is no, is there an old version of the that supported `1.2` instead of `2.0`?\n\nMy objective is to use it with kubernetes and unfortunately they still have an old spec and it might be a while for them to update it even tho its in progress. I was able to find a converted `2.0` spec of the kubernetes spec, is it possible to use that spec with bravado and target a swagger `1.2` REST API?, I tried to skip the swagger spec check but didnt work for me.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/223", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/223/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/223/events", "html_url": "https://github.com/Yelp/bravado/issues/223", "id": 155804477, "node_id": "MDU6SXNzdWUxNTU4MDQ0Nzc=", "number": 223, "title": "Python3 support for FidoClient", "user": {"login": "struys", "id": 232692, "node_id": "MDQ6VXNlcjIzMjY5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/232692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/struys", "html_url": "https://github.com/struys", "followers_url": "https://api.github.com/users/struys/followers", "following_url": "https://api.github.com/users/struys/following{/other_user}", "gists_url": "https://api.github.com/users/struys/gists{/gist_id}", "starred_url": "https://api.github.com/users/struys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/struys/subscriptions", "organizations_url": "https://api.github.com/users/struys/orgs", "repos_url": "https://api.github.com/users/struys/repos", "events_url": "https://api.github.com/users/struys/events{/privacy}", "received_events_url": "https://api.github.com/users/struys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-19T18:32:02Z", "updated_at": "2016-06-03T11:58:07Z", "closed_at": "2016-06-03T11:58:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The FidoClient raises an exception if imported under python3:\n\n``` python\nif six.PY3:\n    raise ImportError(\"The fido client is not yet supported in py3\")\n```\n\nI can't find documentation explaining why it doesn't support python3 so I figured i'd file this to get answer and start enumerating the blockers.\n\ncc/@lucagiovagnoli @jnb\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/215", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/215/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/215/events", "html_url": "https://github.com/Yelp/bravado/issues/215", "id": 151194443, "node_id": "MDU6SXNzdWUxNTExOTQ0NDM=", "number": 215, "title": "$ref to local files", "user": {"login": "germanp", "id": 1280122, "node_id": "MDQ6VXNlcjEyODAxMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1280122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germanp", "html_url": "https://github.com/germanp", "followers_url": "https://api.github.com/users/germanp/followers", "following_url": "https://api.github.com/users/germanp/following{/other_user}", "gists_url": "https://api.github.com/users/germanp/gists{/gist_id}", "starred_url": "https://api.github.com/users/germanp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germanp/subscriptions", "organizations_url": "https://api.github.com/users/germanp/orgs", "repos_url": "https://api.github.com/users/germanp/repos", "events_url": "https://api.github.com/users/germanp/events{/privacy}", "received_events_url": "https://api.github.com/users/germanp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266879, "node_id": "MDU6TGFiZWwxMDMyNjY4Nzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-26T17:36:48Z", "updated_at": "2017-08-07T12:40:46Z", "closed_at": "2016-05-16T16:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to split my swagger spec file into multiple files. I've tried using the $ref but it seems to ignore the inclusion. Is referencing to a local file supported? I think that using the a full url path (with http://) works but does not serve me.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/206", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/206/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/206/events", "html_url": "https://github.com/Yelp/bravado/issues/206", "id": 146131406, "node_id": "MDU6SXNzdWUxNDYxMzE0MDY=", "number": 206, "title": "bravado: Regression between between 8.0.1 and 8.1.0: Response has no attribute `headers`", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-05T22:56:53Z", "updated_at": "2016-04-06T00:11:42Z", "closed_at": "2016-04-05T23:34:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\nTraceback (most recent call last):\n\n## ...\n\n  File \"/nail/home/asottile/trees/www_pages/virtualenv_run/lib/python2.7/site-packages/bravado/client.py\", line 111, in from_url\n    spec_dict = loader.load_spec(spec_url)\n  File \"/nail/home/asottile/trees/www_pages/virtualenv_run/lib/python2.7/site-packages/bravado/swagger_model.py\", line 101, in load_spec\n    content_type = response.headers.get('content-type', '').lower()\nAttributeError: 'Response' object has no attribute 'headers'\n```\n\nCC @sjaensch \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/205", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/205/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/205/events", "html_url": "https://github.com/Yelp/bravado/issues/205", "id": 146112940, "node_id": "MDU6SXNzdWUxNDYxMTI5NDA=", "number": 205, "title": "swaggerpy: Regression between 0.7.8 and 0.7.9", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-05T21:43:01Z", "updated_at": "2016-04-05T22:46:33Z", "closed_at": "2016-04-05T22:46:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seems in 0.7.8, non-required arrays are defaulted to `[]` when missing.  In 0.7.9 they are defaulting to None.\n\nHere's a part of a schema that's triggering this:\n\n``` json\n                \"elite_years\": {\n                    \"description\": \"User elite years\",\n                    \"items\": {\n                        \"type\": \"integer\"\n                    },\n                    \"type\": \"array\"\n                },\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/202", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/202/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/202/events", "html_url": "https://github.com/Yelp/bravado/issues/202", "id": 145023857, "node_id": "MDU6SXNzdWUxNDUwMjM4NTc=", "number": 202, "title": "SwaggerMappingError when not passing optional array-type query params", "user": {"login": "mxmul", "id": 3022244, "node_id": "MDQ6VXNlcjMwMjIyNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3022244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxmul", "html_url": "https://github.com/mxmul", "followers_url": "https://api.github.com/users/mxmul/followers", "following_url": "https://api.github.com/users/mxmul/following{/other_user}", "gists_url": "https://api.github.com/users/mxmul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxmul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxmul/subscriptions", "organizations_url": "https://api.github.com/users/mxmul/orgs", "repos_url": "https://api.github.com/users/mxmul/repos", "events_url": "https://api.github.com/users/mxmul/events{/privacy}", "received_events_url": "https://api.github.com/users/mxmul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-03-31T21:30:52Z", "updated_at": "2016-04-01T23:15:18Z", "closed_at": "2016-04-01T23:15:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using the latest version of bravado. I have a swagger endpoint with params that look something like this (snippet):\n\n``` json\n \"parameters\": [\n     {\n         \"description\": \"The search term\",\n         \"in\": \"query\",\n         \"name\": \"term\",\n         \"required\": false,\n         \"type\": \"string\"\n     },\n     {\n         \"default\": [],\n         \"description\": \"The categories to filter on\",\n         \"in\": \"query\",\n         \"items\": {\n             \"type\": \"string\"\n         },\n         \"name\": \"categories\",\n         \"required\": false,\n         \"type\": \"array\"\n     }\n ]\n```\n\nI'm able to curl the endpoint without specifying 'categories', but bravado has a fit if I don't explicitly pass an empty array:\n\n``` python\n >>> client = get_bravado_client()\n >>> client.search.search(term=\"pizza\")\n Traceback (most recent call last):\n   File \"<stdin>\", line 1, in <module>\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado_decorators/header_decorator.py\", line 22, in with_headers\n     return getattr(self.resource, call_name)(*args, **kwargs)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado/client.py\", line 250, in __call__\n     self.operation, request_options, **op_kwargs)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado/client.py\", line 291, in construct_request\n     construct_params(operation, request, op_kwargs)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado/client.py\", line 321, in construct_params\n     marshal_param(remaining_param, None, request)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado_core/param.py\", line 113, in marshal_param\n     value = marshal_schema_object(swagger_spec, spec, value)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado_core/marshal.py\", line 35, in marshal_schema_object\n     return marshal_array(swagger_spec, schema_object_spec, value)\n   File \"virtualenv_run/lib/python2.6/site-packages/bravado_core/marshal.py\", line 96, in marshal_array\n     .format(type(array_value), array_value))\n bravado_core.exception.SwaggerMappingError: Expected list like type for <type 'NoneType'>: None\n >>> client.search.search(term='pizza', categories=[])\n <bravado.http_future.HttpFuture object at 0x2ba48d0>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/201", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/201/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/201/events", "html_url": "https://github.com/Yelp/bravado/issues/201", "id": 143956285, "node_id": "MDU6SXNzdWUxNDM5NTYyODU=", "number": 201, "title": "collectionFormat for arrays is not implemented", "user": {"login": "martinellog", "id": 18010063, "node_id": "MDQ6VXNlcjE4MDEwMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/18010063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinellog", "html_url": "https://github.com/martinellog", "followers_url": "https://api.github.com/users/martinellog/followers", "following_url": "https://api.github.com/users/martinellog/following{/other_user}", "gists_url": "https://api.github.com/users/martinellog/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinellog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinellog/subscriptions", "organizations_url": "https://api.github.com/users/martinellog/orgs", "repos_url": "https://api.github.com/users/martinellog/repos", "events_url": "https://api.github.com/users/martinellog/events{/privacy}", "received_events_url": "https://api.github.com/users/martinellog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-28T11:37:03Z", "updated_at": "2016-03-28T14:07:21Z", "closed_at": "2016-03-28T14:07:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "when an array P in a swagger spec has collectionFormat multi, the request should be encoded as ?p=1&p=2... to do this, we need to pass to the requests library p[] instead of p as param name. The current result is that the params are encoded independently of the collectionformat.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/199", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/199/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/199/events", "html_url": "https://github.com/Yelp/bravado/issues/199", "id": 140248970, "node_id": "MDU6SXNzdWUxNDAyNDg5NzA=", "number": 199, "title": "TypeError or BadRequest with form multi-part data when using bravado FidoClient", "user": {"login": "lucagiovagnoli", "id": 4341034, "node_id": "MDQ6VXNlcjQzNDEwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4341034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucagiovagnoli", "html_url": "https://github.com/lucagiovagnoli", "followers_url": "https://api.github.com/users/lucagiovagnoli/followers", "following_url": "https://api.github.com/users/lucagiovagnoli/following{/other_user}", "gists_url": "https://api.github.com/users/lucagiovagnoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucagiovagnoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucagiovagnoli/subscriptions", "organizations_url": "https://api.github.com/users/lucagiovagnoli/orgs", "repos_url": "https://api.github.com/users/lucagiovagnoli/repos", "events_url": "https://api.github.com/users/lucagiovagnoli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucagiovagnoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-11T17:48:51Z", "updated_at": "2016-04-20T15:48:23Z", "closed_at": "2016-04-20T15:48:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have not reproduced this but from reading the code I am fairly confident that issue #195 is affecting bravado as well, not only swaggerpy.\n\nI am opening this issue to track this so that it does not go forgotten.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/197", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/197/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/197/events", "html_url": "https://github.com/Yelp/bravado/issues/197", "id": 138274635, "node_id": "MDU6SXNzdWUxMzgyNzQ2MzU=", "number": 197, "title": "BadRequest with form data in Asynchronous client", "user": {"login": "lucagiovagnoli", "id": 4341034, "node_id": "MDQ6VXNlcjQzNDEwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4341034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucagiovagnoli", "html_url": "https://github.com/lucagiovagnoli", "followers_url": "https://api.github.com/users/lucagiovagnoli/followers", "following_url": "https://api.github.com/users/lucagiovagnoli/following{/other_user}", "gists_url": "https://api.github.com/users/lucagiovagnoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucagiovagnoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucagiovagnoli/subscriptions", "organizations_url": "https://api.github.com/users/lucagiovagnoli/orgs", "repos_url": "https://api.github.com/users/lucagiovagnoli/repos", "events_url": "https://api.github.com/users/lucagiovagnoli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucagiovagnoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-03T19:30:15Z", "updated_at": "2016-03-17T15:55:49Z", "closed_at": "2016-03-17T15:55:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am getting a BadRequest when using form data (only form data Content-type: application/x-www-form-urlencoded, not multi-part).\n\nI managed to reproduce the error and it seems to happen because we are not setting the headers correctly and we are not utf8-encoding the data.\n[Here](https://github.com/Yelp/bravado/blob/swaggerpy/swaggerpy/async_http_client.py#L160) we encode the body if the header is set (which is not). In fact we don't set it anywhere:\n\n``` bash\n$ ag APP_FORM bravado/\nbravado/swaggerpy/async_http_client.py\n160:    elif headers.get('content-type') == http_client.APP_FORM:\n\nbravado/swaggerpy/http_client.py\n19:APP_FORM = 'application/x-www-form-urlencoded'\n\nbravado/tests/async_http_client_test.py\n88:                   'headers': {'content-type': swaggerpy.http_client.APP_FORM}}\n```\n\nWe should probably do something similar to python \"requests\" which is how the Sync client does it now. Basically they set it like [this](https://github.com/kennethreitz/requests/blob/master/requests/models.py#L454).\n\nWorking on a patch to make it work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/194", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/194/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/194/events", "html_url": "https://github.com/Yelp/bravado/issues/194", "id": 138205742, "node_id": "MDU6SXNzdWUxMzgyMDU3NDI=", "number": 194, "title": "TypeError with form multi-part data when using the AsynchronousHttpClient", "user": {"login": "lucagiovagnoli", "id": 4341034, "node_id": "MDQ6VXNlcjQzNDEwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4341034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucagiovagnoli", "html_url": "https://github.com/lucagiovagnoli", "followers_url": "https://api.github.com/users/lucagiovagnoli/followers", "following_url": "https://api.github.com/users/lucagiovagnoli/following{/other_user}", "gists_url": "https://api.github.com/users/lucagiovagnoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucagiovagnoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucagiovagnoli/subscriptions", "organizations_url": "https://api.github.com/users/lucagiovagnoli/orgs", "repos_url": "https://api.github.com/users/lucagiovagnoli/repos", "events_url": "https://api.github.com/users/lucagiovagnoli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucagiovagnoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-03T15:11:51Z", "updated_at": "2016-03-17T15:55:18Z", "closed_at": "2016-03-17T15:55:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am getting the following error when I try sending multi-part form data (such as a file and some strings/integers):\n`\nFile \"/code/virtualenv_run/local/lib/python2.7/site-packages/swaggerpy/response.py\", line 55, in __init__\n    self._request = self._http_client.start_request(request_params)\n  File \"/code/virtualenv_run/local/lib/python2.7/site-packages/swaggerpy/async_http_client.py\", line 50, in start_request\n    'bodyProducer': stringify_body(request_params),\n  File \"/code/virtualenv_run/local/lib/python2.7/site-packages/swaggerpy/async_http_client.py\", line 159, in stringify_body\n    data = create_multipart_content(request_params, headers)\n  File \"/code/virtualenv_run/local/lib/python2.7/site-packages/swaggerpy/multipart_response.py\", line 47, in create_multipart_content\n    return \"\\r\\n\".join(lines)\nTypeError: sequence item 7: expected string or Unicode, int found\n`\n\nI believe it is due to try joining integers and strings together ([see this line](https://github.com/Yelp/bravado/blob/swaggerpy/swaggerpy/multipart_response.py#L21)).\nA fix could be:\n`lines.extend([\"--\" + boundary, header, \"\", str(content)])`\n\nworking on a patch right now\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/178", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/178/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/178/events", "html_url": "https://github.com/Yelp/bravado/issues/178", "id": 111726925, "node_id": "MDU6SXNzdWUxMTE3MjY5MjU=", "number": 178, "title": "Support for post-processing the incoming response", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-10-15T23:18:31Z", "updated_at": "2015-10-23T16:21:29Z", "closed_at": "2015-10-23T16:21:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Client decorators need the ability to do post-processing on the incoming response in the `HttpFuture` after it has been validated and unmarshalled by bravado-core but before it is returned to the client. Expose an interface to make this possible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/173", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/173/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/173/events", "html_url": "https://github.com/Yelp/bravado/issues/173", "id": 108235066, "node_id": "MDU6SXNzdWUxMDgyMzUwNjY=", "number": 173, "title": "Add a way to fetch response headers, status_code", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-09-24T23:40:00Z", "updated_at": "2015-10-19T17:06:21Z", "closed_at": "2015-10-19T17:06:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the only output back is either json response or deserialized version of the json response. There are use-case where other attributes of response may be needed like headers, status_code, etc. There should be a way to fetch these as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/172", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/172/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/172/events", "html_url": "https://github.com/Yelp/bravado/issues/172", "id": 108158716, "node_id": "MDU6SXNzdWUxMDgxNTg3MTY=", "number": 172, "title": "Add allow_null option", "user": {"login": "jpizarrom", "id": 111236, "node_id": "MDQ6VXNlcjExMTIzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/111236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpizarrom", "html_url": "https://github.com/jpizarrom", "followers_url": "https://api.github.com/users/jpizarrom/followers", "following_url": "https://api.github.com/users/jpizarrom/following{/other_user}", "gists_url": "https://api.github.com/users/jpizarrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpizarrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpizarrom/subscriptions", "organizations_url": "https://api.github.com/users/jpizarrom/orgs", "repos_url": "https://api.github.com/users/jpizarrom/repos", "events_url": "https://api.github.com/users/jpizarrom/events{/privacy}", "received_events_url": "https://api.github.com/users/jpizarrom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-09-24T15:48:49Z", "updated_at": "2016-08-11T22:07:38Z", "closed_at": "2016-08-08T20:39:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "add allow_null like in https://github.com/Yelp/bravado/pull/36\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/169", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/169/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/169/events", "html_url": "https://github.com/Yelp/bravado/issues/169", "id": 100399579, "node_id": "MDU6SXNzdWUxMDAzOTk1Nzk=", "number": 169, "title": "http_client by default is None", "user": {"login": "stratosgear", "id": 193463, "node_id": "MDQ6VXNlcjE5MzQ2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/193463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stratosgear", "html_url": "https://github.com/stratosgear", "followers_url": "https://api.github.com/users/stratosgear/followers", "following_url": "https://api.github.com/users/stratosgear/following{/other_user}", "gists_url": "https://api.github.com/users/stratosgear/gists{/gist_id}", "starred_url": "https://api.github.com/users/stratosgear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stratosgear/subscriptions", "organizations_url": "https://api.github.com/users/stratosgear/orgs", "repos_url": "https://api.github.com/users/stratosgear/repos", "events_url": "https://api.github.com/users/stratosgear/events{/privacy}", "received_events_url": "https://api.github.com/users/stratosgear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-11T20:19:09Z", "updated_at": "2015-08-11T21:00:24Z", "closed_at": "2015-08-11T21:00:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Am I using this wrong?\n\n```\nfrom bravado.client import SwaggerClient\nfrom bravado.swagger_model import load_file\nfrom bravado.requests_client import RequestsClient\n\nhttp_client = RequestsClient()\n\nclient = SwaggerClient.from_spec(load_file(\"/server/plaavi.json\"), http_client=http_client)\n\njobs = client.jobs.getJobs().result()\n```\n\nIf I do not specifically instantiate a `RequestsClient` (and pass it to SwaggerClient) I get an error:\n\n```\n...\nFile \"/usr/local/lib/python2.7/dist-packages/bravado_core/docstring.py\", line 52, in wrapper\n  return operation(**kwargs)\nFile \"/usr/local/lib/python2.7/dist-packages/bravado/client.py\", line 241, in __call__\n  return self.operation.swagger_spec.http_client.request(request_params,\nAttributeError: 'NoneType' object has no attribute 'request'\n```\n\nwhich kinda makes sense because I see that the method param is defined as `http_client=None`.\n\nI'm using version 4.0.0 of bravado, btw\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/168", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/168/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/168/events", "html_url": "https://github.com/Yelp/bravado/issues/168", "id": 100333736, "node_id": "MDU6SXNzdWUxMDAzMzM3MzY=", "number": 168, "title": "Instantiate a client from a .yml definition instead of .json only", "user": {"login": "stratosgear", "id": 193463, "node_id": "MDQ6VXNlcjE5MzQ2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/193463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stratosgear", "html_url": "https://github.com/stratosgear", "followers_url": "https://api.github.com/users/stratosgear/followers", "following_url": "https://api.github.com/users/stratosgear/following{/other_user}", "gists_url": "https://api.github.com/users/stratosgear/gists{/gist_id}", "starred_url": "https://api.github.com/users/stratosgear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stratosgear/subscriptions", "organizations_url": "https://api.github.com/users/stratosgear/orgs", "repos_url": "https://api.github.com/users/stratosgear/repos", "events_url": "https://api.github.com/users/stratosgear/events{/privacy}", "received_events_url": "https://api.github.com/users/stratosgear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-08-11T15:04:41Z", "updated_at": "2016-03-17T09:11:34Z", "closed_at": "2016-03-15T18:25:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It should be easy no?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/165", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/165/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/165/events", "html_url": "https://github.com/Yelp/bravado/issues/165", "id": 96669970, "node_id": "MDU6SXNzdWU5NjY2OTk3MA==", "number": 165, "title": "timeout and connect_timeout are not being passed to the FidoClient", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-07-22T21:29:53Z", "updated_at": "2015-08-04T22:58:48Z", "closed_at": "2015-08-04T22:58:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The call to [fido.fetch(....)](https://github.com/Yelp/bravado/blob/3c00a50f8a7d634cf179d771d371a200a22c0df6/bravado/fido_client.py#L68) doesn't currently pass along the `timeout` kwarg. \n\nAfter https://github.com/Yelp/fido/issues/12 is fixed, it should also pass along the `connect_timeout` kwarg too.\n\nThis is not to be confused with the `timeout` passed to `future.result(timeout)` since time may have passed between to call to `fido.fetch(..)` and `future.result(...)`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/162", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/162/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/162/events", "html_url": "https://github.com/Yelp/bravado/issues/162", "id": 95296179, "node_id": "MDU6SXNzdWU5NTI5NjE3OQ==", "number": 162, "title": "log.warn `deprecated`, `x-deprecated-date` and `x-removal-date`", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-07-15T21:36:39Z", "updated_at": "2015-07-20T22:46:38Z", "closed_at": "2015-07-20T22:46:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/155", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/155/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/155/events", "html_url": "https://github.com/Yelp/bravado/issues/155", "id": 93141851, "node_id": "MDU6SXNzdWU5MzE0MTg1MQ==", "number": 155, "title": "Move twisted to an extras_require", "user": {"login": "bpicolo", "id": 2424701, "node_id": "MDQ6VXNlcjI0MjQ3MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2424701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpicolo", "html_url": "https://github.com/bpicolo", "followers_url": "https://api.github.com/users/bpicolo/followers", "following_url": "https://api.github.com/users/bpicolo/following{/other_user}", "gists_url": "https://api.github.com/users/bpicolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpicolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpicolo/subscriptions", "organizations_url": "https://api.github.com/users/bpicolo/orgs", "repos_url": "https://api.github.com/users/bpicolo/repos", "events_url": "https://api.github.com/users/bpicolo/events{/privacy}", "received_events_url": "https://api.github.com/users/bpicolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-05T19:57:15Z", "updated_at": "2016-04-21T07:22:10Z", "closed_at": "2016-04-21T07:22:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In retrospect, the best way to merge in the py3 support would be to make twisted support an extras_require dep.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/154", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/154/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/154/events", "html_url": "https://github.com/Yelp/bravado/issues/154", "id": 91264527, "node_id": "MDU6SXNzdWU5MTI2NDUyNw==", "number": 154, "title": "Contributing an urllib2 http client", "user": {"login": "DanielJomphe", "id": 28544, "node_id": "MDQ6VXNlcjI4NTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/28544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielJomphe", "html_url": "https://github.com/DanielJomphe", "followers_url": "https://api.github.com/users/DanielJomphe/followers", "following_url": "https://api.github.com/users/DanielJomphe/following{/other_user}", "gists_url": "https://api.github.com/users/DanielJomphe/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielJomphe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielJomphe/subscriptions", "organizations_url": "https://api.github.com/users/DanielJomphe/orgs", "repos_url": "https://api.github.com/users/DanielJomphe/repos", "events_url": "https://api.github.com/users/DanielJomphe/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielJomphe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-26T14:25:13Z", "updated_at": "2015-06-26T17:10:29Z", "closed_at": "2015-06-26T16:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "We can't use either of the provided Fido and Requests clients, so I coded an urllib2 client.\n\nIs that something you'd like to see contributed in this package?\n\nPS congrats on releasing :sparkles:1.0.0:sparkles:!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/153", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/153/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/153/events", "html_url": "https://github.com/Yelp/bravado/issues/153", "id": 88775708, "node_id": "MDU6SXNzdWU4ODc3NTcwOA==", "number": 153, "title": "Bravado should reraise exceptions into common exception types", "user": {"login": "bpicolo", "id": 2424701, "node_id": "MDQ6VXNlcjI0MjQ3MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2424701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpicolo", "html_url": "https://github.com/bpicolo", "followers_url": "https://api.github.com/users/bpicolo/followers", "following_url": "https://api.github.com/users/bpicolo/following{/other_user}", "gists_url": "https://api.github.com/users/bpicolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpicolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpicolo/subscriptions", "organizations_url": "https://api.github.com/users/bpicolo/orgs", "repos_url": "https://api.github.com/users/bpicolo/repos", "events_url": "https://api.github.com/users/bpicolo/events{/privacy}", "received_events_url": "https://api.github.com/users/bpicolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-06-16T16:29:33Z", "updated_at": "2015-08-10T22:15:05Z", "closed_at": "2015-08-10T22:15:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Shouldn't have to worry about this across separate clients. Should have uniform exceptions\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/151", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/151/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/151/events", "html_url": "https://github.com/Yelp/bravado/issues/151", "id": 85623923, "node_id": "MDU6SXNzdWU4NTYyMzkyMw==", "number": 151, "title": "`_request_options` not available now.", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-05T20:15:58Z", "updated_at": "2015-07-23T22:55:10Z", "closed_at": "2015-07-23T22:55:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Backwards compatibility with swaggerpy breaks as `_request_options` is not accepted in bravado:\n\n```\nswagger_client.pet.addPet(\n    body=pet,\n    _request_options={\"headers\": {\"foo\": \"bar\"}},\n).result()\n```\n\nshould add the additional header to the request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/148", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/148/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/148/events", "html_url": "https://github.com/Yelp/bravado/issues/148", "id": 78888078, "node_id": "MDU6SXNzdWU3ODg4ODA3OA==", "number": 148, "title": "Documentation link broken", "user": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-21T08:23:50Z", "updated_at": "2015-05-29T19:29:44Z", "closed_at": "2015-05-29T19:29:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The link to http://bravado.readthedocs.org produces a 404 page.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/146", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/146/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/146/events", "html_url": "https://github.com/Yelp/bravado/issues/146", "id": 78276809, "node_id": "MDU6SXNzdWU3ODI3NjgwOQ==", "number": 146, "title": "Don't error when the server returns extra response fields", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-19T22:35:29Z", "updated_at": "2015-10-14T15:21:32Z", "closed_at": "2015-10-14T15:21:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We chatted a bit about this today. I still want to write a test for it, but I won't have time to do that for the next couple of weeks, so I wanted to get it documented here.\n\nA service will need to change its API. API changes need to be backwards compatible, or increase the version number (while still providing the old version).  In the case where an endpoint is only adding more data to the response, we shouldn't need to increase the endpoint version number.  Clients should be fine to ignore any unexpected fields.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/143", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/143/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/143/events", "html_url": "https://github.com/Yelp/bravado/issues/143", "id": 74155196, "node_id": "MDU6SXNzdWU3NDE1NTE5Ng==", "number": 143, "title": "Remove flakiness from Async Integration tests", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-07T22:55:35Z", "updated_at": "2015-06-04T18:43:00Z", "closed_at": "2015-06-04T18:43:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n=================================== FAILURES ===================================\n____________ TestServer.test_multiple_requests_against_async_client ____________\n\nself = <tests.integration.async_http_client_test.TestServer testMethod=test_multiple_requests_against_async_client>\n\n    def test_multiple_requests_against_async_client(self):\n        port = get_hopefully_free_port()\n        launch_threaded_http_server(port)\n\n        client = AsynchronousHttpClient()\n\n        request_one_params = {\n            'method': 'GET',\n            'headers': {},\n            'url': \"http://localhost:{0}/1\".format(port),\n            'params': {},\n        }\n        request_two_params = {\n            'method': 'GET',\n            'headers': {},\n            'url': \"http://localhost:{0}/2\".format(port),\n            'params': {},\n        }\n\n        eventual_one = client.start_request(request_one_params)\n        eventual_two = client.start_request(request_two_params)\n>       resp_one = eventual_one.wait(timeout=1)\n\ntests/integration/async_http_client_test.py:69:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox/py27/local/lib/python2.7/site-packages/crochet/_eventloop.py:229: in wait\n    result = self._result(timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <crochet._eventloop.EventualResult object at 0x270a250>, timeout = 1\n\n            Return the result, if available.\n\n            It may take an unknown amount of time to return the result, so a\n            timeout option is provided. If the given number of seconds pass with\n            no result, a TimeoutError will be thrown.\n\n            If a previous call timed out, additional calls to this function will\n            still wait for a result and return it if available. If a result was\n            returned on one call, additional calls will return/raise the same\n            result.\n            \"\"\"\n        if timeout is None:\n            warnings.warn(\"Unlimited timeouts are deprecated.\",\n                          DeprecationWarning, stacklevel=3)\n            # Queue.get(None) won't get interrupted by Ctrl-C...\n            timeout = 2 ** 31\n        self._result_set.wait(timeout)\n        # In Python 2.6 we can't rely on the return result of wait(), so we\n        # have to check manually:\n        if not self._result_set.is_set():\n>           raise TimeoutError()\nE           TimeoutError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/134", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/134/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/134/events", "html_url": "https://github.com/Yelp/bravado/issues/134", "id": 65050315, "node_id": "MDU6SXNzdWU2NTA1MDMxNQ==", "number": 134, "title": "Different Exception Type between Sync and Async client", "user": {"login": "laucia", "id": 1099964, "node_id": "MDQ6VXNlcjEwOTk5NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1099964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laucia", "html_url": "https://github.com/laucia", "followers_url": "https://api.github.com/users/laucia/followers", "following_url": "https://api.github.com/users/laucia/following{/other_user}", "gists_url": "https://api.github.com/users/laucia/gists{/gist_id}", "starred_url": "https://api.github.com/users/laucia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laucia/subscriptions", "organizations_url": "https://api.github.com/users/laucia/orgs", "repos_url": "https://api.github.com/users/laucia/repos", "events_url": "https://api.github.com/users/laucia/events{/privacy}", "received_events_url": "https://api.github.com/users/laucia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-29T11:12:58Z", "updated_at": "2015-04-01T00:08:02Z", "closed_at": "2015-04-01T00:08:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Swagger-py's HTTPError is an exact copy of request's one\nhttps://github.com/Yelp/swagger-py/blob/master/swaggerpy/exception.py#L9-L21\nhttps://github.com/kennethreitz/requests/blob/master/requests/exceptions.py#L13-L31\n\nbut the SynchronousHttpClient throws requests.exceptions.HTTPError, and AsynchronousHttpClient throws swaggerpy.exception.HTTPError which makes error handling closely tied to the client used.\n\nreplacing the HTTPError code in swaggerpy/exception.py by a from requests.exceptions import HTTPError could solve this and by backward compatible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/133", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/133/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/133/events", "html_url": "https://github.com/Yelp/bravado/issues/133", "id": 64634873, "node_id": "MDU6SXNzdWU2NDYzNDg3Mw==", "number": 133, "title": "Remove the model attributes if they are not required and not present in the response", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-03-26T21:10:29Z", "updated_at": "2015-04-02T18:38:49Z", "closed_at": "2015-04-02T18:38:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Instead of providing a default value, remove the model field if not present in the response.\n\nChanges should be around [here](https://github.com/Yelp/swagger-py/blob/8b8cadb81494dec71a4896cb287382d690430b74/swaggerpy/swagger_model.py#L360)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/132", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/132/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/132/events", "html_url": "https://github.com/Yelp/bravado/issues/132", "id": 64135182, "node_id": "MDU6SXNzdWU2NDEzNTE4Mg==", "number": 132, "title": "\"Any\" type is not supported in swagger-py", "user": {"login": "ruiwanguiuc", "id": 3632449, "node_id": "MDQ6VXNlcjM2MzI0NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3632449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruiwanguiuc", "html_url": "https://github.com/ruiwanguiuc", "followers_url": "https://api.github.com/users/ruiwanguiuc/followers", "following_url": "https://api.github.com/users/ruiwanguiuc/following{/other_user}", "gists_url": "https://api.github.com/users/ruiwanguiuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruiwanguiuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruiwanguiuc/subscriptions", "organizations_url": "https://api.github.com/users/ruiwanguiuc/orgs", "repos_url": "https://api.github.com/users/ruiwanguiuc/repos", "events_url": "https://api.github.com/users/ruiwanguiuc/events{/privacy}", "received_events_url": "https://api.github.com/users/ruiwanguiuc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266879, "node_id": "MDU6TGFiZWwxMDMyNjY4Nzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-25T00:28:43Z", "updated_at": "2015-06-04T18:43:22Z", "closed_at": "2015-06-04T18:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a swagger schema that has an object with type \"any\". It passes pyramid_swagger validation but didn't pass swagger-py validation. So maybe swagger-py should add \"any\" to the supported types?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/126", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/126/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/126/events", "html_url": "https://github.com/Yelp/bravado/issues/126", "id": 63582901, "node_id": "MDU6SXNzdWU2MzU4MjkwMQ==", "number": 126, "title": "[bravado] jsonschema.validate is failing on request validation", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-03-22T22:24:52Z", "updated_at": "2015-03-31T22:25:21Z", "closed_at": "2015-03-31T22:25:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this:\n\n``` python\nswagger_client = client.get_client('http://petstore.swagger.io/v2/swagger.json')\nswagger_client.pet.findPetsByStatus(status=['available']).result()\n```\n\nWhich throws back:\n\n```\n---> 33     jsonschema.validate(value, spec)\n     34\n     35\n\n/usr/lib/pymodules/python2.6/jsonschema/validators.pyc in validate(instance, schema, cls, *args, **kwargs)\n    504     \"\"\"\n    505     if cls is None:\n    506         cls = validator_for(schema)\n--> 507     cls.check_schema(schema)\n    508     cls(schema, *args, **kwargs).validate(instance)\n\n/usr/lib/pymodules/python2.6/jsonschema/validators.pyc in check_schema(cls, schema)\n     74         def check_schema(cls, schema):\n     75             for error in cls(cls.META_SCHEMA).iter_errors(schema):\n---> 76                 raise SchemaError.create_from(error)\n     77\n     78         def iter_errors(self, instance, _schema=None):\n\nSchemaError: False is not of type u'array'\n\nFailed validating u'type' in schema[u'properties'][u'required']:\n    {u'items': {u'type': u'string'},\n     u'minItems': 1,\n     u'type': u'array',\n     u'uniqueItems': True}\n\nOn instance[u'required']:\n    False\n```\n\nIt looks like `swagger_spec` can not be directly treated as `json_schema` to validate the request.\n\nOn removing `required` field from the spec, and retrying gives:\n\n```\nValidationError: ['available'] is not one of [u'available', u'pending', u'sold']\n\nFailed validating u'enum' in schema:\n    {u'collectionFormat': u'multi',\n     u'default': u'available',\n     u'description': u'Status values that need to be considered for filter',\n     u'enum': [u'available', u'pending', u'sold'],\n     u'in': u'query',\n     u'items': {u'type': u'string'},\n     u'name': u'status',\n     u'type': u'array'}\n\nOn instance:\n    ['available']\n```\n\nIn other words, `jsonschema.validate` will not work in these cases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/120", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/120/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/120/events", "html_url": "https://github.com/Yelp/bravado/issues/120", "id": 60890951, "node_id": "MDU6SXNzdWU2MDg5MDk1MQ==", "number": 120, "title": "Refactor `HttpClient` and `HttpFuture`", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Yelp/bravado/milestones/2", "html_url": "https://github.com/Yelp/bravado/milestone/2", "labels_url": "https://api.github.com/repos/Yelp/bravado/milestones/2/labels", "id": 936058, "node_id": "MDk6TWlsZXN0b25lOTM2MDU4", "number": 2, "title": "Swagger 2.0 Support", "description": "Full support for the Swagger 2.0 specification", "creator": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "open", "created_at": "2015-01-15T00:47:20Z", "updated_at": "2015-10-14T15:26:32Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2015-03-12T20:10:44Z", "updated_at": "2015-03-28T22:07:13Z", "closed_at": "2015-03-28T22:07:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Refactor `bravado/mapping/operation.py` such that `response_future` is all done by specific `HttpClient` and we can get rid of type checking. Refer #117 comments for details.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/118", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/118/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/118/events", "html_url": "https://github.com/Yelp/bravado/issues/118", "id": 60710458, "node_id": "MDU6SXNzdWU2MDcxMDQ1OA==", "number": 118, "title": "client timeouts when response is 204 status code", "user": {"login": "acoover", "id": 606226, "node_id": "MDQ6VXNlcjYwNjIyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/606226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoover", "html_url": "https://github.com/acoover", "followers_url": "https://api.github.com/users/acoover/followers", "following_url": "https://api.github.com/users/acoover/following{/other_user}", "gists_url": "https://api.github.com/users/acoover/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoover/subscriptions", "organizations_url": "https://api.github.com/users/acoover/orgs", "repos_url": "https://api.github.com/users/acoover/repos", "events_url": "https://api.github.com/users/acoover/events{/privacy}", "received_events_url": "https://api.github.com/users/acoover/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-03-11T18:52:33Z", "updated_at": "2015-03-12T20:05:08Z", "closed_at": "2015-03-12T20:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This only occurs for swaggerpy clients that use the AsynchronousHttpClient\n\nThe response is being returned and raising an crochet._eventloop.TimeoutError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/111", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/111/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/111/events", "html_url": "https://github.com/Yelp/bravado/issues/111", "id": 59981977, "node_id": "MDU6SXNzdWU1OTk4MTk3Nw==", "number": 111, "title": "Add acceptance test for \"accept unknown fields in response\"", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Yelp/bravado/milestones/2", "html_url": "https://github.com/Yelp/bravado/milestone/2", "labels_url": "https://api.github.com/repos/Yelp/bravado/milestones/2/labels", "id": 936058, "node_id": "MDk6TWlsZXN0b25lOTM2MDU4", "number": 2, "title": "Swagger 2.0 Support", "description": "Full support for the Swagger 2.0 specification", "creator": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "open", "created_at": "2015-01-15T00:47:20Z", "updated_at": "2015-10-14T15:26:32Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2015-03-05T17:05:06Z", "updated_at": "2015-10-14T15:26:32Z", "closed_at": "2015-10-14T15:26:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If the client receives extra data in the response, it should not raise an error.  A service should be able to add extra fields to its response object without having to do a api version bump, as long as the old fields are unmodified.\n\nThis has the potential to create a lot of failures. I don't believe there is a test for this in `swagger-py`, but we should verify it works correct in `bravado` before release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/109", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/109/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/109/events", "html_url": "https://github.com/Yelp/bravado/issues/109", "id": 59713418, "node_id": "MDU6SXNzdWU1OTcxMzQxOA==", "number": 109, "title": "Error with list handling in latest version", "user": {"login": "heathvini", "id": 3279529, "node_id": "MDQ6VXNlcjMyNzk1Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3279529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heathvini", "html_url": "https://github.com/heathvini", "followers_url": "https://api.github.com/users/heathvini/followers", "following_url": "https://api.github.com/users/heathvini/following{/other_user}", "gists_url": "https://api.github.com/users/heathvini/gists{/gist_id}", "starred_url": "https://api.github.com/users/heathvini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heathvini/subscriptions", "organizations_url": "https://api.github.com/users/heathvini/orgs", "repos_url": "https://api.github.com/users/heathvini/repos", "events_url": "https://api.github.com/users/heathvini/events{/privacy}", "received_events_url": "https://api.github.com/users/heathvini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-03-03T22:03:17Z", "updated_at": "2015-03-05T23:27:11Z", "closed_at": "2015-03-05T23:27:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently we use swagger-py to make a call with params like the following:\n\n``` python\nparam = {\n            'q': prefix.encode('utf-8'),\n            'recent_locations': [location.encode('utf-8')\n                                 for location in recent_locations],\n        }\n```\n\nwhere each location is a string like \"San Francisco, CA\"\n\nOn the service side we get the recent_locations with the following:\n\n``` python\nrecent_locations = request.params.getall('recent_locations')\n```\n\nAlso note that our api docs for this parameter look like:\n\n```\n{\n    \"name\": \"recent_locations\",\n    \"description\": \"recent locations from RECENT_LOCATIONS cookie\",\n    \"type\": \"string\",\n    \"paramType\": \"query\",\n    \"required\": false\n},\n```\n\nThis has worked fine for us up to version 0.7.2. However, after bumping to 0.7.3+ we get an error whenever the service endpoint is called with a message:\n\n\"dictionary update sequence element #0 has length 16; 2 is required\"\n\nThis must have been caused by how swagger-py handles / encodes lists changing between 0.7.2 and 0.7.3 or 0.7.4\n\nSee https://jira.yelpcorp.com/browse/SUGGEST-284 for more context and a full stack trace.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/108", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/108/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/108/events", "html_url": "https://github.com/Yelp/bravado/issues/108", "id": 59483938, "node_id": "MDU6SXNzdWU1OTQ4MzkzOA==", "number": 108, "title": "handle_response_errors swallows stacktrace", "user": {"login": "laucia", "id": 1099964, "node_id": "MDQ6VXNlcjEwOTk5NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1099964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laucia", "html_url": "https://github.com/laucia", "followers_url": "https://api.github.com/users/laucia/followers", "following_url": "https://api.github.com/users/laucia/following{/other_user}", "gists_url": "https://api.github.com/users/laucia/gists{/gist_id}", "starred_url": "https://api.github.com/users/laucia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laucia/subscriptions", "organizations_url": "https://api.github.com/users/laucia/orgs", "repos_url": "https://api.github.com/users/laucia/repos", "events_url": "https://api.github.com/users/laucia/events{/privacy}", "received_events_url": "https://api.github.com/users/laucia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 118590256, "node_id": "MDU6TGFiZWwxMTg1OTAyNTY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/good%20to%20have", "name": "good to have", "color": "d4c5f9", "default": false, "description": null}, {"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-02T13:57:46Z", "updated_at": "2015-04-01T22:40:21Z", "closed_at": "2015-04-01T22:40:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`/swaggerpy/response.py#handle_response_errors` is not preserving the stacktrace when reraising the errors, making debugging difficult. \n\nMoving to the 3 parameters version of raise would solve this :\n\n```\nif hasattr(e, 'response') and hasattr(e.response, 'text'):\n        ....\n\nexc_info = sys.exc_info()\nraise sys.exc_info[0], e.args, sys.exc_info[2]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/100", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/100/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/100/events", "html_url": "https://github.com/Yelp/bravado/issues/100", "id": 55507286, "node_id": "MDU6SXNzdWU1NTUwNzI4Ng==", "number": 100, "title": "Inconsistent exceptions", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178079, "node_id": "MDU6TGFiZWwxOTExNzgwNzk=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bravado", "name": "bravado", "color": "5319e7", "default": false, "description": null}, {"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-01-26T16:56:52Z", "updated_at": "2015-04-01T22:40:21Z", "closed_at": "2015-04-01T22:40:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We've observed that the `SynchronousHttpClient` and `AsynchronousHttpClient` raise different exceptions  (`requests.exceptions.HTTPError` vs `swaggerpy.exception.HTTPError`).\n\nWe need to ensure that all exceptions at least have the same base class, regardless of client implementation.\n\nWe may be able to wait for sprockets, but we should still address this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/96", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/96/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/96/events", "html_url": "https://github.com/Yelp/bravado/issues/96", "id": 55326589, "node_id": "MDU6SXNzdWU1NTMyNjU4OQ==", "number": 96, "title": "Fix key for `get_client(...)` caching", "user": {"login": "florian-hartl", "id": 1364386, "node_id": "MDQ6VXNlcjEzNjQzODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1364386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florian-hartl", "html_url": "https://github.com/florian-hartl", "followers_url": "https://api.github.com/users/florian-hartl/followers", "following_url": "https://api.github.com/users/florian-hartl/following{/other_user}", "gists_url": "https://api.github.com/users/florian-hartl/gists{/gist_id}", "starred_url": "https://api.github.com/users/florian-hartl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florian-hartl/subscriptions", "organizations_url": "https://api.github.com/users/florian-hartl/orgs", "repos_url": "https://api.github.com/users/florian-hartl/repos", "events_url": "https://api.github.com/users/florian-hartl/events{/privacy}", "received_events_url": "https://api.github.com/users/florian-hartl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266874, "node_id": "MDU6TGFiZWwxMDMyNjY4NzQ=", "url": "https://api.github.com/repos/Yelp/bravado/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-01-23T20:09:36Z", "updated_at": "2015-01-26T20:53:50Z", "closed_at": "2015-01-26T20:53:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The client caching seems to be effectively disabled due to the changes introduced in 46a68a433bf106f7f3af113907d2305938bc0243. More specifically, I think that the problem manifests itself in line 65:\n\n```\nkey = repr(args) + repr(kwargs)\n```\n\nFor example, when `get_client(...)` gets called with the kwarg `http_client=AsynchronousHttpClient()`, then the return value of `repr(kwargs)` will include the specific memory address of the AsynchronousHttpClient object:\n'http_client': <swaggerpy.async_http_client.AsynchronousHttpClient object at **0x397ed10**>\n\nTherefore, actually a **unique key** is stored in the cache dict for every `get_client(...)` function call.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/87", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/87/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/87/events", "html_url": "https://github.com/Yelp/bravado/issues/87", "id": 53069031, "node_id": "MDU6SXNzdWU1MzA2OTAzMQ==", "number": 87, "title": "Improve swaggerpy performance", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 103266876, "node_id": "MDU6TGFiZWwxMDMyNjY4NzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2014-12-29T20:26:15Z", "updated_at": "2015-03-03T21:28:47Z", "closed_at": "2015-03-03T21:28:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're seeing that building the client for large APIs (~30 api docs) can be very slow (900ms!).  This ticket is to track some possible improvements.\n\nFrom the profile:\n1. making requests for documents is ~700ms. We should do these async and all at once\n2. `create_model_docstring()` is 15ms, which is significant, and is only going to be used in very rare situations. It would be great to find a way to avoid this time, maybe with an optional parameter to enable them?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/83", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/83/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/83/events", "html_url": "https://github.com/Yelp/bravado/issues/83", "id": 52963427, "node_id": "MDU6SXNzdWU1Mjk2MzQyNw==", "number": 83, "title": "Remove raise_with support from SwaggerClient", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-27T18:56:51Z", "updated_at": "2015-01-08T19:27:02Z", "closed_at": "2015-01-08T19:27:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #44 and #45 we added a `raise_with` param to the client. I believe we should remove support for this param:\n- it can be handled without any code in swagger-py (see below)\n- it's an attribute that gets added to the http_client, but it not actually part of the class. This makes it mutable, and we would run into errors like those we addressed in #68\n\nInstead we can provide this (either as part of swagger-py or in documentation):\n\n``` python\nclass ErrorHandler(object):\n\n    def __init__(self, client, handler):\n        self.client = client\n        self.handler = handler\n\n    def __getattr__(self, name):\n        def operation(*args, **kwargs):\n            try:\n                return getattr(self.swagger_client, name)(*args, **kwargs)\n            exception Exception as e:\n                self.handler(name, e)\n\nclient = ErrorHandler(SwaggerClient(...), my_error_handler)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado/issues/81", "repository_url": "https://api.github.com/repos/Yelp/bravado", "labels_url": "https://api.github.com/repos/Yelp/bravado/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado/issues/81/comments", "events_url": "https://api.github.com/repos/Yelp/bravado/issues/81/events", "html_url": "https://github.com/Yelp/bravado/issues/81", "id": 52767498, "node_id": "MDU6SXNzdWU1Mjc2NzQ5OA==", "number": 81, "title": "Lists aren't handled properly for query/path/header params", "user": {"login": "bpicolo", "id": 2424701, "node_id": "MDQ6VXNlcjI0MjQ3MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2424701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpicolo", "html_url": "https://github.com/bpicolo", "followers_url": "https://api.github.com/users/bpicolo/followers", "following_url": "https://api.github.com/users/bpicolo/following{/other_user}", "gists_url": "https://api.github.com/users/bpicolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpicolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpicolo/subscriptions", "organizations_url": "https://api.github.com/users/bpicolo/orgs", "repos_url": "https://api.github.com/users/bpicolo/repos", "events_url": "https://api.github.com/users/bpicolo/events{/privacy}", "received_events_url": "https://api.github.com/users/bpicolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 191178176, "node_id": "MDU6TGFiZWwxOTExNzgxNzY=", "url": "https://api.github.com/repos/Yelp/bravado/labels/swaggerpy12", "name": "swaggerpy12", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-23T19:22:52Z", "updated_at": "2015-06-04T18:46:53Z", "closed_at": "2015-06-04T18:46:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#524-parameter-object\n\nFirst, we should care about the allowMultiple flag. In addition, we should convert arrays to comma separated lists only in these correct circumstances.\n", "performed_via_github_app": null, "score": 1.0}]}