{"total_count": 555, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1104", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1104/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1104/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1104/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1104", "id": 680034433, "node_id": "MDU6SXNzdWU2ODAwMzQ0MzM=", "number": 1104, "title": "Genetic Optimization details", "user": {"login": "hanshupe", "id": 10911473, "node_id": "MDQ6VXNlcjEwOTExNDcz", "avatar_url": "https://avatars3.githubusercontent.com/u/10911473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanshupe", "html_url": "https://github.com/hanshupe", "followers_url": "https://api.github.com/users/hanshupe/followers", "following_url": "https://api.github.com/users/hanshupe/following{/other_user}", "gists_url": "https://api.github.com/users/hanshupe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanshupe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanshupe/subscriptions", "organizations_url": "https://api.github.com/users/hanshupe/orgs", "repos_url": "https://api.github.com/users/hanshupe/repos", "events_url": "https://api.github.com/users/hanshupe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanshupe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T08:05:51Z", "updated_at": "2020-08-17T18:57:54Z", "closed_at": "2020-08-17T18:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a few questions regarding the parameters of the genetic algorithm which are not answered in the doc:\r\n\r\n1) What if mutation_rate and crossover_rate don't sum up to 1, is the rest filled up with new random genoms?\r\n2) What exactly is the offsping_size doing?\r\n3) Which mutation operators are applied: for example if there is a parameter to optimize between 0-100, is it mutated randomly or by multiplying the current solution with a random factor (e.g. 0.8-1.2)?\r\n\r\nBackground to my questions is: my optimization gets stuck in local minima quite fast: it converges too fast, different random seeds leed to quite different optimization results after it converges.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1102", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1102/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1102/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1102", "id": 678530612, "node_id": "MDU6SXNzdWU2Nzg1MzA2MTI=", "number": 1102, "title": "Use GPU when working with TPOT-NN", "user": {"login": "sword134", "id": 14058522, "node_id": "MDQ6VXNlcjE0MDU4NTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14058522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sword134", "html_url": "https://github.com/sword134", "followers_url": "https://api.github.com/users/sword134/followers", "following_url": "https://api.github.com/users/sword134/following{/other_user}", "gists_url": "https://api.github.com/users/sword134/gists{/gist_id}", "starred_url": "https://api.github.com/users/sword134/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sword134/subscriptions", "organizations_url": "https://api.github.com/users/sword134/orgs", "repos_url": "https://api.github.com/users/sword134/repos", "events_url": "https://api.github.com/users/sword134/events{/privacy}", "received_events_url": "https://api.github.com/users/sword134/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-08-13T15:31:11Z", "updated_at": "2020-08-15T18:28:15Z", "closed_at": "2020-08-14T23:58:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "How does one correctly use a cuda enabled GPU with the TPOT-NN configuration? \r\nDoes the TPOT-NN configuration use a NN if you specify the code as follows or does one need to specify a template as well?\r\n\r\n```\r\ntpot = TPOTClassifier(generations=None, population_size=250, verbosity=2, max_time_mins=60, n_jobs=-1, config_dict=\"TPOT NN\")\r\ntpot.fit(X_train, y_train)\r\nprint(tpot.score(X_val, y_val))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1095", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1095/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1095/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1095/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1095", "id": 657061729, "node_id": "MDU6SXNzdWU2NTcwNjE3Mjk=", "number": 1095, "title": "Install and Run TPOT in Google Colab WITH Dask Enabled????", "user": {"login": "windowshopr", "id": 40477419, "node_id": "MDQ6VXNlcjQwNDc3NDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/40477419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windowshopr", "html_url": "https://github.com/windowshopr", "followers_url": "https://api.github.com/users/windowshopr/followers", "following_url": "https://api.github.com/users/windowshopr/following{/other_user}", "gists_url": "https://api.github.com/users/windowshopr/gists{/gist_id}", "starred_url": "https://api.github.com/users/windowshopr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windowshopr/subscriptions", "organizations_url": "https://api.github.com/users/windowshopr/orgs", "repos_url": "https://api.github.com/users/windowshopr/repos", "events_url": "https://api.github.com/users/windowshopr/events{/privacy}", "received_events_url": "https://api.github.com/users/windowshopr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T05:01:38Z", "updated_at": "2020-07-16T01:43:33Z", "closed_at": "2020-07-16T01:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run a TPOT session in a Google Colab notebook, but running into some issues regarding \"dask\", and I think it has to do with the way I'm pip installing the packages.\r\n\r\n## Context of the issue\r\n\r\nBasically, using a Python 3.6 environment in Google Colab, I'd like to run a TPOT Classification session WITH Dask enabled, but I keep getting issues with this error:\r\n\r\n`ImportError: 'use_dask' requires the optional dask and dask-ml depedencies.\r\ncannot import name 'future_set_exc_info'`\r\n\r\n...even though I have confirmed that both dask and dask-ml are successfully installed and in the dist-packages folder from. I don't think this is a TPOT issue, but I'm opening it here in the hopes that this will leave some documentation that others can use for the successful install of the dependencies required (in the appropriate order, and what versions of each dependency need to be there).\r\n\r\nBasically, after a few hours of trying different combinations of pip installs, I've landed on:\r\n\r\n```\r\n!pip install fsspec xgboost\r\n%pip install -U distributed scikit-learn dask-ml dask-glm sklearn\r\n%pip install \"tornado>=5\"\r\n%pip install \"dask[complete]\"\r\n!pip install TPOT\r\n```\r\n\r\nThe Tornado upgrade and dask[complete] are things I was trying from some other similar issues I've found on GitHub in the Dask pages, but I am throwing in the towel. Can someone confirm a working install of TPOT Classification WITH the `use_dask=True` parameter, and what versions of each dependency are used in the environment?\r\n\r\nA simple reproducible example to run in a new Google Colab 3.6 environment would look like the following. If asked, I can paste the full traceback, but whoever runs this should be able to see it for themselves. Thanks!\r\n\r\n```\r\n!pip install sklearn fsspec xgboost\r\n%pip install -U distributed scikit-learn dask-ml dask-glm\r\n%pip install \"tornado>=5\" \r\n%pip install \"dask[complete]\"\r\n!pip install TPOT\r\n\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\nimport numpy as np\r\n\r\niris = load_iris()\r\nX_train, X_test, y_train, y_test = train_test_split(iris.data.astype(np.float64),\r\n    iris.target.astype(np.float64), train_size=0.75, test_size=0.25, random_state=42)\r\n\r\ntpot = TPOTClassifier(generations=5, population_size=50, verbosity=2, random_state=42, use_dask=True)\r\ntpot.fit(X_train, y_train)\r\nprint(tpot.score(X_test, y_test))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1091", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1091/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1091/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1091/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1091", "id": 655670671, "node_id": "MDU6SXNzdWU2NTU2NzA2NzE=", "number": 1091, "title": "Docs search is not working on https://epistasislab.github.io/tpot/", "user": {"login": "Anselmoo", "id": 13209783, "node_id": "MDQ6VXNlcjEzMjA5Nzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/13209783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anselmoo", "html_url": "https://github.com/Anselmoo", "followers_url": "https://api.github.com/users/Anselmoo/followers", "following_url": "https://api.github.com/users/Anselmoo/following{/other_user}", "gists_url": "https://api.github.com/users/Anselmoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anselmoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anselmoo/subscriptions", "organizations_url": "https://api.github.com/users/Anselmoo/orgs", "repos_url": "https://api.github.com/users/Anselmoo/repos", "events_url": "https://api.github.com/users/Anselmoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Anselmoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T08:54:50Z", "updated_at": "2020-07-13T15:35:01Z", "closed_at": "2020-07-13T15:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The search engine on [https://epistasislab.github.io/tpot/](https://epistasislab.github.io/tpot/) is not working, so I have to use google or Bing to find `tpot`-references.\r\n\r\n## Context of the issue\r\n\r\nDocumentary: If I want to look for reference snippet and docs the [official page](https://epistasislab.github.io/tpot/) doesn't allow me to search for results.\r\n\r\n## Process to reproduce the issue\r\n\r\n1. Looking for *regression*  with reference page [https://epistasislab.github.io/tpot/api/](https://epistasislab.github.io/tpot/api/)\r\n2. No results via: [https://epistasislab.github.io/tpot/search.html?q=regression](https://epistasislab.github.io/tpot/search.html?q=regression)\r\n3.  [Google](https://www.google.com/search?safe=active&rlz=1C1GCEU_deLI906LI906&sxsrf=ALeKk01xx17opjCOkiPSK6aSBIBAPBv10A%3A1594630015675&ei=fx8MX5HYKKaZk74PxoOe4Ao&q=tpot+regressor&oq=tpot+reg&gs_lcp=CgZwc3ktYWIQAxgAMgIIADICCAAyAggAMgIIADICCAAyBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeOgQIABBHOgQIIxAnOgcIABAUEIcCUJoJWPwWYOQqaABwAngAgAFYiAGEApIBATOYAQCgAQGqAQdnd3Mtd2l6&sclient=psy-ab) get [reference](https://epistasislab.github.io/tpot/api/) as second result in seconds\r\n\r\n## Expected result\r\n\r\n [https://epistasislab.github.io/tpot/search.html?q=regression](https://epistasislab.github.io/tpot/search.html?q=regression) brings me to  [https://epistasislab.github.io/tpot/api/](https://epistasislab.github.io/tpot/api/)\r\n\r\n## Current result\r\n\r\n[Frozen search page](https://epistasislab.github.io/tpot/search.html?q=regression)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1089", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1089/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1089/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1089/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1089", "id": 650844505, "node_id": "MDU6SXNzdWU2NTA4NDQ1MDU=", "number": 1089, "title": "Visulization", "user": {"login": "JDface", "id": 11360095, "node_id": "MDQ6VXNlcjExMzYwMDk1", "avatar_url": "https://avatars2.githubusercontent.com/u/11360095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JDface", "html_url": "https://github.com/JDface", "followers_url": "https://api.github.com/users/JDface/followers", "following_url": "https://api.github.com/users/JDface/following{/other_user}", "gists_url": "https://api.github.com/users/JDface/gists{/gist_id}", "starred_url": "https://api.github.com/users/JDface/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JDface/subscriptions", "organizations_url": "https://api.github.com/users/JDface/orgs", "repos_url": "https://api.github.com/users/JDface/repos", "events_url": "https://api.github.com/users/JDface/events{/privacy}", "received_events_url": "https://api.github.com/users/JDface/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-04T07:29:09Z", "updated_at": "2020-07-06T13:43:19Z", "closed_at": "2020-07-04T20:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you please show some example using charts, Thank you for doing so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1077", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1077/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1077/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1077", "id": 631710690, "node_id": "MDU6SXNzdWU2MzE3MTA2OTA=", "number": 1077, "title": "multiclass ROCAUC with TPOTClassifier?", "user": {"login": "Lamiane", "id": 2608272, "node_id": "MDQ6VXNlcjI2MDgyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2608272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lamiane", "html_url": "https://github.com/Lamiane", "followers_url": "https://api.github.com/users/Lamiane/followers", "following_url": "https://api.github.com/users/Lamiane/following{/other_user}", "gists_url": "https://api.github.com/users/Lamiane/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lamiane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lamiane/subscriptions", "organizations_url": "https://api.github.com/users/Lamiane/orgs", "repos_url": "https://api.github.com/users/Lamiane/repos", "events_url": "https://api.github.com/users/Lamiane/events{/privacy}", "received_events_url": "https://api.github.com/users/Lamiane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-05T15:57:01Z", "updated_at": "2020-06-08T16:35:00Z", "closed_at": "2020-06-08T16:35:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [TPOT documentation](https://epistasislab.github.io/tpot/api/#classification) only mentions 'roc_auc' among valid  built-in scoring functions of the ROCAUC family. However, it cannot be used for multiclass classification.\r\n\r\n## Context of the issue\r\n\r\nSince TPOT makes use of sklearn.metrics.SCORERS it should be possible to use multiclass ROCAUC options, namely: roc_auc_ovr, roc_auc_ovo, roc_auc_ovr_weighted, and roc_auc_ovo_weighted.\r\n\r\nIndeed, the following code suggests that it works:\r\n\r\n```python\r\nfrom sklearn.datasets import load_iris\r\nimport sklearn.metrics\r\nfrom tpot import TPOTClassifier\r\n\r\ndata = load_iris()\r\nx = data['data']\r\ny = data['target']\r\n\r\nmodel = TPOTClassifier(max_time_mins=2, scoring='roc_auc_ovr_weighted')\r\nmodel.fit(x, y)\r\n\r\ntpot_score = model.score(x, y)\r\n\r\npreds = model.predict_proba(x)\r\nsklearn_score = sklearn.metrics.roc_auc_score(y, preds, multi_class='ovr', average='weighted')\r\nprint(tpot_score==sklearn_score)\r\n```\r\n```output: True```\r\n\r\n## Question\r\nAre multiclass ROCAUC metrics valid to use with TPOT and just not mentioned in the documentation or are they not valid and should not be used?\r\n\r\n## Possible fix\r\nAdding roc_auc_ovr, roc_auc_ovo, roc_auc_ovr_weighted, and roc_auc_ovo_weighted to docs or warning not to use them\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1075", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1075/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1075/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1075", "id": 627612238, "node_id": "MDU6SXNzdWU2Mjc2MTIyMzg=", "number": 1075, "title": "New undeclared dependency on pytorch?", "user": {"login": "bollwyvl", "id": 45380, "node_id": "MDQ6VXNlcjQ1Mzgw", "avatar_url": "https://avatars2.githubusercontent.com/u/45380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bollwyvl", "html_url": "https://github.com/bollwyvl", "followers_url": "https://api.github.com/users/bollwyvl/followers", "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}", "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions", "organizations_url": "https://api.github.com/users/bollwyvl/orgs", "repos_url": "https://api.github.com/users/bollwyvl/repos", "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}", "received_events_url": "https://api.github.com/users/bollwyvl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-30T00:40:54Z", "updated_at": "2020-06-02T00:36:11Z", "closed_at": "2020-06-01T22:07:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Congratulations on the release!It looks like as of `0.11.4`, importing `tpot` is trying to bring in `torch`.\r\n\r\nWhile I see it was added to `requirements.txt`, it would need adding to `install_requires` in `setup.py`, as `pip` doesn't really look at anything else but that file (well, and `setup.cfg` and `pyproject.toml`... but i digress...)\r\n\r\n**But**, to be frank, there's a whole raft of complexity that comes along with a hard dependency on torch, and as a downstream maintainer, and occasional instructor of using `tpot`, I'd selfishly **strongly** prefer it be hidden behind an `extra` like some of the other heavyweight dependencies (e.g. `xgboost`, `dask`) unless it's _really_ part of the core `tpot` functionality now. \r\n\r\nIndeed, to that end, as conda-forge only ships `pytorch-cpu`, and I generally can't recommend using `pytorch-cpu` (from conda-forge, [pytorch](https://anaconda.org/pytorch) or otherwise) for getting any real work done (other than testing), the documentation would likely need to be updated to suggest using `-c pytorch -c defaults -c conda-forge tpot pytorch` to get a useful setup... but then, I haven't been able to test that hypothesis yet! At any rate, we _would_ be able to support a hard pin, with [`run_constrained`](https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#run-constrained)... but that can be an unsatisfying and bewildering user experience if they didn't even _know_ `tpot` used `torch` until this patch release!\r\n\r\n## Context of the issue\r\n\r\nDownstream pull request:\r\n- https://github.com/conda-forge/tpot-feedstock/pull/25#issuecomment-636078946\r\n\r\nCI screesnshot (with link to log):\r\n[![Screenshot from 2020-05-29 20-18-06](https://user-images.githubusercontent.com/45380/83314669-90fa5c00-a1e9-11ea-84a0-0ee3078d5a30.png)](https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=168375&view=logs&j=1bf226d3-0e2f-52d8-fa93-7d9e633347b3&t=ec8d466d-e3b4-5115-4f06-222398f91e6c&l=719\r\n)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1072", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1072/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1072/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1072/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1072", "id": 627218366, "node_id": "MDU6SXNzdWU2MjcyMTgzNjY=", "number": 1072, "title": "gp_deap does not print to log_file ", "user": {"login": "adrienhenry", "id": 4301713, "node_id": "MDQ6VXNlcjQzMDE3MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4301713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrienhenry", "html_url": "https://github.com/adrienhenry", "followers_url": "https://api.github.com/users/adrienhenry/followers", "following_url": "https://api.github.com/users/adrienhenry/following{/other_user}", "gists_url": "https://api.github.com/users/adrienhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrienhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrienhenry/subscriptions", "organizations_url": "https://api.github.com/users/adrienhenry/orgs", "repos_url": "https://api.github.com/users/adrienhenry/repos", "events_url": "https://api.github.com/users/adrienhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/adrienhenry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-29T12:02:07Z", "updated_at": "2020-05-29T15:33:38Z", "closed_at": "2020-05-29T15:33:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have found a behavior that was unexpected to me and I do not know if it should be considered as a bug.\r\n\r\nWhen I set the verbosity to 2 and specify a log_file, only the pbar is printed into the file. \r\nThe  `\"Generation {0} - Current best internal CV score: {1}\"` is printed to the stdout.\r\n\r\nReplacing the following line:\r\nhttps://github.com/EpistasisLab/tpot/blob/8142192e55306291226a5244a9b31e3ecd8f1bb0/tpot/gp_deap.py#L256\r\nby \r\n```python\r\npbar.fp.write('Generation {0} - Current best internal CV score: {1}'.format(gen, high_score))\r\n```\r\nwould do what I expect but I do not know if that would be something you are willing to implement.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1068", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1068/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1068/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1068", "id": 619146108, "node_id": "MDU6SXNzdWU2MTkxNDYxMDg=", "number": 1068, "title": "TPOT Regressor not recognizing training data", "user": {"login": "ShaanKohli", "id": 60670209, "node_id": "MDQ6VXNlcjYwNjcwMjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/60670209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShaanKohli", "html_url": "https://github.com/ShaanKohli", "followers_url": "https://api.github.com/users/ShaanKohli/followers", "following_url": "https://api.github.com/users/ShaanKohli/following{/other_user}", "gists_url": "https://api.github.com/users/ShaanKohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShaanKohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShaanKohli/subscriptions", "organizations_url": "https://api.github.com/users/ShaanKohli/orgs", "repos_url": "https://api.github.com/users/ShaanKohli/repos", "events_url": "https://api.github.com/users/ShaanKohli/events{/privacy}", "received_events_url": "https://api.github.com/users/ShaanKohli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T17:59:35Z", "updated_at": "2020-05-21T13:25:29Z", "closed_at": "2020-05-21T13:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to run the TPOTRegressor example from the TPOT documentation, it seems not to be running. I have tried looking into the source code and trying with different data but it seems like a consistent issue. I am not using a conda environment but google colab.\r\n\r\n## Code\r\n\r\nfrom tpot import TPOTRegressor\r\nfrom sklearn.datasets import load_boston\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nhousing = load_boston()\r\nX_train, X_test, y_train, y_test = train_test_split(housing.data, housing.target,train_size=0.75, test_size=0.25, random_state=42)\r\ntpot = TPOTRegressor(generations=5, population_size=50, verbosity=2, random_state=42)\r\ntpot.fit(X_train, y_train)\r\nprint(tpot.score(X_test, y_test))\r\n\r\n## Error\r\n\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-10-6fb4b1fa5f6f> in <module>()\r\n      X_train, X_test, y_train, y_test = train_test_split(housing.data, housing.target,train_size=0.75, test_size=0.25, random_state=42)\r\n      tpot = TPOTRegressor(generations=5, population_size=50, verbosity=2, random_state=42)\r\n----> tpot.fit(X_train, y_train)\r\n      print(tpot.score(X_test, y_test))\r\n\r\n/usr/local/lib/python3.6/dist-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n             features, target = self._check_dataset(features, target, sample_weight)\r\n-->          self._init_pretest(features, target)\r\n   \r\n           # Randomly collect a subsample of training samples for pipeline optimization process.\r\n\r\n/usr/local/lib/python3.6/dist-packages/tpot/tpot.py in _init_pretest(self, features, target)\r\n     \r\n              \"\"\"\r\n--->         self.pretest_X, _, self.pretest_y, _ = train_test_split(X, y, random_state=self.random_state,\r\n                                                                 test_size=None, train_size=min(50,int(0.9*features.shape[0])))\r\n\r\nNameError: name 'X' is not defined\r\n\r\n<img width=\"1158\" alt=\"TpotRegressorError\" src=\"https://user-images.githubusercontent.com/60670209/82081274-04fa1780-96b4-11ea-9294-52f51d23c195.png\">\r\n\r\nhttps://colab.research.google.com/drive/1xnxMps3x4XQDIwCycl1VQs5oq2ZFv4J5?usp=sharing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1066", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1066/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1066/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1066", "id": 617858695, "node_id": "MDU6SXNzdWU2MTc4NTg2OTU=", "number": 1066, "title": "TPOTRegressor error", "user": {"login": "vumichien", "id": 31467068, "node_id": "MDQ6VXNlcjMxNDY3MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/31467068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vumichien", "html_url": "https://github.com/vumichien", "followers_url": "https://api.github.com/users/vumichien/followers", "following_url": "https://api.github.com/users/vumichien/following{/other_user}", "gists_url": "https://api.github.com/users/vumichien/gists{/gist_id}", "starred_url": "https://api.github.com/users/vumichien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vumichien/subscriptions", "organizations_url": "https://api.github.com/users/vumichien/orgs", "repos_url": "https://api.github.com/users/vumichien/repos", "events_url": "https://api.github.com/users/vumichien/events{/privacy}", "received_events_url": "https://api.github.com/users/vumichien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-14T01:33:52Z", "updated_at": "2020-05-14T13:24:26Z", "closed_at": "2020-05-14T13:24:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is code based on tpot.py. I think something wrong here.\r\n```\r\nclass TPOTRegressor(TPOTBase):\r\n    \"\"\"TPOT estimator for regression problems.\"\"\"\r\n\r\n    scoring_function = 'neg_mean_squared_error'  # Regression scoring\r\n    default_config_dict = regressor_config_dict  # Regression dictionary\r\n    classification = False\r\n    regression = True\r\n\r\n    def _init_pretest(self, features,target):\r\n        \"\"\"Set the sample of data used to verify pipelines work with the passed data set\r\n\r\n        \"\"\"\r\n        self.pretest_X, _, self.pretest_y, _ = train_test_split(X, y, random_state=self.random_state,\r\n                                                                test_size=None, train_size=min(50,int(0.9*features.shape[0])))\r\n```\r\nWhen I run TPOTRegressor, it throws the error **NameError: name 'X' is not defined**. I think X and y in \r\n```\r\n train_test_split(X, y, random_state=self.random_state, test_size=None, train_size=min(50,int(0.9*features.shape[0])))\r\n```\r\nshould be **features** and **target.** Please help me check. Thank you\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1064", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1064/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1064/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1064", "id": 617396727, "node_id": "MDU6SXNzdWU2MTczOTY3Mjc=", "number": 1064, "title": "sklearn", "user": {"login": "AndrewChung-GitHub", "id": 40729655, "node_id": "MDQ6VXNlcjQwNzI5NjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/40729655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewChung-GitHub", "html_url": "https://github.com/AndrewChung-GitHub", "followers_url": "https://api.github.com/users/AndrewChung-GitHub/followers", "following_url": "https://api.github.com/users/AndrewChung-GitHub/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewChung-GitHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewChung-GitHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewChung-GitHub/subscriptions", "organizations_url": "https://api.github.com/users/AndrewChung-GitHub/orgs", "repos_url": "https://api.github.com/users/AndrewChung-GitHub/repos", "events_url": "https://api.github.com/users/AndrewChung-GitHub/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewChung-GitHub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-13T12:13:44Z", "updated_at": "2020-05-13T12:16:34Z", "closed_at": "2020-05-13T12:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[provide general introduction to the issue and why it is relevant to this repository]\r\n\r\n## Context of the issue\r\n\r\n[provide more detailed introduction to the issue itself and why it is relevant]\r\n\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n\r\n## Process to reproduce the issue\r\n\r\n[ordered list the process to finding and recreating the issue, example below]\r\n\r\n1. User creates TPOT instance\r\n2. User calls TPOT `fit()` function with training data\r\n3. TPOT crashes with a `KeyError` after 5 generations\r\n\r\n## Expected result\r\n\r\n[describe what you would expect to have resulted from this process]\r\n\r\n## Current result\r\n\r\n[describe what you currently experience from this process, and thereby explain the bug]\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1061", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1061/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1061/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1061", "id": 613936728, "node_id": "MDU6SXNzdWU2MTM5MzY3Mjg=", "number": 1061, "title": "XGBoostError: need to call fit or load_model beforehand when try to use dask-distribute with xgboost", "user": {"login": "tarjintor", "id": 12421352, "node_id": "MDQ6VXNlcjEyNDIxMzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/12421352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarjintor", "html_url": "https://github.com/tarjintor", "followers_url": "https://api.github.com/users/tarjintor/followers", "following_url": "https://api.github.com/users/tarjintor/following{/other_user}", "gists_url": "https://api.github.com/users/tarjintor/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarjintor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarjintor/subscriptions", "organizations_url": "https://api.github.com/users/tarjintor/orgs", "repos_url": "https://api.github.com/users/tarjintor/repos", "events_url": "https://api.github.com/users/tarjintor/events{/privacy}", "received_events_url": "https://api.github.com/users/tarjintor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T10:12:18Z", "updated_at": "2020-05-11T08:35:43Z", "closed_at": "2020-05-11T08:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,I am trying to use tpot with dask,here's my code \r\n\r\n```\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.datasets import load_iris,load_digits\r\nfrom sklearn.model_selection import train_test_split\r\nimport numpy as np\r\nimport joblib\r\nfrom dask.distributed import Client, LocalCluster\r\ncluster = LocalCluster()\r\nclient = Client(cluster)\r\nif __name__ == '__main__':\r\n    digits = load_digits()\r\n    X_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target,\r\n                                                        train_size=0.75, test_size=0.25)\r\n    clf = TPOTClassifier(generations=5, population_size=100, cv=5, \r\n                          random_state=42,verbosity=2, \r\n                          use_dask=True,\r\n                          n_jobs=-1\r\n                         )\r\n    with joblib.parallel_backend(\"dask\"):\r\n        clf.fit(X_train, y_train)\r\n```\r\nand I got error \r\n---------------------------------------------------------------------------\r\n```\r\nXGBoostError                              Traceback (most recent call last)\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    710                     verbose=self.verbosity,\r\n--> 711                     per_generation_function=self._check_periodic_pipeline\r\n    712                 )\r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/gp_deap.py in eaMuPlusLambda(population, toolbox, mu, lambda_, cxpb, mutpb, ngen, pbar, stats, halloffame, verbose, per_generation_function)\r\n    226 \r\n--> 227     population[:] = toolbox.evaluate(population)\r\n    228 \r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in _evaluate_individuals(self, population, features, target, sample_weight, groups)\r\n   1307                             partial_wrapped_cross_val_score(sklearn_pipeline=sklearn_pipeline)\r\n-> 1308                             for sklearn_pipeline in sklearn_pipeline_list[chunk_idx:chunk_idx + chunk_size]\r\n   1309                         ]\r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in <listcomp>(.0)\r\n   1307                             partial_wrapped_cross_val_score(sklearn_pipeline=sklearn_pipeline)\r\n-> 1308                             for sklearn_pipeline in sklearn_pipeline_list[chunk_idx:chunk_idx + chunk_size]\r\n   1309                         ]\r\n\r\n/opt/conda/lib/python3.7/site-packages/stopit/utils.py in wrapper(*args, **kwargs)\r\n    144                     # ``result`` may not be assigned below in case of timeout\r\n--> 145                     result = func(*args, **kwargs)\r\n    146                 return result\r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/gp_deap.py in _wrapped_cross_val_score(sklearn_pipeline, features, target, cv, scoring_function, sample_weight, groups, use_dask)\r\n    438             refit=False,\r\n--> 439             error_score=float('-inf'),\r\n    440         )\r\n\r\n/opt/conda/lib/python3.7/site-packages/dask_ml/model_selection/_search.py in build_graph(estimator, cv, scorer, candidate_params, X, y, groups, fit_params, iid, refit, error_score, return_train_score, cache_cv, multimetric)\r\n    152         return_train_score=return_train_score,\r\n--> 153         cache_cv=cache_cv,\r\n    154     )\r\n\r\n/opt/conda/lib/python3.7/site-packages/dask_ml/model_selection/_search.py in build_cv_graph(estimator, cv, scorer, candidate_params, X, y, groups, fit_params, iid, error_score, return_train_score, cache_cv)\r\n    209     main_token = tokenize(\r\n--> 210         normalize_estimator(estimator),\r\n    211         fields,\r\n\r\n/opt/conda/lib/python3.7/site-packages/dask_ml/model_selection/_normalize.py in normalize_estimator(est)\r\n     26     ``BaseEstimator``, we sometimes need to call this function directly.\"\"\"\r\n---> 27     base = [type(est).__name__, normalize_token(est.get_params())]\r\n     28     # fitted attributes: https://github.com/dask/dask-ml/issues/658\r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/base.py in normalize_dict(d)\r\n    668 def normalize_dict(d):\r\n--> 669     return normalize_token(sorted(d.items(), key=str))\r\n    670 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/base.py in normalize_seq(seq)\r\n    683 def normalize_seq(seq):\r\n--> 684     return type(seq).__name__, list(map(normalize_token, seq))\r\n    685 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/base.py in normalize_seq(seq)\r\n    683 def normalize_seq(seq):\r\n--> 684     return type(seq).__name__, list(map(normalize_token, seq))\r\n    685 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/base.py in normalize_seq(seq)\r\n    683 def normalize_seq(seq):\r\n--> 684     return type(seq).__name__, list(map(normalize_token, seq))\r\n    685 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/base.py in normalize_seq(seq)\r\n    683 def normalize_seq(seq):\r\n--> 684     return type(seq).__name__, list(map(normalize_token, seq))\r\n    685 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask/utils.py in __call__(self, arg, *args, **kwargs)\r\n    505         meth = self.dispatch(type(arg))\r\n--> 506         return meth(arg, *args, **kwargs)\r\n    507 \r\n\r\n/opt/conda/lib/python3.7/site-packages/dask_ml/model_selection/_normalize.py in normalize_estimator(est)\r\n     37             try:\r\n---> 38                 val = getattr(est, attr)\r\n     39             except (sklearn.exceptions.NotFittedError, AttributeError):\r\n\r\n/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py in coef_(self)\r\n    714                                  .format(self.booster))\r\n--> 715         b = self.get_booster()\r\n    716         coef = np.array(json.loads(b.get_dump(dump_format='json')[0])['weight'])\r\n\r\n/opt/conda/lib/python3.7/site-packages/xgboost/sklearn.py in get_booster(self)\r\n    270         if self._Booster is None:\r\n--> 271             raise XGBoostError('need to call fit or load_model beforehand')\r\n    272         return self._Booster\r\n\r\nXGBoostError: need to call fit or load_model beforehand\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-de6ca48c53b6> in <module>\r\n      1 import joblib\r\n      2 with joblib.parallel_backend(\"dask\"):\r\n----> 3     clf.fit(X_train, y_train)\r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    740                     # raise the exception if it's our last attempt\r\n    741                     if attempt == (attempts - 1):\r\n--> 742                         raise e\r\n    743             return self\r\n    744 \r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    731                         self._pbar.close()\r\n    732 \r\n--> 733                     self._update_top_pipeline()\r\n    734                     self._summary_of_best_pipeline(features, target)\r\n    735                     # Delete the temporary cache before exiting\r\n\r\n/opt/conda/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    809             # If user passes CTRL+C in initial generation, self._pareto_front (halloffame) shoule be not updated yet.\r\n    810             # need raise RuntimeError because no pipeline has been optimized\r\n--> 811             raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\r\n    812 \r\n    813     def _summary_of_best_pipeline(self, features, target):\r\n\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n```\r\n\r\nAnd I test these cases,all works fine\r\n1.use tpot with dask-distribute,and I delete the xgboost.XGBClassifier part in tpot source code config/classifier.py\r\n2.use tpot with xgboost,but not dask\r\n3.use dask-distribute with dask-xgboost\r\n\r\nSo,my guess is something wrong with \r\ntpot+dask-distribute+xgboost\r\n\r\n------------------------------------------------------\r\nmy versions:\r\npython3.7\r\nTPOT 0.11.1\r\ndask                              2.15.0              \r\ndask-glm                          0.2.0               \r\ndask-ml                           1.4.0               \r\ndask-xgboost                      0.1.10     \r\ndistributed                       2.15.2  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1060", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1060/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1060/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1060", "id": 612918395, "node_id": "MDU6SXNzdWU2MTI5MTgzOTU=", "number": 1060, "title": "balanced Accuracy problem on constant fold", "user": {"login": "franchuterivera", "id": 44504424, "node_id": "MDQ6VXNlcjQ0NTA0NDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/44504424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franchuterivera", "html_url": "https://github.com/franchuterivera", "followers_url": "https://api.github.com/users/franchuterivera/followers", "following_url": "https://api.github.com/users/franchuterivera/following{/other_user}", "gists_url": "https://api.github.com/users/franchuterivera/gists{/gist_id}", "starred_url": "https://api.github.com/users/franchuterivera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franchuterivera/subscriptions", "organizations_url": "https://api.github.com/users/franchuterivera/orgs", "repos_url": "https://api.github.com/users/franchuterivera/repos", "events_url": "https://api.github.com/users/franchuterivera/events{/privacy}", "received_events_url": "https://api.github.com/users/franchuterivera/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T21:53:25Z", "updated_at": "2020-05-13T15:05:41Z", "closed_at": "2020-05-13T15:05:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think there is some room for improvement in the calculation of balanced accuracy in tpot. Seems like for some unlucky fold of one of my runs, all the true/predicted values of the pipeline both came to be zero.\r\n\r\nThis is a scenario tpot cannot handle well, for example:\r\n\r\n>>> from tpot.metrics import balanced_accuracy\r\n>>> import numpy as np\r\n>>> from sklearn.metrics import balanced_accuracy_score\r\n>>> balanced_accuracy_score(np.zeros(100), np.zeros(100))\r\n1.0\r\n>>> balanced_accuracy(np.zeros(100), np.zeros(100))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/chico/work/venv_autosklearn/lib/python3.6/site-packages/tpot/metrics.py\", line 61, in balanced_accuracy\r\n    float(sum((y_true != this_class)))\r\nZeroDivisionError: float division by zero\r\n\r\nMaybe, a query can be asked before dividing by zero, cause tpot just failed in this unlucky scenario. Also, is there an intuition for not moving to sklearn balanced accuracy? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1057", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1057/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1057/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1057", "id": 608513682, "node_id": "MDU6SXNzdWU2MDg1MTM2ODI=", "number": 1057, "title": "Early Stopping Not Working Properly? Maybe?", "user": {"login": "windowshopr", "id": 40477419, "node_id": "MDQ6VXNlcjQwNDc3NDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/40477419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windowshopr", "html_url": "https://github.com/windowshopr", "followers_url": "https://api.github.com/users/windowshopr/followers", "following_url": "https://api.github.com/users/windowshopr/following{/other_user}", "gists_url": "https://api.github.com/users/windowshopr/gists{/gist_id}", "starred_url": "https://api.github.com/users/windowshopr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windowshopr/subscriptions", "organizations_url": "https://api.github.com/users/windowshopr/orgs", "repos_url": "https://api.github.com/users/windowshopr/repos", "events_url": "https://api.github.com/users/windowshopr/events{/privacy}", "received_events_url": "https://api.github.com/users/windowshopr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-28T18:10:42Z", "updated_at": "2020-04-28T20:45:57Z", "closed_at": "2020-04-28T20:45:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have set an integer of 33 in the early stopping function, (and 100 pop size and 100 generations) but my latest TPOT Classification session stopped early after 17 generations. It says it couldn't find an improvement after 33 generations, but if you count the latest (bottom) best score rows, it's at 17?\r\n\r\n```\r\nOptimization Progress: 42%\r\n4200/10100 [1:23:37<2:07:41, 1.30s/pipeline]\r\nGeneration 1 - Current best internal CV score: 0.6865432098765434\r\nGeneration 2 - Current best internal CV score: 0.6865432098765434\r\nGeneration 3 - Current best internal CV score: 0.6865432098765434\r\nGeneration 4 - Current best internal CV score: 0.6865432098765434\r\nGeneration 5 - Current best internal CV score: 0.6913580246913582\r\nGeneration 6 - Current best internal CV score: 0.6913580246913582\r\nGeneration 7 - Current best internal CV score: 0.6913580246913582\r\nGeneration 8 - Current best internal CV score: 0.6913580246913582\r\nGeneration 9 - Current best internal CV score: 0.6964197530864198\r\nGeneration 10 - Current best internal CV score: 0.6964197530864198\r\nGeneration 11 - Current best internal CV score: 0.6964197530864198\r\nGeneration 12 - Current best internal CV score: 0.6964197530864198\r\nGeneration 13 - Current best internal CV score: 0.6964197530864198\r\nGeneration 14 - Current best internal CV score: 0.698888888888889\r\nGeneration 15 - Current best internal CV score: 0.698888888888889\r\nGeneration 16 - Current best internal CV score: 0.7014814814814815\r\nGeneration 17 - Current best internal CV score: 0.7014814814814815\r\nGeneration 18 - Current best internal CV score: 0.7014814814814815\r\nGeneration 19 - Current best internal CV score: 0.7014814814814815\r\nGeneration 20 - Current best internal CV score: 0.7108024691358025\r\nGeneration 21 - Current best internal CV score: 0.7108024691358025\r\nGeneration 22 - Current best internal CV score: 0.7108024691358025\r\nGeneration 23 - Current best internal CV score: 0.7108024691358025\r\nGeneration 24 - Current best internal CV score: 0.7108024691358025\r\nGeneration 25 - Current best internal CV score: 0.7276543209876543\r\nGeneration 26 - Current best internal CV score: 0.7276543209876543\r\nGeneration 27 - Current best internal CV score: 0.7276543209876543\r\nGeneration 28 - Current best internal CV score: 0.7276543209876543\r\nGeneration 29 - Current best internal CV score: 0.7276543209876543\r\nGeneration 30 - Current best internal CV score: 0.7276543209876543\r\nGeneration 31 - Current best internal CV score: 0.7276543209876543\r\nGeneration 32 - Current best internal CV score: 0.7276543209876543\r\nGeneration 33 - Current best internal CV score: 0.7276543209876543\r\nGeneration 34 - Current best internal CV score: 0.7276543209876543\r\nGeneration 35 - Current best internal CV score: 0.7276543209876543\r\nGeneration 36 - Current best internal CV score: 0.7276543209876543\r\nGeneration 37 - Current best internal CV score: 0.7276543209876543\r\nGeneration 38 - Current best internal CV score: 0.7276543209876543\r\nGeneration 39 - Current best internal CV score: 0.7276543209876543\r\nGeneration 40 - Current best internal CV score: 0.7276543209876543\r\nGeneration 41 - Current best internal CV score: 0.7276543209876543\r\n\r\nThe optimized pipeline was not improved after evaluating 33 more generations. Will end the optimization process.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1053", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1053/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1053/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1053", "id": 606258340, "node_id": "MDU6SXNzdWU2MDYyNTgzNDA=", "number": 1053, "title": "Text classification throws generic \"There was an error in the TPOT optimization process... \" error message", "user": {"login": "ParthGandhi", "id": 819237, "node_id": "MDQ6VXNlcjgxOTIzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/819237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ParthGandhi", "html_url": "https://github.com/ParthGandhi", "followers_url": "https://api.github.com/users/ParthGandhi/followers", "following_url": "https://api.github.com/users/ParthGandhi/following{/other_user}", "gists_url": "https://api.github.com/users/ParthGandhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ParthGandhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ParthGandhi/subscriptions", "organizations_url": "https://api.github.com/users/ParthGandhi/orgs", "repos_url": "https://api.github.com/users/ParthGandhi/repos", "events_url": "https://api.github.com/users/ParthGandhi/events{/privacy}", "received_events_url": "https://api.github.com/users/ParthGandhi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-24T11:54:46Z", "updated_at": "2020-04-25T05:54:25Z", "closed_at": "2020-04-25T05:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to do text classification using `tpot` and it keeps throwing a generic \"data is invalid\" error. Not quite able to figure out _why_\r\n\r\n```python\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.metrics import classification_report\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\r\nfrom sklearn.preprocessing import LabelEncoder\r\n\r\nle = LabelEncoder()\r\nle.fit(y_train.to_list())\r\n\r\ny_train_le = le.transform(y_train).tolist()\r\ny_test_le = le.transform(y_train).tolist()\r\n\r\nprint(f\"X_train: {type(X_train)}\")\r\nprint(f\"y_train: {type(y_train)}\")\r\nprint(f\"y_test: {type(y_test)}\")\r\nprint(f\"y_train_le: {type(y_train_le)}\")\r\nprint(f\"y_test_le: {type(y_test_le)}\")\r\n\r\n\r\n\r\nclf = Pipeline(\r\n    [\r\n        (\"cnt\", CountVectorizer()),\r\n        (\r\n            \"tpot\", TPOTClassifier(generations=5, population_size=50, verbosity=2, random_state=42, config_dict=\"TPOT sparse\"),\r\n        ),\r\n    ]\r\n)\r\n\r\nclf.fit(X_train.to_list(), y_train_le)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nX_train: <class 'pandas.core.series.Series'>\r\ny_train: <class 'pandas.core.series.Series'>\r\ny_test: <class 'pandas.core.series.Series'>\r\ny_train_le: <class 'list'>\r\ny_test_le: <class 'list'>\r\n\r\n\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n```\r\n\r\nWhat am I doing wrong here? Can the error be made more meaningful?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1050", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1050/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1050/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1050", "id": 604734658, "node_id": "MDU6SXNzdWU2MDQ3MzQ2NTg=", "number": 1050, "title": "TPOT OneHotEncoder cannot fit more than once to different datasets", "user": {"login": "JameyPMcDowell", "id": 26603150, "node_id": "MDQ6VXNlcjI2NjAzMTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/26603150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JameyPMcDowell", "html_url": "https://github.com/JameyPMcDowell", "followers_url": "https://api.github.com/users/JameyPMcDowell/followers", "following_url": "https://api.github.com/users/JameyPMcDowell/following{/other_user}", "gists_url": "https://api.github.com/users/JameyPMcDowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/JameyPMcDowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JameyPMcDowell/subscriptions", "organizations_url": "https://api.github.com/users/JameyPMcDowell/orgs", "repos_url": "https://api.github.com/users/JameyPMcDowell/repos", "events_url": "https://api.github.com/users/JameyPMcDowell/events{/privacy}", "received_events_url": "https://api.github.com/users/JameyPMcDowell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T12:54:40Z", "updated_at": "2020-05-13T15:05:50Z", "closed_at": "2020-05-13T15:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "TPOT OneHotEncoder cannot refit on a new dataset\r\n\r\n## Context of the issue\r\n\r\nGiven X1 and X2, TPOT cannot call fit(X1), then fit(X2).  This breaks down the ability to refit on full datasets after using an exported_pipeline to perform cross-validation, without having to clone the estimator\r\n\r\n#1049 # Process to reproduce the issue\r\n\r\n>>> from tpot.builtins import OneHotEncoder\r\n>>> import numpy as np\r\n\r\n>>> X1 = np.array(\r\n>>>    [[1, 0, 0, 0],\r\n>>>     [0, 1, 0, 0],\r\n>>>     [0, 0, 1, 0],\r\n>>>     [0, 0, 0, 1]]\r\n>>> )\r\n\r\n>>> X2 = np.array(\r\n>>>     [[1, 0, 0, 0, 0],\r\n>>>      [0, 1, 0, 0, 0],\r\n>>>      [0, 0, 1, 0, 0],\r\n>>>      [0, 0, 0, 1, 0],\r\n>>>      [0, 0, 0, 0, 1]]\r\n>>> )\r\n\r\n>>> ohe = OneHotEncoder()\r\n\r\n>>> ohe.fit(X1)\r\nOneHotEncoder(categorical_features=[True, True, True, True],\r\n              dtype=<class 'float'>, minimum_fraction=None, sparse=True,\r\n              threshold=10)\r\n\r\n>>> ohe.fit(X2)\r\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 5 but corresponding boolean dimension is 4\r\n \r\n\r\n## Expected result\r\n\r\n>>> ohe.fit(X1)\r\nOneHotEncoder(categorical_features=[True, True, True, True],\r\n              dtype=<class 'float'>, minimum_fraction=None, sparse=True,\r\n              threshold=10)\r\n\r\n>>> ohe.fit(X2)\r\nOneHotEncoder(categorical_features=[True, True, True, True, True],\r\n              dtype=<class 'float'>, minimum_fraction=None, sparse=True,\r\n              threshold=10)\r\n\r\n## Current result\r\n>>> ohe.fit(X2)\r\n\r\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 5 but corresponding boolean dimension is 4\r\n\r\n## Possible fix\r\n\r\nIn fit_transform(), if self.categorical_features == 'auto', assign the output of auto_select_categorical_features to a local variable, and call _transform_selected(selected=local_variable)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1049", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1049/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1049/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1049/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1049", "id": 604261409, "node_id": "MDU6SXNzdWU2MDQyNjE0MDk=", "number": 1049, "title": "TPOT OneHotEncoder cannot be refit on new data", "user": {"login": "JameyPMcDowell", "id": 26603150, "node_id": "MDQ6VXNlcjI2NjAzMTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/26603150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JameyPMcDowell", "html_url": "https://github.com/JameyPMcDowell", "followers_url": "https://api.github.com/users/JameyPMcDowell/followers", "following_url": "https://api.github.com/users/JameyPMcDowell/following{/other_user}", "gists_url": "https://api.github.com/users/JameyPMcDowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/JameyPMcDowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JameyPMcDowell/subscriptions", "organizations_url": "https://api.github.com/users/JameyPMcDowell/orgs", "repos_url": "https://api.github.com/users/JameyPMcDowell/repos", "events_url": "https://api.github.com/users/JameyPMcDowell/events{/privacy}", "received_events_url": "https://api.github.com/users/JameyPMcDowell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-21T20:22:56Z", "updated_at": "2020-04-21T20:23:20Z", "closed_at": "2020-04-21T20:23:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "[provide general introduction to the issue and why it is relevant to this repository]\r\n\r\n## Context of the issue\r\n\r\n[provide more detailed introduction to the issue itself and why it is relevant]\r\n\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n\r\n## Process to reproduce the issue\r\n\r\n[ordered list the process to finding and recreating the issue, example below]\r\n\r\n1. User creates TPOT instance\r\n2. User calls TPOT `fit()` function with training data\r\n3. TPOT crashes with a `KeyError` after 5 generations\r\n\r\n## Expected result\r\n\r\n[describe what you would expect to have resulted from this process]\r\n\r\n## Current result\r\n\r\n[describe what you currently experience from this process, and thereby explain the bug]\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1043", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1043/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1043/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1043", "id": 599153470, "node_id": "MDU6SXNzdWU1OTkxNTM0NzA=", "number": 1043, "title": "generation: 0 prediction for all test values ", "user": {"login": "GaganaB", "id": 11891186, "node_id": "MDQ6VXNlcjExODkxMTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/11891186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaganaB", "html_url": "https://github.com/GaganaB", "followers_url": "https://api.github.com/users/GaganaB/followers", "following_url": "https://api.github.com/users/GaganaB/following{/other_user}", "gists_url": "https://api.github.com/users/GaganaB/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaganaB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaganaB/subscriptions", "organizations_url": "https://api.github.com/users/GaganaB/orgs", "repos_url": "https://api.github.com/users/GaganaB/repos", "events_url": "https://api.github.com/users/GaganaB/events{/privacy}", "received_events_url": "https://api.github.com/users/GaganaB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-13T21:41:37Z", "updated_at": "2020-04-14T18:59:49Z", "closed_at": "2020-04-14T18:59:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the following configuration:\r\n tpot = TPOTClassifier(verbosity=2, max_time_mins=2, max_eval_time_mins=0.04, population_size=40)\r\non binary classification problem using: https://github.com/EpistasisLab/tpot/blob/master/tutorials/Titanic_Kaggle.ipynb\r\nBut tpot generates 0 prediction for all test values.  \r\n\r\nMy training set has 86 rows and 412 columns. \r\nMy test set however is inflated to 119748 rows and 411 columns. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1040", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1040/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1040/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1040", "id": 598561958, "node_id": "MDU6SXNzdWU1OTg1NjE5NTg=", "number": 1040, "title": "'generation': 'INVALID' in evaluated_individuals_", "user": {"login": "Genises", "id": 9629230, "node_id": "MDQ6VXNlcjk2MjkyMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9629230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Genises", "html_url": "https://github.com/Genises", "followers_url": "https://api.github.com/users/Genises/followers", "following_url": "https://api.github.com/users/Genises/following{/other_user}", "gists_url": "https://api.github.com/users/Genises/gists{/gist_id}", "starred_url": "https://api.github.com/users/Genises/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Genises/subscriptions", "organizations_url": "https://api.github.com/users/Genises/orgs", "repos_url": "https://api.github.com/users/Genises/repos", "events_url": "https://api.github.com/users/Genises/events{/privacy}", "received_events_url": "https://api.github.com/users/Genises/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-12T20:10:10Z", "updated_at": "2020-05-13T15:06:00Z", "closed_at": "2020-05-13T15:06:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \r\nlooking at tpot.evaluated_individuals_ after calling the fit() function, every individuals generation reads: 'generation': 'INVALID' except for the first generation. That is true for multiple data sets I tested.\r\n\r\nMy config is always:\r\nTPOTRegressor(generations=100, population_size=100, verbosity=2,\r\n                             config_dict=own_config, scoring=\"neg_mean_squared_error\", max_time_mins=600,\r\n                             max_eval_time_mins=30)\r\n\r\nEverything else seems fine;  \r\n'DecisionTreeRegressor(SelectPercentile(FastICA(input_matrix, FastICA__tol=0.05), SelectPercentile__percentile=90))': {'generation': 'INVALID', 'mutation_count': 1, 'crossover_count': 0, 'predecessor': ('DecisionTreeRegressor(FastICA(input_matrix, FastICA__tol=0.05))',), 'operator_count': 3, 'internal_cv_score': -121955.76376014757}\r\n\r\nIs this a bug or am I reading something wrong? \r\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1036", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1036/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1036/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1036", "id": 589906197, "node_id": "MDU6SXNzdWU1ODk5MDYxOTc=", "number": 1036, "title": "TPORegressor - Documentation doesn't specify correct object", "user": {"login": "rnmourao", "id": 16841587, "node_id": "MDQ6VXNlcjE2ODQxNTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/16841587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnmourao", "html_url": "https://github.com/rnmourao", "followers_url": "https://api.github.com/users/rnmourao/followers", "following_url": "https://api.github.com/users/rnmourao/following{/other_user}", "gists_url": "https://api.github.com/users/rnmourao/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnmourao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnmourao/subscriptions", "organizations_url": "https://api.github.com/users/rnmourao/orgs", "repos_url": "https://api.github.com/users/rnmourao/repos", "events_url": "https://api.github.com/users/rnmourao/events{/privacy}", "received_events_url": "https://api.github.com/users/rnmourao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T23:02:19Z", "updated_at": "2020-03-31T12:35:48Z", "closed_at": "2020-03-31T12:35:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Context of the issue\r\n\r\nThere is a little mistake on [score function specification](https://epistasislab.github.io/tpot/api/#tpotregressor-score): where it is read\r\n\r\n\"The default scoring function for **TPOTClassifier** is 'mean_squared_error'.\"\r\n\r\nShould be\r\n\r\n\"The default scoring function for **TPOTRegressor** is 'mean_squared_error'.\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1034", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1034/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1034/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1034/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1034", "id": 589776080, "node_id": "MDU6SXNzdWU1ODk3NzYwODA=", "number": 1034, "title": "Page not found in document website ", "user": {"login": "Jaimecclin", "id": 11486528, "node_id": "MDQ6VXNlcjExNDg2NTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/11486528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaimecclin", "html_url": "https://github.com/Jaimecclin", "followers_url": "https://api.github.com/users/Jaimecclin/followers", "following_url": "https://api.github.com/users/Jaimecclin/following{/other_user}", "gists_url": "https://api.github.com/users/Jaimecclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaimecclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaimecclin/subscriptions", "organizations_url": "https://api.github.com/users/Jaimecclin/orgs", "repos_url": "https://api.github.com/users/Jaimecclin/repos", "events_url": "https://api.github.com/users/Jaimecclin/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaimecclin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-29T12:00:41Z", "updated_at": "2020-03-29T13:57:10Z", "closed_at": "2020-03-29T13:57:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a link in document website redirecting to not existing page.\r\n\r\n## Context of the issue\r\n\r\nI tried to contribute something but I found that a link redirecting to 404 page.\r\n\r\n## Process to reproduce the issue\r\n\r\n1. Go to [doc](http://epistasislab.github.io/tpot/contributing/)\r\n2. Click the link: Update \"the project unit tests\" to test your code changes.\r\n\r\n## Expected result\r\n\r\nIt should be a right page.\r\n\r\n## Current result\r\n\r\n404 page not found\r\n\r\n## Possible fix\r\n\r\nNot necessary, but fix it should be easy.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1030", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1030/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1030/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1030", "id": 580822595, "node_id": "MDU6SXNzdWU1ODA4MjI1OTU=", "number": 1030, "title": "Issue specifying kernel with Gaussian Process Regressor using a custom configuration", "user": {"login": "lukeconibear", "id": 19871268, "node_id": "MDQ6VXNlcjE5ODcxMjY4", "avatar_url": "https://avatars0.githubusercontent.com/u/19871268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeconibear", "html_url": "https://github.com/lukeconibear", "followers_url": "https://api.github.com/users/lukeconibear/followers", "following_url": "https://api.github.com/users/lukeconibear/following{/other_user}", "gists_url": "https://api.github.com/users/lukeconibear/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeconibear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeconibear/subscriptions", "organizations_url": "https://api.github.com/users/lukeconibear/orgs", "repos_url": "https://api.github.com/users/lukeconibear/repos", "events_url": "https://api.github.com/users/lukeconibear/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeconibear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-13T20:15:40Z", "updated_at": "2020-06-15T12:46:50Z", "closed_at": "2020-06-15T12:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nFirstly, TPOT is great, thanks.\r\nThe issue I have is with specifying a Gaussian Process Regressor kernel whilst using a custom configuration. Using the below code as a contained example; if I don't specify the kernel everything works, and if I specify the kernel I receive the RuntimeError below. The kernel within the Gaussian Process Regressor is an kernel object type, while other keys specified in the default [regressor config](https://github.com/EpistasisLab/tpot/blob/master/tpot/config/regressor.py) have kernels that are strings (e.g. Nystroem).\r\nI'll be very grateful if anyone can help here.\r\nThanks,\r\nLuke\r\n\r\n```python\r\nimport sklearn\r\nfrom tpot import TPOTRegressor\r\nfrom sklearn.datasets import load_digits\r\nfrom sklearn.model_selection import train_test_split\r\n\r\ndigits = load_digits()\r\nX_train, X_test, y_train, y_test = train_test_split(digits.data,\r\n                                                    digits.target,\r\n                                                    train_size=0.75,\r\n                                                    test_size=0.25)\r\n\r\ntpot_config = {\r\n    'sklearn.gaussian_process.GaussianProcessRegressor': {\r\n    'kernel': [sklearn.gaussian_process.kernels.DotProduct]\r\n    },\r\n}\r\n\r\ntpot = TPOTRegressor(generations=5,\r\n                     population_size=20,\r\n                     verbosity=2,\r\n                     config_dict=tpot_config)\r\n\r\ntpot.fit(X_train, y_train)\r\nprint(tpot.score(X_test, y_test))\r\ntpot.export('tpot_digits_pipeline.py')\r\n```\r\n```\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1027", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1027/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1027/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1027/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1027", "id": 570377193, "node_id": "MDU6SXNzdWU1NzAzNzcxOTM=", "number": 1027, "title": "Target data processing error", "user": {"login": "timpeti76", "id": 61450299, "node_id": "MDQ6VXNlcjYxNDUwMjk5", "avatar_url": "https://avatars1.githubusercontent.com/u/61450299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timpeti76", "html_url": "https://github.com/timpeti76", "followers_url": "https://api.github.com/users/timpeti76/followers", "following_url": "https://api.github.com/users/timpeti76/following{/other_user}", "gists_url": "https://api.github.com/users/timpeti76/gists{/gist_id}", "starred_url": "https://api.github.com/users/timpeti76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timpeti76/subscriptions", "organizations_url": "https://api.github.com/users/timpeti76/orgs", "repos_url": "https://api.github.com/users/timpeti76/repos", "events_url": "https://api.github.com/users/timpeti76/events{/privacy}", "received_events_url": "https://api.github.com/users/timpeti76/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-25T07:52:20Z", "updated_at": "2020-02-25T09:20:39Z", "closed_at": "2020-02-25T09:20:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to tpot and have been familiarizing myself with the features by going through some tutorials. As a next step, I loaded in some of my own data into tpot instead of the Iris data-set. However, when compiling, I get the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/61450299/75225787-917af500-57ab-11ea-9822-eae3b4eeb445.png)\r\n\r\nThe training target 1-D array looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/61450299/75225986-d737bd80-57ab-11ea-9f93-2f5056d6eb5c.png)\r\n\r\nWhen I use the Iris-target array instead, it compiles and runs properly. What am I doing wrong?\r\n\r\nThank you for your help!\r\n\r\nTim\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1021", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1021/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1021/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1021/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1021", "id": 567662847, "node_id": "MDU6SXNzdWU1Njc2NjI4NDc=", "number": 1021, "title": "docs: DOI link is dead", "user": {"login": "ckastner", "id": 15859947, "node_id": "MDQ6VXNlcjE1ODU5OTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/15859947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckastner", "html_url": "https://github.com/ckastner", "followers_url": "https://api.github.com/users/ckastner/followers", "following_url": "https://api.github.com/users/ckastner/following{/other_user}", "gists_url": "https://api.github.com/users/ckastner/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckastner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckastner/subscriptions", "organizations_url": "https://api.github.com/users/ckastner/orgs", "repos_url": "https://api.github.com/users/ckastner/repos", "events_url": "https://api.github.com/users/ckastner/events{/privacy}", "received_events_url": "https://api.github.com/users/ckastner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T16:07:15Z", "updated_at": "2020-03-29T13:57:28Z", "closed_at": "2020-03-29T13:57:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the DOI link at the very bottom of `docs_sources/citing.md` is dead. zenodo.org reports that the page cannot be found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1017", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1017/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1017/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1017", "id": 566165394, "node_id": "MDU6SXNzdWU1NjYxNjUzOTQ=", "number": 1017, "title": "Pickling failure for custom CV splitter", "user": {"login": "adriangb", "id": 1755071, "node_id": "MDQ6VXNlcjE3NTUwNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1755071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriangb", "html_url": "https://github.com/adriangb", "followers_url": "https://api.github.com/users/adriangb/followers", "following_url": "https://api.github.com/users/adriangb/following{/other_user}", "gists_url": "https://api.github.com/users/adriangb/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriangb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriangb/subscriptions", "organizations_url": "https://api.github.com/users/adriangb/orgs", "repos_url": "https://api.github.com/users/adriangb/repos", "events_url": "https://api.github.com/users/adriangb/events{/privacy}", "received_events_url": "https://api.github.com/users/adriangb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T09:26:47Z", "updated_at": "2020-02-19T19:33:01Z", "closed_at": "2020-02-19T19:33:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Working:\r\n```python3\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.model_selection import LeaveOneGroupOut\r\nimport numpy as np\r\n\r\n\r\nX = np.array([[1, 2], [3, 4], [5, 6], [7, 8]])\r\ny = np.array([1, 2, 1, 2])\r\ngroups = np.array([1, 1, 2, 2])\r\n\r\nlogo = list(LeaveOneGroupOut().split(X=X, y=y, groups=groups))\r\n\r\nt = TPOTClassifier(verbosity=2, max_time_mins=1, n_jobs=-1, cv=logo)\r\nt.fit(features=X, target=y)\r\n```\r\n\r\nNot working:\r\n```python3\r\nlogo = LeaveOneGroupOut().split(X=X, y=y, groups=groups)\r\n\r\nt = TPOTClassifier(verbosity=2, max_time_mins=1, n_jobs=-1, cv=logo)\r\nt.fit(features=X, target=y)\r\n```\r\n```\r\nTypeError: can't pickle generator objects\r\n_pickle.PicklingError: Could not pickle the task to send it to the workers.\r\n```\r\n\r\nIt seems like the `logo` generator is getting sent to `joblib`\r\n\r\nLooking at the `sklearn` source, it seems like the generator gets converted into an array before parallelizing (see [here](https://github.com/scikit-learn/scikit-learn/blob/21686b7147ea9f24a8e415d05a5046477e976864/sklearn/model_selection/_validation.py#L735)). I tried stealing `check_cv` from `sklearn` and it fixed the issue, I'm not sure about importing a function from a `_` prefixed module in `sklearn`, otherwise I think this would be the ideal solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1014", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1014/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1014/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1014", "id": 564423540, "node_id": "MDU6SXNzdWU1NjQ0MjM1NDA=", "number": 1014, "title": "Question: Training and cross validation scoring, am I doing it right?", "user": {"login": "adriangb", "id": 1755071, "node_id": "MDQ6VXNlcjE3NTUwNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1755071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriangb", "html_url": "https://github.com/adriangb", "followers_url": "https://api.github.com/users/adriangb/followers", "following_url": "https://api.github.com/users/adriangb/following{/other_user}", "gists_url": "https://api.github.com/users/adriangb/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriangb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriangb/subscriptions", "organizations_url": "https://api.github.com/users/adriangb/orgs", "repos_url": "https://api.github.com/users/adriangb/repos", "events_url": "https://api.github.com/users/adriangb/events{/privacy}", "received_events_url": "https://api.github.com/users/adriangb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-13T03:57:16Z", "updated_at": "2020-02-19T19:38:37Z", "closed_at": "2020-02-19T19:38:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a general workflow where I am testing different classifiers on my data. Initially, my workflow looked like this (using `KNeighborsClassifier` as an example):\r\n```python3\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\n\r\n\r\nclassifier = KNeighborsClassifier()\r\nX = ...\r\ny = ...\r\nX = StandardScaler().fit(X).transform(X.astype(float))\r\nscore = np.mean(cross_val_score(estimator=classifier, X=X, y=y, cv=5))\r\n```\r\nI think this part is okay according to the [`sklearn` documentation](https://scikit-learn.org/stable/modules/cross_validation.html).\r\n\r\nSo I'm trying to incorporate `TPOT` into this scheme. I did the following, which works, but I want to make sure I'm doing it right:\r\n```python3\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom tpot import TPOTClassifier\r\n\r\n\r\nclassifier = TPOTClassifier(max_time_mins=120, n_jobs=-1),\r\nX = ...\r\ny = ...\r\nclassifier.train(X, y)   # selects the best pipeline using CV internally\r\n# get the best pipeline TPOT found\r\nbest_pipeline = classifier.fitted_pipeline_\r\n# score the pipeline (will retrain but keep the model / hyperparameters)\r\nscore = np.mean(cross_val_score(estimator=best_pipeline, X=X, y=y, cv=5))\r\n```\r\n\r\nOne particular question: should I be splitting the data into test/train at any point? My understanding is that ideally, I would split my data into train and test, then use the train set with `TPOTClassifier.fit` to find the ideal pipeline and then apply `cross_val_score` on that pipeline using the test set. Or even take it one step further and use nested cross-validation (as referenced in #554 ), which would look something like `score = np.mean(cross_val_score(estimator=TPOTClassifier(), X=X, y=y, cv=CROSS_VAL_FOLDS))))`. But how would that work for the vanilla `sklearn` classifiers (since there is no model selection, just 1 call to `fit`)? And if doing nested cross-validation, TPOT might select a different pipeline each fold, so how would I know which is truly the best overall?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1012", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1012/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1012/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1012/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1012", "id": 558475036, "node_id": "MDU6SXNzdWU1NTg0NzUwMzY=", "number": 1012, "title": "tutorials/Titanic_Kaggle.ipynb - missing generations argument", "user": {"login": "raybellwaves", "id": 17162724, "node_id": "MDQ6VXNlcjE3MTYyNzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/17162724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raybellwaves", "html_url": "https://github.com/raybellwaves", "followers_url": "https://api.github.com/users/raybellwaves/followers", "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}", "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions", "organizations_url": "https://api.github.com/users/raybellwaves/orgs", "repos_url": "https://api.github.com/users/raybellwaves/repos", "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}", "received_events_url": "https://api.github.com/users/raybellwaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-01T04:04:51Z", "updated_at": "2020-02-03T13:57:47Z", "closed_at": "2020-02-03T13:57:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/EpistasisLab/tpot/blob/master/tutorials/Titanic_Kaggle.ipynb\r\nIt seems the supporting text for the `TPOTClassifier` says \"An important TPOT parameter to set is the number of generations. Since our aim is to just illustrate the use of TPOT, we have set it to 5.\" However, when looking at the command it does not specify `generations`:\r\n```\r\ntpot = TPOTClassifier(verbosity=2, max_time_mins=2, max_eval_time_mins=0.04, population_size=40)\r\n```\r\nDoes the text need to be changed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1011", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1011/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1011/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1011/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1011", "id": 557233309, "node_id": "MDU6SXNzdWU1NTcyMzMzMDk=", "number": 1011, "title": "can't set up emulator", "user": {"login": "Guire9", "id": 60325869, "node_id": "MDQ6VXNlcjYwMzI1ODY5", "avatar_url": "https://avatars2.githubusercontent.com/u/60325869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Guire9", "html_url": "https://github.com/Guire9", "followers_url": "https://api.github.com/users/Guire9/followers", "following_url": "https://api.github.com/users/Guire9/following{/other_user}", "gists_url": "https://api.github.com/users/Guire9/gists{/gist_id}", "starred_url": "https://api.github.com/users/Guire9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Guire9/subscriptions", "organizations_url": "https://api.github.com/users/Guire9/orgs", "repos_url": "https://api.github.com/users/Guire9/repos", "events_url": "https://api.github.com/users/Guire9/events{/privacy}", "received_events_url": "https://api.github.com/users/Guire9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T02:40:43Z", "updated_at": "2020-05-13T15:06:21Z", "closed_at": "2020-05-13T15:06:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to android studio and I am trying to set up my emulator, but no matter what I do when I run I try to run my emulator I get this error:  Emulator: Process finished with exit code 133 (interrupter by signal 5: SigTrap) \r\nI also get this. \r\n21:37\tEmulator: Referenced from: /Users/max/Library/Android/sdk/emulator/lib64/qt/lib/libQt5WebEngineCoreAndroidEmu.5.12.1.dylib\r\n21:37\tEmulator: Reason: image not found\r\nHow do I fix this", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1010", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1010/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1010/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1010/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1010", "id": 556480823, "node_id": "MDU6SXNzdWU1NTY0ODA4MjM=", "number": 1010, "title": "Custom scorer bug", "user": {"login": "manuchema", "id": 28356853, "node_id": "MDQ6VXNlcjI4MzU2ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/28356853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuchema", "html_url": "https://github.com/manuchema", "followers_url": "https://api.github.com/users/manuchema/followers", "following_url": "https://api.github.com/users/manuchema/following{/other_user}", "gists_url": "https://api.github.com/users/manuchema/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuchema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuchema/subscriptions", "organizations_url": "https://api.github.com/users/manuchema/orgs", "repos_url": "https://api.github.com/users/manuchema/repos", "events_url": "https://api.github.com/users/manuchema/events{/privacy}", "received_events_url": "https://api.github.com/users/manuchema/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T21:31:28Z", "updated_at": "2020-01-30T14:05:47Z", "closed_at": "2020-01-30T14:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using TPOT and after several runs i am trying to give TPOT a custom scoring function. The problem iss i aalwayss end up with the error message :\r\n\r\n> ValueError: Scoring function make_scorer(maximize_true_pos) looks like it is a metric function rather than a scikit-learn scorer. This scoring type was removed in version 0.11. Please update your custom scoring function.\r\n\r\nI first thought i made something wrong but the problem is that i have the same result with the exemple code given in TPOT documentation . https://epistasislab.github.io/tpot/using/#scoring-functions\r\n\r\nIf you take the code and run it, iny my case in a jupyter notebook, that doesn't work (https://epistasislab.github.io/tpot/using/#scoring-functions) :\r\n\r\nI was expecting that all should go ok and figure out what i made wrong but instead the same error raised.\r\n\r\n![TPOT](https://user-images.githubusercontent.com/28356853/73307074-caac5d80-421d-11ea-9431-e43969e6b5f9.jpg)\r\n\r\nCan someone tell me how to implement a scoring function that TPOT accepts, by the way updating the doc will be great.\r\n\r\nMany thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1007", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1007/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1007/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1007/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1007", "id": 555037347, "node_id": "MDU6SXNzdWU1NTUwMzczNDc=", "number": 1007, "title": "Le et al citation update?", "user": {"login": "raybellwaves", "id": 17162724, "node_id": "MDQ6VXNlcjE3MTYyNzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/17162724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raybellwaves", "html_url": "https://github.com/raybellwaves", "followers_url": "https://api.github.com/users/raybellwaves/followers", "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}", "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions", "organizations_url": "https://api.github.com/users/raybellwaves/orgs", "repos_url": "https://api.github.com/users/raybellwaves/repos", "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}", "received_events_url": "https://api.github.com/users/raybellwaves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328854484, "node_id": "MDU6TGFiZWwzMjg4NTQ0ODQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/being%20worked%20on", "name": "being worked on", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T03:37:43Z", "updated_at": "2020-01-27T15:01:56Z", "closed_at": "2020-01-27T15:01:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Curious is the citation for the Le et al (2019) paper needs to be updated as it looks like it has been put into a 2020 issue\r\n\r\nhttps://epistasislab.github.io/tpot/citing/\r\n\r\nhttps://academic.oup.com/bioinformatics/article/36/1/250/5511404", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1002", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1002/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1002/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1002/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1002", "id": 550325810, "node_id": "MDU6SXNzdWU1NTAzMjU4MTA=", "number": 1002, "title": "Good training/testing performance, poor exported pipeline performance", "user": {"login": "windowshopr", "id": 40477419, "node_id": "MDQ6VXNlcjQwNDc3NDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/40477419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windowshopr", "html_url": "https://github.com/windowshopr", "followers_url": "https://api.github.com/users/windowshopr/followers", "following_url": "https://api.github.com/users/windowshopr/following{/other_user}", "gists_url": "https://api.github.com/users/windowshopr/gists{/gist_id}", "starred_url": "https://api.github.com/users/windowshopr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windowshopr/subscriptions", "organizations_url": "https://api.github.com/users/windowshopr/orgs", "repos_url": "https://api.github.com/users/windowshopr/repos", "events_url": "https://api.github.com/users/windowshopr/events{/privacy}", "received_events_url": "https://api.github.com/users/windowshopr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-15T17:24:45Z", "updated_at": "2020-01-17T15:16:37Z", "closed_at": "2020-01-16T02:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "[provide general introduction to the issue and why it is relevant to this repository]\r\n\r\nThis isn\u2019t really an issue with TPOT but wanted to post here before using stackoverflow as it does pertain to TPOT. \r\n\r\nBefore I post any code, I\u2019d like to just give some context to check if anyone thinks I\u2019m doing something wrong/get ideas on things to try before posting code. It might be a case of overfitting, but I\u2019m not sure. \r\n\r\n[provide more detailed introduction to the issue itself and why it is relevant]\r\n\r\nI have a multivariate, pre-shuffled, balanced dataset of about 27,000 rows, that I\u2019m using to train a binary classification model on (i.e. the class column has an even amount of 1\u2019s and 0\u2019s in it). I initially started with a 50/50 train test split and it achieved around 60-65% accuracy on the test data (I can\u2019t recall exactly as I\u2019m away from my computer) for my dataset which is great. So knowing that metric, I let TPOT train on the entire training dataset using a 10 k-fold cross validation and using \u201caccuracy\u201d as the performance metric. I then try to use the new exported pipeline on a new, unseen dataset in the exact same structure, and it performs horribly. It predicts a lot of 1\u2019s when they really should be 0\u2019s. \r\n\r\nOne thing I\u2019m unclear on is, HOW to actually use the exported pipeline on a new dataset. How I\u2019m using it now is, I use the .fit() function to re-fit the exported pipeline on the same training dataset that was used during the training process, and then try to .predict() on the new dataset. Is this correct? My reasoning is that, if the model uses a pre-processing step, like say minmaxscaler, it shouldn\u2019t just pre-process on the new dataset because those local minmax values could be different than what was used during training, so fitting it to the same dataset first should take care of that step?\r\n\r\nSome things I\u2019ve thought of/saw online to try to rectify this might be to:\r\n\r\n1. Increase the number of folds as my dataset seems quite large \r\n2. Use a smaller train/test split. Maybe go back down to 50/50 and then try using THAT exported pipeline on new dataset\r\n3. Use \u201cbalance_accuracy\u201d instead of \u201caccuracy\u201d\r\n4. Am I using the exported pipeline wrong?\r\n\r\nWhat else can I try/what am I missing to see if I can get an exported pipeline to perform better on the new data? It seems like it overuses 1 predictions when they should be 0\u2019s. Any ideas on what to try? Then I can try them and if I\u2019m still stuck I can post my code. Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1000", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1000/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1000/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/1000/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/1000", "id": 548372710, "node_id": "MDU6SXNzdWU1NDgzNzI3MTA=", "number": 1000, "title": "Multi class classification: Tried different parameters but getting Error", "user": {"login": "pratik-poudel", "id": 37284545, "node_id": "MDQ6VXNlcjM3Mjg0NTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/37284545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratik-poudel", "html_url": "https://github.com/pratik-poudel", "followers_url": "https://api.github.com/users/pratik-poudel/followers", "following_url": "https://api.github.com/users/pratik-poudel/following{/other_user}", "gists_url": "https://api.github.com/users/pratik-poudel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratik-poudel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratik-poudel/subscriptions", "organizations_url": "https://api.github.com/users/pratik-poudel/orgs", "repos_url": "https://api.github.com/users/pratik-poudel/repos", "events_url": "https://api.github.com/users/pratik-poudel/events{/privacy}", "received_events_url": "https://api.github.com/users/pratik-poudel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-11T03:12:54Z", "updated_at": "2020-01-11T04:05:35Z", "closed_at": "2020-01-11T04:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doing a multiclass classification\r\n`tpot = TPOTClassifier(generations=5,verbosity=2, population_size=100, cv=2,subsample=0.5,\r\n                      max_time_mins=15, n_jobs=1, random_state=60,warm_start=False, \r\n                    scoring='roc_auc', max_eval_time_mins=10, \r\n                      config_dict='TPOT light')\r\n\r\ntpot.fit(pd.np.array(x_train), pd.np.array(y_train).ravel())`\r\nAfter this almost 99% of tasks is completed and error is thrown.\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n\r\nCan you please guide me as i have tried several permutations of the parameters above . \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/996", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/996/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/996/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/996/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/996", "id": 547160706, "node_id": "MDU6SXNzdWU1NDcxNjA3MDY=", "number": 996, "title": "Customized config_dict gives \"RuntimeError: A pipeline has not yet been optimized\"", "user": {"login": "chengrunyang", "id": 8860197, "node_id": "MDQ6VXNlcjg4NjAxOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8860197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengrunyang", "html_url": "https://github.com/chengrunyang", "followers_url": "https://api.github.com/users/chengrunyang/followers", "following_url": "https://api.github.com/users/chengrunyang/following{/other_user}", "gists_url": "https://api.github.com/users/chengrunyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengrunyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengrunyang/subscriptions", "organizations_url": "https://api.github.com/users/chengrunyang/orgs", "repos_url": "https://api.github.com/users/chengrunyang/repos", "events_url": "https://api.github.com/users/chengrunyang/events{/privacy}", "received_events_url": "https://api.github.com/users/chengrunyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-08T23:24:32Z", "updated_at": "2020-01-09T21:49:45Z", "closed_at": "2020-01-09T21:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I created a customized config file and put it in `tpot/config`. Then I changed corresponding code in `base.py` to read into that file. However I got the following error:\r\n\r\n```\r\n--------------------------------------------------------------------\r\nRuntimeError                       Traceback (most recent call last)\r\n<ipython-input-14-09ea6b0b8783> in <module>\r\n     28     )\r\n     29 \r\n---> 30     clf.fit(X_tr, y_tr)\r\n     31 #         clf.refit(x_tr, y_tr)\r\n     32     time_elapsed.append(time.time() - start)\r\n\r\n/data/cy438/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    744                     # raise the exception if it's our last attempt\r\n    745                     if attempt == (attempts - 1):\r\n--> 746                         raise e\r\n    747             return self\r\n    748 \r\n\r\n/data/cy438/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    735                         self._pbar.close()\r\n    736 \r\n--> 737                     self._update_top_pipeline()\r\n    738                     self._summary_of_best_pipeline(features, target)\r\n    739                     # Delete the temporary cache before exiting\r\n\r\n/data/cy438/anaconda3/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    813             # If user passes CTRL+C in initial generation, self._pareto_front (halloffame) shoule be not updated yet.\r\n    814             # need raise RuntimeError because no pipeline has been optimized\r\n--> 815             raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\r\n    816 \r\n    817     def _summary_of_best_pipeline(self, features, target):\r\n\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n```\r\n\r\nLooks like the genetic algorithm didn't get started properly. The following is the config_dict file I passed into; is there any necessary (sklearn/tpot) module missing?\r\n\r\n```\r\nimport numpy as np\r\n\r\nclassifier_config_dict_custom = {\r\n\r\n    # Classifiers\r\n    'sklearn.neighbors.KNeighborsClassifier': {\r\n        'n_neighbors': [1, 3, 5, 7, 9, 11, 13, 15],\r\n        'p': [1, 2]\r\n    },\r\n\r\n    'sklearn.tree.DecisionTreeClassifier': {\r\n        'min_samples_split': [2,4,8,16,32,64,128,256,512,1024,0.01,0.001,0.0001,1e-05]\r\n    },\r\n\r\n    'sklearn.ensemble.RandomForestClassifier': {\r\n        'min_samples_split': [2,4,8,16,32,64,128,256,512,1024,0.01,0.001,0.0001,1e-05],\r\n        'criterion': [\"gini\", \"entropy\"],\r\n    },\r\n    \r\n    'sklearn.ensemble.GradientBoostingClassifier': {\r\n        'learning_rate': [0.001,0.01,0.025,0.05,0.1,0.25,0.5],\r\n        'max_depth': [3, 6],\r\n        'max_features': [None, \"log2\"],\r\n    },\r\n    \r\n    'sklearn.ensemble.AdaBoostClassifier': {\r\n        'n_estimators': [50, 100],\r\n        'learning_rate': [1.0, 1.5, 2.0, 2.5, 3.0],\r\n    },\r\n    \r\n    'sklearn.svm.LinearSVC': {\r\n        'C': [0.125,0.25,0.5,0.75,1,2,4,8,16],\r\n    },\r\n\r\n    'sklearn.linear_model.LogisticRegression': {\r\n        'penalty': [\"l1\", \"l2\"],\r\n        'C': [0.25,0.5,0.75,1,1.5,2,3,4],\r\n        'solver': [\"liblinear\", \"saga\"],\r\n    },\r\n    \r\n    'sklearn.linear_model.Perceptron': {\r\n    },\r\n\r\n    'sklearn.naive_bayes.GaussianNB': {\r\n    },\r\n    \r\n    'sklearn.neural_network.MLPClassifier': {\r\n        'learning_rate_init': [0.0001,0.001,0.01],\r\n        'learning_rate': [\"adaptive\"],\r\n        'solver': [\"sgd\", \"adam\"],\r\n        'alpha': [0.0001, 0.01],\r\n    },\r\n    \r\n     'sklearn.ensemble.ExtraTreesClassifier': {\r\n        'min_samples_split': [2,4,8,16,32,64,128,256,512,1024,0.1,0.01,0.001,0.0001,1e-05],\r\n        'criterion': [\"gini\", \"entropy\"],\r\n    },\r\n\r\n    # Preprocesssors\r\n\r\n    'sklearn.decomposition.PCA': {\r\n        'svd_solver': ['randomized'],\r\n        'iterated_power': range(1, 11)\r\n    },\r\n\r\n    'sklearn.preprocessing.StandardScaler': {\r\n    },\r\n    \r\n    'sklearn.preprocessing.OneHotEncoder': {\r\n        'handle_unknown': [\"ignore\"],\r\n        'sparse': [0],\r\n    },\r\n   \r\n    # Selectors\r\n\r\n    'sklearn.feature_selection.VarianceThreshold': {\r\n        'threshold': [0.0001, 0.0005, 0.001, 0.005, 0.01, 0.05, 0.1, 0.2]\r\n    },\r\n    \r\n    'sklearn.feature_selection.SelectKBest': {\r\n    },\r\n    \r\n    'sklearn.feature_selection.SelectPercentile': {\r\n        'percentile': range(1, 100),\r\n        'score_func': {\r\n            'sklearn.feature_selection.f_classif': None\r\n        }\r\n    },\r\n}\r\n```\r\n\r\nAttached is the modified TPOT package. The files I changed from latest 0.11.1 release include `base.py` (I modified Lines 68 and 327-329 in this file) and `config/classifier_custom.py` (the configuration dictionary file I added). \r\n[tpot_0.11.1_customized.zip](https://github.com/EpistasisLab/tpot/files/4037800/tpot_0.11.1_customized.zip)\r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/995", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/995/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/995/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/995/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/995", "id": 547139905, "node_id": "MDU6SXNzdWU1NDcxMzk5MDU=", "number": 995, "title": "bug in TPOTClassifier.export ", "user": {"login": "dasturge", "id": 18649005, "node_id": "MDQ6VXNlcjE4NjQ5MDA1", "avatar_url": "https://avatars2.githubusercontent.com/u/18649005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dasturge", "html_url": "https://github.com/dasturge", "followers_url": "https://api.github.com/users/dasturge/followers", "following_url": "https://api.github.com/users/dasturge/following{/other_user}", "gists_url": "https://api.github.com/users/dasturge/gists{/gist_id}", "starred_url": "https://api.github.com/users/dasturge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dasturge/subscriptions", "organizations_url": "https://api.github.com/users/dasturge/orgs", "repos_url": "https://api.github.com/users/dasturge/repos", "events_url": "https://api.github.com/users/dasturge/events{/privacy}", "received_events_url": "https://api.github.com/users/dasturge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T22:28:19Z", "updated_at": "2020-01-08T22:35:40Z", "closed_at": "2020-01-08T22:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The export calls `pd.read_csv` to open the dataset and have the user put in the path to their dataset and the seperator, _however_, it ought to also include the argument `index_col=False` by default, otherwise users will be including their data index in the feature set unless they notice that keyword is missing. I also really wish pandas didn't have that default behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/993", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/993/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/993/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/993", "id": 547065062, "node_id": "MDU6SXNzdWU1NDcwNjUwNjI=", "number": 993, "title": "Custom scoring function example incompatible with scikit-learn v0.22", "user": {"login": "josiahjohnston", "id": 1594604, "node_id": "MDQ6VXNlcjE1OTQ2MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1594604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josiahjohnston", "html_url": "https://github.com/josiahjohnston", "followers_url": "https://api.github.com/users/josiahjohnston/followers", "following_url": "https://api.github.com/users/josiahjohnston/following{/other_user}", "gists_url": "https://api.github.com/users/josiahjohnston/gists{/gist_id}", "starred_url": "https://api.github.com/users/josiahjohnston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josiahjohnston/subscriptions", "organizations_url": "https://api.github.com/users/josiahjohnston/orgs", "repos_url": "https://api.github.com/users/josiahjohnston/repos", "events_url": "https://api.github.com/users/josiahjohnston/events{/privacy}", "received_events_url": "https://api.github.com/users/josiahjohnston/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T19:44:29Z", "updated_at": "2020-01-08T20:37:52Z", "closed_at": "2020-01-08T20:37:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "TPOT's custom scoring function breaks with scikit-learn v0.22.\r\n\r\n## Context of the issue\r\n\r\nsklearn refactored some code in the scorer modules, and tpot has the old module names hardcoded in a heuristic. \r\n[provide more detailed introduction to the issue itself and why it is relevant]\r\n\r\n## Process to reproduce the issue\r\n\r\nThe example on https://epistasislab.github.io/tpot/using/ generates an error. \r\n```\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.datasets import load_digits\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.metrics.scorer import make_scorer\r\n\r\ndigits = load_digits()\r\nX_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target,\r\n                                                    train_size=0.75, test_size=0.25)\r\n# Make a custom metric function\r\ndef my_custom_accuracy(y_true, y_pred):\r\n    return float(sum(y_pred == y_true)) / len(y_true)\r\n\r\n# Make a custom a scorer from the custom metric function\r\n# Note: greater_is_better=False in make_scorer below would mean that the scoring function should be minimized.\r\nmy_custom_scorer = make_scorer(my_custom_accuracy, greater_is_better=True)\r\n\r\ntpot = TPOTClassifier(generations=5, population_size=20, verbosity=2,\r\n                      scoring=my_custom_scorer)\r\ntpot.fit(X_train, y_train)\r\n```\r\n> ValueError: Scoring function make_scorer(my_custom_accuracy) looks like it is a metric function rather than a scikit-learn scorer. This scoring type was removed in version 0.11. Please update your custom scoring function.\r\n\r\n## Expected result\r\n\r\nI expect the example from the documentation to work.\r\n\r\n## Current result\r\n\r\nThe example from the documentation generates an error.\r\n\r\n## Possible fix\r\n\r\nUse duck typing instead of a heuristic based on module & args_list in `tpot.base:TPOTBase._setup_scoring_function`. Something like:\r\n```\r\nlooks_like_old_style_func = False\r\ntry:\r\n    scoring(np.array([1,2]), np.array([3,4]))\r\n    looks_like_old_style_func = True\r\nexcept:\r\n    pass\r\nif looks_like_old_style_func:\r\n    raise ValueError('Scoring function {} looks like it is a metric function....')\r\n```\r\nWhen I edit the tpot code to use that duck-typing, the issue goes away for me and the example works. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/991", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/991/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/991/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/991", "id": 545137362, "node_id": "MDU6SXNzdWU1NDUxMzczNjI=", "number": 991, "title": "ImportError: Error: could not import sklearn.cluster.FeatureAgglomeration. cannot import name 'lobpcg'", "user": {"login": "shapatel13", "id": 50153301, "node_id": "MDQ6VXNlcjUwMTUzMzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/50153301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shapatel13", "html_url": "https://github.com/shapatel13", "followers_url": "https://api.github.com/users/shapatel13/followers", "following_url": "https://api.github.com/users/shapatel13/following{/other_user}", "gists_url": "https://api.github.com/users/shapatel13/gists{/gist_id}", "starred_url": "https://api.github.com/users/shapatel13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shapatel13/subscriptions", "organizations_url": "https://api.github.com/users/shapatel13/orgs", "repos_url": "https://api.github.com/users/shapatel13/repos", "events_url": "https://api.github.com/users/shapatel13/events{/privacy}", "received_events_url": "https://api.github.com/users/shapatel13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-03T19:53:32Z", "updated_at": "2020-01-03T21:44:58Z", "closed_at": "2020-01-03T20:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "[TPOT working previously but giving me this error now]\r\n\r\n## Context of the issue\r\n\r\nfrom tpot import TPOTClassifier\r\n\r\ntpot = TPOTClassifier(generations=1, population_size=50, max_time_mins=120, verbosity=3)\r\n\r\ntpot.fit(X_train,y_train)\r\n\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n\r\n## Process to reproduce the issue\r\n\r\n[ordered list the process to finding and recreating the issue, example below]\r\n\r\n1. User creates TPOT instance\r\n2. User calls TPOT `fit()` function with training data\r\n3. TPOT crashes with a `KeyError` after 5 generations\r\n\r\n## Expected result\r\n\r\n[describe what you would expect to have resulted from this process]\r\n\r\n## Current result\r\n\r\n[describe what you currently experience from this process, and thereby explain the bug]\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/987", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/987/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/987/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/987/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/987", "id": 544959073, "node_id": "MDU6SXNzdWU1NDQ5NTkwNzM=", "number": 987, "title": "Syntax Issue while using `F1-score` as scoring metric", "user": {"login": "Selva-sys", "id": 59470011, "node_id": "MDQ6VXNlcjU5NDcwMDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/59470011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Selva-sys", "html_url": "https://github.com/Selva-sys", "followers_url": "https://api.github.com/users/Selva-sys/followers", "following_url": "https://api.github.com/users/Selva-sys/following{/other_user}", "gists_url": "https://api.github.com/users/Selva-sys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Selva-sys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Selva-sys/subscriptions", "organizations_url": "https://api.github.com/users/Selva-sys/orgs", "repos_url": "https://api.github.com/users/Selva-sys/repos", "events_url": "https://api.github.com/users/Selva-sys/events{/privacy}", "received_events_url": "https://api.github.com/users/Selva-sys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-03T11:35:50Z", "updated_at": "2020-01-03T18:17:24Z", "closed_at": "2020-01-03T18:17:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI started using tpot package recently and was trying to find the best features that yield good `F1-score`.  But the export file has a syntax issue\r\n\r\n## Context of the issue\r\n\r\nI ran the `tpotClassifier` and it worked fine. But the exported Pipeline file threw an error when I executed the code in it. It was throwing error as the `steps` attribute was missing from `exported_pipeline` object. This is under the `set_param_recursive` function\r\n\r\n## Process to reproduce the issue\r\n\r\n1. User creates TPOT instance with `f1` scoring metric \r\n2. User calls TPOT `fit()` function with training data\r\n3. Checks for score \r\n4. Export pipeline file generated\r\n5. Run the export pipeline python file\r\n6. Error is thrown at the `set_params_recursive` function as `steps` attribute is not available with `export_pipeline`. Refer screenshot below\r\n\r\n## Expected result\r\n\r\nShould be able to set the random_state to all steps in pipeline\r\n\r\n## Current result\r\n\r\nCurrently it throws error and I had to comment this line to execute this pipeline. But it worked fine with `accuracy` metric\r\n\r\n## Steps attribute missing screenshot\r\n\r\n![image](https://user-images.githubusercontent.com/59470011/71721444-0f7fe700-2e60-11ea-94ea-b4a195711688.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/985", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/985/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/985/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/985", "id": 544235380, "node_id": "MDU6SXNzdWU1NDQyMzUzODA=", "number": 985, "title": "Scoring method verification should be updated", "user": {"login": "gatl", "id": 1071394, "node_id": "MDQ6VXNlcjEwNzEzOTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1071394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gatl", "html_url": "https://github.com/gatl", "followers_url": "https://api.github.com/users/gatl/followers", "following_url": "https://api.github.com/users/gatl/following{/other_user}", "gists_url": "https://api.github.com/users/gatl/gists{/gist_id}", "starred_url": "https://api.github.com/users/gatl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gatl/subscriptions", "organizations_url": "https://api.github.com/users/gatl/orgs", "repos_url": "https://api.github.com/users/gatl/repos", "events_url": "https://api.github.com/users/gatl/events{/privacy}", "received_events_url": "https://api.github.com/users/gatl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-31T17:25:05Z", "updated_at": "2020-01-06T15:09:08Z", "closed_at": "2020-01-03T18:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the scikit-learn changed a bit their API with version 22, scorer objects are no longer defined at `sklearn.metrics.scorer` but on `sklearn.metrics` (that is where `make_scorer()` is defined now).\r\n\r\nIn light of this, tpot's method of distinguishing between metrics and scorers (checking the name of the module in which they were defined) is no longer working correctly since it rejects all scoring objects in the new scikit-learn version. As such, I would recommend that the code that does this verification be revised for the next release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/983", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/983/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/983/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/983", "id": 543745107, "node_id": "MDU6SXNzdWU1NDM3NDUxMDc=", "number": 983, "title": "Scoring functions throw TPOTBase._update_top_pipeline() RuntimeError", "user": {"login": "jamesjjcondon", "id": 33615047, "node_id": "MDQ6VXNlcjMzNjE1MDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/33615047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesjjcondon", "html_url": "https://github.com/jamesjjcondon", "followers_url": "https://api.github.com/users/jamesjjcondon/followers", "following_url": "https://api.github.com/users/jamesjjcondon/following{/other_user}", "gists_url": "https://api.github.com/users/jamesjjcondon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesjjcondon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesjjcondon/subscriptions", "organizations_url": "https://api.github.com/users/jamesjjcondon/orgs", "repos_url": "https://api.github.com/users/jamesjjcondon/repos", "events_url": "https://api.github.com/users/jamesjjcondon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesjjcondon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-30T05:30:07Z", "updated_at": "2020-01-08T20:23:18Z", "closed_at": "2020-01-03T03:58:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Context of the issue\r\n\r\n'Accuracy' and 'balanced_accuracy' work fine, but others including f1, recall and precision\r\nthrow RuntimeError below\r\n\r\nTPOT v11.0\r\nsklearn 21.3\r\n\r\n## Process to reproduce the issue\r\n\r\n```\r\nfrom tpot import TPOTClassifier\r\nfrom sklearn.datasets import load_digits\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.metrics.scorer import make_scorer\r\n\r\ndigits = load_digits()\r\nX_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target,\r\n                                                    train_size=0.75, test_size=0.25, random_state=42)\r\n\r\ntpot = TPOTClassifier(generations=5, population_size=20, verbosity=2,\r\n                      scoring='f1', n_jobs=-1, random_state=42)\r\n\r\ntpot.fit(X_train, y_train)\r\n```\r\n\r\n## Expected result\r\n\r\nScore piped appropriately, \r\n\r\n## Current result\r\n\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n\r\n## Possible fix\r\n\r\nSeems to be related to TPOTBase._update_top_pipeline(). When printing out pipeline and pipeline_scores from line 791 \r\nhttps://github.com/EpistasisLab/tpot/blob/3d31727e6be5dc80b4dbf1e1835024e861b1eadf/tpot/base.py#L791 \r\nscore is `(1.0, -inf)`\r\n\r\nNot sure about:\r\n`self._optimized_pipeline_score = -float('inf')`\r\n\r\nmight be related to [868](https://github.com/EpistasisLab/tpot/issues/868)\r\n\r\nSeems to happen regardless of n_jobs.\r\n\r\nAny hints much appreciated. \r\n\r\nTHANKYOU!!!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/981", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/981/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/981/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/981", "id": 542037938, "node_id": "MDU6SXNzdWU1NDIwMzc5Mzg=", "number": 981, "title": "[deprecation] the FutureWarning by scikit-learn", "user": {"login": "qtisan", "id": 8434908, "node_id": "MDQ6VXNlcjg0MzQ5MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8434908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtisan", "html_url": "https://github.com/qtisan", "followers_url": "https://api.github.com/users/qtisan/followers", "following_url": "https://api.github.com/users/qtisan/following{/other_user}", "gists_url": "https://api.github.com/users/qtisan/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtisan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtisan/subscriptions", "organizations_url": "https://api.github.com/users/qtisan/orgs", "repos_url": "https://api.github.com/users/qtisan/repos", "events_url": "https://api.github.com/users/qtisan/events{/privacy}", "received_events_url": "https://api.github.com/users/qtisan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-24T08:10:32Z", "updated_at": "2020-01-07T11:22:46Z", "closed_at": "2020-01-03T18:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It runs with `FutureWarning` while `from tpot import TPOTClassifier, TPOTRegressor`\r\n\r\n## Context of the issue\r\n\r\n```sh\r\n/path/to/project/venv/bin/python /Users/lennon/recent/asteria/test/ex.py\r\n/Users/lennon/recent/asteria/venv/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.metrics.scorer module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.metrics. Anything that cannot be imported from sklearn.metrics is now part of the private API.\r\n  warnings.warn(message, FutureWarning)\r\n/path/to/project/venv/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.feature_selection.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.feature_selection. Anything that cannot be imported from sklearn.feature_selection is now part of the private API.\r\n  warnings.warn(message, FutureWarning)\r\n\r\n```\r\n\r\n## Process to reproduce the issue\r\n\r\nJust below.\r\n```\r\nfrom tpot import TPOTClassifier, TPOTRegressor\r\ntpot = TPOTClassifier(generations=5, population_size=50, verbosity=2, random_state=42)\r\n```\r\n\r\n## Expected result\r\n\r\nas the context above.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/979", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/979/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/979/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/979", "id": 538227417, "node_id": "MDU6SXNzdWU1MzgyMjc0MTc=", "number": 979, "title": "Models in config not being used", "user": {"login": "LuBolin", "id": 42673559, "node_id": "MDQ6VXNlcjQyNjczNTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/42673559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuBolin", "html_url": "https://github.com/LuBolin", "followers_url": "https://api.github.com/users/LuBolin/followers", "following_url": "https://api.github.com/users/LuBolin/following{/other_user}", "gists_url": "https://api.github.com/users/LuBolin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuBolin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuBolin/subscriptions", "organizations_url": "https://api.github.com/users/LuBolin/orgs", "repos_url": "https://api.github.com/users/LuBolin/repos", "events_url": "https://api.github.com/users/LuBolin/events{/privacy}", "received_events_url": "https://api.github.com/users/LuBolin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-16T07:13:44Z", "updated_at": "2019-12-19T01:16:13Z", "closed_at": "2019-12-19T01:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to track score of each model every so often during a run, so I am doing little generations with warm start. I am having problems with TPOTRegressor where RidgeCV is not being used when fitting.\r\n\r\n## Context of issue\r\n\r\nI am trying to use warm_start to track score of multiple regressor models every few generations. However, even though it tells me that 3 operators have been imported by TPOT, I do not see RidgeCV in the evaluated_individuals.\r\nSorry if my issue is badly formatted or something, this is my first legitimate GitHub issue.\r\n\r\nThank you.\r\n\r\nHere is my config:\r\ntest_config = {\r\n    \"sklearn.linear_model.RidgeCV\": {\r\n        \"alphas\": [0.1, 1.0, 10.0],\r\n        \"fit_intercept\": [True, False],\r\n        \"normalize\":[True,False],\r\n        \"scoring\":[\"neg_mean_squared_error\",\"r2\"],\r\n        \"store_cv_values\":[True,False]\r\n    },\r\n    \"sklearn.ensemble.RandomForestRegressor\": {\r\n        \"n_estimators\": np.arange(10, 201, 5),\r\n        \"max_features\": np.arange(0.05, 1.01, 0.05),\r\n        \"min_samples_split\": range(2, 21),\r\n        \"min_samples_leaf\": range(1, 21),\r\n        \"bootstrap\": [True, False],\r\n    },\r\n    \"xgboost.XGBRegressor\": {\r\n        \"objective\": ['reg:squarederror'],\r\n        \"n_estimators\": np.arange(10, 201, 5),\r\n        \"max_depth\": range(1, 21),\r\n        \"learning_rate\": [1e-3, 1e-2, 1e-1, 0.5, 1.0],\r\n        \"subsample\": np.arange(0.05, 1.01, 0.05),\r\n        \"min_child_weight\": range(1, 21),\r\n        \"nthread\": [1],\r\n    },\r\n}\r\n\r\nHere is my generated dummy data:\r\nindependent=np.random.randint(100,size=1000)\r\nregression_dependent=np.random.randint(1000,size=1000)\r\nX_train2, X_test2, Y_train2, Y_test2 = train_test_split(\r\n    independent, regression_dependent, train_size=0.7, test_size=0.3\r\n)\r\n\r\nHere is my regressor:\r\ntestR = TPOTRegressor(\r\n    generations=3,\r\n    population_size=10,\r\n    verbosity=3,\r\n    config_dict=test_config,\r\n    scoring=\"neg_mean_squared_error\",\r\n    random_state=123,\r\n    use_dask=True,\r\n    template=\"Regressor\",\r\n    warm_start=True\r\n)\r\n\r\nAnd here is my function to read the evaluated individuals:\r\nfor i in range(5):\r\n    testR.fit(X_train2.reshape(-1,1), Y_train2)\r\n    tuples=list(testR.evaluated_individuals_.items())\r\n    tuples.sort(key=lambda x: x[1][\"internal_cv_score\"], reverse=True)\r\n    shownModels = []\r\n    for x in tuples:\r\n        pipeline = x[0]\r\n        name = pipeline[: pipeline.find(\"(\")]\r\n        if name in shownModels:\r\n            continue\r\n        shownModels.append(name)\r\n    models=','.join(str(e) for e in shownModels)\r\n    print(models,\" are shown in run \",i)\r\n\r\n## Process to reproduce the issue\r\n1.Create a config with RidgeCV and some settings.\r\n2.Create a TPOTRegressor using the just created config, on verbosity=3\r\n3.Fit on regression data\r\n\r\n## Expected result\r\nUnder verbosity=3, see all(3) models from config being ran.\r\nSee all(3) unique models in evaluated_individuals_\r\n\r\n## Current result\r\nUnder verbosity=3, only see RandomForestRegressor and XGBRegressor runs.\r\nevaluated_individuals_ only contain randomforestregressor and xgbregressor.\r\n\r\nTo make output cleaner, I am pasting results I get with verbosity 0 and 3 separately.\r\n\r\nVerbosity=0:\r\nXGBRegressor,RandomForestRegressor  are shown in run  0\r\nXGBRegressor,RandomForestRegressor  are shown in run  1\r\nXGBRegressor,RandomForestRegressor  are shown in run  2\r\nXGBRegressor,RandomForestRegressor  are shown in run  3\r\nXGBRegressor,RandomForestRegressor  are shown in run  4\r\n\r\nVerbosity=3:\r\n3 operators have been imported by TPOT.\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=40, style=ProgressStyle(descripti\u2026\r\n\r\nGeneration 1 - Current Pareto front scores:\r\n-1\t-89913.48782333538\tRandomForestRegressor(input_matrix, RandomForestRegressor__bootstrap=True, RandomForestRegressor__max_features=0.25, RandomForestRegressor__min_samples_leaf=18, RandomForestRegressor__min_samples_split=5, RandomForestRegressor__n_estimators=20)\r\n\r\nGeneration 2 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 3 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nXGBRegressor,RandomForestRegressor  are shown in run  0\r\n3 operators have been imported by TPOT.\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=40, style=ProgressStyle(descripti\u2026\r\n\r\nGeneration 1 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 2 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 3 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nXGBRegressor,RandomForestRegressor  are shown in run  1\r\n3 operators have been imported by TPOT.\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=40, style=ProgressStyle(descripti\u2026\r\n\r\nGeneration 1 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 2 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 3 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nXGBRegressor,RandomForestRegressor  are shown in run  2\r\n3 operators have been imported by TPOT.\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=40, style=ProgressStyle(descripti\u2026\r\n\r\nGeneration 1 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 2 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 3 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nXGBRegressor,RandomForestRegressor  are shown in run  3\r\n3 operators have been imported by TPOT.\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=40, style=ProgressStyle(descripti\u2026\r\n\r\nGeneration 1 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 2 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\n_pre_test decorator: _random_mutation_operator: num_test=0 len() of unsized object.\r\nPipeline encountered that has previously been evaluated during the optimization process. Using the score from the previous evaluation.\r\nGeneration 3 - Current Pareto front scores:\r\n-1\t-88616.43101169747\tXGBRegressor(input_matrix, XGBRegressor__learning_rate=0.1, XGBRegressor__max_depth=3, XGBRegressor__min_child_weight=7, XGBRegressor__n_estimators=30, XGBRegressor__nthread=1, XGBRegressor__objective=reg:squarederror, XGBRegressor__subsample=1.0)\r\n\r\nXGBRegressor,RandomForestRegressor  are shown in run  4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/975", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/975/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/975/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/975/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/975", "id": 535506605, "node_id": "MDU6SXNzdWU1MzU1MDY2MDU=", "number": 975, "title": "Error in set_param_recursive code block when pipeline is only 1 estimator", "user": {"login": "ajdajd", "id": 13794421, "node_id": "MDQ6VXNlcjEzNzk0NDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/13794421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajdajd", "html_url": "https://github.com/ajdajd", "followers_url": "https://api.github.com/users/ajdajd/followers", "following_url": "https://api.github.com/users/ajdajd/following{/other_user}", "gists_url": "https://api.github.com/users/ajdajd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajdajd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajdajd/subscriptions", "organizations_url": "https://api.github.com/users/ajdajd/orgs", "repos_url": "https://api.github.com/users/ajdajd/repos", "events_url": "https://api.github.com/users/ajdajd/events{/privacy}", "received_events_url": "https://api.github.com/users/ajdajd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-10T05:40:21Z", "updated_at": "2020-01-03T18:18:18Z", "closed_at": "2020-01-03T18:18:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I exported a pipeline which contains only 1 estimator (not really a pipeline):\r\n\r\n```\r\n# Average CV score on the training set was: 0.7294091581405013\r\nexported_pipeline = ExtraTreesClassifier(bootstrap=True, criterion=\"gini\", max_features=0.5, min_samples_leaf=11, min_samples_split=20, n_estimators=100)\r\n\r\n```\r\n\r\nBut this line\r\n```\r\n# Fix random state for all the steps in exported pipeline\r\nset_param_recursive(exported_pipeline.steps, 'random_state', 1)\r\n```\r\nthrows the error: `AttributeError: 'ExtraTreesClassifier' object has no attribute 'steps'`.\r\n\r\nMy current workaround is to still wrap the estimator in a `make_pipeline` even if it is just a singular step.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/970", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/970/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/970/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/970", "id": 531920179, "node_id": "MDU6SXNzdWU1MzE5MjAxNzk=", "number": 970, "title": "Custom scoring doesn't work only when 'n_jobs = -1'", "user": {"login": "mariomm17", "id": 47488921, "node_id": "MDQ6VXNlcjQ3NDg4OTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/47488921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariomm17", "html_url": "https://github.com/mariomm17", "followers_url": "https://api.github.com/users/mariomm17/followers", "following_url": "https://api.github.com/users/mariomm17/following{/other_user}", "gists_url": "https://api.github.com/users/mariomm17/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariomm17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariomm17/subscriptions", "organizations_url": "https://api.github.com/users/mariomm17/orgs", "repos_url": "https://api.github.com/users/mariomm17/repos", "events_url": "https://api.github.com/users/mariomm17/events{/privacy}", "received_events_url": "https://api.github.com/users/mariomm17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T11:32:41Z", "updated_at": "2019-12-04T11:47:07Z", "closed_at": "2019-12-04T11:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I create my own score function and feed it into TPOT, I can't create a model when I set  **n_jobs = -1**.  My new score function is :\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/47488921/70043220-5c05a780-15c0-11ea-8188-5e5e51a02bdf.png)\r\n\r\n\r\nAs well, when I execute the following:\r\n\r\n![image](https://user-images.githubusercontent.com/47488921/70043980-b7846500-15c1-11ea-84bd-4c591f53fc6d.png)\r\n\r\nI obtain the next error:\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/47488921/70044085-ed294e00-15c1-11ea-81cd-4d11817650a6.png)\r\n\r\nI've been reading some errors related to mine, but I couldn't find any solution to this one.\r\nI would appreciate any help!\r\n\r\nThank you,\r\nMario\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/969", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/969/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/969/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/969/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/969", "id": 529905284, "node_id": "MDU6SXNzdWU1Mjk5MDUyODQ=", "number": 969, "title": "Optimization always get stuck at the same place", "user": {"login": "smrutib2017", "id": 58296354, "node_id": "MDQ6VXNlcjU4Mjk2MzU0", "avatar_url": "https://avatars2.githubusercontent.com/u/58296354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smrutib2017", "html_url": "https://github.com/smrutib2017", "followers_url": "https://api.github.com/users/smrutib2017/followers", "following_url": "https://api.github.com/users/smrutib2017/following{/other_user}", "gists_url": "https://api.github.com/users/smrutib2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/smrutib2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smrutib2017/subscriptions", "organizations_url": "https://api.github.com/users/smrutib2017/orgs", "repos_url": "https://api.github.com/users/smrutib2017/repos", "events_url": "https://api.github.com/users/smrutib2017/events{/privacy}", "received_events_url": "https://api.github.com/users/smrutib2017/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-28T13:13:04Z", "updated_at": "2019-12-03T14:45:42Z", "closed_at": "2019-12-03T14:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am using TPot to create a pipeline for a time-series based classification project. The data involved is not huge (4000*100 matrix size). I am running on a Debian Linux platform.\r\n\r\nWhen I run the fit operation, my optimization gets stuck at the same point. i.e. whatever CV score I get in the first generation doesn't ever change and the model that's picked always remains the same even if I change the data. I have attached the screenshot below.\r\n\r\nBased on what I have read on these forums these are the things I have tried.\r\n\r\n- Made sure I am passing numpy arrays of the correct dimension to fit\r\n\r\n_**     \r\nipdb> type(features_train.values)\r\n<class 'numpy.ndarray'>\r\nipdb> np.shape(features_train.values)\r\n(1305, 61)\r\nipdb> type(labels_train.values)\r\n<class 'numpy.ndarray'>\r\nipdb> np.shape(labels_train.values)\r\n(1305,)\r\n**_\r\n- Made sure there are no NaNs in my data\r\n\r\n- Tried increasing population_size. I was using defaults for generations and population_size.\r\n   \r\n\r\n>  \r\n\r\n    tscv = TimeSeriesSplit(n_splits=5)\r\n    train_test = tscv.split(features_train)\r\n\r\n    tpot = TPOTClassifier(verbosity=3, \r\n                          scoring=\"accuracy\", \r\n                          cv=train_test,\r\n                          random_state=RANDOM_STATE, \r\n                          periodic_checkpoint_folder=\"tpotout\",\r\n                          n_jobs=1)\r\n\r\n    tpot.fit(features_train.values, labels_train.values)\r\n\r\n    print(tpot.score(features_test.values, labels_test.values))\r\n\r\n    tpot.export('tpot_pipeline_' + filetag + '.py')\r\n\r\n    probs = pd.DataFrame(tpot.predict_proba(features_test.values), index=features_test.index)\r\n    probs.to_csv('AutoTPotProbs_' + filetag + '.csv')\r\n\r\n\r\nI suspect, this has something to do with the type of data I am using. Maybe the error messages in the screenshot will shed some light?\r\n\r\n![image](https://user-images.githubusercontent.com/58296354/69808938-98ac5a00-11e0-11ea-908f-47ccad6007f6.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/968", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/968/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/968/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/968", "id": 529423917, "node_id": "MDU6SXNzdWU1Mjk0MjM5MTc=", "number": 968, "title": "Using a customer scorer that takes y_prob instead of y_pred? (brier_score_loss)", "user": {"login": "soliverc", "id": 47222261, "node_id": "MDQ6VXNlcjQ3MjIyMjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/47222261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soliverc", "html_url": "https://github.com/soliverc", "followers_url": "https://api.github.com/users/soliverc/followers", "following_url": "https://api.github.com/users/soliverc/following{/other_user}", "gists_url": "https://api.github.com/users/soliverc/gists{/gist_id}", "starred_url": "https://api.github.com/users/soliverc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soliverc/subscriptions", "organizations_url": "https://api.github.com/users/soliverc/orgs", "repos_url": "https://api.github.com/users/soliverc/repos", "events_url": "https://api.github.com/users/soliverc/events{/privacy}", "received_events_url": "https://api.github.com/users/soliverc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T15:37:54Z", "updated_at": "2019-12-06T15:19:01Z", "closed_at": "2019-12-06T15:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use brier_score_loss as a custom scorer, but it takes `y_prob` rather than `y_pred`: https://scikit-learn.org/stable/modules/generated/sklearn.metrics.brier_score_loss.html \r\n\r\nIs there any way to implement this? \r\n\r\n```python\r\nfrom sklearn.metrics import brier_score_loss\r\n\r\ntpot = TPOTClassifier(generations=1, \r\n                      population_size=100,\r\n                      verbosity=2,\r\n                      n_jobs=-2,\r\n                      scoring=brier_score_loss,\r\n                      template='Classifier')\r\n```\r\nThis is the error when I try to use it:\r\n\r\n```python\r\nC:\\Users\\seanc\\Anaconda3\\lib\\site-packages\\tpot\\base.py:350: DeprecationWarning: Scoring function <function brier_score_loss at 0x000001A1314D2D08> looks like it is a metric function rather than a scikit-learn scorer. This scoring type was deprecated in version TPOT 0.9.1 and will be removed in version 0.11. Please update your custom scoring function.\r\n  'Please update your custom scoring function.'.format(scoring), DeprecationWarning)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/966", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/966/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/966/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/966/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/966", "id": 528846500, "node_id": "MDU6SXNzdWU1Mjg4NDY1MDA=", "number": 966, "title": "max_time_mins fails to function in some scenarios", "user": {"login": "jrm5100", "id": 2191259, "node_id": "MDQ6VXNlcjIxOTEyNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2191259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrm5100", "html_url": "https://github.com/jrm5100", "followers_url": "https://api.github.com/users/jrm5100/followers", "following_url": "https://api.github.com/users/jrm5100/following{/other_user}", "gists_url": "https://api.github.com/users/jrm5100/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrm5100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrm5100/subscriptions", "organizations_url": "https://api.github.com/users/jrm5100/orgs", "repos_url": "https://api.github.com/users/jrm5100/repos", "events_url": "https://api.github.com/users/jrm5100/events{/privacy}", "received_events_url": "https://api.github.com/users/jrm5100/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-26T16:44:44Z", "updated_at": "2020-01-11T10:54:06Z", "closed_at": "2020-01-03T18:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are certain scenarios where the _max_time_mins_ parameter is ignored.  I believe it depends on the data, TPOT configuration, population size, and value of _max_time_mins_.\r\n\r\n## Context of the issue\r\n\r\nI am working on creating pipelines using a TPOTRegressor.  I wanted to test performance across different population/generation sizes to find suitable values for running a full analysis (balancing performance and runtime).  Initially I was thinking something like 4 different population sizes and 4 different values for the number of generations.  Rather than creating 16 runs, I realized I could simply use the max_time_mins parameter to run for some amount of time and then check the performance of pipelines saved to the _periodic_checkpoint_folder_.\r\n\r\nI have three different outputs that I am looking at using the same input features.  Therefore I set up scripts to run TPOT for 24 hours per output, using four different population sizes.  \r\n\r\n## Process to reproduce the issue\r\n\r\nI was using the tpot-light configuration and a template (FeatureSetSelector-Transformer-Regressor).\r\n\r\nI haven't been able to reproduce this in a shorter scenario (for example, I tried using a population size of 20 and limiting the run to an hour).  My assumption is that repeating it should be possible with a small population size and large max_time_mins parameter, but using a simple configuration (so that there aren't many possible pipelines) or some specific kind of data may also be helpful.\r\n\r\n## Expected result\r\n\r\nLike the 1000 population run, the smaller population sizes should have stopped optimization at or shortly after hitting the 24 hour (1440 minute) mark.\r\n\r\n## Current result\r\n\r\nUsing a population size of 1000 worked as expected.  Running the same scripts with 100, 250, or 500 as the population size resulted in TPOT continuing to evaluate the first output, ignoring the max_time_mins parameter.\r\n\r\n|   Run   \t| Last saved checkpoint generation \t|  Last saved checkpoint time \t| Total Generations \t| Stopped? \t|\r\n|:-------:\t|:--------------------------------:\t|:---------------------------:\t|:-----------------:\t|:--------:\t|\r\n|  100pop \t|                39                \t|          58 minutes         \t|        6439       \t|    No    \t|\r\n|  250pop \t|                35                \t|         131 minutes         \t|        2015       \t|    No    \t|\r\n|  500pop \t|                24                \t|         199 minutes         \t|        820        \t|    No    \t|\r\n| 1000pop \t|                44                \t|         620 minutes         \t|        102        \t|    Yes   \t|\r\n\r\n\r\n## Possible fix\r\n\r\nThe `_stop_by_max_time_mins()` method is only run inside of a `for sklearn_pipeline in sklearn_pipeline_list:` loop.  My guess is that `sklearn_pipeline_list` is empty in later generations and the method isn't run.\r\n\r\nNotably, the TPOTRegressors that failed to stop running were not seeing any improvement when the time limit would have been reached- no checkpoint pipelines were saved recently and the _Current best internal CV score_ was not changing.  The progress bars showed 100% progress immediately in each generation:\r\n\r\nEarly generations:\r\n```\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 200/200 [02:19<00:00,  6.29s/pipeline]\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 200/200 [03:14<00:00,  5.44s/pipeline]\r\nOptimization Progress:  67%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u2039   | 202/300 [03:29<09:43,  5.96s/pipeline]\r\nOptimization Progress:  81%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6  | 242/300 [03:39<04:06,  4.25s/pipeline]\r\nOptimization Progress:  94%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u008d| 282/300 [03:50<00:54,  3.05s/pipeline]\r\n```\r\n\r\nLater generations:\r\n```\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101600/101600 [14:42:19<00:00, 17.19s/pipeline]\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101600/101600 [14:43:06<00:00, 12.17s/pipeline]\r\n                                                                                       \r\n\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101700/101700 [14:43:06<00:00, 12.17s/pipeline]\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101700/101700 [14:43:55<00:00,  8.67s/pipeline]\r\n                                                                                       \r\n\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101800/101800 [14:43:55<00:00,  8.67s/pipeline]\r\nOptimization Progress: 100%|\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6\u00e2\u2013\u02c6| 101800/101800 [14:44:43<00:00,  6.21s/pipeline]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/965", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/965/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/965/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/965/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/965", "id": 527757054, "node_id": "MDU6SXNzdWU1Mjc3NTcwNTQ=", "number": 965, "title": "Access average CV score on the training set", "user": {"login": "belouali", "id": 1820934, "node_id": "MDQ6VXNlcjE4MjA5MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1820934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belouali", "html_url": "https://github.com/belouali", "followers_url": "https://api.github.com/users/belouali/followers", "following_url": "https://api.github.com/users/belouali/following{/other_user}", "gists_url": "https://api.github.com/users/belouali/gists{/gist_id}", "starred_url": "https://api.github.com/users/belouali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belouali/subscriptions", "organizations_url": "https://api.github.com/users/belouali/orgs", "repos_url": "https://api.github.com/users/belouali/repos", "events_url": "https://api.github.com/users/belouali/events{/privacy}", "received_events_url": "https://api.github.com/users/belouali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T21:10:54Z", "updated_at": "2019-11-24T23:31:43Z", "closed_at": "2019-11-24T23:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \r\n\r\nI am trying to access the average CV score on the training set of the fitted pipeline. I know I can use tpot.export and the average score is in the exported file. However, is there a way to access it as a variable?\r\n\r\nThank you for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/959", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/959/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/959/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/959/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/959", "id": 522300045, "node_id": "MDU6SXNzdWU1MjIzMDAwNDU=", "number": 959, "title": "Using \"memory=\"C:/memdir/\"\" with dask distributed", "user": {"login": "rjstange", "id": 52304971, "node_id": "MDQ6VXNlcjUyMzA0OTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/52304971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjstange", "html_url": "https://github.com/rjstange", "followers_url": "https://api.github.com/users/rjstange/followers", "following_url": "https://api.github.com/users/rjstange/following{/other_user}", "gists_url": "https://api.github.com/users/rjstange/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjstange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjstange/subscriptions", "organizations_url": "https://api.github.com/users/rjstange/orgs", "repos_url": "https://api.github.com/users/rjstange/repos", "events_url": "https://api.github.com/users/rjstange/events{/privacy}", "received_events_url": "https://api.github.com/users/rjstange/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T15:35:59Z", "updated_at": "2019-11-13T17:55:49Z", "closed_at": "2019-11-13T17:33:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does only the machine with the scheduler have the joblib memory data stored locally, while the other worker machines send the scheduler machine their own joblib info of completed work to be stored on the scheduler's hard drive?\r\n\r\nI hope I am phrasing this question properly. I am about to foray into using Dask Distributed with my two desktops and want to make sure that the worker desktop is not going to be storing away the same data that my scheduler/worker machine is, mostly since my worker machine does not have room for hundreds of gigabytes.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/955", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/955/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/955/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/955", "id": 520328204, "node_id": "MDU6SXNzdWU1MjAzMjgyMDQ=", "number": 955, "title": "AttributeError: 'TPOTRegressor' object has no attribute '_set_param_recursive'", "user": {"login": "lmsanch", "id": 3156487, "node_id": "MDQ6VXNlcjMxNTY0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3156487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmsanch", "html_url": "https://github.com/lmsanch", "followers_url": "https://api.github.com/users/lmsanch/followers", "following_url": "https://api.github.com/users/lmsanch/following{/other_user}", "gists_url": "https://api.github.com/users/lmsanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmsanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmsanch/subscriptions", "organizations_url": "https://api.github.com/users/lmsanch/orgs", "repos_url": "https://api.github.com/users/lmsanch/repos", "events_url": "https://api.github.com/users/lmsanch/events{/privacy}", "received_events_url": "https://api.github.com/users/lmsanch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-09T03:59:32Z", "updated_at": "2019-11-11T14:56:54Z", "closed_at": "2019-11-11T14:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running version 0.11.0 of TPOT and had developed a function that leveraged some of the properties of tpot after training.\r\n\r\n```\r\ndeap_pipeline = creator.Individual.from_string(pipeline_string, tpot_obj._pset)\r\nsklearn_pipeline = tpot_obj._toolbox.compile(expr=deap_pipeline)\r\nsklearn_pipeline_str = generate_pipeline_code(expr_to_tree(deap_pipeline, tpot_obj._pset), tpot_obj.operators)\r\ntpot_obj._set_param_recursive(sklearn_pipeline.steps, 'random_state', 42)\r\npipe_list.append(sklearn_pipeline_str)\r\n```\r\n\r\nI was using `tpot_obj._set_param_recursive(sklearn_pipeline.steps, 'random_state', 42)\r\nsimilar to the solution that @weixuanfu posted a while ago.\r\n\r\n```\r\ntpot_obj = TPOTRegessror(cv=5, scoring='r2')\r\ntpot_obj.fit(X, y)\r\nsklearn_pipeline = tpot_obj.fitted_pipeline_\r\n# reset random state of all operators in the pipeline \r\ntpot_obj._set_param_recursive(sklearn_pipeline.steps, 'random_state', 42)\r\ncv_scores = cross_val_score(sklearn_pipeline, X, y, cv=5, scoring='r2', verbose=0)\r\nmean_cv_scores = np.mean(cv_scores)\r\n```\r\n\r\n_Originally posted by @weixuanfu in https://github.com/EpistasisLab/tpot/issues/886#issuecomment-510461961_\r\n\r\nhe issue I have now is that my code does not work because it seems that ._set_param_recursive was removed. Is there any other attribute that performs the same task? How can I replicate the functionality of the line above with whatever replaced _set_param_recursive?\r\nIf there isn't anything, how can I downgrade tpot to the last version that had ._set_param_recursive?\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/954", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/954/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/954/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/954/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/954", "id": 520267007, "node_id": "MDU6SXNzdWU1MjAyNjcwMDc=", "number": 954, "title": "ValueError: 'RMSLE' is not a valid scoring value. Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.", "user": {"login": "lmsanch", "id": 3156487, "node_id": "MDQ6VXNlcjMxNTY0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3156487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmsanch", "html_url": "https://github.com/lmsanch", "followers_url": "https://api.github.com/users/lmsanch/followers", "following_url": "https://api.github.com/users/lmsanch/following{/other_user}", "gists_url": "https://api.github.com/users/lmsanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmsanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmsanch/subscriptions", "organizations_url": "https://api.github.com/users/lmsanch/orgs", "repos_url": "https://api.github.com/users/lmsanch/repos", "events_url": "https://api.github.com/users/lmsanch/events{/privacy}", "received_events_url": "https://api.github.com/users/lmsanch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-08T22:37:47Z", "updated_at": "2020-08-16T11:21:31Z", "closed_at": "2019-11-09T04:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a custom function with sklearn metrics, which worked fine until I had to do a new reinstall of Anaconda and TPOT in my mac. Now, I am using tpot.__version__ '0.9.1', python 3.7.5\r\n\r\nThe function runs well on my Ubuntu machine, so I am not sure what the problem is.\r\n\r\n## Context of the issue\r\n```\r\ndef RMSLE(y, y_pred):\r\n    \"\"\"Root mean squared loss.\r\n\r\n    Keyword arguments:\r\n    y_true -- array containing true values\r\n    y_pred -- predictions\r\n    example - rmsle_loss = make_scorer(rmsle_loss, greater_is_better=False)\r\n    \"\"\"\r\n    return (np.sqrt(mean_squared_error(y, y_pred)))\r\n```\r\nThen:\r\n`rmsle_loss = make_scorer(RMSLE, greater_is_better=False)`\r\n\r\nThen I pass this parameters to TPOT:\r\n```\r\nparams ={'cv':5,\r\n         'scoring': rmsle_loss,\r\n         'generations':10,\r\n         'random_state':0,\r\n         'max_eval_time_mins':10}\r\n\r\n```\r\nI get these warnings:\r\n```\r\n[17:18:21] WARNING: src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n[17:18:21] WARNING: src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n[17:18:21] WARNING: src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n[17:18:22] WARNING: src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\r\n```\r\n\r\nThen in get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/sklearn/metrics/scorer.py\", line 228, in get_scorer\r\n    scorer = SCORERS[scoring]\r\nKeyError: 'RMSLE'\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/sklearn/metrics/scorer.py\", line 228, in get_scorer\r\n    scorer = SCORERS[scoring]\r\nKeyError: 'RMSLE'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py\", line 418, in _process_worker\r\n    r = call_item()\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py\", line 272, in __call__\r\n    return self.fn(*self.args, **self.kwargs)\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py\", line 600, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py\", line 256, in __call__\r\n    for func, args, kwargs in self.items]\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py\", line 256, in <listcomp>\r\n    for func, args, kwargs in self.items]\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/stopit/utils.py\", line 145, in wrapper\r\n    result = func(*args, **kwargs)\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/tpot/gp_deap.py\", line 428, in _wrapped_cross_val_score\r\n    scorer = check_scoring(sklearn_pipeline, scoring=scoring_function)\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/sklearn/metrics/scorer.py\", line 272, in check_scoring\r\n    return get_scorer(scoring)\r\n  File \"/Users/luissanchez/opt/anaconda3/lib/python3.7/site-packages/sklearn/metrics/scorer.py\", line 232, in get_scorer\r\n    'to get valid options.' % (scoring))\r\nValueError: 'RMSLE' is not a valid scoring value. Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n~/opt/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    622                     verbose=self.verbosity,\r\n--> 623                     per_generation_function=self._check_periodic_pipeline\r\n    624                 )\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/tpot/gp_deap.py in eaMuPlusLambda(population, toolbox, mu, lambda_, cxpb, mutpb, ngen, pbar, stats, halloffame, verbose, per_generation_function)\r\n    230 \r\n--> 231     fitnesses = toolbox.evaluate(invalid_ind)\r\n    232     for ind, fit in zip(invalid_ind, fitnesses):\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/tpot/base.py in _evaluate_individuals(self, individuals, features, target, sample_weight, groups)\r\n   1142                 tmp_result_scores = parallel(delayed(partial_wrapped_cross_val_score)(sklearn_pipeline=sklearn_pipeline)\r\n-> 1143                                              for sklearn_pipeline in sklearn_pipeline_list[chunk_idx:chunk_idx + self.n_jobs * 4])\r\n   1144                 # update pbar\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py in __call__(self, iterable)\r\n   1015             with self._backend.retrieval_context():\r\n-> 1016                 self.retrieve()\r\n   1017             # Make sure that we get a last message telling us we are done\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/joblib/parallel.py in retrieve(self)\r\n    907                 if getattr(self._backend, 'supports_timeout', False):\r\n--> 908                     self._output.extend(job.get(timeout=self.timeout))\r\n    909                 else:\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py in wrap_future_result(future, timeout)\r\n    553         try:\r\n--> 554             return future.result(timeout=timeout)\r\n    555         except LokyTimeoutError:\r\n\r\n~/opt/anaconda3/lib/python3.7/concurrent/futures/_base.py in result(self, timeout)\r\n    434             elif self._state == FINISHED:\r\n--> 435                 return self.__get_result()\r\n    436             else:\r\n\r\n~/opt/anaconda3/lib/python3.7/concurrent/futures/_base.py in __get_result(self)\r\n    383         if self._exception:\r\n--> 384             raise self._exception\r\n    385         else:\r\n\r\nValueError: 'RMSLE' is not a valid scoring value. Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nRuntimeError                              Traceback (most recent call last)\r\n.\r\n.\r\n.\r\n\r\n\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n```\r\n\r\nFor the first value error,  ValueError: 'RMSLE' is not a valid scoring value. TPOT warns: Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.\r\n\r\nIf I do that, I see that my function IS among the valid functions, so I dont know what the issue is:\r\n\r\n```\r\nsorted(sklearn.metrics.SCORERS.keys())\r\n['RMSLE',\r\n 'accuracy',\r\n 'adjusted_mutual_info_score',\r\n 'adjusted_rand_score',\r\n 'average_precision',\r\n 'balanced_accuracy',\r\n 'brier_score_loss',\r\n 'completeness_score',\r\n 'explained_variance',\r\n 'f1',\r\n 'f1_macro',\r\n 'f1_micro',\r\n 'f1_samples',\r\n 'f1_weighted',\r\n 'fowlkes_mallows_score',\r\n 'homogeneity_score',\r\n 'jaccard',\r\n 'jaccard_macro',\r\n 'jaccard_micro',\r\n 'jaccard_samples',\r\n 'jaccard_weighted',\r\n 'max_error',\r\n 'mutual_info_score',\r\n 'neg_log_loss',\r\n 'neg_mean_absolute_error',\r\n 'neg_mean_squared_error',\r\n 'neg_mean_squared_log_error',\r\n 'neg_median_absolute_error',\r\n 'normalized_mutual_info_score',\r\n 'precision',\r\n 'precision_macro',\r\n 'precision_micro',\r\n 'precision_samples',\r\n 'precision_weighted',\r\n 'r2',\r\n 'recall',\r\n 'recall_macro',\r\n 'recall_micro',\r\n 'recall_samples',\r\n 'recall_weighted',\r\n 'roc_auc',\r\n 'v_measure_score']\r\n```\r\n\r\nI had a similar issue and Weixuan Fu suggested to install a different version of TPOT to solve the related problem.\r\n\r\n`pip install --upgrade --no-deps --force-reinstall git+https://github.com/weixuanfu/tpot.git@scoring_api`\r\n\r\nI did this in my mac (don't remember doing it in Ubuntu), and I still have the problem.\r\n\r\nI also tried:\r\n```\r\nfrom sklearn.metrics import make_scorer, SCORERS\r\nSCORERS['rmsle_loss'] = make_scorer(RMSLE, greater_is_better=False)\r\n```\r\n\r\nAnd then passing this to my dictionary of parameters to TPOT:\r\n```\r\nparams ={'cv':5,\r\n         'scoring': 'rmsle_loss',\r\n         'generations':10,\r\n         'random_state':0,\r\n         'max_eval_time_mins':10}\r\n```\r\n\r\nObtaining the same error:\r\n`ValueError: 'rmsle_loss' is not a valid scoring value. Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.`\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n\r\n## Process to reproduce the issue\r\n\r\n[ordered list the process to finding and recreating the issue, example below]\r\n\r\n1. User creates TPOT instance\r\n2. User calls TPOT `fit()` function with training data and custom function\r\n3. TPOT crashes with a `'RMSLE'` at the beginning of the process\r\n\r\n## Expected result\r\n\r\nto run w/o problems, like in my Ubuntu machine\r\n## Current result\r\n\r\n[describe what you currently experience from this process, and thereby explain the bug]\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/947", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/947/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/947/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/947/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/947", "id": 517570066, "node_id": "MDU6SXNzdWU1MTc1NzAwNjY=", "number": 947, "title": "Can you tell me the reason why the following error occurred while I was running titanic data", "user": {"login": "yuxiaomu", "id": 47933430, "node_id": "MDQ6VXNlcjQ3OTMzNDMw", "avatar_url": "https://avatars1.githubusercontent.com/u/47933430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuxiaomu", "html_url": "https://github.com/yuxiaomu", "followers_url": "https://api.github.com/users/yuxiaomu/followers", "following_url": "https://api.github.com/users/yuxiaomu/following{/other_user}", "gists_url": "https://api.github.com/users/yuxiaomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuxiaomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuxiaomu/subscriptions", "organizations_url": "https://api.github.com/users/yuxiaomu/orgs", "repos_url": "https://api.github.com/users/yuxiaomu/repos", "events_url": "https://api.github.com/users/yuxiaomu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuxiaomu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-05T06:21:37Z", "updated_at": "2019-11-05T21:16:36Z", "closed_at": "2019-11-05T21:16:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/47933430/68183486-90913e00-ffd7-11e9-8179-5e07807426e0.png)\r\nTraceback (most recent call last):\r\n  File \"/home/yyk/PycharmProjects/untitled1/jinhua/tpot-master/tutorials/tpot_titanic_pipeline.py\", line 7, in <module>\r\n    tpot_data = np.recfromcsv('/home/yyk/PycharmProjects/untitled1/jinhua/tpot-master/tutorials/data/titanic_train.csv', delimiter='COLUMN_SEPARATOR', dtype=np.float64)\r\n  File \"/opt/anaconda/lib/python3.7/site-packages/numpy/lib/npyio.py\", line 2322, in recfromcsv\r\n    output = genfromtxt(fname, **kwargs)\r\n  File \"/opt/anaconda/lib/python3.7/site-packages/numpy/lib/npyio.py\", line 2205, in genfromtxt\r\n    output = np.array(data, dtype)\r\nValueError: could not convert string to float: b'1,0,3,\"Braund, Mr. Owen Harris\",male,22,1,0,A/5 21171,7.25,,S'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/946", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/946/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/946/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/946/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/946", "id": 517524477, "node_id": "MDU6SXNzdWU1MTc1MjQ0Nzc=", "number": 946, "title": "Warm start: Population doesn't persist when running for max_time_mins", "user": {"login": "ben-ix", "id": 9159657, "node_id": "MDQ6VXNlcjkxNTk2NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9159657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-ix", "html_url": "https://github.com/ben-ix", "followers_url": "https://api.github.com/users/ben-ix/followers", "following_url": "https://api.github.com/users/ben-ix/following{/other_user}", "gists_url": "https://api.github.com/users/ben-ix/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-ix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-ix/subscriptions", "organizations_url": "https://api.github.com/users/ben-ix/orgs", "repos_url": "https://api.github.com/users/ben-ix/repos", "events_url": "https://api.github.com/users/ben-ix/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-ix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-05T03:14:40Z", "updated_at": "2020-05-13T15:08:05Z", "closed_at": "2020-05-13T15:08:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Warm start does not appear to work as expected\r\n\r\n## Context of the issue\r\n\r\nHi there,\r\n\r\nWhat I was hoping to do was generate a testing curve of TPOTs performance for comparison in a paper, by checking the performance on test set every X minutes. \r\n\r\n_Side Note: I'm aware this shouldn't be used for model selection or training, its purely for comparison sake._\r\n\r\nTo do this I was trying to use the warm start parameter. As a minimal example, I was aiming to do something like\r\n\r\n```\r\ntesting_frequency = 5\r\ntotal_test_runs = 30\r\n\r\ntpot = TPOTClassifier(\r\n    max_time_mins=testing_frequency,\r\n    warm_start=True,\r\n)\r\n\r\nscores = []\r\n\r\nfor _ in range(total_test_runs):\r\n    tpot.fit(train_x, train_y)\r\n    score = tpot.score(test_x, test_y)\r\n    scores.append(score)\r\n\r\nplot(scores)\r\n```\r\n\r\nTo then be able to plot scores against comparison methods.\r\n\r\nHowever, it seems that if TPOT times out (KeyboardInterrupt thrown), then self._pop will not be updated and that the subsequent calls to fit() will have the population reinitialised randomly.\r\n\r\n## Process to reproduce the issue\r\n\r\n1. Run code above.\r\n2. Check the starting value of self._pop in each call to fit, and the result of population[:] = toolbox.select(population + offspring, mu) at each step in eaMuPlusLambda\r\n\r\n## Expected result\r\n\r\nUpon subsequent calls to fit(), self._pop to begin as the last population from eaMuPlusLambda in the previous call to fit. This currently only occurs if the call to eaMuPlusLambda finishes \"gracefully\" (i.e. the max generations hit): https://github.com/EpistasisLab/tpot/blob/master/tpot/base.py#L756 \r\n\r\n## Current result\r\n\r\nself._pop is none upon subsequent calls to fit() if using max_time_mins rather than generations, so tpot starts the population again from scratch (well I guess the cache and Pareto front etc are maintained, but the population itself lost).\r\n\r\nThe result wont get worse than where it was before resuming (since the Pareto front is maintained), but its definetly not what I was expecting with a warm start and losing the population seems detrimental to evolution. Shouldn't the population persist from where it was left?\r\n\r\n## Possible fix\r\n\r\nOne way is in _evaluate_individuals, whenever self._pareto_front.update(population) is called, self._pop could also be set if warm_start is true. However, currently _evaluate_individuals is only ever given the offspring so this wouldn't work directly. _evaluate_individuals would need to be passed both the previous population + offspring to do this correctly which isn't ideal.\r\n\r\nAlternatively, self._pop could be modified directly in eaMuPlusLambda. As a result self._pop would be set even if warm_start=False, so some of the checks for if self._pop would need to be updated to check the warm start parameter as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/943", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/943/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/943/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/943", "id": 513231332, "node_id": "MDU6SXNzdWU1MTMyMzEzMzI=", "number": 943, "title": "README says MNIST while in reality it's the 8x8 variant", "user": {"login": "darthdeus", "id": 123374, "node_id": "MDQ6VXNlcjEyMzM3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darthdeus", "html_url": "https://github.com/darthdeus", "followers_url": "https://api.github.com/users/darthdeus/followers", "following_url": "https://api.github.com/users/darthdeus/following{/other_user}", "gists_url": "https://api.github.com/users/darthdeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/darthdeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darthdeus/subscriptions", "organizations_url": "https://api.github.com/users/darthdeus/orgs", "repos_url": "https://api.github.com/users/darthdeus/repos", "events_url": "https://api.github.com/users/darthdeus/events{/privacy}", "received_events_url": "https://api.github.com/users/darthdeus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-28T10:53:38Z", "updated_at": "2019-11-05T21:17:53Z", "closed_at": "2019-11-05T21:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README gif says \"~99% accuracy on MNIST out of the box\", but this is not true. The model is being trained on https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_digits.html, which actually is not the 28x28 MNIST most people are using, but only an 8x8 reduced variant of it.\r\n\r\nI ran into this trying to find a good classifier on the standard MNIST 28x28 dataset, not being able to get any good results (even with lots of compute).\r\n\r\nI do believe this was done in good faith, and maybe coming from the deep learning side of things I'm biased in thinking that MNIST is 28x28, but I've spoken to multiple people and haven't found one who would think MNIST meant 8x8. I do realize that it is visible in the code in the gif, but personally, I never used the [`datasets.load_digits`](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_digits.html) function.\r\n\r\nI did notice that [here in the README](https://github.com/EpistasisLab/tpot#classification) it says *practice MNIST*, which up until now I just translated as \"MNIST dataset used for practice\" and not \"the practice version of MNIST\".\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/942", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/942/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/942/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/942/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/942", "id": 513073765, "node_id": "MDU6SXNzdWU1MTMwNzM3NjU=", "number": 942, "title": "How can I use my own data to train an optimal network model? My data set is like this: picture +txt, where the number of txt and picture is the same, each txt holds the label of the corresponding picture.", "user": {"login": "yuxiaomu", "id": 47933430, "node_id": "MDQ6VXNlcjQ3OTMzNDMw", "avatar_url": "https://avatars1.githubusercontent.com/u/47933430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuxiaomu", "html_url": "https://github.com/yuxiaomu", "followers_url": "https://api.github.com/users/yuxiaomu/followers", "following_url": "https://api.github.com/users/yuxiaomu/following{/other_user}", "gists_url": "https://api.github.com/users/yuxiaomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuxiaomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuxiaomu/subscriptions", "organizations_url": "https://api.github.com/users/yuxiaomu/orgs", "repos_url": "https://api.github.com/users/yuxiaomu/repos", "events_url": "https://api.github.com/users/yuxiaomu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuxiaomu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818168, "node_id": "MDU6TGFiZWwyODE4MTgxNjg=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-28T03:11:05Z", "updated_at": "2019-10-28T12:11:56Z", "closed_at": "2019-10-28T12:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/938", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/938/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/938/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/938/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/938", "id": 512879595, "node_id": "MDU6SXNzdWU1MTI4Nzk1OTU=", "number": 938, "title": ".export() to something else than a file", "user": {"login": "jorijnsmit", "id": 2835259, "node_id": "MDQ6VXNlcjI4MzUyNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2835259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorijnsmit", "html_url": "https://github.com/jorijnsmit", "followers_url": "https://api.github.com/users/jorijnsmit/followers", "following_url": "https://api.github.com/users/jorijnsmit/following{/other_user}", "gists_url": "https://api.github.com/users/jorijnsmit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorijnsmit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorijnsmit/subscriptions", "organizations_url": "https://api.github.com/users/jorijnsmit/orgs", "repos_url": "https://api.github.com/users/jorijnsmit/repos", "events_url": "https://api.github.com/users/jorijnsmit/events{/privacy}", "received_events_url": "https://api.github.com/users/jorijnsmit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-26T20:08:36Z", "updated_at": "2019-11-05T21:21:44Z", "closed_at": "2019-11-05T21:21:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes running this library on hosted instances instead of local machines, the process of exporting to `.py` file is not always optimal. I might not have access to file output or they can get wiped after closing sessions.\r\n\r\nAn alternative way of reporting the best performing pipeline so far would be via stdout. For example, whenever a new best performing pipeline is found during the fitting process, a simple output of the `make_pipeline([...])` and its performance measure would suffice.\r\n\r\nIs there something I am missing that already makes this possible? I could not find anything in the documentation in regards to the `.export()` function besides that [it takes a string as a parameter for the output file](https://epistasislab.github.io/tpot/api/#tpotclassifier-export).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/936", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/936/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/936/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/936/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/936", "id": 511135207, "node_id": "MDU6SXNzdWU1MTExMzUyMDc=", "number": 936, "title": "suggestion for more intuitive use of parameter max_time_mins", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-23T07:36:43Z", "updated_at": "2019-11-05T21:22:05Z", "closed_at": "2019-11-05T21:22:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now the logic is:\r\n\r\n*generations* > 1 and *max_time_mins*=None --> tpot will run for *generations*\r\n*generations* > 1 and *max_time_mins* > 0 --> tpot will run for ~*max_time_mins* minutes and ignore generations\r\n\r\nHowever, if both *generations* and *max_time_mins* are defined, i would expect both to be a limiting factor. E.g, if generations is reached and the time is not up, stop regardless. The other way around, if generations is not reached but the time is up, tpot should be stopped.\r\n\r\nWhat do you think about this proposal? I think it would be more intuitive if no parameter is just ignored.\r\nThat would also mean:\r\n\r\n*generations*=None and *max_time_mins* > 0 --> tpot will run for *max_time_mins* minutes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/935", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/935/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/935/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/935", "id": 510882453, "node_id": "MDU6SXNzdWU1MTA4ODI0NTM=", "number": 935, "title": "Mixed problems: TPOTRegressor unable to take a customized loss function, related to njobs", "user": {"login": "lmsanch", "id": 3156487, "node_id": "MDQ6VXNlcjMxNTY0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3156487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmsanch", "html_url": "https://github.com/lmsanch", "followers_url": "https://api.github.com/users/lmsanch/followers", "following_url": "https://api.github.com/users/lmsanch/following{/other_user}", "gists_url": "https://api.github.com/users/lmsanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmsanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmsanch/subscriptions", "organizations_url": "https://api.github.com/users/lmsanch/orgs", "repos_url": "https://api.github.com/users/lmsanch/repos", "events_url": "https://api.github.com/users/lmsanch/events{/privacy}", "received_events_url": "https://api.github.com/users/lmsanch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-22T20:15:10Z", "updated_at": "2019-10-23T16:55:28Z", "closed_at": "2019-10-23T16:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run a custom scoring formula, according to the instructions in TPOT. Basically, I copied the function below that somebody used successfully:\r\n\r\n```\r\ndef rmsle_loss(y_true, y_pred):\r\n    assert len(y_true) == len(y_pred)\r\n    try:\r\n        terms_to_sum = [(math.log(y_pred[i] + 1) - math.log(y_true[i] + 1)) ** 2.0 for i, pred in enumerate(y_pred)]\r\n    except:\r\n        return float('inf')\r\n    if not (y_true >= 0).all() and not (y_pred >= 0).all():\r\n            return float('inf')\r\n    return (sum(terms_to_sum) * (1.0/len(y_true))) ** 0.5\r\n\r\n```\r\nI found problems with TPOT running this, and reading issues related to custom scorers, I followed somebody's suggestion to set n_jobs = 1.\r\n\r\nI did this and it started to work well, but then after several generations, I got the following error:\r\n\r\n\r\n\r\n> RuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n\r\nI am running TPOT in a Jupyter Notebook, not sure if this is part of the problem.\r\n\r\nAny feedback?\r\n\r\n## Context of the issue\r\n\r\nMy code runs well with any of the built in scorers, but it is failing with the custom scorer above.\r\n\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n```\r\nRuntimeError                              Traceback (most recent call last)\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    751                     verbose=self.verbosity,\r\n--> 752                     per_generation_function=self._check_periodic_pipeline\r\n    753                 )\r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/gp_deap.py in eaMuPlusLambda(population, toolbox, mu, lambda_, cxpb, mutpb, ngen, pbar, stats, halloffame, verbose, per_generation_function)\r\n    235         if per_generation_function is not None:\r\n--> 236             per_generation_function(gen)\r\n    237         # Vary the population\r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in _check_periodic_pipeline(self, gen)\r\n   1038         \"\"\"\r\n-> 1039         self._update_top_pipeline()\r\n   1040         if self.periodic_checkpoint_folder is not None:\r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    834             if not self._optimized_pipeline:\r\n--> 835                 raise RuntimeError('There was an error in the TPOT optimization '\r\n    836                                    'process. This could be because the data was '\r\n\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-114-e985e44f3405> in <module>\r\n----> 1 solution = regression_portfolio(train, y_train1, test, params)\r\n\r\n<ipython-input-113-ab9b330dd583> in regression_portfolio(train, y_train, predict_oos, params, plot_errors, plot_frontier)\r\n     52 \r\n     53     # here train is done on a cross validation basis, on the train segment\r\n---> 54     tpot.fit(X_train, y_train)\r\n     55     best = tpot.predict(predict_oos)\r\n     56     test_pred = tpot.predict(X_test)\r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    782                     # raise the exception if it's our last attempt\r\n    783                     if attempt == (attempts - 1):\r\n--> 784                         raise e\r\n    785             return self\r\n    786 \r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    773                         self._pbar.close()\r\n    774 \r\n--> 775                     self._update_top_pipeline()\r\n    776                     self._summary_of_best_pipeline(features, target)\r\n    777                     # Delete the temporary cache before exiting\r\n\r\n/anaconda3/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    833 \r\n    834             if not self._optimized_pipeline:\r\n--> 835                 raise RuntimeError('There was an error in the TPOT optimization '\r\n    836                                    'process. This could be because the data was '\r\n    837                                    'not formatted properly, or because data for '\r\n\r\nRuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n```\r\n\r\n\r\n## Process to reproduce the issue\r\n\r\n[ordered list the process to finding and recreating the issue, example below]\r\n\r\n1. User creates TPOT instance\r\n2. User calls TPOT `fit()` function with training data\r\n3. TPOT crashes with a `KeyError` after 5 generations\r\n\r\n## Expected result\r\n\r\n[describe what you would expect to have resulted from this process]\r\n\r\n## Current result\r\n\r\n[describe what you currently experience from this process, and thereby explain the bug]\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/934", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/934/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/934/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/934/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/934", "id": 510390309, "node_id": "MDU6SXNzdWU1MTAzOTAzMDk=", "number": 934, "title": "Can anyone teach me how to use my dataset +tpot to find the best model,", "user": {"login": "yuxiaomu", "id": 47933430, "node_id": "MDQ6VXNlcjQ3OTMzNDMw", "avatar_url": "https://avatars1.githubusercontent.com/u/47933430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuxiaomu", "html_url": "https://github.com/yuxiaomu", "followers_url": "https://api.github.com/users/yuxiaomu/followers", "following_url": "https://api.github.com/users/yuxiaomu/following{/other_user}", "gists_url": "https://api.github.com/users/yuxiaomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuxiaomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuxiaomu/subscriptions", "organizations_url": "https://api.github.com/users/yuxiaomu/orgs", "repos_url": "https://api.github.com/users/yuxiaomu/repos", "events_url": "https://api.github.com/users/yuxiaomu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuxiaomu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-22T02:07:55Z", "updated_at": "2019-10-28T12:11:28Z", "closed_at": "2019-10-28T12:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": " I now have a slab map of the steel mill, I want to identify the slab number, but I will not use this code, any help Would be greatly appreciated, I am a newbie, really awkward, if you can please add me WeChat love_qinging\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\n[if relevant, include a screenshot]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/933", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/933/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/933/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/933/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/933", "id": 509462224, "node_id": "MDU6SXNzdWU1MDk0NjIyMjQ=", "number": 933, "title": "Nondeterministic train test split", "user": {"login": "trang1618", "id": 1679452, "node_id": "MDQ6VXNlcjE2Nzk0NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1679452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trang1618", "html_url": "https://github.com/trang1618", "followers_url": "https://api.github.com/users/trang1618/followers", "following_url": "https://api.github.com/users/trang1618/following{/other_user}", "gists_url": "https://api.github.com/users/trang1618/gists{/gist_id}", "starred_url": "https://api.github.com/users/trang1618/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trang1618/subscriptions", "organizations_url": "https://api.github.com/users/trang1618/orgs", "repos_url": "https://api.github.com/users/trang1618/repos", "events_url": "https://api.github.com/users/trang1618/events{/privacy}", "received_events_url": "https://api.github.com/users/trang1618/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-19T14:41:21Z", "updated_at": "2019-11-05T21:21:55Z", "closed_at": "2019-11-05T21:21:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The default `random_state = None` in `TPOTClassifier()` or `TPOTRegressor()` may result in over-optimistic accuracy of TPOT-recommended pipeline.\r\n\r\n## Context\r\nThe first example [here](https://github.com/EpistasisLab/tpot/blob/815b0e28c7c8c4935363298bb6ce4713d280cece/docs_sources/examples.md#iris-flower-classification) does not specify a value for the `random_state` argument in either `train_test_split()` or `TPOTClassifier()`. Consequently, in exported file `tpot_iris_pipeline.py`, `train_test_split()` does not have a specified seed. This likely means the two splits are different, resulting in the TPOT run essentially having access to part of the test set. In other words, the hyperparameters were obtained knowing some of the test data.\r\n\r\nThis is not an issue when training and testing set are read in separately, and the exported file is modified accordingly.\r\n\r\n## Possible fix\r\n\r\nShould we require the same seed for `train_test_split` and `TPOTClassifier()` or `TPOTRegressor()`?\r\n\r\nOr perhaps let the user read ini the test and train set separately?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/921", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/921/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/921/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/921", "id": 500324123, "node_id": "MDU6SXNzdWU1MDAzMjQxMjM=", "number": 921, "title": "Problem in creating custom scoring function", "user": {"login": "nirvana1122", "id": 26214564, "node_id": "MDQ6VXNlcjI2MjE0NTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/26214564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirvana1122", "html_url": "https://github.com/nirvana1122", "followers_url": "https://api.github.com/users/nirvana1122/followers", "following_url": "https://api.github.com/users/nirvana1122/following{/other_user}", "gists_url": "https://api.github.com/users/nirvana1122/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirvana1122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirvana1122/subscriptions", "organizations_url": "https://api.github.com/users/nirvana1122/orgs", "repos_url": "https://api.github.com/users/nirvana1122/repos", "events_url": "https://api.github.com/users/nirvana1122/events{/privacy}", "received_events_url": "https://api.github.com/users/nirvana1122/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-30T14:43:15Z", "updated_at": "2019-11-05T21:18:35Z", "closed_at": "2019-11-05T21:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "[provide general introduction to the issue and why it is relevant to this repository]\r\n\r\nI am trying to create a simple custom scoring function and getting the following error:\r\n\r\n###\r\nValueError: 'correlation' is not a valid scoring value. Use sorted(sklearn.metrics.SCORERS.keys()) to get valid options.\r\n\r\n\r\n###\r\nThe scoring function I have created uses the template from spot documentation.\r\n\r\n###\r\n\r\ndef correlation(y_true, y_pred):\r\n    return 1 + np.sum(np.multiply(y_true, y_pred)) / len(y_true)\r\n\r\nmy_correlation = make_scorer(correlation, greater_is_better=True)\r\n\r\npipeline_optimizer = TPOTRegressor()\r\n\r\npipeline_optimizer = TPOTRegressor(generations=20, population_size=50, cv=5,   random_state=0, verbosity=3, scoring=my_correlation,n_jobs = 30)\r\n\r\nCan you please help\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/919", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/919/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/919/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/919/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/919", "id": 496993166, "node_id": "MDU6SXNzdWU0OTY5OTMxNjY=", "number": 919, "title": "Is it possible to disable CV?", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T09:40:36Z", "updated_at": "2019-09-23T12:58:45Z", "closed_at": "2019-09-23T12:58:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Context of the issue\r\n\r\nMy dataset is very small and contains at maximum 380 samples and about 800 features. Naturally, this will mean that the data is highly noisy and depending on the CV splits and also the random_state of the model. Through another issue i learned that *fitted_pipeline_* is different from the best pipeline during the search process, so it cannot be used either.\r\n\r\nMy idea therefore was to write a custom scorer which does not use the training data to score but directly uses the fixed and separate validation set to generate the score. It also keeps track of the best pipeline and saves it independently in the trained state.\r\n\r\nThere are some issues, e.g., the scorer object being copied i guess when using n_jobs>1, but since my case is an edge case that's okay, i can use n_jobs=1.\r\nHowever, i really would like to deactivate cross validation for my case, since i want the estimator to be trained on the full training data and then the scorer score it on the full validation data. Using CV with training / validation set indices would not make my validation set independent of the training anymore, which is what i want to avoid.\r\n\r\nIs there a workaround to make this happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/915", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/915/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/915/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/915", "id": 493258318, "node_id": "MDU6SXNzdWU0OTMyNTgzMTg=", "number": 915, "title": "My graphs and charts is empty", "user": {"login": "tXambe", "id": 12039753, "node_id": "MDQ6VXNlcjEyMDM5NzUz", "avatar_url": "https://avatars1.githubusercontent.com/u/12039753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tXambe", "html_url": "https://github.com/tXambe", "followers_url": "https://api.github.com/users/tXambe/followers", "following_url": "https://api.github.com/users/tXambe/following{/other_user}", "gists_url": "https://api.github.com/users/tXambe/gists{/gist_id}", "starred_url": "https://api.github.com/users/tXambe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tXambe/subscriptions", "organizations_url": "https://api.github.com/users/tXambe/orgs", "repos_url": "https://api.github.com/users/tXambe/repos", "events_url": "https://api.github.com/users/tXambe/events{/privacy}", "received_events_url": "https://api.github.com/users/tXambe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818166, "node_id": "MDU6TGFiZWwyODE4MTgxNjY=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-13T10:45:17Z", "updated_at": "2019-09-13T14:18:19Z", "closed_at": "2019-09-13T14:14:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI just installed TPOT v19.03 in the dasboard everything are empty. I open the ports in the firewall\r\nbut I don't now what I can do.\r\n\r\n    What version of the OS are you currently using lsb_release -a and uname -a?\r\n    **5.2.0-2-amd64 #1 SMP Debian 5.2.9-2 (2019-08-21) x86_64 GNU/Linux**\r\n    What T-Pot version are you currently using?\r\n    19.03\r\n    What edition (Standard, Nextgen, etc.) of T-Pot are you running?\r\n    Standard\r\n    What architecture are you running on (i.e. hardware, cloud, VM, etc.)?\r\n    Vmware\r\n    Did you have any problems during the install? If yes, please attach /install.log /install.err.\r\n    No\r\n    How long has your installation been running?\r\n    24 Hours\r\n    Did you install upgrades, packages or use the update script?\r\n    No\r\n    Did you modify any scripts or configs? If yes, please attach the changes.\r\n    Please provide a screenshot of glances and htop.\r\n    \r\n    How much free disk space is available (df -h)?\r\n    Filesystem      Size  Used Avail Use% Mounted on\r\n    udev            3.9G     0  3.9G   0% /dev\r\n    tmpfs           782M   21M  761M   3% /run\r\n    /dev/sda2       149G   22G  120G  16% /\r\n    tmpfs           3.9G     0  3.9G   0% /dev/shm\r\n    tmpfs           5.0M     0  5.0M   0% /run/lock\r\n    tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup\r\n    tmpfs           782M     0  782M   0% /run/user/1000\r\n\r\n    What is the current container status (dps.sh)?\r\n     Don't run -->  dps.sh: command not found\r\n    What is the status of the T-Pot service (systemctl status tpot)?\r\n     running\r\n    What ports are being occupied? Stop T-Pot systemctl stop tpot and run netstat -tulpen\r\n    (Not all processes could be identified, non-owned process info\r\n will not be shown, you would have to be root to see it all.)\r\nActive Internet connections (only servers)\r\nProto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode      PID/Program name\r\ntcp        0      0 0.0.0.0:64295           0.0.0.0:*               LISTEN      0          16152      -\r\ntcp        0      0 0.0.0.0:61209           0.0.0.0:*               LISTEN      0          16830      -\r\ntcp6       0      0 :::64294                :::*                    LISTEN      0          13517      -\r\ntcp6       0      0 :::64295                :::*                    LISTEN      0          16163      -\r\nudp        0      0 192.168.100.34:123      0.0.0.0:*                           0          15935      -\r\nudp        0      0 127.0.0.1:123           0.0.0.0:*                           0          15933      -\r\nudp        0      0 0.0.0.0:123             0.0.0.0:*                           0          15929      -\r\nudp6       0      0 :::123                  :::*                                0          15926      -\r\n\r\n    If a single container shows as DOWN you can run docker logs <container-name> for the latest log entries\r\n\r\nThanks and greeting", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/914", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/914/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/914/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/914/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/914", "id": 492955264, "node_id": "MDU6SXNzdWU0OTI5NTUyNjQ=", "number": 914, "title": "custom scorer does not work with n_jobs > 1 and use_dask=False", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-12T18:14:38Z", "updated_at": "2019-09-24T11:37:12Z", "closed_at": "2019-09-24T11:37:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A custom scorer works fine with n_jobs=1, but raises an Exeption with n_jobs > 1, because the scorer was not added to SCORERS\r\n\r\n## Process to reproduce the issue\r\n\r\nSee above\r\n\r\n## Expected result\r\n\r\nThe optimization continues as usual\r\n\r\n## Current result\r\n\r\nThe new scorer is not added to SCORERS\r\n\r\n## Possible fix\r\n\r\nI would guess that due to the multiprocessing the SCORERS variable, where the new scorer is correctly added for the main process, the imports in the new processes refer to the original SCORERS in the metrics.py file\r\n\r\nBut i'm not sure how to elegantly solve this issue. A workaround is to statically add the custom scorer in metrics.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/912", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/912/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/912/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/912", "id": 489743008, "node_id": "MDU6SXNzdWU0ODk3NDMwMDg=", "number": 912, "title": "Question: Is there a reason that MLPClassifier is not included?", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T13:13:49Z", "updated_at": "2019-09-06T12:49:46Z", "closed_at": "2019-09-06T12:49:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was wondering why the sklearn MLPClassifier is not included in the default config. \r\n\r\nI was noticing why tpot never picked it since in some other optimization that classifier outperformed the others, but not in tpot. Then i noticed it's not even included. Were there specific reasons why someone should avoid it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/910", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/910/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/910/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/910", "id": 487643061, "node_id": "MDU6SXNzdWU0ODc2NDMwNjE=", "number": 910, "title": "Column Mismatch ---- Output in Tpot", "user": {"login": "pratik-poudel", "id": 37284545, "node_id": "MDQ6VXNlcjM3Mjg0NTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/37284545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratik-poudel", "html_url": "https://github.com/pratik-poudel", "followers_url": "https://api.github.com/users/pratik-poudel/followers", "following_url": "https://api.github.com/users/pratik-poudel/following{/other_user}", "gists_url": "https://api.github.com/users/pratik-poudel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratik-poudel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratik-poudel/subscriptions", "organizations_url": "https://api.github.com/users/pratik-poudel/orgs", "repos_url": "https://api.github.com/users/pratik-poudel/repos", "events_url": "https://api.github.com/users/pratik-poudel/events{/privacy}", "received_events_url": "https://api.github.com/users/pratik-poudel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-30T19:42:56Z", "updated_at": "2019-08-31T14:07:27Z", "closed_at": "2019-08-31T14:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "After fitting the \r\nTPOTClassifier(verbosity=3,  \r\n                    random_state=55, \r\n                    #scoring=rmsle,\r\n                    periodic_checkpoint_folder=\"intermediate_results\",\r\n                    n_jobs=-1, \r\n                    warm_start = True,\r\n                    generations=20, \r\n                    population_size=80,\r\n                    early_stop=8)\r\ncolumn mismatch :\r\nexpected V233, C1, V87, V195, C14, D11, D5, V128, V45, V187, TransactionID, D2, V312, V317, D15, card5, card1, V308, D1, V259, D4, V199, V257, V314, V127, V217, V318, V258, V307, C2, V188, C6, addr1, dist1, V131, card2, V189, V44, V200, TransactionAmt, C11, V315, V190, C13, V310, V246, V201, V244, TransactionDT, D10 in input data\r\ntraining data did not have the following fields: f32, f15, f38, f0, f26, f30, f16, f45, f27, f19, f34, f46, f39, f4, f29, f8, f14, f36, f40, f42, f10, f43, f3, f12, f41, f22, f2, f11, f17, f33, f1, f9, f35, f13, f21, f37, f44, f48, f47, f18, f25, f31, f5, f7, f49, f20, f28, f23, f6, f24.\r\n\r\nThese fields ( f32, f15, f38, f0, f26, f30, f16, f45, f27, f19, f34, f46, f39, f4, f29, f8, f14, f36, f40, f42, f10, f43, f3, f12, f41, f22, f2, f11, f17, f33, f1, f9, f35, f13, f21, f37, f44, f48, f47, f18, f25, f31, f5, f7, f49, f20, f28, f23, f6, f24.) are not in any data\r\n![error](https://user-images.githubusercontent.com/37284545/64047424-77f74880-cb8e-11e9-9329-fcc43de87c72.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/909", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/909/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/909/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/909", "id": 487543763, "node_id": "MDU6SXNzdWU0ODc1NDM3NjM=", "number": 909, "title": "No progress bar while running TPOT", "user": {"login": "puskarjha", "id": 50799677, "node_id": "MDQ6VXNlcjUwNzk5Njc3", "avatar_url": "https://avatars3.githubusercontent.com/u/50799677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puskarjha", "html_url": "https://github.com/puskarjha", "followers_url": "https://api.github.com/users/puskarjha/followers", "following_url": "https://api.github.com/users/puskarjha/following{/other_user}", "gists_url": "https://api.github.com/users/puskarjha/gists{/gist_id}", "starred_url": "https://api.github.com/users/puskarjha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puskarjha/subscriptions", "organizations_url": "https://api.github.com/users/puskarjha/orgs", "repos_url": "https://api.github.com/users/puskarjha/repos", "events_url": "https://api.github.com/users/puskarjha/events{/privacy}", "received_events_url": "https://api.github.com/users/puskarjha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-30T15:27:14Z", "updated_at": "2019-11-05T21:19:26Z", "closed_at": "2019-11-05T21:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am executing TPOT classifier and it's running fine as well. However I don't see progress bar when I execute it on my personal laptop. Same code if I execute on colab, I am getting the progress bar.\r\n\r\nInstead of progress bar, I just receive below message\r\n\r\nHBox(children=(IntProgress(value=0, description='Optimization Progress', max=300, style=ProgressStyle(descript\u2026\r\n\r\nCan someone suggest me how to get optimization progress bar ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/908", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/908/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/908/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/908", "id": 486502005, "node_id": "MDU6SXNzdWU0ODY1MDIwMDU=", "number": 908, "title": "Different roc_auc scores between tpot.score and sklearn.metrics.roc_auc_score", "user": {"login": "lmutah", "id": 54637923, "node_id": "MDQ6VXNlcjU0NjM3OTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/54637923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmutah", "html_url": "https://github.com/lmutah", "followers_url": "https://api.github.com/users/lmutah/followers", "following_url": "https://api.github.com/users/lmutah/following{/other_user}", "gists_url": "https://api.github.com/users/lmutah/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmutah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmutah/subscriptions", "organizations_url": "https://api.github.com/users/lmutah/orgs", "repos_url": "https://api.github.com/users/lmutah/repos", "events_url": "https://api.github.com/users/lmutah/events{/privacy}", "received_events_url": "https://api.github.com/users/lmutah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T17:05:11Z", "updated_at": "2019-09-02T15:48:47Z", "closed_at": "2019-09-02T15:48:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use TPOTClassifier to classify a dataset into binary targets. When trying to identify the roc_auc scores, after I fit the model to my data and TPOT outputs a pipeline, I get drastically different value outputs from tpot.score() and roc_auc_score(). \r\n\r\nI had expected these values to be almost the same as I was under the impression that TPOT uses the sklearn roc auc function. If not, I will need to use another scoring function as my data is being heavily overfit right now. \r\n\r\nOverall questions:\r\n\r\n- why are the tpot.score() and sklearn.metrics.roc_auc_score() outputs different?\r\n\r\n- is there another scoring function that is better suited for slightly imbalanced binary data\r\n\r\n\r\nI am running these functions in the same python file that I trained the TPOT pipeline. Please let me know what I can do to fix this. Code and outputs can be found below. Thank you in advance!!!\r\n\r\n\r\n\r\n# Creating TPOT Pipeline\r\n``` Ruby\r\n# Initializing TPOT Object\r\n\r\npipeline_optimizer = TPOTClassifier(random_state=42, verbosity=3, population_size = 100, offspring_size = 100, generations = 100, scoring =  'roc_auc', max_time_mins = 360, max_eval_time_mins = 5, warm_start = False)\r\n\r\n\r\n# Run the TPOT Model\r\n\r\npipeline_optimizer.fit(train_columns, train_target)\r\n```\r\n``` Ruby\r\n# View Fitted Pipeline\r\npipeline_optimizer.fitted_pipeline_\r\n```\r\n``` \r\n# Output\r\nPipeline(memory=None,\r\n     steps=[('xgbclassifier', XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\r\n       colsample_bynode=1, colsample_bytree=1, gamma=0, learning_rate=0.5,\r\n       max_delta_step=0, max_depth=2, min_child_weight=20, missing=None,\r\n       n_estimators=100, n_jobs=1, nthread=1, objective='binary:logistic',\r\n       random_state=42, reg_alpha=0, reg_lambda=1, scale_pos_weight=1,\r\n       seed=None, silent=None, subsample=0.45, verbosity=1))])\r\n```\r\n``` Ruby\r\n# Store Model\r\npipeline_optimizer._set_param_recursive(pipeline_optimizer.fitted_pipeline_.steps, 'random_state', 42)\r\npipeline_optimizer.export('tpot_exported_pipeline.v3_Clinica.py')\r\n```\r\n\r\n# Getting roc_auc Score from tpot.score()\r\n```\r\n# Print Testing Score\r\nprint(pipeline_optimizer.score(test_columns, test_target))\r\n```\r\n```\r\n# Output\r\nImputing missing values in feature set\r\n0.6666410699750284\r\n```\r\n``` Ruby\r\n# Print Training Score\r\npipeline_optimizer.score(train_columns, train_target)\r\n```\r\n\r\n```\r\n# Output\r\nImputing missing values in feature set\r\n0.6691912934047073\r\n```\r\n\r\n\r\n# Getting roc_auc Score from sklearn\r\n``` Ruby\r\n# Testing Test TPOT Score using sklearn roc auc\r\nroc_auc_score(test_target, pipeline_optimizer.predict(test_columns))\r\n```\r\n```\r\n# Output\r\nImputing missing values in feature set\r\n0.5065144782862342\r\n```\r\n\r\n``` Ruby\r\n# Testing Train TPOT Score using sklearn roc auc\r\nroc_auc_score(train_target, pipeline_optimizer.predict(train_columns))\r\n```\r\n\r\n```\r\n# Output\r\nImputing missing values in feature set\r\n0.5064232341084096\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/907", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/907/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/907/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/907", "id": 486307096, "node_id": "MDU6SXNzdWU0ODYzMDcwOTY=", "number": 907, "title": "What does TPOT stand for?", "user": {"login": "evanmiller29", "id": 8062590, "node_id": "MDQ6VXNlcjgwNjI1OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8062590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanmiller29", "html_url": "https://github.com/evanmiller29", "followers_url": "https://api.github.com/users/evanmiller29/followers", "following_url": "https://api.github.com/users/evanmiller29/following{/other_user}", "gists_url": "https://api.github.com/users/evanmiller29/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanmiller29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanmiller29/subscriptions", "organizations_url": "https://api.github.com/users/evanmiller29/orgs", "repos_url": "https://api.github.com/users/evanmiller29/repos", "events_url": "https://api.github.com/users/evanmiller29/events{/privacy}", "received_events_url": "https://api.github.com/users/evanmiller29/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328853077, "node_id": "MDU6TGFiZWwzMjg4NTMwNzc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/easy", "name": "easy", "color": "bfe5bf", "default": false, "description": null}, {"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-28T10:58:04Z", "updated_at": "2019-10-18T13:11:40Z", "closed_at": "2019-10-18T13:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "As TPOT is obviously an acronym it would be useful to understand what it stands for.\r\nA quick google shows that TPOT stands for the people of truth - is that the case?\r\n\r\n## Possible fix\r\n\r\nInclude in README on Github repo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/906", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/906/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/906/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/906", "id": 483094773, "node_id": "MDU6SXNzdWU0ODMwOTQ3NzM=", "number": 906, "title": "Custom scoring with scorer object not implemented", "user": {"login": "limlug", "id": 2901147, "node_id": "MDQ6VXNlcjI5MDExNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2901147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/limlug", "html_url": "https://github.com/limlug", "followers_url": "https://api.github.com/users/limlug/followers", "following_url": "https://api.github.com/users/limlug/following{/other_user}", "gists_url": "https://api.github.com/users/limlug/gists{/gist_id}", "starred_url": "https://api.github.com/users/limlug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/limlug/subscriptions", "organizations_url": "https://api.github.com/users/limlug/orgs", "repos_url": "https://api.github.com/users/limlug/repos", "events_url": "https://api.github.com/users/limlug/events{/privacy}", "received_events_url": "https://api.github.com/users/limlug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T21:35:33Z", "updated_at": "2019-11-05T21:19:37Z", "closed_at": "2019-11-05T21:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The API documentation reads:\r\n\r\n> You can pass the callable object/function with signature scorer(estimator, X, y), where estimator is trained estimator to use for scoring, X are features that will be passed to estimator.predict and y are target values for X. To do this, you should implement your own function. See the example below for further explanation.\r\n\r\nThis is currently not implemented despite sklearn.model_selection.cross_val_score supporting scorer objects just fine.\r\n\r\n## Process to reproduce the issue\r\n\r\n1. User creates TPOT instance with scoring=scorer(estimator, X, y)\r\n2. User calls TPOT `fit()` function with training data\r\n3. TPOT crashes with a `KeyError` for scorer = SCORERS[scoring]\r\n\r\n## Possible fix\r\n\r\nThe case selection for the scoring in TPOTBase needs to be extended to check if not only is a function passed with signature y_pred, y_true but also with estimator, X, y.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/902", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/902/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/902/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/902", "id": 477914634, "node_id": "MDU6SXNzdWU0Nzc5MTQ2MzQ=", "number": 902, "title": "import classifier previously exported", "user": {"login": "pdeman", "id": 16150529, "node_id": "MDQ6VXNlcjE2MTUwNTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/16150529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdeman", "html_url": "https://github.com/pdeman", "followers_url": "https://api.github.com/users/pdeman/followers", "following_url": "https://api.github.com/users/pdeman/following{/other_user}", "gists_url": "https://api.github.com/users/pdeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdeman/subscriptions", "organizations_url": "https://api.github.com/users/pdeman/orgs", "repos_url": "https://api.github.com/users/pdeman/repos", "events_url": "https://api.github.com/users/pdeman/events{/privacy}", "received_events_url": "https://api.github.com/users/pdeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-07T13:00:35Z", "updated_at": "2019-08-08T07:27:25Z", "closed_at": "2019-08-08T07:27:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using tpot to generate a classifier:\r\n```\r\ntpot = TPOTClassifier(generations=30, population_size=30, n_jobs= -1,verbosity=2,cv=5, periodic_checkpoint_folder=\"/home\",scoring=\"recall_micro\")\r\n    tpot.fit(X_train, y_train)\r\n    ypredict=tpot.predict(X_test)\r\n    conf_matrix = confusion_matrix(y_test,ypredict)\r\n    tn, fp, fn, tp = conf_matrix.ravel()\r\n    print(conf_matrix)    \r\n    print(tpot.score(X_test, y_test))\r\n    tpot.export('tpot_pipeline.py')\r\n```\r\n\r\nis there a way to reimport the classifier from the python file ?\r\nlike \r\n`tpot.import(\"tpot_pipeline.py\") ?`\r\nI haven't found such method.\r\n\r\nlike joblib dump and load in sckikit-learn", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/901", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/901/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/901/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/901/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/901", "id": 477010936, "node_id": "MDU6SXNzdWU0NzcwMTA5MzY=", "number": 901, "title": "RuntimeError: A pipeline has not yet been optimized. Please call fit() first. ", "user": {"login": "janPesl", "id": 53056114, "node_id": "MDQ6VXNlcjUzMDU2MTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/53056114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janPesl", "html_url": "https://github.com/janPesl", "followers_url": "https://api.github.com/users/janPesl/followers", "following_url": "https://api.github.com/users/janPesl/following{/other_user}", "gists_url": "https://api.github.com/users/janPesl/gists{/gist_id}", "starred_url": "https://api.github.com/users/janPesl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janPesl/subscriptions", "organizations_url": "https://api.github.com/users/janPesl/orgs", "repos_url": "https://api.github.com/users/janPesl/repos", "events_url": "https://api.github.com/users/janPesl/events{/privacy}", "received_events_url": "https://api.github.com/users/janPesl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-05T19:03:25Z", "updated_at": "2019-08-06T11:11:42Z", "closed_at": "2019-08-06T11:11:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is most likely related to #499.\r\n\r\nI am fitting classifier:\r\n```\r\ntp = TPOTClassifier(\r\n    generations=50,\r\n    population_size=50,\r\n    cv=4,\r\n    n_jobs=-1,\r\n    random_state=0,\r\n    config_dict=classifier_config_dict,\r\n    verbosity=3,\r\n    use_dask=True,\r\n)\r\n```\r\n\r\nBefore any optimization is done, I keep running into this issue:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nOptionError                               Traceback (most recent call last)\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    751         return self._fitted_imputer.transform(features)\r\n--> 752 \r\n    753     def _check_dataset(self, features, target):\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/gp_deap.py in eaMuPlusLambda(population, toolbox, mu, lambda_, cxpb, mutpb, ngen, pbar, stats, halloffame, verbose, per_generation_function)\r\n    226     :returns: A tuple of two trees.\r\n--> 227     \"\"\"\r\n    228     # Define the name of type for any types.\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in _evaluate_individuals(self, population, features, target, sample_weight, groups)\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in <listcomp>(.0)\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/stopit/utils.py in wrapper(*args, **kwargs)\r\n    144                     # ``result`` may not be assigned below in case of timeout\r\n--> 145                     result = func(*args, **kwargs)\r\n    146                 return result\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/gp_deap.py in _wrapped_cross_val_score(sklearn_pipeline, features, target, cv, scoring_function, sample_weight, groups, use_dask)\r\n    421     # build a job for cross_val_score\r\n--> 422     tmp_it = Interruptable_cross_val_score(\r\n    423         estimator=sklearn_pipeline,\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask_ml/model_selection/__init__.py in <module>\r\n      5 \"\"\"\r\n----> 6 from ._hyperband import HyperbandSearchCV\r\n      7 from ._incremental import IncrementalSearchCV\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask_ml/model_selection/_hyperband.py in <module>\r\n     10 \r\n---> 11 from ._incremental import BaseIncrementalSearchCV\r\n     12 from ._successive_halving import SuccessiveHalvingSearchCV\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask_ml/model_selection/_incremental.py in <module>\r\n     22 \r\n---> 23 from ..utils import check_array\r\n     24 from ..wrappers import ParallelPostFit\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask_ml/utils.py in <module>\r\n     11 import dask.array as da\r\n---> 12 import dask.dataframe as dd\r\n     13 import numpy as np\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask/dataframe/__init__.py in <module>\r\n      3 try:\r\n----> 4     from .core import (\r\n      5         DataFrame,\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/dask/dataframe/core.py in <module>\r\n     84 \r\n---> 85 pd.set_option(\"compute.use_numexpr\", False)\r\n     86 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/core/config.py in __call__(self, *args, **kwds)\r\n    226     def __call__(self, *args, **kwds):\r\n--> 227         return self.__func__(*args, **kwds)\r\n    228 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/core/config.py in _set_option(*args, **kwargs)\r\n    133             else:\r\n--> 134                 o.cb(key)\r\n    135 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/core/config_init.py in use_numexpr_cb(key)\r\n     43     the default is True\r\n---> 44     Valid values: False,True\r\n     45 \"\"\"\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/core/computation/expressions.py in <module>\r\n    167 # turn myself on\r\n--> 168 set_use_numexpr(get_option(\"compute.use_numexpr\"))\r\n    169 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/_config/config.py in __call__(self, *args, **kwds)\r\n    232     def __call__(self, *args, **kwds):\r\n--> 233         return self.__func__(*args, **kwds)\r\n    234 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/_config/config.py in _get_option(pat, silent)\r\n    101 def _get_option(pat, silent=False):\r\n--> 102     key = _get_single_key(pat, silent)\r\n    103 \r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/pandas/_config/config.py in _get_single_key(pat, silent)\r\n     87             _warn_if_deprecated(pat)\r\n---> 88         raise OptionError(\"No such keys(s): {pat!r}\".format(pat=pat))\r\n     89     if len(keys) > 1:\r\n\r\nOptionError: \"No such keys(s): 'compute.use_numexpr'\"\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-24-c5de40c7b1e7> in <module>\r\n----> 1 tp.fit(x_train, y_train)\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    782         expr: DEAP individual\r\n    783             The DEAP pipeline to be compiled\r\n--> 784 \r\n    785         Returns\r\n    786         -------\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    773                 'the features must be a 2-D array and target labels must be a '\r\n    774                 '1-D array.'\r\n--> 775             )\r\n    776 \r\n    777     def _compile_to_sklearn(self, expr):\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    851 \r\n    852         # return fitness scores\r\n--> 853         operator_counts = {}\r\n    854         # 4 lists of DEAP individuals, their sklearn pipelines and their operator counts for parallel computing\r\n    855         eval_individuals_str = []\r\n\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n```\r\n\r\nWhen turning off Dask, I get different error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\n_RemoteTraceback                          Traceback (most recent call last)\r\n_RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py\", line 418, in _process_worker\r\n    r = call_item()\r\n  File \"/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/externals/loky/process_executor.py\", line 272, in __call__\r\n    return self.fn(*self.args, **self.kwargs)\r\n  File \"/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/_parallel_backends.py\", line 567, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/parallel.py\", line 225, in __call__\r\n    for func, args, kwargs in self.items]\r\n  File \"/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/parallel.py\", line 225, in <listcomp>\r\n    for func, args, kwargs in self.items]\r\nTypeError: _wrapped_cross_val_score() got an unexpected keyword argument 'timeout'\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    751         return self._fitted_imputer.transform(features)\r\n--> 752 \r\n    753     def _check_dataset(self, features, target):\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/gp_deap.py in eaMuPlusLambda(population, toolbox, mu, lambda_, cxpb, mutpb, ngen, pbar, stats, halloffame, verbose, per_generation_function)\r\n    226     :returns: A tuple of two trees.\r\n--> 227     \"\"\"\r\n    228     # Define the name of type for any types.\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in _evaluate_individuals(self, population, features, target, sample_weight, groups)\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/parallel.py in __call__(self, iterable)\r\n    933             with self._backend.retrieval_context():\r\n--> 934                 self.retrieve()\r\n    935             # Make sure that we get a last message telling us we are done\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/parallel.py in retrieve(self)\r\n    832                 if getattr(self._backend, 'supports_timeout', False):\r\n--> 833                     self._output.extend(job.get(timeout=self.timeout))\r\n    834                 else:\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/joblib/_parallel_backends.py in wrap_future_result(future, timeout)\r\n    520         try:\r\n--> 521             return future.result(timeout=timeout)\r\n    522         except LokyTimeoutError:\r\n\r\n/anaconda3/envs/python373/lib/python3.7/concurrent/futures/_base.py in result(self, timeout)\r\n    431             elif self._state == FINISHED:\r\n--> 432                 return self.__get_result()\r\n    433             else:\r\n\r\n/anaconda3/envs/python373/lib/python3.7/concurrent/futures/_base.py in __get_result(self)\r\n    383         if self._exception:\r\n--> 384             raise self._exception\r\n    385         else:\r\n\r\nTypeError: _wrapped_cross_val_score() got an unexpected keyword argument 'timeout'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-27-c5de40c7b1e7> in <module>\r\n----> 1 tp.fit(x_train, y_train)\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    782         expr: DEAP individual\r\n    783             The DEAP pipeline to be compiled\r\n--> 784 \r\n    785         Returns\r\n    786         -------\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in fit(self, features, target, sample_weight, groups)\r\n    773                 'the features must be a 2-D array and target labels must be a '\r\n    774                 '1-D array.'\r\n--> 775             )\r\n    776 \r\n    777     def _compile_to_sklearn(self, expr):\r\n\r\n/anaconda3/envs/python373/lib/python3.7/site-packages/tpot/base.py in _update_top_pipeline(self)\r\n    851 \r\n    852         # return fitness scores\r\n--> 853         operator_counts = {}\r\n    854         # 4 lists of DEAP individuals, their sklearn pipelines and their operator counts for parallel computing\r\n    855         eval_individuals_str = []\r\n\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n```\r\n\r\nDo you have any suggestions how to get around this? Thank you in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/900", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/900/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/900/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/900", "id": 475414234, "node_id": "MDU6SXNzdWU0NzU0MTQyMzQ=", "number": 900, "title": "TPOT Light is not telling me which model it actually used", "user": {"login": "ParthJawale1996", "id": 46942720, "node_id": "MDQ6VXNlcjQ2OTQyNzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/46942720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ParthJawale1996", "html_url": "https://github.com/ParthJawale1996", "followers_url": "https://api.github.com/users/ParthJawale1996/followers", "following_url": "https://api.github.com/users/ParthJawale1996/following{/other_user}", "gists_url": "https://api.github.com/users/ParthJawale1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/ParthJawale1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ParthJawale1996/subscriptions", "organizations_url": "https://api.github.com/users/ParthJawale1996/orgs", "repos_url": "https://api.github.com/users/ParthJawale1996/repos", "events_url": "https://api.github.com/users/ParthJawale1996/events{/privacy}", "received_events_url": "https://api.github.com/users/ParthJawale1996/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T00:28:38Z", "updated_at": "2019-08-26T21:43:49Z", "closed_at": "2019-08-26T21:43:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to train a multi-class classification using TPOT Light and I stopped the optimization process at 5% just to see what's happening. \r\n\r\n\r\n`clf_tpot = TPOTClassifier(generations=5, population_size=20, cv=5, random_state=42, verbosity=3, scoring = \"precision_micro\", config_dict='TPOT light', max_eval_time_mins=300)\r\nclf_tpot.fit(X_train, y_train)\r\n`\r\nThis is my output:\r\n\r\nTPOTClassifier(config_dict='TPOT light', crossover_rate=0.1, cv=5,\r\n        disable_update_check=False, early_stop=None, generations=5,\r\n        max_eval_time_mins=300, max_time_mins=None, memory=None,\r\n        mutation_rate=0.9, n_jobs=1, offspring_size=None,\r\n        periodic_checkpoint_folder=None, population_size=20,\r\n        random_state=42, scoring='precision_micro', subsample=1.0,\r\n        template=None, use_dask=False, verbosity=3, warm_start=False)\r\n\r\nI'm able to evaluate it on my test set but this output doesn't tell me what the pipeline actually is, that I'm evaluating my results on.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/898", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/898/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/898/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/898/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/898", "id": 474645805, "node_id": "MDU6SXNzdWU0NzQ2NDU4MDU=", "number": 898, "title": "If wrong template option is passed, output error is not clear", "user": {"login": "tjiagoM", "id": 7031523, "node_id": "MDQ6VXNlcjcwMzE1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjiagoM", "html_url": "https://github.com/tjiagoM", "followers_url": "https://api.github.com/users/tjiagoM/followers", "following_url": "https://api.github.com/users/tjiagoM/following{/other_user}", "gists_url": "https://api.github.com/users/tjiagoM/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjiagoM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjiagoM/subscriptions", "organizations_url": "https://api.github.com/users/tjiagoM/orgs", "repos_url": "https://api.github.com/users/tjiagoM/repos", "events_url": "https://api.github.com/users/tjiagoM/events{/privacy}", "received_events_url": "https://api.github.com/users/tjiagoM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328853077, "node_id": "MDU6TGFiZWwzMjg4NTMwNzc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/easy", "name": "easy", "color": "bfe5bf", "default": false, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-30T15:14:11Z", "updated_at": "2019-11-05T21:21:32Z", "closed_at": "2019-11-05T21:21:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've updated TPOT to version '0.10.2', and if I run the following code:\r\n\r\n```python\r\ntpot = TPOTClassifier(generations=200, population_size=200, scoring='precision',\r\n                          template='wrong template')\r\ntpot.fit(X_train, y_train)\r\n```\r\n\r\nI receive a RuntimeError:\r\n`RuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.`\r\n\r\nIf I comment out the template option, TPOTClassifier starts running fine.\r\n\r\nSo I just want to suggest to improve this error output, as it doesn't say the true error (wrong template). If you wonder how the hell I came up to this error, it's because I was using a previous version of TPOT where \"RandomTree\" was a valid template, and after updating I was not understanding why the same code was giving me this error\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/894", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/894/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/894/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/894", "id": 473467877, "node_id": "MDU6SXNzdWU0NzM0Njc4Nzc=", "number": 894, "title": "The random_state of the final model is different than the during search", "user": {"login": "JoshHeitzman", "id": 2836480, "node_id": "MDQ6VXNlcjI4MzY0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2836480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshHeitzman", "html_url": "https://github.com/JoshHeitzman", "followers_url": "https://api.github.com/users/JoshHeitzman/followers", "following_url": "https://api.github.com/users/JoshHeitzman/following{/other_user}", "gists_url": "https://api.github.com/users/JoshHeitzman/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshHeitzman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshHeitzman/subscriptions", "organizations_url": "https://api.github.com/users/JoshHeitzman/orgs", "repos_url": "https://api.github.com/users/JoshHeitzman/repos", "events_url": "https://api.github.com/users/JoshHeitzman/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshHeitzman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-26T17:47:47Z", "updated_at": "2019-11-05T21:22:33Z", "closed_at": "2019-11-05T21:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/EpistasisLab/tpot/issues/893 provides further context as this was found during the investigation of a specific cause of an exception being thrown during the final fit of the top pipeline after the search is complete.\r\n\r\nIn this case the the pipelines were not precisely the same during search and during the final fit, with the random_state being None in the final fit, but 42 during the search.  The TPOT classifer was configured with a random_state of 1, so that appears to have been ignored when configuring the pipeline during both the search and the final fit.\r\n\r\nThis is the pipeline during the search:\r\n\r\nPipeline(memory=None,\r\n         steps=[('stackingestimator',\r\n                 StackingEstimator(estimator=LogisticRegression(C=0.01,\r\n                                                                class_weight=None,\r\n                                                                dual=True,\r\n                                                                fit_intercept=True,\r\n                                                                intercept_scaling=1,\r\n                                                                l1_ratio=None,\r\n                                                                max_iter=100,\r\n                                                                multi_class='warn',\r\n                                                                n_jobs=None,\r\n                                                                penalty='l2',\r\n                                                                random_state=42,\r\n                                                                solver='warn',\r\n                                                                tol=0.0001,\r\n                                                                verbose=0,\r\n                                                                warm_start=False))),\r\n                ('bernoullinb',\r\n                 BernoulliNB(alpha=0.001, binarize=0.0, class_prior=None,\r\n                             fit_prior=False))],\r\n         verbose=False)\r\n\r\nand this if the pipeline for the final fit:\r\n\r\nPipeline(memory=None,\r\n         steps=[('stackingestimator',\r\n                 StackingEstimator(estimator=LogisticRegression(C=0.01,\r\n                                                                class_weight=None,\r\n                                                                dual=True,\r\n                                                                fit_intercept=True,\r\n                                                                intercept_scaling=1,\r\n                                                                l1_ratio=None,\r\n                                                                max_iter=100,\r\n                                                                multi_class='warn',\r\n                                                                n_jobs=None,\r\n                                                                penalty='l2',\r\n                                                                random_state=None,\r\n                                                                solver='warn',\r\n                                                                tol=0.0001,\r\n                                                                verbose=0,\r\n                                                                warm_start=False))),\r\n                ('bernoullinb',\r\n                 BernoulliNB(alpha=0.001, binarize=0.0, class_prior=None,\r\n                             fit_prior=False))],\r\n         verbose=False)\r\n\r\nDuring final fit the StackingEstimator transform introduces NaNs/infinites, but during the search I had modified to code, as mentioned in 893, to fit the pipeline to the full data set as is done in final fit.  The transform the StackingEstimator did during full fit I had hacked into search did not result in the check for NaNs/infinites raising.\r\n\r\nThe only difference I can see between the pipelines is value being provided to the random_state.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/893", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/893/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/893/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/893", "id": 472634055, "node_id": "MDU6SXNzdWU0NzI2MzQwNTU=", "number": 893, "title": "StackingEstimator.transform can include NaNs in the transformed X and cause TPOTBase._summary_of_best_pipeline to fail", "user": {"login": "JoshHeitzman", "id": 2836480, "node_id": "MDQ6VXNlcjI4MzY0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2836480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshHeitzman", "html_url": "https://github.com/JoshHeitzman", "followers_url": "https://api.github.com/users/JoshHeitzman/followers", "following_url": "https://api.github.com/users/JoshHeitzman/following{/other_user}", "gists_url": "https://api.github.com/users/JoshHeitzman/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshHeitzman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshHeitzman/subscriptions", "organizations_url": "https://api.github.com/users/JoshHeitzman/orgs", "repos_url": "https://api.github.com/users/JoshHeitzman/repos", "events_url": "https://api.github.com/users/JoshHeitzman/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshHeitzman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818162, "node_id": "MDU6TGFiZWwyODE4MTgxNjI=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-25T02:31:12Z", "updated_at": "2019-11-05T21:19:47Z", "closed_at": "2019-11-05T21:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "With version 0.9.6 I observed an exception about NaN/Infinite values during the execution of TPOTBase._summary_of_best_pipeline as it was iterating to fill in self.pareto_front_fitted_pipelines_, but after triple checking my input features and labels I couldn't locate any nan or inf values.  But I did find that return value of this statement in Pipeline._fit:\r\n\r\n            Xt, fitted_transformer = fit_transform_one_cached(\r\n                cloned_transformer, Xt, y, None,\r\n                message_clsname='Pipeline',\r\n                message=self._log_message(step_idx),\r\n                **fit_params_steps[name])\r\n\r\nhad NaNs in it although the input value did not.  From there I traced it to the StackingEstimator.transform function and added a check to its input and return value to verify that it is the source of the NaN values inspite of not being passed any NaN values.\r\n\r\nUnrelated to this I had modified gp_deap._wrapped_cross_val_score to print out the the exception before return -float('inf') but I wasn't seeing this get hit for this particular pipeline so it seems to have made it through the initial fit without errors only to raise an error in the fit in TPOTBase._summary_of_best_pipeline.\r\n\r\nI've worked around this by simply disabling the second fitting of models to fill in the self.pareto_front_fitted_pipelines_ since I'm not using that and it doesn't seem to be required for TPOT to operate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/892", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/892/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/892/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/892", "id": 470606759, "node_id": "MDU6SXNzdWU0NzA2MDY3NTk=", "number": 892, "title": "Statistics during generational process", "user": {"login": "superaja", "id": 16282454, "node_id": "MDQ6VXNlcjE2MjgyNDU0", "avatar_url": "https://avatars0.githubusercontent.com/u/16282454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superaja", "html_url": "https://github.com/superaja", "followers_url": "https://api.github.com/users/superaja/followers", "following_url": "https://api.github.com/users/superaja/following{/other_user}", "gists_url": "https://api.github.com/users/superaja/gists{/gist_id}", "starred_url": "https://api.github.com/users/superaja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superaja/subscriptions", "organizations_url": "https://api.github.com/users/superaja/orgs", "repos_url": "https://api.github.com/users/superaja/repos", "events_url": "https://api.github.com/users/superaja/events{/privacy}", "received_events_url": "https://api.github.com/users/superaja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-19T23:38:54Z", "updated_at": "2019-07-24T14:36:55Z", "closed_at": "2019-07-24T14:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just started using TPOT and I think it is a phenomenal product. \r\nI am wondering if there is a way to access the CV and other stats during the generational process. I can get `evaluated_individual_` but that would be after the fit process. Any way, I can get the pipelines evaluated in each generation and their average CV  scores as it iterates through the generation during the fit process (tdqm bar during generation evaluation) ? \r\n\r\nAny guidance would be helpful. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/885", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/885/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/885/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/885", "id": 466415278, "node_id": "MDU6SXNzdWU0NjY0MTUyNzg=", "number": 885, "title": "Update the library in IBM Watson studio", "user": {"login": "ELGUMOS", "id": 52178990, "node_id": "MDQ6VXNlcjUyMTc4OTkw", "avatar_url": "https://avatars0.githubusercontent.com/u/52178990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ELGUMOS", "html_url": "https://github.com/ELGUMOS", "followers_url": "https://api.github.com/users/ELGUMOS/followers", "following_url": "https://api.github.com/users/ELGUMOS/following{/other_user}", "gists_url": "https://api.github.com/users/ELGUMOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ELGUMOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ELGUMOS/subscriptions", "organizations_url": "https://api.github.com/users/ELGUMOS/orgs", "repos_url": "https://api.github.com/users/ELGUMOS/repos", "events_url": "https://api.github.com/users/ELGUMOS/events{/privacy}", "received_events_url": "https://api.github.com/users/ELGUMOS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T16:50:18Z", "updated_at": "2019-07-11T12:13:01Z", "closed_at": "2019-07-11T12:13:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to update the joblib library inside the  IBM watson studio(jupyter notebook), some documentation suggests to use the pip install command but still no results.\r\nAny suggestion?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/883", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/883/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/883/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/883/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/883", "id": 464438443, "node_id": "MDU6SXNzdWU0NjQ0Mzg0NDM=", "number": 883, "title": "Problem installing TPOT in Windows 10 - Python 3.7.", "user": {"login": "constiii", "id": 52554486, "node_id": "MDQ6VXNlcjUyNTU0NDg2", "avatar_url": "https://avatars2.githubusercontent.com/u/52554486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/constiii", "html_url": "https://github.com/constiii", "followers_url": "https://api.github.com/users/constiii/followers", "following_url": "https://api.github.com/users/constiii/following{/other_user}", "gists_url": "https://api.github.com/users/constiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/constiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/constiii/subscriptions", "organizations_url": "https://api.github.com/users/constiii/orgs", "repos_url": "https://api.github.com/users/constiii/repos", "events_url": "https://api.github.com/users/constiii/events{/privacy}", "received_events_url": "https://api.github.com/users/constiii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1476392032, "node_id": "MDU6TGFiZWwxNDc2MzkyMDMy", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/unconfirmed", "name": "unconfirmed", "color": "f4e584", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-05T02:43:29Z", "updated_at": "2020-05-26T16:24:07Z", "closed_at": "2019-11-05T21:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have troubles installing TPOT on my local Windows 10 machine. I'm using Python 3.7. with Anaconda distribution.\r\n\r\nUsing the Anaconda prompt, I get the following error message:\r\n\r\n```\r\n(base) C:\\Users\\Peter>pip install tpot\r\nCollecting tpot\r\n  Using cached https://files.pythonhosted.org/packages/15/c8/46f5c7231f8e3088052cda78ed36198f9ded9f5a5edfc99290f31aa6b57e/TPOT-0.10.1-py3-none-any.whl\r\nRequirement already satisfied: numpy>=1.12.1 in c:\\users\\peter\\anaconda3\\lib\\site-packages (from tpot) (1.16.2)\r\nRequirement already satisfied: pandas>=0.20.2 in c:\\users\\peter\\anaconda3\\lib\\site-packages (from tpot) (0.24.2)\r\nRequirement already satisfied: scipy>=0.19.0 in c:\\users\\peter\\anaconda3\\lib\\site-packages (from tpot) (1.2.1)\r\nCollecting deap>=1.0 (from tpot)\r\n  Using cached https://files.pythonhosted.org/packages/59/1a/830bdaae9b629f1b7627eec5d0c4845fad83206d087fa0d896392451e64e/deap-1.3.0-cp37-cp37m-win_amd64.whl\r\nRequirement already satisfied: scikit-learn>=0.18.1 in c:\\users\\peter\\anaconda3\\lib\\site-packages (from tpot) (0.20.3)\r\nRequirement already satisfied: tqdm>=4.26.0 in c:\\users\\peter\\anaconda3\\lib\\site-packages (from tpot) (4.31.1)\r\nCollecting stopit>=1.1.1 (from tpot)\r\n  Using cached https://files.pythonhosted.org/packages/35/58/e8bb0b0fb05baf07bbac1450c447d753da65f9701f551dca79823ce15d50/stopit-1.1.2.tar.gz\r\n    Error [WinError 87] Falscher Parameter while executing command python setup.py egg_info\r\nCould not install packages due to an EnvironmentError: [WinError 87] Falscher Parameter\r\n\r\n```\r\n\r\nAny idea what I am doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/880", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/880/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/880/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/880", "id": 456951152, "node_id": "MDU6SXNzdWU0NTY5NTExNTI=", "number": 880, "title": "Partial fit", "user": {"login": "justusschock", "id": 12886177, "node_id": "MDQ6VXNlcjEyODg2MTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12886177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justusschock", "html_url": "https://github.com/justusschock", "followers_url": "https://api.github.com/users/justusschock/followers", "following_url": "https://api.github.com/users/justusschock/following{/other_user}", "gists_url": "https://api.github.com/users/justusschock/gists{/gist_id}", "starred_url": "https://api.github.com/users/justusschock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justusschock/subscriptions", "organizations_url": "https://api.github.com/users/justusschock/orgs", "repos_url": "https://api.github.com/users/justusschock/repos", "events_url": "https://api.github.com/users/justusschock/events{/privacy}", "received_events_url": "https://api.github.com/users/justusschock/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-17T13:58:16Z", "updated_at": "2019-06-17T20:58:34Z", "closed_at": "2019-06-17T20:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I got a quick question: \r\nIn your docs you're saying, that `tpot` is build upon `scikit-learn`. Since there are some models in scikit-learn which support iterable fitting (via `partial_fit`), I was wondering if this appproach could be applied here to? \r\n\r\nCan the `warm_start` argument be (kind of) missused for this or does this only apply to the already completely evaluated pipelines?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/877", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/877/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/877/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/877", "id": 451643448, "node_id": "MDU6SXNzdWU0NTE2NDM0NDg=", "number": 877, "title": "sklearn/preprocessing/_function_transformer.py:98: FutureWarning: The default validate=True will be replaced by validate=False in 0.22", "user": {"login": "fcoppey", "id": 42648441, "node_id": "MDQ6VXNlcjQyNjQ4NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/42648441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcoppey", "html_url": "https://github.com/fcoppey", "followers_url": "https://api.github.com/users/fcoppey/followers", "following_url": "https://api.github.com/users/fcoppey/following{/other_user}", "gists_url": "https://api.github.com/users/fcoppey/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcoppey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcoppey/subscriptions", "organizations_url": "https://api.github.com/users/fcoppey/orgs", "repos_url": "https://api.github.com/users/fcoppey/repos", "events_url": "https://api.github.com/users/fcoppey/events{/privacy}", "received_events_url": "https://api.github.com/users/fcoppey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-03T19:10:22Z", "updated_at": "2019-07-17T13:07:37Z", "closed_at": "2019-07-17T13:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nwhen I predict my test_set I get endless output of that :\r\n/usr/local/lib/python3.7/site-packages/sklearn/preprocessing/_function_transformer.py:98: FutureWarning: The default validate=True will be replaced by validate=False in 0.22\r\n\r\nany idea what to modify to make this go away?\r\n\r\nthank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/874", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/874/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/874/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/874/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/874", "id": 450171848, "node_id": "MDU6SXNzdWU0NTAxNzE4NDg=", "number": 874, "title": "TPOT not running after importing operators", "user": {"login": "innovativeC", "id": 25672391, "node_id": "MDQ6VXNlcjI1NjcyMzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/25672391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/innovativeC", "html_url": "https://github.com/innovativeC", "followers_url": "https://api.github.com/users/innovativeC/followers", "following_url": "https://api.github.com/users/innovativeC/following{/other_user}", "gists_url": "https://api.github.com/users/innovativeC/gists{/gist_id}", "starred_url": "https://api.github.com/users/innovativeC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/innovativeC/subscriptions", "organizations_url": "https://api.github.com/users/innovativeC/orgs", "repos_url": "https://api.github.com/users/innovativeC/repos", "events_url": "https://api.github.com/users/innovativeC/events{/privacy}", "received_events_url": "https://api.github.com/users/innovativeC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-30T07:32:50Z", "updated_at": "2019-06-03T19:27:22Z", "closed_at": "2019-06-03T19:27:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running tpot on jupyter notebook, while running tpot's process is not moving past the importing of parameters present in config dict\r\n\r\nBelow is the code -\r\n```#uploading data\r\ndata = pd.read_csv(r'C:\\Users\\rdx\\Desktop\\h2o datasets\\TKML_raw.csv')\r\n\r\n#uploading schema\r\ndata_sch = pd.read_csv(r'C:\\Users\\rdx\\Desktop\\h2o datasets\\TKML_schema.csv')\r\ndata_str = data_sch.columns[data_sch.isin(['STR']).any()]\r\ndata_dt = data_sch.columns[data_sch.isin(['DATETIME']).any()]\r\ndata_mon = data_sch.columns[data_sch.isin(['MONEY']).any()]\r\n\r\nstop = stopwords.words('english')\r\n\r\n#remaping the target column\r\n\r\ndef remap(colname):\r\n    lab = LabelEncoder()\r\n    remap.colname = lab.fit_transform(colname.values)\r\n        \r\n    \r\n#Function to convert string columns to numeric\r\n\r\ndef preprocess(x):\r\n    x = str(x).lower()\r\n    x = x.replace(\"a\", \"00\").replace(\"b\", \"01\").replace(\"c\", \"02\").replace(\"d\", \"03\")\\\r\n                            .replace(\"e\", \"04\").replace(\"f\", \"05\").replace(\"g\", \"06\")\\\r\n                            .replace(\"h\", \"07\").replace(\"i\", \"08\").replace(\"j\", \"09\")\\\r\n                            .replace(\"k\", \"10\").replace(\"l\", \"11\").replace(\"m\", \"12\")\\\r\n                            .replace(\"n\", \"13\").replace(\"o\", \"14\").replace(\"p\", \"15\")\\\r\n                            .replace(\"q\", \"16\").replace(\"r\", \"17\").replace(\"s\", \"18\")\\\r\n                            .replace(\"t\", \"19\").replace(\"u\", \"20\").replace(\"v\", \"21\").replace(\"w\", \"22\")\\\r\n                            .replace(\"x\", \"23\").replace(\"y\", \"24\").replace(\"z\", \"25\").replace(\"-\", \"26\")\r\n    return x\r\n\r\ndef cleanhtml(sentence):\r\n    cleaned = re.sub(r'<.*?>',r' ', sentence)\r\n    return cleaned\r\n\r\ndef cleanpunc(word):\r\n    clean = re.sub(r'[?|!|\\'|\"|#]',r' ', word)\r\n    cleanr = re.sub(r'[.|,|)|(|\\|/]',r' ', clean)\r\n    return cleanr\r\n\r\ndef alphabet_position_numeric(colname):\r\n    lst_of_sent = []\r\n    str1 = ''\r\n    final_str = []\r\n    \r\n    for sent in colname.values:\r\n        filtered_sent = []\r\n        for word in sent.split():\r\n            for clean_word in preprocess(word).split():\r\n                filtered_sent.append(clean_word)\r\n        lst_of_sent.append(filtered_sent)\r\n        \r\n    for lst in lst_of_sent:\r\n        str1 = ''.join(lst)\r\n        final_str.append(str1)\r\n    \r\n    alphabet_position_numeric.colname = final_str\r\n\r\ndef vectorize_text(colname):\r\n    lst_of_sent = []\r\n    \r\n    for sent in colname.values:\r\n        filtered_sent = []\r\n        sent = cleanhtml(sent)\r\n        for words in sent.split():\r\n            for cleaned_words in cleanpunc(words).split():\r\n                if(cleaned_words.isalpha()) & (len(cleaned_words) > 3):\r\n                    if(cleaned_words not in stop):\r\n                        filtered_sent.append(cleaned_words.lower())\r\n        lst_of_sent.append(filtered_sent)\r\n    \r\n    w2v_model = gensim.models.Word2Vec(lst_of_sent, min_count = 5, size = 50, workers = 2)\r\n    \r\n    sent_vectors = []\r\n    \r\n    for sent in lst_of_sent:\r\n        sent_vec = np.zeros(50)\r\n        cnt_words = 0\r\n        for w in sent:\r\n            try:\r\n                vec = w2v_model.wv[w]\r\n                sent_vec += vec\r\n                cnt_words += 1\r\n            except:\r\n                pass\r\n        sent_vec /= cnt_words\r\n        sent_vectors.append(sent_vec)\r\n        \r\n    vectorize_text.colname = list(sent_vectors)\r\n    \r\n    \r\n# convert string columns to date&time\r\n\r\ndef to_date_time(colname):\r\n    to_date_time.colname =  pd.to_datetime(colname, infer_datetime_format = True).astype(np.int64)\r\n    \r\ndef clean_currency(word):\r\n    cleaning = re.sub(r'[^\\d.]', '', word)\r\n    return cleaning\r\n    \r\n\r\ndef data_seg(dataset, colname):\r\n    label = dataset[''+colname+'']\r\n    data_feat = dataset.drop(''+colname+'', axis = 1)\r\n    data_seg.x_tr, data_seg.x_test, data_seg.y_tr, data_seg.y_test = train_test_split(data_feat, label, test_size = 0.75, random_state = 42, shuffle=True)\r\n\r\n\r\n\r\ntext_col = 'None'\r\ntarg_col = 'Claim Status'\r\nfor str_col in data_str:\r\n    if str_col == ''+targ_col+'':\r\n        remap(data[str_col])\r\n        data[str_col] = remap.colname\r\n    elif str_col == ''+text_col+'':\r\n        vectorize_text(data[text_col])\r\n        data[text_col] = vectorize_text.colname\r\n        data2 = data.loc[:, data.columns.intersection([text_col])]\r\n        data2 = pd.DataFrame(data2[text_col].values.tolist(), index = data2.index)\r\n        data = data.drop(text_col, axis =1)\r\n        data = data.join(data2)\r\n    elif str_col != ''+targ_col+'' or str_col != ''+text_col+'':\r\n        alphabet_position_numeric(data[str_col])\r\n        data[str_col] = alphabet_position_numeric.colname\r\n\r\ndef money_to_numeric(colname):\r\n    lst_of_sent = []\r\n    str1 = ''\r\n    final_str = []\r\n    \r\n    for sent in colname.values:\r\n        filtered_sent = []\r\n        for word in sent.split():\r\n            for clean_word in clean_currency(word).split():\r\n                filtered_sent.append(clean_word)\r\n        lst_of_sent.append(filtered_sent)\r\n        \r\n    for lst in lst_of_sent:\r\n        str1 = ''.join(lst)\r\n        final_str.append(str1)\r\n    \r\n    money_to_numeric.colname = final_str\r\n\r\nfor mon_col in data_mon:\r\n    data[mon_col] = data[mon_col].apply(str)\r\n    money_to_numeric(data[mon_col])\r\n    data[mon_col] = money_to_numeric.colname\r\n\r\n\r\nfor dt_col in data_dt:\r\n    to_date_time(data[dt_col])\r\n    data[dt_col] = to_date_time.colname\r\n\r\n\r\ndata = data.convert_objects(convert_numeric=True)\r\ndata = data.fillna(0.001)\r\n\r\nClaim = 'Claim Status'\r\ndata_seg(data, Claim)\r\n\r\ntpot = TPOTClassifier(verbosity=3, max_time_mins=10)\r\ntpot.fit(data_seg.x_tr, data_seg.y_tr)\r\nmodel = tpot.fitted_pipeline_```\r\n\r\n\r\nOutput - \r\n30 operators have been imported by TPOT.\r\n\r\nPS - not running beyond importing the operators, not even the progress bar is showing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/873", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/873/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/873/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/873/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/873", "id": 449888908, "node_id": "MDU6SXNzdWU0NDk4ODg5MDg=", "number": 873, "title": "tpot how to choose feature selection operators?", "user": {"login": "ajoeajoe", "id": 11608953, "node_id": "MDQ6VXNlcjExNjA4OTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/11608953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajoeajoe", "html_url": "https://github.com/ajoeajoe", "followers_url": "https://api.github.com/users/ajoeajoe/followers", "following_url": "https://api.github.com/users/ajoeajoe/following{/other_user}", "gists_url": "https://api.github.com/users/ajoeajoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajoeajoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajoeajoe/subscriptions", "organizations_url": "https://api.github.com/users/ajoeajoe/orgs", "repos_url": "https://api.github.com/users/ajoeajoe/repos", "events_url": "https://api.github.com/users/ajoeajoe/events{/privacy}", "received_events_url": "https://api.github.com/users/ajoeajoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-29T15:53:01Z", "updated_at": "2019-06-03T19:27:36Z", "closed_at": "2019-06-03T19:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "randomly choose?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/872", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/872/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/872/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/872", "id": 449344882, "node_id": "MDU6SXNzdWU0NDkzNDQ4ODI=", "number": 872, "title": "Question about extracting models explored by TPOT that scored lower thant top", "user": {"login": "lmsanch", "id": 3156487, "node_id": "MDQ6VXNlcjMxNTY0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3156487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmsanch", "html_url": "https://github.com/lmsanch", "followers_url": "https://api.github.com/users/lmsanch/followers", "following_url": "https://api.github.com/users/lmsanch/following{/other_user}", "gists_url": "https://api.github.com/users/lmsanch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmsanch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmsanch/subscriptions", "organizations_url": "https://api.github.com/users/lmsanch/orgs", "repos_url": "https://api.github.com/users/lmsanch/repos", "events_url": "https://api.github.com/users/lmsanch/events{/privacy}", "received_events_url": "https://api.github.com/users/lmsanch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T15:45:18Z", "updated_at": "2019-05-28T16:12:56Z", "closed_at": "2019-05-28T16:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When finishing a TPOT based model, I was curious about the models explored. I found that using this:\r\n`models_tested  = pd.DataFrame(tpot.evaluated_individuals_).transpose()`\r\n\r\nIf I sort this dataFrame by internal_cv_score, I can see the top model in index position 0, s well as the cv_score for other models tested. For example:\r\n\r\n`models_tested.sort_values(['internal_cv_score'], ascending=False)[3:6]`\r\n\r\nReturns this for models 3 to 6:\r\n![Screen Shot 2019-05-28 at 11 29 32 AM](https://user-images.githubusercontent.com/3156487/58491314-c2ef6300-813c-11e9-8cda-5ffd2ddbebf0.png)\r\n\r\nI can then select, for example, model 5 like this:\r\n`models_tested.index[5]`\r\nwhich returns the string:\r\n`'LassoLarsCV(SelectPercentile(SelectFwe(LassoLarsCV(input_matrix, LassoLarsCV__normalize=True), SelectFwe__alpha=0.016), SelectPercentile__percentile=79), LassoLarsCV__normalize=True)'`\r\n\r\nIs there a way to \"convert\" that model definition (str) into an actual model? Is there any function in TPOT that internally stored the fit method for that specific model to come up with its CV score?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/871", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/871/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/871/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/871", "id": 447481273, "node_id": "MDU6SXNzdWU0NDc0ODEyNzM=", "number": 871, "title": "Question: What is the point of a double copy union pipeline step?", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-23T06:58:41Z", "updated_at": "2019-05-23T12:59:32Z", "closed_at": "2019-05-23T12:59:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Context of the issue\r\n\r\nI've seen this step multiple times in different pipelines:\r\n\r\n```\r\n    make_union(\r\n        FunctionTransformer(copy),\r\n        FunctionTransformer(copy)\r\n    )\r\n```\r\n\r\nFrom my understanding, this is like numpy's tile(2), right? Can someone give details why this is a viable step at all? Or is it just a \"bug\" in the pipeline creation, which can be safely omitted in production use?\r\n\r\nThanks! tpot is awesome!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/870", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/870/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/870/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/870", "id": 447180293, "node_id": "MDU6SXNzdWU0NDcxODAyOTM=", "number": 870, "title": "Question about usage of template", "user": {"login": "tjiagoM", "id": 7031523, "node_id": "MDQ6VXNlcjcwMzE1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjiagoM", "html_url": "https://github.com/tjiagoM", "followers_url": "https://api.github.com/users/tjiagoM/followers", "following_url": "https://api.github.com/users/tjiagoM/following{/other_user}", "gists_url": "https://api.github.com/users/tjiagoM/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjiagoM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjiagoM/subscriptions", "organizations_url": "https://api.github.com/users/tjiagoM/orgs", "repos_url": "https://api.github.com/users/tjiagoM/repos", "events_url": "https://api.github.com/users/tjiagoM/events{/privacy}", "received_events_url": "https://api.github.com/users/tjiagoM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328854484, "node_id": "MDU6TGFiZWwzMjg4NTQ0ODQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/being%20worked%20on", "name": "being worked on", "color": "eb6420", "default": false, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-05-22T14:45:50Z", "updated_at": "2019-07-17T13:05:19Z", "closed_at": "2019-07-17T13:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've started using TPOT, specifically `TPOTClassifier`. I've noticed that the default value for `template` is `RandomTree`. My questions are:\r\n\r\n1. Does this mean that only Random Forest trees will be explored? So, no feature selection before calling a Random Forest tree will be explored?\r\n\r\n2. From what I can understand, when I use `Selector-Transformer-Classifier` as an option for template, TPOT will *necessarily* explore pipelines which have a selector and a transformer step. Is it possible to explore all these 3 steps, but in which a valid option is also no selector or no transformer. In a way, also explore pipelines whose template is 'Selector-Classifier', 'Classifier', 'Transformer-Classifier', and so on...\r\n\r\n3. In the case of having `Classifier` in the template, is XGBoost also going to be explored as an option?\r\n\r\nI hope this is the right place to put this question. Thanks for the attention!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/869", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/869/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/869/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/869/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/869", "id": 447157043, "node_id": "MDU6SXNzdWU0NDcxNTcwNDM=", "number": 869, "title": "DeprecationWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23", "user": {"login": "neffmallon", "id": 13207223, "node_id": "MDQ6VXNlcjEzMjA3MjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/13207223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neffmallon", "html_url": "https://github.com/neffmallon", "followers_url": "https://api.github.com/users/neffmallon/followers", "following_url": "https://api.github.com/users/neffmallon/following{/other_user}", "gists_url": "https://api.github.com/users/neffmallon/gists{/gist_id}", "starred_url": "https://api.github.com/users/neffmallon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neffmallon/subscriptions", "organizations_url": "https://api.github.com/users/neffmallon/orgs", "repos_url": "https://api.github.com/users/neffmallon/repos", "events_url": "https://api.github.com/users/neffmallon/events{/privacy}", "received_events_url": "https://api.github.com/users/neffmallon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T14:04:11Z", "updated_at": "2019-05-30T12:49:20Z", "closed_at": "2019-05-30T12:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "On import, scikit-learn throws a deprecation warning, suggesting that joblib should be installed directly.\r\n\r\n> Python37\\lib\\site-packages\\sklearn\\externals\\joblib\\__init__.py:15: DeprecationWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.\r\n\r\nJoblib should be added to requirements.txt and TPOT should be refactored to refer to the joblib package where appropriate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/868", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/868/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/868/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/868/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/868", "id": 447022701, "node_id": "MDU6SXNzdWU0NDcwMjI3MDE=", "number": 868, "title": "pareto front in first generation causes RuntimeError", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-22T09:16:53Z", "updated_at": "2019-09-02T06:32:05Z", "closed_at": "2019-05-22T10:20:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A RuntimeError appears after a certain number of pipelines have already been successfully evaluated:\r\n\r\n>RuntimeError: There was an error in the TPOT optimization process. This could be because the data was not formatted properly, or because data for a regression problem was provided to the TPOTClassifier object. Please make sure you passed the data to TPOT correctly.\r\n\r\nMay be related to #849 \r\n\r\n## Context of the issue\r\n\r\nAfter running tpot for a data set and if some pipelines timeout (message: *Skipped pipeline #82 due to time out. Continuing to the next pipeline.*) there will be an error thrown because *self.optimized_pipeline* is *None* in https://github.com/EpistasisLab/tpot/blob/1387839b55cfee2e5f31465841582973f30b5ea1/tpot/base.py#L829\r\n\r\nIn my example, 94 (out of 100 for a generation, so we are in the first generation) pipelines have already been evaluated with two pipelines being stopped due to timeout. Then, in this code line\r\nhttps://github.com/EpistasisLab/tpot/blob/1387839b55cfee2e5f31465841582973f30b5ea1/tpot/base.py#L824\r\n\r\nthe length of the zipped tuple will be 1 with the *pipeline_scores.wvalues[1]* being *-inf*. The condition is therefore not valid so *self.optimized_pipeline* is None.\r\n\r\nTwo possible problems:\r\n- Why is the length of *self._pareto_front.items* 1? Is this only calculated after a first successful generation?\r\n- Why is the fitness value *-inf*? \r\n\r\n## Process to reproduce the issue\r\n\r\nThe dataset used contains floats and ints as features and an int array as the target. tpot is run like this:\r\n```\r\ntpot = TPOTClassifier(generations=99, population_size=100, verbosity=3, n_jobs=3, periodic_checkpoint_folder=\"pipelines\", scoring=\"f1\")\r\ntpot.fit(X_train, y_train)\r\n```\r\n\r\nThe problem is triggered in the deap generation loop:\r\nhttps://github.com/EpistasisLab/tpot/blob/1387839b55cfee2e5f31465841582973f30b5ea1/tpot/gp_deap.py#L236\r\n\r\nI can provide the dataset privately if necessary to solve this issue. I would also be willing to solving this issue myself, but need additional guidance.\r\n\r\n\r\n## Possible fix\r\n\r\nthe pareto front initialization should probably be different?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/866", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/866/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/866/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/866/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/866", "id": 444529791, "node_id": "MDU6SXNzdWU0NDQ1Mjk3OTE=", "number": 866, "title": "Very long pipelines running...", "user": {"login": "fcoppey", "id": 42648441, "node_id": "MDQ6VXNlcjQyNjQ4NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/42648441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcoppey", "html_url": "https://github.com/fcoppey", "followers_url": "https://api.github.com/users/fcoppey/followers", "following_url": "https://api.github.com/users/fcoppey/following{/other_user}", "gists_url": "https://api.github.com/users/fcoppey/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcoppey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcoppey/subscriptions", "organizations_url": "https://api.github.com/users/fcoppey/orgs", "repos_url": "https://api.github.com/users/fcoppey/repos", "events_url": "https://api.github.com/users/fcoppey/events{/privacy}", "received_events_url": "https://api.github.com/users/fcoppey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-15T16:20:05Z", "updated_at": "2019-05-22T12:20:50Z", "closed_at": "2019-05-22T12:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nI use TPOT for regression on a dataset of 1800 samples x 125 variables (NIR Spectroscopy), results are great but on some datasets it goes into very complicated pipelines that take 15 to 20 min to finish, hence moving trough generations extremely slowly... 50 generations in 48 hours for instance on an amazon EWS instance with 36 cores.\r\nAlso 90% of the time it uses one core at 100% and nothing else. \r\n\r\nAm I missing something? I've set max_eval_time_mins=10 but it does not seem to stop at 10minutes.\r\n\r\nAny help highly appreciated.\r\n\r\n## Context of the issue\r\n\r\nI am using the latest version and have set these tpot settings : \r\n        tpot = TPOTRegressor(generations=200, early_stop=15, max_eval_time_mins=10, population_size=100, verbosity=2,\r\n                             n_jobs=36)\r\n\r\n<img width=\"570\" alt=\"Screenshot 2019-05-15 at 18 21 01\" src=\"https://user-images.githubusercontent.com/42648441/57791960-3c02b980-773e-11e9-8a9d-7ac3573f4fc4.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/863", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/863/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/863/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/863", "id": 439447440, "node_id": "MDU6SXNzdWU0Mzk0NDc0NDA=", "number": 863, "title": "Why the training steps stop suddenly?", "user": {"login": "aeadod", "id": 33121476, "node_id": "MDQ6VXNlcjMzMTIxNDc2", "avatar_url": "https://avatars0.githubusercontent.com/u/33121476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeadod", "html_url": "https://github.com/aeadod", "followers_url": "https://api.github.com/users/aeadod/followers", "following_url": "https://api.github.com/users/aeadod/following{/other_user}", "gists_url": "https://api.github.com/users/aeadod/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeadod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeadod/subscriptions", "organizations_url": "https://api.github.com/users/aeadod/orgs", "repos_url": "https://api.github.com/users/aeadod/repos", "events_url": "https://api.github.com/users/aeadod/events{/privacy}", "received_events_url": "https://api.github.com/users/aeadod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T06:47:30Z", "updated_at": "2019-05-30T12:50:26Z", "closed_at": "2019-05-30T12:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n![\u6355\u83b7](https://user-images.githubusercontent.com/33121476/57059681-f4654200-6ce8-11e9-9c86-0e166ed24c2a.PNG)\r\n![\u6355\u83b72](https://user-images.githubusercontent.com/33121476/57059740-32fafc80-6ce9-11e9-8159-28c63dfaef67.PNG)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/862", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/862/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/862/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/862/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/862", "id": 438625666, "node_id": "MDU6SXNzdWU0Mzg2MjU2NjY=", "number": 862, "title": "Make tpot exit more gracefully on std::bad_alloc", "user": {"login": "jhmenke", "id": 25080218, "node_id": "MDQ6VXNlcjI1MDgwMjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/25080218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmenke", "html_url": "https://github.com/jhmenke", "followers_url": "https://api.github.com/users/jhmenke/followers", "following_url": "https://api.github.com/users/jhmenke/following{/other_user}", "gists_url": "https://api.github.com/users/jhmenke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmenke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmenke/subscriptions", "organizations_url": "https://api.github.com/users/jhmenke/orgs", "repos_url": "https://api.github.com/users/jhmenke/repos", "events_url": "https://api.github.com/users/jhmenke/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmenke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818165, "node_id": "MDU6TGFiZWwyODE4MTgxNjU=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/need%20contributor", "name": "need contributor", "color": "159818", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-30T06:46:28Z", "updated_at": "2019-05-10T08:55:50Z", "closed_at": "2019-05-10T08:55:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "edit:\r\nokay, so i guess i could/should have used *periodic_checkpoint_folder*. i'll leave it up to you if you want to close this issue, since i do not know how to replicate the bad_alloc reliably.\r\n\r\n## Context of the issue\r\n\r\nI am running tpot on a fairly low-powered computer. After a considerable amount of time, it encountered an error:\r\n\r\n```\r\nterminate called after throwing an instance of 'std::bad_alloc' \r\nwhat():  std::bad_alloc\r\n```\r\n\r\nNow this error is of course unpleasant, but maybe tpot was limited by the RAM or something (although i have 8 GB). The unpleasant thing is, however, that i lost all my progress in the hours previous to the error. It would be helpful if the current best pipeline can be logged/printed/written to file in such cases.\r\n\r\n## Process to reproduce the issue\r\n\r\nI cannot supply the data, but my call was simple:\r\n\r\n```\r\ntpot = TPOTClassifier(generations=100, population_size=100, verbosity=2, cv=3, n_jobs=3)\r\ntpot.fit(X_train, y_train)\r\ntpot.export('tpot_pipeline.log')\r\n```\r\ntpot crashed at 19 % or 1928/10100 tests.\r\n\r\n## Expected result\r\n\r\ntpot should run without errors or at least print the current best pipeline in case of failure\r\n\r\n## Current result\r\n\r\ntpot crashes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/858", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/858/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/858/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/858", "id": 434571382, "node_id": "MDU6SXNzdWU0MzQ1NzEzODI=", "number": 858, "title": "Test TPOT ERROR", "user": {"login": "zhengxinvip", "id": 15439932, "node_id": "MDQ6VXNlcjE1NDM5OTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/15439932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhengxinvip", "html_url": "https://github.com/zhengxinvip", "followers_url": "https://api.github.com/users/zhengxinvip/followers", "following_url": "https://api.github.com/users/zhengxinvip/following{/other_user}", "gists_url": "https://api.github.com/users/zhengxinvip/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhengxinvip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhengxinvip/subscriptions", "organizations_url": "https://api.github.com/users/zhengxinvip/orgs", "repos_url": "https://api.github.com/users/zhengxinvip/repos", "events_url": "https://api.github.com/users/zhengxinvip/events{/privacy}", "received_events_url": "https://api.github.com/users/zhengxinvip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-18T03:15:38Z", "updated_at": "2019-12-31T05:52:53Z", "closed_at": "2019-05-30T12:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed TPOT but when I use this code test it.\r\nfrom tpot import TPOTRegressor\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom sklearn.datasets import load_boston\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nhousing = load_boston()\r\nX_train, X_test, y_train, y_test = train_test_split(housing.data, housing.target)\r\n                                                   # ,train_size=0.75, test_size=0.25)\r\n\r\ntpot = TPOTRegressor(generations=20, verbosity=2) \r\ntpot.fit(X_train, y_train)\r\nprint(tpot.score(X_test, y_test))\r\ntpot.export('pipeline.py')\r\n\r\n\r\nERROR:\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-80608a0debf2> in <module>()\r\n----> 5 from tpot import TPOTRegressor\r\n      6 import pandas as pd\r\n      7 import numpy as np\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tpot\\__init__.py in <module>()\r\n     25 \r\n     26 from ._version import __version__\r\n---> 27 from .tpot import TPOTClassifier, TPOTRegressor\r\n     28 from .driver import main\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tpot\\tpot.py in <module>()\r\n     24 \"\"\"\r\n     25 \r\n---> 26 from .base import TPOTBase\r\n     27 from .config.classifier import classifier_config_dict\r\n     28 from .config.regressor import regressor_config_dict\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tpot\\base.py in <module>()\r\n     44 from scipy import sparse\r\n     45 import deap\r\n---> 46 from deap import base, creator, tools, gp\r\n     47 from copy import copy, deepcopy\r\n     48 \r\n\r\nImportError: cannot import name 'base'\r\nHow can I fix it. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/857", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/857/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/857/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/857", "id": 434529475, "node_id": "MDU6SXNzdWU0MzQ1Mjk0NzU=", "number": 857, "title": "Overfitting avoidance", "user": {"login": "jmrichardson", "id": 6565528, "node_id": "MDQ6VXNlcjY1NjU1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6565528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmrichardson", "html_url": "https://github.com/jmrichardson", "followers_url": "https://api.github.com/users/jmrichardson/followers", "following_url": "https://api.github.com/users/jmrichardson/following{/other_user}", "gists_url": "https://api.github.com/users/jmrichardson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmrichardson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmrichardson/subscriptions", "organizations_url": "https://api.github.com/users/jmrichardson/orgs", "repos_url": "https://api.github.com/users/jmrichardson/repos", "events_url": "https://api.github.com/users/jmrichardson/events{/privacy}", "received_events_url": "https://api.github.com/users/jmrichardson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-04-17T23:36:48Z", "updated_at": "2019-04-19T15:31:26Z", "closed_at": "2019-04-19T15:31:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any \"automatic\" overfitting avoidance in TPOT?  From what I gather using TPOT, it selects the best model based on the highest cv score.  However, training accuracy of the model is significantly higher than test.  For example, the suggested model gives a KFold and train accuracy:\r\n\r\nCV: 0.7389675227752329\r\nTrain: 0.9330253389536609\r\n\r\nI know there are parameters in TPOT that help with overfitting such as subsample.  However, since my understanding is that TPOT doesn't provide training scores, it's difficult to determine if there is overfitting or not.  Does TPOT do early stopping?  Or perhaps check the learning curve?\r\n\r\nThanks for any insight", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/853", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/853/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/853/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/853/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/853", "id": 430642647, "node_id": "MDU6SXNzdWU0MzA2NDI2NDc=", "number": 853, "title": "TPOT Overfitting", "user": {"login": "jmrichardson", "id": 6565528, "node_id": "MDQ6VXNlcjY1NjU1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6565528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmrichardson", "html_url": "https://github.com/jmrichardson", "followers_url": "https://api.github.com/users/jmrichardson/followers", "following_url": "https://api.github.com/users/jmrichardson/following{/other_user}", "gists_url": "https://api.github.com/users/jmrichardson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmrichardson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmrichardson/subscriptions", "organizations_url": "https://api.github.com/users/jmrichardson/orgs", "repos_url": "https://api.github.com/users/jmrichardson/repos", "events_url": "https://api.github.com/users/jmrichardson/events{/privacy}", "received_events_url": "https://api.github.com/users/jmrichardson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-08T20:26:41Z", "updated_at": "2019-04-19T15:31:33Z", "closed_at": "2019-04-19T15:31:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am new to TPOT and running into an overfitting issue.  The pipeline selected \"ExtraTreeClassifier\" got an almost perfect CV score:\r\n\r\n```\r\nprint(tpot.score(X, y))\r\n0.9999142532530172\r\n```\r\n\r\nI know this is impossible so I am wondering the following:\r\n\r\n1: How can I look at the accuracy for both training and cross validation?  I have looked at the tpotClassifier object and I see the internal_cv_score for each individual but can't find the training score.  I would like to be able to look at the differences to see if there is an indication of overfitting\r\n2: I was under the assumption that TPOT automatically chooses the best model that avoids overfitting?\r\n\r\nI am sure I am doing something wrong and could use a pointer.  \r\n\r\n## Context of the issue\r\n\r\nHere is my TPOTClassifier config.  I am testing so only 1 generation.  If I remove the ExtraTreeClassifier, it selects a model with score of .63 which is close to what I get just running an sklearn RF model:\r\n\r\n```\r\ngkf = GroupKFold(n_splits=4).split(X=X, y=y, groups=groups)\r\n\r\ntpot_config = {\r\n    'sklearn.ensemble.RandomForestClassifier': {\r\n        'n_estimators': [10, 20],\r\n        'max_features': ['auto', 'sqrt', 'log2'],\r\n        'min_samples_leaf': [5,10],\r\n        'max_depth': [10, None],\r\n    },\r\n    'sklearn.tree.ExtraTreeClassifier': {\r\n    }\r\n}\r\n\r\ntpot = TPOTClassifier(generations=1, population_size=30, verbosity=3,\r\n                     cv=gkf,\r\n                     periodic_checkpoint_folder='tmp',\r\n                     scoring='accuracy',\r\n                     early_stop=5,\r\n                     random_state=1,\r\n                     memory='tmp',\r\n                     warm_start=True,\r\n                     config_dict=tpot_config\r\n                     )\r\n\r\ntpot.fit(X, y)\r\nprint(tpot.score(X, y))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/852", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/852/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/852/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/852", "id": 428801907, "node_id": "MDU6SXNzdWU0Mjg4MDE5MDc=", "number": 852, "title": "Invalid Pipeline generated by TPOT with test data", "user": {"login": "erico-souza", "id": 15897918, "node_id": "MDQ6VXNlcjE1ODk3OTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/15897918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erico-souza", "html_url": "https://github.com/erico-souza", "followers_url": "https://api.github.com/users/erico-souza/followers", "following_url": "https://api.github.com/users/erico-souza/following{/other_user}", "gists_url": "https://api.github.com/users/erico-souza/gists{/gist_id}", "starred_url": "https://api.github.com/users/erico-souza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erico-souza/subscriptions", "organizations_url": "https://api.github.com/users/erico-souza/orgs", "repos_url": "https://api.github.com/users/erico-souza/repos", "events_url": "https://api.github.com/users/erico-souza/events{/privacy}", "received_events_url": "https://api.github.com/users/erico-souza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T14:30:36Z", "updated_at": "2019-04-03T15:20:13Z", "closed_at": "2019-04-03T15:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found a pipeline with TPOT, but it does not execute the prediction, since it is generating features that do not match with the test data (Data used was attached in this message)\r\n\r\n## Context of the issue\r\n\r\n[provide more detailed introduction to the issue itself and why it is relevant]\r\n\r\n[the remaining entries are only necessary if you are reporting a bug]\r\n\r\n## Process to reproduce the issue\r\n\r\n\r\n```python\r\nimport pandas as pd\r\nfrom sklearn.pipeline import make_pipeline, make_union\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom xgboost import XGBClassifier\r\nfrom tpot.builtins import StackingEstimator\r\ntrain = pd.read_csv('../data/scene-train.csv')\r\ntest  = pd.read_csv('../data/scene-test.csv')\r\ncols = list(train.columns)\r\nYs = ['Beach',\r\n 'Sunset',\r\n 'FallFoliage',\r\n 'Field',\r\n 'Mountain',\r\n 'Urban']\r\nfeatures = [c for c in cols if c not in Ys]\r\nprint(features)\r\npipe_mountain =  make_pipeline(\r\n    StackingEstimator(estimator=XGBClassifier(learning_rate=0.1, max_depth=7, min_child_weight=8, n_estimators=100, nthread=1, subsample=0.45)),\r\n    RandomForestClassifier(bootstrap=False, criterion=\"gini\", max_features=0.1, min_samples_leaf=10, min_samples_split=15, n_estimators=100)\r\n)\r\npipe_mountain.fit(train[features], train['Mountain'])\r\nresults = pipe_mountain.predict(test[features])\r\n```\r\n\r\n\r\n## Expected result\r\n\r\nI would expect the predictions for the specific label I requested.\r\n\r\n## Current result\r\n\r\nThe error I am getting is related to features generated during the stacking phase that do not exist on the test data:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"ml.py\", line 76, in <module>\r\n    pipes[cont].fit(train[features], train[y])\r\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 265, in fit\r\n    Xt, fit_params = self._fit(X, y, **fit_params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 230, in _fit\r\n    **fit_params_steps[name])\r\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/externals/joblib/memory.py\", line 342, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/pipeline.py\", line 614, in _fit_transform_one\r\n    res = transformer.fit_transform(X, y, **fit_params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/sklearn/base.py\", line 465, in fit_transform\r\n    return self.fit(X, y, **fit_params).transform(X)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tpot/builtins/stacking_estimator.py\", line 87, in transform\r\n    X_transformed = np.hstack((self.estimator.predict_proba(X), X))\r\n  File \"/usr/local/lib/python3.5/dist-packages/xgboost/sklearn.py\", line 802, in predict_proba\r\n    validate_features=validate_features)\r\n  File \"/usr/local/lib/python3.5/dist-packages/xgboost/core.py\", line 1218, in predict\r\n    self._validate_features(data)\r\n  File \"/usr/local/lib/python3.5/dist-packages/xgboost/core.py\", line 1541, in _validate_features\r\n    data.feature_names))\r\nValueError: feature_names mismatch: ['Att1', 'Att2', 'Att3', 'Att4', 'Att5', 'Att6', 'Att7', 'Att8', 'Att9', 'Att10', 'Att11', 'Att12', 'Att13', 'Att14', 'Att15', 'Att16', 'Att17', 'Att18', 'Att19', 'Att20', 'Att21', 'Att22', 'Att23', 'Att24', 'Att25', 'Att26', 'Att27', 'Att28', 'Att29', 'Att30', 'Att31', 'Att32', 'Att33', 'Att34', 'Att35', 'Att36', 'Att37', 'Att38', 'Att39', 'Att40', 'Att41', 'Att42', 'Att43', 'Att44', 'Att45', 'Att46', 'Att47', 'Att48', 'Att49', 'Att50', 'Att51', 'Att52', 'Att53', 'Att54', 'Att55', 'Att56', 'Att57', 'Att58', 'Att59', 'Att60', 'Att61', 'Att62', 'Att63', 'Att64', 'Att65', 'Att66', 'Att67', 'Att68', 'Att69', 'Att70', 'Att71', 'Att72', 'Att73', 'Att74', 'Att75', 'Att76', 'Att77', 'Att78', 'Att79', 'Att80', 'Att81', 'Att82', 'Att83', 'Att84', 'Att85', 'Att86', 'Att87', 'Att88', 'Att89', 'Att90', 'Att91', 'Att92', 'Att93', 'Att94', 'Att95', 'Att96', 'Att97', 'Att98', 'Att99', 'Att100', 'Att101', 'Att102', 'Att103', 'Att104', 'Att105', 'Att106', 'Att107', 'Att108', 'Att109', 'Att110', 'Att111', 'Att112', 'Att113', 'Att114', 'Att115', 'Att116', 'Att117', 'Att118', 'Att119', 'Att120', 'Att121', 'Att122', 'Att123', 'Att124', 'Att125', 'Att126', 'Att127', 'Att128', 'Att129', 'Att130', 'Att131', 'Att132', 'Att133', 'Att134', 'Att135', 'Att136', 'Att137', 'Att138', 'Att139', 'Att140', 'Att141', 'Att142', 'Att143', 'Att144', 'Att145', 'Att146', 'Att147', 'Att148', 'Att149', 'Att150', 'Att151', 'Att152', 'Att153', 'Att154', 'Att155', 'Att156', 'Att157', 'Att158', 'Att159', 'Att160', 'Att161', 'Att162', 'Att163', 'Att164', 'Att165', 'Att166', 'Att167', 'Att168', 'Att169', 'Att170', 'Att171', 'Att172', 'Att173', 'Att174', 'Att175', 'Att176', 'Att177', 'Att178', 'Att179', 'Att180', 'Att181', 'Att182', 'Att183', 'Att184', 'Att185', 'Att186', 'Att187', 'Att188', 'Att189', 'Att190', 'Att191', 'Att192', 'Att193', 'Att194', 'Att195', 'Att196', 'Att197', 'Att198', 'Att199', 'Att200', 'Att201', 'Att202', 'Att203', 'Att204', 'Att205', 'Att206', 'Att207', 'Att208', 'Att209', 'Att210', 'Att211', 'Att212', 'Att213', 'Att214', 'Att215', 'Att216', 'Att217', 'Att218', 'Att219', 'Att220', 'Att221', 'Att222', 'Att223', 'Att224', 'Att225', 'Att226', 'Att227', 'Att228', 'Att229', 'Att230', 'Att231', 'Att232', 'Att233', 'Att234', 'Att235', 'Att236', 'Att237', 'Att238', 'Att239', 'Att240', 'Att241', 'Att242', 'Att243', 'Att244', 'Att245', 'Att246', 'Att247', 'Att248', 'Att249', 'Att250', 'Att251', 'Att252', 'Att253', 'Att254', 'Att255', 'Att256', 'Att257', 'Att258', 'Att259', 'Att260', 'Att261', 'Att262', 'Att263', 'Att264', 'Att265', 'Att266', 'Att267', 'Att268', 'Att269', 'Att270', 'Att271', 'Att272', 'Att273', 'Att274', 'Att275', 'Att276', 'Att277', 'Att278', 'Att279', 'Att280', 'Att281', 'Att282', 'Att283', 'Att284', 'Att285', 'Att286', 'Att287', 'Att288', 'Att289', 'Att290', 'Att291', 'Att292', 'Att293', 'Att294'] ['f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12', 'f13', 'f14', 'f15', 'f16', 'f17', 'f18', 'f19', 'f20', 'f21', 'f22', 'f23', 'f24', 'f25', 'f26', 'f27', 'f28', 'f29', 'f30', 'f31', 'f32', 'f33', 'f34', 'f35', 'f36', 'f37', 'f38', 'f39', 'f40', 'f41', 'f42', 'f43', 'f44', 'f45', 'f46', 'f47', 'f48', 'f49', 'f50', 'f51', 'f52', 'f53', 'f54', 'f55', 'f56', 'f57', 'f58', 'f59', 'f60', 'f61', 'f62', 'f63', 'f64', 'f65', 'f66', 'f67', 'f68', 'f69', 'f70', 'f71', 'f72', 'f73', 'f74', 'f75', 'f76', 'f77', 'f78', 'f79', 'f80', 'f81', 'f82', 'f83', 'f84', 'f85', 'f86', 'f87', 'f88', 'f89', 'f90', 'f91', 'f92', 'f93', 'f94', 'f95', 'f96', 'f97', 'f98', 'f99', 'f100', 'f101', 'f102', 'f103', 'f104', 'f105', 'f106', 'f107', 'f108', 'f109', 'f110', 'f111', 'f112', 'f113', 'f114', 'f115', 'f116', 'f117', 'f118', 'f119', 'f120', 'f121', 'f122', 'f123', 'f124', 'f125', 'f126', 'f127', 'f128', 'f129', 'f130', 'f131', 'f132', 'f133', 'f134', 'f135', 'f136', 'f137', 'f138', 'f139', 'f140', 'f141', 'f142', 'f143', 'f144', 'f145', 'f146', 'f147', 'f148', 'f149', 'f150', 'f151', 'f152', 'f153', 'f154', 'f155', 'f156', 'f157', 'f158', 'f159', 'f160', 'f161', 'f162', 'f163', 'f164', 'f165', 'f166', 'f167', 'f168', 'f169', 'f170', 'f171', 'f172', 'f173', 'f174', 'f175', 'f176', 'f177', 'f178', 'f179', 'f180', 'f181', 'f182', 'f183', 'f184', 'f185', 'f186', 'f187', 'f188', 'f189', 'f190', 'f191', 'f192', 'f193', 'f194', 'f195', 'f196', 'f197', 'f198', 'f199', 'f200', 'f201', 'f202', 'f203', 'f204', 'f205', 'f206', 'f207', 'f208', 'f209', 'f210', 'f211', 'f212', 'f213', 'f214', 'f215', 'f216', 'f217', 'f218', 'f219', 'f220', 'f221', 'f222', 'f223', 'f224', 'f225', 'f226', 'f227', 'f228', 'f229', 'f230', 'f231', 'f232', 'f233', 'f234', 'f235', 'f236', 'f237', 'f238', 'f239', 'f240', 'f241', 'f242', 'f243', 'f244', 'f245', 'f246', 'f247', 'f248', 'f249', 'f250', 'f251', 'f252', 'f253', 'f254', 'f255', 'f256', 'f257', 'f258', 'f259', 'f260', 'f261', 'f262', 'f263', 'f264', 'f265', 'f266', 'f267', 'f268', 'f269', 'f270', 'f271', 'f272', 'f273', 'f274', 'f275', 'f276', 'f277', 'f278', 'f279', 'f280', 'f281', 'f282', 'f283', 'f284', 'f285', 'f286', 'f287', 'f288', 'f289', 'f290', 'f291', 'f292', 'f293']\r\nexpected Att158, Att70, Att34, Att205, Att187, Att176, Att14, Att119, Att231, Att72, Att265, Att4, Att242, Att270, Att262, Att12, Att203, Att18, Att216, Att105, Att157, Att136, Att269, Att108, Att61, Att90, Att102, Att83, Att259, Att264, Att87, Att17, Att282, Att47, Att20, Att190, Att38, Att267, Att139, Att271, Att193, Att48, Att75, Att197, Att30, Att62, Att69, Att208, Att182, Att2, Att253, Att112, Att33, Att134, Att129, Att226, Att292, Att183, Att21, Att173, Att235, Att67, Att131, Att239, Att166, Att142, Att164, Att113, Att45, Att41, Att147, Att92, Att200, Att31, Att116, Att195, Att274, Att243, Att293, Att154, Att54, Att241, Att81, Att64, Att171, Att277, Att85, Att76, Att152, Att256, Att151, Att137, Att170, Att91, Att104, Att66, Att207, Att140, Att227, Att181, Att289, Att223, Att53, Att74, Att16, Att155, Att219, Att233, Att13, Att168, Att82, Att111, Att117, Att261, Att204, Att44, Att71, Att22, Att135, Att63, Att3, Att184, Att124, Att179, Att217, Att93, Att287, Att156, Att230, Att28, Att240, Att288, Att201, Att210, Att130, Att56, Att107, Att285, Att258, Att65, Att127, Att133, Att175, Att255, Att278, Att160, Att60, Att238, Att180, Att222, Att248, Att209, Att46, Att249, Att206, Att132, Att281, Att284, Att35, Att202, Att263, Att23, Att128, Att236, Att100, Att213, Att10, Att191, Att199, Att185, Att247, Att153, Att8, Att163, Att283, Att225, Att146, Att58, Att29, Att224, Att49, Att159, Att189, Att5, Att6, Att110, Att86, Att167, Att244, Att237, Att68, Att246, Att161, Att294, Att97, Att26, Att150, Att272, Att78, Att252, Att51, Att106, Att118, Att232, Att148, Att7, Att250, Att122, Att162, Att94, Att9, Att145, Att276, Att138, Att24, Att79, Att89, Att114, Att42, Att286, Att55, Att52, Att141, Att88, Att144, Att11, Att98, Att37, Att165, Att280, Att192, Att194, Att84, Att254, Att228, Att211, Att126, Att169, Att290, Att73, Att257, Att260, Att279, Att172, Att266, Att32, Att123, Att109, Att174, Att198, Att221, Att275, Att99, Att229, Att25, Att115, Att57, Att186, Att215, Att273, Att188, Att149, Att59, Att177, Att291, Att214, Att36, Att220, Att96, Att50, Att40, Att15, Att218, Att196, Att268, Att121, Att103, Att77, Att80, Att178, Att101, Att212, Att234, Att245, Att27, Att43, Att125, Att1, Att95, Att120, Att251, Att19, Att39, Att143 in input data\r\ntraining data did not have the following fields: f16, f32, f66, f161, f191, f272, f141, f180, f229, f64, f126, f59, f288, f106, f93, f182, f128, f241, f111, f120, f254, f190, f60, f82, f189, f77, f208, f7, f21, f23, f108, f253, f198, f48, f266, f27, f110, f36, f38, f46, f89, f86, f174, f228, f252, f209, f186, f99, f10, f92, f100, f94, f103, f118, f162, f258, f4, f54, f1, f267, f281, f45, f79, f51, f149, f147, f134, f157, f206, f178, f81, f290, f164, f213, f175, f169, f50, f139, f30, f220, f262, f278, f33, f34, f24, f270, f218, f203, f40, f176, f225, f179, f275, f244, f137, f234, f87, f168, f69, f273, f183, f84, f28, f20, f31, f231, f204, f163, f140, f256, f133, f199, f289, f170, f0, f56, f113, f217, f263, f292, f55, f2, f274, f97, f15, f52, f201, f242, f130, f29, f148, f207, f116, f42, f233, f104, f83, f172, f240, f61, f112, f121, f181, f239, f6, f25, f222, f226, f261, f269, f49, f132, f248, f284, f14, f119, f80, f166, f78, f152, f44, f216, f72, f154, f102, f117, f91, f145, f142, f122, f75, f235, f39, f114, f95, f68, f167, f11, f71, f155, f200, f237, f194, f280, f57, f58, f214, f236, f276, f165, f96, f265, f5, f127, f131, f260, f17, f47, f279, f90, f188, f74, f88, f243, f41, f185, f251, f101, f257, f259, f135, f65, f158, f291, f286, f159, f9, f62, f26, f146, f115, f153, f177, f285, f197, f277, f8, f13, f125, f35, f282, f150, f67, f245, f129, f268, f255, f160, f22, f202, f227, f230, f76, f173, f247, f136, f18, f12, f151, f193, f249, f156, f271, f195, f264, f223, f250, f283, f293, f105, f19, f205, f211, f224, f73, f196, f246, f109, f123, f143, f124, f63, f144, f37, f210, f187, f219, f215, f192, f184, f171, f232, f212, f221, f98, f238, f43, f53, f138, f287, f70, f85, f3, f107\r\n```\r\n\r\n## Possible fix\r\n\r\n[not necessary, but suggest fixes or reasons for the bug]\r\n\r\n## `name of issue` screenshot\r\n\r\nTPOT version (using on python 3.5):\r\n```python\r\n---\r\nMetadata-Version: 2.0\r\nName: TPOT\r\nVersion: 0.9.5\r\nSummary: Tree-based Pipeline Optimization Tool\r\nHome-page: https://github.com/EpistasisLab/tpot\r\nAuthor: Randal S. Olson\r\nAuthor-email: rso@randalolson.com\r\nInstaller: pip\r\nLicense: GNU/LGPLv3\r\nLocation: /usr/local/lib/python3.5/dist-packages\r\nRequires: scikit-learn, tqdm, pandas, numpy, stopit, update-checker, deap, scipy\r\nClassifiers:\r\n  Intended Audience :: Science/Research\r\n  License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)\r\n  Programming Language :: Python :: 2\r\n  Programming Language :: Python :: 2.7\r\n  Programming Language :: Python :: 3\r\n  Programming Language :: Python :: 3.4\r\n  Programming Language :: Python :: 3.5\r\n  Programming Language :: Python :: 3.6\r\n  Topic :: Scientific/Engineering :: Artificial Intelligence\r\nEntry-points:\r\n  [console_scripts]\r\n  tpot = tpot:main\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/851", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/851/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/851/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/851", "id": 428625719, "node_id": "MDU6SXNzdWU0Mjg2MjU3MTk=", "number": 851, "title": "Pywin32 requested for Anaconda distribution", "user": {"login": "MatteoFelici", "id": 9342729, "node_id": "MDQ6VXNlcjkzNDI3Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9342729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatteoFelici", "html_url": "https://github.com/MatteoFelici", "followers_url": "https://api.github.com/users/MatteoFelici/followers", "following_url": "https://api.github.com/users/MatteoFelici/following{/other_user}", "gists_url": "https://api.github.com/users/MatteoFelici/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatteoFelici/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatteoFelici/subscriptions", "organizations_url": "https://api.github.com/users/MatteoFelici/orgs", "repos_url": "https://api.github.com/users/MatteoFelici/repos", "events_url": "https://api.github.com/users/MatteoFelici/events{/privacy}", "received_events_url": "https://api.github.com/users/MatteoFelici/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328854484, "node_id": "MDU6TGFiZWwzMjg4NTQ0ODQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/being%20worked%20on", "name": "being worked on", "color": "eb6420", "default": false, "description": null}, {"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-03T08:17:10Z", "updated_at": "2019-11-05T21:23:40Z", "closed_at": "2019-11-05T21:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've installed tpot as suggested from the documentation. I skipped the pywin32 installation since I'm using an Anaconda environment (on Windows). But when I try\r\n\r\n`import tpot`\r\n\r\nit raises the error\r\n\r\n`ModuleNotFoundError: No module named 'win32api'`\r\n\r\nI manage to fix the error by installing pywin32 as suggested for the non-Anaconda users.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/848", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/848/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/848/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/848/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/848", "id": 421258841, "node_id": "MDU6SXNzdWU0MjEyNTg4NDE=", "number": 848, "title": "Question: How to report multiple scoring metrics after fitting", "user": {"login": "sskaye", "id": 5460542, "node_id": "MDQ6VXNlcjU0NjA1NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5460542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sskaye", "html_url": "https://github.com/sskaye", "followers_url": "https://api.github.com/users/sskaye/followers", "following_url": "https://api.github.com/users/sskaye/following{/other_user}", "gists_url": "https://api.github.com/users/sskaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/sskaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sskaye/subscriptions", "organizations_url": "https://api.github.com/users/sskaye/orgs", "repos_url": "https://api.github.com/users/sskaye/repos", "events_url": "https://api.github.com/users/sskaye/events{/privacy}", "received_events_url": "https://api.github.com/users/sskaye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818167, "node_id": "MDU6TGFiZWwyODE4MTgxNjc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T21:45:34Z", "updated_at": "2019-03-15T14:54:14Z", "closed_at": "2019-03-15T14:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After fitting TPOT to the training data, I'd like to print the scores for multiple scoring functions, not just the one used to optimize the pipeline.\r\n\r\nIs there a way to do this?\r\n\r\nFor example, I fit a regression pipeline using training data and scoring = neg. mean squared error, then output the score for test data using neg. mean square error and r2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/846", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/846/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/846/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/846", "id": 420107304, "node_id": "MDU6SXNzdWU0MjAxMDczMDQ=", "number": 846, "title": "tpot crashes when entering negative numbers in n_jobs", "user": {"login": "omarcr", "id": 6231285, "node_id": "MDQ6VXNlcjYyMzEyODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6231285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omarcr", "html_url": "https://github.com/omarcr", "followers_url": "https://api.github.com/users/omarcr/followers", "following_url": "https://api.github.com/users/omarcr/following{/other_user}", "gists_url": "https://api.github.com/users/omarcr/gists{/gist_id}", "starred_url": "https://api.github.com/users/omarcr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omarcr/subscriptions", "organizations_url": "https://api.github.com/users/omarcr/orgs", "repos_url": "https://api.github.com/users/omarcr/repos", "events_url": "https://api.github.com/users/omarcr/events{/privacy}", "received_events_url": "https://api.github.com/users/omarcr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-12T17:13:47Z", "updated_at": "2019-04-12T14:49:37Z", "closed_at": "2019-04-12T14:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I want to set more negative numbers than -1 the tpop pipeline returns the following:\r\n\r\n```\r\n\r\nOptimization Progress:   0%|          | 0/3030 [00:00<?, ?pipeline/s]\r\n                                                                     \r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\base.py\", line 646, in fit\r\n    per_generation_function=self._check_periodic_pipeline\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\gp_deap.py\", line 227, in eaMuPlusLambda\r\n    population = toolbox.evaluate(population)\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\base.py\", line 1277, in _evaluate_individuals\r\n    ind.fitness.values = (self.evaluated_individuals_[ind_str]['operator_count'],\r\nKeyError: 'KNeighborsClassifier(input_matrix, KNeighborsClassifier__n_neighbors=62, KNeighborsClassifier__p=2, KNeighborsClassifier__weights=distance)'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3291, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-474670f1801d>\", line 1, in <module>\r\n    runfile('C:/Users/Omar/OneDrive - Massachusetts Institute of Technology/decoding/2019 for motion color modelling/tpot_optima.py', wdir='C:/Users/Omar/OneDrive - Massachusetts Institute of Technology/decoding/2019 for motion color modelling')\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.3.5\\helpers\\pydev\\_pydev_bundle\\pydev_umd.py\", line 197, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.3.5\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"C:/Users/Omar/OneDrive - Massachusetts Institute of Technology/decoding/2019 for motion color modelling/tpot_optima.py\", line 171, in <module>\r\n    pipeline_optimizer.fit(X_train, y_train)\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\base.py\", line 678, in fit\r\n    raise e\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\base.py\", line 669, in fit\r\n    self._update_top_pipeline()\r\n  File \"C:\\Users\\Omar\\AppData\\Local\\conda\\conda\\envs\\tensor19\\lib\\site-packages\\tpot\\base.py\", line 743, in _update_top_pipeline\r\n    raise RuntimeError('A pipeline has not yet been optimized. Please call fit() first.')\r\nRuntimeError: A pipeline has not yet been optimized. Please call fit() first.\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/845", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/845/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/845/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/845", "id": 420074749, "node_id": "MDU6SXNzdWU0MjAwNzQ3NDk=", "number": 845, "title": "pass a custom classifier_config_dict ", "user": {"login": "omarcr", "id": 6231285, "node_id": "MDQ6VXNlcjYyMzEyODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6231285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omarcr", "html_url": "https://github.com/omarcr", "followers_url": "https://api.github.com/users/omarcr/followers", "following_url": "https://api.github.com/users/omarcr/following{/other_user}", "gists_url": "https://api.github.com/users/omarcr/gists{/gist_id}", "starred_url": "https://api.github.com/users/omarcr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omarcr/subscriptions", "organizations_url": "https://api.github.com/users/omarcr/orgs", "repos_url": "https://api.github.com/users/omarcr/repos", "events_url": "https://api.github.com/users/omarcr/events{/privacy}", "received_events_url": "https://api.github.com/users/omarcr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T16:11:25Z", "updated_at": "2019-03-12T16:15:29Z", "closed_at": "2019-03-12T16:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to pass my own version of  classifier_config_dict in:\r\n\r\n```\r\nclass TPOTClassifier(TPOTBase):\r\n    \"\"\"TPOT estimator for classification problems.\"\"\"\r\n\r\n    scoring_function = 'accuracy'  # Classification scoring\r\n    default_config_dict = classifier_config_dict  # Classification dictionary\r\n    classification = True\r\n    regression = False\r\n```\r\n\r\n\r\ncan I pass it without modifying the internal API?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/844", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/844/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/844/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/844", "id": 418203065, "node_id": "MDU6SXNzdWU0MTgyMDMwNjU=", "number": 844, "title": "Plotting DBSCAN clustering results of a leveinshtein similarity matrix", "user": {"login": "lamin3", "id": 46441713, "node_id": "MDQ6VXNlcjQ2NDQxNzEz", "avatar_url": "https://avatars3.githubusercontent.com/u/46441713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lamin3", "html_url": "https://github.com/lamin3", "followers_url": "https://api.github.com/users/lamin3/followers", "following_url": "https://api.github.com/users/lamin3/following{/other_user}", "gists_url": "https://api.github.com/users/lamin3/gists{/gist_id}", "starred_url": "https://api.github.com/users/lamin3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lamin3/subscriptions", "organizations_url": "https://api.github.com/users/lamin3/orgs", "repos_url": "https://api.github.com/users/lamin3/repos", "events_url": "https://api.github.com/users/lamin3/events{/privacy}", "received_events_url": "https://api.github.com/users/lamin3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-07T09:16:12Z", "updated_at": "2019-03-28T13:09:29Z", "closed_at": "2019-03-28T13:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n I have a leveinshtein similarity matrix with 13600x13600 samples. I used DBSCAN to cluster this dataset. I got results, but I want to plot these clusters.\r\n\r\n After some googling, I see that this problem could be solved by firstly getting the coordinates of the similarity matrix I have, and then when done, just plot the coordinates with their labels (each unique label is coloured differently of course).\r\n\r\n Most of answers recommend to use MDS for such situation. So, I test it, but it seems that it's very very costly (the process tends to terminate with \"Memory error\").\r\n\r\n So, my questions/discussions are:\r\n\r\n1 - Is there another way/approach to plot the clustering results of my leveinshtein similarity matrix, rather then getting first their coordinates then plot them in a 2D plan with their coloured clustering results labels ?\r\n2 - Instead of MDS, Is there another algorithm to do the job of finding coordinates of a similarity matrix  ? I'm aware that PCA works on reducing the dimensionality of the features, but in my case I've only the similarity matrix, not the features.\r\n3 - Is there an optmized version of MDS for my 13kx13k dataset ?\r\n4 - Also, is MDS working only on a euclidean distance matrix ? I mean is it working properly for my leveinshtein distance matrix ?\r\n\r\nThanks in advance for your help,\r\n\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/EpistasisLab/tpot/issues/838", "repository_url": "https://api.github.com/repos/EpistasisLab/tpot", "labels_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/838/labels{/name}", "comments_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/838/comments", "events_url": "https://api.github.com/repos/EpistasisLab/tpot/issues/838/events", "html_url": "https://github.com/EpistasisLab/tpot/issues/838", "id": 413410376, "node_id": "MDU6SXNzdWU0MTM0MTAzNzY=", "number": 838, "title": "data filename could be provided when exporting", "user": {"login": "sergiolucero", "id": 7134649, "node_id": "MDQ6VXNlcjcxMzQ2NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7134649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiolucero", "html_url": "https://github.com/sergiolucero", "followers_url": "https://api.github.com/users/sergiolucero/followers", "following_url": "https://api.github.com/users/sergiolucero/following{/other_user}", "gists_url": "https://api.github.com/users/sergiolucero/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiolucero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiolucero/subscriptions", "organizations_url": "https://api.github.com/users/sergiolucero/orgs", "repos_url": "https://api.github.com/users/sergiolucero/repos", "events_url": "https://api.github.com/users/sergiolucero/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiolucero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 328853077, "node_id": "MDU6TGFiZWwzMjg4NTMwNzc=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/easy", "name": "easy", "color": "bfe5bf", "default": false, "description": null}, {"id": 281818164, "node_id": "MDU6TGFiZWwyODE4MTgxNjQ=", "url": "https://api.github.com/repos/EpistasisLab/tpot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-22T13:45:50Z", "updated_at": "2019-11-05T21:24:51Z", "closed_at": "2019-11-05T21:24:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is always a bit of a pain in the neck to have to replace 'PATH/TO/DATA/FILE' with the actual name when exporting, and usually this is a known variable. Also, separator and dtype could be replaced by something like \"cols=['...']\".\r\n\r\nAdding data_filename to export in base.py (and then to export_pipeline in export_utils) is trivial. The other options could be discussed.", "performed_via_github_app": null, "score": 1.0}]}