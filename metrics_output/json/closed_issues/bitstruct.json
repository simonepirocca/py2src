{"total_count": 13, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/18", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/18/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/18/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/18", "id": 597323803, "node_id": "MDU6SXNzdWU1OTczMjM4MDM=", "number": 18, "title": "Pypy - Bitstruct C Extension compile error", "user": {"login": "richnetdesign", "id": 916491, "node_id": "MDQ6VXNlcjkxNjQ5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/916491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richnetdesign", "html_url": "https://github.com/richnetdesign", "followers_url": "https://api.github.com/users/richnetdesign/followers", "following_url": "https://api.github.com/users/richnetdesign/following{/other_user}", "gists_url": "https://api.github.com/users/richnetdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/richnetdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richnetdesign/subscriptions", "organizations_url": "https://api.github.com/users/richnetdesign/orgs", "repos_url": "https://api.github.com/users/richnetdesign/repos", "events_url": "https://api.github.com/users/richnetdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/richnetdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-09T14:29:34Z", "updated_at": "2020-04-15T20:29:04Z", "closed_at": "2020-04-15T20:29:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking to use Pypy to test performance / compatibility.  Validate claims of 4x average performance improvement over CPython.  Howevev, I got a bitstruct c extension compile error.  It doesn't look too complicated, so wanted to document so myself, or yourself could see if fixable.\r\n\r\nThe version I used is below\r\n- https://bitbucket.org/pypy/pypy/downloads/pypy3.6-v7.3.0-linux64.tar.bz2\r\n- https://www.pypy.org/download.html#id33\r\n\r\nTo reproduce i did the following\r\n```\r\npypy -m ensurepip\r\npypy -m pip install bitstruct\r\n```\r\n\r\nThe following is the C extension error I got.\r\n```\r\nRunning bitstruct-8.9.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-obznzsas/bitstruct-8.9.0/egg-dist-tmp-wvv9y33r\r\n\r\nbitstruct/c.c: In function \u2018pack_float_16\u2019:\r\n\r\nbitstruct/c.c:155:5: warning: implicit declaration of function \u2018_PyFloat_Pack2\u2019; did you mean \u2018PyFloat_Check\u2019? [-Wimplicit-function-declaration]\r\n\r\n     _PyFloat_Pack2(PyFloat_AsDouble(value_p),\r\n\r\n     ^~~~~~~~~~~~~~\r\n\r\n     PyFloat_Check\r\n\r\nbitstruct/c.c:157:20: error: \u2018PY_BIG_ENDIAN\u2019 undeclared (first use in this function); did you mean \u2018BIG_ENDIAN\u2019?\r\n\r\n                    PY_BIG_ENDIAN);\r\n\r\n                    ^~~~~~~~~~~~~\r\n\r\n                    BIG_ENDIAN\r\n\r\nbitstruct/c.c:157:20: note: each undeclared identifier is reported only once for each function it appears in\r\n\r\nbitstruct/c.c: In function \u2018unpack_float_16\u2019:\r\n\r\nbitstruct/c.c:168:13: warning: implicit declaration of function \u2018_PyFloat_Unpack2\u2019; did you mean \u2018_PyPyFloat_Unpack8\u2019? [-Wimplicit-function-declaration]\r\n\r\n     value = _PyFloat_Unpack2(&buf[0], PY_BIG_ENDIAN);\r\n\r\n             ^~~~~~~~~~~~~~~~\r\n\r\n             _PyPyFloat_Unpack8\r\n\r\nbitstruct/c.c:168:39: error: \u2018PY_BIG_ENDIAN\u2019 undeclared (first use in this function); did you mean \u2018BIG_ENDIAN\u2019?\r\n\r\n     value = _PyFloat_Unpack2(&buf[0], PY_BIG_ENDIAN);\r\n\r\n                                       ^~~~~~~~~~~~~\r\n\r\n                                       BIG_ENDIAN\r\n\r\nWARNING: Failed to build the C extension.\r\n\r\nzip_safe flag not set; analyzing archive contents...\r\n\r\nMoving bitstruct-8.9.0-py3.6.egg to /opt/pypy3.6-v7.3.0-linux64/site-packages\r\n\r\nAdding bitstruct 8.9.0 to easy-install.pth file\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/15", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/15/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/15/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/15", "id": 502889574, "node_id": "MDU6SXNzdWU1MDI4ODk1NzQ=", "number": 15, "title": "C implementation doesn't seem to support a single space to separate groups", "user": {"login": "thebigmunch", "id": 118418, "node_id": "MDQ6VXNlcjExODQxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/118418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebigmunch", "html_url": "https://github.com/thebigmunch", "followers_url": "https://api.github.com/users/thebigmunch/followers", "following_url": "https://api.github.com/users/thebigmunch/following{/other_user}", "gists_url": "https://api.github.com/users/thebigmunch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebigmunch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebigmunch/subscriptions", "organizations_url": "https://api.github.com/users/thebigmunch/orgs", "repos_url": "https://api.github.com/users/thebigmunch/repos", "events_url": "https://api.github.com/users/thebigmunch/events{/privacy}", "received_events_url": "https://api.github.com/users/thebigmunch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-05T00:06:25Z", "updated_at": "2019-10-09T21:14:19Z", "closed_at": "2019-10-09T21:14:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This results in ``ValueError: Bad format field type ' '.``.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/14", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/14/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/14/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/14", "id": 493613991, "node_id": "MDU6SXNzdWU0OTM2MTM5OTE=", "number": 14, "title": "raw format on incomplete bytes", "user": {"login": "qchateau", "id": 1497628, "node_id": "MDQ6VXNlcjE0OTc2Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1497628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qchateau", "html_url": "https://github.com/qchateau", "followers_url": "https://api.github.com/users/qchateau/followers", "following_url": "https://api.github.com/users/qchateau/following{/other_user}", "gists_url": "https://api.github.com/users/qchateau/gists{/gist_id}", "starred_url": "https://api.github.com/users/qchateau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qchateau/subscriptions", "organizations_url": "https://api.github.com/users/qchateau/orgs", "repos_url": "https://api.github.com/users/qchateau/repos", "events_url": "https://api.github.com/users/qchateau/events{/privacy}", "received_events_url": "https://api.github.com/users/qchateau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-14T11:33:47Z", "updated_at": "2019-09-19T06:58:37Z", "closed_at": "2019-09-19T06:58:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\nimport bitstruct\r\nprint(bitstruct.unpack(\">r4>\", b\"\\xff\")[0].hex())\r\nprint(bitstruct.unpack(\"<r4<\", b\"\\xff\")[0].hex())\r\nprint(bitstruct.unpack(\">r4<\", b\"\\xff\")[0].hex())\r\nprint(bitstruct.unpack(\"<r4>\", b\"\\xff\")[0].hex())\r\n```\r\noutputs\r\n```\r\nf0\r\nf0\r\nf0\r\nf0\r\n```\r\n\r\n\r\nI would expect\r\n```\r\n0f\r\n0f\r\n0f\r\n0f\r\n```\r\n\r\nIs it a corner case or is there a rationale for this behavior ?\r\nIn any case, I don't think this is documented, or did I miss something ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/13", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/13/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/13/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/13", "id": 417517788, "node_id": "MDU6SXNzdWU0MTc1MTc3ODg=", "number": 13, "title": "Emulating C bitfield structures using bitstruct", "user": {"login": "mleroy003", "id": 33390184, "node_id": "MDQ6VXNlcjMzMzkwMTg0", "avatar_url": "https://avatars0.githubusercontent.com/u/33390184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mleroy003", "html_url": "https://github.com/mleroy003", "followers_url": "https://api.github.com/users/mleroy003/followers", "following_url": "https://api.github.com/users/mleroy003/following{/other_user}", "gists_url": "https://api.github.com/users/mleroy003/gists{/gist_id}", "starred_url": "https://api.github.com/users/mleroy003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mleroy003/subscriptions", "organizations_url": "https://api.github.com/users/mleroy003/orgs", "repos_url": "https://api.github.com/users/mleroy003/repos", "events_url": "https://api.github.com/users/mleroy003/events{/privacy}", "received_events_url": "https://api.github.com/users/mleroy003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-05T21:50:37Z", "updated_at": "2019-03-11T13:51:11Z", "closed_at": "2019-03-11T13:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to generate memory layout of big-endian and little-endian C structures using bitstruct.\r\n\r\nFor example, to emulate this structure : \r\ntypedef struct {\r\n\tuint32_t\ta:28;\r\n\tuint32_t\tb:4;\r\n} MyStruct;\r\n\r\n\r\nIt is ok for big-endian structures, it is consistent with the byte stream consistent with the ABI of big endian processors (SPARC, PowerPC, ...) : \r\n\r\nimport bitstruct\r\nMyStructFmt = '>u28u4>'\r\ns1_packed = bitstruct.pack(MyStructFmt, 0x1234567, 0x8 )\r\nprint('b\\'',''.join('{:02x}'.format(letter) for letter in s1_packed), sep='', end='\\'\\n')\r\nb'12345678'\r\n\r\nBut trying to emulate a little endian processor like AMD64 fails : \r\n\r\nMyStructFmt = '>u28u4<'\r\ns1_packed = bitstruct.pack(MyStructFmt, 0x1234567, 0x8 )\r\nprint('b\\'',''.join('{:02x}'.format(letter) for letter in s1_packed), sep='', end='\\'\\n')\r\nb'674523**18**'\r\n\r\nbecause b'674523**81**' is expected instead ...\r\n\r\nAny idea ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/12", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/12/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/12/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/12", "id": 396221666, "node_id": "MDU6SXNzdWUzOTYyMjE2NjY=", "number": 12, "title": "bitstruct \"<u32\" != struct \"<I\"", "user": {"login": "gil9red", "id": 6244078, "node_id": "MDQ6VXNlcjYyNDQwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6244078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gil9red", "html_url": "https://github.com/gil9red", "followers_url": "https://api.github.com/users/gil9red/followers", "following_url": "https://api.github.com/users/gil9red/following{/other_user}", "gists_url": "https://api.github.com/users/gil9red/gists{/gist_id}", "starred_url": "https://api.github.com/users/gil9red/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gil9red/subscriptions", "organizations_url": "https://api.github.com/users/gil9red/orgs", "repos_url": "https://api.github.com/users/gil9red/repos", "events_url": "https://api.github.com/users/gil9red/events{/privacy}", "received_events_url": "https://api.github.com/users/gil9red/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-06T02:34:30Z", "updated_at": "2019-01-06T20:41:08Z", "closed_at": "2019-01-06T20:41:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport bitstruct\r\nimport struct\r\n\r\ndata = b'(\\x00\\x00\\x00'\r\nprint(struct.unpack('<I', data)[0])       # 40\r\nprint(struct.unpack('>I', data)[0])       # 671088640\r\n\r\nprint(bitstruct.unpack('<u32', data)[0])  # 20\r\nprint(bitstruct.unpack('>u32', data)[0])  # 671088640\r\n\r\nb = ''.join(bin(b)[2:].zfill(8) for b in data)[::-1]\r\nprint(b)                      # 00000000000000000000000000010100\r\nprint()\r\nprint(bin(20)[2:].zfill(32))  # 00000000000000000000000000010100\r\nprint(bin(40)[2:].zfill(32))  # 00000000000000000000000000101000\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/11", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/11/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/11/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/11", "id": 352917226, "node_id": "MDU6SXNzdWUzNTI5MTcyMjY=", "number": 11, "title": "Wrong behaviour when integer size exceeds packing format size", "user": {"login": "henzef", "id": 32638720, "node_id": "MDQ6VXNlcjMyNjM4NzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/32638720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henzef", "html_url": "https://github.com/henzef", "followers_url": "https://api.github.com/users/henzef/followers", "following_url": "https://api.github.com/users/henzef/following{/other_user}", "gists_url": "https://api.github.com/users/henzef/gists{/gist_id}", "starred_url": "https://api.github.com/users/henzef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henzef/subscriptions", "organizations_url": "https://api.github.com/users/henzef/orgs", "repos_url": "https://api.github.com/users/henzef/repos", "events_url": "https://api.github.com/users/henzef/events{/privacy}", "received_events_url": "https://api.github.com/users/henzef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204287300, "node_id": "MDU6TGFiZWwyMDQyODczMDA=", "url": "https://api.github.com/repos/eerimoq/bitstruct/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-22T11:46:32Z", "updated_at": "2018-09-09T14:22:52Z", "closed_at": "2018-09-09T14:22:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See the example code:\r\n\r\n    >>> a = bitstruct.compile(\">u8<\")\r\n    >>> a.pack(255)\r\n    b'\\xff'\r\n    >>> a.pack(256)\r\n    b'\\x00\\x00'\r\n    >>> a.pack(257)\r\n    b'\\x01\\x00'\r\n    >>> a.pack(12313521321321321)\r\n    b'i\\xa4J\\x18\\x15\\xbfX'\r\n\r\nI would have expected bitstruct to behave like the struct module in such a case:\r\n\r\n    >>> import struct\r\n    >>> struct.pack(\"b\", 8)\r\n    b'\\x08'\r\n    >>> struct.pack(\"b\", 256)\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n    struct.error: byte format requires -128 <= number <= 127\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/9", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/9/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/9/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/9", "id": 317595333, "node_id": "MDU6SXNzdWUzMTc1OTUzMzM=", "number": 9, "title": "Please add a pack_into() function", "user": {"login": "henzef", "id": 32638720, "node_id": "MDQ6VXNlcjMyNjM4NzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/32638720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henzef", "html_url": "https://github.com/henzef", "followers_url": "https://api.github.com/users/henzef/followers", "following_url": "https://api.github.com/users/henzef/following{/other_user}", "gists_url": "https://api.github.com/users/henzef/gists{/gist_id}", "starred_url": "https://api.github.com/users/henzef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henzef/subscriptions", "organizations_url": "https://api.github.com/users/henzef/orgs", "repos_url": "https://api.github.com/users/henzef/repos", "events_url": "https://api.github.com/users/henzef/events{/privacy}", "received_events_url": "https://api.github.com/users/henzef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-25T11:54:51Z", "updated_at": "2018-04-30T17:49:36Z", "closed_at": "2018-04-30T17:49:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The standard libary module \"struct\" has a handy .pack_into() function (see [https://docs.python.org/3/library/struct.html?highlight=pack_into#functions-and-exceptions](https://docs.python.org/3/library/struct.html?highlight=pack_into#functions-and-exceptions). This is usefull when modifying existing buffers with lots of dont-care fields (aka padding) that should be preserved.\r\n\r\nPlease add such a function to bitstruct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/7", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/7/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/7/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/7", "id": 265066472, "node_id": "MDU6SXNzdWUyNjUwNjY0NzI=", "number": 7, "title": "Speedup using fixed format strings", "user": {"login": "ntolazzi", "id": 14801835, "node_id": "MDQ6VXNlcjE0ODAxODM1", "avatar_url": "https://avatars2.githubusercontent.com/u/14801835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntolazzi", "html_url": "https://github.com/ntolazzi", "followers_url": "https://api.github.com/users/ntolazzi/followers", "following_url": "https://api.github.com/users/ntolazzi/following{/other_user}", "gists_url": "https://api.github.com/users/ntolazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntolazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntolazzi/subscriptions", "organizations_url": "https://api.github.com/users/ntolazzi/orgs", "repos_url": "https://api.github.com/users/ntolazzi/repos", "events_url": "https://api.github.com/users/ntolazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/ntolazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-12T19:59:03Z", "updated_at": "2017-10-14T08:05:45Z", "closed_at": "2017-10-14T08:05:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Imagine we want to use bitstruct for a very large amount of data that we want to process and convert to python types. This would involve many (in my case on the order of 1e9) calls to unpack and/or pack function. In this function it alsways parses the fmt string. I would propose to put these functions into a class and therefore give the ability to store i.e. the result of the fmt string parsing for subsequent calls with new data. This would definitely save quite some time.\r\n\r\nIf you agree with this idea to change it into a class maybe to allow a more stateful approach, I would try to do it and make a PR.\r\n\r\nBest,\r\nntolazzi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/6", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/6/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/6/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/6", "id": 265064757, "node_id": "MDU6SXNzdWUyNjUwNjQ3NTc=", "number": 6, "title": "Speedup using bitmasks instead of string operations", "user": {"login": "ntolazzi", "id": 14801835, "node_id": "MDQ6VXNlcjE0ODAxODM1", "avatar_url": "https://avatars2.githubusercontent.com/u/14801835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntolazzi", "html_url": "https://github.com/ntolazzi", "followers_url": "https://api.github.com/users/ntolazzi/followers", "following_url": "https://api.github.com/users/ntolazzi/following{/other_user}", "gists_url": "https://api.github.com/users/ntolazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntolazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntolazzi/subscriptions", "organizations_url": "https://api.github.com/users/ntolazzi/orgs", "repos_url": "https://api.github.com/users/ntolazzi/repos", "events_url": "https://api.github.com/users/ntolazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/ntolazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-10-12T19:52:51Z", "updated_at": "2017-10-20T09:34:53Z", "closed_at": "2017-10-20T09:34:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I really enjoy your package but unfortunately I had to use my self written bitmask based approach for my own project because bitstruct was not fast enough for the amount of data that I have.\r\nThe thing that takes most time are the string operations like\r\n\r\n` bits = ''.join(['{:08b}'.format(b) for b in bytearray(data)])`\r\n\r\nBut it's not necessary to do all the string operations, they make the rest of the code slightly easier to read but the library should work also solely based on bitmasks. Below is an example of what I mean:\r\n \r\n```\r\n    data = struct.unpack('>i', bytestring)[0]\r\n    quad1 = data & 0x3fff\r\n    quad2 = (data & 0xfffc000) >> 14\r\n    if (quad2 & (1 << (14 - 1))) != 0:\r\n        quad2 = quad2 - (1 << 14)\r\n    bool0 = data & 2**31\r\n    bool1 = data & 2**30\r\n    bool2 = data & 2**29\r\n    bool3 = data & 2**28\r\n```\r\n\r\nI first used bitstruct for this piece of code but when I replaced it with bitmasks it got faster by a factor of 6.\r\n\r\nJust saying that it might be worth a try to realize the same funtionality of bitstruct via bitmasks.\r\n\r\nBest,\r\nntolazzi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/5", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/5/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/5/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/5", "id": 143132002, "node_id": "MDU6SXNzdWUxNDMxMzIwMDI=", "number": 5, "title": "test fails: AssertionError", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-24T02:45:46Z", "updated_at": "2016-03-24T09:24:51Z", "closed_at": "2016-03-24T08:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n======================================================================\nFAIL: test_endianness (tests.test_bitstruct.BitStructTest)\nTest pack/unpack with endianness information in the format string.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/brian/tree/debian/tmp/bitstruct-2.0.2/tests/test_bitstruct.py\", line 151, in test_endianness\n    self.assertEqual(packed, ref)\nAssertionError: bytearray(b'\\x02F\\x9a\\xfe\\x00\\x00\\x00') != ',H\\x0c\\x00\\x00\\x07\\xf4'\n\n----------------------------------------------------------------------\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/4", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/4/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/4/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/4", "id": 143131666, "node_id": "MDU6SXNzdWUxNDMxMzE2NjY=", "number": 4, "title": "missing files from pypi distribution", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204287300, "node_id": "MDU6TGFiZWwyMDQyODczMDA=", "url": "https://api.github.com/repos/eerimoq/bitstruct/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-24T02:42:21Z", "updated_at": "2016-03-24T08:50:56Z", "closed_at": "2016-03-24T06:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nA number of files are missing from the PyPI distribution, such as the tests, the license file, etc.\n\nCan this please be fixed?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/3", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/3/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/3/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/3", "id": 125315672, "node_id": "MDU6SXNzdWUxMjUzMTU2NzI=", "number": 3, "title": "Allow 'compiled' formats for unpack()", "user": {"login": "altendky", "id": 543719, "node_id": "MDQ6VXNlcjU0MzcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/543719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altendky", "html_url": "https://github.com/altendky", "followers_url": "https://api.github.com/users/altendky/followers", "following_url": "https://api.github.com/users/altendky/following{/other_user}", "gists_url": "https://api.github.com/users/altendky/gists{/gist_id}", "starred_url": "https://api.github.com/users/altendky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altendky/subscriptions", "organizations_url": "https://api.github.com/users/altendky/orgs", "repos_url": "https://api.github.com/users/altendky/repos", "events_url": "https://api.github.com/users/altendky/events{/privacy}", "received_events_url": "https://api.github.com/users/altendky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204287300, "node_id": "MDU6TGFiZWwyMDQyODczMDA=", "url": "https://api.github.com/repos/eerimoq/bitstruct/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 204287301, "node_id": "MDU6TGFiZWwyMDQyODczMDE=", "url": "https://api.github.com/repos/eerimoq/bitstruct/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-07T03:36:18Z", "updated_at": "2016-08-28T14:43:31Z", "closed_at": "2016-08-28T14:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am going through and improving the performance of my applicaiton including a little bit of looking around at the libraries I'm using.  Since you expressed interest in better performance I thought I'd share this minor tweak I made to allow 'compiled' formats like the `re` module.  https://github.com/altendky/bitstruct/commit/53fd50cf42473bacc49be308eae16536a93d1a1a  It's probably not the cleanest just using the `list` check like that but a little extra work for a `CompiledFormat` class would tidy that up.\n\nAnyways, thanks again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eerimoq/bitstruct/issues/1", "repository_url": "https://api.github.com/repos/eerimoq/bitstruct", "labels_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/1/comments", "events_url": "https://api.github.com/repos/eerimoq/bitstruct/issues/1/events", "html_url": "https://github.com/eerimoq/bitstruct/issues/1", "id": 118227111, "node_id": "MDU6SXNzdWUxMTgyMjcxMTE=", "number": 1, "title": "Handling endianness of individual values when unpacking", "user": {"login": "altendky", "id": 543719, "node_id": "MDQ6VXNlcjU0MzcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/543719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altendky", "html_url": "https://github.com/altendky", "followers_url": "https://api.github.com/users/altendky/followers", "following_url": "https://api.github.com/users/altendky/following{/other_user}", "gists_url": "https://api.github.com/users/altendky/gists{/gist_id}", "starred_url": "https://api.github.com/users/altendky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altendky/subscriptions", "organizations_url": "https://api.github.com/users/altendky/orgs", "repos_url": "https://api.github.com/users/altendky/repos", "events_url": "https://api.github.com/users/altendky/events{/privacy}", "received_events_url": "https://api.github.com/users/altendky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204287300, "node_id": "MDU6TGFiZWwyMDQyODczMDA=", "url": "https://api.github.com/repos/eerimoq/bitstruct/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-11-21T23:21:07Z", "updated_at": "2015-12-22T12:46:36Z", "closed_at": "2015-12-21T16:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "As every open source query should start...  thank you!  Bit (un)packing has always been something that annoyed me to have to recode each time I needed it and this helps alleviate that.\n\nOne piece that seems like it may be missing (unless I haven't through through `byteswap()` well enough) is endianness awareness when unpacking the data.  `struct` allows for endianness control via `<` and `>` in the format string but it appears that is not present in `bitstruct`.  Am I missing it?  If not, would you be interested in this feature if I developed it?\n\nIt seems to me that, for signed integers, the sign extension and byte-order correction would need to occur prior to the `int()` conversion.\n\nThanks for any thoughts you have on this.\n", "performed_via_github_app": null, "score": 1.0}]}