{"total_count": 303, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/wtforms/wtforms/issues/644", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/644/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/644/events", "html_url": "https://github.com/wtforms/wtforms/issues/644", "id": 677753334, "node_id": "MDU6SXNzdWU2Nzc3NTMzMzQ=", "number": 644, "title": "SelectField choices can no longer be set to `dict_values` as they are not indexable", "user": {"login": "jon-brenner", "id": 32843750, "node_id": "MDQ6VXNlcjMyODQzNzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/32843750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-brenner", "html_url": "https://github.com/jon-brenner", "followers_url": "https://api.github.com/users/jon-brenner/followers", "following_url": "https://api.github.com/users/jon-brenner/following{/other_user}", "gists_url": "https://api.github.com/users/jon-brenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-brenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-brenner/subscriptions", "organizations_url": "https://api.github.com/users/jon-brenner/orgs", "repos_url": "https://api.github.com/users/jon-brenner/repos", "events_url": "https://api.github.com/users/jon-brenner/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-brenner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-12T14:48:50Z", "updated_at": "2020-08-12T16:36:50Z", "closed_at": "2020-08-12T15:43:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This change breaks the ability to set `choices` on a SelectField to a `dict_values` object as they are not indexable:\r\nhttps://github.com/wtforms/wtforms/pull/526/files#diff-499875f3f88b585a74b57a09d789bbfcR525\r\n\r\n```\r\nfield = SelectField()\r\nchoices_dict = {'name1': ('v1', 'v2), 'name2': ('v3', 'v4')}\r\nfield.choices = choices_dict.values()\r\n```\r\n\r\nObviously this applies to any iterable type that is not indexable e.g. `dict_items`, `dict_keys`, etc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/641", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/641/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/641/events", "html_url": "https://github.com/wtforms/wtforms/issues/641", "id": 668573506, "node_id": "MDU6SXNzdWU2Njg1NzM1MDY=", "number": 641, "title": "WTForms 2.3.2 does not provide translated messages", "user": {"login": "zgoda", "id": 141999, "node_id": "MDQ6VXNlcjE0MTk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/141999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zgoda", "html_url": "https://github.com/zgoda", "followers_url": "https://api.github.com/users/zgoda/followers", "following_url": "https://api.github.com/users/zgoda/following{/other_user}", "gists_url": "https://api.github.com/users/zgoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/zgoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zgoda/subscriptions", "organizations_url": "https://api.github.com/users/zgoda/orgs", "repos_url": "https://api.github.com/users/zgoda/repos", "events_url": "https://api.github.com/users/zgoda/events{/privacy}", "received_events_url": "https://api.github.com/users/zgoda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-30T10:09:35Z", "updated_at": "2020-07-30T17:09:14Z", "closed_at": "2020-07-30T17:09:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\nWTForms 2.3.2\r\n\r\n![Zrzut ekranu z 2020-07-30 12-05-33](https://user-images.githubusercontent.com/141999/88910628-096ab100-d25d-11ea-9099-7069c16c3beb.png)\r\n\r\n### Expected Behavior\r\n\r\nWTForms 2.3.1\r\n\r\n![Zrzut ekranu z 2020-07-30 12-04-54](https://user-images.githubusercontent.com/141999/88910651-12f41900-d25d-11ea-9b37-852c0b386e6f.png)\r\n\r\n### Environment\r\n\r\n* Python version: 3.7.8\r\n* wtforms version: 2.3.2\r\n* Babel version: 2.8.0\r\n\r\nBabel is statically initialized with default locale 'pl'. Adding `locales` to base form's Meta has no impact.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/638", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/638/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/638/events", "html_url": "https://github.com/wtforms/wtforms/issues/638", "id": 667760576, "node_id": "MDU6SXNzdWU2Njc3NjA1NzY=", "number": 638, "title": "validate_on_submit() expects a tuple list for SelectField even though a normal list is a valid argument", "user": {"login": "hakanohi", "id": 51394064, "node_id": "MDQ6VXNlcjUxMzk0MDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/51394064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hakanohi", "html_url": "https://github.com/hakanohi", "followers_url": "https://api.github.com/users/hakanohi/followers", "following_url": "https://api.github.com/users/hakanohi/following{/other_user}", "gists_url": "https://api.github.com/users/hakanohi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hakanohi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hakanohi/subscriptions", "organizations_url": "https://api.github.com/users/hakanohi/orgs", "repos_url": "https://api.github.com/users/hakanohi/repos", "events_url": "https://api.github.com/users/hakanohi/events{/privacy}", "received_events_url": "https://api.github.com/users/hakanohi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-29T11:12:33Z", "updated_at": "2020-07-29T20:19:05Z", "closed_at": "2020-07-29T12:35:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n`form.validate on submit()` evaluates to `False` when `choices` in `SelectField` is a list of values only. The same form validation evaluates to  `True` when using `(value, label)` tuples as used with version 2.2.1\r\n```python\r\n\r\nclass RegistrationForm(FlaskForm):\r\n\r\n    language = SelectField('Language', choices=['python', 'ruby', 'rust'], validators=[DataRequired()])\r\n    submit = SubmitField('Submit')\r\n\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef index():\r\n    form = RegistrationForm()\r\n    if form.validate_on_submit():\r\n        return redirect(url_for('test'))\r\n    return render_template('index.html', form=form)\r\n```\r\nThe `SelectField()` is rendered properly in the HTML form and its value can be accessed with `form.language.data` but `form.validate_on_submit()` still evaluates to `False`.\r\n### Expected Behavior\r\n`form.validate on submit()` to evaluate to `True` when `choices` in `SelectField` is a list of values only as well.\r\n\r\n### Environment\r\n\r\n* Python version: 3.8.2\r\n* wtforms version: 2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/635", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/635/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/635/events", "html_url": "https://github.com/wtforms/wtforms/issues/635", "id": 659624780, "node_id": "MDU6SXNzdWU2NTk2MjQ3ODA=", "number": 635, "title": "WTForms should have a way to validate input presence, not only \"truthyness\".", "user": {"login": "davidmoseler", "id": 41010804, "node_id": "MDQ6VXNlcjQxMDEwODA0", "avatar_url": "https://avatars3.githubusercontent.com/u/41010804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmoseler", "html_url": "https://github.com/davidmoseler", "followers_url": "https://api.github.com/users/davidmoseler/followers", "following_url": "https://api.github.com/users/davidmoseler/following{/other_user}", "gists_url": "https://api.github.com/users/davidmoseler/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmoseler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmoseler/subscriptions", "organizations_url": "https://api.github.com/users/davidmoseler/orgs", "repos_url": "https://api.github.com/users/davidmoseler/repos", "events_url": "https://api.github.com/users/davidmoseler/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmoseler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T20:44:58Z", "updated_at": "2020-07-18T01:34:56Z", "closed_at": "2020-07-18T01:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "DataRequired, as explained in the docs, checks, basically, \"if field.data\". Another important validation, though, would be to check if the field exists at all. For example, for BooleanFields, \"DataRequired\" is misleading, because one would think it checks if either true or false was provided, but in fact it is checking if the true value was provided. But it is often necessary to validate that the boolean value for that field was provided, not validate the boolean value itself. Another example would be to check if a string was provided, regardless of it being empty or not. Looking at the built in validators, it seems no validator provides this basic functionality.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/634", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/634/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/634/events", "html_url": "https://github.com/wtforms/wtforms/issues/634", "id": 653425055, "node_id": "MDU6SXNzdWU2NTM0MjUwNTU=", "number": 634, "title": "FormField with a field called 'name' bug", "user": {"login": "imti101", "id": 35236075, "node_id": "MDQ6VXNlcjM1MjM2MDc1", "avatar_url": "https://avatars1.githubusercontent.com/u/35236075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imti101", "html_url": "https://github.com/imti101", "followers_url": "https://api.github.com/users/imti101/followers", "following_url": "https://api.github.com/users/imti101/following{/other_user}", "gists_url": "https://api.github.com/users/imti101/gists{/gist_id}", "starred_url": "https://api.github.com/users/imti101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imti101/subscriptions", "organizations_url": "https://api.github.com/users/imti101/orgs", "repos_url": "https://api.github.com/users/imti101/repos", "events_url": "https://api.github.com/users/imti101/events{/privacy}", "received_events_url": "https://api.github.com/users/imti101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T16:15:12Z", "updated_at": "2020-07-08T16:34:14Z", "closed_at": "2020-07-08T16:34:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\n# Paste a minimal piece of code that causes the problem. Here is an example:\r\n\r\n>>> import wtforms\r\n>>> class F(wtforms.Form):\r\n...         name = wtforms.StringField()\r\n...         id = wtforms.IntegerField()\r\n>>> f = wtforms.Fieldlist(wtforms.FormField(F))\r\n>>> print(f.name)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'str' object has no attribute 'name'\r\n```\r\n\r\n### Expected Behavior\r\n\r\n`StringField` object at ....\r\n\r\n### Environment\r\n\r\n* Python version: 3.7\r\n* wtforms version: 2.2.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/632", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/632/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/632/events", "html_url": "https://github.com/wtforms/wtforms/issues/632", "id": 651065552, "node_id": "MDU6SXNzdWU2NTEwNjU1NTI=", "number": 632, "title": "Custom Validator not Working", "user": {"login": "Govindkm", "id": 35376412, "node_id": "MDQ6VXNlcjM1Mzc2NDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/35376412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Govindkm", "html_url": "https://github.com/Govindkm", "followers_url": "https://api.github.com/users/Govindkm/followers", "following_url": "https://api.github.com/users/Govindkm/following{/other_user}", "gists_url": "https://api.github.com/users/Govindkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Govindkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Govindkm/subscriptions", "organizations_url": "https://api.github.com/users/Govindkm/orgs", "repos_url": "https://api.github.com/users/Govindkm/repos", "events_url": "https://api.github.com/users/Govindkm/events{/privacy}", "received_events_url": "https://api.github.com/users/Govindkm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T12:58:20Z", "updated_at": "2020-07-05T13:45:19Z", "closed_at": "2020-07-05T13:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\nclass RegisterForm(FlaskForm):\r\n    email = StringField(\"Email\", validators=[DataRequired(), Email()])\r\n    password = PasswordField(\"Password\", validators=[DataRequired(), Length(min=6, max=15)])\r\n    password_confirm = PasswordField(\"Confirm Password\", validators=[DataRequired(), Length(min=6, max=15), EqualTo('password')])\r\n    fname = StringField(\"First Name\", validators=[DataRequired()])\r\n    lname = StringField(\"Last Name\", validators=[DataRequired()])\r\n    submit = SubmitField(\"Register Now\")\r\n\r\n    def validate_email(self, field):\r\n        user = Users.objects(email=field.data).first()\r\n        if user:\r\n            return ValidationError(\"Email already in use. Please use another email.\")\r\n###error\r\nmongoengine.errors.NotUniqueError: Tried to save duplicate unique keys (E11000 duplicate key error collection: CONTACT_DATA.users index: email_1)\r\n```\r\n\r\n\r\n\r\n### Environment\r\n\r\n* Python version:3.8.2\r\n* wtforms version:2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/631", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/631/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/631/events", "html_url": "https://github.com/wtforms/wtforms/issues/631", "id": 650896340, "node_id": "MDU6SXNzdWU2NTA4OTYzNDA=", "number": 631, "title": "cant populate data QuerySelectField from model", "user": {"login": "Conrado916645", "id": 36912212, "node_id": "MDQ6VXNlcjM2OTEyMjEy", "avatar_url": "https://avatars3.githubusercontent.com/u/36912212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Conrado916645", "html_url": "https://github.com/Conrado916645", "followers_url": "https://api.github.com/users/Conrado916645/followers", "following_url": "https://api.github.com/users/Conrado916645/following{/other_user}", "gists_url": "https://api.github.com/users/Conrado916645/gists{/gist_id}", "starred_url": "https://api.github.com/users/Conrado916645/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Conrado916645/subscriptions", "organizations_url": "https://api.github.com/users/Conrado916645/orgs", "repos_url": "https://api.github.com/users/Conrado916645/repos", "events_url": "https://api.github.com/users/Conrado916645/events{/privacy}", "received_events_url": "https://api.github.com/users/Conrado916645/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T14:01:29Z", "updated_at": "2020-07-04T16:35:15Z", "closed_at": "2020-07-04T16:35:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "dropdown = DropDownModel.all()\r\nmyForm = MyForm(obj=dropdown)\r\n\r\n\r\nthe QuerySelectField  do not show its value.\r\n\r\nit shows only the position 0 from dropdown but not the assigned value", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/630", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/630/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/630/events", "html_url": "https://github.com/wtforms/wtforms/issues/630", "id": 646742502, "node_id": "MDU6SXNzdWU2NDY3NDI1MDI=", "number": 630, "title": "Documentation is not up-to-date regarding email validation", "user": {"login": "jugmac00", "id": 9895620, "node_id": "MDQ6VXNlcjk4OTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9895620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugmac00", "html_url": "https://github.com/jugmac00", "followers_url": "https://api.github.com/users/jugmac00/followers", "following_url": "https://api.github.com/users/jugmac00/following{/other_user}", "gists_url": "https://api.github.com/users/jugmac00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugmac00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugmac00/subscriptions", "organizations_url": "https://api.github.com/users/jugmac00/orgs", "repos_url": "https://api.github.com/users/jugmac00/repos", "events_url": "https://api.github.com/users/jugmac00/events{/privacy}", "received_events_url": "https://api.github.com/users/jugmac00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-27T19:15:25Z", "updated_at": "2020-06-27T19:32:32Z", "closed_at": "2020-06-27T19:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "wtforms 2.3.0 introduced the breaking change, that the email validation from then on needs a separate installed package.\r\nhttps://github.com/wtforms/wtforms/pull/429/files\r\n\r\nThe current documentation does not reflect this, as email is still listed as a builtin validator\r\nhttps://wtforms.readthedocs.io/en/2.3.x/validators/?highlight=email#wtforms.validators.Email\r\n\r\nI wonder why the reviewer did not request a documentation update with the above mentioned PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/629", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/629/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/629/events", "html_url": "https://github.com/wtforms/wtforms/issues/629", "id": 644411593, "node_id": "MDU6SXNzdWU2NDQ0MTE1OTM=", "number": 629, "title": "Website directs user to \"new\" old version", "user": {"login": "jms19", "id": 9743136, "node_id": "MDQ6VXNlcjk3NDMxMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9743136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jms19", "html_url": "https://github.com/jms19", "followers_url": "https://api.github.com/users/jms19/followers", "following_url": "https://api.github.com/users/jms19/following{/other_user}", "gists_url": "https://api.github.com/users/jms19/gists{/gist_id}", "starred_url": "https://api.github.com/users/jms19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jms19/subscriptions", "organizations_url": "https://api.github.com/users/jms19/orgs", "repos_url": "https://api.github.com/users/jms19/repos", "events_url": "https://api.github.com/users/jms19/events{/privacy}", "received_events_url": "https://api.github.com/users/jms19/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1998153692, "node_id": "MDU6TGFiZWwxOTk4MTUzNjky", "url": "https://api.github.com/repos/wtforms/wtforms/labels/documentation", "name": "documentation", "color": "8fefde", "default": true, "description": "Related to the documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T08:09:43Z", "updated_at": "2020-08-04T14:21:05Z", "closed_at": "2020-08-04T14:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Viewer of\r\nhttps://wtforms.readthedocs.io/en/2.3.x/\r\n\r\nsees a banner at the top saying \"Warning: This is an old version. The latest stable version is Version 2.2.1.\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/625", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/625/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/625/events", "html_url": "https://github.com/wtforms/wtforms/issues/625", "id": 642407140, "node_id": "MDU6SXNzdWU2NDI0MDcxNDA=", "number": 625, "title": "wtforms disable form caching", "user": {"login": "dizcza", "id": 7688337, "node_id": "MDQ6VXNlcjc2ODgzMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7688337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dizcza", "html_url": "https://github.com/dizcza", "followers_url": "https://api.github.com/users/dizcza/followers", "following_url": "https://api.github.com/users/dizcza/following{/other_user}", "gists_url": "https://api.github.com/users/dizcza/gists{/gist_id}", "starred_url": "https://api.github.com/users/dizcza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dizcza/subscriptions", "organizations_url": "https://api.github.com/users/dizcza/orgs", "repos_url": "https://api.github.com/users/dizcza/repos", "events_url": "https://api.github.com/users/dizcza/events{/privacy}", "received_events_url": "https://api.github.com/users/dizcza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-20T16:37:26Z", "updated_at": "2020-06-20T21:16:02Z", "closed_at": "2020-06-20T17:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear wtforms community,\r\n\r\nOnce the (stateful) `Form` is populated in a browser, it does not reflect the changes in the code anymore - it does not render the updates in `RadioField`, for example.\r\nI created a minimal flask app that reproduces the behavior.\r\n\r\n\r\n### Setup\r\n\r\n```\r\ntemplates/\r\n\u251c\u2500\u2500 upload.html\r\nwordlists/\r\n\u251c\u2500\u2500 digits_8.txt\r\n\u2514\u2500\u2500 keyboard-walk.txt\r\napp.py\r\n```\r\n\r\n`app.py` file:\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\nfrom flask import Flask, request, render_template\r\nfrom wtforms import Form, RadioField, SubmitField\r\n\r\napp = Flask(__name__)\r\n\r\n\r\ndef wordlists_available():\r\n    choices = []\r\n    for wordlist in Path('wordlists').iterdir():\r\n        choices.append((wordlist.name, wordlist.name))\r\n    return choices\r\n\r\n\r\nclass UploadForm(Form):\r\n    wordlist = RadioField('Wordlist', choices=wordlists_available(), default='digits_8.txt', description=\"The higher the rate, the better\")\r\n    submit = SubmitField('Submit')\r\n\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef upload():\r\n    form = UploadForm()\r\n    return render_template('upload.html', form=form)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True)\r\n```\r\n\r\n`templates/upload.html` content:\r\n```html\r\n<html>\r\n<body>\r\n    <h1>Upload</h1>\r\n    <form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\r\n        {{ form.csrf_token }}\r\n        {{ form.wordlist }}\r\n        <p>{{ form.submit() }}</p>\r\n    </form>\r\n</body>\r\n</html>\r\n```\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. `python app.py`\r\n2. Open a browser at localhost:5000\r\n3. `rm wordlists/keyboard-walk.txt`\r\n4. Refresh the browser or open it again at localhost:5000\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe browser shows the Upload form with only one available choice in the radio field - `digits_8.txt`.\r\n\r\n### Actual behavior\r\n\r\nThe browser shows the cached Upload form with both `digits_8.txt` and `keyboard-walk.txt`. Any change to the files in `wordlists/` dir does not affect the rendered web page. Trying another browser, which I have not used with the app, while the app is running, shows the same behavior ---> it's on the app side.\r\n![Screenshot from 2020-06-20 18-27-10](https://user-images.githubusercontent.com/7688337/85206638-baf3f980-b323-11ea-82ad-1a25b0d3abfe.png)\r\n\r\n\r\n\r\n### Environment\r\n\r\n* Python version: 3.8.3\r\n* wtforms version: 2.3.1\r\n* Flask: 1.1.2\r\n\r\n\r\n### Additional info\r\n\r\nI have been looking for the \"cache\" keyword in your documentation and have not found anything related. Do you guys internally cache fields without letting developers know how to turn the feature on and off or I'm doing something wrong? I found the [discussion](https://github.com/wtforms/wtforms/issues/311#issuecomment-266863293) saying\r\n\r\n> I have a PR ready that caches the form.data dict and removes fields from the Form class attributes.\r\n\r\nand also the [pull request](https://github.com/wtforms/wtforms/pull/568/files) that removes caching the errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/624", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/624/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/624/events", "html_url": "https://github.com/wtforms/wtforms/issues/624", "id": 642046882, "node_id": "MDU6SXNzdWU2NDIwNDY4ODI=", "number": 624, "title": "jinja2 rendering a TextAreaField prints itself in the field.", "user": {"login": "PDiracDelta", "id": 11943051, "node_id": "MDQ6VXNlcjExOTQzMDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/11943051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PDiracDelta", "html_url": "https://github.com/PDiracDelta", "followers_url": "https://api.github.com/users/PDiracDelta/followers", "following_url": "https://api.github.com/users/PDiracDelta/following{/other_user}", "gists_url": "https://api.github.com/users/PDiracDelta/gists{/gist_id}", "starred_url": "https://api.github.com/users/PDiracDelta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PDiracDelta/subscriptions", "organizations_url": "https://api.github.com/users/PDiracDelta/orgs", "repos_url": "https://api.github.com/users/PDiracDelta/repos", "events_url": "https://api.github.com/users/PDiracDelta/events{/privacy}", "received_events_url": "https://api.github.com/users/PDiracDelta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T15:20:27Z", "updated_at": "2020-06-19T15:30:52Z", "closed_at": "2020-06-19T15:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass myForm(FlaskForm):\r\n\tmytextfield = TextAreaField(id='channels', validators=[InputRequired(), UniqueLines])\r\nmytextfield = myForm()\r\n```\r\n\r\nwith\r\n\r\n```jinja2\r\n{{ form.mytextfield(cols=20, rows=5, placeholder=\"something\") }}`\r\n```\r\n\r\nyields\r\n\r\n### Actual Behavior\r\n\r\n```html\r\n<textarea cols=\"20\" id=\"channels\" name=\"channels\" placeholder=\"something\" required rows=\"5\"><textarea id=\"channels\" name=\"channels\" required></textarea></textarea>\r\n```\r\n\r\ninstead of\r\n\r\n### Expected Behavior\r\n\r\n```html\r\n<textarea cols=\"20\" id=\"channels\" name=\"channels\" placeholder=\"something\" required rows=\"5\"></textarea>\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.10\r\n* wtforms version: 2.3.1\r\n\r\n\r\n### Extra info\r\n\r\nUpon calling the field from within Jinja2, immediately the `_Context__obj` is already corrupted in `call, runtime.py:290`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/623", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/623/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/623/events", "html_url": "https://github.com/wtforms/wtforms/issues/623", "id": 640183413, "node_id": "MDU6SXNzdWU2NDAxODM0MTM=", "number": 623, "title": "Unable to get the FormField RequiredIf working", "user": {"login": "tvb", "id": 1263414, "node_id": "MDQ6VXNlcjEyNjM0MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1263414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvb", "html_url": "https://github.com/tvb", "followers_url": "https://api.github.com/users/tvb/followers", "following_url": "https://api.github.com/users/tvb/following{/other_user}", "gists_url": "https://api.github.com/users/tvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvb/subscriptions", "organizations_url": "https://api.github.com/users/tvb/orgs", "repos_url": "https://api.github.com/users/tvb/repos", "events_url": "https://api.github.com/users/tvb/events{/privacy}", "received_events_url": "https://api.github.com/users/tvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-17T06:42:24Z", "updated_at": "2020-08-16T16:50:56Z", "closed_at": "2020-08-15T21:57:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand this is not a WTForms code issue per se, but I am struggling really hard to find a solution and this is probably one of the last places I could ask.  So please forgive me if it is inappropriate.\r\n\r\nI need to make some fields required if another field is (not) matching a particular value. I got this working nicely for the fields within the same class. However, if I want to achieve the same for fields in another class which are inherited through a FIeldList() + FormField() the logic breaks. Firstly because `country_code` is unknown in the inherited class and secondly because the `RequiredIfNot() __call__` method is not receiving the correct `form` object.\r\n\r\nAssume COUNTRIES is set:\r\n\r\n```python\r\nclass RequiredIfNot(DataRequired):\r\n    \"\"\"Validator which makes a field required if another field is set and has a truthy value.\r\n    Sources:\r\n        - http://wtforms.simplecodes.com/docs/1.0.1/validators.html\r\n        - http://stackoverflow.com/questions/8463209/how-to-make-a-field-conditionally-optional-in-wtforms\r\n        - https://gist.github.com/devxoul/7638142#file-wtf_required_if-py\r\n    \"\"\"\r\n    field_flags = ('requiredif',)\r\n    def __init__(self, message=None, *args, **kwargs):\r\n        super(RequiredIfNot).__init__()\r\n        self.message = message\r\n        self.conditions = kwargs\r\n    # field is requiring that name field in the form is data value in the form\r\n    def __call__(self, form, field):\r\n        for name, data in self.conditions.items():\r\n            other_field = form[name]\r\n            if other_field is None:\r\n                raise Exception(\"No field named {} in form\".format(name))\r\n            if other_field.data != data and not field.data:\r\n                DataRequired.__call__(self, form, field)\r\n            Optional()(form, field)\r\n\r\nclass ItemsForm(FlaskForm):\r\n    item_description = StringField(\r\n        'Item description', [\r\n            RequiredIfNot(country_code=\"DE\", message='Item description is required')\r\n        ]\r\n    )\r\n\r\nclass MainForm(FlaskForm):\r\n    country_code = SelectField(\r\n        'Destination country', [\r\n            validators.Required()\r\n        ],\r\n        choices=COUNTRIES,\r\n        default = \"DE\"\r\n    )\r\n    number = StringField(\r\n        'Invoice number', [\r\n            RequiredIfNot(country_code=\"DE\", message='Invoice number is required')\r\n        ]\r\n    )\r\n    items = FieldList(\r\n        FormField(ItemsForm),\r\n        min_entries=1\r\n    )\r\n```\r\n\r\nMy question is:\r\nHow do I adjust the RequiredIf() function to have it working in both the MainForm() and for fields in the ItemsForm()?\r\nI tried Mainform.country_code=\"DE\" but that didn't work \r\n> SyntaxError: keyword can't be an expression", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/616", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/616/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/616/events", "html_url": "https://github.com/wtforms/wtforms/issues/616", "id": 629324351, "node_id": "MDU6SXNzdWU2MjkzMjQzNTE=", "number": 616, "title": "DataRequired claims IntegerField invalid when it contains \"0\"", "user": {"login": "richard-jones", "id": 856138, "node_id": "MDQ6VXNlcjg1NjEzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/856138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richard-jones", "html_url": "https://github.com/richard-jones", "followers_url": "https://api.github.com/users/richard-jones/followers", "following_url": "https://api.github.com/users/richard-jones/following{/other_user}", "gists_url": "https://api.github.com/users/richard-jones/gists{/gist_id}", "starred_url": "https://api.github.com/users/richard-jones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richard-jones/subscriptions", "organizations_url": "https://api.github.com/users/richard-jones/orgs", "repos_url": "https://api.github.com/users/richard-jones/repos", "events_url": "https://api.github.com/users/richard-jones/events{/privacy}", "received_events_url": "https://api.github.com/users/richard-jones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T16:02:10Z", "updated_at": "2020-06-03T07:38:00Z", "closed_at": "2020-06-02T16:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\nimport wtforms\r\n\r\nclass TestForm(wtforms.Form): \r\n    numeric = wtforms.fields.IntegerField(validators=[wtforms.validators.DataRequired()])                                                                                                                        \r\n\r\ninst = TestForm(data={\"numeric\" : 0})                                                                                 \r\ninst.validate()                                                                                                       \r\n\r\nOut[6]: False\r\n```\r\n\r\n### Expected Behavior\r\n\r\nAs above, but with an output of `True` instead of `False`.\r\n\r\nIn this case my form will not accept the user entering the text \"0\" into an integer field (even though that may well be a valid input.  This occurs because the integer field coerces \"0\" to `0` and the `DataRequired` validator conducts a truthy test on the `data` property, which is overzealous in this instance.\r\n\r\nFix is probably to check for `None` or `\"\"` or `[]` instead of relying on truthy-ness.\r\n\r\n### Environment\r\n\r\n* Python version: 3.5.2\r\n* wtforms version: 2.2.1 (but I checked the latest version in the repo here, and it has the same issue)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/613", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/613/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/613/events", "html_url": "https://github.com/wtforms/wtforms/issues/613", "id": 627668617, "node_id": "MDU6SXNzdWU2Mjc2Njg2MTc=", "number": 613, "title": "The format of the error messages are not unified (ending period)", "user": {"login": "greyli", "id": 12967000, "node_id": "MDQ6VXNlcjEyOTY3MDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greyli", "html_url": "https://github.com/greyli", "followers_url": "https://api.github.com/users/greyli/followers", "following_url": "https://api.github.com/users/greyli/following{/other_user}", "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}", "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greyli/subscriptions", "organizations_url": "https://api.github.com/users/greyli/orgs", "repos_url": "https://api.github.com/users/greyli/repos", "events_url": "https://api.github.com/users/greyli/events{/privacy}", "received_events_url": "https://api.github.com/users/greyli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-30T07:05:43Z", "updated_at": "2020-06-15T13:30:34Z", "closed_at": "2020-06-15T13:30:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In general, some error messages end with a period:\r\n\r\n```mo\r\n#: src/wtforms/validators.py:269 src/wtforms/validators.py:294\r\nmsgid \"This field is required.\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/validators.py:327\r\nmsgid \"Invalid input.\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/validators.py:387\r\nmsgid \"Invalid email address.\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/validators.py:423\r\nmsgid \"Invalid IP address.\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/validators.py:466\r\nmsgid \"Invalid Mac address.\"\r\nmsgstr \"\"\r\n```\r\n\r\nbut some don't:\r\n```mo\r\n#: src/wtforms/csrf/core.py:96\r\nmsgid \"Invalid CSRF Token\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/csrf/session.py:63\r\nmsgid \"CSRF token missing\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/csrf/session.py:71\r\nmsgid \"CSRF failed\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/csrf/session.py:76\r\nmsgid \"CSRF token expired\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/fields/core.py:534\r\nmsgid \"Invalid Choice: could not coerce\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/fields/core.py:538\r\nmsgid \"Choices cannot be None\"\r\nmsgstr \"\"\r\n\r\n#: src/wtforms/fields/core.py:545\r\nmsgid \"Not a valid choice\"\r\nmsgstr \"\"\r\n```\r\nsource: https://github.com/wtforms/wtforms/blob/master/src/wtforms/locale/wtforms.pot\r\n\r\nThis make the UI look a little inconsistent when these messages show together.\r\n\r\n![image](https://user-images.githubusercontent.com/12967000/83321987-bab59080-a286-11ea-93f0-470cea4d1208.png)\r\n\r\nDo we need to add periods for these messages? If yes, I can submit a PR to fix this. This PR may involve these changes:\r\n\r\n- Update the messages in the source\r\n- Regenerate the pot file\r\n- Update the messages in the test\r\n- Maybe also update all the translations (some translation adds the missing period for the target language, some don't)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/611", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/611/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/611/events", "html_url": "https://github.com/wtforms/wtforms/issues/611", "id": 626637727, "node_id": "MDU6SXNzdWU2MjY2Mzc3Mjc=", "number": 611, "title": "Default values are ignored", "user": {"login": "Sebi2020", "id": 1862664, "node_id": "MDQ6VXNlcjE4NjI2NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1862664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sebi2020", "html_url": "https://github.com/Sebi2020", "followers_url": "https://api.github.com/users/Sebi2020/followers", "following_url": "https://api.github.com/users/Sebi2020/following{/other_user}", "gists_url": "https://api.github.com/users/Sebi2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sebi2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sebi2020/subscriptions", "organizations_url": "https://api.github.com/users/Sebi2020/orgs", "repos_url": "https://api.github.com/users/Sebi2020/repos", "events_url": "https://api.github.com/users/Sebi2020/events{/privacy}", "received_events_url": "https://api.github.com/users/Sebi2020/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T16:15:55Z", "updated_at": "2020-05-28T16:18:46Z", "closed_at": "2020-05-28T16:18:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes you need to set dynamic default values for fields. That makes it impossible to declare the defaults then you declare the class (not instance) member variables. wtforms ignores defaults, which are declared on instance fields.\r\n\r\n### Actual Behavior\r\nIf you set defaults to the class **instance variables** wtforms completely ignores these values.\r\n```python\r\n# Paste a minimal piece of code that causes the problem. Here is an example:\r\n\r\nfrom wtforms import Form,SelectMultipleField,StringField\r\n\r\nclass MyForm(Form):\r\n    str_field = StringField(\"Name\")\r\n    sel_field = SelectMultipleField(\"Select\")\r\n\r\ndef populate_form():\r\n    aform = MyForm()\r\n    aform.str_field.default = \"hello\" # ignored \r\n    \r\n    aform.sel_field.choices = [(\"1\",\"value1\"),(\"2\",\"value 2\")]\r\n    aform.sel_field.default = ['1'] # ignored\r\n    return aform\r\n```\r\n\r\n### Expected Behavior\r\nThe defaults should be rendered.\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.9\r\n* wtforms version: 2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/604", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/604/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/604/events", "html_url": "https://github.com/wtforms/wtforms/issues/604", "id": 619441170, "node_id": "MDU6SXNzdWU2MTk0NDExNzA=", "number": 604, "title": "SelectMultipleField default values are ignored when a request object exists", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T10:43:29Z", "updated_at": "2020-05-16T15:21:59Z", "closed_at": "2020-05-16T15:21:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a request object and a data dict are passed to a form, the data dict values for `SelectMultipleField` are ignored.\r\n\r\n```python\r\n>>> import wtforms, werkzeug\r\n>>> choices=[(\"foo\", \"foo\"), (\"bar\", \"bar\"), (\"baz\", \"baz\")]\r\n>>> requestform = werkzeug.datastructures.ImmutableMultiDict([])\r\n\r\n>>> class F(wtforms.Form):\r\n...     multiple = wtforms.SelectMultipleField(choices=choices)\r\n\r\n>>> F(multiple=[\"foo\", \"bar\"]).multiple()\r\nMarkup('<select id=\"multiple\" multiple name=\"multiple\"><option selected value=\"foo\">foo</option><option selected value=\"bar\">bar</option><option value=\"baz\">baz</option></select>')\r\n\r\n>>> F(requestform, multiple=[\"foo\", \"bar\"]).multiple()\r\nMarkup('<select id=\"multiple\" multiple name=\"multiple\"><option value=\"foo\">foo</option><option value=\"bar\">bar</option><option value=\"baz\">baz</option></select>')\r\n>>> # Nothing is 'selected' here...\r\n```\r\n\r\nA simple workaround is `F(requestform or None, multiple=[\"foo\", \"bar\"]).multiple()` but I think this should probably work without it.\r\n\r\nThe problem does not exist with `SelectField`:\r\n\r\n```python\r\n>>> class G(wtforms.Form):\r\n...     single = wtforms.SelectField(choices=choices)\r\n>>> G(requestform, single=\"foo\").single()\r\nMarkup('<select id=\"single\" name=\"single\"><option selected value=\"foo\">foo</option><option value=\"bar\">bar</option><option value=\"baz\">baz</option></select>')\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.8\r\n* wtforms version: 2.3.1 and master\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/603", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/603/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/603/events", "html_url": "https://github.com/wtforms/wtforms/issues/603", "id": 619433645, "node_id": "MDU6SXNzdWU2MTk0MzM2NDU=", "number": 603, "title": "Shortcut for SelectMultipleField choices", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}, {"id": 1998157511, "node_id": "MDU6TGFiZWwxOTk4MTU3NTEx", "url": "https://api.github.com/repos/wtforms/wtforms/labels/newcomers", "name": "newcomers", "color": "f0f49c", "default": false, "description": "An easy task to tackle"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-16T10:07:21Z", "updated_at": "2020-05-28T16:35:38Z", "closed_at": "2020-05-28T16:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#526 brought a shortcut for `SelectField` choices, but this does not work with `SelectMultipleField`.\r\n\r\n```python\r\n>>> import wtforms\r\n>>> class F(wtforms.Form):\r\n...     single = wtforms.SelectField(choices=[\"foo\", \"bar\", \"baz\"])\r\n...     multiple = wtforms.SelectMultipleField(choices=[\"foo\", \"bar\", \"baz\"])\r\n>>> F().single()\r\nMarkup('<select id=\"single\" name=\"single\"><option value=\"foo\">foo</option><option value=\"bar\">bar</option><option value=\"baz\">baz</option></select>')\r\n\r\n>>> F().multiple()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/azmeuk/dev/wtforms/.tox/py38/lib/python3.8/site-packages/wtforms/fields/core.py\", line 177, in __call__\r\n    return self.meta.render_field(self, kwargs)\r\n  File \"/home/azmeuk/dev/wtforms/.tox/py38/lib/python3.8/site-packages/wtforms/meta.py\", line 59, in render_field\r\n    return field.widget(field, **render_kw)\r\n  File \"/home/azmeuk/dev/wtforms/.tox/py38/lib/python3.8/site-packages/wtforms/widgets/core.py\", line 306, in __call__\r\n    for val, label, selected in field.iter_choices():\r\n  File \"/home/azmeuk/dev/wtforms/.tox/py38/lib/python3.8/site-packages/wtforms/fields/core.py\", line 559, in iter_choices\r\n    for value, label in self.choices:\r\nValueError: too many values to unpack (expected 2)\r\n\r\ntoo many values to unpack (expected 2)\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.8\r\n* wtforms version: 2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/600", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/600/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/600/events", "html_url": "https://github.com/wtforms/wtforms/issues/600", "id": 608661825, "node_id": "MDU6SXNzdWU2MDg2NjE4MjU=", "number": 600, "title": "QuerySelectField does not seem to work with the data= argument of the WTForm", "user": {"login": "davidmoseler", "id": 41010804, "node_id": "MDQ6VXNlcjQxMDEwODA0", "avatar_url": "https://avatars3.githubusercontent.com/u/41010804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmoseler", "html_url": "https://github.com/davidmoseler", "followers_url": "https://api.github.com/users/davidmoseler/followers", "following_url": "https://api.github.com/users/davidmoseler/following{/other_user}", "gists_url": "https://api.github.com/users/davidmoseler/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmoseler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmoseler/subscriptions", "organizations_url": "https://api.github.com/users/davidmoseler/orgs", "repos_url": "https://api.github.com/users/davidmoseler/repos", "events_url": "https://api.github.com/users/davidmoseler/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmoseler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T22:43:16Z", "updated_at": "2020-04-29T01:03:07Z", "closed_at": "2020-04-29T01:01:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When instanciating a WTForm with the request.form object directly, the id values of QuerySelectFields are converted into the corresponding instances of the corresponding models. But the same does not happen when using the \"data\" attribute of the WTForm instead. This is important for handling json request data.\r\n\r\nMaybe I'm just using the data= parameter wrong, idk. A workaround is to import MultiDict from Werkzeug, wrap the json and then pass it to the WTForm constructor.\r\n\r\n### Actual Behavior\r\n\r\n```python\r\nform = WTForm(data = request.json)\r\nprint(form.sqlalchemy_model_field.data)\r\n\r\n#string value of the id of the sqlalchemy model instance\r\n```\r\n\r\n### Expected Behavior\r\n\r\n```python\r\nform = WTForm(data = request.json)\r\nprint(form.sqlalchemy_model_field.data)\r\n\r\n#sqlalchemy model instance\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/599", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/599/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/599/events", "html_url": "https://github.com/wtforms/wtforms/issues/599", "id": 607029367, "node_id": "MDU6SXNzdWU2MDcwMjkzNjc=", "number": 599, "title": "documentation search is broken", "user": {"login": "cmdlinebeep", "id": 54913453, "node_id": "MDQ6VXNlcjU0OTEzNDUz", "avatar_url": "https://avatars0.githubusercontent.com/u/54913453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmdlinebeep", "html_url": "https://github.com/cmdlinebeep", "followers_url": "https://api.github.com/users/cmdlinebeep/followers", "following_url": "https://api.github.com/users/cmdlinebeep/following{/other_user}", "gists_url": "https://api.github.com/users/cmdlinebeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmdlinebeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmdlinebeep/subscriptions", "organizations_url": "https://api.github.com/users/cmdlinebeep/orgs", "repos_url": "https://api.github.com/users/cmdlinebeep/repos", "events_url": "https://api.github.com/users/cmdlinebeep/events{/privacy}", "received_events_url": "https://api.github.com/users/cmdlinebeep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1998153692, "node_id": "MDU6TGFiZWwxOTk4MTUzNjky", "url": "https://api.github.com/repos/wtforms/wtforms/labels/documentation", "name": "documentation", "color": "8fefde", "default": true, "description": "Related to the documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-26T14:44:27Z", "updated_at": "2020-06-23T18:21:36Z", "closed_at": "2020-06-23T18:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find any other way to get this feedback to the webhost (no contact form, email address that I saw).\r\n\r\nAnyway, go to the documentation site:\r\nhttps://wtforms.readthedocs.io/en/2.3.x/ \r\nand in the quick search, try anything (I did \"subfield\" but it seems to be broken on all my searches)\r\nand then click on any of the search results and they will take you to a Page Not Found error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/594", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/594/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/594/events", "html_url": "https://github.com/wtforms/wtforms/issues/594", "id": 606332778, "node_id": "MDU6SXNzdWU2MDYzMzI3Nzg=", "number": 594, "title": "Use HTML 5 widgets", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/wtforms/wtforms/milestones/2", "html_url": "https://github.com/wtforms/wtforms/milestone/2", "labels_url": "https://api.github.com/repos/wtforms/wtforms/milestones/2/labels", "id": 940791, "node_id": "MDk6TWlsZXN0b25lOTQwNzkx", "number": 2, "title": "3.0.0", "description": "See meta-ticket https://github.com/wtforms/wtforms/issues/154", "creator": {"login": "crast", "id": 1609368, "node_id": "MDQ6VXNlcjE2MDkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crast", "html_url": "https://github.com/crast", "followers_url": "https://api.github.com/users/crast/followers", "following_url": "https://api.github.com/users/crast/following{/other_user}", "gists_url": "https://api.github.com/users/crast/gists{/gist_id}", "starred_url": "https://api.github.com/users/crast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crast/subscriptions", "organizations_url": "https://api.github.com/users/crast/orgs", "repos_url": "https://api.github.com/users/crast/repos", "events_url": "https://api.github.com/users/crast/events{/privacy}", "received_events_url": "https://api.github.com/users/crast/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 25, "state": "open", "created_at": "2015-01-18T20:59:43Z", "updated_at": "2020-07-26T16:50:34Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-04-24T13:55:38Z", "updated_at": "2020-06-14T22:11:53Z", "closed_at": "2020-06-14T22:11:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The HTML 5 widgets are kept in their own section and not used by default, but this distinction doesn't make sense today. \"HTML 5\" is just \"HTML\" now. No supported browser doesn't understand those input types, and ones that aren't supported fall back to text anyway.\r\n\r\nI already sort of started this by making the required validators add the `required` flag, and I'm taking it further with #406 for more complex flags. Fields should default to using the more specific widgets where possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/589", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/589/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/589/events", "html_url": "https://github.com/wtforms/wtforms/issues/589", "id": 605365915, "node_id": "MDU6SXNzdWU2MDUzNjU5MTU=", "number": 589, "title": "Form is not validated, csrf_token included", "user": {"login": "w8eight", "id": 47748037, "node_id": "MDQ6VXNlcjQ3NzQ4MDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/47748037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w8eight", "html_url": "https://github.com/w8eight", "followers_url": "https://api.github.com/users/w8eight/followers", "following_url": "https://api.github.com/users/w8eight/following{/other_user}", "gists_url": "https://api.github.com/users/w8eight/gists{/gist_id}", "starred_url": "https://api.github.com/users/w8eight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w8eight/subscriptions", "organizations_url": "https://api.github.com/users/w8eight/orgs", "repos_url": "https://api.github.com/users/w8eight/repos", "events_url": "https://api.github.com/users/w8eight/events{/privacy}", "received_events_url": "https://api.github.com/users/w8eight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T09:05:14Z", "updated_at": "2020-04-23T14:40:15Z", "closed_at": "2020-04-23T13:10:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI created question on StackOverflow with whole explanation of an issue:\r\n\r\n[Question](https://stackoverflow.com/questions/61361635/form-does-not-validate-csrf-token-included)\r\n\r\n### Actual Behavior\r\nMy form class:\r\n```python\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import BooleanField, SelectField, SubmitField\r\n\r\nclass EditUsers(FlaskForm):\r\n\r\n    submit = SubmitField('Submit')\r\n\r\n\r\ndef form_builder(roles_list):\r\n\r\n    class EditUsersForm(EditUsers):\r\n        pass\r\n\r\n    for role in roles_list:\r\n        if isinstance(role, tuple) and len(role) == 5:\r\n            if not role[2] and role[3]:\r\n                setattr(EditUsersForm, f'{role[0]}_{role[4]}_bool', BooleanField(label=role[0]))\r\n                setattr(EditUsersForm, f'{role[0]}_{role[4]}_date', SelectField('Expiration Period', choices=choices))\r\n        else:\r\n            raise IncorrectType\r\n\r\n    return EditUsersForm()\r\n\r\n```\r\nAs you can see i generate fields dynamically, based on input (Cannot use FieldList, because of BooleanField)\r\n\r\n\r\nMy route:\r\n```python\r\nfrom .forms import form_builder\r\n\r\n@edit_users.route('/edit_user/<login>', methods=['GET', 'POST'])\r\ndef users():\r\n    form = form_builder(roles_to_form)\r\n    print(form.is_submitted())\r\n    print(form.validate())\r\n    print(form.validate_on_submit())\r\n    return render_template('edit_user.html',\r\n                                           data_dict=data_dict,\r\n                                           form=form,\r\n                                          )\r\n```\r\n\r\nPart of the template where form is rendered:\r\n```jinja\r\n        <div>\r\n            <form method=\"post\" style=\"margin: auto; text-align: center; width: 40%;\">\r\n                {{ form.csrf_token }}\r\n                <table class=\"table\" align=\"center\">\r\n                    <thead>\r\n                        <th>Role</th>\r\n                        <th>Expiration Date</th>\r\n                        <th>Give Role?</th>\r\n                    </thead>\r\n                    {% for field in data_dict['id_list'] %}\r\n                    <tr>\r\n                        <td align=\"left\">{{ field[2] }}</td>\r\n                        <td align=\"left\">\r\n                            {{ form[field[1]] }}\r\n                        </td>\r\n                        <td align=\"left\">{{ form[field[0]] }}</td>\r\n                    </tr>\r\n                    {% endfor %}\r\n                    <tr>\r\n                        <td colspan=\"3\" align=\"center\">{{ form.submit() }}</td>\r\n                    </tr>\r\n                </table>\r\n            </form>\r\n        </div>\r\n```\r\n![image](https://user-images.githubusercontent.com/47748037/80080533-0cfde600-8552-11ea-8664-f7dc6f561439.png)\r\n\r\n\r\n# Show us, and explain what behavior you would have expected.\r\n# Here is an example:\r\n\r\nAfter i hit submit button the values of is_submitted() and is_validated() should be both True\r\nHowever only is_submitted() returns True  \u00af\\\\_(\u30c4)_/\u00af\r\n\r\n### Environment\r\n\r\n* Python version: 3.7.5\r\n* wtforms version: 2.2.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/588", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/588/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/588/events", "html_url": "https://github.com/wtforms/wtforms/issues/588", "id": 605065870, "node_id": "MDU6SXNzdWU2MDUwNjU4NzA=", "number": 588, "title": "2.3.0 breaks rendering of SelectField when choices are a python set object", "user": {"login": "riptusk331", "id": 6278002, "node_id": "MDQ6VXNlcjYyNzgwMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6278002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riptusk331", "html_url": "https://github.com/riptusk331", "followers_url": "https://api.github.com/users/riptusk331/followers", "following_url": "https://api.github.com/users/riptusk331/following{/other_user}", "gists_url": "https://api.github.com/users/riptusk331/gists{/gist_id}", "starred_url": "https://api.github.com/users/riptusk331/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riptusk331/subscriptions", "organizations_url": "https://api.github.com/users/riptusk331/orgs", "repos_url": "https://api.github.com/users/riptusk331/repos", "events_url": "https://api.github.com/users/riptusk331/events{/privacy}", "received_events_url": "https://api.github.com/users/riptusk331/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T20:50:30Z", "updated_at": "2020-05-16T15:26:37Z", "closed_at": "2020-05-16T15:26:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\n\r\n>>> from wtforms import Form, SelectField\r\n>>> from wtforms.validators import DataRequired\r\n\r\n>>> class MyForm(Form):\r\n...     foo = SelectField('Bar', validators=[DataRequired()])\r\n\r\n>>> f = MyForm()\r\n>>> f.foo.choices = set([1, 2, 2, 3])\r\n\r\n>>> str(f.foo)\r\n```\r\nresults in\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"../wtforms/fields/core.py\", line 137, in __str__\r\n    return self()\r\n  File \"../wtforms/fields/core.py\", line 160, in __call__\r\n    return self.meta.render_field(self, kwargs)\r\n  File \"../wtforms/meta.py\", line 56, in render_field\r\n    return field.widget(field, **render_kw)\r\n  File \"../wtforms/widgets/core.py\", line 300, in __call__\r\n    for val, label, selected in field.iter_choices():\r\n  File \"../wtforms/fields/core.py\", line 481, in iter_choices\r\n    elif isinstance(self.choices[0], (list, tuple)):\r\nTypeError: 'set' object is not subscriptable\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.7\r\n* wtforms version: 2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/585", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/585/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/585/events", "html_url": "https://github.com/wtforms/wtforms/issues/585", "id": 604785837, "node_id": "MDU6SXNzdWU2MDQ3ODU4Mzc=", "number": 585, "title": "2.3.0 breaks rendering of SelectField with no choices", "user": {"login": "c-thiel", "id": 12560027, "node_id": "MDQ6VXNlcjEyNTYwMDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/12560027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-thiel", "html_url": "https://github.com/c-thiel", "followers_url": "https://api.github.com/users/c-thiel/followers", "following_url": "https://api.github.com/users/c-thiel/following{/other_user}", "gists_url": "https://api.github.com/users/c-thiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-thiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-thiel/subscriptions", "organizations_url": "https://api.github.com/users/c-thiel/orgs", "repos_url": "https://api.github.com/users/c-thiel/repos", "events_url": "https://api.github.com/users/c-thiel/events{/privacy}", "received_events_url": "https://api.github.com/users/c-thiel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T14:05:54Z", "updated_at": "2020-04-22T14:47:35Z", "closed_at": "2020-04-22T14:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\nfrom wtforms import Form, SelectField, validators\r\n\r\nclass MyForm(Form):\r\n    my_field = SelectField(label='MyField', choices=[])\r\n\r\nform = MyForm()\r\nform.meta.render_field(form.my_field, {})\r\n```\r\n\r\nResults in\r\n```python\r\nIndexError: list index out of range\r\n```\r\n\r\nDue to:\r\nhttps://github.com/wtforms/wtforms/blob/0a63864317ce3260d14a11260ed16e2f02037f56/src/wtforms/fields/core.py#L512\r\n\r\n### Environment\r\n\r\n* Python version: Any\r\n* wtforms version: 2.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/581", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/581/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/581/events", "html_url": "https://github.com/wtforms/wtforms/issues/581", "id": 604620030, "node_id": "MDU6SXNzdWU2MDQ2MjAwMzA=", "number": 581, "title": "Code breaks on latest release", "user": {"login": "HarryKodden", "id": 1842889, "node_id": "MDQ6VXNlcjE4NDI4ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1842889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarryKodden", "html_url": "https://github.com/HarryKodden", "followers_url": "https://api.github.com/users/HarryKodden/followers", "following_url": "https://api.github.com/users/HarryKodden/following{/other_user}", "gists_url": "https://api.github.com/users/HarryKodden/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarryKodden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarryKodden/subscriptions", "organizations_url": "https://api.github.com/users/HarryKodden/orgs", "repos_url": "https://api.github.com/users/HarryKodden/repos", "events_url": "https://api.github.com/users/HarryKodden/events{/privacy}", "received_events_url": "https://api.github.com/users/HarryKodden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T09:53:56Z", "updated_at": "2020-04-22T14:47:12Z", "closed_at": "2020-04-22T14:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n\r\n```python\r\n\r\nfrom wtforms.widgets import HTMLString\r\nImportError: cannot import name 'HTMLString'\r\n\r\n```\r\n### Environment\r\n* Python version: 3.6.8\r\n* wtforms version: 2.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/572", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/572/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/572/events", "html_url": "https://github.com/wtforms/wtforms/issues/572", "id": 602750099, "node_id": "MDU6SXNzdWU2MDI3NTAwOTk=", "number": 572, "title": "Documentation and tests for SelectField choices shortcuts", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1998153692, "node_id": "MDU6TGFiZWwxOTk4MTUzNjky", "url": "https://api.github.com/repos/wtforms/wtforms/labels/documentation", "name": "documentation", "color": "8fefde", "default": true, "description": "Related to the documentation"}, {"id": 1998157511, "node_id": "MDU6TGFiZWwxOTk4MTU3NTEx", "url": "https://api.github.com/repos/wtforms/wtforms/labels/newcomers", "name": "newcomers", "color": "f0f49c", "default": false, "description": "An easy task to tackle"}, {"id": 97617852, "node_id": "MDU6TGFiZWw5NzYxNzg1Mg==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/tests", "name": "tests", "color": "fbca04", "default": false, "description": "Related to tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-19T15:51:17Z", "updated_at": "2020-04-22T14:36:04Z", "closed_at": "2020-04-22T14:36:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#526 allows `SelectField` to have choices that are not tuples. However, there is no documentation and [no test](https://coveralls.io/builds/30176772/source?filename=src/wtforms/fields/core.py#L524) about this feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/571", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/571/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/571/events", "html_url": "https://github.com/wtforms/wtforms/issues/571", "id": 602739918, "node_id": "MDU6SXNzdWU2MDI3Mzk5MTg=", "number": 571, "title": "Form-level errors", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885103, "node_id": "MDU6TGFiZWw1NTg4NTEwMw==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/enhancement", "name": "enhancement", "color": "9bce3b", "default": true, "description": "New feature, or existing feature improvement"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T15:12:08Z", "updated_at": "2020-04-22T06:32:23Z", "closed_at": "2020-04-22T06:32:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in #568, it could be interesting to implement form-level errors. It has been suggested to:\r\n- add a Form `form_errors` attribute that would be a list of errors\r\n- make those errors be readable in `Form.errors[None]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/562", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/562/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/562/events", "html_url": "https://github.com/wtforms/wtforms/issues/562", "id": 602451364, "node_id": "MDU6SXNzdWU2MDI0NTEzNjQ=", "number": 562, "title": "2.2.1 fix for default value in StringField breaks nullable fields", "user": {"login": "jwag956", "id": 1002831, "node_id": "MDQ6VXNlcjEwMDI4MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1002831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwag956", "html_url": "https://github.com/jwag956", "followers_url": "https://api.github.com/users/jwag956/followers", "following_url": "https://api.github.com/users/jwag956/following{/other_user}", "gists_url": "https://api.github.com/users/jwag956/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwag956/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwag956/subscriptions", "organizations_url": "https://api.github.com/users/jwag956/orgs", "repos_url": "https://api.github.com/users/jwag956/repos", "events_url": "https://api.github.com/users/jwag956/events{/privacy}", "received_events_url": "https://api.github.com/users/jwag956/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T12:39:20Z", "updated_at": "2020-05-16T15:26:21Z", "closed_at": "2020-05-16T15:26:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a long discussion in: #401 \r\nhowever the fix - which means that the value for the StringField can NEVER be None is a real problem. While in python None and '' (empty string) are mostly the same - this is definitely not true for DBs which treat those 2 concepts completely differently.\r\n\r\nWhat this means for example is that current StringField can't be used for a Unique/Nullable field in the DB.\r\n\r\nI don't quite understand the rationale for the else clause here:\r\n```python\r\n        if valuelist:\r\n            self.data = valuelist[0]\r\n        elif self.data is None:\r\n            self.data = ''\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/560", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/560/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/560/events", "html_url": "https://github.com/wtforms/wtforms/issues/560", "id": 602439837, "node_id": "MDU6SXNzdWU2MDI0Mzk4Mzc=", "number": 560, "title": "Change the documentation theme", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1998153692, "node_id": "MDU6TGFiZWwxOTk4MTUzNjky", "url": "https://api.github.com/repos/wtforms/wtforms/labels/documentation", "name": "documentation", "color": "8fefde", "default": true, "description": "Related to the documentation"}, {"id": 55885105, "node_id": "MDU6TGFiZWw1NTg4NTEwNQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Question about WTForms behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-18T11:36:23Z", "updated_at": "2020-04-21T21:00:06Z", "closed_at": "2020-04-21T21:00:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am not very found of the current wtforms documentation theme, mainly because the font size is small the color lacks contrast.\r\nI suggest switching to any theme from the [pallets repository](https://github.com/pallets/pallets-sphinx-themes) or the [sphinx RTD](https://github.com/readthedocs/sphinx_rtd_theme) theme. I\u00a0volunteer for opening a PR for this in a few days.\r\n\r\nDiscussion is opened. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/559", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/559/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/559/events", "html_url": "https://github.com/wtforms/wtforms/issues/559", "id": 602435593, "node_id": "MDU6SXNzdWU2MDI0MzU1OTM=", "number": 559, "title": "Field rendering error in the documentation", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}, {"id": 1998153692, "node_id": "MDU6TGFiZWwxOTk4MTUzNjky", "url": "https://api.github.com/repos/wtforms/wtforms/labels/documentation", "name": "documentation", "color": "8fefde", "default": true, "description": "Related to the documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-18T11:12:55Z", "updated_at": "2020-04-20T15:28:36Z", "closed_at": "2020-04-20T15:28:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the [rendering fields](https://wtforms.readthedocs.io/en/stable/crash_course.html#rendering-fields) paragraph in the crash course, there is this piece of code:\r\n\r\n```python\r\n>>> from wtforms import Form, StringField\r\n>>> class SimpleForm(Form):\r\n...   content = StringField('content')\r\n...\r\n>>> form = SimpleForm(content='foobar')\r\n>>> str(form.content)\r\n'<input id=\"content\" name=\"content\" type=\"text\" value=\"foobar\" />'\r\n```\r\nBut if you execute this piece of code in a python terminal, the result you get is:\r\n```python\r\nMarkup('<input id=\"content\" name=\"content\" type=\"text\" value=\"foobar\">')\r\n```\r\nThe `Markup` surrounding the string seems unexpected. To fix this, we could surround every calls to `markupsafe.Markup` with `str` in the code, for example here:\r\n\r\nhttps://github.com/wtforms/wtforms/blob/4e05a237da54080fbbd8aacf818b5a763c896c23/src/wtforms/widgets/core.py#L162\r\n\r\nBut that would make tests like those ones fail:\r\n\r\nhttps://github.com/wtforms/wtforms/blob/4e05a237da54080fbbd8aacf818b5a763c896c23/tests/test_fields.py#L197-L198\r\nhttps://github.com/wtforms/wtforms/blob/4e05a237da54080fbbd8aacf818b5a763c896c23/tests/test_widgets.py#L91-L94\r\n\r\nI am not sure those tests are representing the expected behavior, and I\u00a0would like to fix them.\r\nWhat do you think?\r\n\r\nIf those tests are fixed, we could enable doctests in the documentation to make sure there won't be more discrepancies between the documentation and the code.\r\n\r\nThis seems to be related to #400", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/552", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/552/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/552/events", "html_url": "https://github.com/wtforms/wtforms/issues/552", "id": 602158284, "node_id": "MDU6SXNzdWU2MDIxNTgyODQ=", "number": 552, "title": "End python2 support", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885105, "node_id": "MDU6TGFiZWw1NTg4NTEwNQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Question about WTForms behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/wtforms/wtforms/milestones/2", "html_url": "https://github.com/wtforms/wtforms/milestone/2", "labels_url": "https://api.github.com/repos/wtforms/wtforms/milestones/2/labels", "id": 940791, "node_id": "MDk6TWlsZXN0b25lOTQwNzkx", "number": 2, "title": "3.0.0", "description": "See meta-ticket https://github.com/wtforms/wtforms/issues/154", "creator": {"login": "crast", "id": 1609368, "node_id": "MDQ6VXNlcjE2MDkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crast", "html_url": "https://github.com/crast", "followers_url": "https://api.github.com/users/crast/followers", "following_url": "https://api.github.com/users/crast/following{/other_user}", "gists_url": "https://api.github.com/users/crast/gists{/gist_id}", "starred_url": "https://api.github.com/users/crast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crast/subscriptions", "organizations_url": "https://api.github.com/users/crast/orgs", "repos_url": "https://api.github.com/users/crast/repos", "events_url": "https://api.github.com/users/crast/events{/privacy}", "received_events_url": "https://api.github.com/users/crast/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 25, "state": "open", "created_at": "2015-01-18T20:59:43Z", "updated_at": "2020-07-26T16:50:34Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2020-04-17T18:31:07Z", "updated_at": "2020-04-21T14:33:41Z", "closed_at": "2020-04-21T14:33:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I open this ticket to discuss the end of the python2 support. The pallet community [seems to want to end](https://palletsprojects.com/blog/ending-python2-support/) the support, but how is it doable now in wtforms? I suppose that would require a major version bump.\r\n\r\nCould wtforms 3 be the version that would drop python 2 support?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/547", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/547/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/547/events", "html_url": "https://github.com/wtforms/wtforms/issues/547", "id": 593695380, "node_id": "MDU6SXNzdWU1OTM2OTUzODA=", "number": 547, "title": "DataRequired considering 0.0 as no input for FloatField", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T23:48:30Z", "updated_at": "2020-04-03T23:51:36Z", "closed_at": "2020-04-03T23:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "0.0 or 0 is correct value for FloatField and should pass this validation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/543", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/543/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/543/events", "html_url": "https://github.com/wtforms/wtforms/issues/543", "id": 565611751, "node_id": "MDU6SXNzdWU1NjU2MTE3NTE=", "number": 543, "title": "Create a new release", "user": {"login": "NathanUrwin", "id": 13526277, "node_id": "MDQ6VXNlcjEzNTI2Mjc3", "avatar_url": "https://avatars2.githubusercontent.com/u/13526277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanUrwin", "html_url": "https://github.com/NathanUrwin", "followers_url": "https://api.github.com/users/NathanUrwin/followers", "following_url": "https://api.github.com/users/NathanUrwin/following{/other_user}", "gists_url": "https://api.github.com/users/NathanUrwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanUrwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanUrwin/subscriptions", "organizations_url": "https://api.github.com/users/NathanUrwin/orgs", "repos_url": "https://api.github.com/users/NathanUrwin/repos", "events_url": "https://api.github.com/users/NathanUrwin/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanUrwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T23:49:07Z", "updated_at": "2020-02-18T16:52:24Z", "closed_at": "2020-02-18T16:51:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @crast @prencher @davidism :wave:\r\n\r\nJust want to say you all have done a great job with this project! With that being said, it's been almost 2 years since a release. Would one of the maintainers be able to create a new release?\r\n\r\nThanks for your time and all your hard work! :smile:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/542", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/542/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/542/events", "html_url": "https://github.com/wtforms/wtforms/issues/542", "id": 564179892, "node_id": "MDU6SXNzdWU1NjQxNzk4OTI=", "number": 542, "title": "Unable to initialize BooleanField to it's checked state", "user": {"login": "Bob64375", "id": 60981575, "node_id": "MDQ6VXNlcjYwOTgxNTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/60981575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bob64375", "html_url": "https://github.com/Bob64375", "followers_url": "https://api.github.com/users/Bob64375/followers", "following_url": "https://api.github.com/users/Bob64375/following{/other_user}", "gists_url": "https://api.github.com/users/Bob64375/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bob64375/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bob64375/subscriptions", "organizations_url": "https://api.github.com/users/Bob64375/orgs", "repos_url": "https://api.github.com/users/Bob64375/repos", "events_url": "https://api.github.com/users/Bob64375/events{/privacy}", "received_events_url": "https://api.github.com/users/Bob64375/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-12T18:17:50Z", "updated_at": "2020-04-18T16:48:14Z", "closed_at": "2020-04-17T14:58:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When obj is used to initialize a form (See form.py):\r\n\r\n```\r\ndef process(self, formdata=None, obj=None, data=None, **kwargs):\r\n   :param obj:\r\n            If formdata is empty or not provided, this object is checked for\r\n            attributes matching form field names, which will be used for field\r\n            values.\r\n```\r\n\r\n\r\nA true initial value in obj for a Boolean field (the intent is for the field to be rendered as checked) is incorrectly reset to false by process_formdata and the rendered result is incorrectly not-checked. Please see the process_formdata method in class BooleanField located in fields/core.py for this code:\r\n\r\n```python\r\n def process_formdata(self, valuelist):\r\n        if not valuelist or valuelist[0] in self.false_values:\r\n            self.data = False\r\n        else:\r\n            self.data = True\r\n```\r\n\r\nIMO it should be something like this. Without testing for self.data (as in the above code) the BooleanField cannot be set to true (checked) :\r\n\r\n```python\r\ndef process_formdata(self, valuelist):\r\n        if valuelist:\r\n            if valuelist[0] in self.false_values:\r\n                self.data = False\r\n            else:\r\n                self.data = True\r\n        elif self.data is None:\r\n            self.data = False\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/539", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/539/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/539/events", "html_url": "https://github.com/wtforms/wtforms/issues/539", "id": 558159345, "node_id": "MDU6SXNzdWU1NTgxNTkzNDU=", "number": 539, "title": "When will the SelectField validate_choice feature be available?", "user": {"login": "front5stoneybaloney", "id": 22750353, "node_id": "MDQ6VXNlcjIyNzUwMzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/22750353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/front5stoneybaloney", "html_url": "https://github.com/front5stoneybaloney", "followers_url": "https://api.github.com/users/front5stoneybaloney/followers", "following_url": "https://api.github.com/users/front5stoneybaloney/following{/other_user}", "gists_url": "https://api.github.com/users/front5stoneybaloney/gists{/gist_id}", "starred_url": "https://api.github.com/users/front5stoneybaloney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/front5stoneybaloney/subscriptions", "organizations_url": "https://api.github.com/users/front5stoneybaloney/orgs", "repos_url": "https://api.github.com/users/front5stoneybaloney/repos", "events_url": "https://api.github.com/users/front5stoneybaloney/events{/privacy}", "received_events_url": "https://api.github.com/users/front5stoneybaloney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-31T14:18:57Z", "updated_at": "2020-03-19T17:00:23Z", "closed_at": "2020-03-19T16:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can see the PR for fixing the validation error that occurs when you are using javascript to dynamically add choices for the `SelectField`. When will I be able to use the `validate_choice=Trues/False` thingy? It will be so useful now that things like jquery-Select2 are growing more and more popular. \r\nThe 'newest' version of WTForms (2.2.1) is from June 2018 which is weird given that you appear to be actively supporting and developing it. Is there a planned date for a new release at all?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/534", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/534/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/534/events", "html_url": "https://github.com/wtforms/wtforms/issues/534", "id": 541298498, "node_id": "MDU6SXNzdWU1NDEyOTg0OTg=", "number": 534, "title": "Fix simple typo: requred -> required", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-21T07:57:53Z", "updated_at": "2019-12-21T11:23:55Z", "closed_at": "2019-12-21T11:23:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in tests/test_validators.py.\nShould read `required` rather than `requred`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/533", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/533/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/533/events", "html_url": "https://github.com/wtforms/wtforms/issues/533", "id": 539305273, "node_id": "MDU6SXNzdWU1MzkzMDUyNzM=", "number": 533, "title": "Unhelpful error message raised when SelectField.choices is None", "user": {"login": "ftm", "id": 3003251, "node_id": "MDQ6VXNlcjMwMDMyNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3003251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftm", "html_url": "https://github.com/ftm", "followers_url": "https://api.github.com/users/ftm/followers", "following_url": "https://api.github.com/users/ftm/following{/other_user}", "gists_url": "https://api.github.com/users/ftm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftm/subscriptions", "organizations_url": "https://api.github.com/users/ftm/orgs", "repos_url": "https://api.github.com/users/ftm/repos", "events_url": "https://api.github.com/users/ftm/events{/privacy}", "received_events_url": "https://api.github.com/users/ftm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885103, "node_id": "MDU6TGFiZWw1NTg4NTEwMw==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/enhancement", "name": "enhancement", "color": "9bce3b", "default": true, "description": "New feature, or existing feature improvement"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-17T20:55:47Z", "updated_at": "2020-03-31T15:34:37Z", "closed_at": "2020-03-31T15:34:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As pointed out in the PR #454, the error raised if validation of a SelectField with no choices is attempted isn't especially helpful:\r\n\r\n```python\r\nfrom wtforms.fields.core import SelectField\r\nfrom wtforms.form import Form\r\n\r\nclass F(Form):\r\n    sf = SelectField(\"Test field\")\r\n\r\nform = F()\r\n\r\nform.validate()\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"SelectField_error.py\", line 9, in <module>\r\n    form.validate()\r\n  File \"[...]/python3.7/site-packages/wtforms/form.py\", line 300, in validate\r\n    return super(Form, self).validate(extra)\r\n  File \"[...]/python3.7/site-packages/wtforms/form.py\", line 136, in validate\r\n    if not field.validate(self, extra):\r\n  File \"[...]/python3.7/site-packages/wtforms/fields/core.py\", line 244, in validate\r\n    self.pre_validate(form)\r\n  File \"[..]./python3.7/site-packages/wtforms/fields/core.py\", line 549, in pre_validate\r\n    for v, _ in self.choices:\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nA more preferable alternative would be a helpful error message that actually tells the user that the `choices` list is `None` or is otherwise unusable.\r\n\r\nThe solution #454 proposed of catching it at the `pre_validate` point is viable however I closed the PR as the author was not fixing their code or resolving conflicts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/529", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/529/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/529/events", "html_url": "https://github.com/wtforms/wtforms/issues/529", "id": 533159617, "node_id": "MDU6SXNzdWU1MzMxNTk2MTc=", "number": 529, "title": "Url validator should allow two consecutive dashes in domain", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-05T06:49:21Z", "updated_at": "2020-03-31T15:38:53Z", "closed_at": "2020-03-31T15:38:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This valid url should pass Url validation:\r\n\r\n```\r\nhttps://example--domain.com/file.txt\r\n```\r\n\r\nThe two consecutive dashes causes validation to fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/527", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/527/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/527/events", "html_url": "https://github.com/wtforms/wtforms/issues/527", "id": 529363084, "node_id": "MDU6SXNzdWU1MjkzNjMwODQ=", "number": 527, "title": "Python 3.7 PyPi", "user": {"login": "Tomazz", "id": 3969552, "node_id": "MDQ6VXNlcjM5Njk1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3969552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tomazz", "html_url": "https://github.com/Tomazz", "followers_url": "https://api.github.com/users/Tomazz/followers", "following_url": "https://api.github.com/users/Tomazz/following{/other_user}", "gists_url": "https://api.github.com/users/Tomazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tomazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tomazz/subscriptions", "organizations_url": "https://api.github.com/users/Tomazz/orgs", "repos_url": "https://api.github.com/users/Tomazz/repos", "events_url": "https://api.github.com/users/Tomazz/events{/privacy}", "received_events_url": "https://api.github.com/users/Tomazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T13:58:27Z", "updated_at": "2019-12-17T15:17:58Z", "closed_at": "2019-12-17T15:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n\r\nI see you've got a PR with python 3.8 tests, so assuming that 3.7 should be supported now (saw commits with 3.7 tests from 5 months back). Did you perhaps forgot to include the 3.7 support on PyPI? You have python versions listed up until 3.6 there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/523", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/523/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/523/events", "html_url": "https://github.com/wtforms/wtforms/issues/523", "id": 517720054, "node_id": "MDU6SXNzdWU1MTc3MjAwNTQ=", "number": 523, "title": "wtforms.validators.URL does not allow query parameters in the URL", "user": {"login": "laurihy", "id": 565169, "node_id": "MDQ6VXNlcjU2NTE2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/565169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurihy", "html_url": "https://github.com/laurihy", "followers_url": "https://api.github.com/users/laurihy/followers", "following_url": "https://api.github.com/users/laurihy/following{/other_user}", "gists_url": "https://api.github.com/users/laurihy/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurihy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurihy/subscriptions", "organizations_url": "https://api.github.com/users/laurihy/orgs", "repos_url": "https://api.github.com/users/laurihy/repos", "events_url": "https://api.github.com/users/laurihy/events{/privacy}", "received_events_url": "https://api.github.com/users/laurihy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-05T11:37:45Z", "updated_at": "2019-11-11T20:32:35Z", "closed_at": "2019-11-11T20:32:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `wtforms.validators.URL` to validate URL with query parameters incorrectly returns `False`.\r\n\r\n```python3\r\nimport wtforms\r\n \r\nclass URLForm(wtforms.Form):\r\n     url = wtforms.StringField('MyLink', validators=[wtforms.validators.URL()])\r\n \r\nURLForm(url='https://example.com').validate()\r\n# -> True\r\n\r\nURLForm(url='https://example.com?this=fails').validate()\r\n# -> False, but this should be True as it's a valid URL\r\n```\r\n\r\nSeems like this is because the regex used in URL validation _incorrectly_ includes query parameters to the hostname, and then `HostnameValidation` fails.\r\n\r\nhttps://github.com/wtforms/wtforms/blob/master/src/wtforms/validators.py#L498\r\n\r\n```python\r\nimport re\r\nfrom wtforms.validators import HostnameValidation\r\nurl_regex = re.compile(r\"^[a-z]+://(?P<host>[^/:]+)(?P<port>:[0-9]+)?(?P<path>\\/.*)?$\")\r\nmatch  = url_regex.match('https://example.com?query=params')\r\nprint(match.group('host'))\r\n# -> example.com?query=params\r\nHostnameValidation(match.group('host'))\r\n# -> False\r\n```\r\n\r\nInstead, the regex should separate hostname and query parameters, and only use the actual hostname for `HostnameValidation`.\r\n\r\nI'll cook up a PR to fix this later this week, unless someone is faster than that :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/522", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/522/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/522/events", "html_url": "https://github.com/wtforms/wtforms/issues/522", "id": 516463076, "node_id": "MDU6SXNzdWU1MTY0NjMwNzY=", "number": 522, "title": "Form errors property isn't idempotent", "user": {"login": "jwag956", "id": 1002831, "node_id": "MDQ6VXNlcjEwMDI4MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1002831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwag956", "html_url": "https://github.com/jwag956", "followers_url": "https://api.github.com/users/jwag956/followers", "following_url": "https://api.github.com/users/jwag956/following{/other_user}", "gists_url": "https://api.github.com/users/jwag956/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwag956/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwag956/subscriptions", "organizations_url": "https://api.github.com/users/jwag956/orgs", "repos_url": "https://api.github.com/users/jwag956/repos", "events_url": "https://api.github.com/users/jwag956/events{/privacy}", "received_events_url": "https://api.github.com/users/jwag956/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-02T04:06:41Z", "updated_at": "2020-04-19T14:56:45Z", "closed_at": "2020-04-19T14:56:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 'errors' property in BaseForm isn't idempotent. In particular - if you iterate over a forms attributes using e.g. inspect.getmembers - this will cause 'errors' to change from 'None' to dict({}). And so it won't be updated if any fields add/incur errors later in processing.\r\n\r\nAt a minimum, it should treat 'None' and empty dir the same. But I don't understand why it doesn't re-calc the errors every time?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/519", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/519/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/519/events", "html_url": "https://github.com/wtforms/wtforms/issues/519", "id": 512990041, "node_id": "MDU6SXNzdWU1MTI5OTAwNDE=", "number": 519, "title": "RegEx fails on integer fields", "user": {"login": "technikamateur", "id": 18737267, "node_id": "MDQ6VXNlcjE4NzM3MjY3", "avatar_url": "https://avatars3.githubusercontent.com/u/18737267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technikamateur", "html_url": "https://github.com/technikamateur", "followers_url": "https://api.github.com/users/technikamateur/followers", "following_url": "https://api.github.com/users/technikamateur/following{/other_user}", "gists_url": "https://api.github.com/users/technikamateur/gists{/gist_id}", "starred_url": "https://api.github.com/users/technikamateur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technikamateur/subscriptions", "organizations_url": "https://api.github.com/users/technikamateur/orgs", "repos_url": "https://api.github.com/users/technikamateur/repos", "events_url": "https://api.github.com/users/technikamateur/events{/privacy}", "received_events_url": "https://api.github.com/users/technikamateur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T16:35:25Z", "updated_at": "2019-12-17T21:30:39Z", "closed_at": "2019-12-17T21:30:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying to match an integer input against the linux file permission. So I created an integer field like the following:\r\n`    create_mask = IntegerField(\"File Mask\", [validators.Optional(),\r\n                                              validators.Regexp('^[0-7]{4}$', message=\"This is not a valid value!\")],\r\n                               render_kw={\"placeholder\": \"0600\"})`\r\n\r\nBut with the input `55` (which is a not allowed input), a Type Error is thrown:\r\n\r\n`  File \"/usr/local/lib/python3.6/dist-packages/wtforms/validators.py\", line 273, in __call__\r\n    match = self.regex.match(field.data or '')\r\nTypeError: expected string or bytes-like object`\r\n\r\nIs it not possible to check a regex against a string or am I doing something completly wrong?\r\n\r\nCheers,\r\nDaniel\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/518", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/518/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/518/events", "html_url": "https://github.com/wtforms/wtforms/issues/518", "id": 509039492, "node_id": "MDU6SXNzdWU1MDkwMzk0OTI=", "number": 518, "title": "`description` property isn't rendered for `BooleanField`", "user": {"login": "shnela", "id": 3773836, "node_id": "MDQ6VXNlcjM3NzM4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3773836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shnela", "html_url": "https://github.com/shnela", "followers_url": "https://api.github.com/users/shnela/followers", "following_url": "https://api.github.com/users/shnela/following{/other_user}", "gists_url": "https://api.github.com/users/shnela/gists{/gist_id}", "starred_url": "https://api.github.com/users/shnela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shnela/subscriptions", "organizations_url": "https://api.github.com/users/shnela/orgs", "repos_url": "https://api.github.com/users/shnela/repos", "events_url": "https://api.github.com/users/shnela/events{/privacy}", "received_events_url": "https://api.github.com/users/shnela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-18T12:08:26Z", "updated_at": "2019-10-22T16:27:42Z", "closed_at": "2019-10-18T12:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following form definition:\r\n```\r\nclass Form(FlaskForm):\r\n    text = StringField(description='Some visible text')\r\n    unique = BooleanField(description=\"Won't be rendered\")\r\n```\r\n\r\nAnd below I'm presenting how does html rendered by following template loooks like:\r\n```\r\n{% for field in form %}\r\n    {{ wtf.form_field(field) }}\r\n{% endfor %}\r\n```\r\n```\r\n<div class=\"form-group \"><label class=\"form-control-label\" for=\"text\">Text</label>\r\n        <input class=\"form-control\" id=\"text\" name=\"text\" type=\"text\" value=\"\">\r\n        <small class=\"form-text text-muted\">Some visible text</small>\r\n</div>\r\n<div class=\"form-check\">\r\n      <label class=\"form-check-label\">\r\n      <input class=\"form-check-input\" id=\"unique\" name=\"unique\" type=\"checkbox\" value=\"y\">\r\nUnique\r\n     </label>\r\n</div>\r\n```\r\n\r\nHere's how it looks like live:\r\n![image](https://user-images.githubusercontent.com/3773836/67092786-702c4b80-f1b0-11e9-860e-b29965f40fe6.png)\r\n\r\n**Why isn't `description` for `BooleanField` rendered?**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/516", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/516/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/516/events", "html_url": "https://github.com/wtforms/wtforms/issues/516", "id": 506966399, "node_id": "MDU6SXNzdWU1MDY5NjYzOTk=", "number": 516, "title": "Import from django.newforms raises error", "user": {"login": "joelsewhere", "id": 47084812, "node_id": "MDQ6VXNlcjQ3MDg0ODEy", "avatar_url": "https://avatars0.githubusercontent.com/u/47084812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelsewhere", "html_url": "https://github.com/joelsewhere", "followers_url": "https://api.github.com/users/joelsewhere/followers", "following_url": "https://api.github.com/users/joelsewhere/following{/other_user}", "gists_url": "https://api.github.com/users/joelsewhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelsewhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelsewhere/subscriptions", "organizations_url": "https://api.github.com/users/joelsewhere/orgs", "repos_url": "https://api.github.com/users/joelsewhere/repos", "events_url": "https://api.github.com/users/joelsewhere/events{/privacy}", "received_events_url": "https://api.github.com/users/joelsewhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-15T02:28:54Z", "updated_at": "2019-10-15T03:25:26Z", "closed_at": "2019-10-15T03:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like django has moved the newforms package to \"forms\". \r\n\r\nShallow imports evidently won't raise an error but, in my case, an import from django.newforms.forms throws an error.\r\n\r\nSee: https://code.djangoproject.com/ticket/7741", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/515", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/515/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/515/events", "html_url": "https://github.com/wtforms/wtforms/issues/515", "id": 502619354, "node_id": "MDU6SXNzdWU1MDI2MTkzNTQ=", "number": 515, "title": "[Feature] File size validation", "user": {"login": "avinash-bhosale", "id": 51014718, "node_id": "MDQ6VXNlcjUxMDE0NzE4", "avatar_url": "https://avatars3.githubusercontent.com/u/51014718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avinash-bhosale", "html_url": "https://github.com/avinash-bhosale", "followers_url": "https://api.github.com/users/avinash-bhosale/followers", "following_url": "https://api.github.com/users/avinash-bhosale/following{/other_user}", "gists_url": "https://api.github.com/users/avinash-bhosale/gists{/gist_id}", "starred_url": "https://api.github.com/users/avinash-bhosale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avinash-bhosale/subscriptions", "organizations_url": "https://api.github.com/users/avinash-bhosale/orgs", "repos_url": "https://api.github.com/users/avinash-bhosale/repos", "events_url": "https://api.github.com/users/avinash-bhosale/events{/privacy}", "received_events_url": "https://api.github.com/users/avinash-bhosale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-04T12:52:13Z", "updated_at": "2019-12-17T21:45:58Z", "closed_at": "2019-12-17T21:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "First time I post an Issue/Feature request. Please excuse me and let me know where I went wrong.\r\n\r\nWTForms and flask-wtf provide excellent and easy to use validations. I searched for the file size validator, but i didn't succeed. There should be validator for file size checker and returning the errors", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/512", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/512/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/512/events", "html_url": "https://github.com/wtforms/wtforms/issues/512", "id": 482704579, "node_id": "MDU6SXNzdWU0ODI3MDQ1Nzk=", "number": 512, "title": "HostnameValidation (and thus Email validation) doesn't allow for double hyphens", "user": {"login": "divad", "id": 747790, "node_id": "MDQ6VXNlcjc0Nzc5MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/747790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divad", "html_url": "https://github.com/divad", "followers_url": "https://api.github.com/users/divad/followers", "following_url": "https://api.github.com/users/divad/following{/other_user}", "gists_url": "https://api.github.com/users/divad/gists{/gist_id}", "starred_url": "https://api.github.com/users/divad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divad/subscriptions", "organizations_url": "https://api.github.com/users/divad/orgs", "repos_url": "https://api.github.com/users/divad/repos", "events_url": "https://api.github.com/users/divad/events{/privacy}", "received_events_url": "https://api.github.com/users/divad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-20T08:00:11Z", "updated_at": "2020-04-17T11:56:16Z", "closed_at": "2020-04-17T11:56:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following is a valid domain name:\r\n\r\n`g--gle.com` \r\n\r\nhowever wtforms doesn't think so:\r\n\r\n```\r\n>>> from wtforms.validators import HostnameValidation\r\n>>> validate = HostnameValidation()\r\n>>> validate('google.com')\r\nTrue\r\n>>> validate('g--gle.com')\r\nFalse\r\n```\r\n\r\nHere is an example of this domain name in use: https://www.f--kthegame.com\r\n\r\n```\r\n>>> validate('f--kthegame.com')\r\nFalse\r\n```\r\n\r\nThis affects all the validators using Hostname Validation, such as the e-mail validator.\r\n\r\nMore info here: https://stackoverflow.com/questions/16468309/can-domain-name-have-two-continuous-hyphens", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/509", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/509/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/509/events", "html_url": "https://github.com/wtforms/wtforms/issues/509", "id": 481144135, "node_id": "MDU6SXNzdWU0ODExNDQxMzU=", "number": 509, "title": "FieldList default data with missing request entries", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-15T13:11:56Z", "updated_at": "2020-05-16T15:26:06Z", "closed_at": "2020-05-16T15:26:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a strange behavior with wtforms 2.2\r\n\r\nIf you initialize a form with some request data and an object, and you forget a field in the request data, then the form will take the object's value.\r\n\r\n```python\r\n>>> import wtforms\r\n>>> from tests.common import DummyPostData\r\n>>> class Form(wtforms.Form):\r\n...     foo = wtforms.StringField()\r\n... \r\n>>> class Obj:\r\n...     foo = \"OK\"\r\n... \r\n>>> Form(DummyPostData({}), Obj()).data\r\n{'foo': 'OK'}\r\n```\r\n\r\nNow if you do the same experiment with a `FieldList`, the form will not take the object values.\r\n```python\r\n>>> class Form(wtforms.Form):\r\n...     bars = wtforms.FieldList(wtforms.StringField(), min_entries=3)\r\n... \r\n>>> class Obj:\r\n...     bars = [\"one\", \"two\", \"three\"]\r\n... \r\n>>> Form(DummyPostData({'bars-0': 'A'}), Obj()).data\r\n{'bars': ['A', '', '']}\r\n```\r\n\r\nHere I would have expected `{'bars': ['A', 'two', 'three']}`.\r\n\r\nWhat do you think? If this is indeed an unwanted behavior, I volunteer to provide a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/505", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/505/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/505/events", "html_url": "https://github.com/wtforms/wtforms/issues/505", "id": 474636037, "node_id": "MDU6SXNzdWU0NzQ2MzYwMzc=", "number": 505, "title": "validators.NumberRange doesn't handle NaN", "user": {"login": "jon-brenner", "id": 32843750, "node_id": "MDQ6VXNlcjMyODQzNzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/32843750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-brenner", "html_url": "https://github.com/jon-brenner", "followers_url": "https://api.github.com/users/jon-brenner/followers", "following_url": "https://api.github.com/users/jon-brenner/following{/other_user}", "gists_url": "https://api.github.com/users/jon-brenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-brenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-brenner/subscriptions", "organizations_url": "https://api.github.com/users/jon-brenner/orgs", "repos_url": "https://api.github.com/users/jon-brenner/repos", "events_url": "https://api.github.com/users/jon-brenner/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-brenner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T14:57:08Z", "updated_at": "2020-04-20T15:11:59Z", "closed_at": "2020-04-20T15:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Validating a `DecimalField` with a `NumberRange` validator throws a `decimal.InvalidOperation` exception when the value of the field is NaN. I would expect validation to fail instead\r\n```\r\nFile \"/usr/local/lib/python3.6/dist-packages/wtforms/form.py\", line 310, in validate\r\n  return super(Form, self).validate(extra)\r\nFile \"/usr/local/lib/python3.6/dist-packages/wtforms/form.py\", line 152, in validate\r\n  if not field.validate(self, extra):\r\nFile \"/usr/local/lib/python3.6/dist-packages/wtforms/fields/core.py\", line 206, in validate\r\n  stop_validation = self._run_validation_chain(form, chain)\r\nFile \"/usr/local/lib/python3.6/dist-packages/wtforms/fields/core.py\", line 226, in _run_validation_chain\r\n  validator(form, self)\r\nFile \"/usr/local/lib/python3.6/dist-packages/wtforms/validators.py\", line 134, in __call__\r\n  if data is None or (self.min is not None and data < self.min) or \r\ndecimal.InvalidOperation: [<class 'decimal.InvalidOperation'>]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/504", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/504/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/504/events", "html_url": "https://github.com/wtforms/wtforms/issues/504", "id": 469104950, "node_id": "MDU6SXNzdWU0NjkxMDQ5NTA=", "number": 504, "title": "Provide a way to set a widget inner HTML", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-17T10:09:19Z", "updated_at": "2019-07-17T15:55:34Z", "closed_at": "2019-07-17T12:43:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment I cannot find an easy way to set a `TextAreaField` in a Jinja context just by passing arguments to the field `__call__` function.\r\n\r\n```python\r\n>>> import wtforms\r\n>>> class MyForm(wtforms.Form):\r\n...     ta = wtforms.fields.TextAreaField()\r\n>>> my_form = MyForm()\r\n>>> my_form.ta(value=\"foobar\")\r\n'<textarea id=\"ta\" name=\"ta\" value=\"foobar\"></textarea>'\r\n```\r\n\r\nThis syntax would have been OK for a classical text input, but to be displayed properly I need to be able to produce `'<textarea id=\"ta\" name=\"ta\">foobar</textarea>'`.\r\n\r\nWhat about treating a special `content_` parameter as an addition to the inner HTML? So we could be able to write something like:\r\n```python\r\n>>> my_form.ta(content_=\"foobar\")\r\n'<textarea id=\"ta\" name=\"ta\">foobar</textarea>'\r\n```\r\nIt seems [I am not the only one](https://stackoverflow.com/questions/5117479/wtforms-how-to-prepopulate-a-textarea-field) interested by such a feature.\r\n\r\nIf it is OK for you, I am volunteer to write a pull request for this.\r\n\r\nWhat do you think?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/502", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/502/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/502/events", "html_url": "https://github.com/wtforms/wtforms/issues/502", "id": 462315926, "node_id": "MDU6SXNzdWU0NjIzMTU5MjY=", "number": 502, "title": "How to \"enforce\" all non-validated fields are NOT present within the form/post data", "user": {"login": "MatthewDaize", "id": 3209700, "node_id": "MDQ6VXNlcjMyMDk3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3209700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewDaize", "html_url": "https://github.com/MatthewDaize", "followers_url": "https://api.github.com/users/MatthewDaize/followers", "following_url": "https://api.github.com/users/MatthewDaize/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewDaize/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewDaize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewDaize/subscriptions", "organizations_url": "https://api.github.com/users/MatthewDaize/orgs", "repos_url": "https://api.github.com/users/MatthewDaize/repos", "events_url": "https://api.github.com/users/MatthewDaize/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewDaize/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-29T16:05:32Z", "updated_at": "2019-06-30T01:15:29Z", "closed_at": "2019-06-30T01:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot find a builtin mechanism to ensuring that all non-validated fields are not within a list of validated fields and are omitted from the submitted form/post data.\r\n\r\nI have been playing with modifying the BaseForm class to add such a check, but perhaps I'm just missing something?\r\n\r\nI know for specific fields we could add a custom Validator to ensure that it is NOT present, but I'm looking for something that's more \"exclusive\" than \"inclusive\" of the validated fields.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/501", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/501/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/501/events", "html_url": "https://github.com/wtforms/wtforms/issues/501", "id": 461916900, "node_id": "MDU6SXNzdWU0NjE5MTY5MDA=", "number": 501, "title": "Document for HostnameValidation", "user": {"login": "BlackMetalz", "id": 3434274, "node_id": "MDQ6VXNlcjM0MzQyNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3434274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackMetalz", "html_url": "https://github.com/BlackMetalz", "followers_url": "https://api.github.com/users/BlackMetalz/followers", "following_url": "https://api.github.com/users/BlackMetalz/following{/other_user}", "gists_url": "https://api.github.com/users/BlackMetalz/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackMetalz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackMetalz/subscriptions", "organizations_url": "https://api.github.com/users/BlackMetalz/orgs", "repos_url": "https://api.github.com/users/BlackMetalz/repos", "events_url": "https://api.github.com/users/BlackMetalz/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackMetalz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T08:21:20Z", "updated_at": "2019-06-28T18:39:42Z", "closed_at": "2019-06-28T15:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I see in the source code have method HostnameValidation for validating but no document for this in website https://wtforms.readthedocs.io/en/stable/validators.html. \r\n\r\nIt isn't ready to use or I have missed something :)\r\n\r\nhttps://github.com/wtforms/wtforms/blob/master/src/wtforms/validators.py#L605", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/500", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/500/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/500/events", "html_url": "https://github.com/wtforms/wtforms/issues/500", "id": 460377544, "node_id": "MDU6SXNzdWU0NjAzNzc1NDQ=", "number": 500, "title": "HostnameValidation() error when come with FlaskForm", "user": {"login": "BlackMetalz", "id": 3434274, "node_id": "MDQ6VXNlcjM0MzQyNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3434274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackMetalz", "html_url": "https://github.com/BlackMetalz", "followers_url": "https://api.github.com/users/BlackMetalz/followers", "following_url": "https://api.github.com/users/BlackMetalz/following{/other_user}", "gists_url": "https://api.github.com/users/BlackMetalz/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackMetalz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackMetalz/subscriptions", "organizations_url": "https://api.github.com/users/BlackMetalz/orgs", "repos_url": "https://api.github.com/users/BlackMetalz/repos", "events_url": "https://api.github.com/users/BlackMetalz/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackMetalz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T11:50:50Z", "updated_at": "2019-06-25T11:53:23Z", "closed_at": "2019-06-25T11:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have simple form like this\r\n```\r\nhost = StringField('Host', [validators.HostnameValidation()])\r\n```\r\n\r\nIt comes from form with post method. When i do submit.\r\ni return / print a code like this to see value of form sent\r\n```\r\nprint(request.form)\r\n```\r\n\r\nThen error appear\r\n```\r\nTypeError: __call__() takes 2 positional arguments but 3 were given\r\n```\r\n\r\nBut when i do replace HostnameValidation() with IPAddress(). It working well\r\n\r\nI'm in Python 3.7.2\r\nFlask==1.0.2\r\nWTForms==2.2.1\r\nFlask-WTF==0.14.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/494", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/494/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/494/events", "html_url": "https://github.com/wtforms/wtforms/issues/494", "id": 455942676, "node_id": "MDU6SXNzdWU0NTU5NDI2NzY=", "number": 494, "title": "Is WTForms' Mailing List active?", "user": {"login": "ayharano", "id": 13336, "node_id": "MDQ6VXNlcjEzMzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/13336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayharano", "html_url": "https://github.com/ayharano", "followers_url": "https://api.github.com/users/ayharano/followers", "following_url": "https://api.github.com/users/ayharano/following{/other_user}", "gists_url": "https://api.github.com/users/ayharano/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayharano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayharano/subscriptions", "organizations_url": "https://api.github.com/users/ayharano/orgs", "repos_url": "https://api.github.com/users/ayharano/repos", "events_url": "https://api.github.com/users/ayharano/events{/privacy}", "received_events_url": "https://api.github.com/users/ayharano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-13T20:40:13Z", "updated_at": "2019-06-14T01:10:04Z", "closed_at": "2019-06-13T20:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I was interested in reading more about dynamic forms as stated in [this line of Solving Specific Problems](https://github.com/wtforms/wtforms/blob/63d2036da22b80fc17589d6517e918cb80e13cbe/docs/specific_problems.rst#L85), and tried also by using [WTForms doc headers' Mailing List link](https://github.com/wtforms/wtforms/blob/1e53cba35fc87c49dcb3782d50f215823265daaf/docs/_templates/layout.html#L56), but trying to join the groups results in\r\n\r\n> This group either doesn't exist, or you don't have permission to access it. If you're sure this group exists, contact the Owner of the group and ask them to give you access.\r\n\r\nSo I have two related questions:\r\n\r\n1. Does the WTForms' Google Group still exist?\r\n\r\n2. If not, is there any publicly accessible copy of referred e-mail in Solving Specific Problems?\r\n\r\nThank you for your time and effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/488", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/488/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/488/events", "html_url": "https://github.com/wtforms/wtforms/issues/488", "id": 443399189, "node_id": "MDU6SXNzdWU0NDMzOTkxODk=", "number": 488, "title": "iterating syntax", "user": {"login": "sstephans", "id": 29578272, "node_id": "MDQ6VXNlcjI5NTc4Mjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/29578272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sstephans", "html_url": "https://github.com/sstephans", "followers_url": "https://api.github.com/users/sstephans/followers", "following_url": "https://api.github.com/users/sstephans/following{/other_user}", "gists_url": "https://api.github.com/users/sstephans/gists{/gist_id}", "starred_url": "https://api.github.com/users/sstephans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sstephans/subscriptions", "organizations_url": "https://api.github.com/users/sstephans/orgs", "repos_url": "https://api.github.com/users/sstephans/repos", "events_url": "https://api.github.com/users/sstephans/events{/privacy}", "received_events_url": "https://api.github.com/users/sstephans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-13T13:29:26Z", "updated_at": "2019-06-12T21:35:03Z", "closed_at": "2019-06-12T21:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's the proper way to manually iterate through the choices of a radio field? When I do it the recommended way, they come out with bullets next to the radio buttons like an unordered list. I'm trying to remove with css, but would be even better for my styling of the site would be to be able to iterate through those choices.\r\n\r\nA similar question: so my form has one string field and then a bunch of radio fields. I know how to display and individual field manually, but how could I have it iterate through the whole form but just skip the first field (which I will call manually). I ask because I get a 'not iterable' error when I've tried it the other way. \r\n\r\ntia!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/487", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/487/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/487/events", "html_url": "https://github.com/wtforms/wtforms/issues/487", "id": 443013367, "node_id": "MDU6SXNzdWU0NDMwMTMzNjc=", "number": 487, "title": "options for Regexp to validate raw data", "user": {"login": "kaiwensun", "id": 18455693, "node_id": "MDQ6VXNlcjE4NDU1Njkz", "avatar_url": "https://avatars1.githubusercontent.com/u/18455693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaiwensun", "html_url": "https://github.com/kaiwensun", "followers_url": "https://api.github.com/users/kaiwensun/followers", "following_url": "https://api.github.com/users/kaiwensun/following{/other_user}", "gists_url": "https://api.github.com/users/kaiwensun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaiwensun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaiwensun/subscriptions", "organizations_url": "https://api.github.com/users/kaiwensun/orgs", "repos_url": "https://api.github.com/users/kaiwensun/repos", "events_url": "https://api.github.com/users/kaiwensun/events{/privacy}", "received_events_url": "https://api.github.com/users/kaiwensun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-11T16:41:18Z", "updated_at": "2019-06-15T22:15:03Z", "closed_at": "2019-06-15T22:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Regex now can only validate text-based fields. If the field is of non-string type, eg. FloatField or IntegerField, we may still want to use Regex to validate the input. One potential use case is to validate a price in FloatField type to match ^\\d*(\\.\\d{1,2})?$\r\n\r\nHere is a PR: https://github.com/wtforms/wtforms/pull/465", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/483", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/483/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/483/events", "html_url": "https://github.com/wtforms/wtforms/issues/483", "id": 440430713, "node_id": "MDU6SXNzdWU0NDA0MzA3MTM=", "number": 483, "title": "BooleanField docs do not say False is an accepted false value", "user": {"login": "ftm", "id": 3003251, "node_id": "MDQ6VXNlcjMwMDMyNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3003251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftm", "html_url": "https://github.com/ftm", "followers_url": "https://api.github.com/users/ftm/followers", "following_url": "https://api.github.com/users/ftm/following{/other_user}", "gists_url": "https://api.github.com/users/ftm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftm/subscriptions", "organizations_url": "https://api.github.com/users/ftm/orgs", "repos_url": "https://api.github.com/users/ftm/repos", "events_url": "https://api.github.com/users/ftm/events{/privacy}", "received_events_url": "https://api.github.com/users/ftm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-05T10:52:34Z", "updated_at": "2019-05-05T11:18:56Z", "closed_at": "2019-05-05T11:18:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The [docs for BooleanField](https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/src/wtforms/fields/core.py#L783-L786) state the following:\r\n```restructuredtext\r\n:param false_values:\r\n    If provided, a sequence of strings each of which is an exact match\r\n    string of what is considered a \"false\" value. Defaults to the tuple\r\n    ``('false', '')``\r\n```\r\n\r\nWhen the false values are [by default](https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/src/wtforms/fields/core.py#L790):\r\n```python\r\nfalse_values = (False, \"false\", \"\")\r\n```\r\n\r\nThe docs should be updated to reflect this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/482", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/482/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/482/events", "html_url": "https://github.com/wtforms/wtforms/issues/482", "id": 440426902, "node_id": "MDU6SXNzdWU0NDA0MjY5MDI=", "number": 482, "title": "New flake8-bugbear version breaks stylecheck", "user": {"login": "ftm", "id": 3003251, "node_id": "MDQ6VXNlcjMwMDMyNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3003251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftm", "html_url": "https://github.com/ftm", "followers_url": "https://api.github.com/users/ftm/followers", "following_url": "https://api.github.com/users/ftm/following{/other_user}", "gists_url": "https://api.github.com/users/ftm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftm/subscriptions", "organizations_url": "https://api.github.com/users/ftm/orgs", "repos_url": "https://api.github.com/users/ftm/repos", "events_url": "https://api.github.com/users/ftm/events{/privacy}", "received_events_url": "https://api.github.com/users/ftm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-05T10:07:41Z", "updated_at": "2019-05-05T11:12:35Z", "closed_at": "2019-05-05T11:12:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Version 19.3.0](https://github.com/PyCQA/flake8-bugbear#1930) of `flake8-bugbear` introduced the new warnings `B009` and `B010` relating to the use of `getattr()` and `setattr()` with a constant, i.e. `getattr(Input(), \"input_type\")` (https://github.com/PyCQA/flake8-bugbear/pull/55).\r\n\r\nThis is causing the CI to fail as that pattern is used 7 times in [`tests/test_widgets.py`](https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py) (see https://travis-ci.org/wtforms/wtforms/jobs/528390668 from #481 for an example failing build). The lines causing the issue are:\r\n\r\n- https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py#L86\r\n- https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py#L119\r\n- https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py#L121\r\n- https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py#L135-L137\r\n- https://github.com/wtforms/wtforms/blob/a4df965494232d3292abbfcf0498148be358f0a8/tests/test_widgets.py#L156", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/479", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/479/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/479/events", "html_url": "https://github.com/wtforms/wtforms/issues/479", "id": 435074886, "node_id": "MDU6SXNzdWU0MzUwNzQ4ODY=", "number": 479, "title": "FormField not working", "user": {"login": "BloodSucker123", "id": 41031355, "node_id": "MDQ6VXNlcjQxMDMxMzU1", "avatar_url": "https://avatars2.githubusercontent.com/u/41031355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BloodSucker123", "html_url": "https://github.com/BloodSucker123", "followers_url": "https://api.github.com/users/BloodSucker123/followers", "following_url": "https://api.github.com/users/BloodSucker123/following{/other_user}", "gists_url": "https://api.github.com/users/BloodSucker123/gists{/gist_id}", "starred_url": "https://api.github.com/users/BloodSucker123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BloodSucker123/subscriptions", "organizations_url": "https://api.github.com/users/BloodSucker123/orgs", "repos_url": "https://api.github.com/users/BloodSucker123/repos", "events_url": "https://api.github.com/users/BloodSucker123/events{/privacy}", "received_events_url": "https://api.github.com/users/BloodSucker123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-19T07:09:11Z", "updated_at": "2019-04-19T11:52:28Z", "closed_at": "2019-04-19T11:52:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a data but only the upperlevel is being validated\r\n```json\r\n{ \"payment\": { \"bookingref\": \"TZB-6619-esxC\",\r\n               \"cardname\": \"qeqweqwe\",\r\n               \"cardnum\": \"123\",\r\n               \"cardverificationnum\": \"12312312\",\r\n               \"expiry\": {\"month\": \"02\", \"year\": \"20\"},\r\n               \"type\": \"creadit-card\"},\r\n  \"reference\": \"TZB-6619-esxC\",\r\n  \"voucher\": { \"emailadd\": \"awdaw@gmail.com\",\r\n               \"firstname\": \"qweqw\",\r\n               \"lastname\": \"eqwe\",\r\n               \"phonenum\": \"\",\r\n               \"title\": \"Ms\"}}\r\n```\r\nThe voucher field is being validated.\r\n```python\r\nclass Voucher(Form):\r\n\t\"\"\"docstring for Voucher\"\"\"\r\n\r\n\temailadd=StringField(validators=[DataRequired(),Email()])\r\n\ttitle=StringField(validators=[DataRequired()])\r\n\tlastname=StringField(validators=[DataRequired()])\r\n\tfirstname=StringField(validators=[DataRequired()])\r\n\t\r\n\t\t\r\nclass Booking(Form):\r\n\t\"\"\"docstring for Booking\"\"\"\r\n\tpayment=DataRequired()\r\n\treference=StringField(validators=[DataRequired()])\r\n\tvoucher=FormField(Voucher)\r\n```\r\nIm just passing data to the class\r\n```python\r\nrequest = tornado.escape.json_decode(self.request.body)\r\nform=Validators.Booking(request)\r\n```\r\n\r\nNow when I tried to validate, It always says required even though it does exists\r\n\r\n```json\r\n{ \"voucher\": { \"emailadd\": [\"This field is required.\"],\r\n               \"firstname\": [\"This field is required.\"],\r\n               \"lastname\": [\"This field is required.\"],\r\n               \"title\": [\"This field is required.\"]}}\r\n```\r\n\r\nCan someone tell me why is this happening? or what are my mistakes in working on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/478", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/478/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/478/events", "html_url": "https://github.com/wtforms/wtforms/issues/478", "id": 429927856, "node_id": "MDU6SXNzdWU0Mjk5Mjc4NTY=", "number": 478, "title": "Error: No module named 'wtforms.csrf'", "user": {"login": "claudefalbriard", "id": 23198783, "node_id": "MDQ6VXNlcjIzMTk4Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/23198783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claudefalbriard", "html_url": "https://github.com/claudefalbriard", "followers_url": "https://api.github.com/users/claudefalbriard/followers", "following_url": "https://api.github.com/users/claudefalbriard/following{/other_user}", "gists_url": "https://api.github.com/users/claudefalbriard/gists{/gist_id}", "starred_url": "https://api.github.com/users/claudefalbriard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claudefalbriard/subscriptions", "organizations_url": "https://api.github.com/users/claudefalbriard/orgs", "repos_url": "https://api.github.com/users/claudefalbriard/repos", "events_url": "https://api.github.com/users/claudefalbriard/events{/privacy}", "received_events_url": "https://api.github.com/users/claudefalbriard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-05T20:44:41Z", "updated_at": "2019-04-05T21:19:47Z", "closed_at": "2019-04-05T21:19:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "After an upgrade of flask-wtf (#Successfully installed Flask-WTF-0.14.2)\r\nI get the following error:  \r\n\r\nfrom wtforms.csrf.core import CSRF\r\nModuleNotFoundError: No module named 'wtforms.csrf'\r\n\r\nPlease advice. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/476", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/476/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/476/events", "html_url": "https://github.com/wtforms/wtforms/issues/476", "id": 422171730, "node_id": "MDU6SXNzdWU0MjIxNzE3MzA=", "number": 476, "title": "Selectfield: dynamic default value", "user": {"login": "MammadTavakoli", "id": 12212802, "node_id": "MDQ6VXNlcjEyMjEyODAy", "avatar_url": "https://avatars2.githubusercontent.com/u/12212802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MammadTavakoli", "html_url": "https://github.com/MammadTavakoli", "followers_url": "https://api.github.com/users/MammadTavakoli/followers", "following_url": "https://api.github.com/users/MammadTavakoli/following{/other_user}", "gists_url": "https://api.github.com/users/MammadTavakoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MammadTavakoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MammadTavakoli/subscriptions", "organizations_url": "https://api.github.com/users/MammadTavakoli/orgs", "repos_url": "https://api.github.com/users/MammadTavakoli/repos", "events_url": "https://api.github.com/users/MammadTavakoli/events{/privacy}", "received_events_url": "https://api.github.com/users/MammadTavakoli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T11:38:09Z", "updated_at": "2019-03-18T12:31:17Z", "closed_at": "2019-03-18T12:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an edit form with 7 selectfield. I set default values for them in __init__ function of form whit. Some fields set correctly and show default value in web page, but don't for some.\r\ni changed the name of that fields, and evry things worked correctly.\r\nI tested in many browsers but this problem is occurred. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/473", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/473/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/473/events", "html_url": "https://github.com/wtforms/wtforms/issues/473", "id": 416444815, "node_id": "MDU6SXNzdWU0MTY0NDQ4MTU=", "number": 473, "title": "FieldList id attribute", "user": {"login": "Berrayti", "id": 8355447, "node_id": "MDQ6VXNlcjgzNTU0NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8355447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Berrayti", "html_url": "https://github.com/Berrayti", "followers_url": "https://api.github.com/users/Berrayti/followers", "following_url": "https://api.github.com/users/Berrayti/following{/other_user}", "gists_url": "https://api.github.com/users/Berrayti/gists{/gist_id}", "starred_url": "https://api.github.com/users/Berrayti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Berrayti/subscriptions", "organizations_url": "https://api.github.com/users/Berrayti/orgs", "repos_url": "https://api.github.com/users/Berrayti/repos", "events_url": "https://api.github.com/users/Berrayti/events{/privacy}", "received_events_url": "https://api.github.com/users/Berrayti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-02T21:36:57Z", "updated_at": "2019-05-08T11:11:28Z", "closed_at": "2019-05-08T11:11:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI'm using FieldList along with a FormField like this \r\n```python\r\nclass OneLineForm(FlaskForm):\r\n    id = HiddenField('id')\r\n    name = StringField(\"Name\", validators=[DataRequired()])\r\n\r\nclass AllLinesForm(FlaskForm):\r\n    lines = FieldList(FormField(OneLineForm), min_entries=1\r\n```\r\n\r\nIn my view function, I prepopulate the form with data from a SQLAlchemy model like this\r\n\r\n```python\r\n@app.route('test')\r\ndef test_route():\r\n    db_lines = Line.query.all()\r\n    form = AllLinesForm(lines=db_lines)\r\n```\r\n\r\nIn my jijna file, I have this : \r\n\r\n```jinja\r\n{% for line in form.lines %}\r\n    {{ line.id }}\r\n    {{ render_field(line.name) }}\r\n{% endfor %}\r\n```\r\n\r\nThe problem is that I don't get the hidden field markup with the value from the Database, but I get **line-0** **line-1** .... It's like treating that id field as the id of the field and not the one from the DB.\r\n\r\nI hope my problem is understable.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/472", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/472/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/472/events", "html_url": "https://github.com/wtforms/wtforms/issues/472", "id": 416421124, "node_id": "MDU6SXNzdWU0MTY0MjExMjQ=", "number": 472, "title": "SelectField: Segmentation fault", "user": {"login": "sr-verde", "id": 10595600, "node_id": "MDQ6VXNlcjEwNTk1NjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/10595600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sr-verde", "html_url": "https://github.com/sr-verde", "followers_url": "https://api.github.com/users/sr-verde/followers", "following_url": "https://api.github.com/users/sr-verde/following{/other_user}", "gists_url": "https://api.github.com/users/sr-verde/gists{/gist_id}", "starred_url": "https://api.github.com/users/sr-verde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sr-verde/subscriptions", "organizations_url": "https://api.github.com/users/sr-verde/orgs", "repos_url": "https://api.github.com/users/sr-verde/repos", "events_url": "https://api.github.com/users/sr-verde/events{/privacy}", "received_events_url": "https://api.github.com/users/sr-verde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-02T17:40:38Z", "updated_at": "2019-05-09T15:23:14Z", "closed_at": "2019-05-09T15:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks,\r\nI run wtforms with flask and flask-wtf. Adding a SelectField without choices leads to a segfault:\r\n\r\n```bash\r\n$ flask run\r\n * Environment: production\r\n   WARNING: Do not use the development server in a production environment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: off\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\nzsh: segmentation fault (core dumped)  flask run\r\n```\r\n\r\n```python\r\n from flask_wtf import FlaskForm\r\n from wtforms import StringField, TextAreaField, HiddenField, SelectField\r\n from wtforms.validators import DataRequired, URL\r\n\r\n class LinkForm(FlaskForm):\r\n     tags = SelectField('tags', validators=[DataRequired()])\r\n```\r\n\r\nI cannot determine whether it is a problem of flask, wtforms or flask-wtf. Maybe someone can give a hint\u2026", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/470", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/470/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/470/events", "html_url": "https://github.com/wtforms/wtforms/issues/470", "id": 410623054, "node_id": "MDU6SXNzdWU0MTA2MjMwNTQ=", "number": 470, "title": "Issue with field value reassignment ", "user": {"login": "headrx", "id": 9099513, "node_id": "MDQ6VXNlcjkwOTk1MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9099513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/headrx", "html_url": "https://github.com/headrx", "followers_url": "https://api.github.com/users/headrx/followers", "following_url": "https://api.github.com/users/headrx/following{/other_user}", "gists_url": "https://api.github.com/users/headrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/headrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/headrx/subscriptions", "organizations_url": "https://api.github.com/users/headrx/orgs", "repos_url": "https://api.github.com/users/headrx/repos", "events_url": "https://api.github.com/users/headrx/events{/privacy}", "received_events_url": "https://api.github.com/users/headrx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T06:23:46Z", "updated_at": "2019-02-15T19:12:58Z", "closed_at": "2019-02-15T13:10:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Passed a constructor inital list (multidict) and after such , im unable to change the form.name.data value unless i do it in code. Im not 100 this is an issue, but i think it might be . Heres a code snippet . I know its not json or saving problems, bc i manually do it and it works, but not through the field. Note, this is a website post builder, saving to json. I can make a post fine. Can load a post thats made. But cannot load it , change the fields , and save new data, it just writes the old stuff again.\r\n\r\nform initalize =  line 103\r\n\r\ncode :\r\n\r\nhttps://hastebin.com/lafavifike.py\r\n\r\nThanks a bunch . Josh\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/469", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/469/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/469/events", "html_url": "https://github.com/wtforms/wtforms/issues/469", "id": 410159812, "node_id": "MDU6SXNzdWU0MTAxNTk4MTI=", "number": 469, "title": "Override field's name attribute in FormField?", "user": {"login": "qiangzhichen", "id": 46099436, "node_id": "MDQ6VXNlcjQ2MDk5NDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/46099436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qiangzhichen", "html_url": "https://github.com/qiangzhichen", "followers_url": "https://api.github.com/users/qiangzhichen/followers", "following_url": "https://api.github.com/users/qiangzhichen/following{/other_user}", "gists_url": "https://api.github.com/users/qiangzhichen/gists{/gist_id}", "starred_url": "https://api.github.com/users/qiangzhichen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qiangzhichen/subscriptions", "organizations_url": "https://api.github.com/users/qiangzhichen/orgs", "repos_url": "https://api.github.com/users/qiangzhichen/repos", "events_url": "https://api.github.com/users/qiangzhichen/events{/privacy}", "received_events_url": "https://api.github.com/users/qiangzhichen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-14T07:11:01Z", "updated_at": "2019-05-08T10:33:20Z", "closed_at": "2019-05-08T10:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I hava a post data with \r\n`my_data = ImmutableMultiDict([('myTitle', ('scheduledStartTime', 1549974840000))])`\r\nI want to create a form to validator it , I use FormField to create Form\r\n```\r\nclass TitleForm(wtforms.Form):\r\n    scheduledStartTime = MyTimeField()\r\n\r\n\r\nclass PostForm(wtforms.Form):\r\n    myTitle = FormField(TitleForm)\r\n\r\n\r\nmy_form = PostForm(my_data)\r\nprint(my_form.data)\r\n```\r\nHowever it doesn't works, and I want to change myTitle to my_title,scheduledStartTime to shceduled_start_time, so ,how can i do it\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/468", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/468/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/468/events", "html_url": "https://github.com/wtforms/wtforms/issues/468", "id": 409844590, "node_id": "MDU6SXNzdWU0MDk4NDQ1OTA=", "number": 468, "title": "Adding a class to labels via Python", "user": {"login": "anfractuosity", "id": 287684, "node_id": "MDQ6VXNlcjI4NzY4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/287684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anfractuosity", "html_url": "https://github.com/anfractuosity", "followers_url": "https://api.github.com/users/anfractuosity/followers", "following_url": "https://api.github.com/users/anfractuosity/following{/other_user}", "gists_url": "https://api.github.com/users/anfractuosity/gists{/gist_id}", "starred_url": "https://api.github.com/users/anfractuosity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anfractuosity/subscriptions", "organizations_url": "https://api.github.com/users/anfractuosity/orgs", "repos_url": "https://api.github.com/users/anfractuosity/repos", "events_url": "https://api.github.com/users/anfractuosity/events{/privacy}", "received_events_url": "https://api.github.com/users/anfractuosity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T14:55:39Z", "updated_at": "2019-05-05T12:35:13Z", "closed_at": "2019-05-05T12:35:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nUnless I'm mistaken there doesn't seem to be a way to change the class of a label via Python\r\nprogrammatically.\r\n\r\nI'm looking at:\r\nhttps://github.com/wtforms/wtforms/blob/master/src/wtforms/fields/core.py#L436\r\n\r\nIt looks like kwargs is only passed to __call__ and doesn't seem to have a render_kw field like Field objects.\r\n\r\nThe reason I'm looking for this, is so that if i call form.validate() I can programmatically add a class to labels for invalid fields, to colour them red for instance.\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/466", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/466/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/466/events", "html_url": "https://github.com/wtforms/wtforms/issues/466", "id": 408675877, "node_id": "MDU6SXNzdWU0MDg2NzU4Nzc=", "number": 466, "title": "passing value null will cause TypeError", "user": {"login": "xiluoduyu", "id": 5248983, "node_id": "MDQ6VXNlcjUyNDg5ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5248983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiluoduyu", "html_url": "https://github.com/xiluoduyu", "followers_url": "https://api.github.com/users/xiluoduyu/followers", "following_url": "https://api.github.com/users/xiluoduyu/following{/other_user}", "gists_url": "https://api.github.com/users/xiluoduyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiluoduyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiluoduyu/subscriptions", "organizations_url": "https://api.github.com/users/xiluoduyu/orgs", "repos_url": "https://api.github.com/users/xiluoduyu/repos", "events_url": "https://api.github.com/users/xiluoduyu/events{/privacy}", "received_events_url": "https://api.github.com/users/xiluoduyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-11T08:28:24Z", "updated_at": "2019-02-12T03:56:36Z", "closed_at": "2019-02-12T03:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/wtforms/wtforms/blob/283b2803206825158834f1828bbf749c129b7c47/src/wtforms/fields/core.py#L673\r\n\r\nwhen i pass a null value, here will cause type error which won't be caught: TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'. \r\n![image](https://user-images.githubusercontent.com/5248983/52552106-0639f600-2e1a-11e9-89df-8eb37910f33f.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/464", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/464/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/464/events", "html_url": "https://github.com/wtforms/wtforms/issues/464", "id": 406296833, "node_id": "MDU6SXNzdWU0MDYyOTY4MzM=", "number": 464, "title": "Segmentation fault when SelectField choices is a list.", "user": {"login": "backwardspy", "id": 289746, "node_id": "MDQ6VXNlcjI4OTc0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/289746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/backwardspy", "html_url": "https://github.com/backwardspy", "followers_url": "https://api.github.com/users/backwardspy/followers", "following_url": "https://api.github.com/users/backwardspy/following{/other_user}", "gists_url": "https://api.github.com/users/backwardspy/gists{/gist_id}", "starred_url": "https://api.github.com/users/backwardspy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/backwardspy/subscriptions", "organizations_url": "https://api.github.com/users/backwardspy/orgs", "repos_url": "https://api.github.com/users/backwardspy/repos", "events_url": "https://api.github.com/users/backwardspy/events{/privacy}", "received_events_url": "https://api.github.com/users/backwardspy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-04T11:59:23Z", "updated_at": "2019-09-19T11:05:27Z", "closed_at": "2019-02-12T09:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Project dependencies:\r\n\r\n```\r\n$ cat Pipfile\r\n[[source]]\r\nname = \"pypi\"\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\n\r\n[dev-packages]\r\n\r\n[packages]\r\nflask = \"*\"\r\njinja2 = \"*\"\r\nwtforms = \"*\"\r\nflask-wtf = \"*\"\r\nrequests = \"*\"\r\n\r\n[requires]\r\npython_version = \"3.6\"\r\n```\r\n\r\nThe SelectField in question:\r\n\r\n```python\r\noption = SelectField(label='Option', choices=[\"a\", \"b\", \"c\"])\r\n```\r\n\r\nRunning the server then hitting the page in my browser:\r\n\r\n```\r\n$ flask run\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\n'flask run' terminated by signal SIGSEGV (Address boundary error)\r\n```\r\n\r\nChanging the choices to the correct format (list of tuples) fixes the error.\r\nI ran through the code in GDB but it's not clear where exactly the segfault occurs. It seems to appear somewhere amongst Jinja2 and/or WTForms.\r\n\r\nIs this directly related to WTForms, or should I open this issue on Flask-WTF/Jinja2 instead?\r\nIf the former, is it worth placing a type check on this field to prevent the list getting through to the templating engine?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/462", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/462/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/462/events", "html_url": "https://github.com/wtforms/wtforms/issues/462", "id": 405919025, "node_id": "MDU6SXNzdWU0MDU5MTkwMjU=", "number": 462, "title": "wtforms.validators.HostnameValidation does not allow underscores in the domain portion of the URL", "user": {"login": "camillser", "id": 10950920, "node_id": "MDQ6VXNlcjEwOTUwOTIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10950920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camillser", "html_url": "https://github.com/camillser", "followers_url": "https://api.github.com/users/camillser/followers", "following_url": "https://api.github.com/users/camillser/following{/other_user}", "gists_url": "https://api.github.com/users/camillser/gists{/gist_id}", "starred_url": "https://api.github.com/users/camillser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camillser/subscriptions", "organizations_url": "https://api.github.com/users/camillser/orgs", "repos_url": "https://api.github.com/users/camillser/repos", "events_url": "https://api.github.com/users/camillser/events{/privacy}", "received_events_url": "https://api.github.com/users/camillser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-02T00:00:44Z", "updated_at": "2019-12-18T14:08:59Z", "closed_at": "2019-12-18T14:08:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey, there seems to be a problem with the way the wtforms.validators.HostnameValidation is handling the underscore character. Underscores should be allowed in domain names per [1]. This problem was found using wtforms.validators.URL and that validator depends on wtforms.validators.HostnameValidation.\r\n\r\nReproducible example:\r\n```\r\nimport wtforms.validators\r\nvalidator = wtforms.validators.HostnameValidation()\r\nvalidator(\"a_b.example.org\")\r\n```\r\n\r\nThe result of the above code is that validator returns False. The expected result is True.\r\n\r\n[1] https://tools.ietf.org/html/rfc2181#section-11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/460", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/460/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/460/events", "html_url": "https://github.com/wtforms/wtforms/issues/460", "id": 397780447, "node_id": "MDU6SXNzdWUzOTc3ODA0NDc=", "number": 460, "title": "Booleanfield broken in 2.2", "user": {"login": "hyperknot", "id": 494223, "node_id": "MDQ6VXNlcjQ5NDIyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/494223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyperknot", "html_url": "https://github.com/hyperknot", "followers_url": "https://api.github.com/users/hyperknot/followers", "following_url": "https://api.github.com/users/hyperknot/following{/other_user}", "gists_url": "https://api.github.com/users/hyperknot/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyperknot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyperknot/subscriptions", "organizations_url": "https://api.github.com/users/hyperknot/orgs", "repos_url": "https://api.github.com/users/hyperknot/repos", "events_url": "https://api.github.com/users/hyperknot/events{/privacy}", "received_events_url": "https://api.github.com/users/hyperknot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-01-10T11:08:49Z", "updated_at": "2020-05-16T15:22:46Z", "closed_at": "2020-05-16T15:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Booleanfield's checked state got broken in 2.2\r\n\r\nIf an object's member variable is True, the generated field's data will be False. \r\n\r\n```python\r\n# user.verified is True\r\n\r\nclass UserEditForm(Form):\r\n    verified = BooleanField('verified')\r\n\r\nform = UserEditForm(obj=user)\r\nprint(user.verified) # True\r\nprint(form.verified.data) # False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/459", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/459/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/459/events", "html_url": "https://github.com/wtforms/wtforms/issues/459", "id": 395627376, "node_id": "MDU6SXNzdWUzOTU2MjczNzY=", "number": 459, "title": "wtforms 2.2.1 setup.py test Python 3 Syntax Error", "user": {"login": "skullgoblet1089", "id": 1649954, "node_id": "MDQ6VXNlcjE2NDk5NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1649954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skullgoblet1089", "html_url": "https://github.com/skullgoblet1089", "followers_url": "https://api.github.com/users/skullgoblet1089/followers", "following_url": "https://api.github.com/users/skullgoblet1089/following{/other_user}", "gists_url": "https://api.github.com/users/skullgoblet1089/gists{/gist_id}", "starred_url": "https://api.github.com/users/skullgoblet1089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skullgoblet1089/subscriptions", "organizations_url": "https://api.github.com/users/skullgoblet1089/orgs", "repos_url": "https://api.github.com/users/skullgoblet1089/repos", "events_url": "https://api.github.com/users/skullgoblet1089/events{/privacy}", "received_events_url": "https://api.github.com/users/skullgoblet1089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-03T16:02:11Z", "updated_at": "2019-01-03T17:28:52Z", "closed_at": "2019-01-03T16:17:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Background:\r\n- I am trying to make a local build of WTForms-2.2.1 using a Python 3.6.2 venv.\r\n- I was able to use the following command to build the project locally:\r\n```bash\r\npython setup.py build |& tee setup.py_build.out\r\n```\r\n- However the following command resulted in a syntax error:\r\n```bash\r\npython setup.py test |& tee setup.py_test.out\r\n...\r\nFile \"/u1/glafata/Downloads/WTForms-2.2.1/tests/ext_appengine/test_ndb.py\", line 59\r\n    print list(form.author.iter_choices())\r\nSyntaxError: invalid syntax\r\n```\r\n.out files:\r\n[setup.py_build.out.txt](https://github.com/wtforms/wtforms/files/2724410/setup.py_build.out.txt)\r\n[setup.py_test.out.txt](https://github.com/wtforms/wtforms/files/2724411/setup.py_test.out.txt)\r\n\r\nQuestions:\r\n- Can I assume local build is OK despite Syntax Error in /tests/ext_appengine/test_ndb.py line 59?\r\n- If not, should I use Python 2.7 to perform setup.py operations instead of Python 3? I assume the resulting build would then be compatible with Python 3.6?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/458", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/458/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/458/events", "html_url": "https://github.com/wtforms/wtforms/issues/458", "id": 395343628, "node_id": "MDU6SXNzdWUzOTUzNDM2Mjg=", "number": 458, "title": "DateField widget uses TextInput", "user": {"login": "yojimbosteel", "id": 1130961, "node_id": "MDQ6VXNlcjExMzA5NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1130961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yojimbosteel", "html_url": "https://github.com/yojimbosteel", "followers_url": "https://api.github.com/users/yojimbosteel/followers", "following_url": "https://api.github.com/users/yojimbosteel/following{/other_user}", "gists_url": "https://api.github.com/users/yojimbosteel/gists{/gist_id}", "starred_url": "https://api.github.com/users/yojimbosteel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yojimbosteel/subscriptions", "organizations_url": "https://api.github.com/users/yojimbosteel/orgs", "repos_url": "https://api.github.com/users/yojimbosteel/repos", "events_url": "https://api.github.com/users/yojimbosteel/events{/privacy}", "received_events_url": "https://api.github.com/users/yojimbosteel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-02T18:54:07Z", "updated_at": "2019-01-02T19:27:56Z", "closed_at": "2019-01-02T19:22:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feature suggestion. It would be nice to have the rendered HTML for DateField be type=date.\r\n\r\nI don't think there should be any browser comparability issues since according to the [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date) it \"degrades gracefully\" to type=text", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/455", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/455/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/455/events", "html_url": "https://github.com/wtforms/wtforms/issues/455", "id": 392149840, "node_id": "MDU6SXNzdWUzOTIxNDk4NDA=", "number": 455, "title": "box", "user": {"login": "DamMarin", "id": 30229938, "node_id": "MDQ6VXNlcjMwMjI5OTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/30229938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DamMarin", "html_url": "https://github.com/DamMarin", "followers_url": "https://api.github.com/users/DamMarin/followers", "following_url": "https://api.github.com/users/DamMarin/following{/other_user}", "gists_url": "https://api.github.com/users/DamMarin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DamMarin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DamMarin/subscriptions", "organizations_url": "https://api.github.com/users/DamMarin/orgs", "repos_url": "https://api.github.com/users/DamMarin/repos", "events_url": "https://api.github.com/users/DamMarin/events{/privacy}", "received_events_url": "https://api.github.com/users/DamMarin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T13:10:31Z", "updated_at": "2018-12-18T13:10:45Z", "closed_at": "2018-12-18T13:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/453", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/453/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/453/events", "html_url": "https://github.com/wtforms/wtforms/issues/453", "id": 384387469, "node_id": "MDU6SXNzdWUzODQzODc0Njk=", "number": 453, "title": "routing of multiple views on the same templates", "user": {"login": "ai-abdellah", "id": 7944733, "node_id": "MDQ6VXNlcjc5NDQ3MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7944733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ai-abdellah", "html_url": "https://github.com/ai-abdellah", "followers_url": "https://api.github.com/users/ai-abdellah/followers", "following_url": "https://api.github.com/users/ai-abdellah/following{/other_user}", "gists_url": "https://api.github.com/users/ai-abdellah/gists{/gist_id}", "starred_url": "https://api.github.com/users/ai-abdellah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ai-abdellah/subscriptions", "organizations_url": "https://api.github.com/users/ai-abdellah/orgs", "repos_url": "https://api.github.com/users/ai-abdellah/repos", "events_url": "https://api.github.com/users/ai-abdellah/events{/privacy}", "received_events_url": "https://api.github.com/users/ai-abdellah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T15:40:55Z", "updated_at": "2018-11-26T22:19:39Z", "closed_at": "2018-11-26T16:21:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello \r\ni need to point two views on a same template with different form names, i test with that but it does not work :\r\n\r\n```\r\n@home.route('/blogs/Article/<int:id>/<string:url_path>', methods=['GET'])\r\ndef show_article(id, url_path):\r\n    add_article = False\r\n    blog = Article.query.get_or_404(id)\r\n    form = ArticleForm(obj=blog)\r\n    if form.validate_on_submit():\r\n        blog.titre = form.titre.data\r\n        blog.url_path = form.url_path.data\r\n        blog.writ_by = form.writ_by.data\r\n        blog.body = form.body.data\r\n        blog.date_creation = form.date_creation.data\r\n        \r\n        db.session.commit()        \r\n        return redirect(url_for('home._blogs_'))    \r\n    return render_template('home/blog.html', action=\"Edit\", add_article=add_article, form=form, blog=blog, title=\"Edit blog\")\r\n\r\n```\r\n###Second views\r\n\r\n```\r\n@home.route(\"/article/<int:id_article>/comment\", methods=[\"POST\"])\r\ndef comment_post(id_article):    \r\n    article = Article.query.get_or_404(id_article)\r\n    form_comment = AddCommentForm(obj=obj)\r\n    if form_comment.validate_on_submit():\r\n        comment = Comment(\r\n            body_comment_article = form_comment.body_comment_article.data, \r\n            posted_name = form_comment.posted_name.data ,\r\n            date_creation =  datetime.datetime.now(),        \r\n            id_articles=article.id)\r\n        db.session.add(comment)\r\n        db.session.commit()        \r\n        flash(\"Your comment has been added to the article\", \"success\")\r\n        return redirect(url_for(\"home.show_article\", id=article.id , url_path=article.url_path))    \r\n    return render_template(\"/home/blog.html\", title=\"Comment Post\", add_comment=add_comment, form_comment=form_comment, article=article)\r\n\r\n```\r\nthe Code returns the following error:\r\n\r\nUndefinedError: 'form_comment' is undefined\r\n\r\ncould you please help me, thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/450", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/450/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/450/events", "html_url": "https://github.com/wtforms/wtforms/issues/450", "id": 365473444, "node_id": "MDU6SXNzdWUzNjU0NzM0NDQ=", "number": 450, "title": "DateTimeLocalField Parse Error", "user": {"login": "attack68", "id": 24256554, "node_id": "MDQ6VXNlcjI0MjU2NTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/24256554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/attack68", "html_url": "https://github.com/attack68", "followers_url": "https://api.github.com/users/attack68/followers", "following_url": "https://api.github.com/users/attack68/following{/other_user}", "gists_url": "https://api.github.com/users/attack68/gists{/gist_id}", "starred_url": "https://api.github.com/users/attack68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/attack68/subscriptions", "organizations_url": "https://api.github.com/users/attack68/orgs", "repos_url": "https://api.github.com/users/attack68/repos", "events_url": "https://api.github.com/users/attack68/events{/privacy}", "received_events_url": "https://api.github.com/users/attack68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T13:55:31Z", "updated_at": "2018-10-14T13:45:39Z", "closed_at": "2018-10-14T13:45:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The HTML5 DateTimeLocalField inherits from core.DateTimeField but I am not certain these express the same value formats.\r\n\r\nIn particular looking at the [Mozilla Docs datetime-local](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local) the instruction is clear: seconds are not supported and the string format is `\"%Y-%m%-%dT%H:%M\"`. Indeed this format is what I get when testing development in Chrome.\r\n\r\nIt fails at line 742 of fields/core.py (wtforms version 2.2.1) since the format is not correct:\r\n\r\n    def process_formdata(self, valuelist):\r\n        if valuelist:\r\n            date_str = ' '.join(valuelist)\r\n            try:\r\n                self.data = datetime.datetime.strptime(date_str, self.format)  #line: 742\r\n                # date_str = \"2018-10-10T12:12\"\r\n                # self.format = '%Y-%m-%d %H:%M:%S'\r\n                # -> returns: ValueError: time data '2018-10-10T12:12' does not match format '%Y-%m-%dT%H:%M:%S'\r\n            except ValueError:\r\n                self.data = None\r\n                raise ValueError(self.gettext('Not a valid datetime value'))\r\n\r\nOf course the downstream form validation then fails since my required input's data are set to `None`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/449", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/449/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/449/events", "html_url": "https://github.com/wtforms/wtforms/issues/449", "id": 364535074, "node_id": "MDU6SXNzdWUzNjQ1MzUwNzQ=", "number": 449, "title": "html_params and class and class_", "user": {"login": "xyzones", "id": 1039118, "node_id": "MDQ6VXNlcjEwMzkxMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1039118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xyzones", "html_url": "https://github.com/xyzones", "followers_url": "https://api.github.com/users/xyzones/followers", "following_url": "https://api.github.com/users/xyzones/following{/other_user}", "gists_url": "https://api.github.com/users/xyzones/gists{/gist_id}", "starred_url": "https://api.github.com/users/xyzones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xyzones/subscriptions", "organizations_url": "https://api.github.com/users/xyzones/orgs", "repos_url": "https://api.github.com/users/xyzones/repos", "events_url": "https://api.github.com/users/xyzones/events{/privacy}", "received_events_url": "https://api.github.com/users/xyzones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/wtforms/wtforms/milestones/2", "html_url": "https://github.com/wtforms/wtforms/milestone/2", "labels_url": "https://api.github.com/repos/wtforms/wtforms/milestones/2/labels", "id": 940791, "node_id": "MDk6TWlsZXN0b25lOTQwNzkx", "number": 2, "title": "3.0.0", "description": "See meta-ticket https://github.com/wtforms/wtforms/issues/154", "creator": {"login": "crast", "id": 1609368, "node_id": "MDQ6VXNlcjE2MDkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crast", "html_url": "https://github.com/crast", "followers_url": "https://api.github.com/users/crast/followers", "following_url": "https://api.github.com/users/crast/following{/other_user}", "gists_url": "https://api.github.com/users/crast/gists{/gist_id}", "starred_url": "https://api.github.com/users/crast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crast/subscriptions", "organizations_url": "https://api.github.com/users/crast/orgs", "repos_url": "https://api.github.com/users/crast/repos", "events_url": "https://api.github.com/users/crast/events{/privacy}", "received_events_url": "https://api.github.com/users/crast/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 25, "state": "open", "created_at": "2015-01-18T20:59:43Z", "updated_at": "2020-07-26T16:50:34Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-09-27T15:35:01Z", "updated_at": "2020-05-31T06:50:56Z", "closed_at": "2020-05-31T06:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a form created with model_form of flask_mongoengine.wtf\r\n\r\n```python\r\n    field_args = {\r\n      'bio': {'render_kw':{'class_':\"summernote\"}},\r\n    }\r\n    exclude = ['created_at','created_by']\r\n    form = model_form(Author,exclude=exclude,field_args=field_args)\r\n```\r\n\r\nI have a HTML \r\n```jinja\r\n {{ field(class='form-control', **kwargs) }}\r\n```\r\n\r\nfor which the TextArea widget correctly outputs \r\n```jinja\r\n<textarea class=\"form-control\" class=\"summernote\" id=\"bio\" name=\"bio\">text</textarea>\r\n```\r\n\r\nHowever all browsers are removing the extra class tag. It would be good to rewrite the html_params so that multiple class tags are combined into one. \r\n\r\n**expected output:**\r\n```jinja\r\n<textarea class=\"form-control summernote\" id=\"bio\" name=\"bio\">text</textarea>\r\n```\r\n\r\nI am using \r\n\r\nPackage | Version\r\n--------  | --------\r\nFlask | 1.0.2\r\nFlask-WTF |   0.14.2\r\nflask-mongoengine | 0.9.5\r\nWTForms |  2.2.1\r\n\r\nThanks,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/448", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/448/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/448/events", "html_url": "https://github.com/wtforms/wtforms/issues/448", "id": 361368204, "node_id": "MDU6SXNzdWUzNjEzNjgyMDQ=", "number": 448, "title": "Checking only first string symbol", "user": {"login": "dmytrostriletskyi", "id": 22666467, "node_id": "MDQ6VXNlcjIyNjY2NDY3", "avatar_url": "https://avatars2.githubusercontent.com/u/22666467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmytrostriletskyi", "html_url": "https://github.com/dmytrostriletskyi", "followers_url": "https://api.github.com/users/dmytrostriletskyi/followers", "following_url": "https://api.github.com/users/dmytrostriletskyi/following{/other_user}", "gists_url": "https://api.github.com/users/dmytrostriletskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmytrostriletskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmytrostriletskyi/subscriptions", "organizations_url": "https://api.github.com/users/dmytrostriletskyi/orgs", "repos_url": "https://api.github.com/users/dmytrostriletskyi/repos", "events_url": "https://api.github.com/users/dmytrostriletskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/dmytrostriletskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-18T15:43:09Z", "updated_at": "2020-04-18T23:48:54Z", "closed_at": "2020-04-18T23:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "While [checking](https://github.com/wtforms/wtforms/blob/master/src/wtforms/fields/core.py#L672) first symbol of the string value that would be converted to integer after validation, there will be no errors if validate the following argument:\r\n\r\n```python\r\nclass Form(Form):\r\n\r\n    id_ = IntegerField('Parent directory identifier')\r\n\r\n\r\nform = Form({\r\n    'id_: '2njadhuaibsd',\r\n})\r\nprint(form.validate(), form.errors) . # True {}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/447", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/447/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/447/events", "html_url": "https://github.com/wtforms/wtforms/issues/447", "id": 356139776, "node_id": "MDU6SXNzdWUzNTYxMzk3NzY=", "number": 447, "title": "QuerySelectMultipleField breaks when query has no data and query_factory is None", "user": {"login": "mattkiz", "id": 29780157, "node_id": "MDQ6VXNlcjI5NzgwMTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/29780157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkiz", "html_url": "https://github.com/mattkiz", "followers_url": "https://api.github.com/users/mattkiz/followers", "following_url": "https://api.github.com/users/mattkiz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkiz/subscriptions", "organizations_url": "https://api.github.com/users/mattkiz/orgs", "repos_url": "https://api.github.com/users/mattkiz/repos", "events_url": "https://api.github.com/users/mattkiz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-31T22:25:06Z", "updated_at": "2018-09-01T14:06:58Z", "closed_at": "2018-09-01T14:06:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was working with the QuerySelectMultipleField and noticed that when you set the query attribute to an empty list it will break. I think I tracked it down to a line in the wtforms.ext.sqlalchemy.fields module.\r\n` def _get_object_list(self):\r\n        if self._object_list is None:\r\n            query = self.query or self.query_factory()\r\n            get_pk = self.get_pk\r\n            self._object_list = list((text_type(get_pk(obj)), obj) for obj in query)\r\n        return self._object_list`\r\nI think it could be fixed by self.query or ... to  self.query is not None or ... because it would be more explicit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/445", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/445/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/445/events", "html_url": "https://github.com/wtforms/wtforms/issues/445", "id": 355631784, "node_id": "MDU6SXNzdWUzNTU2MzE3ODQ=", "number": 445, "title": "Validators do not raise IndexError when it catches a ValueError", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-30T15:14:02Z", "updated_at": "2020-04-21T14:19:10Z", "closed_at": "2020-04-21T14:19:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. When a validator accidentally raises a ZeroDivisionError, the is correctly raised, but when a validator accidentally raises a ValueError, an IndexError is raised instead. This makes the debugging a bit more difficult.\r\n\r\nHere is a script to reproduce the problem:\r\n\r\n```python\r\nimport wtforms\r\nimport werkzeug\r\n\r\n\r\ndef division_error_validator(form, field): raise ZeroDivisionError\r\nclass DivisionErrorForm(wtforms.Form):\r\n    foo = wtforms.StringField(validators=[division_error_validator])\r\n\r\ndef value_error_validator(form, field): raise ValueError\r\nclass ValueErrorForm(wtforms.Form):\r\n    foo = wtforms.StringField(validators=[value_error_validator])\r\n\r\n\r\ntry:\r\n    DivisionErrorForm(werkzeug.ImmutableMultiDict({\"bar\": \"baz\"})).validate()\r\nexcept ZeroDivisionError:\r\n    print(\"ZeroDivisionError OK\")\r\nexcept Exception as exc:\r\n    print(\"ZeroDivisionError KO - found %s\" % type(exc))\r\n\r\ntry:\r\n    ValueErrorForm(werkzeug.ImmutableMultiDict({\"bar\": \"baz\"})).validate()\r\nexcept ValueError:\r\n    print(\"ValueError OK\")\r\nexcept Exception as exc:\r\n    print(\"ValueError KO - found %s\" % type(exc))\r\n\r\n# prints\r\n# ZeroDivisionError OK\r\n# ValueError KO - found <type 'exceptions.IndexError'>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/444", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/444/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/444/events", "html_url": "https://github.com/wtforms/wtforms/issues/444", "id": 353744154, "node_id": "MDU6SXNzdWUzNTM3NDQxNTQ=", "number": 444, "title": "Treatment of empty ImmutableMultiDict on form init", "user": {"login": "anthonyjb", "id": 3046287, "node_id": "MDQ6VXNlcjMwNDYyODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3046287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonyjb", "html_url": "https://github.com/anthonyjb", "followers_url": "https://api.github.com/users/anthonyjb/followers", "following_url": "https://api.github.com/users/anthonyjb/following{/other_user}", "gists_url": "https://api.github.com/users/anthonyjb/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonyjb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonyjb/subscriptions", "organizations_url": "https://api.github.com/users/anthonyjb/orgs", "repos_url": "https://api.github.com/users/anthonyjb/repos", "events_url": "https://api.github.com/users/anthonyjb/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonyjb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T11:19:48Z", "updated_at": "2018-08-24T13:08:13Z", "closed_at": "2018-08-24T13:08:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I primarily use Flask as my web framework, when I initialize forms my code often looks something very similar to this:\r\n\r\n```python\r\n@members_only\r\ndef update_my_account(member):\r\n\r\n    # Initialize the about form\r\n    form = UpdateMyAccountForm(request.form, obj=member)\r\n\r\n    ...\r\n```\r\n\r\nPre 2.2.x if `request.form` returned an empty [`ImmutableMultiDict`](http://werkzeug.pocoo.org/docs/0.14/datastructures/#werkzeug.datastructures.ImmutableMultiDict) then the form fields would be updated with the values of the `obj`. So in my example above on a GET request my form would contain values from the `member` instance, however, post 2.2.x this behaviour has changed. Now the `ImmutableMultiDict` appears to be treated as an empty submission and on GET my form is field values are all empty.\r\n\r\nNow as we use WTForms and Flask as components in our own framework I wrap a significant amount of WTForms including the `Form` class so I was easily able to work around this with the following patch in my `__init__` method:\r\n\r\n```python\r\nclass BaseForm(Form):\r\n\r\n    def __init__(self, formdata=None, obj=None, prefix='', data=None, meta=None,\r\n            **kwargs):\r\n\r\n        # When wtforms when to 2.2.x if the `formdata` is sent as an empty\r\n        # ImmutableMultiDict then this is seen treated as an empty submission\r\n        # and overrides the values of obj, data and keywords. To avoid this we\r\n        # check for an empty `formdata` value and convert it to None.\r\n        if isinstance(formdata, ImmutableMultiDict) and len(formdata) == 0:\r\n            formdata = None\r\n\r\n        super().__init__(formdata, obj, prefix, data, meta, **kwargs)\r\n```\r\n\r\nI don't think this is a bug with WTForms but it is quite a big change in behaviour that can break functionality depending on how you initialise forms (I don't think this approach is unique to Flask), so I thought I'd raise it here and hope that the above patch might be useful to anyone else who stumbles across the same issue in their project and to also humbly request that a note regarding this is included in the release notes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/443", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/443/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/443/events", "html_url": "https://github.com/wtforms/wtforms/issues/443", "id": 353021187, "node_id": "MDU6SXNzdWUzNTMwMjExODc=", "number": 443, "title": "Possible errata in docs", "user": {"login": "pvilas", "id": 2797094, "node_id": "MDQ6VXNlcjI3OTcwOTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2797094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvilas", "html_url": "https://github.com/pvilas", "followers_url": "https://api.github.com/users/pvilas/followers", "following_url": "https://api.github.com/users/pvilas/following{/other_user}", "gists_url": "https://api.github.com/users/pvilas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvilas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvilas/subscriptions", "organizations_url": "https://api.github.com/users/pvilas/orgs", "repos_url": "https://api.github.com/users/pvilas/repos", "events_url": "https://api.github.com/users/pvilas/events{/privacy}", "received_events_url": "https://api.github.com/users/pvilas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-22T16:02:12Z", "updated_at": "2018-08-22T16:11:34Z", "closed_at": "2018-08-22T16:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In solving specific problems -> Rendering errors\r\n\r\n{% set css_class = 'has_error ' + kwargs.pop('class', '') %}\r\n\r\nPossibly should be\r\n{% set css_class = 'has_error ' + field.render_kw.pop('class', '') %}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/440", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/440/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/440/events", "html_url": "https://github.com/wtforms/wtforms/issues/440", "id": 347691386, "node_id": "MDU6SXNzdWUzNDc2OTEzODY=", "number": 440, "title": "How to add a custom HTML <input> attribute ?", "user": {"login": "xiapoy", "id": 12005605, "node_id": "MDQ6VXNlcjEyMDA1NjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/12005605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiapoy", "html_url": "https://github.com/xiapoy", "followers_url": "https://api.github.com/users/xiapoy/followers", "following_url": "https://api.github.com/users/xiapoy/following{/other_user}", "gists_url": "https://api.github.com/users/xiapoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiapoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiapoy/subscriptions", "organizations_url": "https://api.github.com/users/xiapoy/orgs", "repos_url": "https://api.github.com/users/xiapoy/repos", "events_url": "https://api.github.com/users/xiapoy/events{/privacy}", "received_events_url": "https://api.github.com/users/xiapoy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885105, "node_id": "MDU6TGFiZWw1NTg4NTEwNQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Question about WTForms behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-05T11:45:32Z", "updated_at": "2018-08-07T13:01:56Z", "closed_at": "2018-08-07T13:01:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am starting with wtforms, it's very convenient \ud83d\ude42\r\n\r\nI would like to add the [`pattern` attribute](https://www.w3schools.com/TAGS/att_input_pattern.asp) to a `StringField`, to add [autofocus](https://www.w3schools.com/TAGS/att_input_autofocus.asp)... How can I do that?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/439", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/439/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/439/events", "html_url": "https://github.com/wtforms/wtforms/issues/439", "id": 346423890, "node_id": "MDU6SXNzdWUzNDY0MjM4OTA=", "number": 439, "title": "SelectField injection protection", "user": {"login": "thekevingibbons", "id": 19863317, "node_id": "MDQ6VXNlcjE5ODYzMzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/19863317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thekevingibbons", "html_url": "https://github.com/thekevingibbons", "followers_url": "https://api.github.com/users/thekevingibbons/followers", "following_url": "https://api.github.com/users/thekevingibbons/following{/other_user}", "gists_url": "https://api.github.com/users/thekevingibbons/gists{/gist_id}", "starred_url": "https://api.github.com/users/thekevingibbons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thekevingibbons/subscriptions", "organizations_url": "https://api.github.com/users/thekevingibbons/orgs", "repos_url": "https://api.github.com/users/thekevingibbons/repos", "events_url": "https://api.github.com/users/thekevingibbons/events{/privacy}", "received_events_url": "https://api.github.com/users/thekevingibbons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T02:24:12Z", "updated_at": "2018-08-01T02:44:26Z", "closed_at": "2018-08-01T02:44:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In SelectFields (and by extension, RadioFields, which is where I ran across this), a user accessing a form can change the value attributes of the fields using Chrome Dev Tools or any similar tool in another browser. When they submit the form, it accepts the modified values without complaint and passes them to the back end. \r\n\r\nUnderstanding that we should always protect against this sort of thing in our back-end verifications, it would increase security to guard against allowing this. For fields where the user is expected to choose from a pre-defined list of options, there could be a check that the value(s) submitted for a given field is from the set of values that was passed to the front end in the first place. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/438", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/438/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/438/events", "html_url": "https://github.com/wtforms/wtforms/issues/438", "id": 346422764, "node_id": "MDU6SXNzdWUzNDY0MjI3NjQ=", "number": 438, "title": "Changing name causes data to silently not be returned ", "user": {"login": "thekevingibbons", "id": 19863317, "node_id": "MDQ6VXNlcjE5ODYzMzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/19863317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thekevingibbons", "html_url": "https://github.com/thekevingibbons", "followers_url": "https://api.github.com/users/thekevingibbons/followers", "following_url": "https://api.github.com/users/thekevingibbons/following{/other_user}", "gists_url": "https://api.github.com/users/thekevingibbons/gists{/gist_id}", "starred_url": "https://api.github.com/users/thekevingibbons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thekevingibbons/subscriptions", "organizations_url": "https://api.github.com/users/thekevingibbons/orgs", "repos_url": "https://api.github.com/users/thekevingibbons/repos", "events_url": "https://api.github.com/users/thekevingibbons/events{/privacy}", "received_events_url": "https://api.github.com/users/thekevingibbons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T02:17:30Z", "updated_at": "2020-05-16T15:25:00Z", "closed_at": "2020-05-16T15:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In wtforms/src/wtforms/fields/core.py (as of writing, lines 333-337):\r\n```\r\nif formdata is not None:\r\n    if self.name in formdata:\r\n          self.raw_data = formdata.getlist(self.name)\r\n    else:\r\n          self.raw_data = []\r\n```\r\nIf the code enters the else statement, it silently causes no data to return back from your form without giving an indication as to why. This can occur if you set the name attribute of a field after the instantiation of that field, for example, when one tries to create fields with dynamic names and values. \r\n\r\nSuggested fix: throw an error in the else statement that describes what causes your form not to return any data, something along the lines of \"The name of this field changed between instantiation and the form being submitted; this is not allowed\"\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/437", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/437/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/437/events", "html_url": "https://github.com/wtforms/wtforms/issues/437", "id": 346327465, "node_id": "MDU6SXNzdWUzNDYzMjc0NjU=", "number": 437, "title": "DateField returns none", "user": {"login": "jedieaston", "id": 21368066, "node_id": "MDQ6VXNlcjIxMzY4MDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/21368066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedieaston", "html_url": "https://github.com/jedieaston", "followers_url": "https://api.github.com/users/jedieaston/followers", "following_url": "https://api.github.com/users/jedieaston/following{/other_user}", "gists_url": "https://api.github.com/users/jedieaston/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedieaston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedieaston/subscriptions", "organizations_url": "https://api.github.com/users/jedieaston/orgs", "repos_url": "https://api.github.com/users/jedieaston/repos", "events_url": "https://api.github.com/users/jedieaston/events{/privacy}", "received_events_url": "https://api.github.com/users/jedieaston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T19:31:28Z", "updated_at": "2018-08-01T11:25:59Z", "closed_at": "2018-08-01T11:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n``from flask import Flask, render_template, request\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import StringField, PasswordField, SelectField, BooleanField\r\nfrom wtforms.validators import InputRequired, Length, DataRequired\r\nfrom wtforms.fields.html5 import DateField\r\n\r\nclass DateInput(FlaskForm):\r\n    dateRequest = DateField('DatePicker: ', validators=[DataRequired()], format=\"%d-%m-%y\")\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef index():\r\n    form = DateInput()\r\n    if form.validate_on_submit():\r\n        return redirect(\"/result\")\r\n    return render_template('index.html', form=form)\r\n@app.route('/result', methods=['GET', 'POST'])\r\ndef result():\r\n    form = DateInput()\r\n    return render_template('result.html', date = form.dateRequest.data)``\r\n```\r\n\r\n\r\nWith the above code, inputting anything into the date field doesn't put anything into form.dateRequest.data, meaning that it is equal to None, no matter what I try. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/436", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/436/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/436/events", "html_url": "https://github.com/wtforms/wtforms/issues/436", "id": 345491934, "node_id": "MDU6SXNzdWUzNDU0OTE5MzQ=", "number": 436, "title": "StringField default values not working on dynamic forms", "user": {"login": "Shellcat-Zero", "id": 5893998, "node_id": "MDQ6VXNlcjU4OTM5OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5893998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shellcat-Zero", "html_url": "https://github.com/Shellcat-Zero", "followers_url": "https://api.github.com/users/Shellcat-Zero/followers", "following_url": "https://api.github.com/users/Shellcat-Zero/following{/other_user}", "gists_url": "https://api.github.com/users/Shellcat-Zero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shellcat-Zero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shellcat-Zero/subscriptions", "organizations_url": "https://api.github.com/users/Shellcat-Zero/orgs", "repos_url": "https://api.github.com/users/Shellcat-Zero/repos", "events_url": "https://api.github.com/users/Shellcat-Zero/events{/privacy}", "received_events_url": "https://api.github.com/users/Shellcat-Zero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-29T01:20:42Z", "updated_at": "2018-08-04T23:41:09Z", "closed_at": "2018-07-29T15:55:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've had a hard time finding much documentation on how to properly handle dynamic forms, save for a few blog posts and stackoverflow issues.  All fields seem to work just fine except for StringField.  @davidism previously proposed multiple solutions to the issue, but I either misunderstood, or otherwise still failed to solve the problem.\r\n\r\nThe issue is that the default value does not get set, and results in an empty field. So in this case, it's `name.default`:\r\n```python\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import StringField, SelectField\r\nfrom wtforms.validators import DataRequired, Optional\r\n\r\ndef get_vals(var):\r\n    typs = var.p_typs\r\n    p_name = var.p_name\r\n    return typs,p_name\r\n\r\nclass NewForm(FlaskForm):\r\n    name = StringField('Name', validators=[DataRequired()])\r\n    typ1 = SelectField('Type', validators=[Optional()])\r\n\r\n    def __init__(self,var):\r\n        super(NewForm,self).__init__()\r\n        typs,p_name = get_vals(var)\r\n\r\n        self.typ1.choices = typs\r\n        self.name.default = p_name\r\n```\r\nThen, this is used in routes.py as:\r\n```python\r\n    var.p_name = 'test name'\r\n    var.p_typs = [(None, ' '), ('opt1', opt1'), ('opt2', 'opt2')]\r\n    form = NewForm(var)\r\n    if form.validate_on_submit():\r\n        var.name = form.name.data.upper()\r\n        var.typ1 = form.type1.data\r\n```\r\nThis is wtforms version 2.2.1, and using Python 2.7 (due to incomplete Python 3 coverage in other libraries used elsewhere in the code). \r\n\r\nI've tried calling super() after the variable assignments, which results in a traceback:\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask_login/utils.py\", line 261, in decorated_view\r\n    return func(*args, **kwargs)\r\n  File \"/home/myusername/Documents/myproject/quote/userint/app/routes.py\", line 177, in details\r\n    return render_template('details.html',  title='Part Details', form=form, grainxv=gxv, grainyv=gyv, tlen=tlen)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/templating.py\", line 135, in render_template\r\n    context, ctx.app)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/flask/templating.py\", line 117, in _render\r\n    rv = template.render(context)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/jinja2/environment.py\", line 1008, in render\r\n    return self.environment.handle_exception(exc_info, True)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/jinja2/environment.py\", line 780, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/myusername/Documents/myproject/quote/userint/app/templates/details.html\", line 1, in top-level template code\r\n    {% extends \"base.html\" %}\r\n  File \"/home/myusername/Documents/myproject/quote/userint/app/templates/base.html\", line 29, in top-level template code\r\n    {% block content %}{% endblock %}\r\n  File \"/home/myusername/Documents/myproject/quote/userint/app/templates/details.html\", line 27, in block \"content\"\r\n    {{ form.customer() }}\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/wtforms/fields/core.py\", line 155, in __call__\r\n    return self.meta.render_field(self, kwargs)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/wtforms/meta.py\", line 56, in render_field\r\n    return field.widget(field, **render_kw)\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/wtforms/widgets/core.py\", line 323, in __call__\r\n    for val, label, selected in field.iter_choices():\r\n  File \"/home/myusername/miniconda3/envs/p27/lib/python2.7/site-packages/wtforms/fields/core.py\", line 454, in iter_choices\r\n    for value, label in self.choices:\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\nAny help is much appreciated.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/432", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/432/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/432/events", "html_url": "https://github.com/wtforms/wtforms/issues/432", "id": 340064266, "node_id": "MDU6SXNzdWUzNDAwNjQyNjY=", "number": 432, "title": "InputRequired validator doesn't work for FieldList", "user": {"login": "nathan-steyer", "id": 25715469, "node_id": "MDQ6VXNlcjI1NzE1NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/25715469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathan-steyer", "html_url": "https://github.com/nathan-steyer", "followers_url": "https://api.github.com/users/nathan-steyer/followers", "following_url": "https://api.github.com/users/nathan-steyer/following{/other_user}", "gists_url": "https://api.github.com/users/nathan-steyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathan-steyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathan-steyer/subscriptions", "organizations_url": "https://api.github.com/users/nathan-steyer/orgs", "repos_url": "https://api.github.com/users/nathan-steyer/repos", "events_url": "https://api.github.com/users/nathan-steyer/events{/privacy}", "received_events_url": "https://api.github.com/users/nathan-steyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T01:56:58Z", "updated_at": "2018-07-12T15:58:54Z", "closed_at": "2018-07-11T02:37:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `InputRequired` validator checks the `raw_data` attribute of the field to determine if input was submitted, but this attribute is never populated for `FieldList`s. This causes validation to fail even when at least one valid list item is submitted.\r\n\r\nThis appears to be the same problem mentioned in [#220](https://github.com/wtforms/wtforms/issues/220).\r\n\r\nI think the validator could easily be modified to conditionally check the `entries` attribute for `FieldList`s, but I'm not sure if that is the preferred solution for this bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/431", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/431/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/431/events", "html_url": "https://github.com/wtforms/wtforms/issues/431", "id": 338907061, "node_id": "MDU6SXNzdWUzMzg5MDcwNjE=", "number": 431, "title": "It's not possible to overwrite the Label text with an empty string", "user": {"login": "danieldiekmeier", "id": 2098462, "node_id": "MDQ6VXNlcjIwOTg0NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2098462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieldiekmeier", "html_url": "https://github.com/danieldiekmeier", "followers_url": "https://api.github.com/users/danieldiekmeier/followers", "following_url": "https://api.github.com/users/danieldiekmeier/following{/other_user}", "gists_url": "https://api.github.com/users/danieldiekmeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieldiekmeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieldiekmeier/subscriptions", "organizations_url": "https://api.github.com/users/danieldiekmeier/orgs", "repos_url": "https://api.github.com/users/danieldiekmeier/repos", "events_url": "https://api.github.com/users/danieldiekmeier/events{/privacy}", "received_events_url": "https://api.github.com/users/danieldiekmeier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-06T11:37:47Z", "updated_at": "2018-07-11T12:55:57Z", "closed_at": "2018-07-11T07:48:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there! Long time WTForms user, first time ticketer.\r\n\r\nI want to generate an empty label for a checkbox (so that I can create a custom styling), but I noticed that I can not overwrite the label text using\r\n\r\n```\r\nfield.label(\"\")\r\n```\r\n\r\nbecause of the `text = escape(text or self.text)` here: https://github.com/wtforms/wtforms/blob/master/src/wtforms/fields/core.py#L461\r\n\r\nOf course, I can work around it by doing\r\n\r\n```\r\nfield.label(\" \")\r\n```\r\n\r\nwhich doesn't really make a difference to the generated HTML, so I'd be okay just doing that.\r\n\r\nIs this on purpose, or would you accept a PR that checks if it's a string first?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/426", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/426/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/426/events", "html_url": "https://github.com/wtforms/wtforms/issues/426", "id": 336205405, "node_id": "MDU6SXNzdWUzMzYyMDU0MDU=", "number": 426, "title": "on decimalfield", "user": {"login": "whb07", "id": 15861355, "node_id": "MDQ6VXNlcjE1ODYxMzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15861355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whb07", "html_url": "https://github.com/whb07", "followers_url": "https://api.github.com/users/whb07/followers", "following_url": "https://api.github.com/users/whb07/following{/other_user}", "gists_url": "https://api.github.com/users/whb07/gists{/gist_id}", "starred_url": "https://api.github.com/users/whb07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whb07/subscriptions", "organizations_url": "https://api.github.com/users/whb07/orgs", "repos_url": "https://api.github.com/users/whb07/repos", "events_url": "https://api.github.com/users/whb07/events{/privacy}", "received_events_url": "https://api.github.com/users/whb07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885105, "node_id": "MDU6TGFiZWw1NTg4NTEwNQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "Question about WTForms behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-27T12:20:55Z", "updated_at": "2018-06-27T21:17:44Z", "closed_at": "2018-06-27T21:17:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What's the purpose of DecimalField generally? Coercing possible floats and strings that might look like a `decimal.Decimal` into one? What about the 'places' arguments for it? Is that the spot at which truncation should happen or otherwise ? Any tips and comments would be helpful \ud83e\udd2f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/425", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/425/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/425/events", "html_url": "https://github.com/wtforms/wtforms/issues/425", "id": 335218119, "node_id": "MDU6SXNzdWUzMzUyMTgxMTk=", "number": 425, "title": "move tests under src/", "user": {"login": "whb07", "id": 15861355, "node_id": "MDQ6VXNlcjE1ODYxMzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15861355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whb07", "html_url": "https://github.com/whb07", "followers_url": "https://api.github.com/users/whb07/followers", "following_url": "https://api.github.com/users/whb07/following{/other_user}", "gists_url": "https://api.github.com/users/whb07/gists{/gist_id}", "starred_url": "https://api.github.com/users/whb07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whb07/subscriptions", "organizations_url": "https://api.github.com/users/whb07/orgs", "repos_url": "https://api.github.com/users/whb07/repos", "events_url": "https://api.github.com/users/whb07/events{/privacy}", "received_events_url": "https://api.github.com/users/whb07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-24T22:32:47Z", "updated_at": "2018-06-24T22:45:52Z", "closed_at": "2018-06-24T22:45:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seems that running the simple `pytest` command from the top level directory is broken post move to the src/ directory due to the imports being paths being changed. We can either move the tests/ directory under src/, or rename every import within the tests/ directory to account for the changes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/421", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/421/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/421/events", "html_url": "https://github.com/wtforms/wtforms/issues/421", "id": 335107052, "node_id": "MDU6SXNzdWUzMzUxMDcwNTI=", "number": 421, "title": "Can't assign values to QuerySelectMultipleField on form init", "user": {"login": "nikolaushuber", "id": 14205282, "node_id": "MDQ6VXNlcjE0MjA1Mjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/14205282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolaushuber", "html_url": "https://github.com/nikolaushuber", "followers_url": "https://api.github.com/users/nikolaushuber/followers", "following_url": "https://api.github.com/users/nikolaushuber/following{/other_user}", "gists_url": "https://api.github.com/users/nikolaushuber/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolaushuber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolaushuber/subscriptions", "organizations_url": "https://api.github.com/users/nikolaushuber/orgs", "repos_url": "https://api.github.com/users/nikolaushuber/repos", "events_url": "https://api.github.com/users/nikolaushuber/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolaushuber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-23T15:01:10Z", "updated_at": "2018-06-23T15:08:09Z", "closed_at": "2018-06-23T15:08:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't assign SQLAlechemy objects to a QuerySelectMultipleField in a custom init function.\r\n\r\ne.g.:\r\n\r\n```\r\ndef __init__(self, object=None, *args, **kwargs):\r\n     if object != None:\r\n          attr = object.some_attr                                # will return an array of SQLAlchemy objects\r\n          super(Form, self).__init__(attr=attr)\r\n          print(attr)\r\n          print(self.attr.data)\r\n```\r\n\r\nwill output:\r\n[Attr 1]\r\n[]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/419", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/419/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/419/events", "html_url": "https://github.com/wtforms/wtforms/issues/419", "id": 334888893, "node_id": "MDU6SXNzdWUzMzQ4ODg4OTM=", "number": 419, "title": "Consider to use pydocstyle alongside with Black", "user": {"login": "vald-phoenix", "id": 16718258, "node_id": "MDQ6VXNlcjE2NzE4MjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/16718258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vald-phoenix", "html_url": "https://github.com/vald-phoenix", "followers_url": "https://api.github.com/users/vald-phoenix/followers", "following_url": "https://api.github.com/users/vald-phoenix/following{/other_user}", "gists_url": "https://api.github.com/users/vald-phoenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/vald-phoenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vald-phoenix/subscriptions", "organizations_url": "https://api.github.com/users/vald-phoenix/orgs", "repos_url": "https://api.github.com/users/vald-phoenix/repos", "events_url": "https://api.github.com/users/vald-phoenix/events{/privacy}", "received_events_url": "https://api.github.com/users/vald-phoenix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885103, "node_id": "MDU6TGFiZWw1NTg4NTEwMw==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/enhancement", "name": "enhancement", "color": "9bce3b", "default": true, "description": "New feature, or existing feature improvement"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-22T14:00:46Z", "updated_at": "2018-06-22T20:46:40Z", "closed_at": "2018-06-22T20:46:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "More details you can find here: [pydocstyle](https://github.com/PyCQA/pydocstyle)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/416", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/416/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/416/events", "html_url": "https://github.com/wtforms/wtforms/issues/416", "id": 334694234, "node_id": "MDU6SXNzdWUzMzQ2OTQyMzQ=", "number": 416, "title": "Linter for repo", "user": {"login": "whb07", "id": 15861355, "node_id": "MDQ6VXNlcjE1ODYxMzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15861355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whb07", "html_url": "https://github.com/whb07", "followers_url": "https://api.github.com/users/whb07/followers", "following_url": "https://api.github.com/users/whb07/following{/other_user}", "gists_url": "https://api.github.com/users/whb07/gists{/gist_id}", "starred_url": "https://api.github.com/users/whb07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whb07/subscriptions", "organizations_url": "https://api.github.com/users/whb07/orgs", "repos_url": "https://api.github.com/users/whb07/repos", "events_url": "https://api.github.com/users/whb07/events{/privacy}", "received_events_url": "https://api.github.com/users/whb07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T23:28:54Z", "updated_at": "2018-06-24T05:14:13Z", "closed_at": "2018-06-24T05:14:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So as Black was introduced, I was thinking it might help to have a hook added as well to keep the syntax/style uniformly at pep8 guidelines.\r\n\r\nI\u2019ve worked with and seen other major repos use Flake8. Any thoughts?\r\n\r\nNow that Black is added, are we using the standard 88 char line length?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/408", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/408/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/408/events", "html_url": "https://github.com/wtforms/wtforms/issues/408", "id": 331731616, "node_id": "MDU6SXNzdWUzMzE3MzE2MTY=", "number": 408, "title": "Rewrite UnitTests to PyTest", "user": {"login": "jirivrany", "id": 2290566, "node_id": "MDQ6VXNlcjIyOTA1NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2290566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirivrany", "html_url": "https://github.com/jirivrany", "followers_url": "https://api.github.com/users/jirivrany/followers", "following_url": "https://api.github.com/users/jirivrany/following{/other_user}", "gists_url": "https://api.github.com/users/jirivrany/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirivrany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirivrany/subscriptions", "organizations_url": "https://api.github.com/users/jirivrany/orgs", "repos_url": "https://api.github.com/users/jirivrany/repos", "events_url": "https://api.github.com/users/jirivrany/events{/privacy}", "received_events_url": "https://api.github.com/users/jirivrany/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885103, "node_id": "MDU6TGFiZWw1NTg4NTEwMw==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/enhancement", "name": "enhancement", "color": "9bce3b", "default": true, "description": "New feature, or existing feature improvement"}], "state": "closed", "locked": false, "assignee": {"login": "jirivrany", "id": 2290566, "node_id": "MDQ6VXNlcjIyOTA1NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2290566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirivrany", "html_url": "https://github.com/jirivrany", "followers_url": "https://api.github.com/users/jirivrany/followers", "following_url": "https://api.github.com/users/jirivrany/following{/other_user}", "gists_url": "https://api.github.com/users/jirivrany/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirivrany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirivrany/subscriptions", "organizations_url": "https://api.github.com/users/jirivrany/orgs", "repos_url": "https://api.github.com/users/jirivrany/repos", "events_url": "https://api.github.com/users/jirivrany/events{/privacy}", "received_events_url": "https://api.github.com/users/jirivrany/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jirivrany", "id": 2290566, "node_id": "MDQ6VXNlcjIyOTA1NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2290566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jirivrany", "html_url": "https://github.com/jirivrany", "followers_url": "https://api.github.com/users/jirivrany/followers", "following_url": "https://api.github.com/users/jirivrany/following{/other_user}", "gists_url": "https://api.github.com/users/jirivrany/gists{/gist_id}", "starred_url": "https://api.github.com/users/jirivrany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jirivrany/subscriptions", "organizations_url": "https://api.github.com/users/jirivrany/orgs", "repos_url": "https://api.github.com/users/jirivrany/repos", "events_url": "https://api.github.com/users/jirivrany/events{/privacy}", "received_events_url": "https://api.github.com/users/jirivrany/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-06-12T19:59:05Z", "updated_at": "2020-03-06T16:50:10Z", "closed_at": "2020-03-06T16:50:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@davidism mentioned [here](https://github.com/wtforms/wtforms/issues/385) that there is a plan to rewrite tests to be using PyTest layout instead of UnitTest. I have some spare time so I can start work on that if it helps to the project. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/406", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/406/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/406/events", "html_url": "https://github.com/wtforms/wtforms/issues/406", "id": 331659816, "node_id": "MDU6SXNzdWUzMzE2NTk4MTY=", "number": 406, "title": "Allow non-boolean field flags", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885103, "node_id": "MDU6TGFiZWw1NTg4NTEwMw==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/enhancement", "name": "enhancement", "color": "9bce3b", "default": true, "description": "New feature, or existing feature improvement"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/wtforms/wtforms/milestones/2", "html_url": "https://github.com/wtforms/wtforms/milestone/2", "labels_url": "https://api.github.com/repos/wtforms/wtforms/milestones/2/labels", "id": 940791, "node_id": "MDk6TWlsZXN0b25lOTQwNzkx", "number": 2, "title": "3.0.0", "description": "See meta-ticket https://github.com/wtforms/wtforms/issues/154", "creator": {"login": "crast", "id": 1609368, "node_id": "MDQ6VXNlcjE2MDkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crast", "html_url": "https://github.com/crast", "followers_url": "https://api.github.com/users/crast/followers", "following_url": "https://api.github.com/users/crast/following{/other_user}", "gists_url": "https://api.github.com/users/crast/gists{/gist_id}", "starred_url": "https://api.github.com/users/crast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crast/subscriptions", "organizations_url": "https://api.github.com/users/crast/orgs", "repos_url": "https://api.github.com/users/crast/repos", "events_url": "https://api.github.com/users/crast/events{/privacy}", "received_events_url": "https://api.github.com/users/crast/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 25, "state": "open", "created_at": "2015-01-18T20:59:43Z", "updated_at": "2020-07-26T16:50:34Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2018-06-12T16:19:48Z", "updated_at": "2020-06-14T22:08:24Z", "closed_at": "2020-06-14T22:08:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I want to support more HTML validation attributes, but currently the flags only set their value to `True`. For things like `maxlength`, we need to set the actual value.\r\n\r\nMy idea is to allow `field_flags` to be a function which returns a dict, deprecating and eventually removing the old tuple behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/405", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/405/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/405/events", "html_url": "https://github.com/wtforms/wtforms/issues/405", "id": 331347468, "node_id": "MDU6SXNzdWUzMzEzNDc0Njg=", "number": 405, "title": "Consider using Coveralls to see how changes coverage of the project", "user": {"login": "vald-phoenix", "id": 16718258, "node_id": "MDQ6VXNlcjE2NzE4MjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/16718258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vald-phoenix", "html_url": "https://github.com/vald-phoenix", "followers_url": "https://api.github.com/users/vald-phoenix/followers", "following_url": "https://api.github.com/users/vald-phoenix/following{/other_user}", "gists_url": "https://api.github.com/users/vald-phoenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/vald-phoenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vald-phoenix/subscriptions", "organizations_url": "https://api.github.com/users/vald-phoenix/orgs", "repos_url": "https://api.github.com/users/vald-phoenix/repos", "events_url": "https://api.github.com/users/vald-phoenix/events{/privacy}", "received_events_url": "https://api.github.com/users/vald-phoenix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-11T20:57:20Z", "updated_at": "2018-06-11T21:37:53Z", "closed_at": "2018-06-11T21:37:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/401", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/401/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/401/events", "html_url": "https://github.com/wtforms/wtforms/issues/401", "id": 329966079, "node_id": "MDU6SXNzdWUzMjk5NjYwNzk=", "number": 401, "title": "wtforms 2.2 ignores default values", "user": {"login": "siwesam", "id": 23653812, "node_id": "MDQ6VXNlcjIzNjUzODEy", "avatar_url": "https://avatars3.githubusercontent.com/u/23653812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siwesam", "html_url": "https://github.com/siwesam", "followers_url": "https://api.github.com/users/siwesam/followers", "following_url": "https://api.github.com/users/siwesam/following{/other_user}", "gists_url": "https://api.github.com/users/siwesam/gists{/gist_id}", "starred_url": "https://api.github.com/users/siwesam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siwesam/subscriptions", "organizations_url": "https://api.github.com/users/siwesam/orgs", "repos_url": "https://api.github.com/users/siwesam/repos", "events_url": "https://api.github.com/users/siwesam/events{/privacy}", "received_events_url": "https://api.github.com/users/siwesam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55885101, "node_id": "MDU6TGFiZWw1NTg4NTEwMQ==", "url": "https://api.github.com/repos/wtforms/wtforms/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": "Unexpected behavior"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-06T17:39:14Z", "updated_at": "2020-04-18T13:11:50Z", "closed_at": "2018-06-07T21:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating from v2.1 to v2.2 the default values disappeared from my form.\r\nIs this a known issue?\r\nThe code is fairly simple:\r\n```python\r\nclass AForm(Form):\r\n    AField = StringField('field', [validators.Length(min=4, max=500)], default='value')\r\n\r\nform = AForm(request.form)\r\n\r\nreturn render_template(\"/index.html\", form=form)\r\n```\r\nIn v2.2 the form is empty and I don't see the value 'value' in the field", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/399", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/399/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/399/events", "html_url": "https://github.com/wtforms/wtforms/issues/399", "id": 329544119, "node_id": "MDU6SXNzdWUzMjk1NDQxMTk=", "number": 399, "title": "Use Black to reformat code", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-05T16:59:34Z", "updated_at": "2018-06-21T16:36:43Z", "closed_at": "2018-06-21T16:36:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/398", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/398/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/398/events", "html_url": "https://github.com/wtforms/wtforms/issues/398", "id": 329544021, "node_id": "MDU6SXNzdWUzMjk1NDQwMjE=", "number": 398, "title": "Stop using unicode_literals future", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-05T16:59:16Z", "updated_at": "2018-06-05T18:49:11Z", "closed_at": "2018-06-05T18:49:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/397", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/397/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/397/events", "html_url": "https://github.com/wtforms/wtforms/issues/397", "id": 329543934, "node_id": "MDU6SXNzdWUzMjk1NDM5MzQ=", "number": 397, "title": "Switch to src directory", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-05T16:59:00Z", "updated_at": "2018-06-24T15:36:45Z", "closed_at": "2018-06-24T15:36:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/396", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/396/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/396/events", "html_url": "https://github.com/wtforms/wtforms/issues/396", "id": 329543851, "node_id": "MDU6SXNzdWUzMjk1NDM4NTE=", "number": 396, "title": "Use MarkupSafe for escaping", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/wtforms/wtforms/milestones/2", "html_url": "https://github.com/wtforms/wtforms/milestone/2", "labels_url": "https://api.github.com/repos/wtforms/wtforms/milestones/2/labels", "id": 940791, "node_id": "MDk6TWlsZXN0b25lOTQwNzkx", "number": 2, "title": "3.0.0", "description": "See meta-ticket https://github.com/wtforms/wtforms/issues/154", "creator": {"login": "crast", "id": 1609368, "node_id": "MDQ6VXNlcjE2MDkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crast", "html_url": "https://github.com/crast", "followers_url": "https://api.github.com/users/crast/followers", "following_url": "https://api.github.com/users/crast/following{/other_user}", "gists_url": "https://api.github.com/users/crast/gists{/gist_id}", "starred_url": "https://api.github.com/users/crast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crast/subscriptions", "organizations_url": "https://api.github.com/users/crast/orgs", "repos_url": "https://api.github.com/users/crast/repos", "events_url": "https://api.github.com/users/crast/events{/privacy}", "received_events_url": "https://api.github.com/users/crast/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 25, "state": "open", "created_at": "2015-01-18T20:59:43Z", "updated_at": "2020-07-26T16:50:34Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2018-06-05T16:58:46Z", "updated_at": "2018-06-05T19:22:58Z", "closed_at": "2018-06-05T19:22:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wtforms/wtforms/issues/390", "repository_url": "https://api.github.com/repos/wtforms/wtforms", "labels_url": "https://api.github.com/repos/wtforms/wtforms/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/wtforms/wtforms/issues/390/comments", "events_url": "https://api.github.com/repos/wtforms/wtforms/issues/390/events", "html_url": "https://github.com/wtforms/wtforms/issues/390", "id": 322707595, "node_id": "MDU6SXNzdWUzMjI3MDc1OTU=", "number": 390, "title": "wtforms.IntegerField validation doesn't work for data", "user": {"login": "orsinium", "id": 9638362, "node_id": "MDQ6VXNlcjk2MzgzNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9638362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orsinium", "html_url": "https://github.com/orsinium", "followers_url": "https://api.github.com/users/orsinium/followers", "following_url": "https://api.github.com/users/orsinium/following{/other_user}", "gists_url": "https://api.github.com/users/orsinium/gists{/gist_id}", "starred_url": "https://api.github.com/users/orsinium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orsinium/subscriptions", "organizations_url": "https://api.github.com/users/orsinium/orgs", "repos_url": "https://api.github.com/users/orsinium/repos", "events_url": "https://api.github.com/users/orsinium/events{/privacy}", "received_events_url": "https://api.github.com/users/orsinium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T07:52:42Z", "updated_at": "2018-05-14T14:53:02Z", "closed_at": "2018-05-14T10:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "POC:\r\n\r\n```python3\r\nIn [1]: import wtforms\r\n\r\nIn [2]: class Form(wtforms.Form):\r\n   ...:     count = wtforms.IntegerField('Count')\r\n   ...:     \r\n\r\nIn [3]: Form(data={'count': 'lol'}).validate()\r\nOut[3]: True\r\n```\r\n\r\n\r\nSide effect:\r\n\r\n```python\r\nIn [1]: import wtforms\r\n\r\nIn [2]: class Form(wtforms.Form):\r\n   ...:     count = wtforms.IntegerField('Count', [wtforms.validators.NumberRange(min=0)])\r\n   ...:     \r\n\r\nIn [3]: Form(data={'count': 'lol'}).validate()\r\nTypeError: unorderable types: str() < int()\r\n```\r\n\r\nFull traceback:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-bff479959206> in <module>()\r\n----> 1 Form(data={'count': 'lol'}).validate()\r\n\r\n/usr/local/lib/python3.5/dist-packages/wtforms/form.py in validate(self)\r\n    308                 extra[name] = [inline]\r\n    309 \r\n--> 310         return super(Form, self).validate(extra)\r\n\r\n/usr/local/lib/python3.5/dist-packages/wtforms/form.py in validate(self, extra_validators)\r\n    150             else:\r\n    151                 extra = tuple()\r\n--> 152             if not field.validate(self, extra):\r\n    153                 success = False\r\n    154         return success\r\n\r\n/usr/local/lib/python3.5/dist-packages/wtforms/fields/core.py in validate(self, form, extra_validators)\r\n    202         if not stop_validation:\r\n    203             chain = itertools.chain(self.validators, extra_validators)\r\n--> 204             stop_validation = self._run_validation_chain(form, chain)\r\n    205 \r\n    206         # Call post_validate\r\n\r\n/usr/local/lib/python3.5/dist-packages/wtforms/fields/core.py in _run_validation_chain(self, form, validators)\r\n    222         for validator in validators:\r\n    223             try:\r\n--> 224                 validator(form, self)\r\n    225             except StopValidation as e:\r\n    226                 if e.args and e.args[0]:\r\n\r\n/usr/local/lib/python3.5/dist-packages/wtforms/validators.py in __call__(self, form, field)\r\n    130     def __call__(self, form, field):\r\n    131         data = field.data\r\n--> 132         if data is None or (self.min is not None and data < self.min) or \\\r\n    133                 (self.max is not None and data > self.max):\r\n    134             message = self.message\r\n\r\nTypeError: unorderable types: str() < int()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}