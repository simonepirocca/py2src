{"total_count": 166, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/702", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/702/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/702/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/702", "id": 676442617, "node_id": "MDU6SXNzdWU2NzY0NDI2MTc=", "number": 702, "title": "Can't use EnumField value in template", "user": {"login": "vmsp", "id": 3597979, "node_id": "MDQ6VXNlcjM1OTc5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3597979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmsp", "html_url": "https://github.com/vmsp", "followers_url": "https://api.github.com/users/vmsp/followers", "following_url": "https://api.github.com/users/vmsp/following{/other_user}", "gists_url": "https://api.github.com/users/vmsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmsp/subscriptions", "organizations_url": "https://api.github.com/users/vmsp/orgs", "repos_url": "https://api.github.com/users/vmsp/repos", "events_url": "https://api.github.com/users/vmsp/events{/privacy}", "received_events_url": "https://api.github.com/users/vmsp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T22:01:09Z", "updated_at": "2020-08-10T22:11:20Z", "closed_at": "2020-08-10T22:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following model:\r\n``` python\r\nclass MyModel(models.Model):\r\n    class State(models.TextChoices):\r\n        STATE_1 = 'state_1'\r\n        STATE_2 = 'state_2'\r\n\r\n    state = EnumField(choices=State.choices, default=State.STATE_1)\r\n```\r\n\r\nThis is working as expected and, in code, I can read a model's value:\r\n``` python\r\n>>> MyModel.objects.first().state\r\n'state_1'\r\n```\r\n\r\nWhen trying to do the same thing in a template:\r\n``` html\r\n<p>{{ my_model.state }}</p>\r\n```\r\nyields\r\n``` html\r\n<p></p>\r\n```\r\nwhen it should be:\r\n``` html\r\n<p>state_1</p>\r\n```\r\n\r\nDjango 3.1\r\nMySQL 5.7\r\ndjango-mysql 3.8.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/693", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/693/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/693/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/693", "id": 655926722, "node_id": "MDU6SXNzdWU2NTU5MjY3MjI=", "number": 693, "title": "Unable to use __boolean in filter in JSONField", "user": {"login": "zxalif", "id": 25203675, "node_id": "MDQ6VXNlcjI1MjAzNjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/25203675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxalif", "html_url": "https://github.com/zxalif", "followers_url": "https://api.github.com/users/zxalif/followers", "following_url": "https://api.github.com/users/zxalif/following{/other_user}", "gists_url": "https://api.github.com/users/zxalif/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxalif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxalif/subscriptions", "organizations_url": "https://api.github.com/users/zxalif/orgs", "repos_url": "https://api.github.com/users/zxalif/repos", "events_url": "https://api.github.com/users/zxalif/events{/privacy}", "received_events_url": "https://api.github.com/users/zxalif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T15:08:11Z", "updated_at": "2020-07-13T15:53:42Z", "closed_at": "2020-07-13T15:53:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: I have stored a boolean field in JSONField().\r\nthe field contains {\"is_old\": true}\r\nBut when I try to filter the field like\r\n```\r\nModel.objects.filter(extra_data__is_old=True)\r\n```\r\nit raise an error, \r\n\r\n```\r\ndjango.db.utils.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'JSON)))  LIMIT 21' at line 1\")\r\n```\r\n\r\nDjango Version: *Django 2.2*\r\n\r\nDatabase and version used: *mariadb:10.3.13*\r\n\r\nVersion: *Django-MySQL  3.7.1*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/687", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/687/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/687/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/687", "id": 654115974, "node_id": "MDU6SXNzdWU2NTQxMTU5NzQ=", "number": 687, "title": "Is iter_smart thread-safe?", "user": {"login": "HMaker", "id": 23155511, "node_id": "MDQ6VXNlcjIzMTU1NTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23155511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMaker", "html_url": "https://github.com/HMaker", "followers_url": "https://api.github.com/users/HMaker/followers", "following_url": "https://api.github.com/users/HMaker/following{/other_user}", "gists_url": "https://api.github.com/users/HMaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMaker/subscriptions", "organizations_url": "https://api.github.com/users/HMaker/orgs", "repos_url": "https://api.github.com/users/HMaker/repos", "events_url": "https://api.github.com/users/HMaker/events{/privacy}", "received_events_url": "https://api.github.com/users/HMaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-09T14:41:36Z", "updated_at": "2020-07-09T15:58:32Z", "closed_at": "2020-07-09T15:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running concurrent, each in its own thread, against the same model using queryset's `iter_smart()` method, but the query stuck there and never returns. When using `all()` it works as expected, but I don't want to load the entire table at same time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/677", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/677/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/677/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/677", "id": 643520385, "node_id": "MDU6SXNzdWU2NDM1MjAzODU=", "number": 677, "title": "ignore_index (and similar) aren't rewriting the query", "user": {"login": "kinghelix", "id": 10136303, "node_id": "MDQ6VXNlcjEwMTM2MzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/10136303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinghelix", "html_url": "https://github.com/kinghelix", "followers_url": "https://api.github.com/users/kinghelix/followers", "following_url": "https://api.github.com/users/kinghelix/following{/other_user}", "gists_url": "https://api.github.com/users/kinghelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinghelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinghelix/subscriptions", "organizations_url": "https://api.github.com/users/kinghelix/orgs", "repos_url": "https://api.github.com/users/kinghelix/repos", "events_url": "https://api.github.com/users/kinghelix/events{/privacy}", "received_events_url": "https://api.github.com/users/kinghelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-23T04:26:56Z", "updated_at": "2020-06-25T00:25:36Z", "closed_at": "2020-06-24T20:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to use ignore_index() from django-mysql to stop mysql from incorrectly using an inefficient index (and use a composite index instead etc...)\r\n\r\nI've got:\r\n\r\n```\r\npip:\r\nDjango==2.2.6\r\ndjango-mysql==3.7.0\r\nmysqlclient==1.4.4\r\n\r\nMySQL 5.6.47 via Brew\r\nmacOS High Sierra\r\n```\r\n```\r\n# in settings:\r\n\r\nINSTALLED_APPS.append(\"django_mysql\")\r\nDJANGO_MYSQL_REWRITE_QUERIES = True\r\n```\r\n\r\n```\r\n# in the view:\r\nfrom django_mysql.models import add_QuerySetMixin\r\nresults = FooBar.objects.all()\r\nresults = results.filter(foobar=somevariable)\r\nresults = add_QuerySetMixin(results)\r\nresults = results.ignore_index(\"main_foobar_created_at_abcd12345_uniq\")\r\nprint(results.query)\r\n```\r\n\r\nthen when I iterate over `results` or print the query, it doesn't work, instead I can see the commented hint which apparently never gets handled and the sql never gets the IGNORE INDEX stuff added:\r\n\r\n```\r\nprint(results.query)\r\n[...] AND (/*QueryRewrite':index=`main_foobar` IGNORE `main_foobar_created_at_abcd12345_uniq`*/1))\r\n```\r\n\r\nAlso, when i do `results.explain()` it confirms that the index I want to ignore isn't being ignored.\r\n\r\nI'm using approach number 4 in the installation docs (use `add_QuerySetMixin`) but I've tried the other approaches as well and I still have the same results. I've also tried `force_index` and `use_index` and they have the same results.\r\n\r\nAm I missing something? Is it broken? Thanks very much! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/672", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/672/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/672/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/672", "id": 636968571, "node_id": "MDU6SXNzdWU2MzY5Njg1NzE=", "number": 672, "title": "Using DJANGO_MYSQL_REWRITE_QUERIES in combination with django CACHALOT breaks invalidation", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T12:21:03Z", "updated_at": "2020-06-11T12:51:25Z", "closed_at": "2020-06-11T12:51:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really like to use django CACHALOT for a part of the website. It gave a big overall speedup.\r\n\r\nBut when I combine django CACHALOT with django-mysql, queries which trigger a query rewrite are not invalidated correctly. (for example when using \"use_index\").\r\n\r\nIs there any workaround for this?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/671", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/671/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/671/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/671", "id": 635993318, "node_id": "MDU6SXNzdWU2MzU5OTMzMTg=", "number": 671, "title": "Support  ON UPDATE CURRENT_TIMESTAMP ( what I'll to make improvement) #674", "user": {"login": "KimSoungRyoul", "id": 24240623, "node_id": "MDQ6VXNlcjI0MjQwNjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/24240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KimSoungRyoul", "html_url": "https://github.com/KimSoungRyoul", "followers_url": "https://api.github.com/users/KimSoungRyoul/followers", "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}", "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions", "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs", "repos_url": "https://api.github.com/users/KimSoungRyoul/repos", "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}", "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T07:14:15Z", "updated_at": "2020-08-03T02:20:13Z", "closed_at": "2020-08-03T02:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI want to use these Feature with Django\r\nhttps://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html\r\n\r\n---\r\n\r\n### To be\r\n~~~Python\r\nclass Abc(models.Model):\r\n    name = models.CharField(max_length=32)\r\n    modified_at = models.DateTimeField(auto_now=True)\r\n\r\n~~~\r\nif i execuete below Queryset \r\n~~~Python\r\nAbc.object.filter(id=1).update(name=\"qwer\")\r\n~~~\r\n`modified_at`Field Does Not be updated \r\n\r\n---\r\n\r\n### As Is\r\n\r\nMysql Support these Feature with DDL \r\nhttps://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html\r\n\r\n##### if you don't mind  , can I suggest  create DateTimeField with `on_update_current_timestamp` option   ?\r\n~~~Python\r\nfrom django_mysql import models as mysql_models\r\n\r\nclass Abc(models.Model):\r\n    name = models.CharField(max_length=32)\r\n    modified_at = mysql_models.DateTimeField(\r\n                          auto_now_add=True, \r\n                          on_update_current_timestamp=True # new param \"on_update_current_timestamp\"\r\n                  ) \r\n\r\n~~~\r\n\r\nwhen `on_update_current_timestamp` is True, \r\nDDL will be generated like a\r\n~~~SQL\r\ncreate table pratice_111_db.hello11_asdf\r\n(\r\n    name varchar(32) not null,\r\n    a_datetime datetime(6) not null ON UPDATE CURRENT_TIMESTAMP, # `on_update_current_timestamp=True\r\n    id         int auto_increment\r\n        primary key\r\n);\r\n~~~\r\n\r\n---\r\n#### I'll wait for your opinion. Thanks\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/657", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/657/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/657/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/657", "id": 621928808, "node_id": "MDU6SXNzdWU2MjE5Mjg4MDg=", "number": 657, "title": "RuntimeError: reentrant call inside <_io.BufferedWriter name='<stdout>'> with Smart Iterator", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-20T16:59:42Z", "updated_at": "2020-05-20T18:40:15Z", "closed_at": "2020-05-20T17:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Smart iterator on an ssh session with an external server and shell_plus using bpython and report_process=True gives RuntimeError: reentrant call inside <_io.BufferedWriter name='<stdout>'>\r\n\r\nDjango Version: 2.2.10, python 3.7.7\r\n\r\nDatabase and version used: not important\r\n\r\nVersion: django-mysql 3.4.0\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 117, in run_from_argv\r\n    return super(Command, self).run_from_argv(argv)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 551, in handle\r\n    shell()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 311, in run_bpython\r\n    embed(imported_objects, **kwargs)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/__init__.py\", line 41, in embed\r\n    return main(args, locals_, banner)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/curtsies.py\", line 191, in main\r\n    exit_value = repl.mainloop(True, paste)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/curtsies.py\", line 123, in mainloop\r\n    self.process_event_and_paint(e)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/curtsies.py\", line 101, in process_event_and_paint\r\n    scrolled = self.window.render_to_terminal(array, cursor_pos)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 431, in render_to_terminal\r\n    self.scroll_down()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 40, in scroll_down\r\n    self.write(SCROLL_DOWN)  # TODO will blessings do this?\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 44, in write\r\n    self.out_stream.flush()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/curtsiesfrontend/repl.py\", line 563, in sigwinch_handler\r\n    cursor_dy = self.get_cursor_vertical_diff()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/bpython/curtsies.py\", line 72, in get_cursor_vertical_diff\r\n    return self.window.get_cursor_vertical_diff()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 344, in get_cursor_vertical_diff\r\n    cursor_dy += self._get_cursor_vertical_diff_once()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 352, in _get_cursor_vertical_diff_once\r\n    row, col = self.get_cursor_position()\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 279, in get_cursor_position\r\n    self.write(query_cursor_position)\r\n  File \"/home/gabn88/webapps/test_production_v6/lib/python3.7/site-packages/curtsies/window.py\", line 44, in write\r\n    self.out_stream.flush()\r\nRuntimeError: reentrant call inside <_io.BufferedWriter name='<stdout>'>\r\n```\r\n\r\nIt only happens after a minute or so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/655", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/655/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/655/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/655", "id": 617850790, "node_id": "MDU6SXNzdWU2MTc4NTA3OTA=", "number": 655, "title": "Full Text Search and Unit Tests", "user": {"login": "gtalarico", "id": 9513968, "node_id": "MDQ6VXNlcjk1MTM5Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9513968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtalarico", "html_url": "https://github.com/gtalarico", "followers_url": "https://api.github.com/users/gtalarico/followers", "following_url": "https://api.github.com/users/gtalarico/following{/other_user}", "gists_url": "https://api.github.com/users/gtalarico/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtalarico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtalarico/subscriptions", "organizations_url": "https://api.github.com/users/gtalarico/orgs", "repos_url": "https://api.github.com/users/gtalarico/repos", "events_url": "https://api.github.com/users/gtalarico/events{/privacy}", "received_events_url": "https://api.github.com/users/gtalarico/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-14T01:08:14Z", "updated_at": "2020-05-15T08:10:29Z", "closed_at": "2020-05-14T13:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Summary\r\nManually implementation of FULLTEXT search support returns empty queryset when using Django TestCase.\r\n\r\n--- \r\n\r\nMy apologies in advance as this is likely not a bug, but I have been stuck on this for a while and was not able to get help on StackOverflow, Reddit, and Django Mailing list. \r\nYou are my last hope \ud83d\ude4f  \r\n\r\nMy [Stackoverflow question](https://stackoverflow.com/questions/61486725/django-mysql-fulltext-search-works-but-not-on-tests)  has all the details, but here is a summary:\r\n\r\nI added a `__search` lookup and FULLTEXT index manually to allow full text search:\r\n\r\n```python\r\n# models.py\r\n\r\nclass Search(models.Lookup):\r\n    lookup_name = \"search\"\r\n\r\n    def as_mysql(self, compiler, connection):\r\n        lhs, lhs_params = self.process_lhs(compiler, connection)\r\n        rhs, rhs_params = self.process_rhs(compiler, connection)\r\n        params = lhs_params + rhs_params\r\n        return f\"MATCH (%s) AGAINST (%s IN BOOLEAN MODE)\" % (lhs, rhs), params\r\n\r\n\r\nmodels.TextField.register_lookup(Search)\r\n```\r\n```python\r\n# Manually Modified to add FULLTEXT INDEX\r\n# Generated by Django 2.2 on 2020-04-28 03:41\r\n\r\nfrom django.db import migrations, models\r\n\r\n# Table details\r\ntable_name = \"by_api_casesnapshot\"\r\nfield_name = \"text\"\r\nindex_name = f\"{table_name}_{field_name}_index\"\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    dependencies = [(\"by_api\", \"0033_add_tag_color\")]\r\n\r\n    operations = [\r\n        migrations.CreateModel(...), # As auto-generated\r\n        migrations.RunSQL(\r\n            f\"CREATE FULLTEXT INDEX {index_name} ON {table_name} ({field_name})\",\r\n            f\"DROP INDEX {index_name} ON {table_name}\",\r\n        ),\r\n    ]\r\n```\r\n\r\n\r\nThe code above works perfectly - the index is created, and search mysql fulltext boolean actually works as expected.\r\n\r\n```\r\n# Tested a few searches and they all returned expected results\r\n>>> CaseSnapshot.objects.filter(text__search=\"+X\")\r\n<QuerySet [<CaseSnapshot pk=1>]>\r\n>>> CaseSnapshot.objects.filter(text__search=\"zzzz\")\r\n```\r\n\r\nThe issue is testing. When I tried to write tests, `__search` always returns an empty queryset.\r\nI actually noticed if I use `unittest.TestCase` instead of `django.test.TestCase` the test passes - could this be related to how django's test case wraps db transactions?\r\n\r\nOnce again, thank you for any help and apologies for asking a question here. \r\nHopefully this could help others in the future trying to implement FULLTEXT search themselves!\r\n\r\n```python\r\nclass TestModels(TestCase):\r\n    def test_search(self):\r\n        CaseSnapshot.objects.create(text=\"XXX\")\r\n\r\n        # Passes - using `__contains`\r\n        rv1 = CaseSnapshot.objects.filter(text__contains=\"XXX\")\r\n        self.assertEqual(rv1.count(), 1)\r\n\r\n        # Fails! - Should return 1, returns empty queryset\r\n        rv2 = CaseSnapshot.objects.filter(text__search=\"XXX\")\r\n        self.assertEqual(rv2.count(), 1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/654", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/654/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/654/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/654", "id": 616958908, "node_id": "MDU6SXNzdWU2MTY5NTg5MDg=", "number": 654, "title": "Make django's QuerySet.update().order_by('') work for MySQL", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-12T21:04:39Z", "updated_at": "2020-05-13T13:06:06Z", "closed_at": "2020-05-12T22:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Since MySQL does not support a defered unique constraint (like some other databases do), it would be great if this package could supply a way to update with an order_by clause. [More here](https://dev.mysql.com/doc/refman/5.7/en/update.html). For example the \r\n\r\n`UPDATE t SET id = id + 1 ORDER BY id DESC;`\r\n\r\nexample from the MySQL docs is currently not working with Django 2.2 and still gives an IntegrityError for the unique key. \r\n\r\nThe query that is executed is:\r\n```\r\nquery = 'UPDATE `model` SET `integerfield` = (`model`.`integerfield` + %s) WHERE (`model`.`date` = %s AND `model`.`integerfield` >= %s)'\r\nargs = (1, '2020-04-26',  2)\r\n```\r\nAs you can see the ORDER_BY, which should make it work, is omitted in the query, while it is in the Django code:\r\n\r\n```\r\n                qs_to_increase = self.get_indexing_queryset().filter(\r\n                    integerfield__gte=self.integerfield).order_by('-integerfield')\r\n\r\n                # apply changes after getting the qs!\r\n                qs_to_increase.update(integerfield=F('integerfield') + 1)\r\n\r\n```\r\nDjango Version: Django 2.2\r\n\r\nDatabase and version used: MySQL 8.0.20-0ubuntu0.19.10.1 \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/652", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/652/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/652/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/652", "id": 613051442, "node_id": "MDU6SXNzdWU2MTMwNTE0NDI=", "number": 652, "title": "Raise Exception with non-supported lookups", "user": {"login": "gtalarico", "id": 9513968, "node_id": "MDQ6VXNlcjk1MTM5Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9513968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtalarico", "html_url": "https://github.com/gtalarico", "followers_url": "https://api.github.com/users/gtalarico/followers", "following_url": "https://api.github.com/users/gtalarico/following{/other_user}", "gists_url": "https://api.github.com/users/gtalarico/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtalarico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtalarico/subscriptions", "organizations_url": "https://api.github.com/users/gtalarico/orgs", "repos_url": "https://api.github.com/users/gtalarico/repos", "events_url": "https://api.github.com/users/gtalarico/events{/privacy}", "received_events_url": "https://api.github.com/users/gtalarico/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T05:01:16Z", "updated_at": "2020-05-15T00:09:34Z", "closed_at": "2020-05-06T08:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Should Raise error if unknown lookup is provided.\r\n\r\nI understand some lookups are not provided.\r\nHowever, it's hard to tell which ones are supported. \r\nFurthermore, attempting to use non-registered lookups also fail silently.\r\nSee below - \r\n\r\n```python\r\n# works\r\nModelWithJsonField.objects.filter(jsonvalue=1)\r\nModelWithJsonField.objects.filter(jsonvalue__gt=1)\r\n\r\n# Raises exception, as expected\r\nModelWithJsonField.objects.filter(jsonvalue__icontains=1)\r\n\r\n# Returns Empty Query set - ie fails silently?\r\nModelWithJsonField.objects.filter(jsonvalue__contains=1)\r\nModelWithJsonField.objects.filter(jsonvalue__xxx=1)\r\n```\r\n\r\n#### Versions\r\nDjango==2.2\r\ndjango-mysql==3.3.0\r\n\r\nThank you for your work on this!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/649", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/649/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/649/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/649", "id": 607594461, "node_id": "MDU6SXNzdWU2MDc1OTQ0NjE=", "number": 649, "title": "Document how to use the extension with a custom Manager and custom QuerySet", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-27T14:25:38Z", "updated_at": "2020-04-28T16:19:21Z", "closed_at": "2020-04-28T14:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a custom Manager (based on models.Manager) and a custom QuerySet (based on models.QuerySet). \r\n\r\nIt is all setup like explained on the official docs: https://docs.djangoproject.com/en/3.0/topics/db/managers/#custom-managers\r\n\r\nWhen I add the QuerySetMixin on the QuerySet, I get \r\n\r\n`AttributeError: '.... Manager'  object has no attribute 'use_index'.\r\n\r\nWhat is the easiest way to add all methods to the Manager without manually typing them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/644", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/644/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/644/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/644", "id": 606730142, "node_id": "MDU6SXNzdWU2MDY3MzAxNDI=", "number": 644, "title": "Move query rewriting to database instrumentation", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-25T09:30:14Z", "updated_at": "2020-06-01T13:07:24Z", "closed_at": "2020-06-01T13:07:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: Rather than monkeypatching `CursorWrapper.execute`, use [database instrumentation](https://docs.djangoproject.com/en/3.0/topics/db/instrumentation/) to install the hook.\r\n\r\nThe setting can then always install it with the same technique as https://github.com/scoutapp/scout_apm_python/blob/639b7ac6a6a859e17db5c2e6b4d6ce2366ddd7a4/src/scout_apm/django/instruments/sql.py#L71 . And users can optionally install it only for certain code paths by installing it using `with connection.execute_wrapper(rewrite_queries):` (would need documenting).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/643", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/643/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/643/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/643", "id": 606684756, "node_id": "MDU6SXNzdWU2MDY2ODQ3NTY=", "number": 643, "title": "rewrite_query API stability/programmatic setting", "user": {"login": "jheld", "id": 828813, "node_id": "MDQ6VXNlcjgyODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/828813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jheld", "html_url": "https://github.com/jheld", "followers_url": "https://api.github.com/users/jheld/followers", "following_url": "https://api.github.com/users/jheld/following{/other_user}", "gists_url": "https://api.github.com/users/jheld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jheld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jheld/subscriptions", "organizations_url": "https://api.github.com/users/jheld/orgs", "repos_url": "https://api.github.com/users/jheld/repos", "events_url": "https://api.github.com/users/jheld/events{/privacy}", "received_events_url": "https://api.github.com/users/jheld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-25T04:15:37Z", "updated_at": "2020-04-25T09:34:44Z", "closed_at": "2020-04-25T09:34:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: *Consider making rewrite setting/flow programmatic*\r\n\r\n\r\n`DJANGO_MYSQL_REWRITE_QUERIES` setting is static. We do understand why that's the case historically (powerful but easy to turn off). After reading through the code it seems that the initial small overhead to each query is a string comparison to check for the rewrite marker in the sql, when the setting is on. Although the string check generally should be quite fast (sql queries in mysql in general cannot go above 1GB anyway, and most likely are much smaller than that), the overhead does indeed still pose a performance risk for larger queries (and it's not always known if/when they could occur).\r\n\r\nWe are considering attempting to add support to make the setting allowed to be a callable. So for instance, if we were to make a django request middleware (considering certain user permissions, or certain APIs), we could make the setting on/off during the execution of that particular request.\r\n\r\nNow, having read the source code for rewrite_query and the monkey_patches, I'm not certain that a middleware would be effective (perhaps you can verify my question).\r\n\r\nOn the other hand, middleware or not, if we could guarantee a sort of middle level public API for what the monkey patching does (checks the setting but also alters the sql if it matches the rewrite logic, based on wrapping the cursor's execute function), then that potentially could allow a ton of official flexibility for projects that wish to have programmatic access to rewrite, if they so choose, and without risking a breakage in compatibility with this library should something change (since it is only a somewhat exposed function, incidentally public, rather than explicitly).\r\n\r\nThere may be methods to hack around this (perceived limitation), but I am hoping that we can find a more official path that embraces flexibility, rather than being unaware that projects might be relying on implied behavior.\r\n\r\nWhat are your thoughts so far?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/629", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/629/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/629/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/629", "id": 585962299, "node_id": "MDU6SXNzdWU1ODU5NjIyOTk=", "number": 629, "title": "Suggestion : SQL alter after column. ", "user": {"login": "KimSoungRyoul", "id": 24240623, "node_id": "MDQ6VXNlcjI0MjQwNjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/24240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KimSoungRyoul", "html_url": "https://github.com/KimSoungRyoul", "followers_url": "https://api.github.com/users/KimSoungRyoul/followers", "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}", "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions", "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs", "repos_url": "https://api.github.com/users/KimSoungRyoul/repos", "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}", "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T06:22:24Z", "updated_at": "2020-03-26T07:40:07Z", "closed_at": "2020-03-26T07:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://dev.mysql.com/doc/refman/8.0/en/alter-table.html\r\n\r\nHello I need to use SQL:`after {column}`\r\n\r\nLike a\r\n`\r\nALTER TABLE aaa_model MODIFY COLUMN `bbb` varchar(32) default 'sdf' not null after aaa ;\r\n`\r\n\r\n#### if i develop this feature , Are you willing to review my code? \r\nI want to hear your thought.\r\n\r\nThank you\r\n\r\np.s. Thanks to you, I'm always using django-mysql  well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/628", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/628/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/628/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/628", "id": 585428677, "node_id": "MDU6SXNzdWU1ODU0Mjg2Nzc=", "number": 628, "title": "Why Don't You Support Django help_text  -> Mysql comments?", "user": {"login": "KimSoungRyoul", "id": 24240623, "node_id": "MDQ6VXNlcjI0MjQwNjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/24240623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KimSoungRyoul", "html_url": "https://github.com/KimSoungRyoul", "followers_url": "https://api.github.com/users/KimSoungRyoul/followers", "following_url": "https://api.github.com/users/KimSoungRyoul/following{/other_user}", "gists_url": "https://api.github.com/users/KimSoungRyoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/KimSoungRyoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KimSoungRyoul/subscriptions", "organizations_url": "https://api.github.com/users/KimSoungRyoul/orgs", "repos_url": "https://api.github.com/users/KimSoungRyoul/repos", "events_url": "https://api.github.com/users/KimSoungRyoul/events{/privacy}", "received_events_url": "https://api.github.com/users/KimSoungRyoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-21T04:37:29Z", "updated_at": "2020-03-23T05:12:40Z", "closed_at": "2020-03-21T09:18:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### as is \r\n~~~Python\r\nclass AModel(models.Model):\r\n\"\"\"\r\nthis is doc string\r\n\"\"\"\r\n     a_field = models.CharField(help_text=\"this is help text\", max_length=32, null=False)\r\n~~~\r\n-> `python manage.py makemigrations`\r\n~~~Python\r\nmigrations.CreateModel(\r\n            name=\"AModel\",\r\n           help_text=\"this is doc string\",\r\n            fields=[\r\n                (\"a_field\", models.CharField(max_length=32, help_text=\"this is help text\") ),\r\n            ]\r\n)\r\n~~~\r\n\r\n\r\n-> `python manage.py migrate`\r\n~~~SQL\r\ncreate table a_model\r\n(\r\n     a_field varchar(32) not null COMMENT 'this is help text',\r\n) comment 'this is doc string';\r\n~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/625", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/625/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/625/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/625", "id": 579799205, "node_id": "MDU6SXNzdWU1Nzk3OTkyMDU=", "number": 625, "title": "Failed to filter json filed is null", "user": {"login": "playma", "id": 7677470, "node_id": "MDQ6VXNlcjc2Nzc0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7677470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playma", "html_url": "https://github.com/playma", "followers_url": "https://api.github.com/users/playma/followers", "following_url": "https://api.github.com/users/playma/following{/other_user}", "gists_url": "https://api.github.com/users/playma/gists{/gist_id}", "starred_url": "https://api.github.com/users/playma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playma/subscriptions", "organizations_url": "https://api.github.com/users/playma/orgs", "repos_url": "https://api.github.com/users/playma/repos", "events_url": "https://api.github.com/users/playma/events{/privacy}", "received_events_url": "https://api.github.com/users/playma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-12T09:21:19Z", "updated_at": "2020-04-25T09:34:58Z", "closed_at": "2020-04-25T09:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to filter the rows for `blogId` filed is `null`\r\n```\r\nMymodel.objects.filter(extra_data__blogId=None)\r\n```\r\n\r\ndata\r\n```\r\n\r\n\"id\": 1325,\r\nextraData\": {\r\n                    \"id\": \"55b0bf3b2756dd3d2739ee66\",\r\n                    \"blogId\": null\r\n}\r\n\r\n```\r\n\r\nBut I failed..., is there anything wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/610", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/610/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/610/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/610", "id": 562246456, "node_id": "MDU6SXNzdWU1NjIyNDY0NTY=", "number": 610, "title": "Faster TransactionTestCase", "user": {"login": "jonatron", "id": 708534, "node_id": "MDQ6VXNlcjcwODUzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/708534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonatron", "html_url": "https://github.com/jonatron", "followers_url": "https://api.github.com/users/jonatron/followers", "following_url": "https://api.github.com/users/jonatron/following{/other_user}", "gists_url": "https://api.github.com/users/jonatron/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonatron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonatron/subscriptions", "organizations_url": "https://api.github.com/users/jonatron/orgs", "repos_url": "https://api.github.com/users/jonatron/repos", "events_url": "https://api.github.com/users/jonatron/events{/privacy}", "received_events_url": "https://api.github.com/users/jonatron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T21:57:35Z", "updated_at": "2020-02-14T10:31:58Z", "closed_at": "2020-02-14T10:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had an issue where `TransactionTestCase` was very slow with MySQL. Upon profiling, I found that `TRUNCATE`ing all tables was taking a significant amount of time. I wrote a `TransactionTestCase` SubClass to only `TRUNCATE` tables that aren't empty. Would you like a Pull Request for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/606", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/606/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/606/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/606", "id": 558555119, "node_id": "MDU6SXNzdWU1NTg1NTUxMTk=", "number": 606, "title": "Importing ABC directly from collections was removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-01T15:24:26Z", "updated_at": "2020-02-01T19:01:08Z", "closed_at": "2020-02-01T19:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/adamchainz/django-mysql/blob/bc4ff381d3a61af6dc448312205c2c19d9c5f97e/src/django_mysql/models/lookups.py#L126", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/602", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/602/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/602/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/602", "id": 544640741, "node_id": "MDU6SXNzdWU1NDQ2NDA3NDE=", "number": 602, "title": "Migrations fail on Django 2 while using Mysql 8 with JSONField", "user": {"login": "hgarcia101685", "id": 10132775, "node_id": "MDQ6VXNlcjEwMTMyNzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/10132775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgarcia101685", "html_url": "https://github.com/hgarcia101685", "followers_url": "https://api.github.com/users/hgarcia101685/followers", "following_url": "https://api.github.com/users/hgarcia101685/following{/other_user}", "gists_url": "https://api.github.com/users/hgarcia101685/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgarcia101685/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgarcia101685/subscriptions", "organizations_url": "https://api.github.com/users/hgarcia101685/orgs", "repos_url": "https://api.github.com/users/hgarcia101685/repos", "events_url": "https://api.github.com/users/hgarcia101685/events{/privacy}", "received_events_url": "https://api.github.com/users/hgarcia101685/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-02T16:07:51Z", "updated_at": "2020-01-02T16:11:05Z", "closed_at": "2020-01-02T16:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.2.4\r\n\r\nMYSQL 8.0.18\r\n\r\ndjango.db.utils.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'jsonb NOT NULL, `last_sold` datetime(6) NOT NULL, `created_at` datetime(6) NOT N' at line 1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/577", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/577/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/577/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/577", "id": 496808097, "node_id": "MDU6SXNzdWU0OTY4MDgwOTc=", "number": 577, "title": "ModuleNotFoundError: No module named '_mysql'", "user": {"login": "Birdi7", "id": 18901754, "node_id": "MDQ6VXNlcjE4OTAxNzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/18901754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Birdi7", "html_url": "https://github.com/Birdi7", "followers_url": "https://api.github.com/users/Birdi7/followers", "following_url": "https://api.github.com/users/Birdi7/following{/other_user}", "gists_url": "https://api.github.com/users/Birdi7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Birdi7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Birdi7/subscriptions", "organizations_url": "https://api.github.com/users/Birdi7/orgs", "repos_url": "https://api.github.com/users/Birdi7/repos", "events_url": "https://api.github.com/users/Birdi7/events{/privacy}", "received_events_url": "https://api.github.com/users/Birdi7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-22T17:26:32Z", "updated_at": "2019-09-22T17:30:14Z", "closed_at": "2019-09-22T17:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: \r\nHello. I am trying to use MySql with Django and this error occures inside the django_mysql/models/fields/enum.py file. [Here](https://pastebin.com/9Gy4T4YR) is the full traceback\r\n\r\n\r\nDjango Version: 2.0.2\r\n\r\nDatabase and version used: mysql: stable 8.0.17 (bottled). Latest from `brew install mysql`\r\n\r\nVersion: django-mysql==2.2.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/574", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/574/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/574/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/574", "id": 489462771, "node_id": "MDU6SXNzdWU0ODk0NjI3NzE=", "number": 574, "title": "Oficial connector ", "user": {"login": "fjbardelli", "id": 3776014, "node_id": "MDQ6VXNlcjM3NzYwMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3776014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fjbardelli", "html_url": "https://github.com/fjbardelli", "followers_url": "https://api.github.com/users/fjbardelli/followers", "following_url": "https://api.github.com/users/fjbardelli/following{/other_user}", "gists_url": "https://api.github.com/users/fjbardelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/fjbardelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fjbardelli/subscriptions", "organizations_url": "https://api.github.com/users/fjbardelli/orgs", "repos_url": "https://api.github.com/users/fjbardelli/repos", "events_url": "https://api.github.com/users/fjbardelli/events{/privacy}", "received_events_url": "https://api.github.com/users/fjbardelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-05T00:04:17Z", "updated_at": "2019-09-05T11:19:16Z", "closed_at": "2019-09-05T11:19:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The module is compatible with the official mysql version 8 connector, or can only be used with the mysql-client? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/565", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/565/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/565/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/565", "id": 464102866, "node_id": "MDU6SXNzdWU0NjQxMDI4NjY=", "number": 565, "title": "AttributeError from CharField in ListCharField", "user": {"login": "jotauses", "id": 15667206, "node_id": "MDQ6VXNlcjE1NjY3MjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/15667206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jotauses", "html_url": "https://github.com/jotauses", "followers_url": "https://api.github.com/users/jotauses/followers", "following_url": "https://api.github.com/users/jotauses/following{/other_user}", "gists_url": "https://api.github.com/users/jotauses/gists{/gist_id}", "starred_url": "https://api.github.com/users/jotauses/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jotauses/subscriptions", "organizations_url": "https://api.github.com/users/jotauses/orgs", "repos_url": "https://api.github.com/users/jotauses/repos", "events_url": "https://api.github.com/users/jotauses/events{/privacy}", "received_events_url": "https://api.github.com/users/jotauses/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-04T07:14:32Z", "updated_at": "2020-01-03T10:01:04Z", "closed_at": "2020-01-03T10:01:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I copy and paste the ListFields example and it return an error:\r\n\r\nfrom django.db.models import CharField, Model\r\nfrom django_mysql.models import ListCharField\r\n\r\nclass Person(Model):\r\n    name = CharField()\r\n    post_nominals = ListCharField(\r\n        base_field=CharField(max_length=10),\r\n        size=6,\r\n        max_length=(6 * 11)  # 6 * 10 character nominals, plus commas\r\n    )\r\n\r\n\r\nERROR: AttributeError: 'CharField' object has no attribute 'set_attributes_from_name'\r\n\r\nMySQL==5.7\r\nDjango==2.2.3\r\ndjango-mysql==3.2.0\r\nmysqlclient==1.4.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/564", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/564/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/564/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/564", "id": 463665519, "node_id": "MDU6SXNzdWU0NjM2NjU1MTk=", "number": 564, "title": "DynamicField system checks are are not compatible with azure MariaDB as a service", "user": {"login": "ivanprjcts", "id": 5663835, "node_id": "MDQ6VXNlcjU2NjM4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5663835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanprjcts", "html_url": "https://github.com/ivanprjcts", "followers_url": "https://api.github.com/users/ivanprjcts/followers", "following_url": "https://api.github.com/users/ivanprjcts/following{/other_user}", "gists_url": "https://api.github.com/users/ivanprjcts/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanprjcts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanprjcts/subscriptions", "organizations_url": "https://api.github.com/users/ivanprjcts/orgs", "repos_url": "https://api.github.com/users/ivanprjcts/repos", "events_url": "https://api.github.com/users/ivanprjcts/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanprjcts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T10:11:01Z", "updated_at": "2020-02-01T19:06:08Z", "closed_at": "2020-02-01T19:06:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *when I run python manage.py migrate using a MariaDB as-a-service in Azure django_mysql.E013 test is failing. This is because of a DynamicField check (_check_mariadb_version)*\r\n\r\nDjango Version: *Django 2.2.2*\r\n\r\nDatabase and version used:\r\n- Azure info\r\nType: Azure Database for MariaDB server\r\nMariaDB version: 10.2\r\nhttps://docs.microsoft.com/en-us/azure/mariadb/overview\r\n\r\n- From mysql status command\r\nServer:\t\t\tMySQL\r\nServer version:\t\t5.6.39.0 MariaDB Server\r\n\r\nVersion: *Django-MySQL 3.2.0*\r\n\r\n\r\nAfter running `python manage.py migrate`:\r\n\r\n`SystemCheckError: System check identified some issues:\r\nERRORS:\r\n<my_field>: (django_mysql.E013) MariaDB 10.0.1+ is required to use DynamicField\r\nHINT: At least one of your DB connections should be to MariaDB 10.0.1+`\r\n\r\nThe problem seems to be that get_server_info() method is returning 5.6.39.0, but 'MariaDB' is also expected to be in returned string.\r\n\r\n`with connection.temporary_connection():\r\n     server_info = connection.connection.get_server_info()\r\n is_mariadb = 'MariaDB' in server_info\r\n`\r\n\r\nFor now, I disabled this check in django settings.py\r\n\r\n`SILENCED_SYSTEM_CHECKS = [\"django_mysql.E013\"]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/560", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/560/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/560/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/560", "id": 456899447, "node_id": "MDU6SXNzdWU0NTY4OTk0NDc=", "number": 560, "title": "\"ValueError: Tried to release an unheld lock\" with a retried connection", "user": {"login": "stevejalim", "id": 101457, "node_id": "MDQ6VXNlcjEwMTQ1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/101457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevejalim", "html_url": "https://github.com/stevejalim", "followers_url": "https://api.github.com/users/stevejalim/followers", "following_url": "https://api.github.com/users/stevejalim/following{/other_user}", "gists_url": "https://api.github.com/users/stevejalim/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevejalim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevejalim/subscriptions", "organizations_url": "https://api.github.com/users/stevejalim/orgs", "repos_url": "https://api.github.com/users/stevejalim/repos", "events_url": "https://api.github.com/users/stevejalim/events{/privacy}", "received_events_url": "https://api.github.com/users/stevejalim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T12:09:20Z", "updated_at": "2019-06-17T12:57:25Z", "closed_at": "2019-06-17T12:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary:\r\n\r\nWhen using django-mysql with https://github.com/jd/tenacity to handle dropped connections, we're sometimes hitting the following issue when the DB connection goes away and is replaced by `tenacity`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/src/app/REDACTED/plusers/management/commands/REDACTED_report.py\", line 131, in handle\r\n    logger.info(\"All done - releasing lock\")\r\n  File \"/usr/local/lib/python3.7/site-packages/django_mysql/locks.py\", line 43, in __exit__\r\n    self.release()\r\n  File \"/usr/local/lib/python3.7/site-packages/django_mysql/locks.py\", line 66, in release\r\n    raise ValueError(\"Tried to release an unheld lock.\")\r\nValueError: Tried to release an unheld lock.```\r\n```\r\n\r\nI can replicate it locally by killing the connection from inside mysql while the reporting util is running. The reporting code picks up with a new connection, but then we get the lock error.\r\n\r\nI appreciate this falls into that awkward valley of two separate projects doing things, but from django-mysql's point of view is there anything we can do (eg config?) to keep django-mysql's Lock behaviour happy even if we're having to replace connections during a Lock? \r\n\r\nThanks very much!\r\nSteve\r\n\r\nDjango Version: 2.2\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: 3.0.0.post1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/550", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/550/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/550/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/550", "id": 443092736, "node_id": "MDU6SXNzdWU0NDMwOTI3MzY=", "number": 550, "title": "JSONField default with closure function Error", "user": {"login": "wangjiancn", "id": 37948697, "node_id": "MDQ6VXNlcjM3OTQ4Njk3", "avatar_url": "https://avatars2.githubusercontent.com/u/37948697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangjiancn", "html_url": "https://github.com/wangjiancn", "followers_url": "https://api.github.com/users/wangjiancn/followers", "following_url": "https://api.github.com/users/wangjiancn/following{/other_user}", "gists_url": "https://api.github.com/users/wangjiancn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangjiancn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangjiancn/subscriptions", "organizations_url": "https://api.github.com/users/wangjiancn/orgs", "repos_url": "https://api.github.com/users/wangjiancn/repos", "events_url": "https://api.github.com/users/wangjiancn/events{/privacy}", "received_events_url": "https://api.github.com/users/wangjiancn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-12T11:14:38Z", "updated_at": "2019-05-12T19:03:57Z", "closed_at": "2019-05-12T19:03:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *summarize the issue here*\r\n\r\n```\r\ndef get_acl(permisson_name, level='default'):\r\n    def acl():\r\n        acl_map = {\r\n            'read': DEFAULT_READ_ACL,\r\n            'write': DEFAULT_WRITE_ACL,\r\n            'update': DEFAULT_UPDATE_ACL,\r\n            'delete': DEFAULT_DELETE_ACL,\r\n            'row': DEFAULT_ROW_ACL\r\n        }\r\n        acl_item = acl_map.get(permisson_name, {})\r\n        if level == 'sys' and permisson_name == 'row':\r\n            acl_item['read'].update({'*': 0})\r\n            acl_item['write'].update({'*': 0})\r\n        elif level == 'sys':\r\n            acl_item.update({'*': 0})\r\n        return acl_item\r\n    return acl\r\n```\r\n\r\nread = JSONField(default=get_acl('read', level='sys'))\r\n\r\nIt raise ValueError: Could not find function acl in acl.default_acl.\r\n\r\nDjango Version:  2.2.1\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: *e.g. Django-MySQL 3.0.0.post1*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/543", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/543/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/543/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/543", "id": 435201873, "node_id": "MDU6SXNzdWU0MzUyMDE4NzM=", "number": 543, "title": "Officially support Django 2.2", "user": {"login": "pmontepagano", "id": 1820549, "node_id": "MDQ6VXNlcjE4MjA1NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1820549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmontepagano", "html_url": "https://github.com/pmontepagano", "followers_url": "https://api.github.com/users/pmontepagano/followers", "following_url": "https://api.github.com/users/pmontepagano/following{/other_user}", "gists_url": "https://api.github.com/users/pmontepagano/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmontepagano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmontepagano/subscriptions", "organizations_url": "https://api.github.com/users/pmontepagano/orgs", "repos_url": "https://api.github.com/users/pmontepagano/repos", "events_url": "https://api.github.com/users/pmontepagano/events{/privacy}", "received_events_url": "https://api.github.com/users/pmontepagano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-19T14:47:56Z", "updated_at": "2020-01-03T10:01:34Z", "closed_at": "2020-01-03T10:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Django 2.2 (LTS) is out and the docs don't mention if it is supported or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/531", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/531/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/531/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/531", "id": 415564475, "node_id": "MDU6SXNzdWU0MTU1NjQ0NzU=", "number": 531, "title": "InterfaceError: (2003, \"2003: Can't connect to MySQL server)", "user": {"login": "dhaval-mehta", "id": 20968146, "node_id": "MDQ6VXNlcjIwOTY4MTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/20968146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaval-mehta", "html_url": "https://github.com/dhaval-mehta", "followers_url": "https://api.github.com/users/dhaval-mehta/followers", "following_url": "https://api.github.com/users/dhaval-mehta/following{/other_user}", "gists_url": "https://api.github.com/users/dhaval-mehta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaval-mehta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaval-mehta/subscriptions", "organizations_url": "https://api.github.com/users/dhaval-mehta/orgs", "repos_url": "https://api.github.com/users/dhaval-mehta/repos", "events_url": "https://api.github.com/users/dhaval-mehta/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaval-mehta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-28T10:58:07Z", "updated_at": "2019-02-28T18:00:54Z", "closed_at": "2019-02-28T18:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: frequently I got error: InterfaceError: (2003, \"2003: Can't connect to MySQL server on '[HOST]:3306' (-3 Temporary failure in name resolution)\", None). Within few seconds entire system starts working normally automatically. \r\n\r\nDjango Version: 2.0.5\r\n\r\nDatabase and version used: MySQL 5.7.23-log\r\n\r\nVersion: 2.2.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/524", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/524/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/524/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/524", "id": 393924234, "node_id": "MDU6SXNzdWUzOTM5MjQyMzQ=", "number": 524, "title": "Error with JSONField and mysql-connector ", "user": {"login": "ebertti", "id": 140394, "node_id": "MDQ6VXNlcjE0MDM5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/140394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebertti", "html_url": "https://github.com/ebertti", "followers_url": "https://api.github.com/users/ebertti/followers", "following_url": "https://api.github.com/users/ebertti/following{/other_user}", "gists_url": "https://api.github.com/users/ebertti/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebertti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebertti/subscriptions", "organizations_url": "https://api.github.com/users/ebertti/orgs", "repos_url": "https://api.github.com/users/ebertti/repos", "events_url": "https://api.github.com/users/ebertti/events{/privacy}", "received_events_url": "https://api.github.com/users/ebertti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-24T19:38:12Z", "updated_at": "2020-04-26T16:50:03Z", "closed_at": "2020-04-26T16:50:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "model code:\r\n```python\r\nclass MyModel(models.Model):\r\n    name = models.CharField(max_length=35)\r\n    data_json = JSONField()\r\n\r\n```\r\n\r\n**makemigrations** output\r\n\r\n````python\r\n\r\nmigrations.CreateModel(\r\n    name='MyModel',\r\n    fields=[\r\n        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n        ('name', models.CharField(max_length=35)),\r\n        ('data_json', JSONField(default=dict)),\r\n])\r\n````\r\n\r\nError on running **migrate**\r\n\r\n```bash\r\n\r\ndjango.db.utils.ProgrammingError: BLOB, TEXT, GEOMETRY or JSON column 'data_json' can't have a default value\r\n\r\n```\r\n\r\n\r\n* Django Version: *Django 2.1.2*\r\n* Database and version used: *MySQL 5.7*\r\n* MySQL driver: *mysql-connector-python==8.0.13*\r\n* Version: *Django-MySQL==2.4.1*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/509", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/509/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/509/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/509", "id": 360291278, "node_id": "MDU6SXNzdWUzNjAyOTEyNzg=", "number": 509, "title": "ListTextField - CharField JSON return with 'u'", "user": {"login": "eliUni", "id": 39832255, "node_id": "MDQ6VXNlcjM5ODMyMjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/39832255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliUni", "html_url": "https://github.com/eliUni", "followers_url": "https://api.github.com/users/eliUni/followers", "following_url": "https://api.github.com/users/eliUni/following{/other_user}", "gists_url": "https://api.github.com/users/eliUni/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliUni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliUni/subscriptions", "organizations_url": "https://api.github.com/users/eliUni/orgs", "repos_url": "https://api.github.com/users/eliUni/repos", "events_url": "https://api.github.com/users/eliUni/events{/privacy}", "received_events_url": "https://api.github.com/users/eliUni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T12:49:56Z", "updated_at": "2018-09-14T21:19:55Z", "closed_at": "2018-09-14T21:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nI used django-mysql to define a field as following:\r\n\r\nListTextField(\r\n        base_field=CharField(max_length=150),\r\n        size=20,  # maximum of 20 ids in list\r\n        null=True, blank=True\r\n\r\nbut in the JSON  reprensation i have follwoing unicode : [u'cysacmp']\r\n\r\nhow can i use it without the 'u'?\r\n\r\nDjango Version: 1.11\r\nDatabase and version used:  MySQL 5.7\r\nPython : 2.7\r\nVersion: django-mysql==2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/507", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/507/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/507/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/507", "id": 357696109, "node_id": "MDU6SXNzdWUzNTc2OTYxMDk=", "number": 507, "title": "Update documentation on Lock", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-06T14:57:49Z", "updated_at": "2020-03-20T14:48:12Z", "closed_at": "2020-03-20T14:48:12Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: Multiple locks are supported on MySQL 5.7 and MariaDB 10.0+. Also MariaDB at least made it re-entrant, and supports microseconds on timeout.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/505", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/505/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/505/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/505", "id": 354661816, "node_id": "MDU6SXNzdWUzNTQ2NjE4MTY=", "number": 505, "title": "For ListTextField no ForeignKey can be used for the base field?", "user": {"login": "eliUni", "id": 39832255, "node_id": "MDQ6VXNlcjM5ODMyMjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/39832255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliUni", "html_url": "https://github.com/eliUni", "followers_url": "https://api.github.com/users/eliUni/followers", "following_url": "https://api.github.com/users/eliUni/following{/other_user}", "gists_url": "https://api.github.com/users/eliUni/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliUni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliUni/subscriptions", "organizations_url": "https://api.github.com/users/eliUni/orgs", "repos_url": "https://api.github.com/users/eliUni/repos", "events_url": "https://api.github.com/users/eliUni/events{/privacy}", "received_events_url": "https://api.github.com/users/eliUni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-28T10:11:13Z", "updated_at": "2018-08-28T10:26:58Z", "closed_at": "2018-08-28T10:26:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi,\r\n\r\nI would like to define a ListTextField based on a foreign key. The foreign key is a CharField.\r\nBut I receive the following error:\r\n\r\n**Base field for list must be a CharField or IntegerField.**\r\n\r\nDjango Version: Django==1.11.10\r\n\r\nDatabase and version used: mysql  Ver 14.14 Distrib 5.7.21, for Win64 (x86_64)\r\n\r\nVersion: django-mysql==2.3.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/500", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/500/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/500/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/500", "id": 350008442, "node_id": "MDU6SXNzdWUzNTAwMDg0NDI=", "number": 500, "title": "Document that SQL_CACHE query hint isn't so useful", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-13T12:27:41Z", "updated_at": "2020-04-26T20:40:43Z", "closed_at": "2020-04-26T20:40:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As discussed in #498 it's disabled by default on MySQL 5.7+ (I think) and MariaDB (versions?), this should be documented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/498", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/498/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/498/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/498", "id": 349491474, "node_id": "MDU6SXNzdWUzNDk0OTE0NzQ=", "number": 498, "title": "Not  working  (/*QueryRewrite':SQL_CACHE*/1) query  hint", "user": {"login": "ismt", "id": 1578946, "node_id": "MDQ6VXNlcjE1Nzg5NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1578946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ismt", "html_url": "https://github.com/ismt", "followers_url": "https://api.github.com/users/ismt/followers", "following_url": "https://api.github.com/users/ismt/following{/other_user}", "gists_url": "https://api.github.com/users/ismt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ismt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ismt/subscriptions", "organizations_url": "https://api.github.com/users/ismt/orgs", "repos_url": "https://api.github.com/users/ismt/repos", "events_url": "https://api.github.com/users/ismt/events{/privacy}", "received_events_url": "https://api.github.com/users/ismt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-10T12:09:25Z", "updated_at": "2018-08-13T12:26:43Z", "closed_at": "2018-08-13T12:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n  \r\nSummary:\r\nThis query take no effect,  mysql  variable  Qcache_queries_in_cache  not  changed  (i  restarted  mariadb  before  test  )\r\n```mysql\r\nSELECT * FROM test WHERE ((/*QueryRewrite':SQL_CACHE*/1) AND id=1 )\r\n```\r\nbut  this  works,  Qcache_queries_in_cache  increased  by  one  \r\n```mysql\r\nSELECT SQL_CACHE * FROM test WHERE id=1\r\n```\r\nI don't know if this is a bug, but obviously query hints doesn't work\r\n\r\nmysql  config  \r\n\r\n> query_cache_size=50M\r\n> query_cache_limit=50K\r\n> query_cache_type=DEMAND\r\n\r\nHints  enabled  from  example  \r\n\r\n```python3\r\nfrom mythings import MyBaseModel\r\nfrom django_mysql.models import QuerySet\r\n\r\nclass MySuperDuperModel(MyBaseModel):\r\n    objects = QuerySet.as_manager()\r\n```\r\nDjango Version: 1.11.15\r\n\r\nDatabase and version used: MariaDB 10.1.33\r\n\r\nVersion:  2.4.0\r\n\r\nexample  table  in  attach  [t.zip](https://github.com/adamchainz/django-mysql/files/2277801/t.zip)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/496", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/496/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/496/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/496", "id": 346654412, "node_id": "MDU6SXNzdWUzNDY2NTQ0MTI=", "number": 496, "title": "Officially support Django 2.1", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-01T15:36:18Z", "updated_at": "2018-08-18T12:26:01Z", "closed_at": "2018-08-18T12:26:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Testing is passing with 2.1, document and release if any changes required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/494", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/494/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/494/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/494", "id": 345166884, "node_id": "MDU6SXNzdWUzNDUxNjY4ODQ=", "number": 494, "title": "Change cache migration to not need sqlparse", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T10:02:14Z", "updated_at": "2020-02-01T19:06:47Z", "closed_at": "2020-02-01T19:06:46Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: The [cache docs](https://django-mysql.readthedocs.io/en/latest/cache.html) call out that the generated migration needs `sqlparse` to run. This needn't be the case, if the SQL were split up into individual statements, which is straightforward for us to do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/485", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/485/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/485/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/485", "id": 333420308, "node_id": "MDU6SXNzdWUzMzM0MjAzMDg=", "number": 485, "title": "dangling connection created during system check may become unusable", "user": {"login": "Naitreey", "id": 10528297, "node_id": "MDQ6VXNlcjEwNTI4Mjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/10528297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naitreey", "html_url": "https://github.com/Naitreey", "followers_url": "https://api.github.com/users/Naitreey/followers", "following_url": "https://api.github.com/users/Naitreey/following{/other_user}", "gists_url": "https://api.github.com/users/Naitreey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naitreey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naitreey/subscriptions", "organizations_url": "https://api.github.com/users/Naitreey/orgs", "repos_url": "https://api.github.com/users/Naitreey/repos", "events_url": "https://api.github.com/users/Naitreey/events{/privacy}", "received_events_url": "https://api.github.com/users/Naitreey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-18T20:20:44Z", "updated_at": "2018-06-19T09:49:04Z", "closed_at": "2018-06-19T09:49:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Summary*: mysql connection created during system check is not closed timely. This connection might (mysteriously) become unusable afterwards (for reason I could not fully understand for now), which blocks the database access in application logic.\r\n\r\n*Description*: I'm using django with celery. Today I noticed that any task that accesses database by Django ORM just hangs forever (i.e. they only start but never finish). After some digging I realized it's database connection that blocks forever and never comes back.\r\n\r\nAfter another really painful debugging process, I figured out that, during django's system checking process, django-mysql created a persistent database connection rather than a temporary one, thus get re-used in application code. But somehow its connection is dropped, which causes any code that implicitly depends on it blocks forever.\r\n\r\nSpecifically, I think the following code in `django_mysql/checks.py` should use a `BaseDatabaseWrapper.temporary_connection()`, therefore ensure connection is closed cleanly afterwards.\r\n\r\n```python\r\ndef check_variables(app_configs, **kwargs):\r\n    errors = []\r\n\r\n    for alias, connection in mysql_connections():\r\n        with connection.cursor() as cursor: # connection.temporary_connection()\r\n            cursor.execute(\"\"\"SELECT @@sql_mode,\r\n                                     @@innodb_strict_mode,\r\n                                     @@character_set_connection\"\"\")\r\n            # ...\r\n```\r\n\r\n(Sorry if this poor bug report seems in a hurry, I'm really tired (it's 4 AM my brain isn't working...) )\r\n\r\n*Django Version*: Django 2.0.6\r\n\r\n*Database and version used*: mysqld  Ver 5.7.22 for Linux on x86_64 (MySQL Community Server (GPL))\r\n\r\n*Version*: Django-MySQL 2.2.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/482", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/482/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/482/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/482", "id": 331219513, "node_id": "MDU6SXNzdWUzMzEyMTk1MTM=", "number": 482, "title": "Add Mathematical Functions", "user": {"login": "denisiko", "id": 21336548, "node_id": "MDQ6VXNlcjIxMzM2NTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/21336548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisiko", "html_url": "https://github.com/denisiko", "followers_url": "https://api.github.com/users/denisiko/followers", "following_url": "https://api.github.com/users/denisiko/following{/other_user}", "gists_url": "https://api.github.com/users/denisiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisiko/subscriptions", "organizations_url": "https://api.github.com/users/denisiko/orgs", "repos_url": "https://api.github.com/users/denisiko/repos", "events_url": "https://api.github.com/users/denisiko/events{/privacy}", "received_events_url": "https://api.github.com/users/denisiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-11T14:43:24Z", "updated_at": "2018-06-21T08:59:49Z", "closed_at": "2018-06-11T14:47:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\n\r\nThere are already some numeric functions provided, like `Abs()`, `Ceiling()` and `Round()`. A lot of MySQL's mathematical functions are missing though, like `POW()` or `RADIANS()` (see [list of MySQL's mathematical functions](https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html)).\r\n\r\nWould be nice to have them inside functions.py so you could easily import them instead of defining them for yourself. Although there is already a [Django PR](https://github.com/django/django/pull/9622) for this, it doesn't seem to be pushed soon.\r\n\r\n# Configuration\r\n\r\nDjango Version: Django 2.0.0\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: Django-MySQL 2.2.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/480", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/480/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/480/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/480", "id": 330196843, "node_id": "MDU6SXNzdWUzMzAxOTY4NDM=", "number": 480, "title": "DB index is not used on some queries", "user": {"login": "enono78", "id": 3415957, "node_id": "MDQ6VXNlcjM0MTU5NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3415957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enono78", "html_url": "https://github.com/enono78", "followers_url": "https://api.github.com/users/enono78/followers", "following_url": "https://api.github.com/users/enono78/following{/other_user}", "gists_url": "https://api.github.com/users/enono78/gists{/gist_id}", "starred_url": "https://api.github.com/users/enono78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enono78/subscriptions", "organizations_url": "https://api.github.com/users/enono78/orgs", "repos_url": "https://api.github.com/users/enono78/repos", "events_url": "https://api.github.com/users/enono78/events{/privacy}", "received_events_url": "https://api.github.com/users/enono78/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-07T09:47:12Z", "updated_at": "2020-04-16T09:27:28Z", "closed_at": "2020-04-16T07:38:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Summary: \r\n\r\ndjango-mysql allows to perform a query on JSON encapsulated fields. To prevent performance issues, we created an index as explained [here](https://mysqlserverteam.com/indexing-json-documents-via-virtual-columns/).\r\nSo we expect the index to be used when running this query:\r\n```\r\nTableDoc.objects.filter(field__encaspulated_field=\"value\")\r\n```\r\nBut it does not, as you can see below (the sql query is the one generated by django):\r\n```\r\nEXPLAIN SELECT * FROM `tabledoc` \r\nWHERE JSON_EXTRACT(`tabledoc`.`field`, '$.encaspulated_field') = (CAST('\\\"value\\\"' AS JSON));\r\n```\r\nid|\tselect_type|\ttable|\tpartitions|\ttype|possible_keys|\tkey|\tkey_len|\tref|\trows|\tfiltered|\tExtra\r\n----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |  ----- | ----- | ----- | ----- |  \r\n1|SIMPLE\t|tabledoc\t|NULL\t|ALL|\tencaspulated_field|\tNULL|\tNULL|\tNULL|\t71763|\t10.00|\tUsing where; Using filesort\r\n\r\n**When modifying the query to use naively the value without JSON CAST, the index is well used.**\r\n```\r\nEXPLAIN SELECT * FROM `tabledoc` \r\nWHERE JSON_EXTRACT(`tabledoc`.`field`, '$.encaspulated_field') = \"value\");\r\n```\r\nid|\tselect_type|\ttable|\tpartitions|\ttype|possible_keys|\tkey|\tkey_len|\tref|\trows|\tfiltered|\tExtra\r\n----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |  ----- | ----- | ----- | ----- |  \r\n1|SIMPLE\t|tabledoc\t|NULL\t|ALL|\tencaspulated_field|\tNULL|\tNULL|\tNULL|\t1|\t10.00|\tUsing where; Using filesort\r\n\r\nI'm not sure if it is a bug and if it has been solved on more recent django/django-mysql versions but I would appreciate your feedbacks.\r\n\r\nThanks :)\r\n\r\n### Configuration\r\n\r\nDjango Version: *Django 1.9.1*\r\n\r\nDatabase and version used: *MySQL 5.7*\r\n\r\nVersion: *Django-MySQL 1.1.0*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/471", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/471/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/471/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/471", "id": 326732716, "node_id": "MDU6SXNzdWUzMjY3MzI3MTY=", "number": 471, "title": "Test on MariaDB 10.3", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-26T11:54:30Z", "updated_at": "2018-05-27T10:40:05Z", "closed_at": "2018-05-27T10:40:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Since it's out now, we should test against it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/465", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/465/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/465/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/465", "id": 326722412, "node_id": "MDU6SXNzdWUzMjY3MjI0MTI=", "number": 465, "title": "Read the Docs build is failing", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-26T08:51:27Z", "updated_at": "2018-05-26T09:18:08Z", "closed_at": "2018-05-26T09:18:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As I have been reminded by @maikroeder", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/464", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/464/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/464/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/464", "id": 326228747, "node_id": "MDU6SXNzdWUzMjYyMjg3NDc=", "number": 464, "title": "Rewrite query ignores Table alias", "user": {"login": "adarshkeshan", "id": 3913094, "node_id": "MDQ6VXNlcjM5MTMwOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3913094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adarshkeshan", "html_url": "https://github.com/adarshkeshan", "followers_url": "https://api.github.com/users/adarshkeshan/followers", "following_url": "https://api.github.com/users/adarshkeshan/following{/other_user}", "gists_url": "https://api.github.com/users/adarshkeshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/adarshkeshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adarshkeshan/subscriptions", "organizations_url": "https://api.github.com/users/adarshkeshan/orgs", "repos_url": "https://api.github.com/users/adarshkeshan/repos", "events_url": "https://api.github.com/users/adarshkeshan/events{/privacy}", "received_events_url": "https://api.github.com/users/adarshkeshan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-24T17:57:44Z", "updated_at": "2020-06-08T16:18:42Z", "closed_at": "2020-06-08T16:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary:\r\nRewriting query for index suggestions, ignore table alias causing the generated query to augment the actual query at the wrong place, which causes it to generate invalid queries.\r\n\r\n`SELECT TABLE_ALIAS.FIELD1 FROM TABLE_NAME TABLE_ALIAS WHERE ( TABLE_ALIAS.FIELD2=Value AND (/*QueryRewrite':index=`TABLE_NAME` IGNORE `INDEX_TO_IGNORE`*/1))`\r\n\r\nGets rewritten to:\r\n\r\n`SELECT TABLE_ALIAS.FIELD1 FROM TABLE_NAME IGNORE INDEX (INDEX_TO_IGNORE) TABLE_ALIAS WHERE ( TABLE_ALIAS.FIELD2=Value AND (1))`\r\n\r\nRather than\r\n\r\n`SELECT TABLE_ALIAS.FIELD1 FROM TABLE_NAME TABLE_ALIAS IGNORE INDEX (INDEX_TO_IGNORE) WHERE ( TABLE_ALIAS.FIELD2=Value AND (1))`\r\n\r\nBasically the regex that rewrite uses ignore any table alias. Currently if I pass a querySet to another querySet, django creates an Alias for the table, which breaks the rewrite translation.\r\n\r\nThe bug lies in the regex `table_spec_re_template` at https://github.com/adamchainz/django-mysql/blob/master/django_mysql/rewrite_query.py#L169.  Which the rewrite uses to describe the table definition.\r\n\r\nDjango Version: 2.0.5\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: *e.g. Django-MySQL 1.0.1*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/461", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/461/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/461/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/461", "id": 325545819, "node_id": "MDU6SXNzdWUzMjU1NDU4MTk=", "number": 461, "title": "Extend JSONField to use custom encoder/decoder", "user": {"login": "Naitreey", "id": 10528297, "node_id": "MDQ6VXNlcjEwNTI4Mjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/10528297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naitreey", "html_url": "https://github.com/Naitreey", "followers_url": "https://api.github.com/users/Naitreey/followers", "following_url": "https://api.github.com/users/Naitreey/following{/other_user}", "gists_url": "https://api.github.com/users/Naitreey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naitreey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naitreey/subscriptions", "organizations_url": "https://api.github.com/users/Naitreey/orgs", "repos_url": "https://api.github.com/users/Naitreey/repos", "events_url": "https://api.github.com/users/Naitreey/events{/privacy}", "received_events_url": "https://api.github.com/users/Naitreey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-23T04:31:43Z", "updated_at": "2018-05-26T10:33:10Z", "closed_at": "2018-05-26T10:32:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: How about letting user choose JSON encoder/decoder to use for `JSONField`?\r\n\r\nI'm thinking about whether it is feasible and preferable for user to be able to supply a custom JSON encoder (such as `DjangoJSONEncoder`) on `JSONField` initialization like this:\r\n\r\n```python\r\nclass JSONField(Field):\r\n    encoder = json.JSONEncoder\r\n    decoder = json.JSONDecoder\r\n\r\n    def __init__(self, encoder=None, decoder=None, *args, **kwargs):\r\n        self.encoder = encoder or self.encoder\r\n        self.decoder = decoder or self.decoder\r\n        # ...\r\n```\r\n\r\nIn this way, it's possible to reduce duplicated code on upper layers that has to coerce different\r\ntypes of values to/from JSON-serializable form.\r\n\r\nI'm not sure whether it will potentially break anything cooperating with current `JSONField` such as\r\nJSON functions, as I currently don't have time digging into the code. So I'll just put my two cents here (sorry).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/457", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/457/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/457/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/457", "id": 318612256, "node_id": "MDU6SXNzdWUzMTg2MTIyNTY=", "number": 457, "title": "Add cache.touch() method", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-28T08:05:53Z", "updated_at": "2018-05-26T11:48:19Z", "closed_at": "2018-05-26T11:48:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Coming in Django 2.1 as per django/django#7610, we should support it in MySQLCache", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/455", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/455/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/455/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/455", "id": 316787811, "node_id": "MDU6SXNzdWUzMTY3ODc4MTE=", "number": 455, "title": "Crash on check for ListCharField", "user": {"login": "hologerry", "id": 11660168, "node_id": "MDQ6VXNlcjExNjYwMTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/11660168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hologerry", "html_url": "https://github.com/hologerry", "followers_url": "https://api.github.com/users/hologerry/followers", "following_url": "https://api.github.com/users/hologerry/following{/other_user}", "gists_url": "https://api.github.com/users/hologerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/hologerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hologerry/subscriptions", "organizations_url": "https://api.github.com/users/hologerry/orgs", "repos_url": "https://api.github.com/users/hologerry/repos", "events_url": "https://api.github.com/users/hologerry/events{/privacy}", "received_events_url": "https://api.github.com/users/hologerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-23T12:20:20Z", "updated_at": "2018-04-24T07:10:54Z", "closed_at": "2018-04-23T21:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python Version: Python 3.6.5\r\nDjango Version: Django 2.0.4\r\nVersion: Django-MySQL 2.2.1\r\n\r\nI use the `ListCharField`\r\n\r\nWhen I execute `python manage.py runserver`, I encountered the following:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/__init__.py\", line 365, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/base.py\", line 288, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/base.py\", line 332, in execute\r\n    self.check()\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/base.py\", line 364, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/management/base.py\", line 351, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/checks/registry.py\", line 73, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/core/checks/model_checks.py\", line 27, in check_all_models\r\n    errors.extend(model.check(**kwargs))\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/db/models/base.py\", line 1200, in check\r\n    errors.extend(cls._check_fields(**kwargs))\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django/db/models/base.py\", line 1272, in _check_fields\r\n    errors.extend(field.check(**kwargs))\r\n  File \"/home/gerry/anaconda3/envs/im2txt_demo/lib/python3.6/site-packages/django_mysql/models/fields/lists.py\", line 184, in check\r\n    if max_size > self.max_length:\r\nTypeError: '>' not supported between instances of 'int' and 'NoneType'\r\n```\r\nPlease help me, Thanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/453", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/453/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/453/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/453", "id": 315927965, "node_id": "MDU6SXNzdWUzMTU5Mjc5NjU=", "number": 453, "title": "Test on MySQL 8", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-19T15:27:24Z", "updated_at": "2020-05-04T11:40:13Z", "closed_at": "2020-05-04T11:40:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It's GA now https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/452", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/452/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/452/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/452", "id": 315467636, "node_id": "MDU6SXNzdWUzMTU0Njc2MzY=", "number": 452, "title": "Use dbdeployer on Travis", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T12:56:03Z", "updated_at": "2020-01-03T10:02:46Z", "closed_at": "2020-01-03T10:02:46Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Assuming dbdeployer itself is easy to set up, it would make all the shell scripts to install various MariaDB and MySQL versions redundant. https://github.com/datacharmer/dbdeployer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/441", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/441/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/441/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/441", "id": 310316324, "node_id": "MDU6SXNzdWUzMTAzMTYzMjQ=", "number": 441, "title": "Docs on checks does not specify how to change SQL_MODE ", "user": {"login": "amirulabu", "id": 10055534, "node_id": "MDQ6VXNlcjEwMDU1NTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/10055534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirulabu", "html_url": "https://github.com/amirulabu", "followers_url": "https://api.github.com/users/amirulabu/followers", "following_url": "https://api.github.com/users/amirulabu/following{/other_user}", "gists_url": "https://api.github.com/users/amirulabu/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirulabu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirulabu/subscriptions", "organizations_url": "https://api.github.com/users/amirulabu/orgs", "repos_url": "https://api.github.com/users/amirulabu/repos", "events_url": "https://api.github.com/users/amirulabu/events{/privacy}", "received_events_url": "https://api.github.com/users/amirulabu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-01T11:21:08Z", "updated_at": "2018-04-05T05:57:16Z", "closed_at": "2018-04-05T05:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: In the docs [here](http://django-mysql.readthedocs.io/en/latest/checks.html#django-mysql-w001-strict-mode) it did not specify on how to change SQL_MODE. I want to contribute extending the checks section on how to view and edit SQL_MODE. This will be beneficial for user that is not familiar with setting up mysql/mariadb. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/436", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/436/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/436/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/436", "id": 303183524, "node_id": "MDU6SXNzdWUzMDMxODM1MjQ=", "number": 436, "title": "Extending JSON field breaks makemigration command", "user": {"login": "deveArt", "id": 20946161, "node_id": "MDQ6VXNlcjIwOTQ2MTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/20946161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deveArt", "html_url": "https://github.com/deveArt", "followers_url": "https://api.github.com/users/deveArt/followers", "following_url": "https://api.github.com/users/deveArt/following{/other_user}", "gists_url": "https://api.github.com/users/deveArt/gists{/gist_id}", "starred_url": "https://api.github.com/users/deveArt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deveArt/subscriptions", "organizations_url": "https://api.github.com/users/deveArt/orgs", "repos_url": "https://api.github.com/users/deveArt/repos", "events_url": "https://api.github.com/users/deveArt/events{/privacy}", "received_events_url": "https://api.github.com/users/deveArt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-03-07T17:10:27Z", "updated_at": "2018-04-15T08:21:35Z", "closed_at": "2018-04-14T09:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: I want to extend django_mysql.models.JSONField. But it breaks my futher migrations in the following way:\r\n\r\nThis is my custom field:\r\n```\r\nfrom django_mysql.models import JSONField\r\nclass JsonExtended(JSONField):\r\n    ...\r\n```\r\n\r\nThen in migrations:\r\n```\r\n        migrations.AlterField(\r\n            model_name='task',\r\n            name='params',\r\n            field=django_mysql.models.JsonExtended(default=dict), \r\n           # but must be ---> path_to_module.JsonExtended(default=dict)\r\n        ),\r\n```\r\n\r\nDjango Version: 2.0.2\r\nDatabase and version used: MariaDB 10.2.13\r\nVersion:  Django-MySQL 2.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/432", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/432/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/432/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/432", "id": 300132662, "node_id": "MDU6SXNzdWUzMDAxMzI2NjI=", "number": 432, "title": "Disable remote database system check", "user": {"login": "sonirico", "id": 9306588, "node_id": "MDQ6VXNlcjkzMDY1ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9306588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonirico", "html_url": "https://github.com/sonirico", "followers_url": "https://api.github.com/users/sonirico/followers", "following_url": "https://api.github.com/users/sonirico/following{/other_user}", "gists_url": "https://api.github.com/users/sonirico/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonirico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonirico/subscriptions", "organizations_url": "https://api.github.com/users/sonirico/orgs", "repos_url": "https://api.github.com/users/sonirico/repos", "events_url": "https://api.github.com/users/sonirico/events{/privacy}", "received_events_url": "https://api.github.com/users/sonirico/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-26T07:22:32Z", "updated_at": "2018-03-02T12:55:44Z", "closed_at": "2018-03-02T10:58:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a local MySQL 5.7 database and a remote database under version 5.6. I would like to have system checks enabled for the former but disabled for the latter. Any good approach?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/422", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/422/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/422/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/422", "id": 292493906, "node_id": "MDU6SXNzdWUyOTI0OTM5MDY=", "number": 422, "title": "Unable to use JSONField in mariadb", "user": {"login": "akhilputhiry", "id": 747410, "node_id": "MDQ6VXNlcjc0NzQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/747410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhilputhiry", "html_url": "https://github.com/akhilputhiry", "followers_url": "https://api.github.com/users/akhilputhiry/followers", "following_url": "https://api.github.com/users/akhilputhiry/following{/other_user}", "gists_url": "https://api.github.com/users/akhilputhiry/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhilputhiry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhilputhiry/subscriptions", "organizations_url": "https://api.github.com/users/akhilputhiry/orgs", "repos_url": "https://api.github.com/users/akhilputhiry/repos", "events_url": "https://api.github.com/users/akhilputhiry/events{/privacy}", "received_events_url": "https://api.github.com/users/akhilputhiry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T17:30:00Z", "updated_at": "2018-01-29T17:54:41Z", "closed_at": "2018-01-29T17:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unable to use JSONField in mariadb\r\n\r\n```\r\ndatasources.DataSource.metadata: (django_mysql.E016) MySQL 5.7+ is required to use JSONField\r\n\tHINT: At least one of your DB connections should be to MySQL 5.7+\r\ndatasources.DataSourceType.metadata: (django_mysql.E016) MySQL 5.7+ is required to use JSONField\r\n\tHINT: At least one of your DB connections should be to MySQL 5.7+\r\n```\r\n\r\nDjango==2.0\r\ndjango-mysql==2.2.0\r\nMariaDB==10.2.12", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/418", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/418/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/418/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/418", "id": 279286598, "node_id": "MDU6SXNzdWUyNzkyODY1OTg=", "number": 418, "title": "ImportError: cannot import name 'string_concat', which makes python3 manage.py check fails", "user": {"login": "Panlichen", "id": 13653578, "node_id": "MDQ6VXNlcjEzNjUzNTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/13653578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panlichen", "html_url": "https://github.com/Panlichen", "followers_url": "https://api.github.com/users/Panlichen/followers", "following_url": "https://api.github.com/users/Panlichen/following{/other_user}", "gists_url": "https://api.github.com/users/Panlichen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panlichen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panlichen/subscriptions", "organizations_url": "https://api.github.com/users/Panlichen/orgs", "repos_url": "https://api.github.com/users/Panlichen/repos", "events_url": "https://api.github.com/users/Panlichen/events{/privacy}", "received_events_url": "https://api.github.com/users/Panlichen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T08:28:19Z", "updated_at": "2017-12-05T10:31:35Z", "closed_at": "2017-12-05T10:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe there are some version conflicts. Here's the trace code:\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/Django-2.1.dev20171128075237-py3.6.egg/django/core/management/__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.6/site-packages/Django-2.1.dev20171128075237-py3.6.egg/django/core/management/__init__.py\", line 347, in execute\r\n    django.setup()\r\n  File \"/usr/local/lib/python3.6/site-packages/Django-2.1.dev20171128075237-py3.6.egg/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/usr/local/lib/python3.6/site-packages/Django-2.1.dev20171128075237-py3.6.egg/django/apps/registry.py\", line 112, in populate\r\n    app_config.import_models()\r\n  File \"/usr/local/lib/python3.6/site-packages/Django-2.1.dev20171128075237-py3.6.egg/django/apps/config.py\", line 198, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 978, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 950, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\r\n  File \"/usr/local/lib/python3.6/site-packages/django_mysql/models/__init__.py\", line 16, in <module>\r\n    from django_mysql.models.fields import (  # noqa\r\n  File \"/usr/local/lib/python3.6/site-packages/django_mysql/models/fields/__init__.py\", line 11, in <module>\r\n    from django_mysql.models.fields.json import JSONField  # noqa\r\n  File \"/usr/local/lib/python3.6/site-packages/django_mysql/models/fields/json.py\", line 14, in <module>\r\n    from django_mysql import forms\r\n  **_File \"/usr/local/lib/python3.6/site-packages/django_mysql/forms.py\", line 14, in <module>\r\n    from django.utils.translation import string_concat\r\nImportError: cannot import name 'string_concat'_**\r\n\r\n*If this is a bug, please fill in the below, else delete*\r\n\r\nDjango Version: Django 2.1\r\n\r\nDatabase and version used: MySQL 5.7.20\r\n\r\nVersion: install Django-MySQL with pip3 just now, I don't know exactly which version it is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/417", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/417/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/417/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/417", "id": 276328866, "node_id": "MDU6SXNzdWUyNzYzMjg4NjY=", "number": 417, "title": "django.db.utils.OperationalError: (1101, \"BLOB, TEXT, GEOMETRY or JSON column 'attrs' can't have a default value\")", "user": {"login": "haoziyeung", "id": 16606564, "node_id": "MDQ6VXNlcjE2NjA2NTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/16606564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haoziyeung", "html_url": "https://github.com/haoziyeung", "followers_url": "https://api.github.com/users/haoziyeung/followers", "following_url": "https://api.github.com/users/haoziyeung/following{/other_user}", "gists_url": "https://api.github.com/users/haoziyeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/haoziyeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haoziyeung/subscriptions", "organizations_url": "https://api.github.com/users/haoziyeung/orgs", "repos_url": "https://api.github.com/users/haoziyeung/repos", "events_url": "https://api.github.com/users/haoziyeung/events{/privacy}", "received_events_url": "https://api.github.com/users/haoziyeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-23T10:40:43Z", "updated_at": "2018-02-05T14:15:05Z", "closed_at": "2018-02-05T14:15:05Z", "author_association": "NONE", "active_lock_reason": null, "body": " Server version: 5.7.20 MySQL Community Server (GPL)\r\nmysqlclient (1.3.12)\r\nDjango (1.8.18)\r\n\r\nHello,there i have a problem\r\ni've created a json field like below:\r\nfrom django_mysql.models import JSONField,ListCharField\r\nclass express_model(models.Model):\r\n    '''\r\n        \u5feb\u9012\u516c\u53f8\u540d\u5355\r\n    '''\r\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\r\n    exp_code = models.CharField(u'\u5feb\u9012\u516c\u53f8\u4ee3\u7801', max_length=10,blank=True, null=True)\r\n    exp_name = models.CharField(u'\u5feb\u9012\u516c\u53f8\u540d\u79f0', max_length=50)\r\n    attrs = JSONField(default=my_default)\r\n\r\n\r\nthen there's ERRORS:\r\n\r\n File \"manage.py\", line 14, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/lib/python2.7/site-packages/django/core/management/__init__.py\", line 354, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/lib/python2.7/site-packages/django/core/management/__init__.py\", line 346, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/lib/python2.7/site-packages/django/core/management/base.py\", line 394, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/lib/python2.7/site-packages/django/core/management/base.py\", line 445, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 222, in handle\r\n    executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 110, in migrate\r\n    self.apply_migration(states[migration], migration, fake=fake, fake_initial=fake_initial)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 148, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 115, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/migrations/operations/fields.py\", line 62, in database_forwards\r\n    field,\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/mysql/schema.py\", line 43, in add_field\r\n    super(DatabaseSchemaEditor, self).add_field(model, field)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 398, in add_field\r\n    self.execute(sql, params)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 111, in execute\r\n    cursor.execute(sql, params)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/utils.py\", line 79, in execute\r\n    return super(CursorDebugWrapper, self).execute(sql, params)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/utils.py\", line 98, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/utils.py\", line 64, in execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/usr/lib/python2.7/site-packages/django/db/backends/mysql/base.py\", line 124, in execute\r\n    return self.cursor.execute(query, args)\r\n  File \"/usr/lib64/python2.7/site-packages/MySQLdb/cursors.py\", line 250, in execute\r\n    self.errorhandler(self, exc, value)\r\n  File \"/usr/lib64/python2.7/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler\r\n    raise errorvalue\r\ndjango.db.utils.OperationalError: (1101, \"BLOB, TEXT, GEOMETRY or JSON column 'attrs' can't have a default value\")\r\n\r\n\r\nCan somebody figure out what happend? is because STRICT MODE?\r\nand here's my settings.py\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.mysql',\r\n        'NAME': 'euler_lims',\r\n        'USER':'',\r\n        'PASSWORD':'',\r\n        'HOST':'localhost',\r\n        'PORT':'3306',\r\n        'OPTIONS' : {\r\n            'charset': 'utf8mb4',\r\n            'init_command': \"SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1\",\r\n            }\r\n    },\r\n        'TEST': {\r\n            'CHARSET': 'utf8mb4',\r\n            'COLLATION': 'utf8mb4_unicode_ci',\r\n        }\r\n}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/411", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/411/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/411/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/411", "id": 272840151, "node_id": "MDU6SXNzdWUyNzI4NDAxNTE=", "number": 411, "title": "(django_mysql.E016) MySQL 5.7+ is required to use JSONField on AWS RDS MySQL 5.7.19", "user": {"login": "Beomi", "id": 11323660, "node_id": "MDQ6VXNlcjExMzIzNjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/11323660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Beomi", "html_url": "https://github.com/Beomi", "followers_url": "https://api.github.com/users/Beomi/followers", "following_url": "https://api.github.com/users/Beomi/following{/other_user}", "gists_url": "https://api.github.com/users/Beomi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Beomi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Beomi/subscriptions", "organizations_url": "https://api.github.com/users/Beomi/orgs", "repos_url": "https://api.github.com/users/Beomi/repos", "events_url": "https://api.github.com/users/Beomi/events{/privacy}", "received_events_url": "https://api.github.com/users/Beomi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-10T07:15:05Z", "updated_at": "2017-11-14T13:53:34Z", "closed_at": "2017-11-14T13:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: \r\n(django_mysql.E016) MySQL 5.7+ is required to use JSONField on AWS RDS MySQL 5.7.19\r\n\r\nDjango Version: 1.11.6\r\n\r\nDatabase and version used: MySQL 5.7.19\r\n\r\nVersion: Django-MySQL 2.1.1\r\n\r\nYes, RDS is 5.7+ but django-mysql says \"MySQL 5.7+ is required to use JSONField\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/401", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/401/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/401/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/401", "id": 269077211, "node_id": "MDU6SXNzdWUyNjkwNzcyMTE=", "number": 401, "title": "Filter on JSONField array", "user": {"login": "quytang", "id": 6160148, "node_id": "MDQ6VXNlcjYxNjAxNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6160148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quytang", "html_url": "https://github.com/quytang", "followers_url": "https://api.github.com/users/quytang/followers", "following_url": "https://api.github.com/users/quytang/following{/other_user}", "gists_url": "https://api.github.com/users/quytang/gists{/gist_id}", "starred_url": "https://api.github.com/users/quytang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quytang/subscriptions", "organizations_url": "https://api.github.com/users/quytang/orgs", "repos_url": "https://api.github.com/users/quytang/repos", "events_url": "https://api.github.com/users/quytang/events{/privacy}", "received_events_url": "https://api.github.com/users/quytang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-27T11:37:32Z", "updated_at": "2017-11-05T09:55:20Z", "closed_at": "2017-10-27T12:35:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a book model\r\n\r\n    class Book():\r\n      ...\r\n      tags: JSONField()\r\n\r\nI have some records:\r\n\r\n    Book(..., tags: ['TECH', 'BUSINESS'])\r\n    Book(..., tags: ['MARKETING'])\r\n\r\nI want to filter out the books those have tag 'Tech' or 'Business'\r\n    \r\n\r\n    query = Q (\r\n        Q(tags__contains='Tech') |\r\n        Q(tags__contains='Business')\r\n    )\r\n\r\nI've tried to used contains, contained_by, has_key, has_any_keys but got no luck.\r\nThe result is always empty.\r\n\r\n\r\nUpdate\r\n==========\r\n\r\nIt was my mistake!\r\nI found the problem, JSONField is case sensitive.\r\n\r\nThe value save in DB was `[\"TECH\", \"BUSINESS\"]` instead of `[\"Tech\", \"Business\"]`.\r\n\r\nNow the question turns out to `How to search it with case insensitive manner?`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/396", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/396/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/396/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/396", "id": 264113715, "node_id": "MDU6SXNzdWUyNjQxMTM3MTU=", "number": 396, "title": "subprocess imports (PIPE, Popen, etc).", "user": {"login": "kjam", "id": 333528, "node_id": "MDQ6VXNlcjMzMzUyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/333528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjam", "html_url": "https://github.com/kjam", "followers_url": "https://api.github.com/users/kjam/followers", "following_url": "https://api.github.com/users/kjam/following{/other_user}", "gists_url": "https://api.github.com/users/kjam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjam/subscriptions", "organizations_url": "https://api.github.com/users/kjam/orgs", "repos_url": "https://api.github.com/users/kjam/repos", "events_url": "https://api.github.com/users/kjam/events{/privacy}", "received_events_url": "https://api.github.com/users/kjam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T06:35:23Z", "updated_at": "2017-10-10T15:44:16Z", "closed_at": "2017-10-10T15:44:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: Subprocess imports throw an error on some architectures\r\n\r\nDjango Version: Django 1.11.1\r\nDatabase and version used: CloudSQL MySQL 5.7\r\nVersion: Django-MySQL 2.1.0\r\nPython version: 2.7 (GoogleAppEngine)\r\n\r\nWhen deploying on certain cloud architectures (here Google App Engine), the valid way to use subprocess is to do a global import:\r\n\r\n`import subprocess`\r\n\r\nAnd then later utilize the imported namespace:\r\n\r\n`subprocess.PIPE`\r\n\r\nI am happy to send a patch if this is useful for you. For now I have modified my deployed code as a workaround. Thanks for creating a useful library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/390", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/390/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/390/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/390", "id": 257277966, "node_id": "MDU6SXNzdWUyNTcyNzc5NjY=", "number": 390, "title": "Wrong validation of ListTextField in API requests", "user": {"login": "ido567", "id": 2265476, "node_id": "MDQ6VXNlcjIyNjU0NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2265476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ido567", "html_url": "https://github.com/ido567", "followers_url": "https://api.github.com/users/ido567/followers", "following_url": "https://api.github.com/users/ido567/following{/other_user}", "gists_url": "https://api.github.com/users/ido567/gists{/gist_id}", "starred_url": "https://api.github.com/users/ido567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ido567/subscriptions", "organizations_url": "https://api.github.com/users/ido567/orgs", "repos_url": "https://api.github.com/users/ido567/repos", "events_url": "https://api.github.com/users/ido567/events{/privacy}", "received_events_url": "https://api.github.com/users/ido567/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-13T07:04:28Z", "updated_at": "2017-10-10T15:56:39Z", "closed_at": "2017-10-10T15:56:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary:\r\nI've built an API based on [django rest framework](http://www.django-rest-framework.org/) & [django rest framework json api](https://github.com/django-json-api/django-rest-framework-json-api).\r\nOne of my models has a list of screenshots as a JSON array:\r\n`screenshots_url = ListTextField(base_field=models.URLField(), size=10)`\r\n\r\nField validations work fine when I change the model by Django admin panel, but it fails when I try to change it by API calls.\r\nIt seems like the field is validated as a string instead of an array.\r\n\r\nThe values that I tried to send by API:\r\nSent data: `\"screenshots_url\": \"http://test.com/screen.jpg\"`\r\nError: `List contains 26 items, it should contain no more than 10.`\r\n\r\nSent data: `\"screenshots_url\": [\"http://test.com/screen.jpg\"]`\r\nError: `Not a valid string.`\r\n\r\nSent data: `\"screenshots_url\": \"['http://test.com/screen.jpg']\"`\r\nError: `List contains 30 items, it should contain no more than 10.`\r\n\r\nDjango Version: *Django 1.11.2*\r\n\r\nDatabase and version used: *MySQL 5.7.18*\r\n\r\nVersion: *Django-MySQL 2.1.0*\r\n\r\nDRF Version: *Django Rest Framework 3.6.3*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/389", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/389/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/389/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/389", "id": 256671575, "node_id": "MDU6SXNzdWUyNTY2NzE1NzU=", "number": 389, "title": "MySQLCache.set_many should return a list of failing keys", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-11T11:36:38Z", "updated_at": "2017-10-14T11:32:05Z", "closed_at": "2017-10-14T11:32:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This new behaviour in Django 2.0 ( django/django#7520 ) should be implemented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/386", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/386/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/386/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/386", "id": 254493223, "node_id": "MDU6SXNzdWUyNTQ0OTMyMjM=", "number": 386, "title": "Allow custom encoder on JSONField", "user": {"login": "newmanne", "id": 1175060, "node_id": "MDQ6VXNlcjExNzUwNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1175060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newmanne", "html_url": "https://github.com/newmanne", "followers_url": "https://api.github.com/users/newmanne/followers", "following_url": "https://api.github.com/users/newmanne/following{/other_user}", "gists_url": "https://api.github.com/users/newmanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/newmanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newmanne/subscriptions", "organizations_url": "https://api.github.com/users/newmanne/orgs", "repos_url": "https://api.github.com/users/newmanne/repos", "events_url": "https://api.github.com/users/newmanne/events{/privacy}", "received_events_url": "https://api.github.com/users/newmanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-31T23:08:42Z", "updated_at": "2017-09-01T17:00:04Z", "closed_at": "2017-09-01T17:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the `JSONField` but want to use `django.core.serializers.json.DjangoJSONEncoder` as the encoder. I see that `JSONField` calls `json.dumps(value, allow_nan=False)` in a few places, and this is where I would want to set `cls=DjangoJSONEncoder`. This would take some pain out of JSON fields with dates. I'd suggest an optional argument for encoder to JSONField. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/384", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/384/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/384/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/384", "id": 252238442, "node_id": "MDU6SXNzdWUyNTIyMzg0NDI=", "number": 384, "title": "WARNINGS: The character set is not utf8mb4 for database connection 'default'", "user": {"login": "tinyms", "id": 331649, "node_id": "MDQ6VXNlcjMzMTY0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/331649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinyms", "html_url": "https://github.com/tinyms", "followers_url": "https://api.github.com/users/tinyms/followers", "following_url": "https://api.github.com/users/tinyms/following{/other_user}", "gists_url": "https://api.github.com/users/tinyms/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinyms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinyms/subscriptions", "organizations_url": "https://api.github.com/users/tinyms/orgs", "repos_url": "https://api.github.com/users/tinyms/repos", "events_url": "https://api.github.com/users/tinyms/events{/privacy}", "received_events_url": "https://api.github.com/users/tinyms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-23T10:44:56Z", "updated_at": "2017-08-23T11:19:56Z", "closed_at": "2017-08-23T11:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *database connect default character set*\r\n\r\nWARNINGS:\r\n?: (django_mysql.W003) The character set is not utf8mb4 for database connection 'default'\r\n        HINT: The default 'utf8' character set does not include support for all Unicode characters. It's strongly recommended you move to use 'utf8mb4'. See: https://djang\r\no-mysql.readthedocs.io/en/latest/checks.html#django-mysql-w003-utf8mb4\r\n\r\n\r\nDjango Version: *Django 1.11.4*\r\n\r\nDatabase and version used: *MySQL 5.7.19*\r\n\r\nVersion: *Django-MySQL 2.1.0*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/383", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/383/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/383/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/383", "id": 250411030, "node_id": "MDU6SXNzdWUyNTA0MTEwMzA=", "number": 383, "title": "Ordering Searches by JSON Field Contents", "user": {"login": "pjjmd", "id": 1238551, "node_id": "MDQ6VXNlcjEyMzg1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjjmd", "html_url": "https://github.com/pjjmd", "followers_url": "https://api.github.com/users/pjjmd/followers", "following_url": "https://api.github.com/users/pjjmd/following{/other_user}", "gists_url": "https://api.github.com/users/pjjmd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjjmd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjjmd/subscriptions", "organizations_url": "https://api.github.com/users/pjjmd/orgs", "repos_url": "https://api.github.com/users/pjjmd/repos", "events_url": "https://api.github.com/users/pjjmd/events{/privacy}", "received_events_url": "https://api.github.com/users/pjjmd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-15T19:20:06Z", "updated_at": "2017-08-16T16:52:33Z", "closed_at": "2017-08-16T15:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know this is a bit of a shaky field when it comes to the ORM, but the example given in the exposition is super unclear. https://django-mysql.readthedocs.io/en/latest/model_fields/json_field.html#ordering-lookups describes an attr field that seems more like an array then a JSON object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/375", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/375/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/375/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/375", "id": 244000109, "node_id": "MDU6SXNzdWUyNDQwMDAxMDk=", "number": 375, "title": "Support __icontains lookup on JSONField", "user": {"login": "sergiomb2", "id": 1143630, "node_id": "MDQ6VXNlcjExNDM2MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1143630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiomb2", "html_url": "https://github.com/sergiomb2", "followers_url": "https://api.github.com/users/sergiomb2/followers", "following_url": "https://api.github.com/users/sergiomb2/following{/other_user}", "gists_url": "https://api.github.com/users/sergiomb2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiomb2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiomb2/subscriptions", "organizations_url": "https://api.github.com/users/sergiomb2/orgs", "repos_url": "https://api.github.com/users/sergiomb2/repos", "events_url": "https://api.github.com/users/sergiomb2/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiomb2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-07-19T10:51:42Z", "updated_at": "2017-10-18T08:05:57Z", "closed_at": "2017-08-09T17:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: NotImplementedError at /api/table/ Lookup 'icontains' doesn't work with JSONField (when try do a searh including one JSONField\r\n\r\nDjango Version: *Django 1.11.3*\r\n\r\nDatabase and version used: *community-mysql-5.7.18-2.fc25.x86_64*\r\n\r\nVersion: *django-filter (1.0.4) django-mysql (2.1.0) djangorestframework (3.6.3)*  \r\n\r\n**NotImplementedError at /api/table/\r\nLookup 'icontains' doesn't work with JSONField**\r\n\r\nkey  | value \r\n-- | --\r\nRequest Method: |\tGET\r\nRequest URL: \t| http://127.0.0.1:51002/api/table/?search=ICT\r\nDjango Version: |\t1.11.3\r\nException Type: |\tNotImplementedError\r\nException Value: |\tLookup 'icontains' doesn't work with JSONField\r\nException Location:  |\t/usr/lib/python3.5/site-packages/django_mysql/models/fields/json.py in get_lookup, line 124\r\nPython Executable: \t| /usr/bin/python3\r\nPython Version: |\t3.5.3\r\n\r\n\r\nlike I wrote , should something similar to https://github.com/adamchainz/django-mysql/pull/368 register \r\nicontains and the SQL is simple like :  \r\n\r\n    SELECT * FROM table WHERE json_field COLLATE utf8mb4_unicode_ci LIKE '%ICT%' \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/360", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/360/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/360/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/360", "id": 227051430, "node_id": "MDU6SXNzdWUyMjcwNTE0MzA=", "number": 360, "title": "Allow passing output_field to JSONExtract", "user": {"login": "ryselis", "id": 3637026, "node_id": "MDQ6VXNlcjM2MzcwMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3637026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryselis", "html_url": "https://github.com/ryselis", "followers_url": "https://api.github.com/users/ryselis/followers", "following_url": "https://api.github.com/users/ryselis/following{/other_user}", "gists_url": "https://api.github.com/users/ryselis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryselis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryselis/subscriptions", "organizations_url": "https://api.github.com/users/ryselis/orgs", "repos_url": "https://api.github.com/users/ryselis/repos", "events_url": "https://api.github.com/users/ryselis/events{/privacy}", "received_events_url": "https://api.github.com/users/ryselis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-05-08T13:47:43Z", "updated_at": "2017-11-04T10:03:48Z", "closed_at": "2017-11-04T10:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Currently some JSON field related database functions accept output_field as parameters, but `JSONExtract` always assumes that `JSONField` is needed, even though the value extracted is a flat type value.\r\n\r\nConsider this example:\r\nassume we have a model `Document` with `JSONField` `dynamic_data`. Assume the following content of a `Document` instance's `dynamic_data`:\r\n`{\r\n    'title': 'amazing title'\r\n}`\r\n\r\nCurrently this query is not possible:\r\n`Document.objects.annotate(title=JSONExtract(\"dynamic_data\", \"$.title\")).filter(title__icontains=\"amazing\")`\r\nbecause\r\n`NotImplementedError: Lookup 'icontains' doesn't work with JSONField`\r\nsince `JSONField` is hardcoded in `JSONExtract`.\r\n\r\nI suggest adding `output_field` parameter to `JSONExtract` so that it would be possible to use `icontains` on annotated data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/359", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/359/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/359/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/359", "id": 226103346, "node_id": "MDU6SXNzdWUyMjYxMDMzNDY=", "number": 359, "title": "runtests.py gives ConftestImportFailure: ImportMismatchError", "user": {"login": "alannnna", "id": 3324520, "node_id": "MDQ6VXNlcjMzMjQ1MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3324520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alannnna", "html_url": "https://github.com/alannnna", "followers_url": "https://api.github.com/users/alannnna/followers", "following_url": "https://api.github.com/users/alannnna/following{/other_user}", "gists_url": "https://api.github.com/users/alannnna/gists{/gist_id}", "starred_url": "https://api.github.com/users/alannnna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alannnna/subscriptions", "organizations_url": "https://api.github.com/users/alannnna/orgs", "repos_url": "https://api.github.com/users/alannnna/repos", "events_url": "https://api.github.com/users/alannnna/events{/privacy}", "received_events_url": "https://api.github.com/users/alannnna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T20:21:36Z", "updated_at": "2017-05-28T11:46:53Z", "closed_at": "2017-05-28T11:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Testing for Django 1.11 support, but can't run tests.\r\n\r\nI wanted to see if django-mysql works with Django 1.11, so I followed the steps [here](http://django-mysql.readthedocs.io/en/latest/contributing.html#get-started); unfortunately, step 5 (`./runtests.py`) isn't working for me due to some conftest issue. I've verified my database connection works. \r\n\r\nThis is the output I get:\r\n```\r\n$ ./runtests.py \r\n======================================= test session starts ========================================\r\nplatform darwin -- Python 2.7.10, pytest-3.0.2, py-1.4.31, pluggy-0.3.1\r\nDjango settings: settings (from environment variable)\r\nDjango version: 1.11.0.final.1\r\nMySQL version: 5.7.18\r\nrootdir: /Users/me/things/django-mysql, inifile: setup.cfg\r\nplugins: super-check-1.0.0, django-3.0.0, backports.unittest-mock-1.2\r\ncollected 0 items / 1 errors \r\n\r\n============================================== ERRORS ==============================================\r\n________________________________________ ERROR collecting  _________________________________________\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:332: in visit\r\n    for x in Visitor(fil, rec, ignore, bf, sort).gen(self):\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:378: in gen\r\n    for p in self.gen(subdir):\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:378: in gen\r\n    for p in self.gen(subdir):\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:378: in gen\r\n    for p in self.gen(subdir):\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:378: in gen\r\n    for p in self.gen(subdir):\r\nvenv/lib/python2.7/site-packages/py/_path/common.py:368: in gen\r\n    if p.check(dir=1) and (rec is None or rec(p))])\r\nvenv/lib/python2.7/site-packages/_pytest/main.py:672: in _recurse\r\n    ihook = self.gethookproxy(path)\r\nvenv/lib/python2.7/site-packages/_pytest/main.py:575: in gethookproxy\r\n    my_conftestmodules = pm._getconftestmodules(fspath)\r\nvenv/lib/python2.7/site-packages/_pytest/config.py:315: in _getconftestmodules\r\n    mod = self._importconftest(conftestpath)\r\nvenv/lib/python2.7/site-packages/_pytest/config.py:340: in _importconftest\r\n    raise ConftestImportFailure(conftestpath, sys.exc_info())\r\nE   ConftestImportFailure: ImportMismatchError('tests.conftest', '/Users/me/things/django-mysql/tests/conftest.py', local('/Users/me/things/django-mysql/venv/lib/python2.7/site-packages/tests/conftest.py'))\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n===================================== 1 error in 0.35 seconds ======================================\r\n```\r\n\r\nI've also tried with Django 1.10 installed instead of 1.11 (because 1.11 gets installed when running `pip install -r requirements.txt`). I get the same stack trace.\r\n\r\nHelp would be greatly appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/358", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/358/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/358/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/358", "id": 226041025, "node_id": "MDU6SXNzdWUyMjYwNDEwMjU=", "number": 358, "title": "Integration with Django REST framework and django-filter, Meta.filter_overrides ? to make AutoFilterSet work ? ", "user": {"login": "sergiomb2", "id": 1143630, "node_id": "MDQ6VXNlcjExNDM2MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1143630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergiomb2", "html_url": "https://github.com/sergiomb2", "followers_url": "https://api.github.com/users/sergiomb2/followers", "following_url": "https://api.github.com/users/sergiomb2/following{/other_user}", "gists_url": "https://api.github.com/users/sergiomb2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergiomb2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergiomb2/subscriptions", "organizations_url": "https://api.github.com/users/sergiomb2/orgs", "repos_url": "https://api.github.com/users/sergiomb2/repos", "events_url": "https://api.github.com/users/sergiomb2/events{/privacy}", "received_events_url": "https://api.github.com/users/sergiomb2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-05-03T16:20:53Z", "updated_at": "2020-04-25T09:34:32Z", "closed_at": "2020-04-25T09:34:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *summarize the issue here*\r\n\r\n*If this is a bug, please fill in the below, else delete*\r\n\r\nDjango Version: *1.11*\r\n\r\nDatabase and version used: *MySQL Community 5.7.17*\r\n\r\nVersion: *1.1.1 + more 7 commit in master*\r\n\r\nAutoFilterSet resolved field 'parameters' with 'exact' lookup to an unrecognized field type JSONField. Try adding an override to 'Meta.filter_overrides'. See: https://django-filter.readthedocs.io/en/develop/ref/filterset.html#customise-filter-generation-with-filter-overrides\r\n\r\nIt was nice have autofilter working with JSONField . \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/357", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/357/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/357/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/357", "id": 224417125, "node_id": "MDU6SXNzdWUyMjQ0MTcxMjU=", "number": 357, "title": "Does the mariadb required for django-mysql module ?", "user": {"login": "shashanks1", "id": 19382898, "node_id": "MDQ6VXNlcjE5MzgyODk4", "avatar_url": "https://avatars2.githubusercontent.com/u/19382898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashanks1", "html_url": "https://github.com/shashanks1", "followers_url": "https://api.github.com/users/shashanks1/followers", "following_url": "https://api.github.com/users/shashanks1/following{/other_user}", "gists_url": "https://api.github.com/users/shashanks1/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashanks1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashanks1/subscriptions", "organizations_url": "https://api.github.com/users/shashanks1/orgs", "repos_url": "https://api.github.com/users/shashanks1/repos", "events_url": "https://api.github.com/users/shashanks1/events{/privacy}", "received_events_url": "https://api.github.com/users/shashanks1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-26T10:19:47Z", "updated_at": "2017-04-26T10:31:37Z", "closed_at": "2017-04-26T10:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *Got this error when run makemigrations for JSONField AttributeError: 'DatabaseWrapper' object has no attribute 'is_mariadb'*\r\n\r\n*If this is a bug, please fill in the below, else delete*\r\n\r\nDjango Version: Django 1.10.5\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: django-mysql==1.1.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/353", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/353/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/353/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/353", "id": 223214184, "node_id": "MDU6SXNzdWUyMjMyMTQxODQ=", "number": 353, "title": "\"manage.py dumpdata\" uses str instead of json.dumps on JSONField", "user": {"login": "dangle", "id": 880128, "node_id": "MDQ6VXNlcjg4MDEyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/880128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangle", "html_url": "https://github.com/dangle", "followers_url": "https://api.github.com/users/dangle/followers", "following_url": "https://api.github.com/users/dangle/following{/other_user}", "gists_url": "https://api.github.com/users/dangle/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangle/subscriptions", "organizations_url": "https://api.github.com/users/dangle/orgs", "repos_url": "https://api.github.com/users/dangle/repos", "events_url": "https://api.github.com/users/dangle/events{/privacy}", "received_events_url": "https://api.github.com/users/dangle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-04-20T22:03:02Z", "updated_at": "2017-04-21T22:23:53Z", "closed_at": "2017-04-21T22:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Running ./manage.py dumpdata dumps the the JSONField as a Python dictionary string instead of a JSON string.\r\n\r\ne.g.\r\n\r\n```json\r\n[\r\n    {\r\n        \"model\": \"myapp.mymodel\",\r\n        \"pk\": 1,\r\n        \"fields\": {\r\n            \"my_json_field\": \"{'field1': None, 'field2': False}\"\r\n        }\r\n    }\r\n]\r\n```\r\n\r\ninstead of \r\n\r\n```json\r\n[\r\n    {\r\n        \"model\": \"myapp.mymodel\",\r\n        \"pk\": 1,\r\n        \"fields\": {\r\n            \"my_json_field\": \"{\\\"field1\\\": null, \\\"field2\\\": false}\"\r\n        }\r\n    }\r\n]\r\n```\r\n\r\n*If this is a bug, please fill in the below, else delete*\r\n\r\nDjango Version: Django 1.10.6\r\n\r\nDatabase and version used: MySQL 5.7\r\n\r\nVersion: Django-MySQL 1.1.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/348", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/348/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/348/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/348", "id": 219051124, "node_id": "MDU6SXNzdWUyMTkwNTExMjQ=", "number": 348, "title": "JSONField form: don't dump if value is already a string. ", "user": {"login": "arnau126", "id": 7932044, "node_id": "MDQ6VXNlcjc5MzIwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7932044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnau126", "html_url": "https://github.com/arnau126", "followers_url": "https://api.github.com/users/arnau126/followers", "following_url": "https://api.github.com/users/arnau126/following{/other_user}", "gists_url": "https://api.github.com/users/arnau126/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnau126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnau126/subscriptions", "organizations_url": "https://api.github.com/users/arnau126/orgs", "repos_url": "https://api.github.com/users/arnau126/repos", "events_url": "https://api.github.com/users/arnau126/events{/privacy}", "received_events_url": "https://api.github.com/users/arnau126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-04-03T20:25:10Z", "updated_at": "2017-05-14T17:18:32Z", "closed_at": "2017-05-14T17:18:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a Django model with a JSONField, and I want to create an instance of it though the admin site. \r\nIn the JSONField I write the following:\r\n```\r\n[\r\n    {\"name\": \"foo\"},\r\n    {\"name\": \"bar\"}, \r\n] \r\n```\r\nAs expected, it's an invalid JSON (because of the trailing comma) and a ValidationError is raised.\r\n\r\nWhat is unexpected is that when the form is re-rendered the content of the json field become:\r\n`\r\n\" \\r\\n    [{\\\"name\\\": \\\"foo\\\", \\r\\n    {\\\"name\\\": \\\"bar\\\"}, \\r\\n]\"\r\n`\r\nwhich is not json valid at all. \r\n\r\nThis happens because the `prepare_value` function of the JSONField form is dumping the content of the field, even when it's already a string. \r\nhttps://github.com/adamchainz/django-mysql/blob/master/django_mysql/forms.py#L250\r\n\r\nDjango Version: *Django 1.10.6*\r\n\r\nDatabase and version used: *MySQL 5.7*\r\n\r\nVersion: *Django-MySQL 1.1.1*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/347", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/347/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/347/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/347", "id": 217764717, "node_id": "MDU6SXNzdWUyMTc3NjQ3MTc=", "number": 347, "title": "Add JSON Create & Modify MySQL functions ", "user": {"login": "avelis", "id": 181597, "node_id": "MDQ6VXNlcjE4MTU5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/181597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avelis", "html_url": "https://github.com/avelis", "followers_url": "https://api.github.com/users/avelis/followers", "following_url": "https://api.github.com/users/avelis/following{/other_user}", "gists_url": "https://api.github.com/users/avelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/avelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avelis/subscriptions", "organizations_url": "https://api.github.com/users/avelis/orgs", "repos_url": "https://api.github.com/users/avelis/repos", "events_url": "https://api.github.com/users/avelis/events{/privacy}", "received_events_url": "https://api.github.com/users/avelis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-03-29T04:56:12Z", "updated_at": "2017-04-22T16:03:55Z", "closed_at": "2017-04-22T16:03:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: To have the ability to use MySQL JSON functions that can create and modify data as Django ORM expressions and/or functions.\r\n\r\ne.g.\r\n```python\r\nshop_item.attrs = JSONSet(F('attrs'), {'$.smelliness': 10, '$.color': 'magenta'})\r\n```\r\nThis is one interpretation of what I am essentially getting at. It could be possible that the JSONSet class could also augment the keys to prepend the `$.` string.\r\n\r\nI could attempt a PR for this but would like some direction on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/345", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/345/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/345/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/345", "id": 217250609, "node_id": "MDU6SXNzdWUyMTcyNTA2MDk=", "number": 345, "title": "Numpy NaN is not supported by JSON.", "user": {"login": "arnau126", "id": 7932044, "node_id": "MDQ6VXNlcjc5MzIwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7932044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnau126", "html_url": "https://github.com/arnau126", "followers_url": "https://api.github.com/users/arnau126/followers", "following_url": "https://api.github.com/users/arnau126/following{/other_user}", "gists_url": "https://api.github.com/users/arnau126/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnau126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnau126/subscriptions", "organizations_url": "https://api.github.com/users/arnau126/orgs", "repos_url": "https://api.github.com/users/arnau126/repos", "events_url": "https://api.github.com/users/arnau126/events{/privacy}", "received_events_url": "https://api.github.com/users/arnau126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-03-27T13:44:35Z", "updated_at": "2017-03-28T21:47:06Z", "closed_at": "2017-03-28T21:47:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: NaN is not in the JSON specification, so when you try to save a django model which contains a numpy nan, it crashes with a misleading error message:\r\n\r\n> InterfaceError: (-1, 'error totally whack')\r\n\r\nI wonder if it is possible for django_mysql to also serialize NaN (as json.dumps does).\r\n\r\nIf not, at least raise an easier to understand message error.\r\nThis could be achieve by calling json.dumps with allow_nan=False.\r\nDoing this, the raised error would be:\r\n\r\n> ValueError: Out of range float values are not JSON compliant\r\n\r\n(and is raised by json.dumps function, instead of by the DB)\r\n\r\n\r\n\r\nDjango Version: *Django 1.10.6*\r\n\r\nDatabase and version used: *MySQL 5.7*\r\n\r\nVersion: *Django-MySQL 1.1.0*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/340", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/340/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/340/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/340", "id": 196821945, "node_id": "MDU6SXNzdWUxOTY4MjE5NDU=", "number": 340, "title": "JSONField default with lambda doesn't work with django migration", "user": {"login": "eagle21st", "id": 2624982, "node_id": "MDQ6VXNlcjI2MjQ5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2624982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagle21st", "html_url": "https://github.com/eagle21st", "followers_url": "https://api.github.com/users/eagle21st/followers", "following_url": "https://api.github.com/users/eagle21st/following{/other_user}", "gists_url": "https://api.github.com/users/eagle21st/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagle21st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagle21st/subscriptions", "organizations_url": "https://api.github.com/users/eagle21st/orgs", "repos_url": "https://api.github.com/users/eagle21st/repos", "events_url": "https://api.github.com/users/eagle21st/events{/privacy}", "received_events_url": "https://api.github.com/users/eagle21st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-21T01:13:38Z", "updated_at": "2016-12-21T08:58:43Z", "closed_at": "2016-12-21T08:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: *When using `JSONField` with `defaul=lambda:{foo:bar}`, django `makemigration` command thwos `ValueError: Cannot serialize function: lambda`*\r\n\r\nDjango Version: *Django 1.10.3*\r\n\r\nDatabase and version used: *MySQL 5.7*\r\n\r\nVersion: *Django-MySQL 1.1.0*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/337", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/337/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/337/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/337", "id": 192062815, "node_id": "MDU6SXNzdWUxOTIwNjI4MTU=", "number": 337, "title": "MySQL docs links can be versionless", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-28T17:12:40Z", "updated_at": "2016-11-29T22:04:17Z", "closed_at": "2016-11-29T22:04:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Links like `https://dev.mysql.com/doc/refman/5.5/en/group-by-functions.html#function_group-concat` should remove the `5.5/` component - the MySQL docs site is set up to always redirect to the latest version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/334", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/334/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/334/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/334", "id": 185761591, "node_id": "MDU6SXNzdWUxODU3NjE1OTE=", "number": 334, "title": "Move to pip-compile and requirements.in", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-27T19:41:13Z", "updated_at": "2017-05-29T09:36:24Z", "closed_at": "2017-05-29T09:36:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We should use `pip-compile` with `requirements.in`, as I use it on all my projects and have a script tracking upgrades available for them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/332", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/332/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/332/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/332", "id": 182534207, "node_id": "MDU6SXNzdWUxODI1MzQyMDc=", "number": 332, "title": "Installation link", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-12T14:03:17Z", "updated_at": "2016-10-13T08:20:44Z", "closed_at": "2016-10-13T08:20:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Add a section after 'requirements' linking directly to the 'installation' page on readthedocs.io so people follow the full process and add Django-MySQL to `INSTALLED_APPS`, it's getting missed in e.g. #331 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/331", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/331/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/331/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/331", "id": 182532681, "node_id": "MDU6SXNzdWUxODI1MzI2ODE=", "number": 331, "title": "AttributeError: 'DatabaseWrapper' object has no attribute 'is_mariadb'", "user": {"login": "Sanyambansal76", "id": 14022043, "node_id": "MDQ6VXNlcjE0MDIyMDQz", "avatar_url": "https://avatars0.githubusercontent.com/u/14022043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sanyambansal76", "html_url": "https://github.com/Sanyambansal76", "followers_url": "https://api.github.com/users/Sanyambansal76/followers", "following_url": "https://api.github.com/users/Sanyambansal76/following{/other_user}", "gists_url": "https://api.github.com/users/Sanyambansal76/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sanyambansal76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sanyambansal76/subscriptions", "organizations_url": "https://api.github.com/users/Sanyambansal76/orgs", "repos_url": "https://api.github.com/users/Sanyambansal76/repos", "events_url": "https://api.github.com/users/Sanyambansal76/events{/privacy}", "received_events_url": "https://api.github.com/users/Sanyambansal76/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-10-12T13:56:59Z", "updated_at": "2017-04-28T06:53:47Z", "closed_at": "2016-10-12T14:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i am running the makemigration command for this model\n\n```\nfrom __future__ import unicode_literals\n\nfrom django.db import models\nfrom django_mysql.models import JSONField\n\nclass Owners(models.Model):\n    name = models.CharField(max_length=255)\n    url = models.CharField(max_length=128, null=True, blank=True)\n    email = models.EmailField(null=True, blank=True)\n    phone = models.CharField(max_length=32, null=True, blank=True)\n    address = models.CharField(max_length=128, null=True, blank=True)\n    country = models.CharField(max_length=32, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n\nclass Brands(models.Model):\n    name = models.CharField(max_length=255)\n    owner = models.ForeignKey(Owners, null=True, blank=True)\n    url = models.CharField(max_length=128, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    tags = JSONField(null=True, blank=True)\n```\n\n**I am getting that logs**\n\n```\n  File \"/home/sanyam/Project/groceryfy/venv/local/lib/python2.7/site-packages/django_mysql/models/fields/json.py\", line 65, in _check_mysql_version\n    (conn.is_mariadb or conn.mysql_version < (5, 7))\nAttributeError: 'DatabaseWrapper' object has no attribute 'is_mariadb'\n```\n\nSummary: _summarize the issue here_\n\n_If this is a bug, please fill in the below, else delete_\n\nDjango Version: _e.g. Django 1.9_\n\nDatabase and version used: _e.g. MySQL 5.7_\n\nVersion: _e.g. Django-MySQL 1.1.0_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/329", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/329/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/329/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/329", "id": 179999826, "node_id": "MDU6SXNzdWUxNzk5OTk4MjY=", "number": 329, "title": "Database Function arities", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-09-29T09:37:36Z", "updated_at": "2016-11-13T21:49:37Z", "closed_at": "2016-11-13T21:49:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Django 1.10 introduced `Func.arity` ([docs](https://docs.djangoproject.com/en/1.10/ref/models/expressions/#django.db.models.Func)), we should set it for the functions we have. Also we should probably standardize on `TypeError` for problems with function calls where we're not using `TypeError`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/320", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/320/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/320/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/320", "id": 174766239, "node_id": "MDU6SXNzdWUxNzQ3NjYyMzk=", "number": 320, "title": "Override update_or_create with ON DUPLICATE KEY", "user": {"login": "cjhenck", "id": 2380566, "node_id": "MDQ6VXNlcjIzODA1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2380566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjhenck", "html_url": "https://github.com/cjhenck", "followers_url": "https://api.github.com/users/cjhenck/followers", "following_url": "https://api.github.com/users/cjhenck/following{/other_user}", "gists_url": "https://api.github.com/users/cjhenck/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjhenck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjhenck/subscriptions", "organizations_url": "https://api.github.com/users/cjhenck/orgs", "repos_url": "https://api.github.com/users/cjhenck/repos", "events_url": "https://api.github.com/users/cjhenck/events{/privacy}", "received_events_url": "https://api.github.com/users/cjhenck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-02T13:58:31Z", "updated_at": "2016-09-12T16:36:09Z", "closed_at": "2016-09-10T20:34:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: If you use update_or_create within nested transactions, it's possible to get a race condition that throws an exception.  Supporting MySQL's INSERT ... ON DUPLICATE KEY would remove that possibility.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/319", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/319/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/319/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/319", "id": 172993827, "node_id": "MDU6SXNzdWUxNzI5OTM4Mjc=", "number": 319, "title": "Full forwards compatibility", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-24T16:05:45Z", "updated_at": "2016-09-24T18:11:10Z", "closed_at": "2016-09-24T18:11:10Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Make the code fully forwards compatible:\n- All Python 2.7 `__future__` imports included\n- Encoding utf-8 in all files\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/314", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/314/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/314/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/314", "id": 168879485, "node_id": "MDU6SXNzdWUxNjg4Nzk0ODU=", "number": 314, "title": "Add support for defining MySQL FULLTEXT INDEX in the model", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-02T13:02:35Z", "updated_at": "2020-05-15T08:09:21Z", "closed_at": "2020-05-15T08:09:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I originally filed this against Django (https://code.djangoproject.com/ticket/26990) however it was suggested django-mysql might be a better home for now.\n\nIn MySQL 5.6 support was added to InnoDB for full text indexes:\n\u200bhttps://dev.mysql.com/doc/refman/5.6/en/innodb-fulltext-index.html\n\nCurrently we have to create these via a migration like:\n\n``` python\nmigrations.RunSQL(\n    sql='CREATE FULLTEXT INDEX `idx_description` on foo(`description`);',\n    reverse_sql='ALTER TABLE foo DROP INDEX idx_description',\n),\n```\n\nIt would be ideal to be able to define them via the model DDL instead, so the full DB state can be recreated from the model.\n\nIn the Django ticket it was mentioned this might need to wait until Django 1.11's more formal support for indexes lands:\nhttps://code.djangoproject.com/ticket/26808\nhttps://github.com/django/django/pull/6857\n\nMany thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/312", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/312/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/312/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/312", "id": 168083248, "node_id": "MDU6SXNzdWUxNjgwODMyNDg=", "number": 312, "title": "JSONField default passed to SQL create column query", "user": {"login": "ConorMcGee", "id": 5881581, "node_id": "MDQ6VXNlcjU4ODE1ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5881581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ConorMcGee", "html_url": "https://github.com/ConorMcGee", "followers_url": "https://api.github.com/users/ConorMcGee/followers", "following_url": "https://api.github.com/users/ConorMcGee/following{/other_user}", "gists_url": "https://api.github.com/users/ConorMcGee/gists{/gist_id}", "starred_url": "https://api.github.com/users/ConorMcGee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ConorMcGee/subscriptions", "organizations_url": "https://api.github.com/users/ConorMcGee/orgs", "repos_url": "https://api.github.com/users/ConorMcGee/repos", "events_url": "https://api.github.com/users/ConorMcGee/events{/privacy}", "received_events_url": "https://api.github.com/users/ConorMcGee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2016-07-28T12:27:39Z", "updated_at": "2017-10-06T10:22:10Z", "closed_at": "2016-08-01T13:59:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: Migrations created to add a JSONField include default, causing query to fail.\n\nDjango Version: Django 1.9.2-8\n\nDatabase and version used: MySQL 5.7.11\n\nVersion: Django-MySQL 1.0.1\n\nHi,\nI've been having some inconsistent behaviour with this so sorry if this is confusing. In the current situation I'm stuck in, I have model that was created with a JSONField without any problems, and I'm trying to add another JSONField. It keeps failing because the migrations tries to set a default on the field, which MySQL doesn't allow:\n(`django.db.utils.OperationalError: (1101, \"BLOB, TEXT, GEOMETRY or JSON column 'tables' can't have a default value\")`)\nI think I know why this is happening: https://github.com/django/django/blob/6bf7964023487f2a352084e74aca27aecb354d6c/django/db/backends/mysql/schema.py#L28\nThat method tells migrations to leave out the default for certain fields, and I believe JSONField would now need to be included among those, as the django_mysql JSONField implicitly sets `dict` as its default.\n\nI can't immediately see how this could be rectified here. Do you think it requires a bug report for Django? Or maybe I've overlooked something.\n\nI know I've left out full tracebacks and stuff but that's just because I'm pretty sure I've located the issue above. Let me know if you'd like more.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/306", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/306/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/306/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/306", "id": 165797705, "node_id": "MDU6SXNzdWUxNjU3OTc3MDU=", "number": 306, "title": "Query hint methods error if DJANGO_MYSQL_REWRITE_QUERIES isn't set", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-07-15T14:21:56Z", "updated_at": "2016-07-22T21:00:59Z", "closed_at": "2016-07-22T21:00:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: As seen in #305 it's not obvious why `force_index` etc. aren't working when you try to use them without the setting on. They should error if it's not set rather than lead to confusion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/305", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/305/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/305/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/305", "id": 165780609, "node_id": "MDU6SXNzdWUxNjU3ODA2MDk=", "number": 305, "title": "force_index only works on MySQL 5.7", "user": {"login": "Gwildor", "id": 891584, "node_id": "MDQ6VXNlcjg5MTU4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/891584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gwildor", "html_url": "https://github.com/Gwildor", "followers_url": "https://api.github.com/users/Gwildor/followers", "following_url": "https://api.github.com/users/Gwildor/following{/other_user}", "gists_url": "https://api.github.com/users/Gwildor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gwildor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gwildor/subscriptions", "organizations_url": "https://api.github.com/users/Gwildor/orgs", "repos_url": "https://api.github.com/users/Gwildor/repos", "events_url": "https://api.github.com/users/Gwildor/events{/privacy}", "received_events_url": "https://api.github.com/users/Gwildor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-07-15T12:54:46Z", "updated_at": "2016-07-15T14:32:22Z", "closed_at": "2016-07-15T14:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: `force_index` only works on MySQL 5.7.\n\nDjango Version: 1.7.10\nDatabase and version used: MySQL 5.6\nVersion: Django-MySQL 1.0.7\n\nHi there. I've been trying to get your plugin to work because I needed the `force_index` feature, but unfortunately, it only seems to work on MySQL 5.7 because your implementation depends on the Query Rewrite plugin being installed and enabled. This was not documented, unfortunately. Is there a specific reason you are using the Query Rewrite plugin, instead of simply adding a `FORCE INDEX` clause on the query, which works fine?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/290", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/290/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/290/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/290", "id": 154841047, "node_id": "MDU6SXNzdWUxNTQ4NDEwNDc=", "number": 290, "title": "Fix build for Django master changes", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-05-14T08:10:26Z", "updated_at": "2016-05-24T17:45:27Z", "closed_at": "2016-05-24T17:45:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: The build is broken for all tox configurations with Django master, fix it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/287", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/287/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/287/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/287", "id": 154211756, "node_id": "MDU6SXNzdWUxNTQyMTE3NTY=", "number": 287, "title": "Error in JSONField with control characters", "user": {"login": "marco-santamaria", "id": 684803, "node_id": "MDQ6VXNlcjY4NDgwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/684803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-santamaria", "html_url": "https://github.com/marco-santamaria", "followers_url": "https://api.github.com/users/marco-santamaria/followers", "following_url": "https://api.github.com/users/marco-santamaria/following{/other_user}", "gists_url": "https://api.github.com/users/marco-santamaria/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-santamaria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-santamaria/subscriptions", "organizations_url": "https://api.github.com/users/marco-santamaria/orgs", "repos_url": "https://api.github.com/users/marco-santamaria/repos", "events_url": "https://api.github.com/users/marco-santamaria/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-santamaria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-11T10:36:21Z", "updated_at": "2016-05-14T11:01:28Z", "closed_at": "2016-05-14T11:01:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you save in a JSONFIeld the value `['\\x1f']` and you query the model containing that field, the following error is thrown:\n\n> ValueError: Invalid control character at: line ...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/280", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/280/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/280/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/280", "id": 151420469, "node_id": "MDU6SXNzdWUxNTE0MjA0Njk=", "number": 280, "title": "Error in JSONField if multiple databases are used including non MySQL databses", "user": {"login": "marco-santamaria", "id": 684803, "node_id": "MDQ6VXNlcjY4NDgwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/684803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-santamaria", "html_url": "https://github.com/marco-santamaria", "followers_url": "https://api.github.com/users/marco-santamaria/followers", "following_url": "https://api.github.com/users/marco-santamaria/following{/other_user}", "gists_url": "https://api.github.com/users/marco-santamaria/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-santamaria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-santamaria/subscriptions", "organizations_url": "https://api.github.com/users/marco-santamaria/orgs", "repos_url": "https://api.github.com/users/marco-santamaria/repos", "events_url": "https://api.github.com/users/marco-santamaria/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-santamaria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-27T15:49:02Z", "updated_at": "2016-05-14T11:01:50Z", "closed_at": "2016-05-14T11:01:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I have a project where I'm using two databases: a MySQL database and a MS SQL Server database.\nIf I don't use a JSONField everything works fine. But when I try to migrate a model using a JSONField i get the following error:\n\n`File \"/home/......../virtualenvs/seta_fs/lib/python3.4/site-packages/django_mysql/models/fields/json.py\", line 79, in _check_mysql_version\n    not connections[db].is_mariadb and\nAttributeError: 'DatabaseWrapper' object has no attribute 'is_mariadb'`\n\nIt appears that the function _check_mysql_version loops all the database configured assuming that the attribute \"is_mariadb\" is defined. So when it checks the non MySQL database it fails.\n\nI tried to fix this issue and I know that I should use MySQL instead of MariaDB. You can look at my attempt here:  https://github.com/marco-santamaria/django-mysql/commit/aa00dc0d200f462633b9a1528d19d78c52db6947\n\nDo you have any advice?\n\nDjango Version: _e.g. Django 1.9.5_\nDatabase and version used: _MariaDB 10.1.13_\nVersion: _Django-MySQL 1.0.8_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/276", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/276/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/276/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/276", "id": 147764590, "node_id": "MDU6SXNzdWUxNDc3NjQ1OTA=", "number": 276, "title": "'dbparams' doesn't need to run system checks", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 276439703, "node_id": "MDU6TGFiZWwyNzY0Mzk3MDM=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/easy", "name": "easy", "color": "eb6420", "default": false, "description": null}, {"id": 174164987, "node_id": "MDU6TGFiZWwxNzQxNjQ5ODc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-12T14:14:01Z", "updated_at": "2016-04-14T21:30:51Z", "closed_at": "2016-04-14T21:30:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: `manage.py dbparams` can be unnecessarily slow because it runs all the system checks, these can be disabled on the `Command` class quite easily.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/272", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/272/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/272/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/272", "id": 147023529, "node_id": "MDU6SXNzdWUxNDcwMjM1Mjk=", "number": 272, "title": "ImportError: No module named termios on Windows", "user": {"login": "MrCsabaToth", "id": 744949, "node_id": "MDQ6VXNlcjc0NDk0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/744949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrCsabaToth", "html_url": "https://github.com/MrCsabaToth", "followers_url": "https://api.github.com/users/MrCsabaToth/followers", "following_url": "https://api.github.com/users/MrCsabaToth/following{/other_user}", "gists_url": "https://api.github.com/users/MrCsabaToth/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrCsabaToth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrCsabaToth/subscriptions", "organizations_url": "https://api.github.com/users/MrCsabaToth/orgs", "repos_url": "https://api.github.com/users/MrCsabaToth/repos", "events_url": "https://api.github.com/users/MrCsabaToth/events{/privacy}", "received_events_url": "https://api.github.com/users/MrCsabaToth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-04-08T19:52:16Z", "updated_at": "2019-09-09T06:56:50Z", "closed_at": "2016-04-08T22:59:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: https://stackoverflow.com/questions/36508126/importerror-no-module-named-termios-with-django-mysql-on-windows\n\nDjango Version: 1.8.7\nDatabase and version used: MySQL 5.6\nVersion: Django-MySQL 1.0.7\n\nEven after installing Cygwin.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/267", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/267/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/267/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/267", "id": 144294396, "node_id": "MDU6SXNzdWUxNDQyOTQzOTY=", "number": 267, "title": "Chat Plz ", "user": {"login": "MichaelAquilina", "id": 2650040, "node_id": "MDQ6VXNlcjI2NTAwNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2650040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelAquilina", "html_url": "https://github.com/MichaelAquilina", "followers_url": "https://api.github.com/users/MichaelAquilina/followers", "following_url": "https://api.github.com/users/MichaelAquilina/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelAquilina/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelAquilina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelAquilina/subscriptions", "organizations_url": "https://api.github.com/users/MichaelAquilina/orgs", "repos_url": "https://api.github.com/users/MichaelAquilina/repos", "events_url": "https://api.github.com/users/MichaelAquilina/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelAquilina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174164988, "node_id": "MDU6TGFiZWwxNzQxNjQ5ODg=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-29T15:08:30Z", "updated_at": "2016-03-29T15:11:14Z", "closed_at": "2016-03-29T15:08:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Summary: I want to chat\n\nDjango Version: all\n\nDatabase and version used: all\n\nVersion: all\n\nkthxbai\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/261", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/261/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/261/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/261", "id": 141013774, "node_id": "MDU6SXNzdWUxNDEwMTM3NzQ=", "number": 261, "title": "Smart Iterator - fail when primary key is a non-integer foreign key", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174164984, "node_id": "MDU6TGFiZWwxNzQxNjQ5ODQ=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-03-15T15:43:32Z", "updated_at": "2016-03-18T16:28:14Z", "closed_at": "2016-03-18T16:28:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: 4506a1cf2c604d11814c935c2624b3a9ed722a3d didn't go far enough, for `ForeignKey` instances we need to check that the target field is an integer, we can't just whitelist `ForeignKey` outright\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/257", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/257/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/257/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/257", "id": 138321229, "node_id": "MDU6SXNzdWUxMzgzMjEyMjk=", "number": 257, "title": "Add IfNull() and NullIf() Database Functions", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206398037, "node_id": "MDU6TGFiZWwyMDYzOTgwMzc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/feature", "name": "feature", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-03T22:50:45Z", "updated_at": "2016-03-04T13:52:43Z", "closed_at": "2016-03-04T13:52:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: Just like #249 we should support these final control flow functions\n\nhttps://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html#function_ifnull\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/255", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/255/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/255/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/255", "id": 138263132, "node_id": "MDU6SXNzdWUxMzgyNjMxMzI=", "number": 255, "title": "Document that Greatest and Least exist in Django 1.9", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 276439703, "node_id": "MDU6TGFiZWwyNzY0Mzk3MDM=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/easy", "name": "easy", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-03T18:42:01Z", "updated_at": "2016-03-05T15:18:09Z", "closed_at": "2016-03-05T15:18:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: Our docs should point to Django 1.9's for Greatest and Least saying \"use these instead\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/249", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/249/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/249/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/249", "id": 137311669, "node_id": "MDU6SXNzdWUxMzczMTE2Njk=", "number": 249, "title": "Support SQL If()", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206398037, "node_id": "MDU6TGFiZWwyMDYzOTgwMzc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/feature", "name": "feature", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-29T17:05:04Z", "updated_at": "2016-03-04T12:27:08Z", "closed_at": "2016-03-04T12:27:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: MySQL has a handy `If()` statement, it's shorter than doing the whole `Case(When(` malarkey, we should support it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/248", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/248/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/248/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/248", "id": 137299636, "node_id": "MDU6SXNzdWUxMzcyOTk2MzY=", "number": 248, "title": "JSONField should check for mutable defaults", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174164986, "node_id": "MDU6TGFiZWwxNzQxNjQ5ODY=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-29T16:21:35Z", "updated_at": "2016-03-01T18:06:15Z", "closed_at": "2016-03-01T18:06:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: If JSONField is given e.g. `default=[]`, it should complain in `check()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/245", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/245/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/245/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/245", "id": 136943708, "node_id": "MDU6SXNzdWUxMzY5NDM3MDg=", "number": 245, "title": "JSONField spec support like DynamicField", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206398037, "node_id": "MDU6TGFiZWwyMDYzOTgwMzc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/feature", "name": "feature", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-27T17:23:54Z", "updated_at": "2020-06-01T13:08:29Z", "closed_at": "2020-06-01T13:08:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: The `spec` argument to `DynamicField` is useful for enforcing extra constraints on the data, which could also be useful in `JSONField` - in fact, maybe more so, since it would enforce the value being a `dict`/JSON object, which is a slight worry.\n\nThe `spec` code from `DynamicField` would need significant extension to do this though, since JSON has many more types, plus validation gets complicated with `list`s\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/244", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/244/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/244/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/244", "id": 136943296, "node_id": "MDU6SXNzdWUxMzY5NDMyOTY=", "number": 244, "title": "JSONField extra lookups", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206398037, "node_id": "MDU6TGFiZWwyMDYzOTgwMzc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/feature", "name": "feature", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-27T17:21:18Z", "updated_at": "2016-02-29T15:52:28Z", "closed_at": "2016-02-29T15:52:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: `django.contrib.postgres`'s JSONField has several lookups that ours doesn't (at current). These are:\n- `contains`\n- `contained_by`\n- `has_key`, `has_keys`\n- `has_any_key`\n\nAlso as a bonus we can add:\n- `length`\n\nAny of them that can be implemented (easily) with the JSON functions, should be.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/239", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/239/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/239/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/239", "id": 134510447, "node_id": "MDU6SXNzdWUxMzQ1MTA0NDc=", "number": 239, "title": "Test issue", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-18T08:16:11Z", "updated_at": "2016-02-18T08:16:18Z", "closed_at": "2016-02-18T08:16:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Summary: A test issue for the issue template\n\nDjango Version: Django 1.9.2.example\n\nDatabase and version used: MySQL 5.6.example\n\nVersion: Django-MySQL 1.0.1.example\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/235", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/235/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/235/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/235", "id": 133525239, "node_id": "MDU6SXNzdWUxMzM1MjUyMzk=", "number": 235, "title": "Smart iterator final time report is too precise", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-14T09:33:10Z", "updated_at": "2016-02-14T10:52:24Z", "closed_at": "2016-02-14T10:52:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It outputs all digits in the seconds field which isn't really useful. Maybe down to the milliseconds is good enough?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/228", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/228/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/228/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/228", "id": 131951657, "node_id": "MDU6SXNzdWUxMzE5NTE2NTc=", "number": 228, "title": "Travis coveralls parallel", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-07T09:16:04Z", "updated_at": "2016-02-08T18:12:19Z", "closed_at": "2016-02-08T18:12:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I don't think we're doing the parallel coveralls right, see: https://coveralls.zendesk.com/hc/en-us/articles/203484329-Parallel-Build-Webhook\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/225", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/225/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/225/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/225", "id": 131642582, "node_id": "MDU6SXNzdWUxMzE2NDI1ODI=", "number": 225, "title": "Command to output sql for converting datetime to datetime(6)", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206398037, "node_id": "MDU6TGFiZWwyMDYzOTgwMzc=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/feature", "name": "feature", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-05T13:20:08Z", "updated_at": "2016-02-06T11:24:26Z", "closed_at": "2016-02-06T11:24:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Loop over all django models with `DateTimeField`s and see if they are `datetime` in the database. If so, output the `ALTER TABLE` statement required to convert them to `datetime(6)`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/224", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/224/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/224/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/224", "id": 131034523, "node_id": "MDU6SXNzdWUxMzEwMzQ1MjM=", "number": 224, "title": "Smart iterator output \"Finished\" message should say how long it took", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174164986, "node_id": "MDU6TGFiZWwxNzQxNjQ5ODY=", "url": "https://api.github.com/repos/adamchainz/django-mysql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-03T14:01:21Z", "updated_at": "2016-02-08T20:13:54Z", "closed_at": "2016-02-08T20:13:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be nice after large data migrations to know how long it took. The `Finished!` message could easily be extended with the time taken.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adamchainz/django-mysql/issues/222", "repository_url": "https://api.github.com/repos/adamchainz/django-mysql", "labels_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/222/comments", "events_url": "https://api.github.com/repos/adamchainz/django-mysql/issues/222/events", "html_url": "https://github.com/adamchainz/django-mysql/issues/222", "id": 130761619, "node_id": "MDU6SXNzdWUxMzA3NjE2MTk=", "number": 222, "title": "Remove Django 1.7 support", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-02T17:54:03Z", "updated_at": "2016-05-24T09:02:56Z", "closed_at": "2016-05-24T09:02:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As per Django's [Supported Versions Grid](https://www.djangoproject.com/download/), 1.7 support ended December 2015, so we can remove it too.\n", "performed_via_github_app": null, "score": 1.0}]}