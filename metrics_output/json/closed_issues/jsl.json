{"total_count": 18, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aromanovich/jsl/issues/36", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/36/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/36/events", "html_url": "https://github.com/aromanovich/jsl/issues/36", "id": 284605808, "node_id": "MDU6SXNzdWUyODQ2MDU4MDg=", "number": 36, "title": "main", "user": {"login": "scottkleinman", "id": 1125917, "node_id": "MDQ6VXNlcjExMjU5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1125917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottkleinman", "html_url": "https://github.com/scottkleinman", "followers_url": "https://api.github.com/users/scottkleinman/followers", "following_url": "https://api.github.com/users/scottkleinman/following{/other_user}", "gists_url": "https://api.github.com/users/scottkleinman/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottkleinman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottkleinman/subscriptions", "organizations_url": "https://api.github.com/users/scottkleinman/orgs", "repos_url": "https://api.github.com/users/scottkleinman/repos", "events_url": "https://api.github.com/users/scottkleinman/events{/privacy}", "received_events_url": "https://api.github.com/users/scottkleinman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-26T20:24:06Z", "updated_at": "2017-12-26T20:26:24Z", "closed_at": "2017-12-26T20:26:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/34", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/34/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/34/events", "html_url": "https://github.com/aromanovich/jsl/issues/34", "id": 265944390, "node_id": "MDU6SXNzdWUyNjU5NDQzOTA=", "number": 34, "title": "howto generate scheme for json with large level of nesting", "user": {"login": "mcgr0g", "id": 4737492, "node_id": "MDQ6VXNlcjQ3Mzc0OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4737492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcgr0g", "html_url": "https://github.com/mcgr0g", "followers_url": "https://api.github.com/users/mcgr0g/followers", "following_url": "https://api.github.com/users/mcgr0g/following{/other_user}", "gists_url": "https://api.github.com/users/mcgr0g/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcgr0g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcgr0g/subscriptions", "organizations_url": "https://api.github.com/users/mcgr0g/orgs", "repos_url": "https://api.github.com/users/mcgr0g/repos", "events_url": "https://api.github.com/users/mcgr0g/events{/privacy}", "received_events_url": "https://api.github.com/users/mcgr0g/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T23:12:59Z", "updated_at": "2017-10-25T14:51:01Z", "closed_at": "2017-10-25T14:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nFor example, I have json example:\r\n```\r\n{\r\n  \"Company\": {\r\n    \"Developer\": {\r\n      \"Name\": {\r\n        \"LegalFormCode\": \"LTD\",\r\n        \"FullName\": \"Fly-by-night company. Mickey Mouse business\",\r\n        \"ShortName\": \"Fly-by-night company\",\r\n        \"comment\": \"comment\",\r\n      },\r\n      \"Address\": {,\r\n        \"state\": \"California\",\r\n        \"LocalityType\": \"city\",\r\n        \"LocalityName\": \"Los Angeles\",\r\n        \"StreetType\": \"\u0410venue\",\r\n        \"StreetName\": \"Mulholland\",\r\n        \"ConstructionInfo\": { \"house\": \"1\", \"korpus\": \"2\", \"stroenie\": \"3\" },\r\n        \"ApartmentInfo\": { \"flat\": \"4\", \"room\": \"5\", \"office\": \"6\", \"space\": \"7\" },\r\n        \"comment\": \"comment\",\r\n      },\r\n      \"WorkTime\": {\r\n        \"WorkDays\": \"Mo-Fr\",\r\n        \"TimePeriod\": \"8-20\",\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nI know it's terrible :) But how should i use JSL to get such [scheme](https://pastebin.com/WdgpcQG1)?\r\nDocument in Document in Document?\r\nOr I have to decare such classes as `WorkDays` and use it as \"DocumentField\" in `WorkTime`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/24", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/24/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/24/events", "html_url": "https://github.com/aromanovich/jsl/issues/24", "id": 153978894, "node_id": "MDU6SXNzdWUxNTM5Nzg4OTQ=", "number": 24, "title": "Consistently order schema definitions when \"ordered=True\"", "user": {"login": "ncoghlan", "id": 1026649, "node_id": "MDQ6VXNlcjEwMjY2NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1026649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncoghlan", "html_url": "https://github.com/ncoghlan", "followers_url": "https://api.github.com/users/ncoghlan/followers", "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}", "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions", "organizations_url": "https://api.github.com/users/ncoghlan/orgs", "repos_url": "https://api.github.com/users/ncoghlan/repos", "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}", "received_events_url": "https://api.github.com/users/ncoghlan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-10T10:59:18Z", "updated_at": "2016-05-12T03:19:47Z", "closed_at": "2016-05-11T18:12:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With hash randomisation enabled, the key order of the definitions namespace can change between runs. The typical solution to that kind of problem is to sort the keys when calling `json.dump`, but that doesn't work for `ordered=True` as sorting when dumping to JSON would also lose the definition order for properties.\n\nThe technique I am currently using is to sort the definitions before dumping to JSON:\n\n```\nschema = MyDocument().get_schema(ordered=True)\nschema[\"definitions\"] = OrderedDict(sorted(schema[\"definitions\"].items()))\nwith open(schema_file, \"w\") as f:\n    json.dump(schema, f, indent=4)\n```\n\nWould it be reasonable to make sorting the subschema definitions and putting them in an OrderedDict instance the default behaviour for both `get_schema` and `get_definitions_and_schema` when `ordered=True`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/23", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/23/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/23/events", "html_url": "https://github.com/aromanovich/jsl/issues/23", "id": 150454553, "node_id": "MDU6SXNzdWUxNTA0NTQ1NTM=", "number": 23, "title": "schema type \"array\"", "user": {"login": "berndca", "id": 466654, "node_id": "MDQ6VXNlcjQ2NjY1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/466654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berndca", "html_url": "https://github.com/berndca", "followers_url": "https://api.github.com/users/berndca/followers", "following_url": "https://api.github.com/users/berndca/following{/other_user}", "gists_url": "https://api.github.com/users/berndca/gists{/gist_id}", "starred_url": "https://api.github.com/users/berndca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berndca/subscriptions", "organizations_url": "https://api.github.com/users/berndca/orgs", "repos_url": "https://api.github.com/users/berndca/repos", "events_url": "https://api.github.com/users/berndca/events{/privacy}", "received_events_url": "https://api.github.com/users/berndca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-22T19:40:16Z", "updated_at": "2016-04-22T21:33:45Z", "closed_at": "2016-04-22T21:33:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to define a schema of type \"array\" using jsl?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/20", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/20/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/20/events", "html_url": "https://github.com/aromanovich/jsl/issues/20", "id": 136210560, "node_id": "MDU6SXNzdWUxMzYyMTA1NjA=", "number": 20, "title": "host-name format on StringField fails to validate", "user": {"login": "roopeshvaddepally", "id": 126345, "node_id": "MDQ6VXNlcjEyNjM0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/126345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roopeshvaddepally", "html_url": "https://github.com/roopeshvaddepally", "followers_url": "https://api.github.com/users/roopeshvaddepally/followers", "following_url": "https://api.github.com/users/roopeshvaddepally/following{/other_user}", "gists_url": "https://api.github.com/users/roopeshvaddepally/gists{/gist_id}", "starred_url": "https://api.github.com/users/roopeshvaddepally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roopeshvaddepally/subscriptions", "organizations_url": "https://api.github.com/users/roopeshvaddepally/orgs", "repos_url": "https://api.github.com/users/roopeshvaddepally/repos", "events_url": "https://api.github.com/users/roopeshvaddepally/events{/privacy}", "received_events_url": "https://api.github.com/users/roopeshvaddepally/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-24T22:40:21Z", "updated_at": "2016-04-23T19:16:15Z", "closed_at": "2016-04-23T19:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I took the jsonschema example of fstab file, your example in tutorial write up to FSTabEntry, but doesn't implement the FSTab part of it, so I tried to complete it. This fails to validate the schema for format 'host-name' in NFS class and server attribute.\n\nIf I change server part to simple StringField it passes.\n\nHere is the complete code I used.\n\n``` python\nimport json\nfrom jsonschema import validate\n\n\nclass DiskDevice(jsl.Document):\n    class Options:\n        additional_properties = False\n        definition_id = 'diskDevice'\n    type = jsl.StringField(enum=['disk'], required=True)\n    device = jsl.StringField(pattern='^/dev/[^/]+(/[^/]+)*$', required=True)\n\nclass DiskUUID(jsl.Document):\n    class Options:\n        additional_properties = False\n        definition_id = 'diskUUID'\n    type = jsl.StringField(enum=['disk'], required=True)\n    label = jsl.StringField(pattern='^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}'\n                                    '-[a-fA-F0-9]{12}$', required=True)\n\nclass NFS(jsl.Document):\n    class Options:\n        additional_properties = False\n        definition_id = 'nfs'\n    type = jsl.StringField(enum=['nfs'], required=True)\n    remotePath = jsl.StringField(pattern='^(/[^/]+)+$', required=True)\n    server = jsl.OneOfField([\n        jsl.StringField(format='host-name'),\n        jsl.StringField(format='ipv4'),\n        jsl.StringField(format='ipv6'),\n    ], required=True)\n\nclass TmpFS(jsl.Document):\n    class Options:\n        additional_properties = False\n        definition_id = 'tmpfs'\n    type = jsl.StringField(enum=['tmpfs'], required=True)\n    sizeInMB = jsl.IntField(minimum=16,maximum=512, required=True)\n\nclass Entry(jsl.Document):\n    class Options:\n        additional_properties = False\n    storage = jsl.OneOfField([\n        jsl.DocumentField(DiskDevice, as_ref=True),\n        jsl.DocumentField(DiskUUID, as_ref=True),\n        jsl.DocumentField(NFS, as_ref=True),\n        jsl.DocumentField(TmpFS, as_ref=True),\n    ])\n    fstype = jsl.StringField(enum=['ext3', 'ext4', 'btrfs'], required=False)\n    options = jsl.ArrayField(min_items=1,unique_items=True, required=False)\n    readonly = jsl.BooleanField(required=False)\n\nclass FSTable(jsl.Document):\n    class Options:\n        additional_properties = True\n        pattern_properties={\n            \"^(/[^/]+)+$\": jsl.DocumentField(Entry, as_ref=True)\n        }\n    root = jsl.DocumentField(Entry, name='/', required=True)\n\nprint(json.dumps(FSTable.get_schema(), indent=4))\n\nvalidate({\n    \"/\": {\n        \"storage\": {\n            \"type\": \"disk\",\n            \"device\": \"/dev/sda1\"\n        },\n        \"fstype\": \"btrfs\",\n        \"readonly\": True\n    },\n    \"/var\": {\n        \"storage\": {\n            \"type\": \"disk\",\n            \"label\": \"8f3ba6f4-5c70-46ec-83af-0d5434953e5f\"\n        },\n        \"fstype\": \"ext4\",\n        \"options\": [ \"nosuid\" ]\n    },\n    \"/tmp\": {\n        \"storage\": {\n            \"type\": \"tmpfs\",\n            \"sizeInMB\": 64\n        }\n    },\n    \"/var/www\": {\n        \"storage\": {\n            \"type\": \"nfs\",\n            \"server\": \"my.nfs.server\",\n            \"remotePath\": \"/exports/mypath\"\n        }\n    }\n}, FSTable.get_schema())\n```\n\nHere is the traceback:\n\n``` pytb\nValidationError                           Traceback (most recent call last)\n/tmp/ipython_edit_912m39yl/ipython_edit_lpduaw0l.py in <module>()\n     89         }\n     90     }\n---> 91 }, FSTable.get_schema())\n     92\n\n/auto/home.nas01a/rvaddepally/.pyenv/versions/3.6-dev/envs/myenv/lib/python3.6/site-packages/jsonschema/validators.py in validate(instance, schema, cls, *args, **kwargs)\n    476         cls = validator_for(schema)\n    477     cls.check_schema(schema)\n--> 478     cls(schema, *args, **kwargs).validate(instance)\n\n/auto/home.nas01a/rvaddepally/.pyenv/versions/3.6-dev/envs/myenv/lib/python3.6/site-packages/jsonschema/validators.py in validate(self, *args, **kwargs)\n    121         def validate(self, *args, **kwargs):\n    122             for error in self.iter_errors(*args, **kwargs):\n--> 123                 raise error\n    124\n    125         def is_type(self, instance, type):\n\nValidationError: {'server': 'my.nfs.server', 'remotePath': '/exports/mypath', 'type': 'nfs'} is not valid under any of the given schemas\n\nFailed validating 'oneOf' in schema['patternProperties']['^(/[^/]+)+$']['properties']['storage']:\n    {'oneOf': [{'$ref': '#/definitions/diskDevice'},\n               {'$ref': '#/definitions/diskUUID'},\n               {'$ref': '#/definitions/nfs'},\n               {'$ref': '#/definitions/tmpfs'}]}\n\nOn instance['/var/www']['storage']:\n    {'remotePath': '/exports/mypath',\n     'server': 'my.nfs.server',\n     'type': 'nfs'}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/19", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/19/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/19/events", "html_url": "https://github.com/aromanovich/jsl/issues/19", "id": 131353496, "node_id": "MDU6SXNzdWUxMzEzNTM0OTY=", "number": 19, "title": "pip install on Python 3.4 causes exception in ext/hyper.py", "user": {"login": "tmu", "id": 125665, "node_id": "MDQ6VXNlcjEyNTY2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/125665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmu", "html_url": "https://github.com/tmu", "followers_url": "https://api.github.com/users/tmu/followers", "following_url": "https://api.github.com/users/tmu/following{/other_user}", "gists_url": "https://api.github.com/users/tmu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmu/subscriptions", "organizations_url": "https://api.github.com/users/tmu/orgs", "repos_url": "https://api.github.com/users/tmu/repos", "events_url": "https://api.github.com/users/tmu/events{/privacy}", "received_events_url": "https://api.github.com/users/tmu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-04T13:49:05Z", "updated_at": "2016-02-06T10:59:41Z", "closed_at": "2016-02-06T10:59:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ python --version\nPython 3.4.3\n$ pip install jsl\nDownloading/unpacking jsl\n  Downloading jsl-0.2.1.tar.gz\n  Running setup.py (path:/oura/env/api/build/jsl/setup.py) egg_info for package jsl\n\nInstalling collected packages: jsl\n  Running setup.py install for jsl\n      File \"/oura/env/api/lib/python3.4/site-packages/jsl/ext/hyper.py\", line 70\n        print ArrayField()._extend_schema({})\n                       ^\n    SyntaxError: invalid syntax\n\n\nSuccessfully installed jsl\nCleaning up...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/17", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/17/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/17/events", "html_url": "https://github.com/aromanovich/jsl/issues/17", "id": 129856500, "node_id": "MDU6SXNzdWUxMjk4NTY1MDA=", "number": 17, "title": "It is not so obvious how to export the result of get_schema() so it is a schema", "user": {"login": "mulkieran", "id": 1218366, "node_id": "MDQ6VXNlcjEyMTgzNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1218366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mulkieran", "html_url": "https://github.com/mulkieran", "followers_url": "https://api.github.com/users/mulkieran/followers", "following_url": "https://api.github.com/users/mulkieran/following{/other_user}", "gists_url": "https://api.github.com/users/mulkieran/gists{/gist_id}", "starred_url": "https://api.github.com/users/mulkieran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mulkieran/subscriptions", "organizations_url": "https://api.github.com/users/mulkieran/orgs", "repos_url": "https://api.github.com/users/mulkieran/repos", "events_url": "https://api.github.com/users/mulkieran/events{/privacy}", "received_events_url": "https://api.github.com/users/mulkieran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-29T19:16:45Z", "updated_at": "2016-02-01T14:59:40Z", "closed_at": "2016-02-01T14:59:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running the simple introductory example in the docs gets me this:\n\n```\nDirectory.get_schema(ordered=True)\nOrderedDict([('$schema', 'http://json-schema.org/draft-04/schema#'), ('definitions', {'__main__.File': OrderedDict([('type', 'object'), ('properties', OrderedDict([('name', OrderedDict([('type', 'string')])), ('content', OrderedDict([('type', 'string')]))])), ('required', ['name', 'content']), ('additionalProperties', False)]), '__main__.Directory': OrderedDict([('type', 'object'), ('properties', OrderedDict([('name', OrderedDict([('type', 'string')])), ('content', OrderedDict([('type', 'array'), ('items', OrderedDict([('oneOf', [{'$ref': '#/definitions/__main__.File'}, {'$ref': '#/definitions/__main__.Directory'}])]))]))])), ('required', ['name', 'content']), ('additionalProperties', False)])}), ('$ref', '#/definitions/__main__.Directory')])\n```\n\nThis is all improved with ordered is False.\n\n```\n>>> Directory.get_schema(ordered=False)\n{'definitions': {'__main__.File': {'additionalProperties': False, 'required': ['name', 'content'], 'type': 'object', 'properties': {'content': {'type': 'string'}, 'name': {'type': 'string'}}}, '__main__.Directory': {'additionalProperties': False, 'required': ['name', 'content'], 'type': 'object', 'properties': {'content': {'items': {'oneOf': [{'$ref': '#/definitions/__main__.File'}, {'$ref': '#/definitions/__main__.Directory'}]}, 'type': 'array'}, 'name': {'type': 'string'}}}}, '$schema': 'http://json-schema.org/draft-04/schema#', '$ref': '#/definitions/__main__.Directory'}\n```\n\nPretty print helps with unordered:\n\n```\n>>> pprint.pprint(Directory.get_schema(ordered=False))\n{'$ref': '#/definitions/__main__.Directory',\n '$schema': 'http://json-schema.org/draft-04/schema#',\n 'definitions': {'__main__.Directory': {'additionalProperties': False,\n                                        'properties': {'content': {'items': {'oneOf': [{'$ref': '#/definitions/__main__.File'},\n                                                                                       {'$ref': '#/definitions/__main__.Directory'}]},\n                                                                   'type': 'array'},\n                                                       'name': {'type': 'string'}},\n                                        'required': ['name', 'content'],\n                                        'type': 'object'},\n                 '__main__.File': {'additionalProperties': False,\n                                   'properties': {'content': {'type': 'string'},\n                                                  'name': {'type': 'string'}},\n                                   'required': ['name', 'content'],\n                                   'type': 'object'}}}\n```\n\nBut, it would be nice to be able to export the result to a file simply, or if docs had a recommended best way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/16", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/16/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/16/events", "html_url": "https://github.com/aromanovich/jsl/issues/16", "id": 117918307, "node_id": "MDU6SXNzdWUxMTc5MTgzMDc=", "number": 16, "title": "JSL producing circular references", "user": {"login": "pbutler", "id": 104678, "node_id": "MDQ6VXNlcjEwNDY3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/104678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbutler", "html_url": "https://github.com/pbutler", "followers_url": "https://api.github.com/users/pbutler/followers", "following_url": "https://api.github.com/users/pbutler/following{/other_user}", "gists_url": "https://api.github.com/users/pbutler/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbutler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbutler/subscriptions", "organizations_url": "https://api.github.com/users/pbutler/orgs", "repos_url": "https://api.github.com/users/pbutler/repos", "events_url": "https://api.github.com/users/pbutler/events{/privacy}", "received_events_url": "https://api.github.com/users/pbutler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-19T22:04:36Z", "updated_at": "2015-11-23T18:23:29Z", "closed_at": "2015-11-23T18:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the following code I end up with circular references in the poduced schea where both Children and Child reference themselves and provide no further information about their schema.\n\n``` python\nclass Children(jsl.Document):\n     children = jsl.OneOfField([\n         jsl.DocumentField(\"Top\", as_ref=True),\n         jsl.DocumentField(\"Child\", as_ref=True),\n     ])\n\nclass Base(jsl.Document):\n    mid = jsl.StringField(required=True)\n    derivedFrom = jsl.DocumentField(\"Children\", as_ref=True)\n\n\nclass Child(Base):\n    abc = jsl.StringField(required=True)\n\n\nclass Top(Base):\n    model = jsl.StringField(required=True)\n\ntest = \"\"\"\n{\n    \"mid\": \"a\",\n    \"model\": \"a\",\n    \"derivedFrom\": {\n        \"children\": {\n            \"mid\": \"b\",\n            \"abc\": \"def\"\n        }\n    }\n}\n\"\"\"\n\nprint Top.get_schema(ordered=True)\n```\n\nproduces\n\n``` json\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"definitions\": {\n        \"__main__.Children\": {\n            \"$ref\": \"#/definitions/__main__.Children\"\n        },\n        \"__main__.Top\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"mid\": {\n                    \"type\": \"string\"\n                },\n                \"derivedFrom\": {\n                    \"$ref\": \"#/definitions/__main__.Children\"\n                },\n                \"model\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"mid\",\n                \"model\"\n            ],\n            \"additionalProperties\": false\n        },\n        \"__main__.Child\": {\n            \"$ref\": \"#/definitions/__main__.Child\"\n        }\n    },\n    \"$ref\": \"#/definitions/__main__.Top\"\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/15", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/15/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/15/events", "html_url": "https://github.com/aromanovich/jsl/issues/15", "id": 113245046, "node_id": "MDU6SXNzdWUxMTMyNDUwNDY=", "number": 15, "title": "Make Document._fields public ?", "user": {"login": "sebdiem", "id": 2878137, "node_id": "MDQ6VXNlcjI4NzgxMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2878137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebdiem", "html_url": "https://github.com/sebdiem", "followers_url": "https://api.github.com/users/sebdiem/followers", "following_url": "https://api.github.com/users/sebdiem/following{/other_user}", "gists_url": "https://api.github.com/users/sebdiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebdiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebdiem/subscriptions", "organizations_url": "https://api.github.com/users/sebdiem/orgs", "repos_url": "https://api.github.com/users/sebdiem/repos", "events_url": "https://api.github.com/users/sebdiem/events{/privacy}", "received_events_url": "https://api.github.com/users/sebdiem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-25T19:12:39Z", "updated_at": "2015-11-07T22:09:35Z", "closed_at": "2015-11-07T22:09:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I wonder what is the best way to access the fields' names when iterating over a `Document` fields.\nWith a `Document` like this:\n\n```\nclass Test(jsl.Document):\n    test = jsl.StringField()\n```\n\nIt is useful to retrieve the dict of fields: `{'test': jsl.StringField()}`\nCurrently I did not find anything better than `Document._fields` or `Document._backend.properties`\n\nWhy isn't there public api to access this information?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/14", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/14/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/14/events", "html_url": "https://github.com/aromanovich/jsl/issues/14", "id": 112635904, "node_id": "MDU6SXNzdWUxMTI2MzU5MDQ=", "number": 14, "title": "RECURSIVE_REFERENCE_CONSTANT not working under scopes", "user": {"login": "sebdiem", "id": 2878137, "node_id": "MDQ6VXNlcjI4NzgxMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2878137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebdiem", "html_url": "https://github.com/sebdiem", "followers_url": "https://api.github.com/users/sebdiem/followers", "following_url": "https://api.github.com/users/sebdiem/following{/other_user}", "gists_url": "https://api.github.com/users/sebdiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebdiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebdiem/subscriptions", "organizations_url": "https://api.github.com/users/sebdiem/orgs", "repos_url": "https://api.github.com/users/sebdiem/repos", "events_url": "https://api.github.com/users/sebdiem/events{/privacy}", "received_events_url": "https://api.github.com/users/sebdiem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-21T17:05:49Z", "updated_at": "2015-10-22T12:19:44Z", "closed_at": "2015-10-22T11:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\n```\nclass Test(jsl.Document):\n    with jsl.Scope('test') as test:\n        test.field = jsl.DocumentField(jsl.RECURSIVE_REFERENCE_CONSTANT)\n```\n\ngenerates an infinite recursion loop whereas\n\n```\nclass Test(jsl.Document):\n     test.field = jsl.DocumentField(jsl.RECURSIVE_REFERENCE_CONSTANT)\n```\n\nworks fine.\nIs it \"normal\" ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/13", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/13/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/13/events", "html_url": "https://github.com/aromanovich/jsl/issues/13", "id": 110131685, "node_id": "MDU6SXNzdWUxMTAxMzE2ODU=", "number": 13, "title": "Inheritance", "user": {"login": "erikvanzijst", "id": 63338, "node_id": "MDQ6VXNlcjYzMzM4", "avatar_url": "https://avatars1.githubusercontent.com/u/63338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikvanzijst", "html_url": "https://github.com/erikvanzijst", "followers_url": "https://api.github.com/users/erikvanzijst/followers", "following_url": "https://api.github.com/users/erikvanzijst/following{/other_user}", "gists_url": "https://api.github.com/users/erikvanzijst/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikvanzijst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikvanzijst/subscriptions", "organizations_url": "https://api.github.com/users/erikvanzijst/orgs", "repos_url": "https://api.github.com/users/erikvanzijst/repos", "events_url": "https://api.github.com/users/erikvanzijst/events{/privacy}", "received_events_url": "https://api.github.com/users/erikvanzijst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-07T00:48:30Z", "updated_at": "2015-10-12T15:28:29Z", "closed_at": "2015-10-12T15:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to generate a schema that encodes inheritance using `allOf` in a subtype to merge the properties from a base type. However, I'm having trouble figuring out how to do this in jsl.\n\nIs it possible to have jsl generate something along the following lines?\n\n``` javascript\n    {\n      \"$ref\": \"#/definitions/circle\",\n      \"definitions\": {\n        \"shape\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"color\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"circle\": {\n          \"type\": \"object\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/shape\"\n            },\n            {\n              \"properties\": {\n                \"radius\": {\n                  \"type\": \"number\"\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n```\n\nNote that I want to the schema to explicitly encode the relationship between `shape` and `circle`, instead of ending up with 2 independent objects where `circle` contains its own, inline copy of the `color` element.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/12", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/12/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/12/events", "html_url": "https://github.com/aromanovich/jsl/issues/12", "id": 102721765, "node_id": "MDU6SXNzdWUxMDI3MjE3NjU=", "number": 12, "title": "Support field names that are Python keywords", "user": {"login": "brianbaquiran", "id": 7248710, "node_id": "MDQ6VXNlcjcyNDg3MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7248710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianbaquiran", "html_url": "https://github.com/brianbaquiran", "followers_url": "https://api.github.com/users/brianbaquiran/followers", "following_url": "https://api.github.com/users/brianbaquiran/following{/other_user}", "gists_url": "https://api.github.com/users/brianbaquiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianbaquiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianbaquiran/subscriptions", "organizations_url": "https://api.github.com/users/brianbaquiran/orgs", "repos_url": "https://api.github.com/users/brianbaquiran/repos", "events_url": "https://api.github.com/users/brianbaquiran/events{/privacy}", "received_events_url": "https://api.github.com/users/brianbaquiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-24T06:54:57Z", "updated_at": "2015-08-24T13:51:14Z", "closed_at": "2015-08-24T13:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> import jsl\n>>> class Message(jsl.document):\n...     to=jsl.StringField(required=True)\n...     from=jsl.StringField(required=True)\n...     \n  File \"<input>\", line 3\n    from=jsl.StringField(required=True)\n        ^\nSyntaxError: invalid syntax\n```\n\nPerhaps some sort of `alias` parameter in `jsl.field.BaseField`? Something like\n\n``` python\n>>> class Message(jsl.document):\n...     to=jsl.StringField(required=True)\n...     from_alias=jsl.StringField(required=True, alias='from')\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/11", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/11/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/11/events", "html_url": "https://github.com/aromanovich/jsl/issues/11", "id": 100321532, "node_id": "MDU6SXNzdWUxMDAzMjE1MzI=", "number": 11, "title": "Field Names with a hyphen", "user": {"login": "hvishwanath", "id": 1391003, "node_id": "MDQ6VXNlcjEzOTEwMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1391003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvishwanath", "html_url": "https://github.com/hvishwanath", "followers_url": "https://api.github.com/users/hvishwanath/followers", "following_url": "https://api.github.com/users/hvishwanath/following{/other_user}", "gists_url": "https://api.github.com/users/hvishwanath/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvishwanath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvishwanath/subscriptions", "organizations_url": "https://api.github.com/users/hvishwanath/orgs", "repos_url": "https://api.github.com/users/hvishwanath/repos", "events_url": "https://api.github.com/users/hvishwanath/events{/privacy}", "received_events_url": "https://api.github.com/users/hvishwanath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-11T14:12:30Z", "updated_at": "2015-08-24T10:29:27Z", "closed_at": "2015-08-12T19:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a JSON that has keys with a hyphen. For example:\n\n```\n{\n  \"manifest-version\": \"1.0\",\n  \"file-type\":  \"mp3\"\n}\n```\n\nI am trying to write a jsl to generate a schema.\n\n```\nclass Entry(jsl.Document):\n    manifest_version = jsl.StringField(required=True)\n    file_type = jsl.StringField(enum=[\"mp3\",\"ogg\",\"wma\"])\n\n```\n\nThis produces a schema as below:\n\n```\n{ '$schema': 'http://json-schema.org/draft-04/schema#',\n  'additionalProperties': False,\n  'properties': { 'file_type': { 'enum': ['mp3', 'ogg', 'wma'],\n                                 'type': 'string'},\n                  'manifest_version': { 'type': 'string'}},\n  'required': ['manifest_version'],\n  'type': 'object'}\n\n```\n\nThe keys under properties need to have a hyphen (manifest-version and manifest_version). How can I accomplish this, since a '-' is not allowed in the variable name. I explored the Options and MetaClasses that are collecting the fields, but cannot figure out how to change the field name in the resultant schema.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/10", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/10/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/10/events", "html_url": "https://github.com/aromanovich/jsl/issues/10", "id": 91841924, "node_id": "MDU6SXNzdWU5MTg0MTkyNA==", "number": 10, "title": "hyperschema", "user": {"login": "artemshapovalov", "id": 2452373, "node_id": "MDQ6VXNlcjI0NTIzNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2452373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artemshapovalov", "html_url": "https://github.com/artemshapovalov", "followers_url": "https://api.github.com/users/artemshapovalov/followers", "following_url": "https://api.github.com/users/artemshapovalov/following{/other_user}", "gists_url": "https://api.github.com/users/artemshapovalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/artemshapovalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artemshapovalov/subscriptions", "organizations_url": "https://api.github.com/users/artemshapovalov/orgs", "repos_url": "https://api.github.com/users/artemshapovalov/repos", "events_url": "https://api.github.com/users/artemshapovalov/events{/privacy}", "received_events_url": "https://api.github.com/users/artemshapovalov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-29T15:50:45Z", "updated_at": "2015-10-12T15:28:39Z", "closed_at": "2015-10-12T15:28:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please tell me whether it is possible to use the library for generating hyperschema? Or it is possible somehow expand the basic attributes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/8", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/8/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/8/events", "html_url": "https://github.com/aromanovich/jsl/issues/8", "id": 74331867, "node_id": "MDU6SXNzdWU3NDMzMTg2Nw==", "number": 8, "title": "No necessary to put whole license file content in setup script", "user": {"login": "playpauseandstop", "id": 21325, "node_id": "MDQ6VXNlcjIxMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/21325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playpauseandstop", "html_url": "https://github.com/playpauseandstop", "followers_url": "https://api.github.com/users/playpauseandstop/followers", "following_url": "https://api.github.com/users/playpauseandstop/following{/other_user}", "gists_url": "https://api.github.com/users/playpauseandstop/gists{/gist_id}", "starred_url": "https://api.github.com/users/playpauseandstop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playpauseandstop/subscriptions", "organizations_url": "https://api.github.com/users/playpauseandstop/orgs", "repos_url": "https://api.github.com/users/playpauseandstop/repos", "events_url": "https://api.github.com/users/playpauseandstop/events{/privacy}", "received_events_url": "https://api.github.com/users/playpauseandstop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-08T11:31:17Z", "updated_at": "2015-05-12T21:10:24Z", "closed_at": "2015-05-12T21:00:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I suggest to put only license abbr into license field in setup script as done [Django](https://github.com/django/django/blob/master/setup.py#L43), [Flask](https://github.com/mitsuhiko/flask/blob/master/setup.py#L61), and other Python libraries.\n\nThis definitely helps when using [pypi-cli](https://warehouse.python.org/project/pypi-cli/), like `pypi info jsl`, and tries to find out latest jsl version released on PyPI. Now I need to scroll up to `Latest release: ...` line as whole license text printed there\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/7", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/7/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/7/events", "html_url": "https://github.com/aromanovich/jsl/issues/7", "id": 73171867, "node_id": "MDU6SXNzdWU3MzE3MTg2Nw==", "number": 7, "title": "typo", "user": {"login": "justinmoon", "id": 4335621, "node_id": "MDQ6VXNlcjQzMzU2MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4335621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinmoon", "html_url": "https://github.com/justinmoon", "followers_url": "https://api.github.com/users/justinmoon/followers", "following_url": "https://api.github.com/users/justinmoon/following{/other_user}", "gists_url": "https://api.github.com/users/justinmoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinmoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinmoon/subscriptions", "organizations_url": "https://api.github.com/users/justinmoon/orgs", "repos_url": "https://api.github.com/users/justinmoon/repos", "events_url": "https://api.github.com/users/justinmoon/events{/privacy}", "received_events_url": "https://api.github.com/users/justinmoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-05T01:13:24Z", "updated_at": "2015-05-06T16:50:57Z", "closed_at": "2015-05-06T16:50:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "example in the README says `Directory.to_schema()` ... I think it should say `Directory.get_schema()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/5", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/5/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/5/events", "html_url": "https://github.com/aromanovich/jsl/issues/5", "id": 72413363, "node_id": "MDU6SXNzdWU3MjQxMzM2Mw==", "number": 5, "title": "Looks like commit with 0.0.10 version not pushed to master", "user": {"login": "playpauseandstop", "id": 21325, "node_id": "MDQ6VXNlcjIxMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/21325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playpauseandstop", "html_url": "https://github.com/playpauseandstop", "followers_url": "https://api.github.com/users/playpauseandstop/followers", "following_url": "https://api.github.com/users/playpauseandstop/following{/other_user}", "gists_url": "https://api.github.com/users/playpauseandstop/gists{/gist_id}", "starred_url": "https://api.github.com/users/playpauseandstop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playpauseandstop/subscriptions", "organizations_url": "https://api.github.com/users/playpauseandstop/orgs", "repos_url": "https://api.github.com/users/playpauseandstop/repos", "events_url": "https://api.github.com/users/playpauseandstop/events{/privacy}", "received_events_url": "https://api.github.com/users/playpauseandstop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-01T11:33:42Z", "updated_at": "2015-05-06T17:43:00Z", "closed_at": "2015-05-06T17:43:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Subj\n\n[jsl/**init**.py still has 0.0.9 version](https://github.com/aromanovich/jsl/blob/master/jsl/__init__.py)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aromanovich/jsl/issues/2", "repository_url": "https://api.github.com/repos/aromanovich/jsl", "labels_url": "https://api.github.com/repos/aromanovich/jsl/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/aromanovich/jsl/issues/2/comments", "events_url": "https://api.github.com/repos/aromanovich/jsl/issues/2/events", "html_url": "https://github.com/aromanovich/jsl/issues/2", "id": 59436573, "node_id": "MDU6SXNzdWU1OTQzNjU3Mw==", "number": 2, "title": "Track changes with ChangeLog", "user": {"login": "playpauseandstop", "id": 21325, "node_id": "MDQ6VXNlcjIxMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/21325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/playpauseandstop", "html_url": "https://github.com/playpauseandstop", "followers_url": "https://api.github.com/users/playpauseandstop/followers", "following_url": "https://api.github.com/users/playpauseandstop/following{/other_user}", "gists_url": "https://api.github.com/users/playpauseandstop/gists{/gist_id}", "starred_url": "https://api.github.com/users/playpauseandstop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/playpauseandstop/subscriptions", "organizations_url": "https://api.github.com/users/playpauseandstop/orgs", "repos_url": "https://api.github.com/users/playpauseandstop/repos", "events_url": "https://api.github.com/users/playpauseandstop/events{/privacy}", "received_events_url": "https://api.github.com/users/playpauseandstop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-02T04:07:52Z", "updated_at": "2015-03-11T19:10:31Z", "closed_at": "2015-03-11T18:36:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nAs an user of jsl I'd like to have an ability to track changes in recently released versions. There are many options on how to track these changes, but as jsl has one page doc I suggest just add new section to a docs. Thanks!\n\nAnd many thanks for your work on library! Helps me describing JSON Schemas with ease!\n", "performed_via_github_app": null, "score": 1.0}]}