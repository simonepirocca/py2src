{"total_count": 82, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Yelp/bravado-core/issues/376", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/376/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/376/events", "html_url": "https://github.com/Yelp/bravado-core/issues/376", "id": 583865430, "node_id": "MDU6SXNzdWU1ODM4NjU0MzA=", "number": 376, "title": "uuid format is not registered with bravado-core", "user": {"login": "mrmaxformax", "id": 10068455, "node_id": "MDQ6VXNlcjEwMDY4NDU1", "avatar_url": "https://avatars0.githubusercontent.com/u/10068455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmaxformax", "html_url": "https://github.com/mrmaxformax", "followers_url": "https://api.github.com/users/mrmaxformax/followers", "following_url": "https://api.github.com/users/mrmaxformax/following{/other_user}", "gists_url": "https://api.github.com/users/mrmaxformax/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmaxformax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmaxformax/subscriptions", "organizations_url": "https://api.github.com/users/mrmaxformax/orgs", "repos_url": "https://api.github.com/users/mrmaxformax/repos", "events_url": "https://api.github.com/users/mrmaxformax/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmaxformax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T16:48:18Z", "updated_at": "2020-03-19T09:16:42Z", "closed_at": "2020-03-19T09:16:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nGot the warning: \"uuid format is not registered with bravado-core\"\r\nit's not critical issue but could you pls add the uuid not the next release?\r\nI added it based on the description and the Warning gone but not sure if it is 100% correct. May I ask you to check and help to fix (if it is incorrect)\r\n```python\r\nclass UUIDFormat:\r\n    def __init__(self, uuid):\r\n        self.uuid = uuid\r\n\r\ndef validate_uuid(uuid):\r\n    try:\r\n        UUID(uuid)\r\n     except SwaggerValidationError:\r\n         LOG.debug(f\"UUID {uuid} is invalid\")\r\n         raise SwaggerValidationError\r\n\r\nuuid_format = SwaggerFormat(format='uuid', \r\n    to_wire=lambda uuid_object: uuid_object.uuid,\r\n    to_python=lambda uuid_str: UUIDFormat(uuid_str),\r\n    validate=validate_uuid, description='validate UUID')\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/370", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/370/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/370/events", "html_url": "https://github.com/Yelp/bravado-core/issues/370", "id": 569497386, "node_id": "MDU6SXNzdWU1Njk0OTczODY=", "number": 370, "title": "Add pickle support to bravado_core.spec.Spec", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-23T13:44:42Z", "updated_at": "2020-04-02T18:27:19Z", "closed_at": "2020-04-02T18:27:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently `Spec` is not pickable\r\n```\r\n>>> import pickle\r\n>>> from bravado_core.spec import Spec\r\n>>> spec_dict = {\r\n...   \"swagger\": \"2.0\",\r\n...   \"info\": {\r\n...     \"title\": \"Test\",\r\n...     \"version\": \"1.0\"\r\n...   },\r\n...   \"paths\": {},\r\n...   \"definitions\": {}\r\n... }\r\n>>> pickle.dumps(Spec.from_dict(spec_dict))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: Can't pickle local object 'build_http_handlers.<locals>.download'\r\n>>>\r\n```\r\n\r\nThis prevents libraries to use `Spec` instances across processes or just to pickle clients.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/359", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/359/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/359/events", "html_url": "https://github.com/Yelp/bravado-core/issues/359", "id": 517733531, "node_id": "MDU6SXNzdWU1MTc3MzM1MzE=", "number": 359, "title": "Validation fails for x-nullable objects that happen to have discriminator", "user": {"login": "xaralis", "id": 441739, "node_id": "MDQ6VXNlcjQ0MTczOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/441739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xaralis", "html_url": "https://github.com/xaralis", "followers_url": "https://api.github.com/users/xaralis/followers", "following_url": "https://api.github.com/users/xaralis/following{/other_user}", "gists_url": "https://api.github.com/users/xaralis/gists{/gist_id}", "starred_url": "https://api.github.com/users/xaralis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xaralis/subscriptions", "organizations_url": "https://api.github.com/users/xaralis/orgs", "repos_url": "https://api.github.com/users/xaralis/repos", "events_url": "https://api.github.com/users/xaralis/events{/privacy}", "received_events_url": "https://api.github.com/users/xaralis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-05T12:07:26Z", "updated_at": "2020-02-20T16:16:22Z", "closed_at": "2020-02-20T16:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where a thing is defined as `x-nullable` and has a `discriminator` at the same time, `bravado-core@5.14.0` validation fails with a `TypeError` in case the instance resolves to `None`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/falcon/api.py\", line 286, in __call__\r\n    process_response(req, resp, resource, req_succeeded)\r\n  File \"/Users/myself/project/.venv/kw/misc/openapi/validator.py\", line 141, in process_response\r\n    validate_response(resp_spec, operation, bravado_response)\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/response.py\", line 175, in validate_response\r\n    validate_response_body(op, response_spec, response)\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/response.py\", line 214, in validate_response_body\r\n    op.swagger_spec, response_body_spec, response_value,\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/validate.py\", line 59, in validate_schema_object\r\n    validate_object(swagger_spec, schema_object_spec, value)\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/validate.py\", line 25, in scrubbed\r\n    return func(*args, **kwargs)\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/validate.py\", line 109, in validate_object\r\n    ).validate(value)\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 347, in validate\r\n    for error in self.iter_errors(*args, **kwargs):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 323, in iter_errors\r\n    for error in errors:\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/_validators.py\", line 315, in allOf\r\n    for error in validator.descend(instance, subschema, schema_path=index):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 339, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 323, in iter_errors\r\n    for error in errors:\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/swagger20_validator.py\", line 234, in ref_validator\r\n    for error in validator.descend(instance, resolved):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 339, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 323, in iter_errors\r\n    for error in errors:\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/_validators.py\", line 286, in properties\r\n    schema_path=property,\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 339, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 323, in iter_errors\r\n    for error in errors:\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/swagger20_validator.py\", line 234, in ref_validator\r\n    for error in validator.descend(instance, resolved):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 339, in descend\r\n    for error in self.iter_errors(instance, schema):\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/jsonschema/validators.py\", line 322, in iter_errors\r\n    errors = validator(self, v, instance, _schema) or ()\r\n  File \"/Users/myself/project/.venv/.venv/lib/python3.7/site-packages/bravado_core/swagger20_validator.py\", line 157, in discriminator_validator\r\n    discriminator_value = instance[discriminator_attribute]\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\nThis definitely should error out and instead validate A-OK in fact.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/321", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/321/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/321/events", "html_url": "https://github.com/Yelp/bravado-core/issues/321", "id": 418332298, "node_id": "MDU6SXNzdWU0MTgzMzIyOTg=", "number": 321, "title": "bravado-core assumes that response body is present if a body parameter is defined", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-07T14:15:44Z", "updated_at": "2019-03-08T07:15:16Z", "closed_at": "2019-03-08T07:15:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently, if an endpoint does define a body parameter then bravado-core reads the content of the body and throws a `SwaggerMappingError` if the body is not valid json.\r\n\r\nBut, if the body parameter is optional then the body won't be present and so the exception will be thrown, which basically forces the body to be defined even if the parameter is optional.\r\n\r\nhttps://github.com/Yelp/bravado-core/blob/43c8002f43e0f2f0e5caf2ead6660677431b3895/bravado_core/param.py#L185\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/318", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/318/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/318/events", "html_url": "https://github.com/Yelp/bravado-core/issues/318", "id": 417231581, "node_id": "MDU6SXNzdWU0MTcyMzE1ODE=", "number": 318, "title": "Travis build is failing on python2.7 after jsonschema 3.0.0 release", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-05T10:41:41Z", "updated_at": "2019-03-07T05:38:52Z", "closed_at": "2019-03-07T05:28:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Soon after `jsonschema==3.0.0` was released bravado-core tests are failing on Python 2.7 ([before](https://travis-ci.org/Yelp/bravado-core/jobs/497553696), [after](https://travis-ci.org/Yelp/bravado-core/jobs/497851981)).\r\n\r\nWe should fix tests as `bravado-core>= 5.10.0` should be able to support `jsonschema==3.0.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/311", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/311/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/311/events", "html_url": "https://github.com/Yelp/bravado-core/issues/311", "id": 384934801, "node_id": "MDU6SXNzdWUzODQ5MzQ4MDE=", "number": 311, "title": "Spec.from_dict() fails with a local file uri as origin_url", "user": {"login": "tscheburaschka", "id": 28730622, "node_id": "MDQ6VXNlcjI4NzMwNjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/28730622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tscheburaschka", "html_url": "https://github.com/tscheburaschka", "followers_url": "https://api.github.com/users/tscheburaschka/followers", "following_url": "https://api.github.com/users/tscheburaschka/following{/other_user}", "gists_url": "https://api.github.com/users/tscheburaschka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tscheburaschka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tscheburaschka/subscriptions", "organizations_url": "https://api.github.com/users/tscheburaschka/orgs", "repos_url": "https://api.github.com/users/tscheburaschka/repos", "events_url": "https://api.github.com/users/tscheburaschka/events{/privacy}", "received_events_url": "https://api.github.com/users/tscheburaschka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-27T18:45:49Z", "updated_at": "2018-11-30T09:54:29Z", "closed_at": "2018-11-30T09:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Problem\r\nI was trying to solve problem #310 and ran into the following issue.\r\n\r\n### Repro steps\r\nThe file petstoreExample.yaml is identical to the original example under:\r\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/examples/v2.0/yaml/petstore.yaml\r\nThe file path to petstoreExample.yaml is \r\nD:/Jan/eight/more/subdirs/without/spaces/scripts/petstoreExample_20.yaml\r\nThe code I executed was:\r\n```python\r\nfrom pathlib import Path\r\nimport yaml\r\nfrom bravado_core.spec import Spec\r\n\r\nschema_path = Path.cwd() / 'scripts' / 'petstoreExample_20.yaml'\r\nwith open(schema_path, 'r') as f:\r\n    raw_spec = yaml.load(f)\r\nspec = Spec.from_dict(raw_spec, origin_url=schema_path.as_uri())\r\n```\r\nThe last line fails with:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 380, in resolve_from_url\r\n    document = self.store[url]\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\_utils.py\", line 23, in __getitem__\r\n    return self.store[self.normalize(uri)]\r\nKeyError: ''\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 383, in resolve_from_url\r\n    document = self.resolve_remote(url)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 474, in resolve_remote\r\n    result = json.loads(urlopen(uri).read().decode(\"utf-8\"))\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\urllib\\request.py\", line 223, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\urllib\\request.py\", line 511, in open\r\n    req = Request(fullurl, data)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\urllib\\request.py\", line 329, in __init__\r\n    self.full_url = url\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\urllib\\request.py\", line 355, in full_url\r\n    self._parse()\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\urllib\\request.py\", line 384, in _parse\r\n    raise ValueError(\"unknown url type: %r\" % self.full_url)\r\nValueError: unknown url type: ''\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2961, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-10-5f4622581aff>\", line 1, in <module>\r\n    spec = Spec.from_dict(raw_spec, origin_url=schema_path.as_uri())\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\bravado_core\\spec.py\", line 180, in from_dict\r\n    spec.build()\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\bravado_core\\spec.py\", line 192, in build\r\n    self._validate_spec()\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\bravado_core\\spec.py\", line 188, in _validate_spec\r\n    http_handlers=build_http_handlers(self.http_client),\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\swagger_spec_validator\\validator20.py\", line 126, in validate_spec\r\n    validate_apis(apis, bound_deref)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\swagger_spec_validator\\validator20.py\", line 343, in validate_apis\r\n    validate_responses(api_name, oper_name, oper_body['responses'], deref)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\swagger_spec_validator\\validator20.py\", line 241, in validate_responses\r\n    visited_definitions_ids=set(),\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\swagger_spec_validator\\validator20.py\", line 417, in validate_definition\r\n    definition = deref(definition)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\swagger_spec_validator\\validator20.py\", line 78, in deref\r\n    with resolver.resolving(ref) as target:\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\contextlib.py\", line 81, in __enter__\r\n    return next(self.gen)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 366, in resolving\r\n    url, resolved = self.resolve(ref)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 375, in resolve\r\n    return url, self._remote_cache(url)\r\n  File \"C:\\Users\\Jan\\Miniconda3\\envs\\adaz\\lib\\site-packages\\jsonschema\\validators.py\", line 385, in resolve_from_url\r\n    raise RefResolutionError(exc)\r\njsonschema.exceptions.RefResolutionError: unknown url type: ''\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/310", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/310/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/310/events", "html_url": "https://github.com/Yelp/bravado-core/issues/310", "id": 384934238, "node_id": "MDU6SXNzdWUzODQ5MzQyMzg=", "number": 310, "title": "Spec.from_dict() fails to return models in spec.definitions", "user": {"login": "tscheburaschka", "id": 28730622, "node_id": "MDQ6VXNlcjI4NzMwNjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/28730622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tscheburaschka", "html_url": "https://github.com/tscheburaschka", "followers_url": "https://api.github.com/users/tscheburaschka/followers", "following_url": "https://api.github.com/users/tscheburaschka/following{/other_user}", "gists_url": "https://api.github.com/users/tscheburaschka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tscheburaschka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tscheburaschka/subscriptions", "organizations_url": "https://api.github.com/users/tscheburaschka/orgs", "repos_url": "https://api.github.com/users/tscheburaschka/repos", "events_url": "https://api.github.com/users/tscheburaschka/events{/privacy}", "received_events_url": "https://api.github.com/users/tscheburaschka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-27T18:44:21Z", "updated_at": "2018-11-30T19:30:45Z", "closed_at": "2018-11-30T19:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Problem\r\nI was trying to evaluate bravado_core for use as a validating deserializer in our project. As we do not expose a true REST-frontend via HTTP but receive JSON-requests via other means, I am more interested in the python models returned from bravado_core.\r\nI was trying the following:\r\n```python\r\nimport yaml\r\nfrom bravado_core.spec import Spec\r\n\r\nschema_path = 'scripts/petstoreExample_20.yaml'\r\nwith open(schema_path, 'r') as f:\r\n    raw_spec = yaml.load(f)\r\nspec = Spec.from_dict(raw_spec)\r\n```\r\nThe file petstoreExample.yaml is identical to the original example under:\r\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/examples/v2.0/yaml/petstore.yaml\r\n\r\nI expected to find at least the explicitly referenced Python models Pets and Error in spec.definitions\r\nbut instead I got an empty dictionary.\r\nAfter a long time of debugging and tracing I narrowed the problem down to a bug in the URI to the 'definitions' part of the schema that was probably caused by an empty origin_url.\r\n\r\nTherefore I tried next to give a valid URI for the local file but then I got another error (see: #311).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/303", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/303/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/303/events", "html_url": "https://github.com/Yelp/bravado-core/issues/303", "id": 375567487, "node_id": "MDU6SXNzdWUzNzU1Njc0ODc=", "number": 303, "title": "unmarshal_request breaks with jsonchema 3.x.x", "user": {"login": "gabisurita", "id": 4023375, "node_id": "MDQ6VXNlcjQwMjMzNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4023375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabisurita", "html_url": "https://github.com/gabisurita", "followers_url": "https://api.github.com/users/gabisurita/followers", "following_url": "https://api.github.com/users/gabisurita/following{/other_user}", "gists_url": "https://api.github.com/users/gabisurita/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabisurita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabisurita/subscriptions", "organizations_url": "https://api.github.com/users/gabisurita/orgs", "repos_url": "https://api.github.com/users/gabisurita/repos", "events_url": "https://api.github.com/users/gabisurita/events{/privacy}", "received_events_url": "https://api.github.com/users/gabisurita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-30T16:01:37Z", "updated_at": "2018-10-31T10:59:14Z", "closed_at": "2018-10-31T10:59:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently, bravado_core is trying to access a validator method that doesn't exists on jsonschema>=3.0.0a1. This version is within the range of valid dependencies: https://github.com/Yelp/bravado-core/blob/master/setup.py#L14\r\n\r\nHere's my traceback:\r\n\r\n```\r\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 OpenAPIPluginsTest.test_delete_history \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\r\nself = <tests.openapi.test_plugins.OpenAPIPluginsTest testMethod=test_delete_history>\r\n    def test_delete_history(self):\r\n        op = self.resources[\"History\"].delete_history\r\n        self.request.path = {\"bucket_id\": \"b1\"}\r\n>       self.validate_request_call(op)\r\n/home/travis/build/Kinto/kinto/tests/openapi/test_plugins.py:13: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/travis/build/Kinto/kinto/tests/openapi/support.py:94: in validate_request_call\r\n    params = unmarshal_request(self.request, op)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/request.py:66: in unmarshal_request\r\n    param_value = unmarshal_param(param, request)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/param.py:200: in unmarshal_param\r\n    validate_schema_object(swagger_spec, param_spec, raw_value)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/validate.py:53: in validate_schema_object\r\n    validate_primitive(swagger_spec, schema_object_spec, value)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/validate.py:25: in scrubbed\r\n    return func(*args, **kwargs)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/validate.py:79: in validate_primitive\r\n    resolver=swagger_spec.resolver).validate(value)\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/jsonschema/validators.py:304: in validate\r\n    for error in self.iter_errors(*args, **kwargs):\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/jsonschema/validators.py:280: in iter_errors\r\n    for error in errors:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nswagger_spec = <bravado_core.spec.Spec object at 0x7faeb1ed6860>\r\nvalidator = <jsonschema.validators.Validator object at 0x7faeb18604e0>\r\ntypes = 'string', instance = 'b1'\r\nschema = {'in': 'path', 'name': 'bucket_id', 'required': True, 'type': 'string'}\r\n    def type_validator(swagger_spec, validator, types, instance, schema):\r\n        \"\"\"Skip the `type` validator when a Swagger parameter value is None.\r\n        Otherwise it will fail with a \"None is not a valid type\" failure instead\r\n        of letting the downstream `required_validator` do its job.\r\n        Also skip when a Swagger property value is None and the schema contains\r\n        the extension field `x-nullable` set to True.\r\n        In all other cases, delegate to the existing Draft4 `type` validator.\r\n    \r\n        :param swagger_spec: needed for access to deref()\r\n        :type swagger_spec: :class:`bravado_core.spec.Spec`\r\n        :param validator: Validator class used to validate the object\r\n        :type validator: :class:`Swagger20Validator` or\r\n            :class:`jsonschema.validators.Draft4Validator`\r\n        :param types: validate types\r\n        :type types: string or list\r\n        :param instance: object instance value\r\n        :param schema: swagger spec for the object\r\n        :type schema: dict\r\n        \"\"\"\r\n        if (is_param_spec(swagger_spec, schema) or\r\n                is_prop_nullable(swagger_spec, schema)) and instance is None:\r\n            return\r\n    \r\n>       for error in _validators.type_draft4(validator, types, instance, schema):\r\nE       AttributeError: module 'jsonschema._validators' has no attribute 'type_draft4'\r\n/home/travis/build/Kinto/kinto/.tox/py35/lib/python3.5/site-packages/bravado_core/swagger20_validator.py:62: AttributeError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/301", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/301/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/301/events", "html_url": "https://github.com/Yelp/bravado-core/issues/301", "id": 367359883, "node_id": "MDU6SXNzdWUzNjczNTk4ODM=", "number": 301, "title": "Swagger yaml validation reliant on ordering ", "user": {"login": "lguo52", "id": 43894023, "node_id": "MDQ6VXNlcjQzODk0MDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/43894023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lguo52", "html_url": "https://github.com/lguo52", "followers_url": "https://api.github.com/users/lguo52/followers", "following_url": "https://api.github.com/users/lguo52/following{/other_user}", "gists_url": "https://api.github.com/users/lguo52/gists{/gist_id}", "starred_url": "https://api.github.com/users/lguo52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lguo52/subscriptions", "organizations_url": "https://api.github.com/users/lguo52/orgs", "repos_url": "https://api.github.com/users/lguo52/repos", "events_url": "https://api.github.com/users/lguo52/events{/privacy}", "received_events_url": "https://api.github.com/users/lguo52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-05T20:35:22Z", "updated_at": "2018-10-31T08:28:21Z", "closed_at": "2018-10-31T08:28:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Depending on the ordering of properties, validation will return different errors for this problem:\r\n\r\nThis validation error \r\n```\r\njsonschema.exceptions.ValidationError: '@type' is a required property\r\nFailed validating 'required' in schema:\r\n```\r\n\r\noccurs when a discriminator (which is also a required property) is not included in the payload to be validated.  However, if discriminator is defined after the required property is, the error returned is a KeyError.\r\n\r\nExample:\r\n```\r\n  Food:\r\n    type: object\r\n    properties:\r\n      '@type':\r\n        type: string\r\n        enum:\r\n        - GRAIN\r\n        - FRUIT\r\n        - VEGETABLE\r\n        - DAIRY\r\n        - MEAT\r\n      name:\r\n        type: string\r\n        example: Apple\r\n    required:\r\n    - '@type'\r\n    - name\r\n    discriminator: '@type'\r\n```\r\n\r\nversus \r\n\r\n\r\n```\r\n  Food:\r\n    type: object\r\n    properties:\r\n      '@type':\r\n        type: string\r\n        enum:\r\n        - GRAIN\r\n        - FRUIT\r\n        - VEGETABLE\r\n        - DAIRY\r\n        - MEAT\r\n      name:\r\n        type: string\r\n        example: Apple\r\n    discriminator: '@type'\r\n    required:\r\n    - '@type'\r\n    - name\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/299", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/299/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/299/events", "html_url": "https://github.com/Yelp/bravado-core/issues/299", "id": 362213185, "node_id": "MDU6SXNzdWUzNjIyMTMxODU=", "number": 299, "title": "path portion of 'origin_url' being ignored in build_api_serving_url()", "user": {"login": "DStape", "id": 7023894, "node_id": "MDQ6VXNlcjcwMjM4OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7023894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DStape", "html_url": "https://github.com/DStape", "followers_url": "https://api.github.com/users/DStape/followers", "following_url": "https://api.github.com/users/DStape/following{/other_user}", "gists_url": "https://api.github.com/users/DStape/gists{/gist_id}", "starred_url": "https://api.github.com/users/DStape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DStape/subscriptions", "organizations_url": "https://api.github.com/users/DStape/orgs", "repos_url": "https://api.github.com/users/DStape/repos", "events_url": "https://api.github.com/users/DStape/events{/privacy}", "received_events_url": "https://api.github.com/users/DStape/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-20T14:24:49Z", "updated_at": "2018-11-13T14:12:01Z", "closed_at": "2018-11-13T14:12:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When an origin_url of http://localhost/x is specified, ```/x``` is expected to be present in all URLs that the function returns.\r\n\r\nThis was the behaviour until https://github.com/Yelp/bravado-core/commit/108363636068fc6b1234bad2a9139550e256af3a was added.\r\n\r\nThe message in that commit indicates the behaviour change was made because, \"According to the Swagger spec we should not use the path part of the spec URL\".\r\n\r\nHowever, I'm not sure I agree. Looking at https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#fixed-fields, the only restriction I see is, \"The basePath does not support path templating.\".\r\n\r\nIn our use case, the basePath is a variable and we've been using origin_url in our bravado-based tests which are now broken with the change. So for now, we've pinned bravado-core to a lower version.\r\n\r\nI'd like to see the original behaviour (full origin_url being honoured) re-instated, especially since I don't see any reason why this would violate the swagger 2.0 spec (although I may be mis-reading it, so please correct me :)).\r\n\r\n@mulmschneider , are you able to expand on why the behaviour change was made?\r\n\r\nThanks for your time,\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/291", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/291/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/291/events", "html_url": "https://github.com/Yelp/bravado-core/issues/291", "id": 345063665, "node_id": "MDU6SXNzdWUzNDUwNjM2NjU=", "number": 291, "title": "how do i fix this warning ", "user": {"login": "ChrisJohannnesson", "id": 39281666, "node_id": "MDQ6VXNlcjM5MjgxNjY2", "avatar_url": "https://avatars1.githubusercontent.com/u/39281666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisJohannnesson", "html_url": "https://github.com/ChrisJohannnesson", "followers_url": "https://api.github.com/users/ChrisJohannnesson/followers", "following_url": "https://api.github.com/users/ChrisJohannnesson/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisJohannnesson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisJohannnesson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisJohannnesson/subscriptions", "organizations_url": "https://api.github.com/users/ChrisJohannnesson/orgs", "repos_url": "https://api.github.com/users/ChrisJohannnesson/repos", "events_url": "https://api.github.com/users/ChrisJohannnesson/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisJohannnesson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-27T01:58:38Z", "updated_at": "2019-03-07T14:11:53Z", "closed_at": "2019-03-07T14:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Warning (from warnings module):\r\n  File \"C:\\Python37\\lib\\site-packages\\bravado_core\\spec.py\", line 271\r\n    category=Warning,\r\nWarning: JSON format is not registered with bravado-core!\r\n([], <bravado.requests_client.RequestsResponseAdapter object at 0x000002424B7ECB00>)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/289", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/289/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/289/events", "html_url": "https://github.com/Yelp/bravado-core/issues/289", "id": 343159691, "node_id": "MDU6SXNzdWUzNDMxNTk2OTE=", "number": 289, "title": "Sanitization of Swagger parameters does not include Python keywords", "user": {"login": "kadrach", "id": 206176, "node_id": "MDQ6VXNlcjIwNjE3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/206176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadrach", "html_url": "https://github.com/kadrach", "followers_url": "https://api.github.com/users/kadrach/followers", "following_url": "https://api.github.com/users/kadrach/following{/other_user}", "gists_url": "https://api.github.com/users/kadrach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadrach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadrach/subscriptions", "organizations_url": "https://api.github.com/users/kadrach/orgs", "repos_url": "https://api.github.com/users/kadrach/repos", "events_url": "https://api.github.com/users/kadrach/events{/privacy}", "received_events_url": "https://api.github.com/users/kadrach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-20T15:53:26Z", "updated_at": "2018-07-31T07:55:46Z", "closed_at": "2018-07-31T07:55:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nparameters:                                                    \r\n  - in: \"body\"                                                   \r\n    name: \"from\"                                                 \r\n    description: \"Pet object that needs to be added to the store\"\r\n    required: true                                               \r\n    schema:                                                      \r\n      type: object                                               \r\n```\r\n\r\n```\r\ns.pet.post_pet()\r\n...\r\nSwaggerMappingError: from is a required parameter\r\n```\r\n\r\n```\r\ns.pet.post_pet(from={})\r\n                      ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nIt looks like the sanitization of parameter names does not check for Python keywords. Is there another API available fire the request that avoids this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/288", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/288/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/288/events", "html_url": "https://github.com/Yelp/bravado-core/issues/288", "id": 341051903, "node_id": "MDU6SXNzdWUzNDEwNTE5MDM=", "number": 288, "title": "collectionFormat not supported?", "user": {"login": "frankandrobot", "id": 787249, "node_id": "MDQ6VXNlcjc4NzI0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/787249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankandrobot", "html_url": "https://github.com/frankandrobot", "followers_url": "https://api.github.com/users/frankandrobot/followers", "following_url": "https://api.github.com/users/frankandrobot/following{/other_user}", "gists_url": "https://api.github.com/users/frankandrobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankandrobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankandrobot/subscriptions", "organizations_url": "https://api.github.com/users/frankandrobot/orgs", "repos_url": "https://api.github.com/users/frankandrobot/repos", "events_url": "https://api.github.com/users/frankandrobot/events{/privacy}", "received_events_url": "https://api.github.com/users/frankandrobot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T14:59:19Z", "updated_at": "2018-07-14T08:06:13Z", "closed_at": "2018-07-14T08:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following is valid swagger and says that query args separated by pipes are valid. For example, `user_role=administrator|viewer`. However, bravado fails with the errors below\r\n\r\n```yaml\r\n - in: query\r\n        name: user_role\r\n        type: array\r\n        collectionFormat: pipes\r\n        items:\r\n          type: string\r\n          enum: [administrator, publisher, viewer]\r\n```\r\n\r\n<details>\r\n<summary>failing bravado tests</summary>\r\n\r\n```\r\n4) ERROR: Logical OR works for user_role.\r\n----------------------------------------------------------------------\r\n   Traceback (most recent call last):\r\n    test_users.py line 45 in test_getUsers_filter_by_user_role_logical_OR\r\n      result = self.client.users.getUsers(user_role='viewer|publisher|administrator').result()\r\n    /usr/local/lib/python2.7/dist-packages/bravado/client.py line 250 in __call__\r\n      self.operation, request_options, **op_kwargs)\r\n    /usr/local/lib/python2.7/dist-packages/bravado/client.py line 291 in construct_request\r\n      construct_params(operation, request, op_kwargs)\r\n    /usr/local/lib/python2.7/dist-packages/bravado/client.py line 313 in construct_params\r\n      marshal_param(param, param_value, request)\r\n    helper.py line 23 in _marshal_param\r\n      _old_marshal_param(param, value, request)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/param.py line 119 in marshal_param\r\n      value = marshal_schema_object(swagger_spec, param_spec, value)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/marshal.py line 36 in marshal_schema_object\r\n      return marshal_array(swagger_spec, schema_object_spec, value)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/marshal.py line 99 in marshal_array\r\n      .format(type(array_value), array_value))\r\n   SwaggerMappingError: Expected list like type for <type 'str'>: viewer|publisher|administrator\r\n   -------------------- >> begin captured logging << --------------------\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditLogs already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditPager already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditEntry already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/Users already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/User already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallations already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallation already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditPager already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditEntry already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallation already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/User already has scope attached\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/AuditLogs\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/AuditPager\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/AuditPager\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/Users\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/RInstallations\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/AuditPager\r\n   swagger_spec_validator.validator20: DEBUG: Resolving #/definitions/AuditPager\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditLogs already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditPager already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditEntry already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/Users already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/User already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallations already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallation already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/Forbidden already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/responses/NotAuthorized already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/APIError already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditPager already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/AuditEntry already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/RInstallation already has scope attached\r\n   swagger_spec_validator.ref_validators: DEBUG: Ref #/definitions/User already has scope attached\r\n   bravado_core.resource: DEBUG: Building resource 'r_information'\r\n   bravado_core.resource: DEBUG: Building resource 'audit_logs'\r\n   bravado_core.resource: DEBUG: Building resource 'users'\r\n   bravado.client: DEBUG: getUsers({'user_role': 'viewer|publisher|administrator'})\r\n   --------------------- >> end captured logging << \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\r\n```\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/281", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/281/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/281/events", "html_url": "https://github.com/Yelp/bravado-core/issues/281", "id": 336240563, "node_id": "MDU6SXNzdWUzMzYyNDA1NjM=", "number": 281, "title": "Incorrect marshalling of boolean query params", "user": {"login": "aviskase", "id": 3819473, "node_id": "MDQ6VXNlcjM4MTk0NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3819473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviskase", "html_url": "https://github.com/aviskase", "followers_url": "https://api.github.com/users/aviskase/followers", "following_url": "https://api.github.com/users/aviskase/following{/other_user}", "gists_url": "https://api.github.com/users/aviskase/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviskase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviskase/subscriptions", "organizations_url": "https://api.github.com/users/aviskase/orgs", "repos_url": "https://api.github.com/users/aviskase/repos", "events_url": "https://api.github.com/users/aviskase/events{/privacy}", "received_events_url": "https://api.github.com/users/aviskase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T13:53:49Z", "updated_at": "2018-07-17T14:32:31Z", "closed_at": "2018-07-17T14:32:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take for example this param:\r\n```json\r\n\"parameters\": [\r\n          {\r\n            \"name\": \"force\",\r\n            \"type\": \"boolean\",\r\n            \"in\": \"query\"\r\n          }\r\n]\r\n```\r\n\r\nCurrently when bravado-core tries to marshal this param, it just casts it to `str()` which leads to `True/False` instead of `true/false`\r\n\r\n\r\nTemporary ugly monkeypatch snippet for those, who use bravado+pytest:\r\n```python\r\nfrom bravado_core.param import marshal_param\r\n\r\ndef _marshal_param(param, value, request):\r\n    marshal_param(param, value, request)\r\n    if param.name in request['params'] and type(value) is bool:\r\n        value = str(value).lower()\r\n        request['params'][param.name] = value\r\n\r\nmonkeypatch.setattr('bravado.client.marshal_param', _marshal_param)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/278", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/278/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/278/events", "html_url": "https://github.com/Yelp/bravado-core/issues/278", "id": 329888163, "node_id": "MDU6SXNzdWUzMjk4ODgxNjM=", "number": 278, "title": "Space character in url path encoded as `+` instead of `%20`", "user": {"login": "jakul", "id": 862794, "node_id": "MDQ6VXNlcjg2Mjc5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/862794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakul", "html_url": "https://github.com/jakul", "followers_url": "https://api.github.com/users/jakul/followers", "following_url": "https://api.github.com/users/jakul/following{/other_user}", "gists_url": "https://api.github.com/users/jakul/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakul/subscriptions", "organizations_url": "https://api.github.com/users/jakul/orgs", "repos_url": "https://api.github.com/users/jakul/repos", "events_url": "https://api.github.com/users/jakul/events{/privacy}", "received_events_url": "https://api.github.com/users/jakul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-06T14:17:52Z", "updated_at": "2018-06-07T11:10:02Z", "closed_at": "2018-06-06T14:48:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recent versions of Bravado have started encoding space characters in urls as `+` -> e.g. `/path/to/resource/resource+name` instead of `/path/to/resource/resource%20name`.\r\n\r\nI haven't been able to find concrete documentation to say that that encoding is against the standard, but a couple of Stack overflow comments imply that plus-encoding is required for query params, but path params should use `%20`.\r\n\r\n* https://stackoverflow.com/a/1006074/691427\r\n* https://stackoverflow.com/a/40292260/691427\r\n\r\nThe default behaviour of Flask servers will decode `%20` by default but not `+`.\r\n\r\nThis was introduced by https://github.com/Yelp/bravado-core/pull/238, which switched to using `urllib.parse.quote_plus` instead of `urllib.parse.quote`.\r\n\r\n\r\nI think this issue needs 2 things:\r\n\r\n1) To gain consensus that the desired behaviour is to encode spaces with `%20` instead of `+`\r\n2) Code to do that\r\n\r\n@sjaensch @macisamuele Your input would be appreciated as you worked on the original issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/275", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/275/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/275/events", "html_url": "https://github.com/Yelp/bravado-core/issues/275", "id": 328577799, "node_id": "MDU6SXNzdWUzMjg1Nzc3OTk=", "number": 275, "title": "Identified regression in bravado_core.spec.Spec if internally_dereference_refs is enabled", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-01T16:09:47Z", "updated_at": "2018-06-04T10:20:46Z", "closed_at": "2018-06-04T09:59:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A regression as been introduced by https://github.com/Yelp/bravado-core/commit/d23868c9cc87f30a208765b73b88dd0c12c08cad.\r\n\r\nAffected versions\r\n------------------\r\nbravado-core: 4.13.3, 4.13.4, 5.0.0 and 5.0.1\r\n\r\nSymptoms\r\n----------\r\nAfter initialising a `bravado.client.SwaggerClient` with `internally_dereference_refs` config enabled you're not able to communicate with the service.\r\nThe traceback will look like\r\n```\r\n  File \"/home/maci/pg/test_service/virtualenv_run/lib/python3.6/site-packages/bravado/client.py\", line 243, in __call__\r\n    self.operation, request_options, **op_kwargs)\r\n  File \"/home/maci/pg/test_service/virtualenv_run/lib/python3.6/site-packages/bravado/client.py\", line 271, in construct_request\r\n    url = operation.swagger_spec.api_url.rstrip('/') + operation.path_name\r\nAttributeError: 'NoneType' object has no attribute 'rstrip'\r\n```\r\nMotivations\r\n-----------\r\nWhile working on #263 I've ensured that resources are rebuilt in case `internally_dereference_refs` is set.\r\nThis was made in order to guarantee that all the references (on the already built resources) were stripped out, so after building the `Spec` object no references will be available.\r\nUnfortunately, `build_resource` will save a pointer to the used `Spec` instance into the resource itself but we're using a temporary instance that was not fully initialised.\r\nThe effect of this is that a `Spec` instance that is fully dereferenced will, internally, point to an other `Spec` instance bind into `Operation` instances (the pointed `Spec` instance will be used to send requests, validate responses, etc).\r\n\r\nHow to fix this\r\n--------------\r\nThe results of the regression is that `Spec` object could raise weird exceptions due to undefined `api_url` and uses double the memory needed (which is sad too).\r\n\r\nTo fix the issue will be sufficient to replace `build_resources(tmp_spec)` with `build_resources(swagger_spec)` but we need to ensure that at that time `_internal_spec_dict` has been updated to point toward the dereferenced version of the spec dict.\r\n\r\nHow to reproduce and test\r\n--------------------------\r\n```python\r\nspec_dict = {\r\n    \"swagger\": \"2.0\",\r\n    \"info\": {\"title\": \"Test\", \"version\": \"1.0\"},\r\n    \"paths\": {\r\n        \"/endpoint\": {\r\n            \"get\": {\r\n                \"operationId\": \"operation\",\r\n                \"responses\": {\"200\": {\"description\": \"random response\"}},\r\n                \"tags\": [\"tag\"],\r\n            }\r\n        }\r\n    },\r\n}\r\nspec = Spec.from_dict(spec_dict, config={'internally_dereference_refs': True})\r\nspec_in_object = spec.resources['tag'].operations['operation'].swagger_spec\r\nassert spec == spec_in_object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/271", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/271/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/271/events", "html_url": "https://github.com/Yelp/bravado-core/issues/271", "id": 327061230, "node_id": "MDU6SXNzdWUzMjcwNjEyMzA=", "number": 271, "title": "Python requests library missing requirement", "user": {"login": "andresriancho", "id": 865200, "node_id": "MDQ6VXNlcjg2NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/865200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresriancho", "html_url": "https://github.com/andresriancho", "followers_url": "https://api.github.com/users/andresriancho/followers", "following_url": "https://api.github.com/users/andresriancho/following{/other_user}", "gists_url": "https://api.github.com/users/andresriancho/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresriancho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresriancho/subscriptions", "organizations_url": "https://api.github.com/users/andresriancho/orgs", "repos_url": "https://api.github.com/users/andresriancho/repos", "events_url": "https://api.github.com/users/andresriancho/events{/privacy}", "received_events_url": "https://api.github.com/users/andresriancho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-28T15:27:26Z", "updated_at": "2018-05-28T15:39:03Z", "closed_at": "2018-05-28T15:39:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/andresriancho/w3af uses bravado core for parsing open api. One of our users reported an issue while running:\r\n\r\n```python\r\nfrom bravado.requests_client import RequestsClient\r\n```\r\n\r\nThe traceback:\r\n\r\n```\r\n  File \"/home/stalk/tools/w3af/w3af/core/data/parsers/doc/open_api/main.py\", line 34, in <module>\r\n    from w3af.core.data.parsers.doc.open_api.requests import RequestFactory\r\n  File \"/home/stalk/tools/w3af/w3af/core/data/parsers/doc/open_api/requests.py\", line 23, in <module>\r\n    from bravado.client import construct_request\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/client.py\", line 59, in <module>\r\n    from bravado.requests_client import RequestsClient\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/requests_client.py\", line 214, in <module>\r\n    class RequestsFutureAdapter(FutureAdapter):\r\n  File \"/usr/local/lib/python2.7/dist-packages/bravado/requests_client.py\", line 219, in RequestsFutureAdapter\r\n    timeout_errors = [requests.exceptions.ReadTimeout]\r\nAttributeError: 'module' object has no attribute 'ReadTimeout'\r\n```\r\n\r\nThe user has `requests==2.2.1` installed and the import fails. I have `requests==2.18.4` and the import works.\r\n\r\nThis seems to be an issue with `bravado-core` not requiring a version of `requests` > X.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/266", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/266/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/266/events", "html_url": "https://github.com/Yelp/bravado-core/issues/266", "id": 324250744, "node_id": "MDU6SXNzdWUzMjQyNTA3NDQ=", "number": 266, "title": "Support for `nullable`", "user": {"login": "krishnanand", "id": 1548607, "node_id": "MDQ6VXNlcjE1NDg2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1548607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishnanand", "html_url": "https://github.com/krishnanand", "followers_url": "https://api.github.com/users/krishnanand/followers", "following_url": "https://api.github.com/users/krishnanand/following{/other_user}", "gists_url": "https://api.github.com/users/krishnanand/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishnanand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishnanand/subscriptions", "organizations_url": "https://api.github.com/users/krishnanand/orgs", "repos_url": "https://api.github.com/users/krishnanand/repos", "events_url": "https://api.github.com/users/krishnanand/events{/privacy}", "received_events_url": "https://api.github.com/users/krishnanand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-18T02:40:17Z", "updated_at": "2018-05-23T13:59:25Z", "closed_at": "2018-05-23T13:59:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI know that bravado uses `x-nullable` to designate any property as something that can have `null` value. The [official documentation](http://bravado-core.readthedocs.io/en/latest/models.html#allowing-null-values-for-properties) suggests that maintainers of bravado were waiting for the [specification update](https://github.com/OAI/OpenAPI-Specification/pull/894/). Now that [`nullable` is a part of the specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md), would it be possible for bravado to support `nullable`? \r\n\r\nIf there is support for it, I could create a PR for review.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/258", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/258/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/258/events", "html_url": "https://github.com/Yelp/bravado-core/issues/258", "id": 301865538, "node_id": "MDU6SXNzdWUzMDE4NjU1Mzg=", "number": 258, "title": "bravado-core does not support multiple parameters properly", "user": {"login": "nickdirienzo", "id": 723567, "node_id": "MDQ6VXNlcjcyMzU2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/723567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdirienzo", "html_url": "https://github.com/nickdirienzo", "followers_url": "https://api.github.com/users/nickdirienzo/followers", "following_url": "https://api.github.com/users/nickdirienzo/following{/other_user}", "gists_url": "https://api.github.com/users/nickdirienzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdirienzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdirienzo/subscriptions", "organizations_url": "https://api.github.com/users/nickdirienzo/orgs", "repos_url": "https://api.github.com/users/nickdirienzo/repos", "events_url": "https://api.github.com/users/nickdirienzo/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdirienzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-02T18:43:45Z", "updated_at": "2018-03-05T18:56:16Z", "closed_at": "2018-03-03T00:44:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're experiencing an issue where `cast_request_param` is failing with a `TypeError` in the following scenario. For the record, we use pyramid_swagger and by virtue of that, bravado-core.\r\n\r\nIf you have a spec like:\r\n```\r\n\"/objects\":\r\n    get:\r\n      operationId: list_objects\r\n      tags:\r\n        - Events\r\n      parameters:\r\n        - in: query\r\n          name: parent_id\r\n          required: true\r\n          description: The ID of the Parent you would like to list all Objects for\r\n          type: integer\r\n          format: int64\r\n```\r\n\r\nThen make a request with:\r\n```\r\nGET /resource?parent_id=123&parent_id=456\r\n```\r\n\r\nbravado-core will raise a `TypeError` and therefore a 500 because we're trying to cast `['123', '456']` to via `int()`.\r\n\r\nI may be misunderstanding how [parameter descriptions](https://swagger.io/docs/specification/2-0/describing-parameters/) work in Swagger 2.0, but from my perspective, this seems like a problem in the library.\r\n\r\nA simple fix to not return 500s, would be to also catch `TypeError` and then allow jsonschema to handle the validation (as suggested by the comment [here](https://github.com/Yelp/bravado-core/blob/54d099e3fa1df0fe027908e96dd3718b11b689bf/bravado_core/param.py#L257)), which would then would return a 400 instead. This seems more proper. I'll put up a PR to address the issue, but happy to discuss further in case I'm mistaken.\r\n\r\nLooking forward to hearing from you @sjaensch!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/257", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/257/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/257/events", "html_url": "https://github.com/Yelp/bravado-core/issues/257", "id": 299925784, "node_id": "MDU6SXNzdWUyOTk5MjU3ODQ=", "number": 257, "title": "Bravado-core release breaks user registration", "user": {"login": "ghoti", "id": 34587, "node_id": "MDQ6VXNlcjM0NTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/34587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghoti", "html_url": "https://github.com/ghoti", "followers_url": "https://api.github.com/users/ghoti/followers", "following_url": "https://api.github.com/users/ghoti/following{/other_user}", "gists_url": "https://api.github.com/users/ghoti/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghoti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghoti/subscriptions", "organizations_url": "https://api.github.com/users/ghoti/orgs", "repos_url": "https://api.github.com/users/ghoti/repos", "events_url": "https://api.github.com/users/ghoti/events{/privacy}", "received_events_url": "https://api.github.com/users/ghoti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-24T08:56:57Z", "updated_at": "2018-02-24T08:58:36Z", "closed_at": "2018-02-24T08:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "im an idiot and posted in teh wrong repo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/251", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/251/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/251/events", "html_url": "https://github.com/Yelp/bravado-core/issues/251", "id": 297350994, "node_id": "MDU6SXNzdWUyOTczNTA5OTQ=", "number": 251, "title": "Validation passes with properties not presented in a definition", "user": {"login": "rredkovich", "id": 1866409, "node_id": "MDQ6VXNlcjE4NjY0MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1866409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rredkovich", "html_url": "https://github.com/rredkovich", "followers_url": "https://api.github.com/users/rredkovich/followers", "following_url": "https://api.github.com/users/rredkovich/following{/other_user}", "gists_url": "https://api.github.com/users/rredkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/rredkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rredkovich/subscriptions", "organizations_url": "https://api.github.com/users/rredkovich/orgs", "repos_url": "https://api.github.com/users/rredkovich/repos", "events_url": "https://api.github.com/users/rredkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/rredkovich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-15T07:27:02Z", "updated_at": "2018-02-15T11:44:23Z", "closed_at": "2018-02-15T09:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pretty sure that I just missed the option, however read the docs, checked out code, issues and still cannot figure out how to config validation to fail on dict with keys not presented in schema.\r\n\r\nCould you please point to my error?\r\n\r\nExample:\r\n```python\r\nfrom bravado_core.spec import Spec\r\nfrom bravado_core.validate import validate_object\r\nfrom jsonschema.exceptions import ValidationError\r\n\r\nschema = {\r\n  \"swagger\": \"2.0\",\r\n  \"host\": \"localhost:8000\",\r\n  \"basePath\": \"/v1\",\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"user\",\r\n      \"description\": \"Users managment\",\r\n      \"externalDocs\": {\r\n        \"description\": \"Find out more\",\r\n        \"url\": \"https://server-documentation-fake-path\"\r\n      }\r\n    }\r\n  ],\r\n  \"schemes\": [\r\n    \"http\"\r\n  ],\r\n  \"paths\": {\r\n    \"/users\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Adds a new user\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"addUser\",\r\n        \"consumes\": [\r\n          \"application/json\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"User data\",\r\n            \"required\": True,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/User\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/User\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"User\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"first_name\": {\r\n          \"type\": \"string\",\r\n          \"example\": \"John\"\r\n        },\r\n        \"last_name\": {\r\n          \"type\": \"string\",\r\n          \"example\": \"Doe\"\r\n        }\r\n      },\r\n      \"required\": [\r\n        \"first_name\",\r\n        \"last_name\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nbravado_config = {\r\n    'validate_swagger_spec': False,\r\n    'validate_requests': False,\r\n    'validate_responses': False,\r\n    'include_missing_properties': False,\r\n    'internally_dereference_refs': False,\r\n    'use_models': True\r\n}\r\n\r\nUser = schema['definitions']['User']\r\nspec = Spec.from_dict(schema, config=bravado_config)\r\n\r\nuser_data = {'first_name': 'foo'}\r\nvalidate_object(spec, User, user_data)\r\n>>> jsonschema.exceptions.ValidationError: 'last_name' is a required property\r\n\r\nuser_data = {'first_name': 'foo', 'last_name': 'bar', 'unexpected': 'is ok'}\r\nvalidate_object(spec, User, user_data)\r\n>>> no complains\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/239", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/239/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/239/events", "html_url": "https://github.com/Yelp/bravado-core/issues/239", "id": 289736202, "node_id": "MDU6SXNzdWUyODk3MzYyMDI=", "number": 239, "title": "Print the request Bravado will make", "user": {"login": "jones77", "id": 1223184, "node_id": "MDQ6VXNlcjEyMjMxODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1223184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jones77", "html_url": "https://github.com/jones77", "followers_url": "https://api.github.com/users/jones77/followers", "following_url": "https://api.github.com/users/jones77/following{/other_user}", "gists_url": "https://api.github.com/users/jones77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jones77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jones77/subscriptions", "organizations_url": "https://api.github.com/users/jones77/orgs", "repos_url": "https://api.github.com/users/jones77/repos", "events_url": "https://api.github.com/users/jones77/events{/privacy}", "received_events_url": "https://api.github.com/users/jones77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-18T18:47:52Z", "updated_at": "2018-01-29T18:49:09Z", "closed_at": "2018-01-29T18:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to debug why my Bravado client fails and returns a 404, but my (supposed) curl equivalent works.\r\n\r\nBut I cannot figure out how to print the request that Bravado will eventually make.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/235", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/235/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/235/events", "html_url": "https://github.com/Yelp/bravado-core/issues/235", "id": 288376348, "node_id": "MDU6SXNzdWUyODgzNzYzNDg=", "number": 235, "title": "Format double and overriding default formats", "user": {"login": "bdowling", "id": 4137660, "node_id": "MDQ6VXNlcjQxMzc2NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4137660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdowling", "html_url": "https://github.com/bdowling", "followers_url": "https://api.github.com/users/bdowling/followers", "following_url": "https://api.github.com/users/bdowling/following{/other_user}", "gists_url": "https://api.github.com/users/bdowling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdowling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdowling/subscriptions", "organizations_url": "https://api.github.com/users/bdowling/orgs", "repos_url": "https://api.github.com/users/bdowling/repos", "events_url": "https://api.github.com/users/bdowling/events{/privacy}", "received_events_url": "https://api.github.com/users/bdowling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-14T02:17:54Z", "updated_at": "2018-02-06T08:38:05Z", "closed_at": "2018-02-06T08:38:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a use case that is using double numbers in the spec for monetary values.  Given that float is so imprecise, it would seem more valid to me to cast these to Decimal() from the decimal module.\r\n\r\nbtw, DEFAULT_FORMATS specifies both 'double' and 'float' format to the float()\r\n\r\nCurrently bravado-core does not allow you to override the DEFAULT_FORMATS, of course I can rename my spec format to decimal and get this to work for my implementation.  But I guess this brings up two questions:\r\n\r\n1) Should you be able to override the DEFAULT_FORMATS in practice?\r\n2) Should perhaps the default for double be to use the Decimal() class?\r\n\r\nThanks for sharing this awesome module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/233", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/233/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/233/events", "html_url": "https://github.com/Yelp/bravado-core/issues/233", "id": 283517358, "node_id": "MDU6SXNzdWUyODM1MTczNTg=", "number": 233, "title": "Plans for OpenAPI v3.0 support", "user": {"login": "sobayed", "id": 23031125, "node_id": "MDQ6VXNlcjIzMDMxMTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/23031125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobayed", "html_url": "https://github.com/sobayed", "followers_url": "https://api.github.com/users/sobayed/followers", "following_url": "https://api.github.com/users/sobayed/following{/other_user}", "gists_url": "https://api.github.com/users/sobayed/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobayed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobayed/subscriptions", "organizations_url": "https://api.github.com/users/sobayed/orgs", "repos_url": "https://api.github.com/users/sobayed/repos", "events_url": "https://api.github.com/users/sobayed/events{/privacy}", "received_events_url": "https://api.github.com/users/sobayed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-20T10:31:53Z", "updated_at": "2019-04-23T15:33:59Z", "closed_at": "2017-12-20T11:41:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm curious whether there are any plans to add support for OpenAPI v3.0? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/230", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/230/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/230/events", "html_url": "https://github.com/Yelp/bravado-core/issues/230", "id": 277659708, "node_id": "MDU6SXNzdWUyNzc2NTk3MDg=", "number": 230, "title": "marshalling/unmarshalling an array should support multiple schemas in `items`", "user": {"login": "desiam", "id": 8527001, "node_id": "MDQ6VXNlcjg1MjcwMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8527001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/desiam", "html_url": "https://github.com/desiam", "followers_url": "https://api.github.com/users/desiam/followers", "following_url": "https://api.github.com/users/desiam/following{/other_user}", "gists_url": "https://api.github.com/users/desiam/gists{/gist_id}", "starred_url": "https://api.github.com/users/desiam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/desiam/subscriptions", "organizations_url": "https://api.github.com/users/desiam/orgs", "repos_url": "https://api.github.com/users/desiam/repos", "events_url": "https://api.github.com/users/desiam/events{/privacy}", "received_events_url": "https://api.github.com/users/desiam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-29T07:54:30Z", "updated_at": "2018-01-29T18:48:53Z", "closed_at": "2018-01-29T18:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, bravado does not support lists for the `items` key of a jsonschema array.\r\nBravado marshalling and unmarshalling assumes one schema applies to all items of an array. In the following link, `marshal_array` gets the value for the key, `items`, and calls `marshal_schema_object` on each item in the array with that schema.\r\n- https://github.com/Yelp/bravado-core/blob/master/bravado_core/marshal.py#L112\r\n\r\nThe code will throw an exception if run against an array of values with different schemas. If `items_spec` is a list of schemas (for the items in the array), `marshal_schema_object` will result in an error when trying to perform `obj_type = schema_object_spec.get('type')`, because `schema_object_spec` is a `dict` and not a `list`. \r\n- https://spacetelescope.github.io/understanding-json-schema/reference/array.html#tuple-validation\r\n\r\nIf `is_list_like(item_spec)`, the 0th spec and the 0th value of `array_value` should be passed in together to `marshal_schema_object`...etc. An exception should be raised if `is_list_like(item_spec) and len(item_spec) != len(array_value)`\r\n\r\nThe same logic applies for unmarshalling.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/227", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/227/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/227/events", "html_url": "https://github.com/Yelp/bravado-core/issues/227", "id": 276174017, "node_id": "MDU6SXNzdWUyNzYxNzQwMTc=", "number": 227, "title": "bravado_core should use the msgpack module instead of umsgpack", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-22T18:59:00Z", "updated_at": "2017-12-01T00:48:17Z", "closed_at": "2017-11-22T22:09:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that the umsgpack module, implemented in pure python, is an order of magnitude slower than the msgpack module, written with CPython bindings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/222", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/222/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/222/events", "html_url": "https://github.com/Yelp/bravado-core/issues/222", "id": 271532100, "node_id": "MDU6SXNzdWUyNzE1MzIxMDA=", "number": 222, "title": "model is instance check could fail in case of fully dereferenced specs", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-06T16:16:51Z", "updated_at": "2018-01-16T14:46:13Z", "closed_at": "2018-01-16T14:46:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "``isinstance(model, model_type)`` returns ``False`` if:\r\n * ``model`` is built using the model type that has reference in the specs\r\n * ``model_type`` that has NO reference in the specs\r\n\r\nThis happens in case of generate clientlibs (yelp specific issue).\r\n\r\nI was able to reproduce the issue and to write a tests that shows the issue.\r\nIn order to see the failure you should apply the following [gist](https://gist.github.com/macisamuele/7b445455a94cd4f529d7aca23311d267) to the current bravado-core master. Have a look to [travis build](https://travis-ci.org/macisamuele/bravado-core/builds/298066710) for more detail of the failure.\r\n\r\nFrom a first check the issue is caused by [``ModelMeta.__instancecheck__ ``](https://github.com/Yelp/bravado-core/blob/v4.10.1/bravado_core/model.py#L91) issue.\r\nIn case ``self._model_spec != instance._model_spec`` we should check if the two dictionaries are _equivalent_.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/217", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/217/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/217/events", "html_url": "https://github.com/Yelp/bravado-core/issues/217", "id": 271141056, "node_id": "MDU6SXNzdWUyNzExNDEwNTY=", "number": 217, "title": "'also_return_response' should be added to CONFIG_DEFAULTS", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-03T23:02:25Z", "updated_at": "2017-11-06T08:21:10Z", "closed_at": "2017-11-06T08:21:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is currently breaking `make test` in bravado\r\n\r\n```\r\nE       KeyError: 'also_return_response'\r\n```\r\n\r\nThis break is coming from https://github.com/Yelp/bravado-core/blob/master/bravado_core/spec.py#L146, which is deleting this key because it's not whitelisted in CONFIG_DEFAULTS\r\n\r\nAlternatively, we could just not delete extra keys", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/215", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/215/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/215/events", "html_url": "https://github.com/Yelp/bravado-core/issues/215", "id": 271115032, "node_id": "MDU6SXNzdWUyNzExMTUwMzI=", "number": 215, "title": "Ensure param names and tags are valid python identifiers", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjaensch", "id": 852075, "node_id": "MDQ6VXNlcjg1MjA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/852075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjaensch", "html_url": "https://github.com/sjaensch", "followers_url": "https://api.github.com/users/sjaensch/followers", "following_url": "https://api.github.com/users/sjaensch/following{/other_user}", "gists_url": "https://api.github.com/users/sjaensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjaensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjaensch/subscriptions", "organizations_url": "https://api.github.com/users/sjaensch/orgs", "repos_url": "https://api.github.com/users/sjaensch/repos", "events_url": "https://api.github.com/users/sjaensch/events{/privacy}", "received_events_url": "https://api.github.com/users/sjaensch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-03T20:50:35Z", "updated_at": "2018-02-06T12:33:41Z", "closed_at": "2018-02-06T12:33:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We sanitize [operation_ids](https://github.com/Yelp/bravado-core/blob/master/bravado_core/operation.py#L13), but we should also sanitize param names and tags to ensure that they are valid python parameters.\r\n\r\nThere is a workaround as mentioned in https://github.com/Yelp/bravado/issues/293, but we should just fix it here.\r\n\r\nThis might have some backwards compatibility considerations, but I don't think anything serious since resources and params that are currently not valid python identifiers are not even accessible via the normal means currently (i.e. via dot or method params)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/214", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/214/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/214/events", "html_url": "https://github.com/Yelp/bravado-core/issues/214", "id": 270838569, "node_id": "MDU6SXNzdWUyNzA4Mzg1Njk=", "number": 214, "title": "Add msgpack support", "user": {"login": "AlstonLin", "id": 8278888, "node_id": "MDQ6VXNlcjgyNzg4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8278888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlstonLin", "html_url": "https://github.com/AlstonLin", "followers_url": "https://api.github.com/users/AlstonLin/followers", "following_url": "https://api.github.com/users/AlstonLin/following{/other_user}", "gists_url": "https://api.github.com/users/AlstonLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlstonLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlstonLin/subscriptions", "organizations_url": "https://api.github.com/users/AlstonLin/orgs", "repos_url": "https://api.github.com/users/AlstonLin/repos", "events_url": "https://api.github.com/users/AlstonLin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlstonLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-02T23:20:36Z", "updated_at": "2017-11-08T16:14:31Z", "closed_at": "2017-11-08T16:14:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "msgpack would be a more efficient way to receive large JSON body responses, and could mean large performance gains for people who want to use bravado with a server that supports `application/msgpack` responses\r\n\r\nSupport for this content type should be added to bravado", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/211", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/211/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/211/events", "html_url": "https://github.com/Yelp/bravado-core/issues/211", "id": 270532238, "node_id": "MDU6SXNzdWUyNzA1MzIyMzg=", "number": 211, "title": "please ignore", "user": {"login": "gstarnberger", "id": 48601, "node_id": "MDQ6VXNlcjQ4NjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/48601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gstarnberger", "html_url": "https://github.com/gstarnberger", "followers_url": "https://api.github.com/users/gstarnberger/followers", "following_url": "https://api.github.com/users/gstarnberger/following{/other_user}", "gists_url": "https://api.github.com/users/gstarnberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gstarnberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gstarnberger/subscriptions", "organizations_url": "https://api.github.com/users/gstarnberger/orgs", "repos_url": "https://api.github.com/users/gstarnberger/repos", "events_url": "https://api.github.com/users/gstarnberger/events{/privacy}", "received_events_url": "https://api.github.com/users/gstarnberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-02T04:56:56Z", "updated_at": "2017-11-02T05:04:07Z", "closed_at": "2017-11-02T04:57:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "opened this issue by mistake (yubikey keyboard input accidently triggered github keybindings) - please ignore", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/210", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/210/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/210/events", "html_url": "https://github.com/Yelp/bravado-core/issues/210", "id": 270501870, "node_id": "MDU6SXNzdWUyNzA1MDE4NzA=", "number": 210, "title": "internally_dereference_refs generates wrong result when discriminators are used in spec", "user": {"login": "gstarnberger", "id": 48601, "node_id": "MDQ6VXNlcjQ4NjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/48601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gstarnberger", "html_url": "https://github.com/gstarnberger", "followers_url": "https://api.github.com/users/gstarnberger/followers", "following_url": "https://api.github.com/users/gstarnberger/following{/other_user}", "gists_url": "https://api.github.com/users/gstarnberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gstarnberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gstarnberger/subscriptions", "organizations_url": "https://api.github.com/users/gstarnberger/orgs", "repos_url": "https://api.github.com/users/gstarnberger/repos", "events_url": "https://api.github.com/users/gstarnberger/events{/privacy}", "received_events_url": "https://api.github.com/users/gstarnberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-02T01:13:03Z", "updated_at": "2017-11-02T11:59:15Z", "closed_at": "2017-11-02T11:57:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "internally_dereference_refs appears to not properly deserialize responses when discriminators are used in the spec and when use_models is enabled. In particular, if the model contains a type and a subtype none of the attributes of the subtype gets deserialized.\r\n\r\nHere's an example spec: https://gist.github.com/gstarnberger/4dd7d76b94d7afec87f8a6a141dfd17e\r\n\r\nIf you call an endpoint that returns `{\"score\":12345,\"type\":\"subtypeOfResponse\"}` as response that response gets deserialized as:\r\n\r\n- `subtypeOfResponse(score=12345, type=u'subtypeOfResponse')` (with internally_dereference_refs disabled)\r\n- `subtypeOfResponse()` (with internally_dereference_refs enabled)\r\n\r\nDirectly accessing the missing attributes still yields a value, but that value doesn't use any models (although use_models is set to True). For example, if score would have been defined as another object type then subtypeOfResponse.score would have returned a dictionary.\r\n\r\nHere's the code that I used to reproduce the issue:\r\n\r\nServer: https://gist.github.com/gstarnberger/359669829881ca5fa188f5a480820512 (basically just returns the same hardcoded response for any call)\r\n\r\nClient: https://gist.github.com/gstarnberger/3701dba50aba719ffc0bf28454485f31\r\n\r\nOutput of the client when running the code is:\r\n\r\n```\r\nFalse subtypeOfResponse(score=12345, type=u'subtypeOfResponse')\r\nTrue subtypeOfResponse()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/209", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/209/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/209/events", "html_url": "https://github.com/Yelp/bravado-core/issues/209", "id": 270463548, "node_id": "MDU6SXNzdWUyNzA0NjM1NDg=", "number": 209, "title": "we should support some notion of sensitive data in a spec", "user": {"login": "ajm188", "id": 4276638, "node_id": "MDQ6VXNlcjQyNzY2Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4276638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajm188", "html_url": "https://github.com/ajm188", "followers_url": "https://api.github.com/users/ajm188/followers", "following_url": "https://api.github.com/users/ajm188/following{/other_user}", "gists_url": "https://api.github.com/users/ajm188/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajm188/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajm188/subscriptions", "organizations_url": "https://api.github.com/users/ajm188/orgs", "repos_url": "https://api.github.com/users/ajm188/repos", "events_url": "https://api.github.com/users/ajm188/events{/privacy}", "received_events_url": "https://api.github.com/users/ajm188/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-01T21:46:10Z", "updated_at": "2017-11-03T16:09:06Z", "closed_at": "2017-11-03T16:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I have a spec that defines a field storing some PII. Ideally, if a request/response fails to validate, we would be able to stop the sensitive value from appearing in exception messages, logs, etc.\r\n\r\nI propose adding some sort of \"x-sensitive\" property on a type schema.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/198", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/198/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/198/events", "html_url": "https://github.com/Yelp/bravado-core/issues/198", "id": 262310029, "node_id": "MDU6SXNzdWUyNjIzMTAwMjk=", "number": 198, "title": "Array default fails to unmarshal in most cases", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-03T05:37:49Z", "updated_at": "2017-10-16T05:17:58Z", "closed_at": "2017-10-16T05:17:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Setting a default for an array fails unless `collectionFormat` is `multi`.\r\n\r\n```\r\n        if collection_format == 'multi':\r\n            # http client lib should have already unmarshaled to an array\r\n            value_array = value if isinstance(value, list) else [value]\r\n        else:\r\n            sep = COLLECTION_FORMATS[collection_format]\r\n            if value == '':\r\n                value_array = []\r\n            else:\r\n>               value_array = value.split(sep)\r\nE               AttributeError: 'list' object has no attribute 'split'\r\n```\r\n\r\nExample param:\r\n\r\n```json\r\n          {\r\n            \"name\": \"tags\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Tags to filter by\",\r\n            \"required\": false,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"default\": []\r\n          }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/197", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/197/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/197/events", "html_url": "https://github.com/Yelp/bravado-core/issues/197", "id": 262309142, "node_id": "MDU6SXNzdWUyNjIzMDkxNDI=", "number": 197, "title": "rray default fails to unmarshal", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-03T05:31:09Z", "updated_at": "2017-10-03T05:54:03Z", "closed_at": "2017-10-03T05:54:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/192", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/192/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/192/events", "html_url": "https://github.com/Yelp/bravado-core/issues/192", "id": 255715359, "node_id": "MDU6SXNzdWUyNTU3MTUzNTk=", "number": 192, "title": "Add config to default no type to object", "user": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-06T19:23:36Z", "updated_at": "2017-09-11T19:30:58Z", "closed_at": "2017-09-11T19:30:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #183, we disable validation when a type is missing. it was mentioned that there should be a config to default this to object. Alternatively, we could have a config to fail if no type is specified. Or maybe have the config switch between the three options?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/190", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/190/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/190/events", "html_url": "https://github.com/Yelp/bravado-core/issues/190", "id": 255519034, "node_id": "MDU6SXNzdWUyNTU1MTkwMzQ=", "number": 190, "title": "Spec Flattening assumes that all the models were discovered ", "user": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-06T08:19:24Z", "updated_at": "2017-09-06T13:23:47Z", "closed_at": "2017-09-06T13:23:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "While building [``pyramid_swagger``](https://travis-ci.org/macisamuele/pyramid_swagger/builds/271496637) I got a list of tests failure related to `` KeyError: 'x-model'`` in [``bravado_core. spec_flattening .flattened_spec``](https://github.com/Yelp/bravado-core/blob/v4.8.3/bravado_core/spec_flattening.py#L303-L306).\r\n\r\nMinimal example to reproduce the issue:\r\n- ``swagger.json``\r\n```json\r\n{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"title\": \"Test\",\r\n    \"version\": \"1.0\"\r\n  },\r\n  \"paths\": {},\r\n  \"definitions\": {\r\n    \"object\": {\r\n      \"properties\": {\r\n        \"property\": {\r\n          \"$ref\": \"aux.json#/definitions/referenced_object\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n- ``aux.json``\r\n```json\r\n{\r\n    \"definitions\": {\r\n        \"referenced_object\": {\r\n            \"type\": \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n- ``test.py``\r\n```python\r\nimport json\r\nfrom os.path import abspath\r\nfrom bravado_core.spec import Spec\r\n\r\nroot_swagger_path = abspath('swagger.json')\r\nwith open(root_swagger_path) as f:\r\n    spec_dict = json.load(f)\r\n\r\nspec = Spec.from_dict(spec_dict, origin_url='file://{}'.format(root_swagger_path))\r\nspec.flattened_spec\r\n```\r\nRunning ``test.py`` generates the following traceback\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 10, in <module>\r\n    spec.flattened_spec\r\n  File \"/Users/maci/pg/bravado-core/.tox/py35/lib/python3.5/site-packages/bravado_core/spec.py\", line 305, in flattened_spec\r\n    spec_definitions=self.definitions,\r\n  File \"/Users/maci/pg/bravado-core/.tox/py35/lib/python3.5/site-packages/bravado_core/spec_flattening.py\", line 305, in flattened_spec\r\n    for definition in itervalues(known_mappings['definitions'])\r\n  File \"/Users/maci/pg/bravado-core/.tox/py35/lib/python3.5/site-packages/bravado_core/spec_flattening.py\", line 305, in <setcomp>\r\n    for definition in itervalues(known_mappings['definitions'])\r\nKeyError: 'x-model'\r\n```\r\n\r\nThe issue is caused by the wrong assumption that definitions are tagged as model (have ``x-model`` property).\r\n\r\nTo fix this we could:\r\n1. make sure that ``flattened_spec`` does not assume that ``x-model`` will always be present\r\n2. improve models tagging (currently ``tag_models`` tags only schema objects on ``/definitions`` of the root swagger specs file\r\n\r\nNOTE: the second approach requires more time, so I would suggest to go with point 1 first", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/185", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/185/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/185/events", "html_url": "https://github.com/Yelp/bravado-core/issues/185", "id": 254657661, "node_id": "MDU6SXNzdWUyNTQ2NTc2NjE=", "number": 185, "title": "x-nullable working only for required properties of objects", "user": {"login": "janekbaraniewski", "id": 9478651, "node_id": "MDQ6VXNlcjk0Nzg2NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9478651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janekbaraniewski", "html_url": "https://github.com/janekbaraniewski", "followers_url": "https://api.github.com/users/janekbaraniewski/followers", "following_url": "https://api.github.com/users/janekbaraniewski/following{/other_user}", "gists_url": "https://api.github.com/users/janekbaraniewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/janekbaraniewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janekbaraniewski/subscriptions", "organizations_url": "https://api.github.com/users/janekbaraniewski/orgs", "repos_url": "https://api.github.com/users/janekbaraniewski/repos", "events_url": "https://api.github.com/users/janekbaraniewski/events{/privacy}", "received_events_url": "https://api.github.com/users/janekbaraniewski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-01T14:27:17Z", "updated_at": "2017-09-05T13:06:47Z", "closed_at": "2017-09-05T06:28:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey, I've stumbled upon an unexpected behaviour when using `x-nullable` \r\n\r\nMy swagger definition:\r\n```\r\n...\r\n        \"SomeObject\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"data\": {\r\n                    \"type\": \"object\",\r\n                    \"required\": [\r\n                        \"type\"\r\n                    ],\r\n                    \"properties\": {\r\n                        \"type\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"attributes\": {\r\n                            \"type\": \"object\",\r\n                            \"properties\": {\r\n                                \"name\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"value\": {\r\n                                    \"type\": \"string\"\r\n                                },\r\n                                \"nullable_field\": {\r\n                                    \"type\": \"string\",\r\n                                    \"x-nullable\": true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n...\r\n```\r\nFrom what is stated in [bravado-core documentation](http://bravado-core.readthedocs.io/en/latest/models.html#allowing-null-values-for-properties) I should be able to send in my request `None` as a value of `nullable_field` but sadly that's not the case, `nullable_field` simply doesn't exist in the generated payload. \r\n\r\nI've traced the issue to `marshal_object` method, where if the value of the field is `None` and this field is not required, then the field is simply omitted. This is inconsistent with documentation, where there is no mention that field has to be a required field in order for this to work - even more, in example in documentation field that is being set to null is also not required.\r\n\r\nIf I'm right and this is a bug I'll be happy to submit PR with a fix, and if not could you explain why it is implemented in this way? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/180", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/180/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/180/events", "html_url": "https://github.com/Yelp/bravado-core/issues/180", "id": 248353565, "node_id": "MDU6SXNzdWUyNDgzNTM1NjU=", "number": 180, "title": "question on x-example extension use", "user": {"login": "markfink", "id": 33456, "node_id": "MDQ6VXNlcjMzNDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/33456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfink", "html_url": "https://github.com/markfink", "followers_url": "https://api.github.com/users/markfink/followers", "following_url": "https://api.github.com/users/markfink/following{/other_user}", "gists_url": "https://api.github.com/users/markfink/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfink/subscriptions", "organizations_url": "https://api.github.com/users/markfink/orgs", "repos_url": "https://api.github.com/users/markfink/repos", "events_url": "https://api.github.com/users/markfink/events{/privacy}", "received_events_url": "https://api.github.com/users/markfink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-07T09:21:24Z", "updated_at": "2017-11-02T18:56:29Z", "closed_at": "2017-11-02T18:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to bravado and just starting so I would appreciate a pointer.\r\n\r\nI would like to add a custom extension 'x-example' to my spec so I can create sample data / scaffolding data from my spec (similar to what DREDD does). Is that possible with bravado / docu\r\n / sample available?\r\n\r\nthank you\r\nMark", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/170", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/170/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/170/events", "html_url": "https://github.com/Yelp/bravado-core/issues/170", "id": 222878779, "node_id": "MDU6SXNzdWUyMjI4Nzg3Nzk=", "number": 170, "title": "x-nullable doesn't work with objects", "user": {"login": "bxm156", "id": 136036, "node_id": "MDQ6VXNlcjEzNjAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/136036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxm156", "html_url": "https://github.com/bxm156", "followers_url": "https://api.github.com/users/bxm156/followers", "following_url": "https://api.github.com/users/bxm156/following{/other_user}", "gists_url": "https://api.github.com/users/bxm156/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxm156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxm156/subscriptions", "organizations_url": "https://api.github.com/users/bxm156/orgs", "repos_url": "https://api.github.com/users/bxm156/repos", "events_url": "https://api.github.com/users/bxm156/events{/privacy}", "received_events_url": "https://api.github.com/users/bxm156/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T21:34:25Z", "updated_at": "2017-12-18T08:48:23Z", "closed_at": "2017-12-18T08:48:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Example partial spec:\r\n```\r\n  responses:\r\n    \"200\":\r\n      description: example\r\n      schema:\r\n        type: object\r\n        description: example\r\n        properties:\r\n          propA:\r\n            description: something\r\n            type: string\r\n            x-nullable: true\r\n          propB:\r\n            description: this doesn't work\r\n            $ref: ../../../objects/some_other_model.yaml\r\n            x-nullable: true\r\n        required:\r\n          - propA\r\n          - propB\r\n``\r\nI can set propA to None for my response, which is expected.\r\nBut I cannot set propB to None.\r\n\r\nError Output:\r\n```\r\nNone is not of type 'object'\r\nFailed validating 'type' in schema['properties']['propB']:\r\n....\r\nOn instance['propB']:\r\n    None\r\n``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/169", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/169/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/169/events", "html_url": "https://github.com/Yelp/bravado-core/issues/169", "id": 222794726, "node_id": "MDU6SXNzdWUyMjI3OTQ3MjY=", "number": 169, "title": "$ref not automatically solved", "user": {"login": "Amedeo91", "id": 8645312, "node_id": "MDQ6VXNlcjg2NDUzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8645312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amedeo91", "html_url": "https://github.com/Amedeo91", "followers_url": "https://api.github.com/users/Amedeo91/followers", "following_url": "https://api.github.com/users/Amedeo91/following{/other_user}", "gists_url": "https://api.github.com/users/Amedeo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amedeo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amedeo91/subscriptions", "organizations_url": "https://api.github.com/users/Amedeo91/orgs", "repos_url": "https://api.github.com/users/Amedeo91/repos", "events_url": "https://api.github.com/users/Amedeo91/events{/privacy}", "received_events_url": "https://api.github.com/users/Amedeo91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T16:25:27Z", "updated_at": "2017-04-20T13:50:30Z", "closed_at": "2017-04-20T13:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that sometimes the $ref or the $allOf or $anyOf are automatically solve and I have to solve them manually in order to make it work. Why?\r\n\r\nExample below:\r\n{'x-scope': [''], 'additionalProperties': False, '$ref': '#/definitions/My_Resource'}\r\n\r\nRegards,\r\nAmedeo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/168", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/168/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/168/events", "html_url": "https://github.com/Yelp/bravado-core/issues/168", "id": 222793199, "node_id": "MDU6SXNzdWUyMjI3OTMxOTk=", "number": 168, "title": "additionalProperties False by default", "user": {"login": "Amedeo91", "id": 8645312, "node_id": "MDQ6VXNlcjg2NDUzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8645312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amedeo91", "html_url": "https://github.com/Amedeo91", "followers_url": "https://api.github.com/users/Amedeo91/followers", "following_url": "https://api.github.com/users/Amedeo91/following{/other_user}", "gists_url": "https://api.github.com/users/Amedeo91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amedeo91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amedeo91/subscriptions", "organizations_url": "https://api.github.com/users/Amedeo91/orgs", "repos_url": "https://api.github.com/users/Amedeo91/repos", "events_url": "https://api.github.com/users/Amedeo91/events{/privacy}", "received_events_url": "https://api.github.com/users/Amedeo91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T16:20:06Z", "updated_at": "2017-04-20T13:50:51Z", "closed_at": "2017-04-20T13:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possbile to have additionalProperties False by default without having to manually setted it?\r\n\r\nRegards\r\nAmedeo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/166", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/166/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/166/events", "html_url": "https://github.com/Yelp/bravado-core/issues/166", "id": 216832099, "node_id": "MDU6SXNzdWUyMTY4MzIwOTk=", "number": 166, "title": "Bravado doesn't default to type object for definitions objects", "user": {"login": "laucia", "id": 1099964, "node_id": "MDQ6VXNlcjEwOTk5NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1099964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laucia", "html_url": "https://github.com/laucia", "followers_url": "https://api.github.com/users/laucia/followers", "following_url": "https://api.github.com/users/laucia/following{/other_user}", "gists_url": "https://api.github.com/users/laucia/gists{/gist_id}", "starred_url": "https://api.github.com/users/laucia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laucia/subscriptions", "organizations_url": "https://api.github.com/users/laucia/orgs", "repos_url": "https://api.github.com/users/laucia/repos", "events_url": "https://api.github.com/users/laucia/events{/privacy}", "received_events_url": "https://api.github.com/users/laucia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bplotnick", "id": 5392381, "node_id": "MDQ6VXNlcjUzOTIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5392381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bplotnick", "html_url": "https://github.com/bplotnick", "followers_url": "https://api.github.com/users/bplotnick/followers", "following_url": "https://api.github.com/users/bplotnick/following{/other_user}", "gists_url": "https://api.github.com/users/bplotnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/bplotnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bplotnick/subscriptions", "organizations_url": "https://api.github.com/users/bplotnick/orgs", "repos_url": "https://api.github.com/users/bplotnick/repos", "events_url": "https://api.github.com/users/bplotnick/events{/privacy}", "received_events_url": "https://api.github.com/users/bplotnick/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-03-24T16:06:58Z", "updated_at": "2017-09-06T18:41:37Z", "closed_at": "2017-09-06T18:41:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/Yelp/bravado-core/blob/master/bravado_core/unmarshal.py#L37\r\n```\r\nif not obj_type and 'allOf' in schema_object_spec:\r\n```\r\nThis should probably be `or`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/163", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/163/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/163/events", "html_url": "https://github.com/Yelp/bravado-core/issues/163", "id": 216055843, "node_id": "MDU6SXNzdWUyMTYwNTU4NDM=", "number": 163, "title": "unmarshal bug in 4.7.(0|1)", "user": {"login": "cbarraford", "id": 246180, "node_id": "MDQ6VXNlcjI0NjE4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/246180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbarraford", "html_url": "https://github.com/cbarraford", "followers_url": "https://api.github.com/users/cbarraford/followers", "following_url": "https://api.github.com/users/cbarraford/following{/other_user}", "gists_url": "https://api.github.com/users/cbarraford/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbarraford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbarraford/subscriptions", "organizations_url": "https://api.github.com/users/cbarraford/orgs", "repos_url": "https://api.github.com/users/cbarraford/repos", "events_url": "https://api.github.com/users/cbarraford/events{/privacy}", "received_events_url": "https://api.github.com/users/cbarraford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-22T13:09:19Z", "updated_at": "2017-03-23T08:10:11Z", "closed_at": "2017-03-23T08:10:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've confirmed that we don't get the following error when i downgrade from 4.7.0 (or 4.7.1) to 4.6.1.\r\n\r\n```\r\n======================================================================\r\n1) ERROR: test_bundles (bundles.test_bundles.BundlesTest)\r\n----------------------------------------------------------------------\r\n   Traceback (most recent call last):\r\n    test/api/bundles/test_bundles.py line 30 in test_bundles\r\n      app = self.client.Applications.Create(body=dict(name='test_app')).result()\r\n    /usr/local/lib/python2.7/dist-packages/bravado/http_future.py line 77 in result\r\n      self.response_callbacks)\r\n    /usr/local/lib/python2.7/dist-packages/bravado/http_future.py line 115 in unmarshal_response\r\n      operation)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/response.py line 112 in unmarshal_response\r\n      op.swagger_spec, content_spec, content_value)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/unmarshal.py line 56 in unmarshal_schema_object\r\n      return unmarshal_model(swagger_spec, schema_object_spec, value)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/unmarshal.py line 194 in unmarshal_model\r\n      model_as_dict = unmarshal_object(swagger_spec, model_spec, model_value)\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/unmarshal.py line 136 in unmarshal_object\r\n      if schema.has_default(swagger_spec, prop_spec):\r\n    /usr/local/lib/python2.7/dist-packages/bravado_core/schema.py line 22 in has_default\r\n      return 'default' in swagger_spec.deref(schema_object_spec)\r\n   TypeError: argument of type 'NoneType' is not iterable\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/160", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/160/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/160/events", "html_url": "https://github.com/Yelp/bravado-core/issues/160", "id": 215856781, "node_id": "MDU6SXNzdWUyMTU4NTY3ODE=", "number": 160, "title": "type object \"SomeBravadoResourceType\" has no attribute 'marshal' ( and 'unmarshal')", "user": {"login": "adamhadani", "id": 139888, "node_id": "MDQ6VXNlcjEzOTg4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/139888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamhadani", "html_url": "https://github.com/adamhadani", "followers_url": "https://api.github.com/users/adamhadani/followers", "following_url": "https://api.github.com/users/adamhadani/following{/other_user}", "gists_url": "https://api.github.com/users/adamhadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamhadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamhadani/subscriptions", "organizations_url": "https://api.github.com/users/adamhadani/orgs", "repos_url": "https://api.github.com/users/adamhadani/repos", "events_url": "https://api.github.com/users/adamhadani/events{/privacy}", "received_events_url": "https://api.github.com/users/adamhadani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-21T19:46:38Z", "updated_at": "2017-03-22T09:21:22Z", "closed_at": "2017-03-22T09:21:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Started seeing these errors today after installing the just release 4.7.0 bravado-core. Downgrading to previous version (4.6.1) makes these go away so seems like some kind of regression.. Here's an example snippet:\r\n\r\n```python\r\n...\r\nchatroom_event.marshal(),\r\n  File \"/Users/adamhadani/.virtualenvs/venv/lib/python3.6/site-packages/bravado_core/model.py\", line 176, in __getattr__\r\n    .format(type(self).__name__, attr_name)\r\nAttributeError: type object 'SomeBravadoResourceType' has no attribute 'marshal'\r\n```\r\n\r\nAlso, seeing similar error when trying to use `unmarshal`:\r\n\r\n```python\r\n...\r\n.unmarshal({\r\nAttributeError: type object 'SomeBravadoResourceType' has no attribute 'unmarshal'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/153", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/153/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/153/events", "html_url": "https://github.com/Yelp/bravado-core/issues/153", "id": 209822301, "node_id": "MDU6SXNzdWUyMDk4MjIzMDE=", "number": 153, "title": "missing properties are not set to default when unmarshalled", "user": {"login": "dpopowich", "id": 6783372, "node_id": "MDQ6VXNlcjY3ODMzNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6783372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpopowich", "html_url": "https://github.com/dpopowich", "followers_url": "https://api.github.com/users/dpopowich/followers", "following_url": "https://api.github.com/users/dpopowich/following{/other_user}", "gists_url": "https://api.github.com/users/dpopowich/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpopowich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpopowich/subscriptions", "organizations_url": "https://api.github.com/users/dpopowich/orgs", "repos_url": "https://api.github.com/users/dpopowich/repos", "events_url": "https://api.github.com/users/dpopowich/events{/privacy}", "received_events_url": "https://api.github.com/users/dpopowich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-23T17:01:12Z", "updated_at": "2017-02-26T18:09:17Z", "closed_at": "2017-02-26T18:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have an object which I specify as a `\"in\": \"body\"` parameter for a PUT or POST with properties that have `default` set, e.g:\r\n\r\n```json\r\n\"parameters\": [\r\n   {\r\n      \"required\": true,\r\n      \"in\": \"body\",\r\n      \"name\": \"body\",\r\n      \"schema\": {\r\n         \"type\": \"object\",\r\n         \"properties\": {\r\n            \"name\": {\r\n               \"type\": \"string\",\r\n            },\r\n            \"count\": {\r\n               \"type\": \"integer\",\r\n               \"default\": 0\r\n            }\r\n         }\r\n      }\r\n   }, ...\r\n]\r\n```\r\n\r\nThe default is ignored for missing parameters, e.g, with the following JSON body request:\r\n\r\n```json\r\n{\r\n   \"name\": \"Phred\"\r\n}\r\n```\r\n\r\nThe output is:\r\n\r\n```python\r\n{\r\n   \"name\": \"Phred\",\r\n   \"count\": None\r\n}\r\n```\r\n\r\nI'd expect it to be:\r\n\r\n```python\r\n{\r\n   \"name\": \"Phred\",\r\n   \"count\": 0\r\n}\r\n```\r\n\r\nNote: `x-nullable` has no effect here: `default` is ignored regardless of the `x-nullable` setting when the property is missing and the value is set to `None`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/151", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/151/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/151/events", "html_url": "https://github.com/Yelp/bravado-core/issues/151", "id": 208214502, "node_id": "MDU6SXNzdWUyMDgyMTQ1MDI=", "number": 151, "title": "Optional enum types require both \"x-nullable\" and \"null\" to pass validation", "user": {"login": "dhojnowski", "id": 24927145, "node_id": "MDQ6VXNlcjI0OTI3MTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/24927145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhojnowski", "html_url": "https://github.com/dhojnowski", "followers_url": "https://api.github.com/users/dhojnowski/followers", "following_url": "https://api.github.com/users/dhojnowski/following{/other_user}", "gists_url": "https://api.github.com/users/dhojnowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhojnowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhojnowski/subscriptions", "organizations_url": "https://api.github.com/users/dhojnowski/orgs", "repos_url": "https://api.github.com/users/dhojnowski/repos", "events_url": "https://api.github.com/users/dhojnowski/events{/privacy}", "received_events_url": "https://api.github.com/users/dhojnowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-16T19:01:26Z", "updated_at": "2017-02-16T21:06:12Z", "closed_at": "2017-02-16T19:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a swagger spec that specifies an enum that I'd like to be nullable.  I would expect that I could just add \"x-nullable\" to this, but it appears I have to also add null to the list of values for the enum\r\n\r\n```\r\n\"DeviceType\": {\r\n      \"type\": \"string\",\r\n      \"x-nullable\": true,\r\n      \"enum\": [\r\n        \"android\",\r\n        \"iphone\",\r\n        \"ipad\"\r\n      ]\r\n    },\r\n```\r\ngives `None is not one of [u'android', u'iphone', u'ipad']`\r\n\r\n```\r\n\"DeviceType\": {\r\n      \"type\": \"string\",\r\n      \"enum\": [\r\n        \"android\",\r\n        \"iphone\",\r\n        \"ipad\",\r\n        null\r\n      ]\r\n    },\r\n```\r\ngives `None is not of type u'string'`  Only \r\n```\r\n\"DeviceType\": {\r\n      \"type\": \"string\",\r\n      \"x-nullable\": true,\r\n      \"enum\": [\r\n        \"android\",\r\n        \"iphone\",\r\n        \"ipad\",\r\n        null\r\n      ]\r\n    },\r\n``` \r\npasses.\r\n\r\nThis is on bravado-core 4.5.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/150", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/150/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/150/events", "html_url": "https://github.com/Yelp/bravado-core/issues/150", "id": 208176840, "node_id": "MDU6SXNzdWUyMDgxNzY4NDA=", "number": 150, "title": "partial objects (missing attributes)", "user": {"login": "dpopowich", "id": 6783372, "node_id": "MDQ6VXNlcjY3ODMzNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6783372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpopowich", "html_url": "https://github.com/dpopowich", "followers_url": "https://api.github.com/users/dpopowich/followers", "following_url": "https://api.github.com/users/dpopowich/following{/other_user}", "gists_url": "https://api.github.com/users/dpopowich/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpopowich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpopowich/subscriptions", "organizations_url": "https://api.github.com/users/dpopowich/orgs", "repos_url": "https://api.github.com/users/dpopowich/repos", "events_url": "https://api.github.com/users/dpopowich/events{/privacy}", "received_events_url": "https://api.github.com/users/dpopowich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-02-16T16:40:15Z", "updated_at": "2017-03-26T15:08:15Z", "closed_at": "2017-03-26T15:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a definition like this:\r\n\r\n```json\r\n   \"definitions\": {\r\n      \"Foo\": {\r\n         \"properties\": {\r\n            \"id\": {\r\n               \"type\": \"integer\"\r\n            },\r\n            \"name\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"job\": {\r\n               \"type\": \"string\"\r\n            }\r\n         },\r\n         \"type\": \"object\"\r\n      },\r\n     ...\r\n```\r\n\r\nAnd I reference this in a PUT spec:\r\n\r\n```json\r\n\"paths\": {\r\n      \"/foo/{id}\": {\r\n         \"put\": {\r\n            \"parameters\": [\r\n               ...\r\n               {\r\n                  \"required\": true,\r\n                  \"in\": \"body\",\r\n                  \"name\": \"body\",\r\n                  \"schema\": {\r\n                     \"$ref\": \"#/definitions/Foo\"\r\n                  }\r\n\r\n               }\r\n            ], ...\r\n```\r\n\r\nWhen I call `PUT /foo/14` with a JSON body of:\r\n\r\n```json\r\n{\r\n   \"id\": 14,\r\n   \"name\": \"joeschmoe\"\r\n}\r\n```\r\n\r\nThe unmarshalled python output from bravado-core is:\r\n\r\n```python\r\n{\r\n   \"id\": 14,\r\n   \"name\": \"joeschmoe\",\r\n   \"job\": None\r\n}\r\n```\r\nThat is, `job` was missing, but bravado-core [explicitly looks](https://github.com/Yelp/bravado-core/blob/master/bravado_core/unmarshal.py#L138-L142) for missing properties and sets them on the object with a `None` value.\r\n\r\nI cannot find this behavior specified in the swagger spec anywhere. If it exists, can someone point me to this requirement (forcing missing properties to null) in the spec?\r\n\r\nIf this behavior is not required by the swagger spec and bravado-core is overreaching here, how about an option to allow partial objects?\r\n\r\nOtherwise, how is someone supposed to provide PATCH or similar functionality?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/137", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/137/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/137/events", "html_url": "https://github.com/Yelp/bravado-core/issues/137", "id": 195897727, "node_id": "MDU6SXNzdWUxOTU4OTc3Mjc=", "number": 137, "title": "enum with x-nullable", "user": {"login": "dpopowich", "id": 6783372, "node_id": "MDQ6VXNlcjY3ODMzNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6783372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpopowich", "html_url": "https://github.com/dpopowich", "followers_url": "https://api.github.com/users/dpopowich/followers", "following_url": "https://api.github.com/users/dpopowich/following{/other_user}", "gists_url": "https://api.github.com/users/dpopowich/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpopowich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpopowich/subscriptions", "organizations_url": "https://api.github.com/users/dpopowich/orgs", "repos_url": "https://api.github.com/users/dpopowich/repos", "events_url": "https://api.github.com/users/dpopowich/events{/privacy}", "received_events_url": "https://api.github.com/users/dpopowich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-15T19:42:21Z", "updated_at": "2017-02-09T19:05:40Z", "closed_at": "2017-02-09T19:05:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my desired spec for a property in an object:\r\n\r\n```json\r\n\"code\": {\r\n               \"type\": \"string\",\r\n               \"enum\": [\"M\", \"U\", \"P\", \"C\", \"H\", \"F\"],\r\n               \"x-nullable\": true\r\n    }\r\n```\r\n\r\nUsing this against an incoming object with property `code` equal to `null` produces a validation error in `enum_validator()`. Tracing the code I see `x-nullable` is only considered when comparing the instance against the type, but validation doesn't end there and the enum validator fails because `null` is not part of the enum array. Swagger does not allow `null` as a value within the enum, so I'm stuck.\r\n\r\nWithin the enum validator does it not make sense to test None instances against `x-nullable`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/136", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/136/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/136/events", "html_url": "https://github.com/Yelp/bravado-core/issues/136", "id": 195380350, "node_id": "MDU6SXNzdWUxOTUzODAzNTA=", "number": 136, "title": "Support model polymorphism", "user": {"login": "jlumpe", "id": 7455396, "node_id": "MDQ6VXNlcjc0NTUzOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7455396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlumpe", "html_url": "https://github.com/jlumpe", "followers_url": "https://api.github.com/users/jlumpe/followers", "following_url": "https://api.github.com/users/jlumpe/following{/other_user}", "gists_url": "https://api.github.com/users/jlumpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlumpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlumpe/subscriptions", "organizations_url": "https://api.github.com/users/jlumpe/orgs", "repos_url": "https://api.github.com/users/jlumpe/repos", "events_url": "https://api.github.com/users/jlumpe/events{/privacy}", "received_events_url": "https://api.github.com/users/jlumpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-13T21:57:36Z", "updated_at": "2017-03-26T15:09:12Z", "closed_at": "2017-03-26T15:09:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Model polymorphism as defined in the Swagger 2.0 spec is currently not supported by this package. I have implemented it in PR #128 but have not received any feedback. Is this repo still being maintained?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/133", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/133/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/133/events", "html_url": "https://github.com/Yelp/bravado-core/issues/133", "id": 192948711, "node_id": "MDU6SXNzdWUxOTI5NDg3MTE=", "number": 133, "title": "date-time to_wire doesn't validate against rfc3339", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-01T20:06:28Z", "updated_at": "2016-12-19T13:33:11Z", "closed_at": "2016-12-19T13:33:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/Yelp/bravado-core/blob/24461141a308eeca4f997b48b4c4deacaef8c12a/bravado_core/formatter.py#L114\r\n\r\n```python\r\n>>> strict_rfc3339.validate_rfc3339(datetime.datetime.utcnow().isoformat())\r\nFalse\r\n```\r\n\r\nThe \"simplest\" fix is to do `.isoformat() + 'Z'`, but either way it's impossible to have correct timezone information with just a `datetime` value", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/131", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/131/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/131/events", "html_url": "https://github.com/Yelp/bravado-core/issues/131", "id": 188951073, "node_id": "MDU6SXNzdWUxODg5NTEwNzM=", "number": 131, "title": "Unmarshal fails with multi-type additionalProperties", "user": {"login": "gabisurita", "id": 4023375, "node_id": "MDQ6VXNlcjQwMjMzNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4023375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabisurita", "html_url": "https://github.com/gabisurita", "followers_url": "https://api.github.com/users/gabisurita/followers", "following_url": "https://api.github.com/users/gabisurita/following{/other_user}", "gists_url": "https://api.github.com/users/gabisurita/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabisurita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabisurita/subscriptions", "organizations_url": "https://api.github.com/users/gabisurita/orgs", "repos_url": "https://api.github.com/users/gabisurita/repos", "events_url": "https://api.github.com/users/gabisurita/events{/privacy}", "received_events_url": "https://api.github.com/users/gabisurita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-13T04:10:34Z", "updated_at": "2016-11-13T10:56:53Z", "closed_at": "2016-11-13T10:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's quite unusual to have something like this, but given an object:\r\n\r\n```yaml\r\n  stored-object:\r\n    type: object\r\n    properties:\r\n      data:\r\n        type: object\r\n        properties:\r\n          id:\r\n            type: string\r\n        additionalProperties:\r\n          type: [integer, string, boolean]\r\n      permissions:\r\n        $ref: '#/definitions/permissions'\r\n```\r\n\r\nI've got this error on `pyramid_swagger`:\r\n\r\n```json\r\n{\r\n    \"code\": \"400 Bad Request\",\r\n    \"message\": \"The server could not comply with the request since it is either malformed or otherwise incorrect.\\n\\n\\nDon't know how to unmarshal value aaa with a type of [u'integer', u'string', u'boolean']\\n\\n\",\r\n    \"title\": \"Bad Request\"\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/125", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/125/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/125/events", "html_url": "https://github.com/Yelp/bravado-core/issues/125", "id": 182127525, "node_id": "MDU6SXNzdWUxODIxMjc1MjU=", "number": 125, "title": "Creation of models with property named \"self\" fails.", "user": {"login": "jkrukoff", "id": 484614, "node_id": "MDQ6VXNlcjQ4NDYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/484614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkrukoff", "html_url": "https://github.com/jkrukoff", "followers_url": "https://api.github.com/users/jkrukoff/followers", "following_url": "https://api.github.com/users/jkrukoff/following{/other_user}", "gists_url": "https://api.github.com/users/jkrukoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkrukoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkrukoff/subscriptions", "organizations_url": "https://api.github.com/users/jkrukoff/orgs", "repos_url": "https://api.github.com/users/jkrukoff/repos", "events_url": "https://api.github.com/users/jkrukoff/events{/privacy}", "received_events_url": "https://api.github.com/users/jkrukoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-10T22:12:28Z", "updated_at": "2016-10-30T15:31:10Z", "closed_at": "2016-10-30T15:31:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When attempting to invoke an endpoint that creates a model with a \"self\" property, the following traceback is emitted:\n\n```\nTraceback (most recent call last):\n  File \"<ipython-input-14-acee5e06b3f1>\", line 1, in <module>\n    try: c.index.get_index().result()._links.self.href\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado/http_future.py\", line 77, in result\n    self.response_callbacks)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado/http_future.py\", line 115, in unmarshal_response\n    operation)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/response.py\", line 110, in unmarshal_response\n    op.swagger_spec, content_spec, content_value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 51, in unmarshal_schema_object\n    return unmarshal_model(swagger_spec, schema_object_spec, value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 173, in unmarshal_model\n    model_as_dict = unmarshal_object(swagger_spec, model_spec, model_value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 133, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 51, in unmarshal_schema_object\n    return unmarshal_model(swagger_spec, schema_object_spec, value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 173, in unmarshal_model\n    model_as_dict = unmarshal_object(swagger_spec, model_spec, model_value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 133, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 54, in unmarshal_schema_object\n    return unmarshal_object(swagger_spec, schema_object_spec, value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 133, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 51, in unmarshal_schema_object\n    return unmarshal_model(swagger_spec, schema_object_spec, value)\n  File \"/home/jkrukoff/Documents/Services/unifi-go/.virtualenv/lib/python3.5/site-packages/bravado_core/unmarshal.py\", line 174, in unmarshal_model\n    model_instance = model_type(**model_as_dict)\nTypeError: <lambda>() got multiple values for argument 'self'\n```\n\nIt appears that the model constructor depends on passing **kwargs in, which conflicts with the initial `self` parameter for the **init** method. This is problematic for me, as I'm building a API that uses JSON+HAL, which mandates that a property named `self` exist on all resources.\n\nI've an attempt at a PR to resolve the issue, though don't feel like I've a deep enough understanding of the issue to have confidence in my changes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/123", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/123/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/123/events", "html_url": "https://github.com/Yelp/bravado-core/issues/123", "id": 179899394, "node_id": "MDU6SXNzdWUxNzk4OTkzOTQ=", "number": 123, "title": "Fix handling of security requirements to match spec", "user": {"login": "jlumpe", "id": 7455396, "node_id": "MDQ6VXNlcjc0NTUzOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7455396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlumpe", "html_url": "https://github.com/jlumpe", "followers_url": "https://api.github.com/users/jlumpe/followers", "following_url": "https://api.github.com/users/jlumpe/following{/other_user}", "gists_url": "https://api.github.com/users/jlumpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlumpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlumpe/subscriptions", "organizations_url": "https://api.github.com/users/jlumpe/orgs", "repos_url": "https://api.github.com/users/jlumpe/repos", "events_url": "https://api.github.com/users/jlumpe/events{/privacy}", "received_events_url": "https://api.github.com/users/jlumpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macisamuele", "id": 6726359, "node_id": "MDQ6VXNlcjY3MjYzNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6726359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macisamuele", "html_url": "https://github.com/macisamuele", "followers_url": "https://api.github.com/users/macisamuele/followers", "following_url": "https://api.github.com/users/macisamuele/following{/other_user}", "gists_url": "https://api.github.com/users/macisamuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/macisamuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macisamuele/subscriptions", "organizations_url": "https://api.github.com/users/macisamuele/orgs", "repos_url": "https://api.github.com/users/macisamuele/repos", "events_url": "https://api.github.com/users/macisamuele/events{/privacy}", "received_events_url": "https://api.github.com/users/macisamuele/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-09-28T21:49:23Z", "updated_at": "2016-10-21T18:39:46Z", "closed_at": "2016-10-21T18:39:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For both the root swagger object and an operation object the `security` property is defined to be an array of [security requirement objects](http://swagger.io/specification/#securityRequirementObject). The official spec says the following in the description for this property:\n\n> The list of values describes alternative security schemes that can be used (that is, there is a logical OR between the security requirements).\n\nThe security requirement object is described as:\n\n> Lists the required security schemes to execute this operation. The object can have multiple security schemes declared in it which are all required (that is, there is a logical AND between the schemes).\n\nThe current implementation effectively just uses a logical AND between all security schemes in all security requirements by marking all parameters derived from these as required. This prevents alternate sets of security schemes from being used. It also introduces a possible bug where parameters would be duplicated if the same security scheme appears in two or more different security requirement objects.\n\nI can submit a pull request which removes the `required` property from security parameters and removes possible duplicates from the `Operation.security_objects` property. However this is not a complete fix as no checks are performed to make sure a valid set of security parameters are given in a request. I'm not sure that fix belongs in this package, probably it should be done in `bravado.client.construct_params` instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/119", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/119/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/119/events", "html_url": "https://github.com/Yelp/bravado-core/issues/119", "id": 178299912, "node_id": "MDU6SXNzdWUxNzgyOTk5MTI=", "number": 119, "title": "x-scope tripping up validation?", "user": {"login": "mahmoud", "id": 130193, "node_id": "MDQ6VXNlcjEzMDE5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoud", "html_url": "https://github.com/mahmoud", "followers_url": "https://api.github.com/users/mahmoud/followers", "following_url": "https://api.github.com/users/mahmoud/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoud/subscriptions", "organizations_url": "https://api.github.com/users/mahmoud/orgs", "repos_url": "https://api.github.com/users/mahmoud/repos", "events_url": "https://api.github.com/users/mahmoud/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-21T09:55:54Z", "updated_at": "2016-09-25T17:12:56Z", "closed_at": "2016-09-25T17:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey all, ran into an issue when loading up a spec. \n\nFirst of all, I'm doing \n\n``` python\nspec = Spec.from_dict(openapi_spec_dict)\nspec.build()\n```\n\nWhich I hope is the right approach. The spec I'm loading is reproduced below in yaml (with some extraneous parts clipped). I get an error (at the very bottom), which seems to suggest to me that `x-scope` is causing references to not validate? \n\nSeems far-fetched, I know; I saw all the comments about customizing the validator for exactly this sort of extension. But I'm not sure how to interpret the following error. Any help would be much appreciated!\n\n``` yaml\nswagger: '2.0'\nhost: localhost\nbasePath: /\nschemes:\n- http\nconsumes:\n- application/json\nproduces:\n- application/json\ninfo:\n  contact:\n    name: ''\n  description: ''\n  title: ''\n  version: '0.1'\npaths:\n  /admin/campaign:\n    post:\n      description: Get admin-level details for a campaign, identified by campaign\n        ID.\n      operationId: get_admin_campaign\n      parameters:\n      - description: JSON request message for get_admin_campaign\n        in: body\n        name: get_admin_campaign_request_message\n        required: true\n        schema:\n          $ref: '#/definitions/GetAdminCampaignRequestModel'\n      produces:\n      - application/json\n      responses:\n        '200':\n          schema:\n            $ref: '#/definitions/GetAdminCampaignResponseWrapper'\ndefinitions:\n  GetAdminCampaignResponseWrapper:\n    data:\n      schema:\n        $ref: '#/definitions/CampaignDetails'\n      type: object\n    errors:\n      items:\n        type: string\n      type: array\n    status:\n      type: string\n    user:\n      schema:\n        $ref: null\n      type: object\n```\n\n```\nTraceback (most recent call last):\n  File \"montage/openapi_endpoints.py\", line 440, in <module>\n    spec = Spec.from_dict(sb.get_openapi_spec_dict())\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/bravado_core/spec.py\", line 152, in from_dict\n    spec.build()\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/bravado_core/spec.py\", line 159, in build\n    http_handlers=build_http_handlers(self.http_client))\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/swagger_spec_validator/validator20.py\", line 82, in validate_spec\n    http_handlers=http_handlers)\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/swagger_spec_validator/common.py\", line 22, in wrapper\n    sys.exc_info()[2])\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/swagger_spec_validator/common.py\", line 17, in wrapper\n    return method(*args, **kwargs)\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/swagger_spec_validator/validator20.py\", line 125, in validate_json\n    cls=Draft4Validator)\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/swagger_spec_validator/ref_validators.py\", line 34, in validate\n    instance_cls(schema, *args, **kwargs).validate(instance)\n  File \"/home/mahmoud/virtualenvs/montage/local/lib/python2.7/site-packages/jsonschema/validators.py\", line 123, in validate\n    raise error\nswagger_spec_validator.common.SwaggerValidationError: {'schema': {'x-scope': [''], '$ref': '#/definitions/GetAdminCampaignResponseWrapper'}} is not valid under any of the given schemas\n\nFailed validating u'oneOf' in schema[u'properties'][u'paths'][u'patternProperties'][u'^/'][u'properties'][u'post'][u'properties'][u'responses'][u'patternProperties'][u'^([0-9]{3})$|^(default)$']:\n    {u'oneOf': [{u'$ref': u'#/definitions/response'},\n                {u'$ref': u'#/definitions/jsonReference'}]}\n\nOn instance[u'paths']['/admin/campaign'][u'post'][u'responses']['200']:\n    {'schema': {'$ref': '#/definitions/GetAdminCampaignResponseWrapper',\n                'x-scope': ['']}}\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/108", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/108/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/108/events", "html_url": "https://github.com/Yelp/bravado-core/issues/108", "id": 170204269, "node_id": "MDU6SXNzdWUxNzAyMDQyNjk=", "number": 108, "title": "Error during unmarshal_object for x-nullable=true property", "user": {"login": "zroadhouse-rmn", "id": 1122680, "node_id": "MDQ6VXNlcjExMjI2ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1122680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zroadhouse-rmn", "html_url": "https://github.com/zroadhouse-rmn", "followers_url": "https://api.github.com/users/zroadhouse-rmn/followers", "following_url": "https://api.github.com/users/zroadhouse-rmn/following{/other_user}", "gists_url": "https://api.github.com/users/zroadhouse-rmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/zroadhouse-rmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zroadhouse-rmn/subscriptions", "organizations_url": "https://api.github.com/users/zroadhouse-rmn/orgs", "repos_url": "https://api.github.com/users/zroadhouse-rmn/repos", "events_url": "https://api.github.com/users/zroadhouse-rmn/events{/privacy}", "received_events_url": "https://api.github.com/users/zroadhouse-rmn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-09T15:58:11Z", "updated_at": "2016-08-17T12:58:44Z", "closed_at": "2016-08-17T12:58:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe unmarshal_object code path is missing support for x-nullable. I get the following traceback when unmarshaling a property which a specification like:\n\n```\ndefinitions:\n  SomeType:\n    properties:\n      extra_data:\n        type: object\n        x-nullable: true\n```\n\nHere's the stack trace:\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado/http_future.py\", line 77, in result\n    self.response_callbacks)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado/http_future.py\", line 115, in unmarshal_response\n    operation)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/response.py\", line 110, in unmarshal_response\n    op.swagger_spec, content_spec, content_value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 52, in unmarshal_schema_object\n    return unmarshal_object(swagger_spec, schema_object_spec, value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 124, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 42, in unmarshal_schema_object\n    return unmarshal_array(swagger_spec, schema_object_spec, value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 100, in unmarshal_array\n    for item in array_value\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 52, in unmarshal_schema_object\n    return unmarshal_object(swagger_spec, schema_object_spec, value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 124, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 52, in unmarshal_schema_object\n    return unmarshal_object(swagger_spec, schema_object_spec, value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 124, in unmarshal_object\n    result[k] = unmarshal_schema_object(swagger_spec, prop_spec, v)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 52, in unmarshal_schema_object\n    return unmarshal_object(swagger_spec, schema_object_spec, value)\n  File \"/Users/zroadhouse/.virtualenvs/dartclient-bravado/lib/python2.7/site-packages/bravado_core/unmarshal.py\", line 117, in unmarshal_object\n    type(object_value), object_value))\nbravado_core.exception.SwaggerMappingError: Expected dict like type for <type 'NoneType'>:None\n```\n\nDiscussed here:\n- https://github.com/Yelp/bravado/issues/172\n\nI'm working on a PR containing a fix.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/94", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/94/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/94/events", "html_url": "https://github.com/Yelp/bravado-core/issues/94", "id": 155265900, "node_id": "MDU6SXNzdWUxNTUyNjU5MDA=", "number": 94, "title": "Missing support for multiple types", "user": {"login": "lanzz", "id": 130721, "node_id": "MDQ6VXNlcjEzMDcyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/130721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanzz", "html_url": "https://github.com/lanzz", "followers_url": "https://api.github.com/users/lanzz/followers", "following_url": "https://api.github.com/users/lanzz/following{/other_user}", "gists_url": "https://api.github.com/users/lanzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanzz/subscriptions", "organizations_url": "https://api.github.com/users/lanzz/orgs", "repos_url": "https://api.github.com/users/lanzz/repos", "events_url": "https://api.github.com/users/lanzz/events{/privacy}", "received_events_url": "https://api.github.com/users/lanzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-17T13:55:46Z", "updated_at": "2016-05-17T14:23:51Z", "closed_at": "2016-05-17T14:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://json-schema.org/latest/json-schema-validation.html#anchor79\n\n> The value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique.\n\n...\n\n> An instance matches successfully if its primitive type is one of the types defined by keyword.\n\nI take this to mean that I can use\n\n``` yaml\nproperties:\n    foo:\n        type:\n            - 'string'\n            - 'null'\n```\n\nBut Bravado bombs:\n\n> SwaggerMappingError: Don't know how to unmarshal value None with a type of ['string', 'null']\n\nUnfortunately, I can't remove the `null` type here, because I _do_ get strings and nulls in that property from my backend, and validation fails for nulls; non-required properties are expected to _not exist_ in the dictionary and do not accept a `null` value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/92", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/92/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/92/events", "html_url": "https://github.com/Yelp/bravado-core/issues/92", "id": 150422229, "node_id": "MDU6SXNzdWUxNTA0MjIyMjk=", "number": 92, "title": "get_op_for_request seems not very helpful?", "user": {"login": "nicksloan", "id": 458971, "node_id": "MDQ6VXNlcjQ1ODk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/458971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicksloan", "html_url": "https://github.com/nicksloan", "followers_url": "https://api.github.com/users/nicksloan/followers", "following_url": "https://api.github.com/users/nicksloan/following{/other_user}", "gists_url": "https://api.github.com/users/nicksloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicksloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicksloan/subscriptions", "organizations_url": "https://api.github.com/users/nicksloan/orgs", "repos_url": "https://api.github.com/users/nicksloan/repos", "events_url": "https://api.github.com/users/nicksloan/events{/privacy}", "received_events_url": "https://api.github.com/users/nicksloan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876214, "node_id": "MDU6TGFiZWwxOTM4NzYyMTQ=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-22T17:01:02Z", "updated_at": "2016-04-24T20:07:29Z", "closed_at": "2016-04-24T20:07:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "get_op_for_request claims that it makes server implementations very easy by letting you supply a path pattern and method to look up an op.\n\nThe thing is, a server implementation is going to have a concrete path more likely than a pattern, and the server would have to implement a look up of the operation anyway to get to the point of identifying the path pattern, at which point this work has already been done.\n\nAm I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/88", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/88/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/88/events", "html_url": "https://github.com/Yelp/bravado-core/issues/88", "id": 146461388, "node_id": "MDU6SXNzdWUxNDY0NjEzODg=", "number": 88, "title": "Badly formatted string inputs cause ValueError instead of SwaggerMappingError", "user": {"login": "bwarfield-amplify", "id": 8418200, "node_id": "MDQ6VXNlcjg0MTgyMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8418200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwarfield-amplify", "html_url": "https://github.com/bwarfield-amplify", "followers_url": "https://api.github.com/users/bwarfield-amplify/followers", "following_url": "https://api.github.com/users/bwarfield-amplify/following{/other_user}", "gists_url": "https://api.github.com/users/bwarfield-amplify/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwarfield-amplify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwarfield-amplify/subscriptions", "organizations_url": "https://api.github.com/users/bwarfield-amplify/orgs", "repos_url": "https://api.github.com/users/bwarfield-amplify/repos", "events_url": "https://api.github.com/users/bwarfield-amplify/events{/privacy}", "received_events_url": "https://api.github.com/users/bwarfield-amplify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-06T23:08:57Z", "updated_at": "2016-06-09T05:11:13Z", "closed_at": "2016-06-09T05:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given a `string` value that has a `date-time` format, an incorrectly formatted input (say, \"string\") will cause `dateutil.parser.parse` to raise `ValueError: Unknown string format` when unmarshalling the request.  This isn't checked anywhere, so it bubbles up as an unexpected error, rather than being reported as invalid input.\n\nIt seems like the place to check this is in `unmarshal_primitive`: the call to [formatter.to_python](/Yelp/bravado-core/blob/master/bravado_core/unmarshal.py#L72) could be wrapped in a try block, with `ValueError` trapped and re-raised as a `SwaggerMappingError` (allowing callers to recognize this as a malformed request)\u2014is that the right fix?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/82", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/82/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/82/events", "html_url": "https://github.com/Yelp/bravado-core/issues/82", "id": 142490386, "node_id": "MDU6SXNzdWUxNDI0OTAzODY=", "number": 82, "title": "Fix ref resolution during response validation", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-21T22:32:33Z", "updated_at": "2016-03-23T17:05:41Z", "closed_at": "2016-03-23T16:43:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Ref resolution during response validation sometimes fails because of where the validation starts. For refs to resolve 100% of the time, the scope maintained by jsonschema's RefResolver has to be rooted at `/` in swagger.json, not at the response_spec fragment that is currently passed to the `validate_response(..)` function.  \n\nLuckily, the full scope is available as `x-scope` annotations in the spec so the `ref` validator just needs to be customized to use the `x-scope` annotation if it is available.\n\nThis is quite difficult to explain, so an example is probably useful to compare working and broken scopes for the RefResolver for an internal use case:\n\nBroken RefResolver scope:\n\n```\n['file:///nail/home/spatel/pg/services/biz_app/api_docs/swagger.json']\n```\n\nWorking RefResolver scope:\n\n```\n[\n'file:///nail/home/spatel/pg/services/biz_app/api_docs/swagger.json',\n'file:///nail/home/spatel/pg/services/biz_app/api_docs/tags/account.json#/paths/account.photo.v1',\n'file:///nail/home/spatel/pg/services/biz_app/api_docs/tags/account.json#/definitions/AccountPhotoResponse'\n]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/78", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/78/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/78/events", "html_url": "https://github.com/Yelp/bravado-core/issues/78", "id": 139102451, "node_id": "MDU6SXNzdWUxMzkxMDI0NTE=", "number": 78, "title": "x-scope annotations on server side shouldn't be sent to the client", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-07T21:37:21Z", "updated_at": "2016-03-10T18:55:43Z", "closed_at": "2016-03-10T18:55:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See internal ticket GSI-252 for the details.\n\nBasically, x-scope annotations that reference `file://` type urls are being sent to the client which then tries to use the `file://` type urls to resolve $refs.  The x-scope annotation should not be part of the swagger.json sent to the client.\n\nThe error surfaces on the client side in an exception that closely resembles:\n\n`RefResolutionError: <urlopen error [Errno 2] No such file or directory: '/code/api_docs/swagger.json'>`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/77", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/77/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/77/events", "html_url": "https://github.com/Yelp/bravado-core/issues/77", "id": 137688873, "node_id": "MDU6SXNzdWUxMzc2ODg4NzM=", "number": 77, "title": "Unmarshaling request with non-required enum fails", "user": {"login": "jacobstr", "id": 70507, "node_id": "MDQ6VXNlcjcwNTA3", "avatar_url": "https://avatars0.githubusercontent.com/u/70507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobstr", "html_url": "https://github.com/jacobstr", "followers_url": "https://api.github.com/users/jacobstr/followers", "following_url": "https://api.github.com/users/jacobstr/following{/other_user}", "gists_url": "https://api.github.com/users/jacobstr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobstr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobstr/subscriptions", "organizations_url": "https://api.github.com/users/jacobstr/orgs", "repos_url": "https://api.github.com/users/jacobstr/repos", "events_url": "https://api.github.com/users/jacobstr/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobstr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-01T21:13:31Z", "updated_at": "2016-03-23T17:06:01Z", "closed_at": "2016-03-21T22:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "`unmarshal_request` delegates to `bravado_core.validate.validate_primitive` which fails validation when `None` is passed in for a non-required parameter.\n\n```\n>           raise error\nE           ValidationError: None is not one of ['inky', 'dinky', 'doo']\nE\nE           Failed validating 'enum' in schema:\nE               {'enum': ['inky', 'dinky', 'doo'], 'type': 'string'}\nE\nE           On instance:\nE               None\n```\n\nI've pushed a branch with a test that captures this:\n\nhttps://github.com/jacobstr/bravado-core/tree/validate-non-required-enum\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/70", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/70/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/70/events", "html_url": "https://github.com/Yelp/bravado-core/issues/70", "id": 134750496, "node_id": "MDU6SXNzdWUxMzQ3NTA0OTY=", "number": 70, "title": "casting of boolean values doesn't work", "user": {"login": "watterso", "id": 1614083, "node_id": "MDQ6VXNlcjE2MTQwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1614083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/watterso", "html_url": "https://github.com/watterso", "followers_url": "https://api.github.com/users/watterso/followers", "following_url": "https://api.github.com/users/watterso/following{/other_user}", "gists_url": "https://api.github.com/users/watterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/watterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/watterso/subscriptions", "organizations_url": "https://api.github.com/users/watterso/orgs", "repos_url": "https://api.github.com/users/watterso/repos", "events_url": "https://api.github.com/users/watterso/events{/privacy}", "received_events_url": "https://api.github.com/users/watterso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-19T02:00:42Z", "updated_at": "2016-02-24T23:18:36Z", "closed_at": "2016-02-24T23:18:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See the below code excerpt from `bravado_core/param.py` for proof.\n`param_value` comes in as a string, using `bool()` as a casting function would result in the following behavior:\n- `bool('non-empty-string') == True`\n- `bool('') == False` (doesn't happen because None is returned if `param_value == ''`)\n\n``` python\nCAST_TYPE_TO_FUNC = {\n    'integer': int,\n    'number': float,\n    'boolean': bool\n}\ndef cast_request_param(param_type, param_name, param_value):\n    ....\n    if param_value is None:\n        return None\n\n    if param_type in CAST_TYPE_TO_FUNC and param_value == '':\n        return None\n\n    try:\n        return CAST_TYPE_TO_FUNC.get(param_type, lambda x: x)(param_value)\n    except ValueError:\n        log.warn(\"Failed to cast %s value of %s to %s\",\n                 param_name, param_value, param_type)\n        # Ignore type error, let jsonschema validation handle incorrect types\n        return param_value\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/68", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/68/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/68/events", "html_url": "https://github.com/Yelp/bravado-core/issues/68", "id": 129905604, "node_id": "MDU6SXNzdWUxMjk5MDU2MDQ=", "number": 68, "title": "unintuitive behavior when a param does not have a value", "user": {"login": "watterso", "id": 1614083, "node_id": "MDQ6VXNlcjE2MTQwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1614083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/watterso", "html_url": "https://github.com/watterso", "followers_url": "https://api.github.com/users/watterso/followers", "following_url": "https://api.github.com/users/watterso/following{/other_user}", "gists_url": "https://api.github.com/users/watterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/watterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/watterso/subscriptions", "organizations_url": "https://api.github.com/users/watterso/orgs", "repos_url": "https://api.github.com/users/watterso/repos", "events_url": "https://api.github.com/users/watterso/events{/privacy}", "received_events_url": "https://api.github.com/users/watterso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-29T22:55:18Z", "updated_at": "2016-02-19T01:52:22Z", "closed_at": "2016-02-19T01:52:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A request such as `example.com/path_to_resource?bool_flag=` where the type of `bool_flag` is `boolean`, the value of `bool_flag` would be set to `False` and if the type was `integer` or `number` the value would be set to `''` (empty string). This behavior seems arbitrary and unintuitive.\n\nI propose their values be set to `None`, as no value was provided. A caveat however, string types would remain `''` (empty string) because there is no other way to specify an empty string as a param's value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/66", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/66/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/66/events", "html_url": "https://github.com/Yelp/bravado-core/issues/66", "id": 126931010, "node_id": "MDU6SXNzdWUxMjY5MzEwMTA=", "number": 66, "title": "Validation fails for arrays of non-strings  when using the \"multi\" collection format", "user": {"login": "JoelO", "id": 1427857, "node_id": "MDQ6VXNlcjE0Mjc4NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1427857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelO", "html_url": "https://github.com/JoelO", "followers_url": "https://api.github.com/users/JoelO/followers", "following_url": "https://api.github.com/users/JoelO/following{/other_user}", "gists_url": "https://api.github.com/users/JoelO/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelO/subscriptions", "organizations_url": "https://api.github.com/users/JoelO/orgs", "repos_url": "https://api.github.com/users/JoelO/repos", "events_url": "https://api.github.com/users/JoelO/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-15T18:37:14Z", "updated_at": "2016-03-02T18:05:29Z", "closed_at": "2016-03-02T18:05:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Examples of failed validation:\n\nWhen queried with `value=2`\n\n```\n<html>\n <head>\n  <title>400 Bad Request</title>\n </head>\n <body>\n  <h1>400 Bad Request</h1>\n  The server could not comply with the request since it is either malformed or otherwise incorrect.<br/><br/>\nu'2' is not of type 'array'\n\nFailed validating 'type' in schema:\n    {'collectionFormat': 'multi',\n     'description': 'Value',\n     'in': 'query',\n     'items': {'format': 'int32', 'type': 'integer'},\n     'name': 'value',\n     'required': False,\n     'type': 'array'}\n\nOn instance:\n    u'2'\n\n\n </body>\n</html>\n```\n\nand when queried with `value=2&value=1`\n\n```\n<html>\n <head>\n  <title>400 Bad Request</title>\n </head>\n <body>\n  <h1>400 Bad Request</h1>\n  The server could not comply with the request since it is either malformed or otherwise incorrect.<br/><br/>\nu'2' is not of type 'integer'\n\nFailed validating 'type' in schema['items']:\n    {'format': 'int32', 'type': 'integer'}\n\nOn instance[0]:\n    u'2'\n\n </body>\n</html>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/50", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/50/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/50/events", "html_url": "https://github.com/Yelp/bravado-core/issues/50", "id": 108877751, "node_id": "MDU6SXNzdWUxMDg4Nzc3NTE=", "number": 50, "title": "User-defined formats should be tied to a Spec (not global)", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-09-29T14:09:38Z", "updated_at": "2015-10-07T16:35:15Z", "closed_at": "2015-10-07T16:35:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, user-defined formats are defined globally.  This is not ideal when a python client process interfaces with more than one Swagger service with a different set of user-defined formats applying to each service.  In the worst case, the same format name may be used with differing implementations.\n\nAssociate user-defined formats with a `bravado_core.spec.Spec` instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/48", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/48/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/48/events", "html_url": "https://github.com/Yelp/bravado-core/issues/48", "id": 108206827, "node_id": "MDU6SXNzdWUxMDgyMDY4Mjc=", "number": 48, "title": "Validation of user defined formats only works for primitive schemas", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-09-24T20:20:49Z", "updated_at": "2015-09-30T20:30:44Z", "closed_at": "2015-09-30T20:30:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given:\n\n``` python\ndef validate_palindrome(x):\n    if x != ''.join(reversed(x)):\n        raise SwaggerValidationException('%s is not a palindrome' % x)\n\npalindrome_format = SwaggerFormat(\n    format='palindrome',\n    to_wire=lambda x: x,\n    to_pyton=lambda x: x,\n    validate=validate_palindrome)\n```\n\nThis works for schema:\n\n``` json\n{\n    \"name\": \"foo\",\n    \"type\": \"string\",\n    \"format\": \"palindrome\"\n}\n```\n\nBut doesn't work for nested primitives:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"foo\": {\n            \"type\": \"string\", \n            \"format\": \"palindrome\"\n        }\n    }\n}\n```\n\nThis is because validation is outsourced wholesale to `Swagger20Validator` which is not aware of the registered `SwaggerFormat`s.  Few options here:\n1. Figure out how to hook the SwaggerFormat validation functions into Swagger20Validator which in turn uses `jsonschema` (best)\n2. Make another pass over the schema post-Swagger20Validator and find/validate every `format` found (ick, a hack!)\n3. Post-pone the validation for user defined formats until unmarshalling and do it then (double ick, a nastier hack!)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/47", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/47/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/47/events", "html_url": "https://github.com/Yelp/bravado-core/issues/47", "id": 108157610, "node_id": "MDU6SXNzdWUxMDgxNTc2MTA=", "number": 47, "title": "Add allow_null option", "user": {"login": "jpizarrom", "id": 111236, "node_id": "MDQ6VXNlcjExMTIzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/111236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpizarrom", "html_url": "https://github.com/jpizarrom", "followers_url": "https://api.github.com/users/jpizarrom/followers", "following_url": "https://api.github.com/users/jpizarrom/following{/other_user}", "gists_url": "https://api.github.com/users/jpizarrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpizarrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpizarrom/subscriptions", "organizations_url": "https://api.github.com/users/jpizarrom/orgs", "repos_url": "https://api.github.com/users/jpizarrom/repos", "events_url": "https://api.github.com/users/jpizarrom/events{/privacy}", "received_events_url": "https://api.github.com/users/jpizarrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-24T15:42:48Z", "updated_at": "2016-08-04T09:00:36Z", "closed_at": "2016-08-04T09:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add allow_null option like\nhttps://github.com/Yelp/bravado-core/blob/632a0f9a9ec0a3fe5c996e932b01fec9a1c933d8/docs/source/quickstart.rst#advanced-options\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/46", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/46/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/46/events", "html_url": "https://github.com/Yelp/bravado-core/issues/46", "id": 103630374, "node_id": "MDU6SXNzdWUxMDM2MzAzNzQ=", "number": 46, "title": "'type' is forced by bravado-core to be present in definitions", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 193876215, "node_id": "MDU6TGFiZWwxOTM4NzYyMTU=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-28T02:04:03Z", "updated_at": "2015-12-08T15:06:46Z", "closed_at": "2015-11-18T00:15:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If `definitions` object does not contain a `type` field, `validate` method throws up like so:\n\n```\n5   2015-08-28 00:47:14,022 y_app.yelp.web.pyramid_app ERROR   : 'type'\nTraceback (most recent call last):\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/pyramid/tweens.py\", line 21, in excview_tween\n    response = handler(request)\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/pyramid_swagger/tween.py\", line 181, in validator_tween\n    swagger_handler.handle_response(response, op_or_validators_map)\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/pyramid_swagger/tween.py\", line 412, in _validate\n    return f(*args, **kwargs)\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/pyramid_swagger/tween.py\", line 535, in swaggerize_response\n    response_spec, op, PyramidSwaggerResponse(response))\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/bravado_core/response.py\", line 156, in validate_response\n    validate_response_body(op, response_spec, response)\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/bravado_core/response.py\", line 186, in validate_response_body\n    validate_schema_object(response_body_spec, response_value)\n  File \"/nail/live/yelp/virtualenv_run/lib/python2.7/site-packages/bravado_core/validate.py\", line 21, in validate_schema_object\n    obj_type = spec['type']\nKeyError: 'type'\n```\n\nFrom the [spec](https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#definitions-object) it does not look like 'type' key presence should be mandated. Instead it should be defaulted to 'object' is properties field is non-empty imo. Also, `swagger-converter` does not add `type: object` to any of the `definitions` after conversions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/45", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/45/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/45/events", "html_url": "https://github.com/Yelp/bravado-core/issues/45", "id": 100861636, "node_id": "MDU6SXNzdWUxMDA4NjE2MzY=", "number": 45, "title": "Also tag models with external references.", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-13T20:31:43Z", "updated_at": "2015-10-09T15:20:23Z", "closed_at": "2015-10-09T15:20:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently only models present in `#/definitions` get tagged with `x-model: <model name>` and get used during marshalling/unmarshalling for type conversion to a python class versus a dict. Other models referred using `file://` or `http://` should also be treated in the same manner.\n\nThere can be cases where `$ref` refers to a complete file, like shown [here](https://github.com/swagger-api/swagger-spec/blob/master/guidelines/REUSE.md#definitions):\n\n``` json\n{\n  \"description\": \"A simple model\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    },\n    \"tag\": {\n      \"description\": \"a complex, shared property.  Note the absolute reference\",\n      \"$ref\": \"https://my.company.com/definitions/Tag.json\"\n    }\n  }\n}\n```\n\nThese kind of `ref`s can be ignored, as they do not contain a `Tag` name, to associate them with.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/43", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/43/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/43/events", "html_url": "https://github.com/Yelp/bravado-core/issues/43", "id": 100607785, "node_id": "MDU6SXNzdWUxMDA2MDc3ODU=", "number": 43, "title": "Send origin_url across to jsonref to resolve relative $ref", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-12T18:38:41Z", "updated_at": "2015-08-13T20:51:38Z", "closed_at": "2015-08-13T20:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If origin_url is not `None`, pass it across to `jsonref` so that it can resolve relative `$ref`.\n\nRelated changes should be [here](https://github.com/Yelp/bravado-core/blob/master/bravado_core/spec.py#L88) with passing `base_uri= origin_url`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/42", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/42/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/42/events", "html_url": "https://github.com/Yelp/bravado-core/issues/42", "id": 100604358, "node_id": "MDU6SXNzdWUxMDA2MDQzNTg=", "number": 42, "title": "Support yaml format for swagger spec as well", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-12T18:23:42Z", "updated_at": "2016-03-02T18:05:59Z", "closed_at": "2016-03-02T18:05:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently we support swagger spec in `json` format. It will be nice to have `yaml` support as well. I think it precedes Yelp/bravado#168\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/40", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/40/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/40/events", "html_url": "https://github.com/Yelp/bravado-core/issues/40", "id": 100209951, "node_id": "MDU6SXNzdWUxMDAyMDk5NTE=", "number": 40, "title": "jsonref dereference happening two times, leading to failures.", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-11T02:12:26Z", "updated_at": "2015-08-11T21:54:28Z", "closed_at": "2015-08-11T21:54:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following `swagger.json` fails:\n\n``` json\n{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Title was not specified\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"hours\",\n      \"description\": \"Retrieve business hours.\"\n    }\n  ],\n  \"paths\": {\n    \"/hours/{biz_id}\": {\n      \"get\": {\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"biz_id_param.json\"\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"description\": \"\",\n        \"tags\": [\n          \"hours\"\n        ],\n        \"summary\": \"Get happy hour times by biz_id\",\n        \"operationId\": \"getHours\",\n        \"parameters\": [\n          {\n              \"$ref\": \"file:///home/prat0318/param.json\"\n          }\n        ]\n      }\n    }\n  },\n  \"host\": \"localhost:1200\",\n  \"basePath\": \"/\",\n  \"schemes\": [\n    \"http\"\n  ],\n  \"definitions\": { }\n}\n```\n\nand `param.json` being:\n\n``` json\n{\n            \"in\": \"path\",\n            \"description\": \"Business ID\",\n            \"required\": true,\n              \"name\": \"biz_id\",\n            \"type\": \"string\"\n}\n```\n\n(To run the example, MENTION full `file://` address of `param.json` in above `swagger.json`)\n\nThe issue being dict gets dereferenced twice, once during `from_dict` [init](https://github.com/Yelp/bravado-core/blob/49a322f5aec84f7c50409c136f82888ed96b26f0/bravado_core/spec.py#L88) and later when it calls build, and then [validate_spec](https://github.com/Yelp/swagger_spec_validator/blob/master/swagger_spec_validator/validator20.py#L41).\n\nNote: The error does not occur in all cases, but in some specific cases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/35", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/35/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/35/events", "html_url": "https://github.com/Yelp/bravado-core/issues/35", "id": 96584714, "node_id": "MDU6SXNzdWU5NjU4NDcxNA==", "number": 35, "title": "Recursive Model Definition is not correctly handled", "user": {"login": "laucia", "id": 1099964, "node_id": "MDQ6VXNlcjEwOTk5NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1099964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laucia", "html_url": "https://github.com/laucia", "followers_url": "https://api.github.com/users/laucia/followers", "following_url": "https://api.github.com/users/laucia/following{/other_user}", "gists_url": "https://api.github.com/users/laucia/gists{/gist_id}", "starred_url": "https://api.github.com/users/laucia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laucia/subscriptions", "organizations_url": "https://api.github.com/users/laucia/orgs", "repos_url": "https://api.github.com/users/laucia/repos", "events_url": "https://api.github.com/users/laucia/events{/privacy}", "received_events_url": "https://api.github.com/users/laucia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-07-22T14:40:53Z", "updated_at": "2015-11-18T00:16:54Z", "closed_at": "2015-11-18T00:16:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A simple recursive model definition like this\n\n```\n{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"version\": \"1.0.0\",\n        \"title\": \"\"\n    },\n    \"paths\": {\n        \"/recursion\": {\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Recurse\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Recursion\"\n                        }\n                    }\n                },\n                \"parameters\": []\n            }\n        }\n    },\n    \"host\": \"localhost\",\n    \"basePath\": \"/\",\n    \"definitions\": {\n        \"Recursion\": {\n            \"properties\": {\n                \"title\": {\n                    \"description\": \"user facing localized display string\",\n                    \"type\": \"string\"\n                },\n                \"parent\": {\n                    \"description\": \"parent recursion\",\n                    \"$ref\": \"#/definitions/Recursion\"\n                }\n            },\n            \"required\": [\n                \"title\"\n            ]\n        }\n    }\n}\n\n```\n\nLeads to this exception\n\n```\n  File \"/usr/local/lib/python2.7/site-packages/bravado_core/spec.py\", line 203, in descend\n    if is_dict_like(fragment):\n  File \"/usr/local/lib/python2.7/site-packages/bravado_core/schema.py\", line 49, in is_dict_like\n    if type(spec) == dict:\nRuntimeError: maximum recursion depth exceeded while calling a Python object\n```\n\nAs nothing in the swagger spec advise against recursive model definitions and the canonical swagger-codegen [handles it](https://github.com/swagger-api/swagger-codegen/issues/728), this should also work in bravado.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/32", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/32/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/32/events", "html_url": "https://github.com/Yelp/bravado-core/issues/32", "id": 94163068, "node_id": "MDU6SXNzdWU5NDE2MzA2OA==", "number": 32, "title": "Add UserFormatterLike interface", "user": {"login": "prat0318", "id": 1528697, "node_id": "MDQ6VXNlcjE1Mjg2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1528697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prat0318", "html_url": "https://github.com/prat0318", "followers_url": "https://api.github.com/users/prat0318/followers", "following_url": "https://api.github.com/users/prat0318/following{/other_user}", "gists_url": "https://api.github.com/users/prat0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/prat0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prat0318/subscriptions", "organizations_url": "https://api.github.com/users/prat0318/orgs", "repos_url": "https://api.github.com/users/prat0318/repos", "events_url": "https://api.github.com/users/prat0318/events{/privacy}", "received_events_url": "https://api.github.com/users/prat0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-09T22:05:24Z", "updated_at": "2015-07-17T23:01:57Z", "closed_at": "2015-07-17T23:01:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is to be called from `pyramid_swagger` during [init](https://github.com/striglia/pyramid_swagger/blob/master/pyramid_swagger/__init__.py#L13)\n\nRoughly interface should look like:\n\n``` python\nclass UserFormatterLike(object):\n    \"\"\"\n    Interface for marshalling/unmarshalling user defined formatter objects.\n    Subclasses are responsible for providing attrs for __required_attrs__.\n    \"\"\"\n    __required_attrs__ = [\n        'format',         # string - format name\n        'description', # string - describes the marshalling & unmarshalling format\n    ]\n\n    def __getattr__(self, name):\n        \"\"\"\n        When an attempt to access a required attribute that doesn't exist\n        is made, let the caller know that the type is non-compliant in its\n        attempt to be `UserFormatterLike`. This is in place of the usual throwing\n        of an AttributeError.\n        Reminder: __getattr___ is only called when it has already been\n                  determined that this object does not have the given attr.\n        :raises: NotImplementedError when the subclass has not provided access\n                to a required attribute.\n        \"\"\"\n        if name in self.__required_attrs__:\n            raise NotImplementedError(\n                'This UserFormatterLike type {0} forgot to implement an attr '\n                'for `{1}`'.format(type(self), name))\n        raise AttributeError(\n            \"'{0}' object has no attribute '{1}'\".format(type(self), name))\n\n    def to_python(self, **kwargs):\n        \"\"\"\n        :return: unmarshalled python object\n        \"\"\"\n        raise NotImplementedError(\"Implement to_python() in {0}\".format(type(self)))\n\n    def to_wire(self, **kwargs):\n        \"\"\"\n        :return: marshalled python object\n        :rtype: str\n        \"\"\"\n        raise NotImplementedError(\"Implement to_wire() in {0}\".format(type(self)))\n```\n\nand a method similar to `register_format` defined [here](https://github.com/Yelp/bravado-core/blob/master/bravado_core/formatter.py#L12):\n\n``` python\ndef register_formatter(formatter):\n    \"\"\"Register a user defined formatter with bravado-core\n\n    :param formatter: object having information to marshal/unmarshal particular format\n    :type formatter: :class:`UserFormatterLike`\n    \"\"\"\n    _formatters[formatter.format] = (formatter.to_wire, formatter.to_python, formatter.description)    \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/19", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/19/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/19/events", "html_url": "https://github.com/Yelp/bravado-core/issues/19", "id": 79527992, "node_id": "MDU6SXNzdWU3OTUyNzk5Mg==", "number": 19, "title": "Refactor exception hierarchy", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-22T16:56:50Z", "updated_at": "2015-05-26T17:04:35Z", "closed_at": "2015-05-26T17:04:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, bravado-core raises three types of exceptions when errors are encountered:\n- SwaggerMappingError\n- TypeError\n- Exception\n\nWhen either TypeError or Exception is raised, it is hard for a user of the library to determine if the error is Swagger related or a general Python error.  Replace TypeError and Exception with bravado-core specific exceptions that conform to a hierarchy with SwaggerError at the root.\n\nSwaggerError\n- SwaggerMappingError\n- SwaggerTypeError\n- etc\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/18", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/18/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/18/events", "html_url": "https://github.com/Yelp/bravado-core/issues/18", "id": 78287360, "node_id": "MDU6SXNzdWU3ODI4NzM2MA==", "number": 18, "title": "Inline schema failed to validate", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876214, "node_id": "MDU6TGFiZWwxOTM4NzYyMTQ=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-19T23:12:19Z", "updated_at": "2015-06-04T17:57:22Z", "closed_at": "2015-06-04T17:57:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if this is expected or not, I tried to create a response with an inline schema, something like this:\n\n``` json\n    {                                                                                                                                                                              \n        \"swagger\": \"2.0\",                                                                                                                                                                      \n        \"info\": {                                                                                                                                                                              \n            \"version\": \"1.0.0\",                                                                                                                                                                \n            \"title\": \"Simple\"                                                                                                                                                                  \n        },                                                                                                                                                                                     \n        \"paths\": {                                                                                                                                                                             \n            \"/pet\": {                                                                                                                                                                          \n                \"get\": {                                                                                                                                                                       \n                    \"operationId\": \"getPet\",                                                                                                                                                   \n                    \"responses\": {                                                                                                                                                             \n                        \"200\": {                                                                                                                                                               \n                            \"description\": \"Get a pet\",                                                                                                                                        \n                            \"schema\": {                                                                                                                                                        \n                                \"properties\": {                                                                                                                                                \n                                    \"id\": {                                                                                                                                                    \n                                        \"type\": \"integer\",                                                                                                                                     \n                                    }                                                                                                                                                          \n                                }                                                                                                                                                              \n                            }                                                                                                                                                                  \n                        }                                                                                                                                                                      \n                    }                                                                                                                                                                          \n                }                                                                                                                                                                              \n            }                                                                                                                                                                                  \n        }       \n```\n\nBut I got\n\n`SwaggerMappingError: (\"No proper type could be found from {'properties': {'id': {'type': 'integer'}}}\", None)`\n\nFrom what I can tell, this should be valid under https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#schema-object\n\nMoving it to a $ref worked\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/17", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/17/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/17/events", "html_url": "https://github.com/Yelp/bravado-core/issues/17", "id": 78235206, "node_id": "MDU6SXNzdWU3ODIzNTIwNg==", "number": 17, "title": "Refactor HTTP invocation to bravado", "user": {"login": "dnephin", "id": 442180, "node_id": "MDQ6VXNlcjQ0MjE4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/442180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnephin", "html_url": "https://github.com/dnephin", "followers_url": "https://api.github.com/users/dnephin/followers", "following_url": "https://api.github.com/users/dnephin/following{/other_user}", "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions", "organizations_url": "https://api.github.com/users/dnephin/orgs", "repos_url": "https://api.github.com/users/dnephin/repos", "events_url": "https://api.github.com/users/dnephin/events{/privacy}", "received_events_url": "https://api.github.com/users/dnephin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-19T20:16:56Z", "updated_at": "2015-07-15T16:39:34Z", "closed_at": "2015-07-15T16:39:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just surfacing a TODO from [bravado_core/operation.py#L165](https://github.com/Yelp/bravado-core/blob/f93f884e5b09761d4f82f73dda1e56806f858a31/bravado_core/operation.py#L165) as a ticket.\n\nPretty low priority\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/15", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/15/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/15/events", "html_url": "https://github.com/Yelp/bravado-core/issues/15", "id": 76072890, "node_id": "MDU6SXNzdWU3NjA3Mjg5MA==", "number": 15, "title": "Provide config option to toggle the use of models", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-13T18:10:43Z", "updated_at": "2015-05-19T20:12:42Z", "closed_at": "2015-05-19T20:12:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Introduce a configuration option that toggles the use of models in incoming requests (server-side) and incoming responses (client side).  This is primarily for backwards compatibility with swagger-py 0.7.5 behavior.\n\nWhen `use_models` is `True`, references to `#/definitions/{models}` will be returned as model types. When `False`, a dict will be used instead.\n\nIn `bravado_core.spec`:\n\n``` python\nCONFIG_DEFAULTS = {\n    \"use_models\": True\n    ...\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/11", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/11/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/11/events", "html_url": "https://github.com/Yelp/bravado-core/issues/11", "id": 71101523, "node_id": "MDU6SXNzdWU3MTEwMTUyMw==", "number": 11, "title": "Update sphinx generated documentation", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876209, "node_id": "MDU6TGFiZWwxOTM4NzYyMDk=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-26T18:18:27Z", "updated_at": "2015-11-18T00:18:36Z", "closed_at": "2015-11-18T00:18:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current sphinx generated documentation doesn't take into account the splitting of swagger-py into bravado and bravado-core.  Update the bravado-core docs to reflect usage of the library in both client-side and server-side scenarios.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/10", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/10/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/10/events", "html_url": "https://github.com/Yelp/bravado-core/issues/10", "id": 70452839, "node_id": "MDU6SXNzdWU3MDQ1MjgzOQ==", "number": 10, "title": "Support for python 3.x", "user": {"login": "analogue", "id": 26757, "node_id": "MDQ6VXNlcjI2NzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/26757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analogue", "html_url": "https://github.com/analogue", "followers_url": "https://api.github.com/users/analogue/followers", "following_url": "https://api.github.com/users/analogue/following{/other_user}", "gists_url": "https://api.github.com/users/analogue/gists{/gist_id}", "starred_url": "https://api.github.com/users/analogue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analogue/subscriptions", "organizations_url": "https://api.github.com/users/analogue/orgs", "repos_url": "https://api.github.com/users/analogue/repos", "events_url": "https://api.github.com/users/analogue/events{/privacy}", "received_events_url": "https://api.github.com/users/analogue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-23T16:22:20Z", "updated_at": "2015-06-09T17:29:31Z", "closed_at": "2015-06-09T17:29:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/striglia/pyramid_swagger would benefit from 3.x support.\n\nPartial progress made here: https://github.com/analogue/bravado-core/tree/py3x_support\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Yelp/bravado-core/issues/4", "repository_url": "https://api.github.com/repos/Yelp/bravado-core", "labels_url": "https://api.github.com/repos/Yelp/bravado-core/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Yelp/bravado-core/issues/4/comments", "events_url": "https://api.github.com/repos/Yelp/bravado-core/issues/4/events", "html_url": "https://github.com/Yelp/bravado-core/issues/4", "id": 68168724, "node_id": "MDU6SXNzdWU2ODE2ODcyNA==", "number": 4, "title": "Documentation link is broken", "user": {"login": "anthonymayer", "id": 829762, "node_id": "MDQ6VXNlcjgyOTc2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/829762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonymayer", "html_url": "https://github.com/anthonymayer", "followers_url": "https://api.github.com/users/anthonymayer/followers", "following_url": "https://api.github.com/users/anthonymayer/following{/other_user}", "gists_url": "https://api.github.com/users/anthonymayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonymayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonymayer/subscriptions", "organizations_url": "https://api.github.com/users/anthonymayer/orgs", "repos_url": "https://api.github.com/users/anthonymayer/repos", "events_url": "https://api.github.com/users/anthonymayer/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonymayer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 193876211, "node_id": "MDU6TGFiZWwxOTM4NzYyMTE=", "url": "https://api.github.com/repos/Yelp/bravado-core/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-13T19:01:05Z", "updated_at": "2015-04-14T22:14:17Z", "closed_at": "2015-04-14T22:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://bravado-core.readthedocs.org shows a 404 page on readthedocs\n", "performed_via_github_app": null, "score": 1.0}]}