{"total_count": 119, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/celery/py-amqp/issues/326", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/326/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/326/events", "html_url": "https://github.com/celery/py-amqp/issues/326", "id": 648164503, "node_id": "MDU6SXNzdWU2NDgxNjQ1MDM=", "number": 326, "title": "Disable heartbeats log", "user": {"login": "Llandy3d", "id": 16627175, "node_id": "MDQ6VXNlcjE2NjI3MTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/16627175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Llandy3d", "html_url": "https://github.com/Llandy3d", "followers_url": "https://api.github.com/users/Llandy3d/followers", "following_url": "https://api.github.com/users/Llandy3d/following{/other_user}", "gists_url": "https://api.github.com/users/Llandy3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/Llandy3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Llandy3d/subscriptions", "organizations_url": "https://api.github.com/users/Llandy3d/orgs", "repos_url": "https://api.github.com/users/Llandy3d/repos", "events_url": "https://api.github.com/users/Llandy3d/events{/privacy}", "received_events_url": "https://api.github.com/users/Llandy3d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-30T13:15:31Z", "updated_at": "2020-07-08T15:56:51Z", "closed_at": "2020-07-08T10:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "On version 2.0.0 debug logging for heartbeats was added, it does not seem to be possible to disable them.\r\nIs there something that can be done or is it a feature that could be added ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/323", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/323/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/323/events", "html_url": "https://github.com/celery/py-amqp/issues/323", "id": 627593847, "node_id": "MDU6SXNzdWU2Mjc1OTM4NDc=", "number": 323, "title": "Unicode error if \"long string\" type header property is not UTF-8 encoded", "user": {"login": "timburke", "id": 2424759, "node_id": "MDQ6VXNlcjI0MjQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2424759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timburke", "html_url": "https://github.com/timburke", "followers_url": "https://api.github.com/users/timburke/followers", "following_url": "https://api.github.com/users/timburke/following{/other_user}", "gists_url": "https://api.github.com/users/timburke/gists{/gist_id}", "starred_url": "https://api.github.com/users/timburke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timburke/subscriptions", "organizations_url": "https://api.github.com/users/timburke/orgs", "repos_url": "https://api.github.com/users/timburke/repos", "events_url": "https://api.github.com/users/timburke/events{/privacy}", "received_events_url": "https://api.github.com/users/timburke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-29T23:21:27Z", "updated_at": "2020-05-30T01:19:33Z", "closed_at": "2020-05-30T01:19:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've run into what I believe is a bug in how py-amqp deserializes message headers.  In particular, `py-amqp` assumes that `long string` entries in a header `field table` will always be valid utf-8 whereas this is not required by the standard.\r\n\r\nThe problem is reliably reproduced when `py-amqp` receives messages that were originally published to rabbitmq over AMQP 1.0.  RabbitMQ stores the orginal AMQP 1.0 headers in an `x-amqp-1.0-properties` with type `long string` including the amqp 1.0 framing bytes, which make the string not valid utf-8.\r\n\r\n## Detailed Error Description\r\n\r\n- When `py-amqp` encounters a header of type `field_table`, it parses out all of the key,value pairs in the field table.\r\n    ```python\r\n    elif ftype == 'F':\r\n        tlen, = unpack_from('>I', buf, offset)\r\n        offset += 4\r\n        limit = offset + tlen\r\n        val = {}\r\n        while offset < limit:\r\n            keylen, = unpack_from('>B', buf, offset)\r\n            offset += 1\r\n            key = pstr_t(buf[offset:offset + keylen])\r\n            offset += keylen\r\n            val[key], offset = _read_item(buf, offset)\r\n    ```\r\n\r\n     Reference: https://github.com/celery/py-amqp/blob/master/amqp/serialization.py#L117\r\n\r\n- This code passes the value to `_read_item` to deserialize.  `_read_item` again looks at the type of the value and deserializes it accordingly.  If the type is `S` (long string), then `_read_item` deserializes it using:\r\n   ```python\r\n    # 'S': long string\r\n    if ftype == 'S':\r\n        slen, = unpack_from('>I', buf, offset)\r\n        offset += 4\r\n        val = pstr_t(buf[offset:offset + slen])\r\n        offset += slen\r\n    ```\r\n\r\n    Reference: https://github.com/celery/py-amqp/blob/master/amqp/serialization.py#L45\r\n\r\n- `pstr_t` calls `bytes_to_str`, which deserializes by using:\r\n\r\n   ```python\r\n   if isinstance(s, bytes):\r\n        return s.decode('utf-8', 'surrogatepass')\r\n   ```\r\n\r\n   Reference: https://github.com/celery/py-amqp/blob/5f034578c9a85d54f4b4cb9709a9afb5306b3c30/amqp/utils.py#L77\r\n\r\n- If the value is not a valid UTF-8 string, then this fails and raises a `UnicodeDecodeError` and the connection is broken from then on (since `py-amqp` can never get past this message).\r\n\r\nSo, the issue is the `py-amqp` will fail if it receives a message that has a header property with a `long string` value that is not valid utf-8.  I checked in the AMQP 0.9.1 spec and it is allowed for `long string` types to contain arbitrary bytes.  See page 35 of the AMQP 0.9.1 spec [linked here](https://www.rabbitmq.com/resources/specs/amqp0-9-1.pdf) for reference.  The relevant section is:\r\n![image](https://user-images.githubusercontent.com/2424759/83312479-436cf780-a1c7-11ea-8758-a394d1525f13.png)\r\n\r\n**Bottom Line:** `py-amqp` assumes that a long-string value inside a `field table` will be valid `UTF-8` whereas that is only required for short strings and long strings are allowed to have arbitrary data.\r\n\r\n### Impact\r\n\r\n`py-amqp` generally fails when processing messages that were originally published via amqp 1.0 if there are any properties set in the original message (such as `message-id`) since the amqp 1.0 framing bytes will make the value not valid utf-8 even if it were originally a utf-8 string.\r\n\r\n## Resolution\r\n\r\nIn order to maintain backwards compatibility with the current behavior that will turn properties into `str` objects, I propose catching the `UnicodeDecodeError` and returning bytes only if the header failed to decode as valid utf-8:\r\n\r\n```python\r\n   # inside _read_item()\r\n   # 'S': long string\r\n    if ftype == 'S':\r\n        slen, = unpack_from('>I', buf, offset)\r\n        offset += 4\r\n        try:\r\n            val = pstr_t(buf[offset:offset + slen])\r\n        except UnicodeDecodeError:\r\n            val = buf[offset:offset + slen]\r\n\r\n        offset += slen\r\n```\r\n\r\nI'll open a PR with this fix but am open to amending if there's a better way to handle this.  This was the minimal fix I could come up with that wouldn't break any application that previously worked expecting that `long strings` would be turned into `str` automatically.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/322", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/322/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/322/events", "html_url": "https://github.com/celery/py-amqp/issues/322", "id": 620797098, "node_id": "MDU6SXNzdWU2MjA3OTcwOTg=", "number": 322, "title": "consumer: Connection to broker lost. Trying to re-establish the connection...", "user": {"login": "girijesh97", "id": 19616698, "node_id": "MDQ6VXNlcjE5NjE2Njk4", "avatar_url": "https://avatars2.githubusercontent.com/u/19616698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girijesh97", "html_url": "https://github.com/girijesh97", "followers_url": "https://api.github.com/users/girijesh97/followers", "following_url": "https://api.github.com/users/girijesh97/following{/other_user}", "gists_url": "https://api.github.com/users/girijesh97/gists{/gist_id}", "starred_url": "https://api.github.com/users/girijesh97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girijesh97/subscriptions", "organizations_url": "https://api.github.com/users/girijesh97/orgs", "repos_url": "https://api.github.com/users/girijesh97/repos", "events_url": "https://api.github.com/users/girijesh97/events{/privacy}", "received_events_url": "https://api.github.com/users/girijesh97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T08:49:39Z", "updated_at": "2020-05-28T08:01:39Z", "closed_at": "2020-05-28T08:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am using celery with my Django Application and I am facing connection error while executing a task for a longer time (approximately 10-15 mins). Though the connection is not getting broken for a shorter process.  Error log \r\n\r\n```\r\n[2020-05-19 08:33:35,254: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/connection.py\", line 494, in channel\r\n    return self.channels[channel_id]\r\nKeyError: None\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/worker/consumer/consumer.py\", line 318, in start\r\n    blueprint.start(self)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/worker/consumer/mingle.py\", line 40, in start\r\n    self.sync(c)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/worker/consumer/mingle.py\", line 44, in sync\r\n    replies = self.send_hello(c)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/worker/consumer/mingle.py\", line 57, in send_hello\r\n    replies = inspect.hello(c.hostname, our_revoked._data) or {}\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/app/control.py\", line 154, in hello\r\n    return self._request('hello', from_node=from_node, revoked=revoked)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/app/control.py\", line 106, in _request\r\n    pattern=self.pattern, matcher=self.matcher,\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/celery/app/control.py\", line 480, in broadcast\r\n    limit, callback, channel=channel,\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/pidbox.py\", line 333, in _broadcast\r\n    chan = channel or self.connection.default_channel\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/connection.py\", line 870, in default_channel\r\n    self._default_channel = self.channel()\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/connection.py\", line 288, in channel\r\n    chan = self.transport.create_channel(self.connection)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/transport/pyamqp.py\", line 100, in create_channel\r\n    return connection.channel()\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/connection.py\", line 497, in channel\r\n    channel.open()\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/channel.py\", line 435, in open\r\n    spec.Channel.Open, 's', ('',), wait=spec.Channel.OpenOk,\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 68, in send_method\r\n    return self.wait(wait, returns_tuple=returns_tuple)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 88, in wait\r\n    self.connection.drain_events(timeout=timeout)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/connection.py\", line 505, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/connection.py\", line 511, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/method_framing.py\", line 79, in on_frame\r\n    callback(channel, msg.frame_method, msg.frame_args, msg)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/connection.py\", line 518, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 145, in dispatch_method\r\n    listener(*args)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/channel.py\", line 1615, in _on_basic_deliver\r\n    fun(msg)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/messaging.py\", line 624, in _receive_callback\r\n    return on_m(message) if on_m else self.receive(decoded, message)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/messaging.py\", line 590, in receive\r\n    [callback(body, message) for callback in callbacks]\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/messaging.py\", line 590, in <listcomp>\r\n    [callback(body, message) for callback in callbacks]\r\n  File \"/mnt/z/womble_backend/ml_app/TextAnalysis/tasks.py\", line 85, in handle_message\r\n    message.ack()\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/kombu/message.py\", line 126, in ack\r\n    self.channel.basic_ack(self.delivery_tag, multiple=multiple)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/channel.py\", line 1394, in basic_ack\r\n    spec.Basic.Ack, argsig, (delivery_tag, multiple),\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/abstract_channel.py\", line 59, in send_method\r\n    conn.frame_writer(1, self.channel_id, sig, args, content)\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/method_framing.py\", line 172, in write_frame\r\n    write(view[:offset])\r\n  File \"/home/ubuntu/.venv/textEnv/lib/python3.6/site-packages/amqp/transport.py\", line 284, in write\r\n    self._write(s)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\nAlthough connection is getting restablished. I tried various methods to resolve the issue as it has been mentioned in other issue on this repo like setting `broker_hearbeat = None`, `amqp_task_result_expires = 30000` and running celery by using \r\n`celery -A MyApp worker -l info --without-heartbeat` but nothing work out for me.\r\n\r\nI am stuck at this error for quite some time. Any help would be highly appreciated.\r\n\r\nThe version of the libraries I am using are as follows:\r\n\r\n```\r\namqp==2.5.2\r\ncelery==4.4.2\r\nDjango==1.11.26\r\nkombu==4.6.8\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/320", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/320/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/320/events", "html_url": "https://github.com/celery/py-amqp/issues/320", "id": 615311928, "node_id": "MDU6SXNzdWU2MTUzMTE5Mjg=", "number": 320, "title": "Framing errors on windows when using timeout due to BlockingIOError not handled right", "user": {"login": "timburke", "id": 2424759, "node_id": "MDQ6VXNlcjI0MjQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2424759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timburke", "html_url": "https://github.com/timburke", "followers_url": "https://api.github.com/users/timburke/followers", "following_url": "https://api.github.com/users/timburke/following{/other_user}", "gists_url": "https://api.github.com/users/timburke/gists{/gist_id}", "starred_url": "https://api.github.com/users/timburke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timburke/subscriptions", "organizations_url": "https://api.github.com/users/timburke/orgs", "repos_url": "https://api.github.com/users/timburke/repos", "events_url": "https://api.github.com/users/timburke/events{/privacy}", "received_events_url": "https://api.github.com/users/timburke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-10T04:08:36Z", "updated_at": "2020-05-24T02:24:58Z", "closed_at": "2020-05-24T02:24:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### High Level Summary\r\n\r\nI've been tracking down an issue where using both the latest released stable and current `master` versions of `py-amqp` sometimes resulted in framing errors or py-amqp losing synchronization with the stream of frames coming from rabbitmq, causing it to hang because it misread data inside a message as the length of the next message.  \r\n\r\nThe bottom line turned out to be that there's an unhandled edge case inside `_AbstractTransport.read_frame` when used with a timeout on the read.  It checks for certain timeout errors in order to requeue partially read data but misses some exceptions that can be raised (at least on Windows).\r\n\r\nI found that **sometimes** on Windows 10 at least, the `recv` call on a socket that is set with a timeout can raise `BlockingIOError`.  This does not cause data requeuing inside of `read_frame` which means that the next time someone calls `drain_events()` there will be 1 frame header (typically) chomped and the next frame will not be synchronized.\r\n\r\n### Details\r\n\r\nFrom the `read_frame` code:\r\n\r\n```python\r\n    def read_frame(self, unpack=unpack):\r\n        read = self._read\r\n        read_frame_buffer = EMPTY_BUFFER\r\n        try:\r\n            frame_header = read(7, True)\r\n            read_frame_buffer += frame_header\r\n            frame_type, channel, size = unpack('>BHI', frame_header)\r\n            # >I is an unsigned int, but the argument to sock.recv is signed,\r\n            # so we know the size can be at most 2 * SIGNED_INT_MAX\r\n            if size > SIGNED_INT_MAX:\r\n                part1 = read(SIGNED_INT_MAX)\r\n                part2 = read(size - SIGNED_INT_MAX)\r\n                payload = b''.join([part1, part2])\r\n            else:\r\n                payload = read(size)\r\n            read_frame_buffer += payload\r\n            ch = ord(read(1))\r\n        except socket.timeout:\r\n            self._read_buffer = read_frame_buffer + self._read_buffer\r\n            raise\r\n        except (OSError, IOError, SSLError, socket.error) as exc:  # <---- HERE IS THE PROBLEM\r\n            # Don't disconnect for ssl read time outs\r\n            # http://bugs.python.org/issue10272\r\n\r\n            if isinstance(exc, SSLError) and 'timed out' in str(exc):  # <--- SECOND LATENT PROBLEM\r\n                raise socket.timeout()\r\n            if get_errno(exc) not in _UNAVAIL:\r\n                self.connected = False\r\n            raise\r\n        if ch == 206:  # '\\xce'\r\n            return frame_type, channel, payload\r\n        else:\r\n            raise UnexpectedFrame(\r\n                'Received {0:#04x} while expecting 0xce'.format(ch))\r\n```\r\n\r\nNote how if a `socket.timeout` happens, there is an explicit re-queuing of the partially read data into `self._read_buffer`.  However when an `OSError` happens, this does not occur.  One of the potential `OSError` options is `BlockingIOError`, which appears to be raised in some circumstances on Windows at least.  See [BlockingIOError](https://docs.python.org/3/library/exceptions.html#BlockingIOError).  \r\n\r\nFrom the python docs though, it looks like `BlockingIOError` would be raised anytime `recv` returned `EAGAIN`, `EALREADY`, `EWOULDBLOCK` and `EINPROGRESS`.  So, this issue could potentially also affect linux and other OSes that can return `EWOULDBLOCK` from `recv` call.\r\n\r\nI have a bunch of detailed logs where I added in extra logging statements to verify that this is what was happening but I want to ask the question of if there's a reason for `BlockingIOError` to be handled differently or if I should just make a PR with a fix handling that case similar to how `socket.timeout` is handled.\r\n\r\nNote that there also seems to be the same bug when `SSLError` with `timed out` in the `str(exc)` happens that will also cause a loss of synchronization.\r\n\r\nThe actual flow of what happens is:\r\n\r\n1. `frame_header` is read (7 bytes) and added to `read_frame_buffer` with no error.\r\n2. The next `read(size)` times out with `BlockingIOError`. \r\n3. Since the error is not a `socket.timeout`, the `read_frame_buffer` is not added back to `self._read_buffer` so the 7 bytes are dropped and subsequent reads will be corrupted.\r\n4. However, it looks like `having_timeout` does translate `BlockingIOError` back into a `socket.timeout` so calling code does not know the difference and the error silently causes data corruption until the connection finally dies due to an eventual framing error.\r\n\r\nLooking at the `having_timeout` code, it looks like if `EWOULDBLOCK` is raised by a `recv` then this will be translated to `BlockingIOError` and then translated back to `socket.timeout` `having_timeout` but bypassing the logic to requeue the partially read data.\r\n\r\nI'll open a PR with a fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/312", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/312/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/312/events", "html_url": "https://github.com/celery/py-amqp/issues/312", "id": 591645238, "node_id": "MDU6SXNzdWU1OTE2NDUyMzg=", "number": 312, "title": "ImportError: cannot import name 'ChannelError' from 'amqp'", "user": {"login": "acodercat", "id": 16076835, "node_id": "MDQ6VXNlcjE2MDc2ODM1", "avatar_url": "https://avatars3.githubusercontent.com/u/16076835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acodercat", "html_url": "https://github.com/acodercat", "followers_url": "https://api.github.com/users/acodercat/followers", "following_url": "https://api.github.com/users/acodercat/following{/other_user}", "gists_url": "https://api.github.com/users/acodercat/gists{/gist_id}", "starred_url": "https://api.github.com/users/acodercat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acodercat/subscriptions", "organizations_url": "https://api.github.com/users/acodercat/orgs", "repos_url": "https://api.github.com/users/acodercat/repos", "events_url": "https://api.github.com/users/acodercat/events{/privacy}", "received_events_url": "https://api.github.com/users/acodercat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-01T05:49:38Z", "updated_at": "2020-04-01T06:13:26Z", "closed_at": "2020-04-01T06:13:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "ImportError: cannot import name 'ChannelError' from 'amqp'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/307", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/307/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/307/events", "html_url": "https://github.com/celery/py-amqp/issues/307", "id": 558141869, "node_id": "MDU6SXNzdWU1NTgxNDE4Njk=", "number": 307, "title": "amqp.Message(timestamp:datetime)?", "user": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T13:46:57Z", "updated_at": "2020-03-26T12:46:12Z", "closed_at": "2020-03-26T12:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for the `timestamp` parameter of `amqp.Message`says it has to be of the type ` datetime.datetime`, see https://github.com/celery/py-amqp/blob/78ce51d5b4274fb2005b26f9d3e0bb4775b4d041/amqp/basic_message.py#L58-L59\r\n\r\nWhen actually using a `datetime` here I get `error: cannot convert argument to integer` in https://github.com/celery/py-amqp/blob/78ce51d5b4274fb2005b26f9d3e0bb4775b4d041/amqp/serialization.py#L297\r\n\r\nIt seems that `dumps` expects `timestamp` to be go type `long long`.\r\n(`amqplib` was converting `timestamp` via `time.mktime(val.timetuple())` to an int value.\r\n\r\nIs my usage resp. understanding wrong or the documentation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/306", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/306/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/306/events", "html_url": "https://github.com/celery/py-amqp/issues/306", "id": 557373565, "node_id": "MDU6SXNzdWU1NTczNzM1NjU=", "number": 306, "title": "apply async of the first task takes a long time", "user": {"login": "ericman93", "id": 5768348, "node_id": "MDQ6VXNlcjU3NjgzNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericman93", "html_url": "https://github.com/ericman93", "followers_url": "https://api.github.com/users/ericman93/followers", "following_url": "https://api.github.com/users/ericman93/following{/other_user}", "gists_url": "https://api.github.com/users/ericman93/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericman93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericman93/subscriptions", "organizations_url": "https://api.github.com/users/ericman93/orgs", "repos_url": "https://api.github.com/users/ericman93/repos", "events_url": "https://api.github.com/users/ericman93/events{/privacy}", "received_events_url": "https://api.github.com/users/ericman93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-30T09:40:46Z", "updated_at": "2020-01-30T13:19:28Z", "closed_at": "2020-01-30T13:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run a big plan via apply async\r\n```\r\neric.celery.core.print_message('START!') | %(dummy([print_message('Starting subtask A'), eric.celery.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask A')]) | %(dummy([print_message('Starting Subtask B'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask B'), eric.tasks.subtask_b('ad56c520f9a74173ad3e6446f19712b8', '458db63427bd48e98f9b3d27204589a9', 2, '946f464babca43de8bc03e5c1202f813')]) | %(dummy([print_message('Starting Subtask C'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask C'), eric.tasks.subtask_c('ad56c520f9a74173ad3e6446f19712b8', 'C')]) | print_message('Starting next session') | %(dummy([%(dummy([print_message('Starting subtask D-I'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask D'), eric.tasks.subtask_d('974fb9cb12e04a3a856c4438b5bb33b7')]) | %dummy([print_message('Starting Subtask D-I'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask E'), eric.tasks.subtask_e('aa107a89e6d84aa1999269725f5a6b11', 2), eric.tasks.subtask_e('ce2d6f8dc6494222979b00582f75a0eb', 2), eric.tasks.subtask_e('35d2c5f0d04a4c7cb48751ddec3e469d', 2), eric.tasks.subtask_e('410318c5579046cdbf009be243e4596c', 2)])), %(dummy([print_message('Starting subtask D-II'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask D'), eric.tasks.subtask_d('0cd1a4cd01774644aa9ee8cc1fbac834')]) | %dummy([print_message('Starting Subtask E-II'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask E'), eric.tasks.subtask_e('c6d0947ac9214d68a1b3ef889a2fe2b2', 2), eric.tasks.subtask_e('81a7e39833e54fdcba9dbe0590354954', 2), eric.tasks.subtask_e('38f80253760c4f8d8747e667dfc90914', 2), eric.tasks.subtask_e('5249d50e4c0342e8abe3d343f9998361', 2)]))]) | %(dummy([print_message('Staring subtask F'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask F'), eric.tasks.subtask_f('ad56c520f9a74173ad3e6446f19712b8')]) | %(dummy([print_message('Starting subtask G'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Subtask G'), eric.tasks.subtask_g_1('ad56c520f9a74173ad3e6446f19712b8'), eric.tasks.subtask_g_2('ad56c520f9a74173ad3e6446f19712b8')]) | %dummy([print_message('Final sub task'), eric.tasks.change_project_status_task('ad56c520f9a74173ad3e6446f19712b8', 'Complete'), eric.tasks.finish_1('ad56c520f9a74173ad3e6446f19712b8'), eric.tasks.finish_2('ad56c520f9a74173ad3e6446f19712b8')])))))))\r\n```\r\nThe problem is that even when my borker is redis, the first task is being sent to the amqp (celery base.py line 771)) and it get stuck for at least 20 seconds and after that nothing the task dosne't realy starts\r\n\r\nversion:\r\ncelery == 4.4.0\r\namqp == 2.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/304", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/304/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/304/events", "html_url": "https://github.com/celery/py-amqp/issues/304", "id": 555171094, "node_id": "MDU6SXNzdWU1NTUxNzEwOTQ=", "number": 304, "title": "Doesn't work with Python 3.7.4", "user": {"login": "shashidharrao", "id": 14035749, "node_id": "MDQ6VXNlcjE0MDM1NzQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/14035749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashidharrao", "html_url": "https://github.com/shashidharrao", "followers_url": "https://api.github.com/users/shashidharrao/followers", "following_url": "https://api.github.com/users/shashidharrao/following{/other_user}", "gists_url": "https://api.github.com/users/shashidharrao/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashidharrao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashidharrao/subscriptions", "organizations_url": "https://api.github.com/users/shashidharrao/orgs", "repos_url": "https://api.github.com/users/shashidharrao/repos", "events_url": "https://api.github.com/users/shashidharrao/events{/privacy}", "received_events_url": "https://api.github.com/users/shashidharrao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-26T03:12:12Z", "updated_at": "2020-01-29T10:11:15Z", "closed_at": "2020-01-29T10:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doesn't work with Python 3.7.4, \r\n\r\nDEBUG:boto:establishing HTTPS connection: host=s3.amazonaws.com, kwargs={'timeout': 70, 'port': 443}\r\nDEBUG:boto:Proxy connection: CONNECT s3.amazonaws.com:443 HTTP/1.0\r\n\r\nTraceback (most recent call last):\r\n  File \"./samlapi_formauth.py\", line 233, in <module>\r\n    buckets = s3conn.get_all_buckets()\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/s3/connection.py\", line 443, in get_all_buckets\r\n    response = self.make_request('GET', headers=headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/s3/connection.py\", line 671, in make_request\r\n    retry_handler=retry_handler\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/connection.py\", line 1071, in make_request\r\n    retry_handler=retry_handler)\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/connection.py\", line 913, in _mexe\r\n    self.is_secure)\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/connection.py\", line 705, in get_http_connection\r\n    return self.new_http_connection(host, port, is_secure)\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/connection.py\", line 747, in new_http_connection\r\n    connection = self.proxy_ssl(host, is_secure and 443 or 80)\r\n  File \"/usr/local/lib/python3.7/site-packages/boto/connection.py\", line 844, in proxy_ssl\r\n    sslSock = http_client.ssl.SSLSocket(sock)\r\n  File \"/usr/lib64/python3.7/ssl.py\", line 808, in __init__\r\n    f\"{self.__class__.__name__} does not have a public \"\r\nTypeError: SSLSocket does not have a public constructor. Instances are returned by SSLContext.wrap_socket().", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/302", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/302/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/302/events", "html_url": "https://github.com/celery/py-amqp/issues/302", "id": 549832811, "node_id": "MDU6SXNzdWU1NDk4MzI4MTE=", "number": 302, "title": "Configuring RabbitMQ Quorum queue for Celery", "user": {"login": "ljyca", "id": 13574964, "node_id": "MDQ6VXNlcjEzNTc0OTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/13574964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljyca", "html_url": "https://github.com/ljyca", "followers_url": "https://api.github.com/users/ljyca/followers", "following_url": "https://api.github.com/users/ljyca/following{/other_user}", "gists_url": "https://api.github.com/users/ljyca/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljyca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljyca/subscriptions", "organizations_url": "https://api.github.com/users/ljyca/orgs", "repos_url": "https://api.github.com/users/ljyca/repos", "events_url": "https://api.github.com/users/ljyca/events{/privacy}", "received_events_url": "https://api.github.com/users/ljyca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "matusvalo", "id": 827060, "node_id": "MDQ6VXNlcjgyNzA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/827060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matusvalo", "html_url": "https://github.com/matusvalo", "followers_url": "https://api.github.com/users/matusvalo/followers", "following_url": "https://api.github.com/users/matusvalo/following{/other_user}", "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions", "organizations_url": "https://api.github.com/users/matusvalo/orgs", "repos_url": "https://api.github.com/users/matusvalo/repos", "events_url": "https://api.github.com/users/matusvalo/events{/privacy}", "received_events_url": "https://api.github.com/users/matusvalo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matusvalo", "id": 827060, "node_id": "MDQ6VXNlcjgyNzA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/827060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matusvalo", "html_url": "https://github.com/matusvalo", "followers_url": "https://api.github.com/users/matusvalo/followers", "following_url": "https://api.github.com/users/matusvalo/following{/other_user}", "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions", "organizations_url": "https://api.github.com/users/matusvalo/orgs", "repos_url": "https://api.github.com/users/matusvalo/repos", "events_url": "https://api.github.com/users/matusvalo/events{/privacy}", "received_events_url": "https://api.github.com/users/matusvalo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-01-14T21:36:52Z", "updated_at": "2020-05-03T03:34:15Z", "closed_at": "2020-05-03T03:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added the following line to my test application to try to configure a quorum queue.\r\n---------------------------------------------------------------------------------------\r\napp.conf.task_queues = [\r\n    Queue('tasks', Exchange('tasks'), routing_key='tasks',\r\n          queue_arguments={'x-queue-type' :'quorum'}),\r\n]\r\n___________________________________________________\r\n\r\nAnd here are the errors that I have received.  As suggested by Ing. Josue Balandrano Coronel in the user group, I am creating a new issue in Github.  Thanks!\r\n\r\n[2020-01-14 09:47:25,752: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...\r\nTraceback (most recent call last):\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/celery/worker/consumer/consumer.py\", line 318, in start\r\n    blueprint.start(self)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/celery/worker/consumer/consumer.py\", line 596, in start\r\n    c.loop(*c.loop_args())\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/celery/worker/loops.py\", line 52, in asynloop\r\n    consumer.consume()\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/kombu/messaging.py\", line 477, in consume\r\n    self._basic_consume(T, no_ack=no_ack, nowait=False)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/kombu/messaging.py\", line 598, in _basic_consume\r\n    no_ack=no_ack, nowait=nowait)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/kombu/entity.py\", line 741, in consume\r\n    arguments=self.consumer_arguments)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/channel.py\", line 1567, in basic_consume\r\n    returns_tuple=True\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/abstract_channel.py\", line 68, in send_method\r\n    return self.wait(wait, returns_tuple=returns_tuple)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/abstract_channel.py\", line 88, in wait\r\n    self.connection.drain_events(timeout=timeout)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/connection.py\", line 505, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/connection.py\", line 511, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/method_framing.py\", line 55, in on_frame\r\n    callback(channel, method_sig, buf, None)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/connection.py\", line 518, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/abstract_channel.py\", line 145, in dispatch_method\r\n    listener(*args)\r\n  File \"/usr/local/share/venv/python37/lib/python3.7/site-packages/amqp/connection.py\", line 648, in _on_close\r\n    (class_id, method_id), ConnectionError)\r\namqp.exceptions.AMQPNotImplementedError: Basic.consume: (540) NOT_IMPLEMENTED - queue 'tasks' in vhost 'tasks' does not support global qos", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/298", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/298/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/298/events", "html_url": "https://github.com/celery/py-amqp/issues/298", "id": 533492378, "node_id": "MDU6SXNzdWU1MzM0OTIzNzg=", "number": 298, "title": "Tagged 2.5.1 release versioned as 2.5.0", "user": {"login": "aetimmes", "id": 3890916, "node_id": "MDQ6VXNlcjM4OTA5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3890916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aetimmes", "html_url": "https://github.com/aetimmes", "followers_url": "https://api.github.com/users/aetimmes/followers", "following_url": "https://api.github.com/users/aetimmes/following{/other_user}", "gists_url": "https://api.github.com/users/aetimmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/aetimmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aetimmes/subscriptions", "organizations_url": "https://api.github.com/users/aetimmes/orgs", "repos_url": "https://api.github.com/users/aetimmes/repos", "events_url": "https://api.github.com/users/aetimmes/events{/privacy}", "received_events_url": "https://api.github.com/users/aetimmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-05T17:30:05Z", "updated_at": "2019-12-05T18:19:16Z", "closed_at": "2019-12-05T18:19:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/celery/py-amqp/blob/84481db19bec9e82e4fdf19d49216c8bf3e7100d/amqp/__init__.py#L9 <-- should list 2.5.1 and not 2.5.0.\r\n\r\nThis causes 2.5.1 to install in the location of 2.5.0 when setup.py is run against it, which breaks dependencies for celery etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/290", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/290/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/290/events", "html_url": "https://github.com/celery/py-amqp/issues/290", "id": 496147790, "node_id": "MDU6SXNzdWU0OTYxNDc3OTA=", "number": 290, "title": "The consumption log of events is about 2 minutes later than the time of sending the log, but there is no queue backlog in the monitoring of rabbitmq, so we want to consume the message as soon as possible.", "user": {"login": "Ludasheng", "id": 41037283, "node_id": "MDQ6VXNlcjQxMDM3Mjgz", "avatar_url": "https://avatars3.githubusercontent.com/u/41037283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ludasheng", "html_url": "https://github.com/Ludasheng", "followers_url": "https://api.github.com/users/Ludasheng/followers", "following_url": "https://api.github.com/users/Ludasheng/following{/other_user}", "gists_url": "https://api.github.com/users/Ludasheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ludasheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ludasheng/subscriptions", "organizations_url": "https://api.github.com/users/Ludasheng/orgs", "repos_url": "https://api.github.com/users/Ludasheng/repos", "events_url": "https://api.github.com/users/Ludasheng/events{/privacy}", "received_events_url": "https://api.github.com/users/Ludasheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T05:07:20Z", "updated_at": "2019-09-22T14:16:53Z", "closed_at": "2019-09-20T05:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Record a survey of rabbitmq consumption problems:\r\n\r\nProblem: The consumption log of events is about 2 minutes behind the time of sending the log, but there is no queue backlog for monitoring rabbitmq\r\n\r\nQueuing: The queue is not backlogged, but the consumption is delayed. It is suspected that the consumer has taken the data to memory, so there is no backlog in the queue, but the time spent on consuming one is 2-3 seconds, so the order consumption in memory is delayed. The performance is the time spent on the log.\r\n\r\nExperiments: First stop queuing consumers, then producers produce 30 data, monitoring can see that the number of events to be consumed is 30, then start consumers, monitoring data instantly is 0, but the consumer log output lasts about 2 minutes. This phenomenon coincides with the conjecture that both consumers take data into memory and queue it in memory for processing.\r\n\r\nProcessing: Set the queue consumer to need manual ACK mode, and set the consumer's receiving window to one, which receives one, consumes one, responds one and then takes the next, so that queue monitoring can display the status of queue backlog in real time (no_ack=False, basic_qos(), basic_ack()).\r\n\r\nAdditional Note: In fact, tasks that can be processed asynchronously can generally tolerate a certain delay or do not require real-time, but the real-time nature of the business needs to be processed when the problem arises and each processing is time-consuming, so this problem will arise. Previous business does not require the event to enter immediately after the event. Consumption, so there is not much concern about whether consumption time is consistent with the backlog of queue monitoring.\r\n\r\nTo be confirmed: According to the previous phenomenon, the consumption delay is about 3 minutes, and each consumer has 2-3 seconds, that is, the number of queues in memory is about 60, while in the basic class constants of rabbitmq, there are the following configurations: so guess if the consumer does not need manual confirmation, and does not set the receiving window, silently. The number of windows is 60, but in view of the limited capacity, it can not be 100% confirmed, and we still look forward to God's advice.\r\n\r\n\r\nclass Basic:\r\n    \"\"\"AMQ Basic class.\"\"\"\r\n    CLASS_ID = 60\r\n    **Qos = (60, 10)**\r\n    QosOk = (60, 11)\r\n    Consume = (60, 20)\r\n    ConsumeOK = (60, 21)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/286", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/286/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/286/events", "html_url": "https://github.com/celery/py-amqp/issues/286", "id": 479703231, "node_id": "MDU6SXNzdWU0Nzk3MDMyMzE=", "number": 286, "title": "auto_delete flag for exchanges is deprecated since 2014", "user": {"login": "gilbsgilbs", "id": 3407667, "node_id": "MDQ6VXNlcjM0MDc2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilbsgilbs", "html_url": "https://github.com/gilbsgilbs", "followers_url": "https://api.github.com/users/gilbsgilbs/followers", "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}", "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions", "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs", "repos_url": "https://api.github.com/users/gilbsgilbs/repos", "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}", "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-12T15:15:37Z", "updated_at": "2019-08-13T10:53:14Z", "closed_at": "2019-08-13T10:53:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nSince 2014, setting the `auto_delete` flag for exchanges outputs the following warning:\r\n\r\n> VDeprecationWarning: The auto_delete flag for exchanges has been deprecated and will be removed from py-amqp v1.5.0.\r\n\r\nCurrent py-amqp version is v2.4.2 and `auto_delete` flag for exchanges is still there.\r\n\r\nWhat is the rationale behind this deprecation? [This comment](https://github.com/celery/kombu/issues/296#issuecomment-32184244) from @ask seems to indicate that it was deprecated within amqp itself a while ago, but I'm unable to find any evidence of that (see [spec](https://www.rabbitmq.com/amqp-0-9-1-reference.html#exchange.declare.auto-delete)) and it was never dropped from RabbitMQ as far as I know.\r\n\r\nIf it was actually never deprecated or if it was undeprecated from amqp, is it possible to remove the warning? If it is indeed deprecated from amqp, is it possible to mention it in the deprecation message (with a source) and provide an alternative solution in docs or somewhere? Or just remove the flag (the warning has been there for long enough IMO).\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/284", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/284/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/284/events", "html_url": "https://github.com/celery/py-amqp/issues/284", "id": 479359777, "node_id": "MDU6SXNzdWU0NzkzNTk3Nzc=", "number": 284, "title": "amqp didn't send whole message to rabbitmq", "user": {"login": "dingzhengkai", "id": 7904001, "node_id": "MDQ6VXNlcjc5MDQwMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7904001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingzhengkai", "html_url": "https://github.com/dingzhengkai", "followers_url": "https://api.github.com/users/dingzhengkai/followers", "following_url": "https://api.github.com/users/dingzhengkai/following{/other_user}", "gists_url": "https://api.github.com/users/dingzhengkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingzhengkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingzhengkai/subscriptions", "organizations_url": "https://api.github.com/users/dingzhengkai/orgs", "repos_url": "https://api.github.com/users/dingzhengkai/repos", "events_url": "https://api.github.com/users/dingzhengkai/events{/privacy}", "received_events_url": "https://api.github.com/users/dingzhengkai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}, {"id": 9999391, "node_id": "MDU6TGFiZWw5OTk5Mzkx", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Invalid", "name": "Status: Invalid", "color": "e6e6e6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-11T11:29:23Z", "updated_at": "2019-08-14T06:14:33Z", "closed_at": "2019-08-13T15:50:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, anyone can help to figure out what's wrong to my situation? And how to send long msg to rabbitmq?\r\n\r\nI use the following code to publish the msg, about 1500 char, but rabbitmq didn't receive the whole msg, when i upgrade amqp to 2.5.0, the problem was solved. \r\n\r\nMy environment:\r\n```\r\nPython 3.6.7 :: Anaconda custom (64-bit)\r\nOS \"Ubuntu 18.04.3 LTS\"\r\namqp==2.2.1\r\n```\r\nMy code:\r\n```\r\nchannel.basic_publish(amqp.Message(body=msg, content_encoding='utf-8',\r\n                 message_id=\"o0o0o0\",\r\n                 expiration='15000',\r\n                 app_id='java',\r\n                 delivery_mode=1,\r\n                 application_headers={\r\n                     'actionid': actionid,\r\n                     'sessionid': actionid,\r\n                     'messagetype': 'xxx'\r\n                 }\r\n                 ),\r\n    exchange='ex_service_router', routing_key='xx')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/278", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/278/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/278/events", "html_url": "https://github.com/celery/py-amqp/issues/278", "id": 451601641, "node_id": "MDU6SXNzdWU0NTE2MDE2NDE=", "number": 278, "title": "Integration tests are failing", "user": {"login": "moggers87", "id": 1490673, "node_id": "MDQ6VXNlcjE0OTA2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1490673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moggers87", "html_url": "https://github.com/moggers87", "followers_url": "https://api.github.com/users/moggers87/followers", "following_url": "https://api.github.com/users/moggers87/following{/other_user}", "gists_url": "https://api.github.com/users/moggers87/gists{/gist_id}", "starred_url": "https://api.github.com/users/moggers87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moggers87/subscriptions", "organizations_url": "https://api.github.com/users/moggers87/orgs", "repos_url": "https://api.github.com/users/moggers87/repos", "events_url": "https://api.github.com/users/moggers87/events{/privacy}", "received_events_url": "https://api.github.com/users/moggers87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285405, "node_id": "MDU6TGFiZWw0MDUyODU0MDU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Packaging%20and%20Release%20Management", "name": "Category: Packaging and Release Management", "color": "0052cc", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-03T17:28:59Z", "updated_at": "2019-06-10T15:26:31Z", "closed_at": "2019-06-10T15:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://travis-ci.org/celery/py-amqp/builds\r\n\r\nIt appears to have been since 3f6818708987a69ca32a209ad50e205943ecaae5, though I don't see how that would break anything; alpha releases aren't normally installed, so nothing really changed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/275", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/275/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/275/events", "html_url": "https://github.com/celery/py-amqp/issues/275", "id": 444417900, "node_id": "MDU6SXNzdWU0NDQ0MTc5MDA=", "number": 275, "title": "Version 2.4.X and Vine with Python2.7 support", "user": {"login": "belug23", "id": 1516034, "node_id": "MDQ6VXNlcjE1MTYwMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1516034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belug23", "html_url": "https://github.com/belug23", "followers_url": "https://api.github.com/users/belug23/followers", "following_url": "https://api.github.com/users/belug23/following{/other_user}", "gists_url": "https://api.github.com/users/belug23/gists{/gist_id}", "starred_url": "https://api.github.com/users/belug23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belug23/subscriptions", "organizations_url": "https://api.github.com/users/belug23/orgs", "repos_url": "https://api.github.com/users/belug23/repos", "events_url": "https://api.github.com/users/belug23/events{/privacy}", "received_events_url": "https://api.github.com/users/belug23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}, {"id": 9999391, "node_id": "MDU6TGFiZWw5OTk5Mzkx", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Invalid", "name": "Status: Invalid", "color": "e6e6e6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-15T12:46:01Z", "updated_at": "2019-06-10T15:24:48Z", "closed_at": "2019-06-10T15:24:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "While installing amqp 2.4.2 in a python 2.7 environnement, we got an incompatibility error, the way the requirements are done, amqp installs vine 5.0.0a1 which doesn't support python2.7 anymore.\r\n\r\nSee https://github.com/celery/py-amqp/blob/v2.4.2/requirements/default.txt#L1\r\n\r\nThe correction definition would be something like `vine>=1.1.3,<5.0.0` and the package would still support 2.7.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/274", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/274/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/274/events", "html_url": "https://github.com/celery/py-amqp/issues/274", "id": 433474252, "node_id": "MDU6SXNzdWU0MzM0NzQyNTI=", "number": 274, "title": "is librabbitmq recommended?", "user": {"login": "davidszotten", "id": 412005, "node_id": "MDQ6VXNlcjQxMjAwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/412005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidszotten", "html_url": "https://github.com/davidszotten", "followers_url": "https://api.github.com/users/davidszotten/followers", "following_url": "https://api.github.com/users/davidszotten/following{/other_user}", "gists_url": "https://api.github.com/users/davidszotten/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidszotten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidszotten/subscriptions", "organizations_url": "https://api.github.com/users/davidszotten/orgs", "repos_url": "https://api.github.com/users/davidszotten/repos", "events_url": "https://api.github.com/users/davidszotten/events{/privacy}", "received_events_url": "https://api.github.com/users/davidszotten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-15T20:55:12Z", "updated_at": "2019-04-16T04:52:42Z", "closed_at": "2019-04-16T04:52:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe readme states\r\n> [...] used by kombu as a pure python alternative when librabbitmq is not available.\r\n\r\nHowever, librabbitmq has much less activity than py-amqp, and responses to several issues there seem to recommend this instead. \r\n\r\nWhich is the recommended library to use? If py-amqp, does the readme need updating? \r\n\r\nThanks for a great suite of tools!\r\n\r\nD", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/273", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/273/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/273/events", "html_url": "https://github.com/celery/py-amqp/issues/273", "id": 429134116, "node_id": "MDU6SXNzdWU0MjkxMzQxMTY=", "number": 273, "title": "Missing TCP_MAXSEG TCP option on IBM i platform (transport.py in AMQP)", "user": {"login": "tracym1964", "id": 24413318, "node_id": "MDQ6VXNlcjI0NDEzMzE4", "avatar_url": "https://avatars2.githubusercontent.com/u/24413318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tracym1964", "html_url": "https://github.com/tracym1964", "followers_url": "https://api.github.com/users/tracym1964/followers", "following_url": "https://api.github.com/users/tracym1964/following{/other_user}", "gists_url": "https://api.github.com/users/tracym1964/gists{/gist_id}", "starred_url": "https://api.github.com/users/tracym1964/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tracym1964/subscriptions", "organizations_url": "https://api.github.com/users/tracym1964/orgs", "repos_url": "https://api.github.com/users/tracym1964/repos", "events_url": "https://api.github.com/users/tracym1964/events{/privacy}", "received_events_url": "https://api.github.com/users/tracym1964/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285515, "node_id": "MDU6TGFiZWw0MDUyODU1MTU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Transport", "name": "Component: Transport", "color": "bfd4f2", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-03T19:11:46Z", "updated_at": "2019-04-04T13:31:50Z", "closed_at": "2019-04-04T13:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using amqp 2.4.2 and kombu 4.5.0 Python packages on an IBM i system (PASE environment) where the IBM i OS is 7.3.  My Python version is 3.6.8 using GCC for aix6 6.3.0.  I am receiving an invalid TCP socket option on line 215 in transport.py within amqp package.  This line is within the _get_tcp_socket_defaults() method.  The TCP option is TCP_MAXSEG which apparently does not exist on the IBM i implementation of the TCP/IP stack.  I removed TCP_MAXSEG from the list of KNOWN_TCP_OPTS defined in platform.py file in the same amqp package which provided a work-around for me.  Can you use a try/except block to catch the situation when this option is not available similar to what is already being done for the TCP_USER_TIMEOUT option?  I see that this option is available in Linux, bu\r\n![transport_py_problem](https://user-images.githubusercontent.com/24413318/55506155-5ebb9180-561a-11e9-977d-d890b5398dd1.png)\r\nt not on all platforms.  (My test program works fine without modification when testing from Fedora 28).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/270", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/270/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/270/events", "html_url": "https://github.com/celery/py-amqp/issues/270", "id": 424906044, "node_id": "MDU6SXNzdWU0MjQ5MDYwNDQ=", "number": 270, "title": "Add integration tests for our SSL transport", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285420, "node_id": "MDU6TGFiZWw0MDUyODU0MjA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Tests", "name": "Category: Tests", "color": "f9d0c4", "default": false, "description": null}, {"id": 405287751, "node_id": "MDU6TGFiZWw0MDUyODc3NTE=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20SSL", "name": "Component: SSL", "color": "0e8a16", "default": false, "description": null}, {"id": 9999390, "node_id": "MDU6TGFiZWw5OTk5Mzkw", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Enhancement", "name": "Issue Type: Enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-25T13:37:00Z", "updated_at": "2020-01-08T16:26:46Z", "closed_at": "2020-01-08T16:26:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently our integration tests do not verify our SSL support.\r\nThe container supports configuring SSL on the broker's side using environment variables.\r\nHowever, the tox-docker doesn't support mounting or copying files which means we don't have a way to mount the required certificates.\r\nWe should use [trustme](https://github.com/python-trio/trustme) to generate the certificates before running the tests and copy the files into the image.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/268", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/268/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/268/events", "html_url": "https://github.com/celery/py-amqp/issues/268", "id": 423140320, "node_id": "MDU6SXNzdWU0MjMxNDAzMjA=", "number": 268, "title": "Missing git tag for 2.4.2 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-20T09:09:42Z", "updated_at": "2019-03-20T13:51:37Z", "closed_at": "2019-03-20T13:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/263", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/263/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/263/events", "html_url": "https://github.com/celery/py-amqp/issues/263", "id": 418150572, "node_id": "MDU6SXNzdWU0MTgxNTA1NzI=", "number": 263, "title": "OSError: Server unexpectedly closed connection on ActiveMQ", "user": {"login": "AbhimanyuHK", "id": 32696360, "node_id": "MDQ6VXNlcjMyNjk2MzYw", "avatar_url": "https://avatars2.githubusercontent.com/u/32696360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbhimanyuHK", "html_url": "https://github.com/AbhimanyuHK", "followers_url": "https://api.github.com/users/AbhimanyuHK/followers", "following_url": "https://api.github.com/users/AbhimanyuHK/following{/other_user}", "gists_url": "https://api.github.com/users/AbhimanyuHK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbhimanyuHK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbhimanyuHK/subscriptions", "organizations_url": "https://api.github.com/users/AbhimanyuHK/orgs", "repos_url": "https://api.github.com/users/AbhimanyuHK/repos", "events_url": "https://api.github.com/users/AbhimanyuHK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbhimanyuHK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-07T06:30:51Z", "updated_at": "2019-06-17T19:10:27Z", "closed_at": "2019-03-13T14:29:39Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "python : 3.7\r\nos : windows 10\r\nService : ActiveMQ\r\n\r\nSnippet\r\n```\r\nimport amqp\r\n\r\nUSER = \"guest\"\r\nPASSWORD = \"guest\"\r\nHOST = 'localhost'\r\nPORT = '5672'\r\n\r\nhost = HOST + \":\" + PORT\r\n\r\nconn = amqp.connection.Connection(host=host,userid=USER,password=PASSWORD,login_method='AMQPLAIN',ssl=True)\r\nconn.connect()\r\n```\r\n\r\nerror \r\n\r\n  ```\r\nFile \"C:\\Users\\abimanyu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\amqp\\connection.py\", line 313, in connect\r\n    self.drain_events(timeout=self.connect_timeout)\r\n  File \"C:\\Users\\abimanyu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\amqp\\connection.py\", line 500, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"C:\\Users\\abimanyu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\amqp\\connection.py\", line 505, in blocking_read\r\n    frame = self.transport.read_frame()\r\n  File \"C:\\Users\\abimanyu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\amqp\\transport.py\", line 266, in read_frame\r\n    payload = read(size)\r\n  File \"C:\\Users\\abimanyu\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\amqp\\transport.py\", line 395, in _read\r\n    raise IOError('Server unexpectedly closed connection')\r\nOSError: Server unexpectedly closed connection\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/252", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/252/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/252/events", "html_url": "https://github.com/celery/py-amqp/issues/252", "id": 404771087, "node_id": "MDU6SXNzdWU0MDQ3NzEwODc=", "number": 252, "title": "Publish raise socket.error: [Errno 10035] on Windows", "user": {"login": "maingoh", "id": 8860364, "node_id": "MDQ6VXNlcjg4NjAzNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8860364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maingoh", "html_url": "https://github.com/maingoh", "followers_url": "https://api.github.com/users/maingoh/followers", "following_url": "https://api.github.com/users/maingoh/following{/other_user}", "gists_url": "https://api.github.com/users/maingoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maingoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maingoh/subscriptions", "organizations_url": "https://api.github.com/users/maingoh/orgs", "repos_url": "https://api.github.com/users/maingoh/repos", "events_url": "https://api.github.com/users/maingoh/events{/privacy}", "received_events_url": "https://api.github.com/users/maingoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-30T13:29:40Z", "updated_at": "2019-02-04T06:02:37Z", "closed_at": "2019-02-04T06:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `kombu==4.2.2.post1` and `amqp==2.4.0`, doing a simple publish on windows raise:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_client.py\", line 13, in <module>\r\n    retry=False)\r\n  File \"C:\\Python27\\lib\\site-packages\\kombu\\messaging.py\", line 181, in publish\r\n    exchange_name, declare,\r\n  File \"C:\\Python27\\lib\\site-packages\\kombu\\messaging.py\", line 203, in _publish\r\n    mandatory=mandatory, immediate=immediate,\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\channel.py\", line 1758, in _basic_publish\r\n    self.connection.drain_events(timeout=0)\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\connection.py\", line 500, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\connection.py\", line 505, in blocking_read\r\n    frame = self.transport.read_frame()\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\transport.py\", line 250, in read_frame\r\n    frame_header = read(7, True)\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\transport.py\", line 430, in _read\r\n    s = recv(n - len(rbuf))\r\nsocket.error: [Errno 10035] A non-blocking socket operation could not be completed immediately\r\n```\r\n\r\nThis is working on Linux, also it is working when downgrading to `amqp==2.3.2`.\r\n\r\nThe code:\r\n```\r\nfrom kombu import Connection, Producer\r\n\r\nc = Connection(amqp_url)\r\nproducer = Producer(c)\r\nproducer.publish(body={'foo': 'bar'},\r\n                 exchange='',\r\n                 routing_key='my_routing_key',\r\n                 retry=False)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/249", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/249/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/249/events", "html_url": "https://github.com/celery/py-amqp/issues/249", "id": 403117263, "node_id": "MDU6SXNzdWU0MDMxMTcyNjM=", "number": 249, "title": "Increase code coverage in amqp/transport.py", "user": {"login": "aojea", "id": 6450081, "node_id": "MDQ6VXNlcjY0NTAwODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6450081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aojea", "html_url": "https://github.com/aojea", "followers_url": "https://api.github.com/users/aojea/followers", "following_url": "https://api.github.com/users/aojea/following{/other_user}", "gists_url": "https://api.github.com/users/aojea/gists{/gist_id}", "starred_url": "https://api.github.com/users/aojea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aojea/subscriptions", "organizations_url": "https://api.github.com/users/aojea/orgs", "repos_url": "https://api.github.com/users/aojea/repos", "events_url": "https://api.github.com/users/aojea/events{/privacy}", "received_events_url": "https://api.github.com/users/aojea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285420, "node_id": "MDU6TGFiZWw0MDUyODU0MjA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Tests", "name": "Category: Tests", "color": "f9d0c4", "default": false, "description": null}, {"id": 405285515, "node_id": "MDU6TGFiZWw0MDUyODU1MTU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Transport", "name": "Component: Transport", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-25T11:26:39Z", "updated_at": "2019-01-27T09:23:57Z", "closed_at": "2019-01-27T09:23:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Current code coverage in amqp/transport.py is lower than the rest of the code and there are several functions that don't have any coverage that's very risky\r\n\r\n```\r\nName                       Stmts   Miss Branch BrPart  Cover\r\n------------------------------------------------------------\r\namqp/__init__.py              20      0      0      0   100%\r\namqp/abstract_channel.py      89      0     30      0   100%\r\namqp/basic_message.py         16      0      0      0   100%\r\namqp/channel.py              214      2     50      0    99%\r\namqp/connection.py           275      9     74      5    96%\r\namqp/exceptions.py            75      0      8      0   100%\r\namqp/method_framing.py        95      0     32      2    98%\r\namqp/platform.py              34      2     10      2    91%\r\namqp/protocol.py               4      0      0      0   100%\r\namqp/sasl.py                  90      4     16      1    93%\r\namqp/serialization.py        431      6    186      5    98%\r\namqp/spec.py                  81      0      0      0   100%\r\namqp/transport.py            280     34     94     12    84%\r\namqp/utils.py                 40      6      8      0    83%\r\n------------------------------------------------------------\r\nTOTAL                       1744     63    508     27    95%\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/243", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/243/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/243/events", "html_url": "https://github.com/celery/py-amqp/issues/243", "id": 399363744, "node_id": "MDU6SXNzdWUzOTkzNjM3NDQ=", "number": 243, "title": "KeyError: connection.blocked", "user": {"login": "tevansuk", "id": 4145171, "node_id": "MDQ6VXNlcjQxNDUxNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4145171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tevansuk", "html_url": "https://github.com/tevansuk", "followers_url": "https://api.github.com/users/tevansuk/followers", "following_url": "https://api.github.com/users/tevansuk/following{/other_user}", "gists_url": "https://api.github.com/users/tevansuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tevansuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tevansuk/subscriptions", "organizations_url": "https://api.github.com/users/tevansuk/orgs", "repos_url": "https://api.github.com/users/tevansuk/repos", "events_url": "https://api.github.com/users/tevansuk/events{/privacy}", "received_events_url": "https://api.github.com/users/tevansuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285478, "node_id": "MDU6TGFiZWw0MDUyODU0Nzg=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Channel", "name": "Component: Channel", "color": "fbca04", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-01-15T14:14:47Z", "updated_at": "2019-01-22T14:59:27Z", "closed_at": "2019-01-17T21:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all.\r\n\r\nAfter the release of 2.4.0, we get \"connection.blocked\" key errors. This seems to relate to:\r\n\r\nDrain events before publish data. (#214)  \u2026\r\nb0bc72f\r\n\r\nWe use:\r\n\r\ncelery 4.2.0\r\nkombu 4.2.2.post1\r\n\r\nThe server is RabbitMQ 3.1.5 (I suspect this is the issue).\r\n\r\nFalling back to amqp==2.3.2 fixes the problem for us.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/242", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/242/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/242/events", "html_url": "https://github.com/celery/py-amqp/issues/242", "id": 399273216, "node_id": "MDU6SXNzdWUzOTkyNzMyMTY=", "number": 242, "title": "Error SunOS, omnios 5.11, consumer: Cannot connect to amqp://****: [Errno 99] Option not supported by protocol.", "user": {"login": "jakvb", "id": 13105294, "node_id": "MDQ6VXNlcjEzMTA1Mjk0", "avatar_url": "https://avatars1.githubusercontent.com/u/13105294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakvb", "html_url": "https://github.com/jakvb", "followers_url": "https://api.github.com/users/jakvb/followers", "following_url": "https://api.github.com/users/jakvb/following{/other_user}", "gists_url": "https://api.github.com/users/jakvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakvb/subscriptions", "organizations_url": "https://api.github.com/users/jakvb/orgs", "repos_url": "https://api.github.com/users/jakvb/repos", "events_url": "https://api.github.com/users/jakvb/events{/privacy}", "received_events_url": "https://api.github.com/users/jakvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285515, "node_id": "MDU6TGFiZWw0MDUyODU1MTU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Transport", "name": "Component: Transport", "color": "bfd4f2", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-01-15T10:11:18Z", "updated_at": "2019-04-02T15:40:12Z", "closed_at": "2019-04-02T15:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "AMQP version 2.3.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/239", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/239/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/239/events", "html_url": "https://github.com/celery/py-amqp/issues/239", "id": 398883201, "node_id": "MDU6SXNzdWUzOTg4ODMyMDE=", "number": 239, "title": "basic_consume returns a tuple instead of a `consumer_tag`", "user": {"login": "xordoquy", "id": 2340654, "node_id": "MDQ6VXNlcjIzNDA2NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2340654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xordoquy", "html_url": "https://github.com/xordoquy", "followers_url": "https://api.github.com/users/xordoquy/followers", "following_url": "https://api.github.com/users/xordoquy/following{/other_user}", "gists_url": "https://api.github.com/users/xordoquy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xordoquy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xordoquy/subscriptions", "organizations_url": "https://api.github.com/users/xordoquy/orgs", "repos_url": "https://api.github.com/users/xordoquy/repos", "events_url": "https://api.github.com/users/xordoquy/events{/privacy}", "received_events_url": "https://api.github.com/users/xordoquy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-14T13:14:56Z", "updated_at": "2019-01-21T09:18:15Z", "closed_at": "2019-01-15T05:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSince 2.4, I notice the call to `basic_consume` without `consumer_tag` nor `nowait` now returns a tuple with a `consumer_tag` instead of the `consumer_tag` itself as was the case in the previous release.\r\nIt is not clear to me whether it's intended or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/237", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/237/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/237/events", "html_url": "https://github.com/celery/py-amqp/issues/237", "id": 398795415, "node_id": "MDU6SXNzdWUzOTg3OTU0MTU=", "number": 237, "title": "Build broken for 2.4.0", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-14T08:56:16Z", "updated_at": "2019-01-14T21:14:39Z", "closed_at": "2019-01-14T21:14:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seems like the integration tests are flaky.\r\n@matusvalo since you contributed them do you mind taking a look?\r\nSee https://travis-ci.org/celery/py-amqp/jobs/479015397", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/232", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/232/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/232/events", "html_url": "https://github.com/celery/py-amqp/issues/232", "id": 394838180, "node_id": "MDU6SXNzdWUzOTQ4MzgxODA=", "number": 232, "title": "channel.queue_declare raises TypeError", "user": {"login": "matusvalo", "id": 827060, "node_id": "MDQ6VXNlcjgyNzA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/827060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matusvalo", "html_url": "https://github.com/matusvalo", "followers_url": "https://api.github.com/users/matusvalo/followers", "following_url": "https://api.github.com/users/matusvalo/following{/other_user}", "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions", "organizations_url": "https://api.github.com/users/matusvalo/orgs", "repos_url": "https://api.github.com/users/matusvalo/repos", "events_url": "https://api.github.com/users/matusvalo/events{/privacy}", "received_events_url": "https://api.github.com/users/matusvalo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}, {"id": 405286277, "node_id": "MDU6TGFiZWw0MDUyODYyNzc=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Priority:%20Blocker", "name": "Priority: Blocker", "color": "d93f0b", "default": false, "description": null}, {"id": 405286590, "node_id": "MDU6TGFiZWw0MDUyODY1OTA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Severity:%20Blocker", "name": "Severity: Blocker", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-30T01:28:48Z", "updated_at": "2019-01-18T21:23:18Z", "closed_at": "2018-12-31T10:14:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #208 Introduces calls callbacks of wait with new parameter (`method`). This new parameter is returned via `wait()` method which breaks some code which does not expect this new parameter to be returned by `wait()` method.\r\n\r\nExample broken script:\r\n\r\n```python\r\nimport amqp\r\nconn = amqp.Connection()\r\nconn.connect()\r\nch = conn.channel()\r\nch.queue_declare('foo')\r\n```\r\nThis script crash with exception:\r\n```\r\nTypeError: __new__() takes 4 positional arguments but 5 were given\r\n```\r\nThe easy hot fix is as follows in `AbstractChannel::wait`\r\n```python\r\n            if p.value:\r\n                args, kwargs = p.value\r\n                args = args[1:]   # don`t return method parameter\r\n                return args if returns_tuple else (args and args[0])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/219", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/219/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/219/events", "html_url": "https://github.com/celery/py-amqp/issues/219", "id": 380549805, "node_id": "MDU6SXNzdWUzODA1NDk4MDU=", "number": 219, "title": "Release Version 2.4 ", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-11-14T06:07:14Z", "updated_at": "2019-01-13T13:27:08Z", "closed_at": "2019-01-13T13:27:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/267", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/267/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/267/events", "html_url": "https://github.com/celery/py-amqp/issues/267", "id": 422341589, "node_id": "MDU6SXNzdWU0MjIzNDE1ODk=", "number": 267, "title": "pyamqp transport is not thread-safe", "user": {"login": "jimbobhickville", "id": 230385, "node_id": "MDQ6VXNlcjIzMDM4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/230385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimbobhickville", "html_url": "https://github.com/jimbobhickville", "followers_url": "https://api.github.com/users/jimbobhickville/followers", "following_url": "https://api.github.com/users/jimbobhickville/following{/other_user}", "gists_url": "https://api.github.com/users/jimbobhickville/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimbobhickville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimbobhickville/subscriptions", "organizations_url": "https://api.github.com/users/jimbobhickville/orgs", "repos_url": "https://api.github.com/users/jimbobhickville/repos", "events_url": "https://api.github.com/users/jimbobhickville/events{/privacy}", "received_events_url": "https://api.github.com/users/jimbobhickville/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285478, "node_id": "MDU6TGFiZWw0MDUyODU0Nzg=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Channel", "name": "Component: Channel", "color": "fbca04", "default": false, "description": null}, {"id": 405285960, "node_id": "MDU6TGFiZWw0MDUyODU5NjA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Feature%20Request", "name": "Issue Type: Feature Request", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-10-10T17:02:29Z", "updated_at": "2019-08-28T18:08:48Z", "closed_at": "2019-08-28T18:08:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When talking to rabbitmq, you need to use a different channel_id per thread. The pyamp transport does not do this and always reuses channel_id 1 for all threads within a process. This results in a lot of silent failures where no exceptions are raised, but messages fail to be published or consumed.\r\n\r\nI have locally monkey-patched the Channel object to force a unique channel id per active thread, and it seems to solve the problem I was running into without causing any issues:\r\n\r\n```\r\nimport threading\r\nfrom kombu.transport import pyamqp\r\n\r\n\r\nclass ThreadSafeChannel(pyamqp.Channel):\r\n    def __init__(self, connection, channel_id=None, **kwargs):\r\n        if channel_id is None and threading.current_thread() != threading.main_thread():\r\n            # force it to get a unique channel_id per thread\r\n            channel_id = threading.get_ident() % connection.channel_max\r\n        super().__init__(connection, channel_id=channel_id, **kwargs)\r\n\r\n\r\ndef make_kombu_threadsafe():\r\n    pyamqp.Connection.Channel = ThreadSafeChannel\r\n```\r\n\r\nI'm happy to port that to kombu proper and submit a PR, but thought I'd make sure that such a change would be welcome before I spend the effort doing so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/209", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/209/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/209/events", "html_url": "https://github.com/celery/py-amqp/issues/209", "id": 367314532, "node_id": "MDU6SXNzdWUzNjczMTQ1MzI=", "number": 209, "title": "Connection.connect, Connection.close don't close socket on exception", "user": {"login": "tomc797", "id": 34632752, "node_id": "MDQ6VXNlcjM0NjMyNzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/34632752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomc797", "html_url": "https://github.com/tomc797", "followers_url": "https://api.github.com/users/tomc797/followers", "following_url": "https://api.github.com/users/tomc797/following{/other_user}", "gists_url": "https://api.github.com/users/tomc797/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomc797/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomc797/subscriptions", "organizations_url": "https://api.github.com/users/tomc797/orgs", "repos_url": "https://api.github.com/users/tomc797/repos", "events_url": "https://api.github.com/users/tomc797/events{/privacy}", "received_events_url": "https://api.github.com/users/tomc797/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-05T18:10:05Z", "updated_at": "2018-10-12T06:09:55Z", "closed_at": "2018-10-12T06:09:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've encountered this issue for ampq 2.3.2 and python 3.6.6.\r\n\r\nIf there is a network error or if the remote peer unexpectedly closes the stream, the underlying socket in Connection.transport remains open when exceptions are encountered in Connection.connect and Connection.close. I would expect the socket to be closed and resources released in these instances. As an example, start netcat (depending on the version of netcat, argument `-N` may not be needed)\r\n```bash\r\n$ echo | nc -N -l -p 8999\r\n```\r\nand execute\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport amqp\r\nimport logging\r\nimport socket\r\nimport ssl\r\n\r\ntry:\r\n  connection = amqp.Connection ('localhost:8999')\r\n  with connection:\r\n    input ('Hit enter')\r\nexcept (socket.error, ssl.SSLError) as e:\r\n  logging.exception (e)\r\nprint (connection.transport.sock)\r\n```\r\nwill result in the following error and trace\r\n```\r\nERROR:root:Socket closed\r\nTraceback (most recent call last):\r\n  File \"./testcase.py\", line 10, in <module>\r\n    with connection:\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 270, in __enter__\r\n    self.connect()\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 308, in connect\r\n    self.drain_events(timeout=self.connect_timeout)\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 491, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 496, in blocking_read\r\n    frame = self.transport.read_frame()\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/transport.py\", line 243, in read_frame\r\n    frame_header = read(7, True)\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/transport.py\", line 426, in _read\r\n    raise IOError('Socket closed')\r\nOSError: Socket closed\r\n<socket.socket fd=3, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 36314), raddr=('127.0.0.1', 8999)>\r\n```\r\nNote that fd=3 remains up. A similar situation occurs for Connection.close if the rabbitmq server unexpectedly goes away (`killall --user rabbitmq`)\r\n```Hit enter        \r\nERROR:root:[Errno 104] Connection reset by peer\r\nTraceback (most recent call last):\r\n  File \"./testcase.py\", line 11, in <module>\r\n    input (\"Hit enter\")\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 274, in __exit__\r\n    self.close()\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/connection.py\", line 565, in close\r\n    wait=spec.Connection.CloseOk,\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/abstract_channel.py\", line 50, in send_method\r\n    conn.frame_writer(1, self.channel_id, sig, args, content)\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/method_framing.py\", line 166, in write_frame\r\n    write(view[:offset])\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/transport.py\", line 275, in write\r\n    self._write(s)\r\n  File \"/usr/local/lib/python3.6/dist-packages/amqp/transport.py\", line 386, in _write\r\n    n = write(s)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 888, in write\r\n    return self._sslobj.write(data)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 642, in write\r\n    return self._sslobj.write(data)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n<ssl.SSLSocket fd=3, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 46248)>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/207", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/207/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/207/events", "html_url": "https://github.com/celery/py-amqp/issues/207", "id": 366242049, "node_id": "MDU6SXNzdWUzNjYyNDIwNDk=", "number": 207, "title": "py-amqp does not handle negative acknowledgements", "user": {"login": "matusvalo", "id": 827060, "node_id": "MDQ6VXNlcjgyNzA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/827060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matusvalo", "html_url": "https://github.com/matusvalo", "followers_url": "https://api.github.com/users/matusvalo/followers", "following_url": "https://api.github.com/users/matusvalo/following{/other_user}", "gists_url": "https://api.github.com/users/matusvalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/matusvalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matusvalo/subscriptions", "organizations_url": "https://api.github.com/users/matusvalo/orgs", "repos_url": "https://api.github.com/users/matusvalo/repos", "events_url": "https://api.github.com/users/matusvalo/events{/privacy}", "received_events_url": "https://api.github.com/users/matusvalo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-03T09:10:46Z", "updated_at": "2018-10-19T15:30:49Z", "closed_at": "2018-10-19T15:30:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In some corner cases RabbitMQ can sent `nack` to client instead of `ack`:\r\nhttps://www.rabbitmq.com/confirms.html#server-sent-nacks\r\nThis situation is not handled correctly by library and raises the following exception:\r\n```\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/kombu/messaging.py\", line 181, in publish\r\n    exchange_name, declare,\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/kombu/connection.py\", line 494, in _ensured\r\n    return fun(*args, **kwargs)\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/kombu/messaging.py\", line 203, in _publish\r\n    mandatory=mandatory, immediate=immediate,\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/channel.py\", line 1745, in basic_publish_confirm\r\n    self.wait(spec.Basic.Ack)\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 79, in wait\r\n    self.connection.drain_events(timeout=timeout)\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/connection.py\", line 471, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/connection.py\", line 477, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/method_framing.py\", line 55, in on_frame\r\n    callback(channel, method_sig, buf, None)\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/connection.py\", line 481, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/fdp/Python35_fdp/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 104, in dispatch_method\r\n    'Unknown AMQP method {0!r}'.format(method_sig))\r\namqp.exceptions.AMQPNotImplementedError: Unknown AMQP method (60, 120)\r\n```\r\nIt is difficult to reproduce this situation, but I was able to do it using the following scripts:\r\n* Mock AMQP Server:\r\n```python\r\nfrom struct import pack, pack_into\r\nfrom amqp.serialization import dumps\r\nimport socketserver\r\nimport socket\r\n\r\ndef ret_factory(method, channel=0, args=b'', arg_format=None):\r\n    if len(args) > 0:\r\n        args = dumps(arg_format, args)\r\n    else:\r\n        args = b''\r\n    frame_max = 131072\r\n    offset = 0\r\n    buf = bytearray(frame_max - 8)\r\n    view = memoryview(buf)\r\n    frame = (b''.join([pack('>HH', *method), args]))\r\n    framelen = len(frame)\r\n    pack_into('>BHI%dsB' % framelen, buf, offset,\r\n              1, channel, framelen, frame, 0xce)\r\n    offset += 8 + framelen\r\n    return view[:offset]\r\n\r\n\r\nclass MyTCPHandler(socketserver.BaseRequestHandler):\r\n    def handle(self):\r\n        while True:\r\n            print('--------')\r\n            self.data = self.request.recv(1024).strip()\r\n            # CONN OPEN\r\n            ret_data = ret_factory((10, 41))\r\n            print(ret_data)\r\n            self.request.sendall(ret_data)\r\n            # CH OPEN\r\n            ret_data = ret_factory((20, 11), channel=1)\r\n            print(ret_data)\r\n            self.request.sendall(ret_data)\r\n            # SELECT OK\r\n            ret_data = ret_factory((85, 11), channel=1)\r\n            print(ret_data)\r\n            self.request.sendall(ret_data)\r\n            # BASIC ACK/NACK\r\n            # ret_data = ret_factory((60, 80), channel=1, args=(1, False), arg_format='Lb') # ACK\r\n            ret_data = ret_factory((60, 120), channel=1, args=(1, False), arg_format='Lb')  # NACK\r\n            print(ret_data)\r\n            self.request.sendall(ret_data)\r\n            # CONN CLOSE\r\n            ret_data = ret_factory((10, 51))\r\n            print(ret_data)\r\n            self.request.sendall(ret_data)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    HOST, PORT = \"0.0.0.0\", 9999\r\n    server = socketserver.TCPServer((HOST, PORT), MyTCPHandler)\r\n    try:\r\n        server.serve_forever()\r\n    finally:\r\n        server.server_close()\r\n```\r\n* client:\r\n```python\r\nimport amqp\r\n\r\nconn = amqp.Connection(host='localhost:9999', confirm_publish=True)\r\nconn.connect()\r\nch = conn.channel(channel_id=1)\r\nch.basic_publish(msg=amqp.Message(body=b'Hello world'), exchange='test_exc', routing_key='rkey')\r\nconn.close()\r\n```\r\nThe following scripts was run on cPython 3.6.3 and using library from master branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/206", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/206/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/206/events", "html_url": "https://github.com/celery/py-amqp/issues/206", "id": 361802418, "node_id": "MDU6SXNzdWUzNjE4MDI0MTg=", "number": 206, "title": "Doesn't work with Python 3.7", "user": {"login": "galuszkak", "id": 759579, "node_id": "MDQ6VXNlcjc1OTU3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/759579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galuszkak", "html_url": "https://github.com/galuszkak", "followers_url": "https://api.github.com/users/galuszkak/followers", "following_url": "https://api.github.com/users/galuszkak/following{/other_user}", "gists_url": "https://api.github.com/users/galuszkak/gists{/gist_id}", "starred_url": "https://api.github.com/users/galuszkak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galuszkak/subscriptions", "organizations_url": "https://api.github.com/users/galuszkak/orgs", "repos_url": "https://api.github.com/users/galuszkak/repos", "events_url": "https://api.github.com/users/galuszkak/events{/privacy}", "received_events_url": "https://api.github.com/users/galuszkak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-09-19T15:25:01Z", "updated_at": "2018-11-06T15:36:38Z", "closed_at": "2018-11-06T15:36:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is stack trace in Python 3.7 when using amqp with SSL RabbitMQ. \r\n@thedrow @auvipy @ask \r\n\r\nSounds it's kinda critical to move to python 3.7\r\n```\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/connection.py\", line 302, in connect\r\n    self.transport.connect()\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/transport.py\", line 81, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/transport.py\", line 176, in _init_socket\r\n    self._setup_transport()\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/transport.py\", line 295, in _setup_transport\r\n    self.sock = self._wrap_socket(self.sock, **self.sslopts)\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/transport.py\", line 302, in _wrap_socket\r\n    return self._wrap_socket_sni(sock, **sslopts)\r\n  File \"/usr/local/lib/python3.7/site-packages/amqp/transport.py\", line 341, in _wrap_socket_sni\r\n    sock = ssl.SSLSocket(**opts)\r\n  File \"/usr/local/lib/python3.7/ssl.py\", line 788, in __init__\r\n    f\"{self.__class__.__name__} does not have a public \"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/205", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/205/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/205/events", "html_url": "https://github.com/celery/py-amqp/issues/205", "id": 356744887, "node_id": "MDU6SXNzdWUzNTY3NDQ4ODc=", "number": 205, "title": "struct.error ", "user": {"login": "zxh13", "id": 42962499, "node_id": "MDQ6VXNlcjQyOTYyNDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/42962499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxh13", "html_url": "https://github.com/zxh13", "followers_url": "https://api.github.com/users/zxh13/followers", "following_url": "https://api.github.com/users/zxh13/following{/other_user}", "gists_url": "https://api.github.com/users/zxh13/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxh13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxh13/subscriptions", "organizations_url": "https://api.github.com/users/zxh13/orgs", "repos_url": "https://api.github.com/users/zxh13/repos", "events_url": "https://api.github.com/users/zxh13/events{/privacy}", "received_events_url": "https://api.github.com/users/zxh13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-04T10:19:50Z", "updated_at": "2018-09-12T20:50:22Z", "closed_at": "2018-09-12T20:50:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"/data/zxh/feidao-python-3.0_2/test1.py\", line 250, in \r\nsessionid = session_id\r\nFile \"/data/zxh/feidao-python-3.0_2/test1.py\", line 226, in atom\r\nreturn get_dask_result(dsk, get_on, dbaccSave, render, dsk_cache=dsk_cache)\r\nFile \"/home/data/zxh/feidao-python-3.0_2/trans/dsk_link.py\", line 194, in get_dask_result\r\nr = dbaccSave(result[0])\r\nFile \"/home/data/zxh/feidao-python-3.0_2/client.py\", line 131, in __do\r\nraise ex\r\nFile \"/home/data/zxh/feidao-python-3.0_2/client.py\", line 101, in __do\r\nrouting_key = config['SIGN_ROUTER_QUEUE_NAME'])\r\nFile \"/root/anaconda3/lib/python3.5/site-packages/amqp/channel.py\", line 1748, in _basic_publish\r\n(0, exchange, routing_key, mandatory, immediate), msg\r\nFile \"/root/anaconda3/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 64, in send_method\r\nconn.frame_writer(1, self.channel_id, sig, args, content)\r\nFile \"/root/anaconda3/lib/python3.5/site-packages/amqp/method_framing.py\", line 173, in write_frame\r\n3, channel, framelen, str_to_bytes(body), 0xce)\r\nstruct.error: pack_into requires a buffer of at least 241169 bytes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/200", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/200/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/200/events", "html_url": "https://github.com/celery/py-amqp/issues/200", "id": 342105557, "node_id": "MDU6SXNzdWUzNDIxMDU1NTc=", "number": 200, "title": "Openbsd 6.3 error: Protocol not available", "user": {"login": "raratiru", "id": 6132160, "node_id": "MDQ6VXNlcjYxMzIxNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6132160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raratiru", "html_url": "https://github.com/raratiru", "followers_url": "https://api.github.com/users/raratiru/followers", "following_url": "https://api.github.com/users/raratiru/following{/other_user}", "gists_url": "https://api.github.com/users/raratiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/raratiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raratiru/subscriptions", "organizations_url": "https://api.github.com/users/raratiru/orgs", "repos_url": "https://api.github.com/users/raratiru/repos", "events_url": "https://api.github.com/users/raratiru/events{/privacy}", "received_events_url": "https://api.github.com/users/raratiru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-07-17T22:03:08Z", "updated_at": "2018-10-14T13:59:59Z", "closed_at": "2018-10-14T13:59:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Openbsd-6.3\r\n* Python-3.6\r\n* Celery-4.2.0\r\n* amqp-2.3.2\r\n\r\nWhen starting Celery, I receive the error:\r\n\r\n`[2018-07-18 00:53:50,510: ERROR/MainProcess] consumer: Cannot connect to amqp://...: [Errno 42] Protocol not available.`\r\n\r\n**amqp-2.2.2** is the most recent version that works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/197", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/197/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/197/events", "html_url": "https://github.com/celery/py-amqp/issues/197", "id": 332671773, "node_id": "MDU6SXNzdWUzMzI2NzE3NzM=", "number": 197, "title": "Built-in TypeError exception from Connection on_inbound_method()", "user": {"login": "juhamkilpinen", "id": 28702373, "node_id": "MDQ6VXNlcjI4NzAyMzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/28702373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juhamkilpinen", "html_url": "https://github.com/juhamkilpinen", "followers_url": "https://api.github.com/users/juhamkilpinen/followers", "following_url": "https://api.github.com/users/juhamkilpinen/following{/other_user}", "gists_url": "https://api.github.com/users/juhamkilpinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/juhamkilpinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juhamkilpinen/subscriptions", "organizations_url": "https://api.github.com/users/juhamkilpinen/orgs", "repos_url": "https://api.github.com/users/juhamkilpinen/repos", "events_url": "https://api.github.com/users/juhamkilpinen/events{/privacy}", "received_events_url": "https://api.github.com/users/juhamkilpinen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285478, "node_id": "MDU6TGFiZWw0MDUyODU0Nzg=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Channel", "name": "Component: Channel", "color": "fbca04", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-15T07:25:53Z", "updated_at": "2020-04-24T12:49:38Z", "closed_at": "2020-04-24T12:49:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are several reports from the other projects getting this exception when using Connection class:\r\n\r\n```\r\n   File \"/usr/lib/python2.7/site-packages/amqp/connection.py\", line 472, in on_inbound_method\r\n     return self.channels[channel_id].dispatch_method(\r\n TypeError: 'NoneType' object has no attribute '__getitem__'\r\n\r\n```\r\nSee for example:\r\nhttps://bugs.launchpad.net/oslo.messaging/+bug/1504725\r\nhttps://github.com/celery/kombu/issues/857\r\nhttps://github.com/celery/kombu/issues/463\r\n\r\nDoes this mean that Connection class is misused or should there be similar check in on_inbound_method() as there is in channel() for self.channels being None, for example:\r\n\r\n```\r\ndef on_inbound_method(self, channel_id, method_sig, payload, content):\r\n    if self.channels is None:\r\n        raise RecoverableConnectionError('Connection already closed.')\r\n\r\n```\r\nI have seen this problem e.g. in OpenStack Pike when creating heat stacks and stack creation can fail for that TypeError exception. If I add above check it seems that client can re-connect and stack creation does not fail (when RecoverableConnectionError is thrown instead of TypeError).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/196", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/196/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/196/events", "html_url": "https://github.com/celery/py-amqp/issues/196", "id": 328402774, "node_id": "MDU6SXNzdWUzMjg0MDI3NzQ=", "number": 196, "title": "Regression: OSError: [Errno 42] Protocol not available", "user": {"login": "tothegump", "id": 1663083, "node_id": "MDQ6VXNlcjE2NjMwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1663083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tothegump", "html_url": "https://github.com/tothegump", "followers_url": "https://api.github.com/users/tothegump/followers", "following_url": "https://api.github.com/users/tothegump/following{/other_user}", "gists_url": "https://api.github.com/users/tothegump/gists{/gist_id}", "starred_url": "https://api.github.com/users/tothegump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tothegump/subscriptions", "organizations_url": "https://api.github.com/users/tothegump/orgs", "repos_url": "https://api.github.com/users/tothegump/repos", "events_url": "https://api.github.com/users/tothegump/events{/privacy}", "received_events_url": "https://api.github.com/users/tothegump/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-01T06:57:42Z", "updated_at": "2018-06-01T14:50:00Z", "closed_at": "2018-06-01T14:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Platform\r\n* macOS High Sierra\r\n* Version 10.13.4\r\n* MacBook Pro (Retina, 13-inch, Early 2015)\r\n* Python 3.5.2\r\n\r\nadd a celery report:\r\n```\r\nsoftware -> celery:4.2.0rc4 (windowlicker) kombu:4.2.0 py:3.5.2\r\n            billiard:3.5.0.3 py-amqp:2.3.0\r\nplatform -> system:Darwin arch:64bit imp:CPython\r\nloader   -> celery.loaders.default.Loader\r\nsettings -> transport:amqp results:disabled\r\n```\r\n# Reproduce\r\nRun this code snippet:\r\n```Python\r\nfrom amqp import Connection\r\nconn = Connection()\r\nconn.connect()\r\n````\r\n\r\nfrom commit `73391a7` to `3973415` (current master HEAD) raise errors:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/xxx/.virtualenvs/a_env/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2910, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-e6621bf59778>\", line 3, in <module>\r\n    conn.connect()\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/connection.py\", line 279, in connect\r\n    self.transport.connect()\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 81, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 165, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 208, in _set_socket_options\r\n    self.sock.setsockopt(SOL_TCP, opt, val)\r\nOSError: [Errno 42] Protocol not available\r\n```\r\nwhen I checkout to commits from `3faa759` to `6a6127c` (the commit before `73391a7`) and run that code, rase error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/xxx/.virtualenvs/a_env/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2910, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-e6621bf59778>\", line 3, in <module>\r\n    conn.connect()\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/connection.py\", line 282, in connect\r\n    self.transport.connect()\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 85, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 137, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 176, in _set_socket_options\r\n    tcp_opts = self._get_tcp_socket_defaults(self.sock)\r\n  File \"/Users/xxx/s_dir/py-amqp/amqp/transport.py\", line 172, in _get_tcp_socket_defaults\r\n    tcp_opts[enum] = sock.getsockopt(SOL_TCP, opt)\r\nTypeError: an integer is required (got type str)\r\n```\r\n\r\nwhen I checkout to commit `fbe27f1` (the commit before `3faa759`), and run that code, nothing wrong.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/193", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/193/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/193/events", "html_url": "https://github.com/celery/py-amqp/issues/193", "id": 327313248, "node_id": "MDU6SXNzdWUzMjczMTMyNDg=", "number": 193, "title": "OSError: [Errno 42] Protocol not available", "user": {"login": "anapaulagomes", "id": 1899950, "node_id": "MDQ6VXNlcjE4OTk5NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1899950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anapaulagomes", "html_url": "https://github.com/anapaulagomes", "followers_url": "https://api.github.com/users/anapaulagomes/followers", "following_url": "https://api.github.com/users/anapaulagomes/following{/other_user}", "gists_url": "https://api.github.com/users/anapaulagomes/gists{/gist_id}", "starred_url": "https://api.github.com/users/anapaulagomes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anapaulagomes/subscriptions", "organizations_url": "https://api.github.com/users/anapaulagomes/orgs", "repos_url": "https://api.github.com/users/anapaulagomes/repos", "events_url": "https://api.github.com/users/anapaulagomes/events{/privacy}", "received_events_url": "https://api.github.com/users/anapaulagomes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-29T13:09:01Z", "updated_at": "2018-05-30T07:46:27Z", "closed_at": "2018-05-30T07:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error after updating `ampq` on MacOS (HighSierra 10.13.4).\r\n\r\nI already tried re-installing celery 4.1 and 4.2 (rc), kombu 4.2.0, 4.1.0 amqp 2.3.1,  2.2.2 and 2.1.1.\r\nI'm using Python 3.6.4. Rabbitmq: stable 3.7.5.\r\n\r\n```\r\n  File \"/Users/ana/workspace/project/venv/lib/python3.6/site-packages/amqp/connection.py\", line 302, in connect\r\n    self.transport.connect()\r\n  File \"/Users/ana/workspace/project/venv/lib/python3.6/site-packages/amqp/transport.py\", line 81, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"/Users/ana/workspace/project/venv/lib/python3.6/site-packages/amqp/transport.py\", line 166, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \"/Users/ana/workspace/project/venv/lib/python3.6/site-packages/amqp/transport.py\", line 210, in _set_socket_options\r\n    self.sock.setsockopt(SOL_TCP, opt, val)\r\nOSError: [Errno 42] Protocol not available\r\n```\r\n\r\nAny help? \ud83d\ude15", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/191", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/191/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/191/events", "html_url": "https://github.com/celery/py-amqp/issues/191", "id": 326850505, "node_id": "MDU6SXNzdWUzMjY4NTA1MDU=", "number": 191, "title": "Is there any backward-incompatible changes between 2.2.2 and 2.3 ?", "user": {"login": "hsiaoyi0504", "id": 10943928, "node_id": "MDQ6VXNlcjEwOTQzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/10943928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsiaoyi0504", "html_url": "https://github.com/hsiaoyi0504", "followers_url": "https://api.github.com/users/hsiaoyi0504/followers", "following_url": "https://api.github.com/users/hsiaoyi0504/following{/other_user}", "gists_url": "https://api.github.com/users/hsiaoyi0504/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsiaoyi0504/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsiaoyi0504/subscriptions", "organizations_url": "https://api.github.com/users/hsiaoyi0504/orgs", "repos_url": "https://api.github.com/users/hsiaoyi0504/repos", "events_url": "https://api.github.com/users/hsiaoyi0504/events{/privacy}", "received_events_url": "https://api.github.com/users/hsiaoyi0504/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-05-27T21:06:07Z", "updated_at": "2018-05-30T14:38:32Z", "closed_at": "2018-05-30T13:34:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Originally, one of my project installed py-amqp 2.2.2, because celery is its requirements.\r\nHowever, it seems to me that the Travis CI of my application fails today due the version update (2.2.2 -> 2.3.0). https://travis-ci.org/NAL-i5K/genomics-workspace/builds/384417734\r\n\r\nIs there any backward-incompatible changes between 2.2.2 and 2.3.0 ? I had taken a look the change log (https://amqp.readthedocs.io/en/master/changelog.html), but I didn't find related information there (maybe just I am not familiar enough with py-amqp).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/188", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/188/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/188/events", "html_url": "https://github.com/celery/py-amqp/issues/188", "id": 316184194, "node_id": "MDU6SXNzdWUzMTYxODQxOTQ=", "number": 188, "title": "Test package name is something strange.", "user": {"login": "realizeme", "id": 10345220, "node_id": "MDQ6VXNlcjEwMzQ1MjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/10345220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realizeme", "html_url": "https://github.com/realizeme", "followers_url": "https://api.github.com/users/realizeme/followers", "following_url": "https://api.github.com/users/realizeme/following{/other_user}", "gists_url": "https://api.github.com/users/realizeme/gists{/gist_id}", "starred_url": "https://api.github.com/users/realizeme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realizeme/subscriptions", "organizations_url": "https://api.github.com/users/realizeme/orgs", "repos_url": "https://api.github.com/users/realizeme/repos", "events_url": "https://api.github.com/users/realizeme/events{/privacy}", "received_events_url": "https://api.github.com/users/realizeme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T08:56:46Z", "updated_at": "2018-04-30T15:24:34Z", "closed_at": "2018-04-30T15:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not 't' But 'test' or 'tests'?? please, change it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/183", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/183/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/183/events", "html_url": "https://github.com/celery/py-amqp/issues/183", "id": 295552380, "node_id": "MDU6SXNzdWUyOTU1NTIzODA=", "number": 183, "title": "UnboundLocalError: local variable 'e' referenced before assignment", "user": {"login": "eric-eric-eric", "id": 36271090, "node_id": "MDQ6VXNlcjM2MjcxMDkw", "avatar_url": "https://avatars1.githubusercontent.com/u/36271090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-eric-eric", "html_url": "https://github.com/eric-eric-eric", "followers_url": "https://api.github.com/users/eric-eric-eric/followers", "following_url": "https://api.github.com/users/eric-eric-eric/following{/other_user}", "gists_url": "https://api.github.com/users/eric-eric-eric/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-eric-eric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-eric-eric/subscriptions", "organizations_url": "https://api.github.com/users/eric-eric-eric/orgs", "repos_url": "https://api.github.com/users/eric-eric-eric/repos", "events_url": "https://api.github.com/users/eric-eric-eric/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-eric-eric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-08T15:22:54Z", "updated_at": "2018-02-09T17:26:23Z", "closed_at": "2018-02-09T17:26:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\namqp/transport.py\", line 134, in _connect\r\n    if e is not None\r\nUnboundLocalError: local variable 'e' referenced before assignment\r\n```\r\nthis is due to line 150 in the previous iteration not assigning exception to variable `e` properly\r\n```                \r\nexcept socket.error as e:\r\n    if self.sock is not None:\r\n        self.sock.close()\r\n```\r\nchange to \r\n```                \r\nexcept socket.error as exc:\r\n    e = exc\r\n    if self.sock is not None:\r\n        self.sock.close()\r\n```\r\nwill fix it.\r\n\r\nsimple example for this issue\r\n```\r\ne = None\r\ntry:\r\n    raise Exception('test')\r\nexcept Exception as e:\r\n    pass\r\nprint(e)\r\n```\r\nwill raise `NameError: name 'e' is not defined`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/180", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/180/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/180/events", "html_url": "https://github.com/celery/py-amqp/issues/180", "id": 288641412, "node_id": "MDU6SXNzdWUyODg2NDE0MTI=", "number": 180, "title": "Windows 7 x64 issue with TCP_KEEPCNT", "user": {"login": "MShekow", "id": 10126618, "node_id": "MDQ6VXNlcjEwMTI2NjE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10126618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MShekow", "html_url": "https://github.com/MShekow", "followers_url": "https://api.github.com/users/MShekow/followers", "following_url": "https://api.github.com/users/MShekow/following{/other_user}", "gists_url": "https://api.github.com/users/MShekow/gists{/gist_id}", "starred_url": "https://api.github.com/users/MShekow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MShekow/subscriptions", "organizations_url": "https://api.github.com/users/MShekow/orgs", "repos_url": "https://api.github.com/users/MShekow/repos", "events_url": "https://api.github.com/users/MShekow/events{/privacy}", "received_events_url": "https://api.github.com/users/MShekow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}, {"id": 405286234, "node_id": "MDU6TGFiZWw0MDUyODYyMzQ=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Operating%20System:%20Windows", "name": "Operating System: Windows", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T15:57:26Z", "updated_at": "2019-04-01T12:55:21Z", "closed_at": "2019-04-01T12:55:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter having issues with celery 4.1 (worker couldn't connect to host, WinError 10042), I was able to nail down the issue:\r\nIn transport.py, \r\n```\r\nTCP_OPTS = {\r\n    getattr(socket, opt) for opt in KNOWN_TCP_OPTS if hasattr(socket, opt)\r\n}\r\n```\r\nis populated just fine. But then in `_get_tcp_socket_defaults()` the call `sock.getsockopt(SOL_TCP, opt) for opt in TCP_OPTS` fails (with `opt == getattr(socket, 'TCP_KEEPCNT'`)\r\n\r\nBest regards!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/179", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/179/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/179/events", "html_url": "https://github.com/celery/py-amqp/issues/179", "id": 288471607, "node_id": "MDU6SXNzdWUyODg0NzE2MDc=", "number": 179, "title": "Release version 2.3", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-01-15T03:28:46Z", "updated_at": "2018-05-30T13:41:02Z", "closed_at": "2018-05-30T13:41:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/178", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/178/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/178/events", "html_url": "https://github.com/celery/py-amqp/issues/178", "id": 288077790, "node_id": "MDU6SXNzdWUyODgwNzc3OTA=", "number": 178, "title": "Example of Sending/Receiving message ", "user": {"login": "Kaushal28", "id": 15686531, "node_id": "MDQ6VXNlcjE1Njg2NTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/15686531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaushal28", "html_url": "https://github.com/Kaushal28", "followers_url": "https://api.github.com/users/Kaushal28/followers", "following_url": "https://api.github.com/users/Kaushal28/following{/other_user}", "gists_url": "https://api.github.com/users/Kaushal28/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaushal28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaushal28/subscriptions", "organizations_url": "https://api.github.com/users/Kaushal28/orgs", "repos_url": "https://api.github.com/users/Kaushal28/repos", "events_url": "https://api.github.com/users/Kaushal28/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaushal28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-12T10:42:45Z", "updated_at": "2020-04-14T13:23:18Z", "closed_at": "2020-04-14T13:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find the examples of using this library.  Understanding from documentation is quite hard. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/172", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/172/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/172/events", "html_url": "https://github.com/celery/py-amqp/issues/172", "id": 269302369, "node_id": "MDU6SXNzdWUyNjkzMDIzNjk=", "number": 172, "title": "Write unit tests for the having_timeout context manager", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285420, "node_id": "MDU6TGFiZWw0MDUyODU0MjA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Tests", "name": "Category: Tests", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-28T09:58:03Z", "updated_at": "2018-11-07T14:22:02Z", "closed_at": "2018-11-07T14:22:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While the context manager is covered by other tests (unclear how though since it should be isolated from other units) it's better to write dedicated unit tests for it.\r\nI have started the effort here https://github.com/celery/py-amqp/commit/8500a14c67202fda7dd9763767c255d6574bb14f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/171", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/171/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/171/events", "html_url": "https://github.com/celery/py-amqp/issues/171", "id": 267087578, "node_id": "MDU6SXNzdWUyNjcwODc1Nzg=", "number": 171, "title": "TypeError: 'NoneType' object is not callable", "user": {"login": "gujun4990", "id": 32951570, "node_id": "MDQ6VXNlcjMyOTUxNTcw", "avatar_url": "https://avatars1.githubusercontent.com/u/32951570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gujun4990", "html_url": "https://github.com/gujun4990", "followers_url": "https://api.github.com/users/gujun4990/followers", "following_url": "https://api.github.com/users/gujun4990/following{/other_user}", "gists_url": "https://api.github.com/users/gujun4990/gists{/gist_id}", "starred_url": "https://api.github.com/users/gujun4990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gujun4990/subscriptions", "organizations_url": "https://api.github.com/users/gujun4990/orgs", "repos_url": "https://api.github.com/users/gujun4990/repos", "events_url": "https://api.github.com/users/gujun4990/events{/privacy}", "received_events_url": "https://api.github.com/users/gujun4990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-20T07:34:26Z", "updated_at": "2017-10-28T09:40:32Z", "closed_at": "2017-10-28T09:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using amqp 2.1.4 verison and it doesn't work fine for me. The error appear on my openstack environment,\r\nwhen amqp verison is 2.1.4, kombu verison is 3.0.32 and oslo_messaging version is 4.5.0.\r\n\r\nThe step is below:\r\n1. I connect RabbitMQ server is Ok using amqp 2.1.4\r\n2. Then, RabbitMQ server is down and amqp can't connect RabbitMQ server. The connection error wil be raised to kombu.\r\n3. kombu will try to reconnect and amqp will create new channel. so amqp send open sig to RabbitMQ server, but it's failed and raise exception to oslo_messaging.\r\n4. When oslo_messaging try to reconnect and amqp re-create new channel, the 'NoneType' error will occur.\r\n\r\nThe cause of this problem is that the step 3 don't clear the connection resource.\r\nBacause when executing the step 4, amqp mistakenly think it has connected the RabbitMQ server successfully.\r\nFrom the code, the self.connected of Connection class is not None and the self.frame_writer of Connection class is None.\r\nSo the 'NoneType' error occur.\r\n\r\nThe code is blow:\r\namqp/connection:Connection\r\n\r\n    def connect(self, callback=None):\r\n        # Let the transport.py module setup the actual\r\n        # socket connection to the broker.\r\n        #\r\n        if self.connected:\r\n            return callback() if callback else None\r\n        self.transport = self.Transport(\r\n            self.host, self.connect_timeout, self.ssl,\r\n            self.read_timeout, self.write_timeout,\r\n            socket_settings=self.socket_settings,\r\n        )\r\n        self.transport.connect()\r\n        self.on_inbound_frame = self.frame_handler_cls(\r\n            self, self.on_inbound_method)\r\n        self.frame_writer = self.frame_writer_cls(self, self.transport)\r\n\r\n        while not self._handshake_complete:\r\n            self.drain_events(timeout=self.connect_timeout)\r\n\r\nSo I prepare catch the exception on the create channel function at the step 3 and clear the connection resource.\r\n\r\nThe original code is below:\r\namqp/connection:Connection\r\n\r\n    def channel(self, channel_id=None, callback=None):\r\n        \"\"\"Create new channel.\r\n\r\n        Fetch a Channel object identified by the numeric channel_id, or\r\n        create that object if it doesn't already exist.\r\n        \"\"\"\r\n        if self.channels is not None:\r\n            try:\r\n                return self.channels[channel_id]\r\n            except KeyError:\r\n                channel = self.Channel(self, channel_id, on_open=callback)\r\n                channel.open()\r\n                return channel\r\n        raise RecoverableConnectionError('Connection already closed.')\r\n\r\nThe modified code is below:\r\namqp/connection:Connection\r\n\r\n    def channel(self, channel_id=None, callback=None):\r\n        \"\"\"Create new channel.\r\n\r\n        Fetch a Channel object identified by the numeric channel_id, or\r\n        create that object if it doesn't already exist.\r\n        \"\"\"\r\n        if self.channels is not None:\r\n            try:\r\n                return self.channels[channel_id]\r\n            except KeyError:\r\n                channel = self.Channel(self, channel_id, on_open=callback)\r\n                try:\r\n                    channel.open()\r\n                except Exception as exc:\r\n                    self.collect()\r\n                    raise\r\n                return channel\r\n        raise RecoverableConnectionError('Connection already closed.')\r\n\t\t\r\nI wish someone can help me to review the code. Thank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/166", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/166/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/166/events", "html_url": "https://github.com/celery/py-amqp/issues/166", "id": 256140572, "node_id": "MDU6SXNzdWUyNTYxNDA1NzI=", "number": 166, "title": "Test py-amqp with PyPy", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285420, "node_id": "MDU6TGFiZWw0MDUyODU0MjA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Tests", "name": "Category: Tests", "color": "f9d0c4", "default": false, "description": null}, {"id": 405286103, "node_id": "MDU6TGFiZWw0MDUyODYxMDM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Task", "name": "Issue Type: Task", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T04:54:30Z", "updated_at": "2018-01-02T06:06:49Z", "closed_at": "2018-01-02T06:06:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Celery supports PyPy and so should this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/165", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/165/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/165/events", "html_url": "https://github.com/celery/py-amqp/issues/165", "id": 254125815, "node_id": "MDU6SXNzdWUyNTQxMjU4MTU=", "number": 165, "title": "UTF-8 surrogates not handled properly in Python 3", "user": {"login": "tylerjharden", "id": 7143160, "node_id": "MDQ6VXNlcjcxNDMxNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7143160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerjharden", "html_url": "https://github.com/tylerjharden", "followers_url": "https://api.github.com/users/tylerjharden/followers", "following_url": "https://api.github.com/users/tylerjharden/following{/other_user}", "gists_url": "https://api.github.com/users/tylerjharden/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerjharden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerjharden/subscriptions", "organizations_url": "https://api.github.com/users/tylerjharden/orgs", "repos_url": "https://api.github.com/users/tylerjharden/repos", "events_url": "https://api.github.com/users/tylerjharden/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerjharden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-30T20:30:44Z", "updated_at": "2017-09-08T04:48:58Z", "closed_at": "2017-09-08T04:48:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When processing AMQP messages that contain validly escaped surrogate UTF-8 bytes, exceptions will be thrown anywhere the AMQP library here tries to encode to UTF-8. This does not happen in Python 2 as the default signature for `str.encode` is to do a surrogatepass. Python 3 defaults to throwing errors when encountering escapes. I will open a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/162", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/162/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/162/events", "html_url": "https://github.com/celery/py-amqp/issues/162", "id": 248846025, "node_id": "MDU6SXNzdWUyNDg4NDYwMjU=", "number": 162, "title": "Is there a plan to fix this hack?", "user": {"login": "montanalow", "id": 276125, "node_id": "MDQ6VXNlcjI3NjEyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/276125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montanalow", "html_url": "https://github.com/montanalow", "followers_url": "https://api.github.com/users/montanalow/followers", "following_url": "https://api.github.com/users/montanalow/following{/other_user}", "gists_url": "https://api.github.com/users/montanalow/gists{/gist_id}", "starred_url": "https://api.github.com/users/montanalow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montanalow/subscriptions", "organizations_url": "https://api.github.com/users/montanalow/orgs", "repos_url": "https://api.github.com/users/montanalow/repos", "events_url": "https://api.github.com/users/montanalow/events{/privacy}", "received_events_url": "https://api.github.com/users/montanalow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285478, "node_id": "MDU6TGFiZWw0MDUyODU0Nzg=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Channel", "name": "Component: Channel", "color": "fbca04", "default": false, "description": null}, {"id": 405285470, "node_id": "MDU6TGFiZWw0MDUyODU0NzA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Connection", "name": "Component: Connection", "color": "fef2c0", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-08T21:04:40Z", "updated_at": "2018-11-26T13:52:40Z", "closed_at": "2018-11-26T13:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/celery/py-amqp/blob/b21f8d41b840fdbb88dfbe102926973a33106c5a/amqp/channel.py#L1581\r\n\r\nThis hack causes consumers that are registered without a consumer_tag and nowait=True, to be unable to receive responses via reply_to -> routing_key:\r\n\r\n```\r\nRejecting message with delivery tag 1 for reason of having no callbacks.\r\nconsumer_tag='amq.ctag-M1nB_ZUAke_-k4zjygo7RA' exchange='' routing_key='amq.gen--jYKv6o2-gwNiCGwyY2DJQ'.\r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n    self.run()\r\n...\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/kombu/connection.py\", line 301, in drain_events\r\n    return self.transport.drain_events(self.connection, **kwargs)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/kombu/transport/pyamqp.py\", line 103, in drain_events\r\n    return connection.drain_events(**kwargs)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/connection.py\", line 464, in drain_events\r\n    return self.blocking_read(timeout)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/connection.py\", line 469, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/method_framing.py\", line 68, in on_frame\r\n    callback(channel, method_sig, buf, None)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/connection.py\", line 473, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 142, in dispatch_method\r\n    listener(*args)\r\n  File \"/Users/montanalow/.pyenv/versions/3.5.1/lib/python3.5/site-packages/amqp/channel.py\", line 293, in _on_close\r\n    reply_code, reply_text, (class_id, method_id), ChannelError,\r\namqp.exceptions.PreconditionFailed: Basic.reject: (406) PRECONDITION_FAILED - unknown delivery tag 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/161", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/161/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/161/events", "html_url": "https://github.com/celery/py-amqp/issues/161", "id": 248025776, "node_id": "MDU6SXNzdWUyNDgwMjU3NzY=", "number": 161, "title": "Licensing clarification", "user": {"login": "FatalEnigma", "id": 6596210, "node_id": "MDQ6VXNlcjY1OTYyMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6596210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FatalEnigma", "html_url": "https://github.com/FatalEnigma", "followers_url": "https://api.github.com/users/FatalEnigma/followers", "following_url": "https://api.github.com/users/FatalEnigma/following{/other_user}", "gists_url": "https://api.github.com/users/FatalEnigma/gists{/gist_id}", "starred_url": "https://api.github.com/users/FatalEnigma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FatalEnigma/subscriptions", "organizations_url": "https://api.github.com/users/FatalEnigma/orgs", "repos_url": "https://api.github.com/users/FatalEnigma/repos", "events_url": "https://api.github.com/users/FatalEnigma/events{/privacy}", "received_events_url": "https://api.github.com/users/FatalEnigma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405286103, "node_id": "MDU6TGFiZWw0MDUyODYxMDM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Task", "name": "Issue Type: Task", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-04T14:38:22Z", "updated_at": "2017-09-08T04:52:21Z", "closed_at": "2017-09-08T04:52:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThank you for developing such an awesome project. I am looking to use celery with a project I am currently developing but have a query about this particular dependency.\r\n\r\nI notice that last year the library was switched from LGPL to BSD but I noticed LGPL headers among some of the source files, are these no longer applicable? If so, why have they not been removed?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/160", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/160/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/160/events", "html_url": "https://github.com/celery/py-amqp/issues/160", "id": 244710210, "node_id": "MDU6SXNzdWUyNDQ3MTAyMTA=", "number": 160, "title": "\"expected a bytes-like object, str found\" in self.mechanisms", "user": {"login": "jeffersonheard", "id": 120210, "node_id": "MDQ6VXNlcjEyMDIxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/120210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffersonheard", "html_url": "https://github.com/jeffersonheard", "followers_url": "https://api.github.com/users/jeffersonheard/followers", "following_url": "https://api.github.com/users/jeffersonheard/following{/other_user}", "gists_url": "https://api.github.com/users/jeffersonheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffersonheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffersonheard/subscriptions", "organizations_url": "https://api.github.com/users/jeffersonheard/orgs", "repos_url": "https://api.github.com/users/jeffersonheard/repos", "events_url": "https://api.github.com/users/jeffersonheard/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffersonheard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-21T15:48:02Z", "updated_at": "2017-07-21T19:47:28Z", "closed_at": "2017-07-21T19:47:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a [https://gist.github.com/jeffersonheard/2823d6c332f6db2750715c98fbba92db](stacktrace) when starting celery \"flower\" and only that, and the problem is: \r\n\r\n```\r\n\"/Users/jheard/Environments/flask_api/lib/python3.6/site-packages/amqp/connection.py\", line 380, in _on_start\r\n        b\", \".join(self.mechanisms).decode()))\r\n    TypeError: sequence item 0: expected a bytes-like object, str found\r\n```\r\n\r\nI was able to correct the problem by changing line 347 to:\r\n\r\n```python\r\nself.mechanisms = [bytes(x, 'utf-8') for x in (mechanisms.split(b' ') if isinstance(mechanisms, bytes) else mechanisms.split(' '))]\r\n```\r\n\r\nbut I'm not sure this was the \"root cause\", and i don't know enough about amqplib to know whether my change is a valid one or just *happens* to fix the problem while introducing another that i'm not yet running into.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/158", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/158/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/158/events", "html_url": "https://github.com/celery/py-amqp/issues/158", "id": 242904416, "node_id": "MDU6SXNzdWUyNDI5MDQ0MTY=", "number": 158, "title": "TypeError _on_start() in amqp.connection.py:347 - py-amqp 2.2.0", "user": {"login": "pr3d4t0r", "id": 148262, "node_id": "MDQ6VXNlcjE0ODI2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/148262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pr3d4t0r", "html_url": "https://github.com/pr3d4t0r", "followers_url": "https://api.github.com/users/pr3d4t0r/followers", "following_url": "https://api.github.com/users/pr3d4t0r/following{/other_user}", "gists_url": "https://api.github.com/users/pr3d4t0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/pr3d4t0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pr3d4t0r/subscriptions", "organizations_url": "https://api.github.com/users/pr3d4t0r/orgs", "repos_url": "https://api.github.com/users/pr3d4t0r/repos", "events_url": "https://api.github.com/users/pr3d4t0r/events{/privacy}", "received_events_url": "https://api.github.com/users/pr3d4t0r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-14T05:56:08Z", "updated_at": "2017-07-19T11:11:54Z", "closed_at": "2017-07-14T06:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Symptom\r\nTypeError _on_start() in amqp.connection.py:347 - py-amqp 2.2.0.\r\n\r\n# Issue description\r\nUsing Kombu 4.0.2 SimpleQueue with py-amqp.2.2.0 results in:\r\n```\r\ntest/fhai/bergen/avtale/test_amqpprocessor.py:68: in <module>\r\n    test_process()\r\ntest/fhai/bergen/avtale/test_amqpprocessor.py:63: in test_process\r\n    message  = TEST_MESSAGE)\r\nfhai/bergen/avtale/amqpprocessor.py:141: in process\r\n    _initProducerWith(config, parseIRI(endpoint, payloadDict, config, message))\r\nfhai/bergen/avtale/amqpprocessor.py:123: in _initProducerWith\r\n    raise e\r\nfhai/bergen/avtale/amqpprocessor.py:117: in _initProducerWith\r\n    _producer = _producerConnection.SimpleQueue(str(targetQueue))\r\nlib/python3.6/site-packages/kombu/connection.py:736: in SimpleQueue\r\n    exchange_opts, **kwargs)\r\nlib/python3.6/site-packages/kombu/simple.py:118: in __init__\r\n    consumer = messaging.Consumer(channel, queue)\r\nlib/python3.6/site-packages/kombu/messaging.py:386: in __init__\r\n    self.revive(self.channel)\r\nlib/python3.6/site-packages/kombu/messaging.py:399: in revive\r\n    channel = self.channel = maybe_channel(channel)\r\nlib/python3.6/site-packages/kombu/connection.py:973: in maybe_channel\r\n    return channel.default_channel\r\nlib/python3.6/site-packages/kombu/connection.py:819: in default_channel\r\n    self.connection\r\nlib/python3.6/site-packages/kombu/connection.py:802: in connection\r\n    self._connection = self._establish_connection()\r\nlib/python3.6/site-packages/kombu/connection.py:757: in _establish_connection\r\n    conn = self.transport.establish_connection()\r\nlib/python3.6/site-packages/kombu/transport/pyamqp.py:130: in establish_connection\r\n    conn.connect()\r\nlib/python3.6/site-packages/amqp/connection.py:302: in connect\r\n    self.drain_events(timeout=self.connect_timeout)\r\nlib/python3.6/site-packages/amqp/connection.py:483: in drain_events\r\n    while not self.blocking_read(timeout):\r\nlib/python3.6/site-packages/amqp/connection.py:489: in blocking_read\r\n    return self.on_inbound_frame(frame)\r\nlib/python3.6/site-packages/amqp/method_framing.py:69: in on_frame\r\n    callback(channel, method_sig, buf, None)\r\nlib/python3.6/site-packages/amqp/connection.py:493: in on_inbound_method\r\n    method_sig, payload, content,\r\nlib/python3.6/site-packages/amqp/abstract_channel.py:142: in dispatch_method\r\n    listener(*args)\r\nlib/python3.6/site-packages/amqp/connection.py:347: in _on_start\r\n    self.mechanisms = mechanisms.split(b' ')\r\nE   TypeError: must be str or None, not bytes\r\n```\r\n\r\n# Steps to recreate\r\n\r\n```python\r\n# Python 3.6.1, Kombu 4.0.2, amqp 2.2.0\r\n\r\nfrom kombu import Connection\r\n\r\ndef _initProducerWith(config, targetQueue):\r\n    global _producer, _producerConnection, _producerPool, _connection\r\n\r\n    broker             = config['protocolProcessors']['amqp']['RabbitMQ']\r\n\r\n    try:\r\n        if not _connection:\r\n            _connection = Connection('amqp://%s:%s@%s:%d/' % (\r\n                                    broker['credentials']['userName'],\r\n                                    broker['credentials']['password'],\r\n                                    broker['server'],\r\n                                    broker['port'] ))\r\n\r\n        if not _producerPool:\r\n            _producerPool = _connection.Pool(MAX_CONNECTIONS)\r\n\r\n        if not _producerConnection:\r\n            _producerConnection = _producerPool.acquire(block = True)\r\n\r\n        if not _producer:\r\n            # ERROR OCCURS HERE:\r\n            _producer = _producerConnection.SimpleQueue(targetQueue)\r\n    except Exception as e:\r\n        _disconnect()\r\n        _logger.warn('unable to start Agent AMQP Processor - ABEND; e = %s' % e)\r\n        _logger.exception('[%s] stack trace' % e)\r\n\r\n        raise e\r\n\r\n    return _producer\r\n```\r\n\r\n# Workaround\r\n\r\nUse py-amqp 2.1.4 instead until this bug is fixed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/156", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/156/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/156/events", "html_url": "https://github.com/celery/py-amqp/issues/156", "id": 242758129, "node_id": "MDU6SXNzdWUyNDI3NTgxMjk=", "number": 156, "title": "2.2.0 issue in connection.py where it split mechanisms", "user": {"login": "naoko", "id": 615292, "node_id": "MDQ6VXNlcjYxNTI5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/615292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naoko", "html_url": "https://github.com/naoko", "followers_url": "https://api.github.com/users/naoko/followers", "following_url": "https://api.github.com/users/naoko/following{/other_user}", "gists_url": "https://api.github.com/users/naoko/gists{/gist_id}", "starred_url": "https://api.github.com/users/naoko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naoko/subscriptions", "organizations_url": "https://api.github.com/users/naoko/orgs", "repos_url": "https://api.github.com/users/naoko/repos", "events_url": "https://api.github.com/users/naoko/events{/privacy}", "received_events_url": "https://api.github.com/users/naoko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999389, "node_id": "MDU6TGFiZWw5OTk5Mzg5", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Duplicate", "name": "Status: Duplicate", "color": "cccccc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T16:24:44Z", "updated_at": "2017-07-14T05:11:18Z", "closed_at": "2017-07-14T05:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue only occurs in version `2.2.0` and `2.1.4` is good.\r\n\r\nThe issue occurred in amqp/connection.py\r\nline# 344 \r\n`self.mechanisms = mechanisms.split(b' ')`\r\n\r\nwhere `mechanisms` is str but trying to split with byte string/\r\nupdating to `mechanisms.encode('utf-8').split(b' ')` temporarily fixed the connection problem.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/155", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/155/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/155/events", "html_url": "https://github.com/celery/py-amqp/issues/155", "id": 242500564, "node_id": "MDU6SXNzdWUyNDI1MDA1NjQ=", "number": 155, "title": "Unrecoverable error: TypeError(\"Can't convert 'bytes' object to str implicitly\",)", "user": {"login": "wooyek", "id": 222570, "node_id": "MDQ6VXNlcjIyMjU3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wooyek", "html_url": "https://github.com/wooyek", "followers_url": "https://api.github.com/users/wooyek/followers", "following_url": "https://api.github.com/users/wooyek/following{/other_user}", "gists_url": "https://api.github.com/users/wooyek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wooyek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wooyek/subscriptions", "organizations_url": "https://api.github.com/users/wooyek/orgs", "repos_url": "https://api.github.com/users/wooyek/repos", "events_url": "https://api.github.com/users/wooyek/events{/privacy}", "received_events_url": "https://api.github.com/users/wooyek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285470, "node_id": "MDU6TGFiZWw0MDUyODU0NzA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Connection", "name": "Component: Connection", "color": "fef2c0", "default": false, "description": null}, {"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-07-12T20:11:47Z", "updated_at": "2017-07-22T09:33:33Z", "closed_at": "2017-07-14T05:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a problem with worker startup on python 3.6.\r\n\r\n```\r\n[2017-07-12 22:02:08,311: CRITICAL/MainProcess] Unrecoverable error: TypeError(\"Can't convert 'bytes' object to str implicitly\",)\r\nTraceback (most recent call last):\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/worker.py\", line 203, in start\r\n    self.blueprint.start(self)\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/bootsteps.py\", line 370, in start\r\n    return self.obj.start()\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/consumer/consumer.py\", line 320, in start\r\n    blueprint.start(self)\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/bootsteps.py\", line 119, in start\r\n    step.start(parent)\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/consumer/connection.py\", line 21, in start\r\n    c.connection = c.connect()\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/consumer/consumer.py\", line 407, in connect\r\n    conn = self.connection_for_read(heartbeat=self.amqheartbeat)\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/consumer/consumer.py\", line 414, in connection_for_read\r\n    self.app.connection_for_read(heartbeat=heartbeat))\r\n  File \"/media/data/work/your-hr/fast-rate/.pve/src/celery/celery/worker/consumer/consumer.py\", line 438, in ensure_connected\r\n    callback=maybe_shutdown,\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/connection.py\", line 405, in ensure_connection\r\n    callback)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/utils/functional.py\", line 333, in retry_over_time\r\n    return fun(*args, **kwargs)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/connection.py\", line 261, in connect\r\n    return self.connection\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/connection.py\", line 802, in connection\r\n    self._connection = self._establish_connection()\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/connection.py\", line 757, in _establish_connection\r\n    conn = self.transport.establish_connection()\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/kombu/transport/pyamqp.py\", line 130, in establish_connection\r\n    conn.connect()\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/connection.py\", line 302, in connect\r\n    self.drain_events(timeout=self.connect_timeout)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/connection.py\", line 483, in drain_events\r\n    while not self.blocking_read(timeout):\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/connection.py\", line 489, in blocking_read\r\n    return self.on_inbound_frame(frame)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/method_framing.py\", line 69, in on_frame\r\n    callback(channel, method_sig, buf, None)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/connection.py\", line 493, in on_inbound_method\r\n    method_sig, payload, content,\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 142, in dispatch_method\r\n    listener(*args)\r\n  File \"/home/janusz/work/your-hr/fast-rate/.pve/lib/python3.5/site-packages/amqp/connection.py\", line 347, in _on_start\r\n    self.mechanisms = mechanisms.split(b' ')\r\n```\r\n\r\n```\r\nargsig = {str} 'FsSs'\r\nclient_properties = {dict} {'product': 'py-amqp', 'product_version': '2.2.0'}\r\nlocales = {str} 'en_US'\r\nmechanisms = {str} 'PLAIN AMQPLAIN'\r\nself = {Connection} <kombu.transport.pyamqp.Connection object at 0x7f32c912f2e8>\r\nserver_properties = {dict} {'version': '3.5.8', 'platform': 'Erlang/OTP', 'cluster_name': 'antelope', 'information': 'Licensed under the MPL.  See http://www.rabbitmq.com/', 'capabilities': {'consumer_cancel_notify': True, 'publisher_confirms': True, 'per_consumer_qos': True, 'conne\r\nversion_major = {int} 0\r\nversion_minor = {int} 9\r\nserver_properties = {dict} {'version': '3.5.8', 'platform': 'Erlang/OTP', 'cluster_name': 'antelope', \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/151", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/151/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/151/events", "html_url": "https://github.com/celery/py-amqp/issues/151", "id": 232683298, "node_id": "MDU6SXNzdWUyMzI2ODMyOTg=", "number": 151, "title": "basic_publish_confirm hangs forever on empty message publish", "user": {"login": "tebriel", "id": 821688, "node_id": "MDQ6VXNlcjgyMTY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/821688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tebriel", "html_url": "https://github.com/tebriel", "followers_url": "https://api.github.com/users/tebriel/followers", "following_url": "https://api.github.com/users/tebriel/following{/other_user}", "gists_url": "https://api.github.com/users/tebriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/tebriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tebriel/subscriptions", "organizations_url": "https://api.github.com/users/tebriel/orgs", "repos_url": "https://api.github.com/users/tebriel/repos", "events_url": "https://api.github.com/users/tebriel/events{/privacy}", "received_events_url": "https://api.github.com/users/tebriel/received_events", "type": "User", "site_admin": true}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-31T20:18:39Z", "updated_at": "2017-08-18T04:46:45Z", "closed_at": "2017-08-18T04:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Scenario ##\r\n\r\nYou have an empty message you'd like to publish for whatever reason. (We post a serialized protobuf on a queue, and if that protobuf is nothing but the default proto values, it ends up being `b''`.\r\n\r\nYou also use publisher confirms.\r\n\r\n## What happens ##\r\n\r\nCalling `basic_publish_confirm` with a message that has a body of `b''` does send some headers over the wire, but rabbitmq never thinks the message is complete. If you then publish another message, you see an error in the rabbitmq logs:\r\n\r\n```\r\n=ERROR REPORT==== 31-May-2017::20:12:42 ===\r\nError on AMQP connection <0.2299.1> (172.17.0.1:55824 -> 172.17.0.4:5672, vhost: '/', user: 'guest', state: running), channel 1:\r\noperation basic.publish caused a connection exception unexpected_frame: \"expected content header for class 60, got non content header frame instead\"\r\n```\r\n\r\n## Debug ##\r\n\r\nI traced this all the way down to where it sets the network packet up and packages up the struct and such, I'm a bit out of my depth at this point, but my guess is that there needs to be some sort of \"end of body\" token and that's not getting set. I definitely see it send the headers, skipping over the body (as it's empty).\r\n\r\nIf you call `basic_publish` (no confirm) the call returns immediately, but nothing is ever truly published, still an error when the next message comes across in rabbit.\r\n\r\n## Other libraries where this works ##\r\n\r\nI only tested one, but [Pika](https://pika.readthedocs.io/en/0.10.0/) does publish and confirm the empty message successfully.\r\n\r\n## Example Code ##\r\n\r\n```\r\nIn [1]: from amqp import Connection, Message\r\nIn [2]: con = Connection(host='localhost', userid='guest', password='guest', virtual_host='/')\r\nIn [3]: con.connect()\r\nIn [4]: chan = con.channel()\r\nIn [5]: chan.basic_publish_confirm(Message(b''), 'system-configuration', 'a.config.c')\r\n# hangs forever here\r\n```\r\n\r\n## Versions ##\r\n\r\n[amqp 2.1.4](https://pypi.python.org/pypi/amqp/2.1.4)\r\n\r\n[RabbitMQ 3.6.6](https://hub.docker.com/_/rabbitmq/)\r\n\r\nLet me know if I can provide any other details.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/148", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/148/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/148/events", "html_url": "https://github.com/celery/py-amqp/issues/148", "id": 231004612, "node_id": "MDU6SXNzdWUyMzEwMDQ2MTI=", "number": 148, "title": "ImportError: cannot import name spec", "user": {"login": "Hoohaha", "id": 9875545, "node_id": "MDQ6VXNlcjk4NzU1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9875545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoohaha", "html_url": "https://github.com/Hoohaha", "followers_url": "https://api.github.com/users/Hoohaha/followers", "following_url": "https://api.github.com/users/Hoohaha/following{/other_user}", "gists_url": "https://api.github.com/users/Hoohaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoohaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoohaha/subscriptions", "organizations_url": "https://api.github.com/users/Hoohaha/orgs", "repos_url": "https://api.github.com/users/Hoohaha/repos", "events_url": "https://api.github.com/users/Hoohaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoohaha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-24T11:14:47Z", "updated_at": "2017-10-28T09:59:45Z", "closed_at": "2017-10-28T09:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi sir,\r\n\r\n```\r\namqp Version: 2.1.4\r\ndjang version: 1.11.1\r\ncelery version: 4.0.2\r\napache version: 2.4\r\n```\r\n\r\nI want to use celery in my django project. The project is served by apache-server.\r\nWhen the server is started. There are an error display:\r\n\r\n```\r\n[Wed May 24 04:03:26.076766 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534] mod_wsgi (pid=10092): Target WSGI script '/opt/lampp/htdocs/dpcm/dpcm1/wsgi.py' cannot be loaded as Python module.\r\n[Wed May 24 04:03:26.076836 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534] mod_wsgi (pid=10092): Exception occurred processing WSGI script '/opt/lampp/htdocs/dpcm/dpcm1/wsgi.py'.\r\n[Wed May 24 04:03:26.076891 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534] Traceback (most recent call last):\r\n[Wed May 24 04:03:26.076936 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm1/wsgi.py\", line 18, in <module>\r\n[Wed May 24 04:03:26.077076 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     application = get_wsgi_application()\r\n[Wed May 24 04:03:26.077101 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/django/core/wsgi.py\", line 13, in get_wsgi_application\r\n[Wed May 24 04:03:26.077187 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     django.setup(set_prefix=False)\r\n[Wed May 24 04:03:26.077210 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/django/__init__.py\", line 22, in setup\r\n[Wed May 24 04:03:26.077288 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)\r\n[Wed May 24 04:03:26.077312 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 56, in __getattr__\r\n[Wed May 24 04:03:26.077487 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     self._setup(name)\r\n[Wed May 24 04:03:26.077507 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 41, in _setup\r\n[Wed May 24 04:03:26.077545 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     self._wrapped = Settings(settings_module)\r\n[Wed May 24 04:03:26.077562 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 110, in __init__\r\n[Wed May 24 04:03:26.077587 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     mod = importlib.import_module(self.SETTINGS_MODULE)\r\n[Wed May 24 04:03:26.077652 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n[Wed May 24 04:03:26.077791 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     __import__(name)\r\n[Wed May 24 04:03:26.077813 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm1/__init__.py\", line 5, in <module>\r\n[Wed May 24 04:03:26.077876 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from .celery import app as celery_app\r\n[Wed May 24 04:03:26.077894 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm1/celery.py\", line 3, in <module>\r\n[Wed May 24 04:03:26.077958 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from celery import Celery\r\n[Wed May 24 04:03:26.077977 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/celery/local.py\", line 509, in __getattr__\r\n[Wed May 24 04:03:26.078311 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     module = __import__(self._object_origins[name], None, None, [name])\r\n[Wed May 24 04:03:26.078330 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/celery/app/__init__.py\", line 5, in <module>\r\n[Wed May 24 04:03:26.078427 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from celery import _state\r\n[Wed May 24 04:03:26.078445 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/celery/_state.py\", line 15, in <module>\r\n[Wed May 24 04:03:26.078583 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from celery.utils.threads import LocalStack\r\n[Wed May 24 04:03:26.078601 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/celery/utils/__init__.py\", line 10, in <module>\r\n[Wed May 24 04:03:26.078856 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from .nodenames import worker_direct, nodename, nodesplit\r\n[Wed May 24 04:03:26.078880 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/celery/utils/nodenames.py\", line 7, in <module>\r\n[Wed May 24 04:03:26.078984 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from kombu.entity import Exchange, Queue\r\n[Wed May 24 04:03:26.079002 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/kombu/entity.py\", line 6, in <module>\r\n[Wed May 24 04:03:26.079555 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from .abstract import MaybeChannelBound, Object\r\n[Wed May 24 04:03:26.079576 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/kombu/abstract.py\", line 6, in <module>\r\n[Wed May 24 04:03:26.079758 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from .connection import maybe_channel\r\n[Wed May 24 04:03:26.079784 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/kombu/connection.py\", line 15, in <module>\r\n[Wed May 24 04:03:26.080421 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from kombu import exceptions\r\n[Wed May 24 04:03:26.080441 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/kombu/exceptions.py\", line 6, in <module>\r\n[Wed May 24 04:03:26.080550 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from amqp import ChannelError, ConnectionError, ResourceError\r\n[Wed May 24 04:03:26.080569 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/amqp/__init__.py\", line 47, in <module>\r\n[Wed May 24 04:03:26.080747 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from .connection import Connection  # noqa\r\n[Wed May 24 04:03:26.080787 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]   File \"/opt/lampp/htdocs/dpcm/dpcm/local/lib/python2.7/site-packages/amqp/connection.py\", line 29, in <module>\r\n[Wed May 24 04:03:26.081249 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534]     from . import spec\r\n[Wed May 24 04:03:26.081306 2017] [wsgi:error] [pid 10092] [client 192.168.17.130:48534] ImportError: cannot import name spec\r\n```\r\namqp/connection.py\", line 29:\r\n```python\r\nfrom . import spec\r\n```\r\nWhat's the problem? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/145", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/145/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/145/events", "html_url": "https://github.com/celery/py-amqp/issues/145", "id": 228566972, "node_id": "MDU6SXNzdWUyMjg1NjY5NzI=", "number": 145, "title": "AMQP 2.1.2<= fails on Bash On Windows with OperationError: [Errno 92] Protocol not available", "user": {"login": "eugene-s", "id": 10087762, "node_id": "MDQ6VXNlcjEwMDg3NzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/10087762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene-s", "html_url": "https://github.com/eugene-s", "followers_url": "https://api.github.com/users/eugene-s/followers", "following_url": "https://api.github.com/users/eugene-s/following{/other_user}", "gists_url": "https://api.github.com/users/eugene-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene-s/subscriptions", "organizations_url": "https://api.github.com/users/eugene-s/orgs", "repos_url": "https://api.github.com/users/eugene-s/repos", "events_url": "https://api.github.com/users/eugene-s/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-14T20:18:09Z", "updated_at": "2017-10-23T15:19:25Z", "closed_at": "2017-10-23T15:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has error in Bash on Windows.\r\nWindows 10 Build 1703.\r\n\r\nVersions of packages involved:\r\n\r\n- Python 3.6.1\r\n- kombu 4.0.2\r\n- amqp 2.1.2 and more\r\n- rabbitmq server 3.6.8\r\n\r\nI had to downgrade to version 2.1.1. It works for me.\r\n\r\n``` \r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 419, in _reraise_as_library_errors\r\n    sys.exc_info()[2])\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/vine/five.py\", line 175, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 414, in _reraise_as_library_errors\r\n    yield\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 405, in ensure_connection\r\n    callback)\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/utils/functional.py\", line 333, in retry_over_time\r\n    return fun(*args, **kwargs)\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 261, in connect\r\n    return self.connection\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 802, in connection\r\n    self._connection = self._establish_connection()\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/connection.py\", line 757, in _establish_connection\r\n    conn = self.transport.establish_connection()\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/kombu/transport/pyamqp.py\", line 130, in establish_connection\r\n    conn.connect()\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/connection.py\", line 294, in connect\r\n    self.transport.connect()\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/transport.py\", line 122, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/transport.py\", line 174, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/transport.py\", line 198, in _set_socket_options\r\n    tcp_opts = self._get_tcp_socket_defaults(self.sock)\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/transport.py\", line 194, in _get_tcp_socket_defaults\r\n    opt: sock.getsockopt(SOL_TCP, opt) for opt in TCP_OPTS\r\n  File \"/root/.virtualenvs/project/lib/python3.6/site-packages/amqp/transport.py\", line 194, in <dictcomp>\r\n    opt: sock.getsockopt(SOL_TCP, opt) for opt in TCP_OPTS\r\nkombu.exceptions.OperationalError: [Errno 92] Protocol not available\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/137", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/137/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/137/events", "html_url": "https://github.com/celery/py-amqp/issues/137", "id": 217500124, "node_id": "MDU6SXNzdWUyMTc1MDAxMjQ=", "number": 137, "title": "FRAME_ERROR", "user": {"login": "taoqf", "id": 15901911, "node_id": "MDQ6VXNlcjE1OTAxOTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/15901911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taoqf", "html_url": "https://github.com/taoqf", "followers_url": "https://api.github.com/users/taoqf/followers", "following_url": "https://api.github.com/users/taoqf/following{/other_user}", "gists_url": "https://api.github.com/users/taoqf/gists{/gist_id}", "starred_url": "https://api.github.com/users/taoqf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taoqf/subscriptions", "organizations_url": "https://api.github.com/users/taoqf/orgs", "repos_url": "https://api.github.com/users/taoqf/repos", "events_url": "https://api.github.com/users/taoqf/events{/privacy}", "received_events_url": "https://api.github.com/users/taoqf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-28T09:31:19Z", "updated_at": "2017-03-30T07:48:16Z", "closed_at": "2017-03-30T07:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create 5 channels and put them to a Queue, waiting for being used, multiple threads call `c`\r\n```python\r\n__g_queue_name = 'my_queue'\r\n\r\ndef a():\r\n\tconn.connect()\r\n\tchannels = queue.Queue()\r\n\tfor i in range(5):\r\n\t\tchannel = conn.channel()\r\n\t\tchannel.open()\r\n\t\tchannel.queue_declare(queue = __g_queue_name, durable = True, auto_delete = True)\r\n\t\tchannel.basic_consume(callback = b, queue = __g_queue_name, no_ack = True)\r\n\t\tchannels.put_nowait(channel)\r\n\treturn channels\r\n\r\ndef b(msg):\r\n\tpass\r\n\r\n__channels = a()\r\n\r\ndef c(msg):\r\n\ttry:\r\n\t\tchannel = __channels.get()\r\n\t\tchannel.basic_publish(amqp.Message(msg.encode(encoding='utf-8'),reply_to = __g_queue_name))\r\n\tfinally:\r\n\t\t__channels.put(channel)\r\n```\r\nthen I got `FRAME_ERROR`.\r\nHow can I use multiple channel in multithread?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/135", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/135/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/135/events", "html_url": "https://github.com/celery/py-amqp/issues/135", "id": 205133366, "node_id": "MDU6SXNzdWUyMDUxMzMzNjY=", "number": 135, "title": "AMQP 2.1.4 fails on Windows with  [Errno 10042] An unknown, invalid, or unsupported option or level was specified in a getsockopt or setsockopt call", "user": {"login": "cyberMe", "id": 923743, "node_id": "MDQ6VXNlcjkyMzc0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/923743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberMe", "html_url": "https://github.com/cyberMe", "followers_url": "https://api.github.com/users/cyberMe/followers", "following_url": "https://api.github.com/users/cyberMe/following{/other_user}", "gists_url": "https://api.github.com/users/cyberMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberMe/subscriptions", "organizations_url": "https://api.github.com/users/cyberMe/orgs", "repos_url": "https://api.github.com/users/cyberMe/repos", "events_url": "https://api.github.com/users/cyberMe/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberMe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-03T11:25:25Z", "updated_at": "2018-01-15T08:12:36Z", "closed_at": "2018-01-15T08:12:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on Windows7 x64 and Windows8 x32 with Python 2.7.13, 2.7.8, 3.6.0. RabbitMq 3.6.5.\r\n\r\nStack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \".\\main.py\", line 12, in <module>\r\n    c = main()\r\n  File \".\\main.py\", line 8, in main\r\n    conn.connect()\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\connection.py\", line 294, in connect\r\n    self.transport.connect()\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\transport.py\", line 122, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\transport.py\", line 174, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \"C:\\Python27\\lib\\site-packages\\amqp\\transport.py\", line 204, in _set_socket_options\r\n    self.sock.setsockopt(SOL_TCP, opt, val)\r\n  File \"C:\\Python27\\lib\\socket.py\", line 228, in meth\r\n    return getattr(self._sock,name)(*args)\r\nsocket.error: [Errno 10042] An unknown, invalid, or unsupported option or level was specified in a getsockopt or setsockopt call\r\n```\r\n\r\nSample code:\r\n```python\r\nimport amqp\r\n\r\ndef main():\r\n\tport = 5672\r\n\thost = 'localhost'\r\n\tuser = 'guest'\r\n\tconn = amqp.connection.Connection(host=host, port=port, username=user, password=user)\r\n\tconn.connect()\r\n\treturn conn\r\n\r\nif __name__ == '__main__':\r\n\tc = main()\r\n\tif c.connected:\r\n\t\tc.close()\r\n\tdel c\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/132", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/132/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/132/events", "html_url": "https://github.com/celery/py-amqp/issues/132", "id": 203390285, "node_id": "MDU6SXNzdWUyMDMzOTAyODU=", "number": 132, "title": "The read the docs \"latest\" tag is pointing at an old release", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-26T14:50:59Z", "updated_at": "2017-07-12T16:56:09Z", "closed_at": "2017-07-12T16:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"latest\" is pointing at 2.0.2:\r\nhttp://amqp.readthedocs.io/en/latest/changelog.html\r\n\r\nWhereas \"stable\" is correctly at 2.1.4:\r\nhttp://amqp.readthedocs.io/en/stable/changelog.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/131", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/131/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/131/events", "html_url": "https://github.com/celery/py-amqp/issues/131", "id": 199208671, "node_id": "MDU6SXNzdWUxOTkyMDg2NzE=", "number": 131, "title": "Typo in Message class documentation", "user": {"login": "TomTheBear", "id": 2751628, "node_id": "MDQ6VXNlcjI3NTE2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2751628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomTheBear", "html_url": "https://github.com/TomTheBear", "followers_url": "https://api.github.com/users/TomTheBear/followers", "following_url": "https://api.github.com/users/TomTheBear/following{/other_user}", "gists_url": "https://api.github.com/users/TomTheBear/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomTheBear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomTheBear/subscriptions", "organizations_url": "https://api.github.com/users/TomTheBear/orgs", "repos_url": "https://api.github.com/users/TomTheBear/repos", "events_url": "https://api.github.com/users/TomTheBear/events{/privacy}", "received_events_url": "https://api.github.com/users/TomTheBear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-06T14:38:05Z", "updated_at": "2017-01-27T06:02:59Z", "closed_at": "2017-01-27T06:02:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a typo in the docstring of the Message class, an additional n in Channel:\r\nhttps://github.com/celery/py-amqp/blob/master/amqp/basic_message.py#L35\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/125", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/125/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/125/events", "html_url": "https://github.com/celery/py-amqp/issues/125", "id": 197561346, "node_id": "MDU6SXNzdWUxOTc1NjEzNDY=", "number": 125, "title": "Cannot import amqp with Python-2.7.6 (TypeError: Struct() argument 1 must be string, not unicode)", "user": {"login": "bendemboski", "id": 559001, "node_id": "MDQ6VXNlcjU1OTAwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/559001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bendemboski", "html_url": "https://github.com/bendemboski", "followers_url": "https://api.github.com/users/bendemboski/followers", "following_url": "https://api.github.com/users/bendemboski/following{/other_user}", "gists_url": "https://api.github.com/users/bendemboski/gists{/gist_id}", "starred_url": "https://api.github.com/users/bendemboski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bendemboski/subscriptions", "organizations_url": "https://api.github.com/users/bendemboski/orgs", "repos_url": "https://api.github.com/users/bendemboski/repos", "events_url": "https://api.github.com/users/bendemboski/events{/privacy}", "received_events_url": "https://api.github.com/users/bendemboski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-26T09:03:07Z", "updated_at": "2017-04-13T12:18:19Z", "closed_at": "2017-04-13T12:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "ab395a0a19a52afaec3047e43a7b52b9b31d8313 re-fixed #107 but missed by one version. As you can see [here](http://python-future.org/stdlib_incompatibilities.html#struct-pack) or in the [2.7.7 changelog](https://hg.python.org/cpython/raw-file/f89216059edf/Misc/NEWS), the fix for issue 19099, which is what switched to requiring strings, wasn't introduced until 2.7.7.\r\n\r\nSo ab395a0a19a52afaec3047e43a7b52b9b31d8313 fixed the issue for all python versions except 2.7.6. [This line](https://github.com/celery/py-amqp/blob/4c382e0feb88a45a779100c970ecc65b91c03dae/amqp/platform.py#L45) just needs to be changed to\r\n\r\n```python\r\nif sys.version_info < (2, 7, 7):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/124", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/124/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/124/events", "html_url": "https://github.com/celery/py-amqp/issues/124", "id": 197121063, "node_id": "MDU6SXNzdWUxOTcxMjEwNjM=", "number": 124, "title": "AMQP 2.1.4 fails on FreeBSD 9.2 with OperationError: [Errno 42] Protocol not available", "user": {"login": "dhebvvs", "id": 20160935, "node_id": "MDQ6VXNlcjIwMTYwOTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/20160935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhebvvs", "html_url": "https://github.com/dhebvvs", "followers_url": "https://api.github.com/users/dhebvvs/followers", "following_url": "https://api.github.com/users/dhebvvs/following{/other_user}", "gists_url": "https://api.github.com/users/dhebvvs/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhebvvs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhebvvs/subscriptions", "organizations_url": "https://api.github.com/users/dhebvvs/orgs", "repos_url": "https://api.github.com/users/dhebvvs/repos", "events_url": "https://api.github.com/users/dhebvvs/events{/privacy}", "received_events_url": "https://api.github.com/users/dhebvvs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-22T08:35:59Z", "updated_at": "2019-01-13T12:15:27Z", "closed_at": "2019-01-13T12:15:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Versions of packages involved:\r\n- Python 2.7.9\r\n- celery 4.0.2\r\n- kombu 4.0.2\r\n- amqp 2.1.4\r\n\r\nAs a temporary fix we have downgraded to amqp 2.1.3, which seems to still work.\r\n\r\nSee: https://github.com/celery/py-amqp/blob/v2.1.3/amqp/transport.py#L194\r\n\r\nWe use the `pyamqp://`-protoco in Celeryl, the RabbitMQ server is running version 3.6.6.\r\n\r\nStacktrace:\r\n\r\n```\r\n  File \".../site-packages/celery/app/base.py\", line 737, in send_task\r\n    amqp.send_task_message(P, name, message, **options)\r\n  File \"/usr/local/lib/python2.7/contextlib.py\", line 35, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \".../site-packages/kombu/connection.py\", line 419, in _reraise_as_library_errors\r\n    sys.exc_info()[2])\r\n  File \".../site-packages/kombu/connection.py\", line 414, in _reraise_as_library_errors\r\n    yield\r\n  File \".../site-packages/celery/app/base.py\", line 736, in send_task\r\n    self.backend.on_task_call(P, task_id)\r\n  File \".../site-packages/celery/backends/rpc.py\", line 168, in on_task_call\r\n    maybe_declare(self.binding(producer.channel), retry=True)\r\n  File \".../site-packages/kombu/messaging.py\", line 209, in _get_channel\r\n    channel = self._channel = channel()\r\n  File \".../site-packages/kombu/utils/functional.py\", line 38, in __call__\r\n    value = self.__value__ = self.__contract__()\r\n  File \".../site-packages/kombu/messaging.py\", line 224, in <lambda>\r\n    channel = ChannelPromise(lambda: connection.default_channel)\r\n  File \".../site-packages/kombu/connection.py\", line 819, in default_channel\r\n    self.connection\r\n  File \".../site-packages/kombu/connection.py\", line 802, in connection\r\n    self._connection = self._establish_connection()\r\n  File \".../site-packages/kombu/connection.py\", line 757, in _establish_connection\r\n    conn = self.transport.establish_connection()\r\n  File \".../site-packages/kombu/transport/pyamqp.py\", line 130, in establish_connection\r\n    conn.connect()\r\n  File \".../site-packages/amqp/connection.py\", line 294, in connect\r\n    self.transport.connect()\r\n  File \".../site-packages/amqp/transport.py\", line 122, in connect\r\n    self.socket_settings, self.read_timeout, self.write_timeout,\r\n  File \".../site-packages/amqp/transport.py\", line 174, in _init_socket\r\n    self._set_socket_options(socket_settings)\r\n  File \".../site-packages/amqp/transport.py\", line 198, in _set_socket_options\r\n    tcp_opts = self._get_tcp_socket_defaults(self.sock)\r\n  File \".../site-packages/amqp/transport.py\", line 194, in _get_tcp_socket_defaults\r\n    opt: sock.getsockopt(SOL_TCP, opt) for opt in TCP_OPTS\r\n  File \".../site-packages/amqp/transport.py\", line 194, in <dictcomp>\r\n    opt: sock.getsockopt(SOL_TCP, opt) for opt in TCP_OPTS\r\n  File \"/usr/local/lib/python2.7/socket.py\", line 224, in meth\r\n    return getattr(self._sock,name)(*args)\r\nOperationalError: [Errno 42] Protocol not available\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/123", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/123/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/123/events", "html_url": "https://github.com/celery/py-amqp/issues/123", "id": 196887386, "node_id": "MDU6SXNzdWUxOTY4ODczODY=", "number": 123, "title": "Is there a user guide", "user": {"login": "taoqf", "id": 15901911, "node_id": "MDQ6VXNlcjE1OTAxOTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/15901911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taoqf", "html_url": "https://github.com/taoqf", "followers_url": "https://api.github.com/users/taoqf/followers", "following_url": "https://api.github.com/users/taoqf/following{/other_user}", "gists_url": "https://api.github.com/users/taoqf/gists{/gist_id}", "starred_url": "https://api.github.com/users/taoqf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taoqf/subscriptions", "organizations_url": "https://api.github.com/users/taoqf/orgs", "repos_url": "https://api.github.com/users/taoqf/repos", "events_url": "https://api.github.com/users/taoqf/events{/privacy}", "received_events_url": "https://api.github.com/users/taoqf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-21T09:43:01Z", "updated_at": "2017-03-30T07:50:19Z", "closed_at": "2017-03-30T07:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where can i find a user guide?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/122", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/122/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/122/events", "html_url": "https://github.com/celery/py-amqp/issues/122", "id": 196836337, "node_id": "MDU6SXNzdWUxOTY4MzYzMzc=", "number": 122, "title": "heartbeats due to Error", "user": {"login": "taoqf", "id": 15901911, "node_id": "MDQ6VXNlcjE1OTAxOTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/15901911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taoqf", "html_url": "https://github.com/taoqf", "followers_url": "https://api.github.com/users/taoqf/followers", "following_url": "https://api.github.com/users/taoqf/following{/other_user}", "gists_url": "https://api.github.com/users/taoqf/gists{/gist_id}", "starred_url": "https://api.github.com/users/taoqf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taoqf/subscriptions", "organizations_url": "https://api.github.com/users/taoqf/orgs", "repos_url": "https://api.github.com/users/taoqf/repos", "events_url": "https://api.github.com/users/taoqf/events{/privacy}", "received_events_url": "https://api.github.com/users/taoqf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-21T03:16:08Z", "updated_at": "2016-12-21T09:40:12Z", "closed_at": "2016-12-21T09:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I use Hearbeats, I see this Error when timeout.\r\n```bash\r\n2016-12-21 10:59:13,954 - CRITICAL - [Errno 104] Connection reset by peer\r\nTraceback (most recent call last):\r\n  File \"./server.py\", line 125, in <module>\r\n    main()\r\n  File \"./server.py\", line 121, in main\r\n    channel.close()\r\n  File \"/home/user/anaconda3/lib/python3.5/site-packages/amqp/channel.py\", line 178, in close\r\n    self._send_method((20, 40), args)\r\n  File \"/home/user/anaconda3/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 56, in _send_method\r\n    self.channel_id, method_sig, args, content,\r\n  File \"/home/user/anaconda3/lib/python3.5/site-packages/amqp/method_framing.py\", line 221, in write_method\r\n    write_frame(1, channel, payload)\r\n  File \"/home/user/anaconda3/lib/python3.5/site-packages/amqp/transport.py\", line 182, in write_frame\r\n    frame_type, channel, size, payload, 0xce,\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n```\r\nI use amqp like this:\r\n```python\r\ndef main():\r\n\tconnection = amqp.Connection(host = '127.0.0.1:5672', heartbeat = 1)\r\n\r\n\tchannel = connection.channel()\r\n\r\n\tqueue = channel.queue_declare(queue = 'myqueue', durable = True, auto_delete = False)\r\n\tqueue_name = queue.queue\r\n\tchannel.exchange_declare('myex', type='direct', durable = True, auto_delete = False)\r\n\r\n\tchannel.queue_bind(queue_name, 'myex', 'myroutingkey')\r\n\tchannel.basic_qos(prefetch_size = 0, prefetch_count = 2, a_global = False)\r\n\tchannel.basic_consume(callback = __on_message, queue = queue_name)\r\n\r\n\ttry:\r\n\t\twhile True:\r\n\t\t\tconnection.drain_events()\r\n\texcept KeyboardInterrupt:\r\n\t\tlogging.info(\"Python service stoped...........^v^\")\r\n\t\t# Someone pressed CTRL-C, stop consuming and close\r\n\texcept Exception as ex:\r\n\t\tlogging.critical(ex)\r\n\tfinally:\r\n\t\tchannel.close()\r\n\t\tconnection.close()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/119", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/119/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/119/events", "html_url": "https://github.com/celery/py-amqp/issues/119", "id": 195087403, "node_id": "MDU6SXNzdWUxOTUwODc0MDM=", "number": 119, "title": "LINUX_VERSION doesn't cope with Raspbian", "user": {"login": "geuben", "id": 6205575, "node_id": "MDQ6VXNlcjYyMDU1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6205575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geuben", "html_url": "https://github.com/geuben", "followers_url": "https://api.github.com/users/geuben/followers", "following_url": "https://api.github.com/users/geuben/following{/other_user}", "gists_url": "https://api.github.com/users/geuben/gists{/gist_id}", "starred_url": "https://api.github.com/users/geuben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geuben/subscriptions", "organizations_url": "https://api.github.com/users/geuben/orgs", "repos_url": "https://api.github.com/users/geuben/repos", "events_url": "https://api.github.com/users/geuben/events{/privacy}", "received_events_url": "https://api.github.com/users/geuben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-12T21:14:15Z", "updated_at": "2016-12-14T22:40:03Z", "closed_at": "2016-12-14T22:40:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nif sys.platform.startswith('linux'):\r\n    LINUX_VERSION = tuple(map(\r\n        int, platform.release().split('-')[0].split('.')))\r\n```\r\n\r\n`uname -a` on jessie gives `Linux raspberrypi 4.4.34+ #930 Wed Nov 23 15:12:30 GMT 2016 armv6l GNU/Linux`\r\n\r\nThe above code doesn't like the '+'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/118", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/118/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/118/events", "html_url": "https://github.com/celery/py-amqp/issues/118", "id": 194586257, "node_id": "MDU6SXNzdWUxOTQ1ODYyNTc=", "number": 118, "title": "Failing with non-numeric character in system platform version", "user": {"login": "btx", "id": 278995, "node_id": "MDQ6VXNlcjI3ODk5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/278995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btx", "html_url": "https://github.com/btx", "followers_url": "https://api.github.com/users/btx/followers", "following_url": "https://api.github.com/users/btx/following{/other_user}", "gists_url": "https://api.github.com/users/btx/gists{/gist_id}", "starred_url": "https://api.github.com/users/btx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btx/subscriptions", "organizations_url": "https://api.github.com/users/btx/orgs", "repos_url": "https://api.github.com/users/btx/repos", "events_url": "https://api.github.com/users/btx/events{/privacy}", "received_events_url": "https://api.github.com/users/btx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T12:34:09Z", "updated_at": "2016-12-14T23:12:00Z", "closed_at": "2016-12-14T23:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to deploy on Google Container Engine and getting an error:\r\n\r\n```\r\n2016-12-09T11:57:58.009428208Z   File \"/usr/local/lib/python3.5/site-packages/amqp/platform.py\", line 16, in <module>\r\n2016-12-09T11:57:58.009641843Z     int, platform.release().split('-')[0].split('.')))\r\n2016-12-09T11:57:58.009717914Z ValueError: invalid literal for int() with base 10: '21+\r\n```\r\n\r\nMy platform version contains non-numeric char ('+' in my case):\r\n```\r\npython -c \"import sys, platform;print(sys.platform, platform.release())\"\r\n('linux2', '4.4.21+')\r\n```\r\n\r\n```\r\n$ uname -a\r\nLinux gke-rocket-1-default-pool-f999dd8e-qcv7 4.4.21+ #1 SMP Wed Oct 26 13:00:52 PDT 2016 x86_64 Intel(R) Xeon(R) CPU @ 2.50GHz GenuineIntel GNU/Linux\r\n```\r\n\r\nCelery and kombu version is 4.0.1, amqp 2.1.3.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/113", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/113/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/113/events", "html_url": "https://github.com/celery/py-amqp/issues/113", "id": 189375299, "node_id": "MDU6SXNzdWUxODkzNzUyOTk=", "number": 113, "title": "Unrecoverable error: TypeError(\"'NoneType' object is not callable\",)", "user": {"login": "johnmilimo", "id": 2853404, "node_id": "MDQ6VXNlcjI4NTM0MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2853404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnmilimo", "html_url": "https://github.com/johnmilimo", "followers_url": "https://api.github.com/users/johnmilimo/followers", "following_url": "https://api.github.com/users/johnmilimo/following{/other_user}", "gists_url": "https://api.github.com/users/johnmilimo/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnmilimo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnmilimo/subscriptions", "organizations_url": "https://api.github.com/users/johnmilimo/orgs", "repos_url": "https://api.github.com/users/johnmilimo/repos", "events_url": "https://api.github.com/users/johnmilimo/events{/privacy}", "received_events_url": "https://api.github.com/users/johnmilimo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9999388, "node_id": "MDU6TGFiZWw5OTk5Mzg4", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Bug", "name": "Issue Type: Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-11-15T12:09:41Z", "updated_at": "2017-12-22T07:19:01Z", "closed_at": "2017-12-22T07:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Celery 4 and it doesn't work fine for me. I tried using librabbitmq AMQP client but the workers couldn't consume items from the queues. I then switched to pyamqp and the workers started consuming the items. The problem I have is that when I stop the workers and push items to queue, then start the workers, I get an error.\r\n\r\n![x1](https://cloud.githubusercontent.com/assets/2853404/20305169/4018caae-ab45-11e6-9478-81d4097314cc.png)\r\n\r\n\r\n![x2](https://cloud.githubusercontent.com/assets/2853404/20305186/5c4ae31a-ab45-11e6-939b-a130742fdcad.png)\r\n\r\n\r\n\r\nThe above error gets thrown if items are pushed to queue before running workers.\r\n\r\nIf workers are run before pushing tasks to queue, all works fine.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/111", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/111/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/111/events", "html_url": "https://github.com/celery/py-amqp/issues/111", "id": 181755424, "node_id": "MDU6SXNzdWUxODE3NTU0MjQ=", "number": 111, "title": "connection.connected returns None instead of True in 2.1.0", "user": {"login": "scheler", "id": 2802664, "node_id": "MDQ6VXNlcjI4MDI2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2802664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scheler", "html_url": "https://github.com/scheler", "followers_url": "https://api.github.com/users/scheler/followers", "following_url": "https://api.github.com/users/scheler/following{/other_user}", "gists_url": "https://api.github.com/users/scheler/gists{/gist_id}", "starred_url": "https://api.github.com/users/scheler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scheler/subscriptions", "organizations_url": "https://api.github.com/users/scheler/orgs", "repos_url": "https://api.github.com/users/scheler/repos", "events_url": "https://api.github.com/users/scheler/events{/privacy}", "received_events_url": "https://api.github.com/users/scheler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-07T19:59:54Z", "updated_at": "2019-01-18T20:44:09Z", "closed_at": "2019-01-18T20:44:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "connection.connected returns None instead of True in release 2.1.0.  Can this be fixed?\n\n```\n$ cat foo.py \nfrom kombu import Connection\nconnection = Connection('amqp://guest:guest@localhost:5672//')\nconnection.connect()\nprint connection.connected\nconnection.close()\n\n\n$ pip install -q amqp==1.4.9\n$ python foo.py\nTrue\n$ pip install -q amqp==2.1.0\n$ python foo.py\nNone\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/109", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/109/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/109/events", "html_url": "https://github.com/celery/py-amqp/issues/109", "id": 180030276, "node_id": "MDU6SXNzdWUxODAwMzAyNzY=", "number": 109, "title": "struct.error: pack_into requires a buffer of at least 130101 bytes", "user": {"login": "grillazz", "id": 3415861, "node_id": "MDQ6VXNlcjM0MTU4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3415861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grillazz", "html_url": "https://github.com/grillazz", "followers_url": "https://api.github.com/users/grillazz/followers", "following_url": "https://api.github.com/users/grillazz/following{/other_user}", "gists_url": "https://api.github.com/users/grillazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/grillazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grillazz/subscriptions", "organizations_url": "https://api.github.com/users/grillazz/orgs", "repos_url": "https://api.github.com/users/grillazz/repos", "events_url": "https://api.github.com/users/grillazz/events{/privacy}", "received_events_url": "https://api.github.com/users/grillazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-29T12:05:24Z", "updated_at": "2016-10-14T01:51:33Z", "closed_at": "2016-10-14T01:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nHave below error msg when testing celery==4.0.0rc4 with XML files\n\n``` python\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 294, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 345, in execute\n    output = self.handle(*args, **options)\n  File \"/usr/local/lib/python3.5/contextlib.py\", line 30, in inner\n    return func(*args, **kwds)\n  File \"/code/opta/management/commands/reload_opta_feed.py\", line 63, in handle\n    refresh_document.delay(feed, xml_body, options['feed_type'].capitalize())\n  File \"/usr/local/lib/python3.5/site-packages/celery/app/task.py\", line 395, in delay\n    return self.apply_async(args, kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/celery/app/task.py\", line 510, in apply_async\n    **options\n  File \"/usr/local/lib/python3.5/site-packages/celery/app/base.py\", line 665, in send_task\n    amqp.send_task_message(P, name, message, **options)\n  File \"/usr/local/lib/python3.5/site-packages/celery/app/amqp.py\", line 547, in send_task_message\n    **properties\n  File \"/usr/local/lib/python3.5/site-packages/kombu/messaging.py\", line 176, in publish\n    exchange_name, declare,\n  File \"/usr/local/lib/python3.5/site-packages/kombu/connection.py\", line 488, in _ensured\n    return fun(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/kombu/messaging.py\", line 198, in _publish\n    mandatory=mandatory, immediate=immediate,\n  File \"/usr/local/lib/python3.5/site-packages/amqp/channel.py\", line 1770, in _basic_publish\n    (0, exchange, routing_key, mandatory, immediate), msg\n  File \"/usr/local/lib/python3.5/site-packages/amqp/abstract_channel.py\", line 62, in send_method\n    conn.frame_writer(1, self.channel_id, sig, args, content)\n  File \"/usr/local/lib/python3.5/site-packages/amqp/method_framing.py\", line 160, in write_frame\n    3, channel, framelen, str_to_bytes(body), 0xce)\nstruct.error: pack_into requires a buffer of at least 130101 bytes\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/107", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/107/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/107/events", "html_url": "https://github.com/celery/py-amqp/issues/107", "id": 177024083, "node_id": "MDU6SXNzdWUxNzcwMjQwODM=", "number": 107, "title": "Cannot import amqp with Python-2.7.5 (TypeError: Struct() argument 1 must be string, not unicode)", "user": {"login": "bsergean", "id": 11857745, "node_id": "MDQ6VXNlcjExODU3NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/11857745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsergean", "html_url": "https://github.com/bsergean", "followers_url": "https://api.github.com/users/bsergean/followers", "following_url": "https://api.github.com/users/bsergean/following{/other_user}", "gists_url": "https://api.github.com/users/bsergean/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsergean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsergean/subscriptions", "organizations_url": "https://api.github.com/users/bsergean/orgs", "repos_url": "https://api.github.com/users/bsergean/repos", "events_url": "https://api.github.com/users/bsergean/events{/privacy}", "received_events_url": "https://api.github.com/users/bsergean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-09-14T21:19:07Z", "updated_at": "2017-11-02T07:24:01Z", "closed_at": "2016-10-14T01:56:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the default CentOS 7 version of Python\n\n```\n(venv) $ python\nPython 2.7.5 (default, Jun 17 2014, 18:11:42) \n[GCC 4.8.2 20140120 (Red Hat 4.8.2-16)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from amqp import ChannelError, ConnectionError, ResourceError\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"venv/lib/python2.7/site-packages/amqp/__init__.py\", line 48, in <module>\n    from .basic_message import Message      # noqa\n  File \"venv/lib/python2.7/site-packages/amqp/basic_message.py\", line 29, in <module>\n    from .serialization import GenericContent\n  File \"venv/lib/python2.7/site-packages/amqp/serialization.py\", line 33, in <module>\n    from .exceptions import FrameSyntaxError\n  File \"venv/lib/python2.7/site-packages/amqp/exceptions.py\", line 264, in <module>\n    _method_name\nTypeError: Struct() argument 1 must be string, not unicode\n```\n\nIt works fine on latest OSX\n\n```\n(venv) $ python\nPython 2.7.10 (default, Oct 23 2015, 19:19:21) \n[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from amqp import ChannelError, ConnectionError, ResourceError\n>>> \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/106", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/106/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/106/events", "html_url": "https://github.com/celery/py-amqp/issues/106", "id": 175754574, "node_id": "MDU6SXNzdWUxNzU3NTQ1NzQ=", "number": 106, "title": "Support the 'Auth Failure' RabbitMQ protocol extension", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-08T13:33:01Z", "updated_at": "2016-09-14T07:48:53Z", "closed_at": "2016-09-13T19:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whilst the AMQP 0-9-1 spec requires brokers to terminate a connection upon authentication failure, rabbitmq-server has a protocol extension that allows clients who advertise the `authentication_failure_close` capability to instead have the broker send a `connection.close` command to the client with `ACCESS_REFUSED` as the reason.\n\nIt would be great to add support for this capability to py-amqp, similar to what was done in rabbitmq-c in alanxz/rabbitmq-c#196, which will help improve the UX seen in celery/kombu#611.\n\nFor more details, see:\nhttp://www.rabbitmq.com/auth-notification.html\n\nMany thanks :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/105", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/105/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/105/events", "html_url": "https://github.com/celery/py-amqp/issues/105", "id": 175579991, "node_id": "MDU6SXNzdWUxNzU1Nzk5OTE=", "number": 105, "title": "API Update", "user": {"login": "JoelBender", "id": 10273490, "node_id": "MDQ6VXNlcjEwMjczNDkw", "avatar_url": "https://avatars3.githubusercontent.com/u/10273490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelBender", "html_url": "https://github.com/JoelBender", "followers_url": "https://api.github.com/users/JoelBender/followers", "following_url": "https://api.github.com/users/JoelBender/following{/other_user}", "gists_url": "https://api.github.com/users/JoelBender/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelBender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelBender/subscriptions", "organizations_url": "https://api.github.com/users/JoelBender/orgs", "repos_url": "https://api.github.com/users/JoelBender/repos", "events_url": "https://api.github.com/users/JoelBender/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelBender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-07T19:00:01Z", "updated_at": "2016-09-08T04:26:23Z", "closed_at": "2016-09-08T04:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have RPC client/server applications [here](https://github.com/JoelBender/amqp-rpc) that work with the 1.4.9 version of the library but I'm struggling to get them working with the current release.  Apart from calling `channel.connect()`, there is now a required parameter to `channel.wait()` and I don't understand what `method` to pass.  The `basic_cancel()` call doesn't \"break\" the `wait()`.  Help is appreciated, thank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/103", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/103/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/103/events", "html_url": "https://github.com/celery/py-amqp/issues/103", "id": 170411624, "node_id": "MDU6SXNzdWUxNzA0MTE2MjQ=", "number": 103, "title": "generator already executing", "user": {"login": "chripede", "id": 406836, "node_id": "MDQ6VXNlcjQwNjgzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-10T13:03:18Z", "updated_at": "2016-09-07T23:37:48Z", "closed_at": "2016-09-07T23:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "My celery jobs started throwing this error after upgrading from amqp 1.4.9 to 2.0.4\n\n```\n[2016-08-10 14:57:54,695: ERROR/MainProcess] Unrecoverable error: ValueError('generator already executing',)\nTraceback (most recent call last):\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/worker/__init__.py\", line 206, in start\n    self.blueprint.start(self)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 123, in start\n    step.start(parent)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 374, in start\n    return self.obj.start()\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/worker/consumer.py\", line 279, in start\n    blueprint.start(self)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 123, in start\n    step.start(parent)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/worker/consumer.py\", line 838, in start\n    c.loop(*c.loop_args())\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/worker/loops.py\", line 101, in synloop\n    qos.update()\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/kombu/common.py\", line 400, in update\n    return self.set(self.value)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/kombu/common.py\", line 393, in set\n    self.callback(prefetch_count=new_value)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/celery/worker/consumer.py\", line 615, in set_prefetch_count\n    apply_global=qos_global,\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/kombu/messaging.py\", line 533, in qos\n    apply_global)\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/amqp/channel.py\", line 1851, in basic_qos\n    wait=spec.Basic.QosOk,\n  File \"/home/accuranker/.virtualenvs/grank/local/lib/python2.7/site-packages/amqp/abstract_channel.py\", line 62, in send_method\n    conn.frame_writer.send((1, self.channel_id, sig, args, content))\nValueError: generator already executing\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/102", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/102/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/102/events", "html_url": "https://github.com/celery/py-amqp/issues/102", "id": 169192250, "node_id": "MDU6SXNzdWUxNjkxOTIyNTA=", "number": 102, "title": "please tag v2.0.4 ", "user": {"login": "hairmare", "id": 116588, "node_id": "MDQ6VXNlcjExNjU4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/116588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hairmare", "html_url": "https://github.com/hairmare", "followers_url": "https://api.github.com/users/hairmare/followers", "following_url": "https://api.github.com/users/hairmare/following{/other_user}", "gists_url": "https://api.github.com/users/hairmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/hairmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hairmare/subscriptions", "organizations_url": "https://api.github.com/users/hairmare/orgs", "repos_url": "https://api.github.com/users/hairmare/repos", "events_url": "https://api.github.com/users/hairmare/events{/privacy}", "received_events_url": "https://api.github.com/users/hairmare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-03T17:50:49Z", "updated_at": "2016-08-04T17:29:32Z", "closed_at": "2016-08-04T17:29:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just spent hours pulling my teeth on CentOS 7.2 before figuring out that I need https://github.com/celery/py-amqp/commit/9167f6569e5f48fcb37e6eda8caf9ce81de2dc93.\n\nCould you tag a new release to make it easier for me to package a new rpm.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/100", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/100/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/100/events", "html_url": "https://github.com/celery/py-amqp/issues/100", "id": 164172684, "node_id": "MDU6SXNzdWUxNjQxNzI2ODQ=", "number": 100, "title": "Can't specify default ssl arguments when creating a Connection", "user": {"login": "bbgwilbur", "id": 17887258, "node_id": "MDQ6VXNlcjE3ODg3MjU4", "avatar_url": "https://avatars2.githubusercontent.com/u/17887258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbgwilbur", "html_url": "https://github.com/bbgwilbur", "followers_url": "https://api.github.com/users/bbgwilbur/followers", "following_url": "https://api.github.com/users/bbgwilbur/following{/other_user}", "gists_url": "https://api.github.com/users/bbgwilbur/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbgwilbur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbgwilbur/subscriptions", "organizations_url": "https://api.github.com/users/bbgwilbur/orgs", "repos_url": "https://api.github.com/users/bbgwilbur/repos", "events_url": "https://api.github.com/users/bbgwilbur/events{/privacy}", "received_events_url": "https://api.github.com/users/bbgwilbur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405287751, "node_id": "MDU6TGFiZWw0MDUyODc3NTE=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20SSL", "name": "Component: SSL", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-06T20:59:52Z", "updated_at": "2016-07-12T03:01:17Z", "closed_at": "2016-07-12T03:01:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> c = amqp.connection.Connection( ssl={} )\n>>> c.connect()\n>>> c.transport\n<amqp.transport.TCPTransport object at 0x7f8f4a7ad650>\n```\n\nPassing an empty dictionary causes this line to pick a TCPTransport for you: https://github.com/celery/py-amqp/blob/master/amqp/transport.py#L395\n\n```\n>>> import amqp\n>>> c = amqp.connection.Connection( ssl=True )\n>>> c.connect()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"amqp/connection.py\", line 272, in connect\n    self.transport.connect()\n  File \"amqp/transport.py\", line 102, in connect\n    self.socket_settings, self.read_timeout, self.write_timeout,\n  File \"amqp/transport.py\", line 176, in _init_socket\n    self._setup_transport()\n  File \"amqp/transport.py\", line 286, in _setup_transport\n    self.sock = self._wrap_socket(self.sock, **self.sslopts or {})\nAttributeError: 'SSLTransport' object has no attribute 'sslopts'\n```\n\nPassing `True` causes this exception to be raised since this line never executes: https://github.com/celery/py-amqp/blob/master/amqp/transport.py#L279\n\nIt seems like the user is forced to specify _some_ arguments to ssl, leaving no way to specify that we want all defaults.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/99", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/99/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/99/events", "html_url": "https://github.com/celery/py-amqp/issues/99", "id": 162548846, "node_id": "MDU6SXNzdWUxNjI1NDg4NDY=", "number": 99, "title": "Broken Bitdeli image in README.md", "user": {"login": "malekhr", "id": 16504541, "node_id": "MDQ6VXNlcjE2NTA0NTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/16504541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malekhr", "html_url": "https://github.com/malekhr", "followers_url": "https://api.github.com/users/malekhr/followers", "following_url": "https://api.github.com/users/malekhr/following{/other_user}", "gists_url": "https://api.github.com/users/malekhr/gists{/gist_id}", "starred_url": "https://api.github.com/users/malekhr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malekhr/subscriptions", "organizations_url": "https://api.github.com/users/malekhr/orgs", "repos_url": "https://api.github.com/users/malekhr/repos", "events_url": "https://api.github.com/users/malekhr/events{/privacy}", "received_events_url": "https://api.github.com/users/malekhr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-27T21:09:11Z", "updated_at": "2016-06-28T03:23:31Z", "closed_at": "2016-06-28T03:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Probably due to the fact Bitdeli doesn't exist anymore or it's just offline at the moment\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/98", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/98/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/98/events", "html_url": "https://github.com/celery/py-amqp/issues/98", "id": 160330279, "node_id": "MDU6SXNzdWUxNjAzMzAyNzk=", "number": 98, "title": "No timeout set on socket!", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-15T03:18:58Z", "updated_at": "2016-06-29T06:29:05Z", "closed_at": "2016-06-29T06:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to diagnose some really annoying issues with a connection getting wedged and stopping responding, and from what I can tell, the internal AMQP ssl socket is put into blocking mode with no timeout, and left that way.\n\nThis is (I think) leading to a context where if the remote end goes away while in a blocking read (I think), my code blocks forever and can never recover.\n\nLooking in `transport.py`, the passed socket is intialized with the [desired timeout](https://github.com/celery/py-amqp/blob/master/amqp/transport.py#L152) in the connect call, but the `connect()` call is [immediately followed](https://github.com/celery/py-amqp/blob/master/amqp/transport.py#L100-L101) by a call to `_init_socket()` which then sets the socket back in [blocking mode](https://github.com/celery/py-amqp/blob/master/amqp/transport.py#L164), which is then never changed.\n\nThere is the later call to `self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_SNDTIMEO, write_timeout)`, and `SO_SNDTIMEO`, but unless this is causing the python socket management class to get out of sync with the actual socket configuration, it doesn't have a set timeout (calling `self.connection.transport.sock.gettimeout()` on an open connection returns `None`, and the source behind that call is hidden in a C file somewhere).\n\n---\n### Edit:\n\nOk, this might be what's happening, it [looks like](https://github.com/python/cpython/blob/e8a055f3b2255913942b918243d09368e57e985d/Modules/socketmodule.c#L2418-L2428) `gettimeout()` just returns the contents of a struct member from the python socket class instance. It _is_ worth noting that unless that timeout value is set, some of the internal behaviour of the socket class will change (search for `sock_timeout` in that file), so setting the timeout to non-none may be required to get all the expected socket behaviour.\n\n---\n\nAnyways, I'm specifying a value for `SO_SNDTIMEO` _and_ `SO_RCVTIMEO` and _still_ somehow getting wedged, so I'm a little desperate at this point.\n\nIn any event, is there any reason that this even needs to be done? It seems something like \n\n```\n\n            self.sock.settimeout(\n                max(read_timeout, write_timeout) if read_timeout and write_timeout else None\n                )  # set socket back to blocking mode\n```\n\nwould preserve the timeout overall if the end-user sets them both, while leaving it the way it is if the user doesn't specify the timeouts fully.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/97", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/97/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/97/events", "html_url": "https://github.com/celery/py-amqp/issues/97", "id": 158697404, "node_id": "MDU6SXNzdWUxNTg2OTc0MDQ=", "number": 97, "title": "Docs version 'latest' missing changelog entries for 2.x", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-06T14:52:58Z", "updated_at": "2019-03-25T12:00:33Z", "closed_at": "2016-06-11T00:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Visiting https://amqp.readthedocs.io/ redirects to the `latest` version tag of the docs.\n\nHowever these don't mention v2.x on the changelog, instead only <= 1.4.9:\nhttps://amqp.readthedocs.io/en/latest/changelog.html\n(I've even tried forcing a RTD rebuild using https://readthedocs.org/projects/amqp/builds/)\n\nStrangely the `stable` version does have those changelog entries:\nhttps://amqp.readthedocs.io/en/stable/changelog.html\n(Though as #94 notes, the banner there about it being for a development version is incorrect)\n\nIt seems as though `latest` and `master` on readthedocs could be combined, and the default version tag be made to be `stable`?\n\nAlso the readme mentions both 0.9.1 and 2.0.0rc2, rather than 2.0.1:\nhttps://github.com/celery/py-amqp/blame/b12272c54a88ad428a7eaf837280f136b7252e08/README.rst#L2\nhttps://github.com/celery/py-amqp/blame/b12272c54a88ad428a7eaf837280f136b7252e08/README.rst#L7\n\nMany thanks :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/94", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/94/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/94/events", "html_url": "https://github.com/celery/py-amqp/issues/94", "id": 158339861, "node_id": "MDU6SXNzdWUxNTgzMzk4NjE=", "number": 94, "title": "Is 2.0 the stable version?", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-03T10:41:36Z", "updated_at": "2016-06-07T05:40:28Z", "closed_at": "2016-06-07T05:40:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [docs](http://py-amqp.readthedocs.io/en/latest/index.html) say \"This document is for py-amqp's development version, which can be significantly different from previous releases. Get the stable docs here: 1.4.\"\n\nThis can now be removed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/91", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/91/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/91/events", "html_url": "https://github.com/celery/py-amqp/issues/91", "id": 157853778, "node_id": "MDU6SXNzdWUxNTc4NTM3Nzg=", "number": 91, "title": "openstack oslo.messaging load failed due to amqp can't find module 'vine' in Python3.4", "user": {"login": "glongwave", "id": 5327758, "node_id": "MDQ6VXNlcjUzMjc3NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5327758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glongwave", "html_url": "https://github.com/glongwave", "followers_url": "https://api.github.com/users/glongwave/followers", "following_url": "https://api.github.com/users/glongwave/following{/other_user}", "gists_url": "https://api.github.com/users/glongwave/gists{/gist_id}", "starred_url": "https://api.github.com/users/glongwave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glongwave/subscriptions", "organizations_url": "https://api.github.com/users/glongwave/orgs", "repos_url": "https://api.github.com/users/glongwave/repos", "events_url": "https://api.github.com/users/glongwave/events{/privacy}", "received_events_url": "https://api.github.com/users/glongwave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-01T08:47:16Z", "updated_at": "2016-06-07T00:59:24Z", "closed_at": "2016-06-07T00:59:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Traceback (most recent call last):\n  File \"/home/jenkins/workspace/gate-smaug-python34/smaug/tests/base.py\", line 92, in setUp\n    self.messaging_conf = messaging_conffixture.ConfFixture(CONF)\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/oslo_messaging/conffixture.py\", line 50, in **init**\n    'oslo_messaging_rabbit')\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/oslo_messaging/conffixture.py\", line 25, in _import_opts\n    __import__(module)\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/oslo_messaging/_drivers/impl_rabbit.py\", line 30, in <module>\n    import kombu.connection\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/kombu/connection.py\", line 19, in <module>\n    from kombu import exceptions\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/kombu/exceptions.py\", line 12, in <module>\n    from amqp import ChannelError, ConnectionError, ResourceError\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/amqp/__init__.py\", line 39, in <module>\n    from .basic_message import Message # noqa\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/amqp/basic_message.py\", line 29, in <module>\n    from .serialization import GenericContent\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/amqp/serialization.py\", line 34, in <module>\n    from .exceptions import FrameSyntaxError\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/amqp/exceptions.py\", line 21, in <module>\n    from .five import python_2_unicode_compatible\n  File \"/home/jenkins/workspace/gate-smaug-python34/.tox/py34/lib/python3.4/site-packages/amqp/five.py\", line 14, in <module>\n    import vine.five\nImportError: No module named 'vine'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/90", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/90/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/90/events", "html_url": "https://github.com/celery/py-amqp/issues/90", "id": 157399848, "node_id": "MDU6SXNzdWUxNTczOTk4NDg=", "number": 90, "title": "[py-amqp 2.0] Race condition on drain_events & channel pending list", "user": {"login": "kbespalov", "id": 15847176, "node_id": "MDQ6VXNlcjE1ODQ3MTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/15847176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbespalov", "html_url": "https://github.com/kbespalov", "followers_url": "https://api.github.com/users/kbespalov/followers", "following_url": "https://api.github.com/users/kbespalov/following{/other_user}", "gists_url": "https://api.github.com/users/kbespalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbespalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbespalov/subscriptions", "organizations_url": "https://api.github.com/users/kbespalov/orgs", "repos_url": "https://api.github.com/users/kbespalov/repos", "events_url": "https://api.github.com/users/kbespalov/events{/privacy}", "received_events_url": "https://api.github.com/users/kbespalov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285470, "node_id": "MDU6TGFiZWw0MDUyODU0NzA=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Connection", "name": "Component: Connection", "color": "fef2c0", "default": false, "description": null}, {"id": 405286935, "node_id": "MDU6TGFiZWw0MDUyODY5MzU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Feedback%20Needed", "name": "Status: Feedback Needed", "color": "bfdadc", "default": false, "description": null}, {"id": 405287313, "node_id": "MDU6TGFiZWw0MDUyODczMTM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Needs%20Verification", "name": "Status: Needs Verification", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-29T18:52:05Z", "updated_at": "2018-09-15T17:37:34Z", "closed_at": "2018-09-15T17:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement a channel multiplexing over connection with one listening thread which just call the `drain_events` in while loop. Other threads creates it's own channels and use them.\n\nBut some channel actions in the threads (e.g channel opening or publishing confirmation) are stucks on the `channel.wait()` method, because `drain_events()` steals a response from the broker and does not dispatch the frame to waiting promise.\n\nAs I understand the problem is the race condition between adding the new pending task in the `channel.wait()` method and calls `drain_events` in the listening thread. Take a look on the next case:\n\n(1) **Thread A**: `run drain_events() in while loop`\n(2) **Thread B**: `send(Channel.Open)`\n(3) **Thread A**: `receive OpenOk and trying to dispatch the frame. But in this time penging list of the channel is empty`\n(4) **Thread B**: `append the new promise to pending list and goto infinity loop:`\n\n```\nwhile not p.ready:\n      self.connection.drain_events(timeout=timeout)\n```\n\nSo, I think the problem can be solved if a promise will be added in the list before calling of `_frame_writer.send()` method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/86", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/86/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/86/events", "html_url": "https://github.com/celery/py-amqp/issues/86", "id": 157123270, "node_id": "MDU6SXNzdWUxNTcxMjMyNzA=", "number": 86, "title": "Missing git tag for 2.0.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-27T03:33:49Z", "updated_at": "2016-05-27T18:01:32Z", "closed_at": "2016-05-27T18:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/85", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/85/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/85/events", "html_url": "https://github.com/celery/py-amqp/issues/85", "id": 157121658, "node_id": "MDU6SXNzdWUxNTcxMjE2NTg=", "number": 85, "title": "ImportError: cannot import name spec", "user": {"login": "MrKiven", "id": 4526759, "node_id": "MDQ6VXNlcjQ1MjY3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4526759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrKiven", "html_url": "https://github.com/MrKiven", "followers_url": "https://api.github.com/users/MrKiven/followers", "following_url": "https://api.github.com/users/MrKiven/following{/other_user}", "gists_url": "https://api.github.com/users/MrKiven/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrKiven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrKiven/subscriptions", "organizations_url": "https://api.github.com/users/MrKiven/orgs", "repos_url": "https://api.github.com/users/MrKiven/repos", "events_url": "https://api.github.com/users/MrKiven/events{/privacy}", "received_events_url": "https://api.github.com/users/MrKiven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-27T03:15:24Z", "updated_at": "2016-06-28T05:28:45Z", "closed_at": "2016-06-28T05:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, we have got this error\n\n`ImportError: cannot import name spec`\n\nwe use `librabbitmq==1.6.1`, `kombu==3.0.33`\n\nTraceback here:\n\n``\nFile \"/srv/ves/arch.note/.venv/lib/python2.7/site-packages/kombu/**init**.py\", line 67, in **getattr**\n\nmodule = **import**(object_origins[name], None, None, [name])\n\nFile \"/srv/ves/arch.note/.venv/lib/python2.7/site-packages/kombu/connection.py\", line 19, in <module>\n\nfrom kombu import exceptions\n\nFile \"/srv/ves/arch.note/.venv/lib/python2.7/site-packages/kombu/exceptions.py\", line 12, in <module>\n\nfrom amqp import ChannelError, ConnectionError, ResourceError\n\nFile \"/srv/ves/arch.note/.venv/lib/python2.7/site-packages/amqp/**init**.py\", line 39, in <module>\n\nfrom .basic_message import Message # noqa\n\nFile \"/srv/ves/arch.note/.venv/lib/python2.7/site-packages/amqp/basic_message.py\", line 19, in <module>\n\nfrom . import spec\n\nImportError: cannot import name spec\n``\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/83", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/83/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/83/events", "html_url": "https://github.com/celery/py-amqp/issues/83", "id": 156307172, "node_id": "MDU6SXNzdWUxNTYzMDcxNzI=", "number": 83, "title": "Exception while handling frame args in PY3", "user": {"login": "nazavode", "id": 1379149, "node_id": "MDQ6VXNlcjEzNzkxNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1379149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazavode", "html_url": "https://github.com/nazavode", "followers_url": "https://api.github.com/users/nazavode/followers", "following_url": "https://api.github.com/users/nazavode/following{/other_user}", "gists_url": "https://api.github.com/users/nazavode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazavode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazavode/subscriptions", "organizations_url": "https://api.github.com/users/nazavode/orgs", "repos_url": "https://api.github.com/users/nazavode/repos", "events_url": "https://api.github.com/users/nazavode/events{/privacy}", "received_events_url": "https://api.github.com/users/nazavode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-23T15:58:28Z", "updated_at": "2016-05-26T20:20:19Z", "closed_at": "2016-05-26T20:20:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running a code using py-amqp/master on Python >= 3, a `TypeError` exception is raised from `method_framing.py` while trying to handle frame args during the connection teardown. Issue is systematic. For example, when running the kombu [hello publisher example](http://docs.celeryproject.org/projects/kombu/en/latest/userguide/examples.html) using Python 3.4 and the latest RabbitMQ, I end up like this:\n\n```\nSent: helloword, sent at 2016-05-23 16:20:11.172310\nTraceback (most recent call last):\n  File \"kombutest.py\", line 9, in <module>\n    simple_queue.close()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/kombu/connection.py\", line 739, in __exit__\n    self.release()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/kombu/connection.py\", line 352, in release\n    self._close()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/kombu/connection.py\", line 318, in _close\n    self._do_close_self()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/kombu/connection.py\", line 311, in _do_close_self\n    self.transport.close_connection(self._connection)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/kombu/transport/pyamqp.py\", line 134, in close_connection\n    connection.close()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 463, in close\n    wait=spec.Connection.CloseOk,\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/abstract_channel.py\", line 71, in send_method\n    return self.wait(wait, returns_tuple=returns_tuple)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/abstract_channel.py\", line 91, in wait\n    self.connection.drain_events(timeout=timeout)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 388, in drain_events\n    return self.blocking_read(timeout)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 393, in blocking_read\n    return self.on_inbound_frame(frame)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/method_framing.py\", line 63, in on_frame\n    callback(channel, method_sig, buf, None)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 397, in on_inbound_method\n    method_sig, payload, content,\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/abstract_channel.py\", line 140, in dispatch_method\n    listener(*args)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 520, in _on_close\n    self._x_close_ok()\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/connection.py\", line 537, in _x_close_ok\n    self.send_method(spec.Connection.CloseOk, callback=self._on_close_ok)\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/abstract_channel.py\", line 62, in send_method\n    conn._frame_writer.send((1, self.channel_id, sig, args, content))\n  File \"/home/fficarelli/python-3.4-virtualenv-01/lib/python3.4/site-packages/amqp/method_framing.py\", line 142, in frame_writer\n    if type_ == 1 else b'')\nTypeError: sequence item 1: expected a bytes-like object, str found\n```\n\nDue to the kind of exception raised and the fact that under PY2 everything seems to work fine, the issue is probably related to the fact that in PY3 strings are bytes no more.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/82", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/82/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/82/events", "html_url": "https://github.com/celery/py-amqp/issues/82", "id": 150467382, "node_id": "MDU6SXNzdWUxNTA0NjczODI=", "number": 82, "title": "Setup.py PyPi licensing metadata and LICENSE file are not aligned", "user": {"login": "gwachob", "id": 20724, "node_id": "MDQ6VXNlcjIwNzI0", "avatar_url": "https://avatars1.githubusercontent.com/u/20724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwachob", "html_url": "https://github.com/gwachob", "followers_url": "https://api.github.com/users/gwachob/followers", "following_url": "https://api.github.com/users/gwachob/following{/other_user}", "gists_url": "https://api.github.com/users/gwachob/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwachob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwachob/subscriptions", "organizations_url": "https://api.github.com/users/gwachob/orgs", "repos_url": "https://api.github.com/users/gwachob/repos", "events_url": "https://api.github.com/users/gwachob/events{/privacy}", "received_events_url": "https://api.github.com/users/gwachob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285405, "node_id": "MDU6TGFiZWw0MDUyODU0MDU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Packaging%20and%20Release%20Management", "name": "Category: Packaging and Release Management", "color": "0052cc", "default": false, "description": null}, {"id": 405286103, "node_id": "MDU6TGFiZWw0MDUyODYxMDM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Task", "name": "Issue Type: Task", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-22T20:45:11Z", "updated_at": "2016-08-22T13:41:07Z", "closed_at": "2016-08-15T18:36:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks-\n   I'm tasked with going through the licensing on  dependencies on a project, and I've noticed that the licensing trove classifiers indicate both BSD and LGPL, but the LICENSE file only contains LGPL. Can this be clarified (either by removing the line from the setup.py or modifying/extending the LICENSE file)? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/76", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/76/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/76/events", "html_url": "https://github.com/celery/py-amqp/issues/76", "id": 124431121, "node_id": "MDU6SXNzdWUxMjQ0MzExMjE=", "number": 76, "title": "struct.error: argument for 's' must be a bytes object", "user": {"login": "nszceta", "id": 6969788, "node_id": "MDQ6VXNlcjY5Njk3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6969788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nszceta", "html_url": "https://github.com/nszceta", "followers_url": "https://api.github.com/users/nszceta/followers", "following_url": "https://api.github.com/users/nszceta/following{/other_user}", "gists_url": "https://api.github.com/users/nszceta/gists{/gist_id}", "starred_url": "https://api.github.com/users/nszceta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nszceta/subscriptions", "organizations_url": "https://api.github.com/users/nszceta/orgs", "repos_url": "https://api.github.com/users/nszceta/repos", "events_url": "https://api.github.com/users/nszceta/events{/privacy}", "received_events_url": "https://api.github.com/users/nszceta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-31T04:24:06Z", "updated_at": "2016-01-04T23:52:14Z", "closed_at": "2016-01-04T23:52:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"amqp/method_framing.py\", line 161, in frame_writer\n    3, channel, framelen, body, 0xce)\nstruct.error: argument for 's' must be a bytes object\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/72", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/72/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/72/events", "html_url": "https://github.com/celery/py-amqp/issues/72", "id": 113663474, "node_id": "MDU6SXNzdWUxMTM2NjM0NzQ=", "number": 72, "title": "Error packing illegal values into struct", "user": {"login": "davidharrigan", "id": 5022987, "node_id": "MDQ6VXNlcjUwMjI5ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5022987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidharrigan", "html_url": "https://github.com/davidharrigan", "followers_url": "https://api.github.com/users/davidharrigan/followers", "following_url": "https://api.github.com/users/davidharrigan/following{/other_user}", "gists_url": "https://api.github.com/users/davidharrigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidharrigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidharrigan/subscriptions", "organizations_url": "https://api.github.com/users/davidharrigan/orgs", "repos_url": "https://api.github.com/users/davidharrigan/repos", "events_url": "https://api.github.com/users/davidharrigan/events{/privacy}", "received_events_url": "https://api.github.com/users/davidharrigan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-27T19:33:38Z", "updated_at": "2016-01-08T21:37:05Z", "closed_at": "2016-01-08T21:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**NOTE: I am using development versions of celery, kombu, py-amqp**\n\nI'm following the steps on the documentation to setup SSL for my celery worker (I have a working connection with RabbitMQ broker following these steps using SSL connection: http://www.rabbitmq.com/troubleshooting-ssl.html#logs). I have very minimal configuration, and I am running into this error when I try to fire up my worker:\n\n`struct.error: required argument is not an integer` at\nhttps://github.com/celery/py-amqp/blob/master/amqp/transport.py#L122\n\nUsing `pdb`, I found error is coming from the `interval` variable:\n\n```\n> /usr/local/poapi_worker/venv/src/py-amqp/amqp/transport.py(122)__init__()\n-> struct.pack('ll', interval, 0),\n(Pdb) print(interval)\n{'keyfile': '/etc/ssl/key.pem', 'certfile': '/etc/ssl/cert.pem', 'ca_certs': '/etc/ssl/cacert.pem', 'cert_reqs': 2}\n(Pdb) print(write_timeout)\nNone\n(Pdb) print(read_timeout)\n{'keyfile': '/etc/ssl/key.pem', 'certfile': '/etc/ssl/cert.pem', 'ca_certs': '/etc/ssl/cacert.pem', 'cert_reqs': 2}\n```\n\nIt looks like the entire `BROKER_USE_SSL` from `celeryconfig.py` is being assigned to `read_timeout`. I'm not sure how/why that is happening, the documentation is pretty clear in how that dictionary should look: http://docs.celeryproject.org/en/latest/configuration.html#broker-use-ssl.  Is this a known error in latest `py-amqp`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/277", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/277/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/277/events", "html_url": "https://github.com/celery/py-amqp/issues/277", "id": 450143548, "node_id": "MDU6SXNzdWU0NTAxNDM1NDg=", "number": 277, "title": "If a malformed message gets into Rabbit, Celery worker fails to start", "user": {"login": "djsmith42", "id": 921044, "node_id": "MDQ6VXNlcjkyMTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/921044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djsmith42", "html_url": "https://github.com/djsmith42", "followers_url": "https://api.github.com/users/djsmith42/followers", "following_url": "https://api.github.com/users/djsmith42/following{/other_user}", "gists_url": "https://api.github.com/users/djsmith42/gists{/gist_id}", "starred_url": "https://api.github.com/users/djsmith42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djsmith42/subscriptions", "organizations_url": "https://api.github.com/users/djsmith42/orgs", "repos_url": "https://api.github.com/users/djsmith42/repos", "events_url": "https://api.github.com/users/djsmith42/events{/privacy}", "received_events_url": "https://api.github.com/users/djsmith42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2015-10-21T00:40:08Z", "updated_at": "2019-05-30T05:56:29Z", "closed_at": "2019-05-30T05:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a publisher manages to publish a corrupted, non-UTF8 decodable message into Rabbit, the Celery worker will fail to start. I propose that it should instead leave the message unacknowledged, log the error, and continue working on other messages.\n\nHere's an example stack trace when this happens:\n\n```\n[2015-10-17 23:34:57,419: ERROR/MainProcess] Unrecoverable error: UnicodeDecodeError('utf8', 'qr=-1&qf=[date:between:2015-09-01,2015-09-Traceback (most recent call last):\n  File \"venv/local/lib/python2.7/site-packages/celery/worker/__init__.py\", line 206, in start\n    self.blueprint.start(self)\n  File \"venv/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 123, in start\n    step.start(parent)\n  File \"venv/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 374, in start\n    return self.obj.start()\n  File \"venv/local/lib/python2.7/site-packages/celery/worker/consumer.py\", line 278, in start\n    blueprint.start(self)\n  File \"venv/local/lib/python2.7/site-packages/celery/bootsteps.py\", line 123, in start\n    step.start(parent)\n  File \"venv/local/lib/python2.7/site-packages/celery/worker/consumer.py\", line 821, in start\n    c.loop(*c.loop_args())\n  File \"venv/local/lib/python2.7/site-packages/celery/worker/loops.py\", line 70, in asynloop\n    next(loop)\n  File \"venv/local/lib/python2.7/site-packages/kombu/async/hub.py\", line 272, in create_loop\n    item()\n  File \"venv/local/lib/python2.7/site-packages/amqp/utils.py\", line 42, in __call__\n    self.set_error_state(exc)\n  File \"venv/local/lib/python2.7/site-packages/amqp/utils.py\", line 39, in __call__\n    **dict(self.kwargs, **kwargs) if self.kwargs else kwargs\n  File \"venv/local/lib/python2.7/site-packages/kombu/transport/base.py\", line 144, in _read\n    drain_events(timeout=0)\n  File \"venv/local/lib/python2.7/site-packages/amqp/connection.py\", line 302, in drain_events\n    chanmap, None, timeout=timeout,\n  File \"venv/local/lib/python2.7/site-packages/amqp/connection.py\", line 365, in _wait_multiple\n    channel, method_sig, args, content = read_timeout(timeout)\n  File \"venv/local/lib/python2.7/site-packages/amqp/connection.py\", line 336, in read_timeout\n    return self.method_reader.read_method()\n  File \"venv/local/lib/python2.7/site-packages/amqp/method_framing.py\", line 186, in read_method\n    self._next_method()\n  File \"venv/local/lib/python2.7/site-packages/amqp/method_framing.py\", line 126, in _next_method\n    self._process_content_header(channel, payload)\n  File \"venv/local/lib/python2.7/site-packages/amqp/method_framing.py\", line 154, in _process_content_header\n    partial.add_header(payload)\n  File \"venv/local/lib/python2.7/site-packages/amqp/method_framing.py\", line 54, in add_header\n    self.msg._load_properties(payload[12:])\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 476, in _load_properties\n    d[key] = getattr(r, 'read_' + proptype)()\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 141, in read_table\n    val = table_data.read_item()\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 191, in read_item\n    val = self.read_table()  # recurse\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 141, in read_table\n    val = table_data.read_item()\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 150, in read_item\n    val = self.read_longstr()\n  File \"venv/local/lib/python2.7/site-packages/amqp/serialization.py\", line 131, in read_longstr\n    return self.input.read(slen).decode('utf-8')\n  File \"venv/lib/python2.7/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0x96 in position 80: invalid start byte\n```\n\nVersions:\n\nCelery: 3.1.16\nKombu: 3.0.23\n\nUsing `pyamqp://`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/67", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/67/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/67/events", "html_url": "https://github.com/celery/py-amqp/issues/67", "id": 78553894, "node_id": "MDU6SXNzdWU3ODU1Mzg5NA==", "number": 67, "title": "Bad timezone behaviour when encoding datetimes in headers", "user": {"login": "johtso", "id": 830800, "node_id": "MDQ6VXNlcjgzMDgwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/830800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johtso", "html_url": "https://github.com/johtso", "followers_url": "https://api.github.com/users/johtso/followers", "following_url": "https://api.github.com/users/johtso/following{/other_user}", "gists_url": "https://api.github.com/users/johtso/gists{/gist_id}", "starred_url": "https://api.github.com/users/johtso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johtso/subscriptions", "organizations_url": "https://api.github.com/users/johtso/orgs", "repos_url": "https://api.github.com/users/johtso/repos", "events_url": "https://api.github.com/users/johtso/events{/privacy}", "received_events_url": "https://api.github.com/users/johtso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-20T14:45:17Z", "updated_at": "2015-06-15T20:47:38Z", "closed_at": "2015-06-15T20:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/celery/py-amqp/blob/a8f334a0ab2ba25fd7b139c42116d6d5ea0543cd/amqp/serialization.py#L377\n\nThe `# ## FIXME timezone ?` says it all.\n\nCurrently datetimes are assumed to be in system local time as that is how `mktime` behaves.\n\nThis is rather confusing behaviour when you're passing around UTC times and find that all your times are offset.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/66", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/66/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/66/events", "html_url": "https://github.com/celery/py-amqp/issues/66", "id": 75602477, "node_id": "MDU6SXNzdWU3NTYwMjQ3Nw==", "number": 66, "title": "UnexpectedFrame exceptions when reading from queue", "user": {"login": "underyx", "id": 1060436, "node_id": "MDQ6VXNlcjEwNjA0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1060436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underyx", "html_url": "https://github.com/underyx", "followers_url": "https://api.github.com/users/underyx/followers", "following_url": "https://api.github.com/users/underyx/following{/other_user}", "gists_url": "https://api.github.com/users/underyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/underyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underyx/subscriptions", "organizations_url": "https://api.github.com/users/underyx/orgs", "repos_url": "https://api.github.com/users/underyx/repos", "events_url": "https://api.github.com/users/underyx/events{/privacy}", "received_events_url": "https://api.github.com/users/underyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285507, "node_id": "MDU6TGFiZWw0MDUyODU1MDc=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Serialization", "name": "Component: Serialization", "color": "bfdadc", "default": false, "description": null}, {"id": 405285515, "node_id": "MDU6TGFiZWw0MDUyODU1MTU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Component:%20Transport", "name": "Component: Transport", "color": "bfd4f2", "default": false, "description": null}, {"id": 405287305, "node_id": "MDU6TGFiZWw0MDUyODczMDU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Needs%20Testcase", "name": "Status: Needs Testcase", "color": "b60205", "default": false, "description": null}, {"id": 405287313, "node_id": "MDU6TGFiZWw0MDUyODczMTM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Status:%20Needs%20Verification", "name": "Status: Needs Verification", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-12T13:29:36Z", "updated_at": "2018-09-15T17:37:01Z", "closed_at": "2018-09-15T17:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are seeing a bunch of these exceptions popping up when reading from a kombu `SimpleQueue`, under Python 3.4, with amqp 1.4.6 and kombu 3.0.26:\n\n```\nTraceback (most recent call last):\n  [trimmed]\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/allmylespy_common/rpc.py\", line 156, in _get_reply\n    reply = self._our_queue.get(block=True, timeout=1)\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/kombu/simple.py\", line 53, in get\n    timeout=timeout and remaining)\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/kombu/connection.py\", line 275, in drain_events\n    return self.transport.drain_events(self.connection, **kwargs)\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/kombu/transport/pyamqp.py\", line 95, in drain_events\n    return connection.drain_events(**kwargs)\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/connection.py\", line 302, in drain_events\n    chanmap, None, timeout=timeout,\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/connection.py\", line 365, in _wait_multiple\n    channel, method_sig, args, content = read_timeout(timeout)\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/connection.py\", line 336, in read_timeout\n    return self.method_reader.read_method()\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/method_framing.py\", line 189, in read_method\n    raise m\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/method_framing.py\", line 107, in _next_method\n    frame_type, channel, payload = read_frame()\n  File \"/opt/virtualenvs/allmylespy/lib/python3.4/site-packages/amqp/transport.py\", line 175, in read_frame\n    'Received 0x{0:02x} while expecting 0xce'.format(ch))\namqp.exceptions.UnexpectedFrame: Received 0x00 while expecting 0xce\n```\n\nI'd say between 0.01% and 0.5% of messages are affected. The error message varies, a few seconds earlier we had `Received 0x5e` instead. I see that 1.4.6 doesn't list Python 3.4 in its classifiers. Is it possibly incompatible? Are there any alternatives for Python 3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/60", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/60/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/60/events", "html_url": "https://github.com/celery/py-amqp/issues/60", "id": 52582106, "node_id": "MDU6SXNzdWU1MjU4MjEwNg==", "number": 60, "title": "AMQP heartbeats fail", "user": {"login": "jbg", "id": 39903, "node_id": "MDQ6VXNlcjM5OTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/39903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbg", "html_url": "https://github.com/jbg", "followers_url": "https://api.github.com/users/jbg/followers", "following_url": "https://api.github.com/users/jbg/following{/other_user}", "gists_url": "https://api.github.com/users/jbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbg/subscriptions", "organizations_url": "https://api.github.com/users/jbg/orgs", "repos_url": "https://api.github.com/users/jbg/repos", "events_url": "https://api.github.com/users/jbg/events{/privacy}", "received_events_url": "https://api.github.com/users/jbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-21T01:04:10Z", "updated_at": "2015-09-09T19:07:21Z", "closed_at": "2015-09-09T19:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "With heartbeats enabled, the application crashes after a short time with the below stacktrace. I am not sure yet if this issue is with py-amqp, kombu or celery but am recording it here in the meantime.\n\n```\n Traceback (most recent call last):\n   File \"/home/.../py-amqp/amqp/connection.py\", line 561, in send_heartbeat\n     self._frame_writer.send((8, 0, None, None, None))\n StopIteration\n\n During handling of the above exception, another exception occurred:\n\n Traceback (most recent call last):\n   File \"/home/.../celery/celery/worker/consumer.py\", line 278, in start\n     blueprint.start(self)\n   File \"/home/.../celery/celery/bootsteps.py\", line 123, in start\n     step.start(parent)\n   File \"/home/.../celery/celery/worker/consumer.py\", line 851, in start\n     c.loop(*c.loop_args())\n   File \"/home/.../celery/celery/worker/loops.py\", line 74, in asynloop\n     next(loop)\n   File \"/home/.../kombu/kombu/async/hub.py\", line 278, in create_loop\n     poll_timeout = fire_timers(propagate=propagate) if scheduled else 1\n   File \"/home/.../kombu/kombu/async/hub.py\", line 134, in fire_timers\n     entry()\n   File \"/home/.../kombu/kombu/async/timer.py\", line 63, in __call__\n     return self.fun(*self.args, **self.kwargs)\n   File \"/home/.../kombu/kombu/async/timer.py\", line 131, in _reschedules\n     return fun(*args, **kwargs)\n   File \"/home/.../kombu/kombu/connection.py\", line 264, in heartbeat_check\n     return self.transport.heartbeat_check(self.connection, rate=rate)\n   File \"/home/.../kombu/kombu/transport/pyamqp.py\", line 137, in heartbeat_check\n     return connection.heartbeat_tick(rate=rate)\n   File \"/home/.../py-amqp/amqp/connection.py\", line 586, in heartbeat_tick\n     self.send_heartbeat()\n   File \"/home/.../py-amqp/amqp/connection.py\", line 563, in send_heartbeat\n     raise RecoverableConnectionError('connection already closed')\n amqp.exceptions.RecoverableConnectionError: connection already closed\n```\n\nRabbitMQ logs:\n\n```\n=WARNING REPORT==== 21-Dec-2014::14:01:51 ===\nNon-AMQP exit reason '{exit,\n{amqp_error,frame_error,\n\"cannot decode <<0,0,0,0,0,0>>\",\n'connection.close'},\n'connection.close',\n[{rabbit_misc,protocol_error,1,[]},\n{rabbit_reader,handle_method0,3,[]},\n{rabbit_reader,handle_input,3,[]},\n{rabbit_reader,recvloop,4,[]},\n{rabbit_reader,run,1,[]},\n{rabbit_reader,start_connection,5,[]},\n{proc_lib,init_p_do_apply,3,\n[{file,\"proc_lib.erl\"},{line,237}]}]}'\n```\n\nThe issue only occurs when heartbeats are enabled.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/53", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/53/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/53/events", "html_url": "https://github.com/celery/py-amqp/issues/53", "id": 43207736, "node_id": "MDU6SXNzdWU0MzIwNzczNg==", "number": 53, "title": "No PGP signature on 1.4.6 PyPi upload", "user": {"login": "fladi", "id": 234220, "node_id": "MDQ6VXNlcjIzNDIyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/234220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fladi", "html_url": "https://github.com/fladi", "followers_url": "https://api.github.com/users/fladi/followers", "following_url": "https://api.github.com/users/fladi/following{/other_user}", "gists_url": "https://api.github.com/users/fladi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fladi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fladi/subscriptions", "organizations_url": "https://api.github.com/users/fladi/orgs", "repos_url": "https://api.github.com/users/fladi/repos", "events_url": "https://api.github.com/users/fladi/events{/privacy}", "received_events_url": "https://api.github.com/users/fladi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 405285405, "node_id": "MDU6TGFiZWw0MDUyODU0MDU=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Category:%20Packaging%20and%20Release%20Management", "name": "Category: Packaging and Release Management", "color": "0052cc", "default": false, "description": null}, {"id": 405286103, "node_id": "MDU6TGFiZWw0MDUyODYxMDM=", "url": "https://api.github.com/repos/celery/py-amqp/labels/Issue%20Type:%20Task", "name": "Issue Type: Task", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-19T06:14:32Z", "updated_at": "2017-05-21T06:55:10Z", "closed_at": "2017-05-21T06:55:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nitpicking, I know, but could you add a PGP signature for the source-tarball on PyPi for the 1.4.6 upload? The build-process for the Debian package relies on it being there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/51", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/51/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/51/events", "html_url": "https://github.com/celery/py-amqp/issues/51", "id": 41488745, "node_id": "MDU6SXNzdWU0MTQ4ODc0NQ==", "number": 51, "title": "MemoryError establishing a connection to Azure Service Bus", "user": {"login": "zmullett", "id": 1944989, "node_id": "MDQ6VXNlcjE5NDQ5ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1944989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmullett", "html_url": "https://github.com/zmullett", "followers_url": "https://api.github.com/users/zmullett/followers", "following_url": "https://api.github.com/users/zmullett/following{/other_user}", "gists_url": "https://api.github.com/users/zmullett/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmullett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmullett/subscriptions", "organizations_url": "https://api.github.com/users/zmullett/orgs", "repos_url": "https://api.github.com/users/zmullett/repos", "events_url": "https://api.github.com/users/zmullett/events{/privacy}", "received_events_url": "https://api.github.com/users/zmullett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-08-29T10:34:10Z", "updated_at": "2015-12-28T08:44:01Z", "closed_at": "2015-04-17T11:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if amqp and Azure Service Bus should cooperate, but I receive a MemoryError (originating from transport._AbstractTransport.read_frame). The payload size unpacked from he frame header seems incorrect.\n\nI attempt to establish the connection like so:\n\nconnection = amqp.connection.Connection(\n    host='MYSERVICENAMESPACE.servicebus.windows.net',\n    userid='owner',\n    password='MYPASSWORD')\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/50", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/50/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/50/events", "html_url": "https://github.com/celery/py-amqp/issues/50", "id": 41107005, "node_id": "MDU6SXNzdWU0MTEwNzAwNQ==", "number": 50, "title": "1.4.6 pushed to PyPi, not documented in changelog", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-08-25T21:04:55Z", "updated_at": "2014-09-30T17:38:55Z", "closed_at": "2014-09-30T17:27:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/49", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/49/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/49/events", "html_url": "https://github.com/celery/py-amqp/issues/49", "id": 39880194, "node_id": "MDU6SXNzdWUzOTg4MDE5NA==", "number": 49, "title": "Reverse topic exchange support", "user": {"login": "AndreLobato", "id": 359120, "node_id": "MDQ6VXNlcjM1OTEyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/359120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreLobato", "html_url": "https://github.com/AndreLobato", "followers_url": "https://api.github.com/users/AndreLobato/followers", "following_url": "https://api.github.com/users/AndreLobato/following{/other_user}", "gists_url": "https://api.github.com/users/AndreLobato/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreLobato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreLobato/subscriptions", "organizations_url": "https://api.github.com/users/AndreLobato/orgs", "repos_url": "https://api.github.com/users/AndreLobato/repos", "events_url": "https://api.github.com/users/AndreLobato/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreLobato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-09T07:13:43Z", "updated_at": "2014-09-25T00:15:16Z", "closed_at": "2014-09-25T00:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I would like to use a [rabbitmq plugin for reverse topic exchange](https://github.com/videlalvaro/rabbitmq-rtopic-exchange) (x-rtopic) in order to define a set of machines I could run send a message to. So could be defined on the message routing_key a '_._' or 'a.#' pattern and each node had it's own routing key. \n\nI've tested the plugin with kombu and pika using simple exemples found in the net. And both worked fine. But when I'try to send a Celery task it does not work, the Consumer connects fine, but when the Producer loads my task, create automaticaly a (direct) Exchage ignoring the configuration I've setted in the config file. Even setting the CELERY_DEFAULT_EXCHANGE_TYPE gets ignored. Anyway, then I forced celery to set create a exchange (x-rtopic) type and than I get this error below:   \n\n```\nConnectionError: 503: (COMMAND_INVALID - unknown exchange type 'x-rtopic', (40, 10), None)\n```\n\nSomething in the Channel part seems to now allow this.\n\nThere is a easy (or not) way to achieve this support ? \n\nThanks \n\nAndre\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/47", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/47/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/47/events", "html_url": "https://github.com/celery/py-amqp/issues/47", "id": 38152447, "node_id": "MDU6SXNzdWUzODE1MjQ0Nw==", "number": 47, "title": "Incorrect method signature for Channel.Close", "user": {"login": "jbg", "id": 39903, "node_id": "MDQ6VXNlcjM5OTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/39903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbg", "html_url": "https://github.com/jbg", "followers_url": "https://api.github.com/users/jbg/followers", "following_url": "https://api.github.com/users/jbg/following{/other_user}", "gists_url": "https://api.github.com/users/jbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbg/subscriptions", "organizations_url": "https://api.github.com/users/jbg/orgs", "repos_url": "https://api.github.com/users/jbg/repos", "events_url": "https://api.github.com/users/jbg/events{/privacy}", "received_events_url": "https://api.github.com/users/jbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-18T06:59:03Z", "updated_at": "2014-08-11T16:54:30Z", "closed_at": "2014-08-11T16:53:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The AMQP spec specifies `short, shortstr, short, short` as the `Channel.Close` method signature, so the below patch should be applied.\n\nThis error may have been masked previously because `shortstr` was allowed to contain any binary data. I\u2019m working on cleaning up the bytes/utf-8 behaviour and caught this as part of that.\n\n```\ndiff --git a/amqp/channel.py b/amqp/channel.py\nindex 7d45fe4..dd7ff14 100644\n--- a/amqp/channel.py\n+++ b/amqp/channel.py\n@@ -61,7 +61,7 @@ class Channel(AbstractChannel):\n\n     \"\"\"\n     _METHODS = set([\n-        spec.method(spec.Channel.Close, 'ssBB'),\n+        spec.method(spec.Channel.Close, 'BsBB'),\n         spec.method(spec.Channel.CloseOk),\n         spec.method(spec.Channel.Flow, 'b'),\n         spec.method(spec.Channel.FlowOk, 'b'),\n```\n\nAfter applying this patch, another error surfaced: `_on_close` in `amqp/channel.py` calls `self._do_revive()` which fails because `ValueError: generator already executing` (in this case, the channel was closed while we were waiting for the response to an exchange declare)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/46", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/46/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/46/events", "html_url": "https://github.com/celery/py-amqp/issues/46", "id": 37751957, "node_id": "MDU6SXNzdWUzNzc1MTk1Nw==", "number": 46, "title": "Cannot write frames or deserialize on Py3.4", "user": {"login": "jbg", "id": 39903, "node_id": "MDQ6VXNlcjM5OTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/39903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbg", "html_url": "https://github.com/jbg", "followers_url": "https://api.github.com/users/jbg/followers", "following_url": "https://api.github.com/users/jbg/following{/other_user}", "gists_url": "https://api.github.com/users/jbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbg/subscriptions", "organizations_url": "https://api.github.com/users/jbg/orgs", "repos_url": "https://api.github.com/users/jbg/repos", "events_url": "https://api.github.com/users/jbg/events{/privacy}", "received_events_url": "https://api.github.com/users/jbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-13T23:47:01Z", "updated_at": "2015-09-09T19:00:20Z", "closed_at": "2015-09-09T19:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Py3.4, it is necessary to apply the following patch in order to write frames or deserialize data:\n\n```\ndiff --git a/amqp/method_framing.py b/amqp/method_framing.py\nindex b9ffe91..64e9cd4 100644\n--- a/amqp/method_framing.py\n+++ b/amqp/method_framing.py\n@@ -116,7 +116,7 @@ def frame_writer(connection, transport,\n\n         if no_pybuf or bigbody:\n             # ## SLOW: string copy and write for every frame\n-            frame = (''.join([pack('>HH', *method_sig), args])\n+            frame = (b''.join([pack('>HH', *method_sig), args])\n                      if type_ == 1 else '')  # encode method frame\n             framelen = len(frame)\n             write(pack('>BHI%dsB' % framelen,\ndiff --git a/amqp/serialization.py b/amqp/serialization.py\nindex d74515f..81abf3d 100644\n--- a/amqp/serialization.py\n+++ b/amqp/serialization.py\n@@ -52,7 +52,7 @@ ILLEGAL_TABLE_TYPE = \"\"\"\\\n\n\n def _read_item(buf, offset=0, unpack_from=unpack_from):\n-    ftype = buf[offset]\n+    ftype = chr(buf[offset])\n     offset += 1\n\n     # 'S': long string\n```\n\nIn method_framing.py, `''.join()` cannot be applied on a list of bytes, and in serialization.py, `buf[offset]` is an `int` but is compared to `str` a few lines below.\n\nNote this patch will probably break Py2 so should not be applied verbatim, it's just to demonstrate the issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/45", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/45/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/45/events", "html_url": "https://github.com/celery/py-amqp/issues/45", "id": 37199968, "node_id": "MDU6SXNzdWUzNzE5OTk2OA==", "number": 45, "title": "Cannot close connection", "user": {"login": "malinoff", "id": 1702083, "node_id": "MDQ6VXNlcjE3MDIwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1702083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malinoff", "html_url": "https://github.com/malinoff", "followers_url": "https://api.github.com/users/malinoff/followers", "following_url": "https://api.github.com/users/malinoff/following{/other_user}", "gists_url": "https://api.github.com/users/malinoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/malinoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malinoff/subscriptions", "organizations_url": "https://api.github.com/users/malinoff/orgs", "repos_url": "https://api.github.com/users/malinoff/repos", "events_url": "https://api.github.com/users/malinoff/events{/privacy}", "received_events_url": "https://api.github.com/users/malinoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2014-07-05T14:39:08Z", "updated_at": "2016-07-12T15:32:22Z", "closed_at": "2016-07-12T02:44:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\nIn [1]: import amqp\n\nIn [2]: c = amqp.connection.Connection()\n\nIn [3]: c.connect()\nFRAME OFFSET + SIZE: 468\nOFFSET: 0 SIZE: 469 DATA: 469\nFRAME OFFSET + SIZE: 19\nOFFSET: 469 SIZE: 20 DATA: 20\nFRAME OFFSET + SIZE: 12\nOFFSET: 489 SIZE: 13 DATA: 13\n\nIn [4]: c.channel()\nFRAME OFFSET + SIZE: 15\nOFFSET: 502 SIZE: 16 DATA: 16\nOut[4]: <amqp.channel.Channel at 0x2e62b50>\n\nIn [5]: c.close()\nFRAME OFFSET + SIZE: 32\nOFFSET: 518 SIZE: 33 DATA: 33\n---------------------------------------------------------------------------\nInternalError                             Traceback (most recent call last)\n<ipython-input-5-b082af813204> in <module>()\n----> 1 c.close()\n\n/home/dmitry/projects/py-amqp/amqp/connection.pyc in close(self, reply_code, reply_text, method_sig, argsig)\n    547             spec.Connection.Close, argsig,\n    548             (reply_code, reply_text, method_sig[0], method_sig[1]),\n--> 549             wait=spec.Connection.CloseOk,\n    550         )\n    551 \n\n/home/dmitry/projects/py-amqp/amqp/abstract_channel.pyc in send_method(self, sig, format, args, content, wait, on_sent, callback)\n     62         # TODO temp: callback should be after write_method ... ;)\n     63         if wait:\n---> 64             return self.wait(wait, callback)\n     65         return on_sent\n     66 \n\n/home/dmitry/projects/py-amqp/amqp/abstract_channel.pyc in wait(self, method, callback, returns_tuple, filter)\n     79         try:\n     80             while not p.ready:\n---> 81                 self.connection.drain_events()\n     82 \n     83             if p.value:\n\n/home/dmitry/projects/py-amqp/amqp/connection.pyc in drain_events(self, timeout)\n    363 \n    364     def drain_events(self, timeout=None):\n--> 365         return self.blocking_read(timeout)\n    366 \n    367     def on_readable(self, _unavail=_UNAVAIL):\n\n/home/dmitry/projects/py-amqp/amqp/connection.pyc in blocking_read(self, timeout)\n    446             self._read_frame(None)\n    447             while self._inbound:\n--> 448                 self.on_inbound_frame(self._inbound.popleft())\n    449             self._call_pending_blocking_callbacks()\n    450             return\n\n/home/dmitry/projects/py-amqp/amqp/method_framing.pyc in frame_handler(connection, callback, unpack_from, content_methods)\n     72                 expected_types[channel] = 2\n     73             else:\n---> 74                 callback(channel, method_sig, buf, None)\n     75 \n     76         elif frame_type == 2:\n\n/home/dmitry/projects/py-amqp/amqp/connection.pyc in on_inbound_method(self, channel_id, method_sig, payload, content)\n    477     def on_inbound_method(self, channel_id, method_sig, payload, content):\n    478         return self.channels[channel_id].dispatch_method(\n--> 479             method_sig, payload, content,\n    480         )\n    481 \n\n/home/dmitry/projects/py-amqp/amqp/abstract_channel.pyc in dispatch_method(self, method_sig, payload, content)\n    131         for listener in listeners:\n    132             # print('CALLING LISTENER: %r' % (listener, ))\n--> 133             listener(*args)\n    134 \n    135     #: Placeholder, the concrete implementations will have to\n\n/home/dmitry/projects/py-amqp/amqp/connection.pyc in _on_close(self, reply_code, reply_text, class_id, method_id)\n    606         self._x_close_ok()\n    607         raise error_for_code(reply_code, reply_text,\n--> 608                              (class_id, method_id), ConnectionError)\n    609 \n    610     def _on_blocked(self):\n\nInternalError: (0, 0): (541) INTERNAL_ERROR\n```\n\nTherefore, in logs:\n\n```\n=INFO REPORT==== 5-Jul-2014::21:36:34 ===\naccepting AMQP connection <0.494.0> (127.0.0.1:33018 -> 127.0.0.1:5672)\n\n=ERROR REPORT==== 5-Jul-2014::21:36:58 ===\nAMQP connection <0.494.0> (running), channel 0 - error:\n{exit,{amqp_error,frame_error,\"cannot decode <<0,0,0,0,0,0>>\",\n                  'connection.close'},\n      'connection.close',\n      [{rabbit_misc,protocol_error,1,[]},\n       {rabbit_reader,handle_method0,3,[]},\n       {rabbit_reader,handle_input,3,[]},\n       {rabbit_reader,recvloop,4,[]},\n       {rabbit_reader,run,1,[]},\n       {rabbit_reader,start_connection,5,[]},\n       {proc_lib,init_p_do_apply,3,[{file,\"proc_lib.erl\"},{line,239}]}]}\n\n=WARNING REPORT==== 5-Jul-2014::21:36:58 ===\nNon-AMQP exit reason '{exit,\n                          {amqp_error,frame_error,\n                              \"cannot decode <<0,0,0,0,0,0>>\",\n                              'connection.close'},\n                          'connection.close',\n                          [{rabbit_misc,protocol_error,1,[]},\n                           {rabbit_reader,handle_method0,3,[]},\n                           {rabbit_reader,handle_input,3,[]},\n                           {rabbit_reader,recvloop,4,[]},\n                           {rabbit_reader,run,1,[]},\n                           {rabbit_reader,start_connection,5,[]},\n                           {proc_lib,init_p_do_apply,3,\n                               [{file,\"proc_lib.erl\"},{line,239}]}]}'\n\n=INFO REPORT==== 5-Jul-2014::21:36:58 ===\nclosing AMQP connection <0.494.0> (127.0.0.1:33018 -> 127.0.0.1:5672)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/41", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/41/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/41/events", "html_url": "https://github.com/celery/py-amqp/issues/41", "id": 32054442, "node_id": "MDU6SXNzdWUzMjA1NDQ0Mg==", "number": 41, "title": "Changelog release-date typo version 1.1.0", "user": {"login": "slamora", "id": 4057718, "node_id": "MDQ6VXNlcjQwNTc3MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4057718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slamora", "html_url": "https://github.com/slamora", "followers_url": "https://api.github.com/users/slamora/followers", "following_url": "https://api.github.com/users/slamora/following{/other_user}", "gists_url": "https://api.github.com/users/slamora/gists{/gist_id}", "starred_url": "https://api.github.com/users/slamora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slamora/subscriptions", "organizations_url": "https://api.github.com/users/slamora/orgs", "repos_url": "https://api.github.com/users/slamora/repos", "events_url": "https://api.github.com/users/slamora/events{/privacy}", "received_events_url": "https://api.github.com/users/slamora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-23T12:03:00Z", "updated_at": "2014-05-30T14:24:40Z", "closed_at": "2014-05-30T14:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "While I'was looking at Changelog I've found a typo on the release-date of version 1.1.0, shows `:release-date: 2012-11-08 10:36 P.M UTC` but I guess that should be in year 2013 (after `1.0.13` release).\n\nhttps://github.com/celery/py-amqp/blob/master/Changelog#L235\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/celery/py-amqp/issues/36", "repository_url": "https://api.github.com/repos/celery/py-amqp", "labels_url": "https://api.github.com/repos/celery/py-amqp/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/celery/py-amqp/issues/36/comments", "events_url": "https://api.github.com/repos/celery/py-amqp/issues/36/events", "html_url": "https://github.com/celery/py-amqp/issues/36", "id": 28708804, "node_id": "MDU6SXNzdWUyODcwODgwNA==", "number": 36, "title": "AttributeError in __dell__", "user": {"login": "speedplane", "id": 671052, "node_id": "MDQ6VXNlcjY3MTA1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/671052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/speedplane", "html_url": "https://github.com/speedplane", "followers_url": "https://api.github.com/users/speedplane/followers", "following_url": "https://api.github.com/users/speedplane/following{/other_user}", "gists_url": "https://api.github.com/users/speedplane/gists{/gist_id}", "starred_url": "https://api.github.com/users/speedplane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/speedplane/subscriptions", "organizations_url": "https://api.github.com/users/speedplane/orgs", "repos_url": "https://api.github.com/users/speedplane/repos", "events_url": "https://api.github.com/users/speedplane/events{/privacy}", "received_events_url": "https://api.github.com/users/speedplane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-04T14:29:42Z", "updated_at": "2014-03-05T13:04:24Z", "closed_at": "2014-03-05T13:04:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am seeing `AttributeError` exceptions being raised in my logs and I believe the culprit is `amqp/transport._AbstractTransport.__del__`.  \n\nAs stated in this SO post (http://stackoverflow.com/questions/18058730/python-attributeerror-on-del), the `__del__` function may have been called after modules have started to be unloaded and set to `None`.  In the `__del__` function for `_AbstractTransport`, you have to check the `socket` module before grabbing a property from it. Below is a proposed fix to the `__del__` method:\n\n```\n  def __del__(self):\n        try:\n            self.close()\n        except e:\n            if socket and isinstance(e, socket.error):\n               pass\n            else:\n               raise\n        finally:\n            self.sock = None\n```\n\nSimilarly, you need to check `socket` in the close method. Here is a proposed fix:\n\n```\n  def close(self):\n        if socket and self.sock is not None:\n            self._shutdown_transport()\n            # Call shutdown first to make sure that pending messages\n            # reach the AMQP broker if the program exits after\n            # calling this method.\n            self.sock.shutdown(socket.SHUT_RDWR)\n            self.sock.close()\n            self.sock = None\n        self.connected = False\n```\n", "performed_via_github_app": null, "score": 1.0}]}