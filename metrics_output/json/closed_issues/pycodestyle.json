{"total_count": 506, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/958", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/958/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/958/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/958/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/958", "id": 675908922, "node_id": "MDU6SXNzdWU2NzU5MDg5MjI=", "number": 958, "title": "W605: could be a false positive on SQL Query?", "user": {"login": "a-wakeel", "id": 10616033, "node_id": "MDQ6VXNlcjEwNjE2MDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/10616033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-wakeel", "html_url": "https://github.com/a-wakeel", "followers_url": "https://api.github.com/users/a-wakeel/followers", "following_url": "https://api.github.com/users/a-wakeel/following{/other_user}", "gists_url": "https://api.github.com/users/a-wakeel/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-wakeel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-wakeel/subscriptions", "organizations_url": "https://api.github.com/users/a-wakeel/orgs", "repos_url": "https://api.github.com/users/a-wakeel/repos", "events_url": "https://api.github.com/users/a-wakeel/events{/privacy}", "received_events_url": "https://api.github.com/users/a-wakeel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-10T06:42:57Z", "updated_at": "2020-08-14T10:46:46Z", "closed_at": "2020-08-10T15:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI am getting this warning on a very complicated nested SQL Query:\r\n**W605 invalid escape sequence '\\\\|'**\r\n\r\nCould that be a false positive? Should it not only look at python source?\r\nPreviously it was fine, it emerged as i upgraded to the latest version of **pycodestyle** and **flake8**.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/955", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/955/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/955/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/955", "id": 669376428, "node_id": "MDU6SXNzdWU2NjkzNzY0Mjg=", "number": 955, "title": "Add support for class attribute checking [google]", "user": {"login": "jtpavlock", "id": 26807251, "node_id": "MDQ6VXNlcjI2ODA3MjUx", "avatar_url": "https://avatars3.githubusercontent.com/u/26807251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtpavlock", "html_url": "https://github.com/jtpavlock", "followers_url": "https://api.github.com/users/jtpavlock/followers", "following_url": "https://api.github.com/users/jtpavlock/following{/other_user}", "gists_url": "https://api.github.com/users/jtpavlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtpavlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtpavlock/subscriptions", "organizations_url": "https://api.github.com/users/jtpavlock/orgs", "repos_url": "https://api.github.com/users/jtpavlock/repos", "events_url": "https://api.github.com/users/jtpavlock/events{/privacy}", "received_events_url": "https://api.github.com/users/jtpavlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T03:35:36Z", "updated_at": "2020-07-31T20:12:36Z", "closed_at": "2020-07-31T04:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feature request to add a check for class level attribute documentation.\r\n\r\nAs described in the [google style guide](https://google.github.io/styleguide/pyguide.html#384-classes):\r\n\r\n> If your class has public attributes, they should be documented here in an Attributes section and follow the same formatting as a function\u2019s Args section.\r\n\r\n```python\r\nclass SampleClass:\r\n    \"\"\"Summary of class here.\r\n\r\n    Longer class information....\r\n    Longer class information....\r\n\r\n    Attributes:\r\n        likes_spam: A boolean indicating if we like SPAM or not.\r\n        eggs: An integer count of the eggs we have laid.\r\n    \"\"\"\r\n\r\n    def __init__(self, likes_spam=False):\r\n        \"\"\"Inits SampleClass with blah.\"\"\"\r\n        self.likes_spam = likes_spam\r\n        self.eggs = 0\r\n\r\n    def public_method(self):\r\n        \"\"\"Performs operation blah.\"\"\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/949", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/949/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/949/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/949/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/949", "id": 650241867, "node_id": "MDU6SXNzdWU2NTAyNDE4Njc=", "number": 949, "title": "Pycodestyle is not detecting W605 and W503", "user": {"login": "garawalid", "id": 20029252, "node_id": "MDQ6VXNlcjIwMDI5MjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/20029252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garawalid", "html_url": "https://github.com/garawalid", "followers_url": "https://api.github.com/users/garawalid/followers", "following_url": "https://api.github.com/users/garawalid/following{/other_user}", "gists_url": "https://api.github.com/users/garawalid/gists{/gist_id}", "starred_url": "https://api.github.com/users/garawalid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garawalid/subscriptions", "organizations_url": "https://api.github.com/users/garawalid/orgs", "repos_url": "https://api.github.com/users/garawalid/repos", "events_url": "https://api.github.com/users/garawalid/events{/privacy}", "received_events_url": "https://api.github.com/users/garawalid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-02T22:48:07Z", "updated_at": "2020-07-04T10:01:41Z", "closed_at": "2020-07-02T22:56:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi community,\r\n\r\nI introduced two wrong rules ([W605](https://www.flake8rules.com/rules/W605.html) & [W503](https://www.flake8rules.com/rules/W503.html)) in the example below:\r\n\r\n\r\n```python\r\ndef method_one(self):\r\n    \"\"\"\r\n    * if :math:`p_i + s_i \\geq p_{min} + 2 * s_{min}` -> Warning zone\r\n    * if :math:`p_i + s_i \\geq p_{min} + 3 * s_{min}` -> Change detected\r\n\r\n    \"\"\"\r\n    gross_wages = 0\r\n    taxable_interest = 0\r\n    income = (gross_wages\r\n              + taxable_interest)\r\n    return income\r\n\r\n```\r\n\r\nWhen I run flake8 against this code, pycodestyle reports only **W605**\r\n\r\n`tox.ini`:\r\n```\r\n[flake8]\r\n```\r\n```bash\r\n$ flake8 example.py \r\nexample.py:3:27: W605 invalid escape sequence '\\g'\r\nexample.py:4:27: W605 invalid escape sequence '\\g'\r\n```\r\nAnd when I add an exception for **W605** in the `tox.ini` file. pycodestyle reports **W503**.\r\n\r\n`tox.ini`:\r\n```\r\n[flake8]\r\nignore=W605\r\n```\r\n```bash\r\n$ flake8 example.py \r\nexample.py:10:15: W503 line break before binary operator\r\n```\r\nWas it supposed to have both W503 and W605 in the first example?\r\n\r\n**My configuration**:\r\n- Python 3.8.2 \r\n- flake8 3.8.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/947", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/947/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/947/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/947/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/947", "id": 647913246, "node_id": "MDU6SXNzdWU2NDc5MTMyNDY=", "number": 947, "title": "E265: does not raise for `#: comment`", "user": {"login": "jugmac00", "id": 9895620, "node_id": "MDQ6VXNlcjk4OTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9895620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugmac00", "html_url": "https://github.com/jugmac00", "followers_url": "https://api.github.com/users/jugmac00/followers", "following_url": "https://api.github.com/users/jugmac00/following{/other_user}", "gists_url": "https://api.github.com/users/jugmac00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugmac00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugmac00/subscriptions", "organizations_url": "https://api.github.com/users/jugmac00/orgs", "repos_url": "https://api.github.com/users/jugmac00/repos", "events_url": "https://api.github.com/users/jugmac00/events{/privacy}", "received_events_url": "https://api.github.com/users/jugmac00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-30T06:47:59Z", "updated_at": "2020-06-30T11:43:47Z", "closed_at": "2020-06-30T11:43:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n#: does not raise E265\r\n\r\na = print  #: neither raises E265\r\n\r\n```\r\n\r\nFlake8 version `3.15.1`\r\n\r\n```\r\npycodestyle --version\r\n2.6.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/946", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/946/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/946/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/946/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/946", "id": 646261640, "node_id": "MDU6SXNzdWU2NDYyNjE2NDA=", "number": 946, "title": "E721: type comparison is partially working", "user": {"login": "pmeier", "id": 6849766, "node_id": "MDQ6VXNlcjY4NDk3NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6849766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmeier", "html_url": "https://github.com/pmeier", "followers_url": "https://api.github.com/users/pmeier/followers", "following_url": "https://api.github.com/users/pmeier/following{/other_user}", "gists_url": "https://api.github.com/users/pmeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmeier/subscriptions", "organizations_url": "https://api.github.com/users/pmeier/orgs", "repos_url": "https://api.github.com/users/pmeier/repos", "events_url": "https://api.github.com/users/pmeier/events{/privacy}", "received_events_url": "https://api.github.com/users/pmeier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T13:24:57Z", "updated_at": "2020-06-28T15:44:13Z", "closed_at": "2020-06-26T14:47:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to the discussion in #882 if type equality or identity comparisons should be allowed. \r\n\r\nConsider the following snippet run with `pycodestyle==2.6.0` on `python==3.6`:\r\n\r\n```python\r\ndef foo():\r\n    return 0\r\n\r\n\r\ndef bar():\r\n    return 1\r\n\r\n\r\nassert type(foo()) == type(bar())\r\nassert type(foo()) is type(bar())\r\n\r\nfoz = foo()\r\nbaz = bar()\r\n\r\nassert type(foz) == type(baz)\r\nassert type(foz) is type(baz)\r\n```\r\n\r\n```\r\nfoobar.py:9:20: E721 do not compare types, use 'isinstance()'\r\nfoobar.py:10:20: E721 do not compare types, use 'isinstance()'\r\n```\r\n\r\nIt complains only for the first two assertions. If I'm not mistaken this means that either:\r\n- type comparisons are allowed, but are not registered properly if one does not compare variables or\r\n- type comparisons should still be not allowed, but are by accident.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/944", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/944/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/944/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/944", "id": 631322593, "node_id": "MDU6SXNzdWU2MzEzMjI1OTM=", "number": 944, "title": "When a reserved keyword appears in a f-string, the error only shows as `[flake8] E999: SyntaxError: invalid syntax` on the first line", "user": {"login": "otakutyrant", "id": 64188229, "node_id": "MDQ6VXNlcjY0MTg4MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/64188229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otakutyrant", "html_url": "https://github.com/otakutyrant", "followers_url": "https://api.github.com/users/otakutyrant/followers", "following_url": "https://api.github.com/users/otakutyrant/following{/other_user}", "gists_url": "https://api.github.com/users/otakutyrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/otakutyrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otakutyrant/subscriptions", "organizations_url": "https://api.github.com/users/otakutyrant/orgs", "repos_url": "https://api.github.com/users/otakutyrant/repos", "events_url": "https://api.github.com/users/otakutyrant/events{/privacy}", "received_events_url": "https://api.github.com/users/otakutyrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T05:27:07Z", "updated_at": "2020-06-06T18:54:49Z", "closed_at": "2020-06-06T18:54:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\nprint(f\"\"\"{try}\"\"\")\r\n```\r\n\r\nI used flake8 as a checker in neovim and it complained `[flake8] E999: SyntaxError: invalid syntax` in the first line.\r\n\r\nI think that the error could be more readable, like showing reserved keyword used in f-string and locating the specific position.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/943", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/943/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/943/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/943", "id": 627172301, "node_id": "MDU6SXNzdWU2MjcxNzIzMDE=", "number": 943, "title": "E126: behaves differently when part of if statement", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-29T10:38:30Z", "updated_at": "2020-06-14T16:15:25Z", "closed_at": "2020-06-14T16:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the considerable previous issues around `E126`, I'm not sure if this is a bug or just my expectation being wrong.\r\n\r\n`E126` seems to behave differently for this:\r\n``` python\r\nwiblle(\r\n        'arg',\r\n        'arg2',\r\n)\r\n```\r\nwhich produces an error, as I would expect, than for this:\r\n``` python\r\nif not wiblle(\r\n        'arg',\r\n        'arg2',\r\n):\r\n    pass\r\n```\r\nwhich doesn't produce an error.\r\n\r\nIn both cases, the arguments to `wibble` are indented by eight spaces.\r\n\r\nIt's not that `E126` is silent in the if statement case -- changing the indent there to any value outside `(4, 8)` seems to trigger it.\r\n\r\nI'm _guessing_ that this might be here to allow this example from PEP 8:\r\n``` python\r\n# Add some extra indentation on the conditional continuation line.\r\nif (this_is_one_thing\r\n        and that_is_another_thing):\r\n    do_something()\r\n```\r\n\r\nHowever I would contend that this wrapping case is sufficiently different that the extra indentation should never be needed and thus rejected.\r\nThe key differences are:\r\n- the parens are on their own lines than the tokens between them, and\r\n- the parens are part of a function call\r\n\r\n(aside: IMO this style is clear on its own and overall clearer anyway)\r\n\r\nIs this behaviour with `if`s expected and/or would you be open to emitting `E126` here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/939", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/939/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/939/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/939/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/939", "id": 620429129, "node_id": "MDU6SXNzdWU2MjA0MjkxMjk=", "number": 939, "title": "E402 wrongly reported after ignored lines", "user": {"login": "csala", "id": 6129283, "node_id": "MDQ6VXNlcjYxMjkyODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6129283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csala", "html_url": "https://github.com/csala", "followers_url": "https://api.github.com/users/csala/followers", "following_url": "https://api.github.com/users/csala/following{/other_user}", "gists_url": "https://api.github.com/users/csala/gists{/gist_id}", "starred_url": "https://api.github.com/users/csala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csala/subscriptions", "organizations_url": "https://api.github.com/users/csala/orgs", "repos_url": "https://api.github.com/users/csala/repos", "events_url": "https://api.github.com/users/csala/events{/privacy}", "received_events_url": "https://api.github.com/users/csala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T18:49:38Z", "updated_at": "2020-05-18T19:11:31Z", "closed_at": "2020-05-18T19:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code that looks like this:\r\n\r\n```python\r\nimport warnings   # noqa isort:skip\r\nwarnings.filterwarnings(\"ignore\")  # noqa isort:skip\r\n\r\nimport some\r\nimport other\r\nimport imports\r\n```\r\n\r\nUp to `pycodestyle==2.50`, the `noqa` was honored by `pycodestyle` ignoring the lines as if they did not exist, and therefore not complaining on the imports below.\r\n\r\nOn `2.6.0`, the `noqa` does not work anymore and I get an `E402` error for every import I have after the warnings line.\r\n\r\nIs this the expected behavior (could not find any mention of this in the changelogs) or is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/938", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/938/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/938/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/938/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/938", "id": 620343703, "node_id": "MDU6SXNzdWU2MjAzNDM3MDM=", "number": 938, "title": "E741 incorrectly flags variable as ambiguous", "user": {"login": "madman32", "id": 18537709, "node_id": "MDQ6VXNlcjE4NTM3NzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/18537709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madman32", "html_url": "https://github.com/madman32", "followers_url": "https://api.github.com/users/madman32/followers", "following_url": "https://api.github.com/users/madman32/following{/other_user}", "gists_url": "https://api.github.com/users/madman32/gists{/gist_id}", "starred_url": "https://api.github.com/users/madman32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madman32/subscriptions", "organizations_url": "https://api.github.com/users/madman32/orgs", "repos_url": "https://api.github.com/users/madman32/repos", "events_url": "https://api.github.com/users/madman32/events{/privacy}", "received_events_url": "https://api.github.com/users/madman32/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T16:25:34Z", "updated_at": "2020-05-18T16:30:58Z", "closed_at": "2020-05-18T16:30:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following example code is valid syntax (python 3.7/3.8 tested) but seems to cause the E741 ambiguous variable name 'l' failure (in the last line). It looks to me like that in this case L is perfectly valid and not ambiguous?\r\n\r\n```\r\nfrom __future__ import annotations\r\n\r\nimport pydantic\r\n\r\nclass Foo(pydantic.BaseModel):\r\n    uid: str\r\n    size: int\r\n\r\n    @classmethod\r\n    def from_dict(cls, creation_dict) -> Foo:\r\n        uid = creation_dict[\"uid\"]\r\n        size = creation_dict[\"size\"]\r\n        return cls(uid=uid, size=size)\r\n\r\n\r\nt_dict = {\r\n    \"t1\" : [\r\n        {\r\n            \"uid\" : \"blah1\",\r\n            \"size\": 0\r\n        }\r\n    ]\r\n}\r\ntest = {\r\n    l.uid : l for l in (Foo.from_dict(t) for t in t_dict[\"t1\"])\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/930", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/930/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/930/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/930/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/930", "id": 609368995, "node_id": "MDU6SXNzdWU2MDkzNjg5OTU=", "number": 930, "title": "python3-pycodestyle has no executable in /usr/bin or /usr/local/bin - Ubuntu 20.04", "user": {"login": "palisadoes", "id": 16875803, "node_id": "MDQ6VXNlcjE2ODc1ODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/16875803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palisadoes", "html_url": "https://github.com/palisadoes", "followers_url": "https://api.github.com/users/palisadoes/followers", "following_url": "https://api.github.com/users/palisadoes/following{/other_user}", "gists_url": "https://api.github.com/users/palisadoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/palisadoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palisadoes/subscriptions", "organizations_url": "https://api.github.com/users/palisadoes/orgs", "repos_url": "https://api.github.com/users/palisadoes/repos", "events_url": "https://api.github.com/users/palisadoes/events{/privacy}", "received_events_url": "https://api.github.com/users/palisadoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T21:23:01Z", "updated_at": "2020-04-29T21:55:54Z", "closed_at": "2020-04-29T21:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a clean install of Ubuntu 20.04 I noticed that the python3-codestyle standard package doesn't come with an executable. I've had to copy it from other systems that were upgraded to Ubuntu 20.04\r\n\r\nYou can uninstall the package and use `pip3` to get the executable, but the Ubuntu package should include it.\r\n\r\n```\r\n$ cat /etc/issue\r\nUbuntu 20.04 LTS \\n \\l\r\n$\r\n```\r\n\r\n```\r\n$ dpkg-query -L python3-pycodestyle\r\n/.\r\n/usr\r\n/usr/lib\r\n/usr/lib/python3\r\n/usr/lib/python3/dist-packages\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/PKG-INFO\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/dependency_links.txt\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/entry_points.txt\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/namespace_packages.txt\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/not-zip-safe\r\n/usr/lib/python3/dist-packages/pycodestyle-2.5.0.egg-info/top_level.txt\r\n/usr/lib/python3/dist-packages/pycodestyle.py\r\n/usr/share\r\n/usr/share/doc\r\n/usr/share/doc/python3-pycodestyle\r\n/usr/share/doc/python3-pycodestyle/changelog.Debian.gz\r\n/usr/share/doc/python3-pycodestyle/copyright\r\n$\r\n```\r\n\r\n\r\n```\r\n$ dpkg --list python3-pycodestyle\r\nDesired=Unknown/Install/Remove/Purge/Hold\r\n| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\r\n|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\r\n||/ Name                Version      Architecture Description\r\n+++-===================-============-============-==============================================================\r\nii  python3-pycodestyle 2.5.0-2      all          Python style guide checker (formerly called pep8) - Python 3.x\r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/926", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/926/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/926/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/926/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/926", "id": 607744648, "node_id": "MDU6SXNzdWU2MDc3NDQ2NDg=", "number": 926, "title": "2.6.0a1 crash", "user": {"login": "Richardk2n", "id": 5147221, "node_id": "MDQ6VXNlcjUxNDcyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5147221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Richardk2n", "html_url": "https://github.com/Richardk2n", "followers_url": "https://api.github.com/users/Richardk2n/followers", "following_url": "https://api.github.com/users/Richardk2n/following{/other_user}", "gists_url": "https://api.github.com/users/Richardk2n/gists{/gist_id}", "starred_url": "https://api.github.com/users/Richardk2n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Richardk2n/subscriptions", "organizations_url": "https://api.github.com/users/Richardk2n/orgs", "repos_url": "https://api.github.com/users/Richardk2n/repos", "events_url": "https://api.github.com/users/Richardk2n/events{/privacy}", "received_events_url": "https://api.github.com/users/Richardk2n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-27T18:06:03Z", "updated_at": "2020-04-27T19:26:17Z", "closed_at": "2020-04-27T18:28:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This (admitedly somewhat convoluted) code `self.totalTaskExecutionTime += (taskExecutionTime := time()-t1)` produces some kind of error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/924", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/924/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/924/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/924", "id": 598324675, "node_id": "MDU6SXNzdWU1OTgzMjQ2NzU=", "number": 924, "title": "`# noqa` ignored?", "user": {"login": "WarrenWeckesser", "id": 321463, "node_id": "MDQ6VXNlcjMyMTQ2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/321463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WarrenWeckesser", "html_url": "https://github.com/WarrenWeckesser", "followers_url": "https://api.github.com/users/WarrenWeckesser/followers", "following_url": "https://api.github.com/users/WarrenWeckesser/following{/other_user}", "gists_url": "https://api.github.com/users/WarrenWeckesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/WarrenWeckesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WarrenWeckesser/subscriptions", "organizations_url": "https://api.github.com/users/WarrenWeckesser/orgs", "repos_url": "https://api.github.com/users/WarrenWeckesser/repos", "events_url": "https://api.github.com/users/WarrenWeckesser/events{/privacy}", "received_events_url": "https://api.github.com/users/WarrenWeckesser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-04-11T18:29:15Z", "updated_at": "2020-07-09T14:11:12Z", "closed_at": "2020-04-11T22:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's an example:\r\n\r\n```\r\nimport numpy as np\r\n\r\n\r\na = np.array([[ 3.0,  1.0, -4.5],\r\n              [-5.1,  1.5,  2.3],\r\n              [ 0.5, -7.7,  7.1]])\r\n```\r\npycodestyle reports problems on lines 4 and 6:\r\n```\r\n$ pycodestyle pycodestyle_array_noqa.py \r\npycodestyle_array_noqa.py:4:16: E201 whitespace after '['\r\npycodestyle_array_noqa.py:6:16: E201 whitespace after '['\r\n```\r\nI want to ignore those, so I tried\r\n```\r\nimport numpy as np\r\n\r\n\r\na = np.array([[ 3.0,  1.0, -4.5],   # noqa\r\n              [-5.1,  1.5,  2.3],   # noqa\r\n              [ 0.5, -7.7,  7.1]])  # noqa\r\n```\r\nbut pycodestyle 2.5.0 seems to ignore those comments. I get the same report when I run pycodestyle on the edited file.  Is it possible to get pycodestyle to ignore these whitespace issues?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/916", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/916/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/916/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/916", "id": 583695370, "node_id": "MDU6SXNzdWU1ODM2OTUzNzA=", "number": 916, "title": "Incorrect error report for walrus operator", "user": {"login": "gash44", "id": 13015980, "node_id": "MDQ6VXNlcjEzMDE1OTgw", "avatar_url": "https://avatars3.githubusercontent.com/u/13015980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gash44", "html_url": "https://github.com/gash44", "followers_url": "https://api.github.com/users/gash44/followers", "following_url": "https://api.github.com/users/gash44/following{/other_user}", "gists_url": "https://api.github.com/users/gash44/gists{/gist_id}", "starred_url": "https://api.github.com/users/gash44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gash44/subscriptions", "organizations_url": "https://api.github.com/users/gash44/orgs", "repos_url": "https://api.github.com/users/gash44/repos", "events_url": "https://api.github.com/users/gash44/events{/privacy}", "received_events_url": "https://api.github.com/users/gash44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T12:33:46Z", "updated_at": "2020-03-18T15:12:36Z", "closed_at": "2020-03-18T15:12:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "        while (tempR := r-nCk(n-j, k-s)) > 0:\r\n\r\nincorrectly reports the wrong colon :-(\r\ntest.py:48:21: E203 whitespace before ':'\r\ntest.py:48:22: E231 missing whitespace after ':'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/911", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/911/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/911/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/911", "id": 567882130, "node_id": "MDU6SXNzdWU1Njc4ODIxMzA=", "number": 911, "title": "The Next Release (pycodestyle 2.6.x)", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-02-19T22:16:14Z", "updated_at": "2020-05-11T20:04:32Z", "closed_at": "2020-05-11T20:04:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": ":wave: I'm planning to organize the next release of pycodestyle\r\n\r\nI'll be pinning this issue and collecting feedback on things that should end up in this release\r\n\r\nDue to the number of contributions that have gone into `pycodestyle` since the last release, I'm planning to do this as `2.6.0a1` first (an alpha pre-release) -- this should hopefully expand the number of people trying the release (though I suspect not all that many will use the alpha still)\r\n\r\n___\r\n\r\nHow you can help:\r\n\r\n- try out the latest master on your repositories: `pip install --force-reinstall git+https://github.com/pypa/pycodestyle`\r\n- review [open PRs](https://github.com/PyCQA/pycodestyle/pulls)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/910", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/910/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/910/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/910", "id": 567015764, "node_id": "MDU6SXNzdWU1NjcwMTU3NjQ=", "number": 910, "title": "Warn that variables in function defaults are evaluated when the function is read", "user": {"login": "Alex131089", "id": 1735067, "node_id": "MDQ6VXNlcjE3MzUwNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1735067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alex131089", "html_url": "https://github.com/Alex131089", "followers_url": "https://api.github.com/users/Alex131089/followers", "following_url": "https://api.github.com/users/Alex131089/following{/other_user}", "gists_url": "https://api.github.com/users/Alex131089/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alex131089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alex131089/subscriptions", "organizations_url": "https://api.github.com/users/Alex131089/orgs", "repos_url": "https://api.github.com/users/Alex131089/repos", "events_url": "https://api.github.com/users/Alex131089/events{/privacy}", "received_events_url": "https://api.github.com/users/Alex131089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-18T16:37:14Z", "updated_at": "2020-02-19T21:33:50Z", "closed_at": "2020-02-19T21:33:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nfollowing http://flake8.pycqa.org/en/latest/internal/contributing.html#filing-a-bug, I'm posting here: could it be possible to add a check for W0102, Dangerous default value as argument?\r\n\r\nI recently stumbled across this thread https://twitter.com/jangle/status/1227661271325138955 and today I just hit this issue (I think) this way : in a module I'm defining\r\n```py\r\ndef ask(question, choice_validator=lambda x: True, default_answer=None, arg_input=None, file=sys.stderr):\r\n  # ..\r\n  pass\r\n```\r\nBut later I'm redefining `sys.stderr` to capture all script output, and as the default `file` value is already assigned when the module is loaded (I suppose), the redefinition is not effective in this function.\r\n\r\nAs far as I could see, only pylint is implementing this check (not sonarlint nor any other PyCQA; and I'm not sure it's easy to make pylint and flake8 not report duplicate errors).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/909", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/909/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/909/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/909/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/909", "id": 566517936, "node_id": "MDU6SXNzdWU1NjY1MTc5MzY=", "number": 909, "title": "Offer to take up more maintainership here", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T21:07:45Z", "updated_at": "2020-02-19T21:53:52Z", "closed_at": "2020-02-19T21:45:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\ud83d\udc4b \r\n\r\nI'd like to contribute more here, and become a maintainer!\r\n\r\n- I already keep a close eye on this repository (for `flake8`'s sake)\r\n- I'm comfortable with projects of similar size\r\n- I can (probably) help increase the release cadence (and would be wiling to take up work to make pre-releases / etc. a thing)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/908", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/908/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/908/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/908", "id": 566403766, "node_id": "MDU6SXNzdWU1NjY0MDM3NjY=", "number": 908, "title": "E301 regression vs 2.5.0", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-02-17T16:22:33Z", "updated_at": "2020-05-08T14:23:23Z", "closed_at": "2020-05-08T14:23:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### sample\r\n\r\n```python\r\n# ok in both\r\nclass C(Protocol):\r\n    def f(self) -> int: ...\r\n    def g(self) -> int: ...\r\n\r\n# only not ok on master\r\nclass D(Protocol):\r\n    @property\r\n    def f(self) -> int: ...\r\n    @property\r\n    def g(self) -> int: ...\r\n```\r\n\r\n### before\r\n\r\n```console\r\n$ ~/opt/venv/bin/pycodestyle --version\r\n2.5.0\r\n$ ~/opt/venv/bin/pycodestyle t.py\r\n$\r\n```\r\n\r\n### after\r\n\r\n```console\r\n$ git -C venv/src/pycodestyle/ rev-parse HEAD\r\nd69c15eb7ecf77e94988fb55207a78936b48079c\r\n$ venv/bin/pycodestyle t.py\r\nt.py:11:5: E301 expected 1 blank line, found 0\r\n```\r\n\r\n### bisect\r\n\r\n```console\r\n$ git bisect start\r\n$ git bisect bad\r\n$ git bisect good 2.5.0\r\nBisecting: 15 revisions left to test after this (roughly 4 steps)\r\n[7493e0a0e76f02640b6ff0f7cb1619747101a1c6] Fix E302 false negative in presence of decorators.\r\n$ git bisect run python3 -m pycodestyle ../t.py\r\nrunning python3 -m pycodestyle ../t.py\r\n../t.py:11:5: E301 expected 1 blank line, found 0\r\nBisecting: 6 revisions left to test after this (roughly 3 steps)\r\n[d1e29861597f22d01e0f528aaccdb744d5bade81] Merge pull request #847 from adamchainz/E225_boolean_operators\r\nrunning python3 -m pycodestyle ../t.py\r\nBisecting: 3 revisions left to test after this (roughly 2 steps)\r\n[b8db33dfa6cd4029b75efd1e7cab7c1b64d03bc7] Fixes some issues with E741 detection\r\nrunning python3 -m pycodestyle ../t.py\r\nBisecting: 1 revision left to test after this (roughly 1 step)\r\n[3cfd527929fc5dfcdc13a0edf6a6d13f5eb76fcb] Add line breaks in comment\r\nrunning python3 -m pycodestyle ../t.py\r\nBisecting: 0 revisions left to test after this (roughly 0 steps)\r\n[96d2db0fa17cc41ae45bcc6fa5ca72e6f712d1bf] Merge pull request #853 from rettenbs/master\r\nrunning python3 -m pycodestyle ../t.py\r\n7493e0a0e76f02640b6ff0f7cb1619747101a1c6 is the first bad commit\r\ncommit 7493e0a0e76f02640b6ff0f7cb1619747101a1c6\r\nAuthor: Antony Lee <anntzer.lee@gmail.com>\r\nDate:   Tue Mar 26 18:01:22 2019 +0100\r\n\r\n    Fix E302 false negative in presence of decorators.\r\n\r\n:100755 100755 03696b7a04d5071d75676bdd2a1eefc22559a0a5 ec6b894d117c796e55cfe35724cfd6d7e60eb661 M\tpycodestyle.py\r\n:040000 040000 e796744e186d875888aa2143a20b97ccd57e8172 643b9730bb7ed077aec41c43eecb0123f6f6c0ae M\ttestsuite\r\nbisect run success\r\n```\r\n\r\nclaims 7493e0a0e76f02640b6ff0f7cb1619747101a1c6 (CC @anntzer) is the regressing commit", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/907", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/907/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/907/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/907", "id": 564815008, "node_id": "MDU6SXNzdWU1NjQ4MTUwMDg=", "number": 907, "title": "Types comparison (E721) false error", "user": {"login": "facundobatista", "id": 184060, "node_id": "MDQ6VXNlcjE4NDA2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/184060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facundobatista", "html_url": "https://github.com/facundobatista", "followers_url": "https://api.github.com/users/facundobatista/followers", "following_url": "https://api.github.com/users/facundobatista/following{/other_user}", "gists_url": "https://api.github.com/users/facundobatista/gists{/gist_id}", "starred_url": "https://api.github.com/users/facundobatista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facundobatista/subscriptions", "organizations_url": "https://api.github.com/users/facundobatista/orgs", "repos_url": "https://api.github.com/users/facundobatista/repos", "events_url": "https://api.github.com/users/facundobatista/events{/privacy}", "received_events_url": "https://api.github.com/users/facundobatista/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-13T16:46:38Z", "updated_at": "2020-02-13T17:15:21Z", "closed_at": "2020-02-13T17:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a DB of houses for sell. I have a types module with several custom types (all inheriting enum.Enum).\r\n\r\nI get this code failing wrongly with E721:\r\n\r\n    if forsell.house_type == types.HouseType:\r\n         # do something\r\n\r\nProblem is:\r\n\r\n```\r\n>>> COMPARE_TYPE_REGEX = re.compile(r'(?:[=!]=|is(?:\\s+not)?)\\s+type(?:s.\\w+Type'\r\n...:                                r'|\\s*\\(\\s*([^)]*[^ )])\\s*\\))')\r\n>>>\r\n>>> COMPARE_TYPE_REGEX.search(\"        if forsell.house_type == types.HouseType:\")\r\n<_sre.SRE_Match object; span=(30, 48), match='== types.HouseType'>\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/905", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/905/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/905/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/905", "id": 557786720, "node_id": "MDU6SXNzdWU1NTc3ODY3MjA=", "number": 905, "title": "Support type ignore comments with explicit error codes.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T22:10:45Z", "updated_at": "2020-01-30T22:46:22Z", "closed_at": "2020-01-30T22:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `mypy` supports silencing specific errors with a comment using the syntax: `type: ignore[<error-code>]`\r\n\r\nThis style comment is reported as a violation of `F723`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/904", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/904/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/904/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/904", "id": 552782604, "node_id": "MDU6SXNzdWU1NTI3ODI2MDQ=", "number": 904, "title": "Inconsistent E127 in generator expression used as argument", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T10:24:11Z", "updated_at": "2020-01-21T16:51:47Z", "closed_at": "2020-01-21T16:51:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of pycodestyle 2.5.0\r\n```\r\n(x for x in container\r\n if somecond(x)\r\n    and othercond(x))\r\n```\r\ngenerates no warning (which I think is correct) whereas\r\n```\r\nsorted(x for x in container\r\n       if somecond(x)\r\n          and othercond(x))\r\n```\r\nresults in an (IMO incorrect) \"E127 continuation line over-indented for visual indent\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/902", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/902/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/902/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/902", "id": 550801017, "node_id": "MDU6SXNzdWU1NTA4MDEwMTc=", "number": 902, "title": "Invalid warning about escape sequence in f-string", "user": {"login": "sproshev", "id": 4990763, "node_id": "MDQ6VXNlcjQ5OTA3NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4990763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sproshev", "html_url": "https://github.com/sproshev", "followers_url": "https://api.github.com/users/sproshev/followers", "following_url": "https://api.github.com/users/sproshev/following{/other_user}", "gists_url": "https://api.github.com/users/sproshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sproshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sproshev/subscriptions", "organizations_url": "https://api.github.com/users/sproshev/orgs", "repos_url": "https://api.github.com/users/sproshev/repos", "events_url": "https://api.github.com/users/sproshev/events{/privacy}", "received_events_url": "https://api.github.com/users/sproshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T13:16:55Z", "updated_at": "2020-01-18T22:04:03Z", "closed_at": "2020-01-18T22:04:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Raising `W605: Invalid escape sequence` on the following sample:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    print(f\"my\\{'string'}\")\r\n```\r\n\r\nThe code runs fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/900", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/900/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/900/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/900/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/900", "id": 548562768, "node_id": "MDU6SXNzdWU1NDg1NjI3Njg=", "number": 900, "title": "Check if module is imported twice.", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-12T12:20:52Z", "updated_at": "2020-01-12T13:09:14Z", "closed_at": "2020-01-12T13:09:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is currently no warning emitted e.g. for\r\n```python\r\nimport io\r\nimport io\r\n```\r\nbut having one would be nice.\r\n(A more realistic case would be a long, unsorted list of imports where the same import occurs twice relatively far away from one another.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/899", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/899/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/899/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/899/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/899", "id": 542211993, "node_id": "MDU6SXNzdWU1NDIyMTE5OTM=", "number": 899, "title": "Release to PyPI, now and more frequently", "user": {"login": "impredicative", "id": 566650, "node_id": "MDQ6VXNlcjU2NjY1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/566650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/impredicative", "html_url": "https://github.com/impredicative", "followers_url": "https://api.github.com/users/impredicative/followers", "following_url": "https://api.github.com/users/impredicative/following{/other_user}", "gists_url": "https://api.github.com/users/impredicative/gists{/gist_id}", "starred_url": "https://api.github.com/users/impredicative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/impredicative/subscriptions", "organizations_url": "https://api.github.com/users/impredicative/orgs", "repos_url": "https://api.github.com/users/impredicative/repos", "events_url": "https://api.github.com/users/impredicative/events{/privacy}", "received_events_url": "https://api.github.com/users/impredicative/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-12-24T21:36:54Z", "updated_at": "2020-03-06T19:39:25Z", "closed_at": "2020-01-16T10:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please release now and more frequently! As per [PEP 602](https://www.python.org/dev/peps/pep-0602/), Python now has an annual release cycle, and pycodestyle should really try to keep up!\r\n\r\nThere has been no supporting release of pycodestyle since Python 3.8 was released. There have already been essential change for merged that users are waiting for, e.g. https://github.com/PyCQA/pycodestyle/pull/879\r\n\r\nThe last release was about a year ago! For a comparison, please see how much more frequently other PyQCA tools release, i.e. several times a year!\r\n* https://github.com/PyCQA/pylint/releases\r\n* https://github.com/PyCQA/bandit/releases", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/896", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/896/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/896/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/896", "id": 528120796, "node_id": "MDU6SXNzdWU1MjgxMjA3OTY=", "number": 896, "title": "pycodestyle:3: ResourceWarning: unclosed file", "user": {"login": "sabgit", "id": 29819710, "node_id": "MDQ6VXNlcjI5ODE5NzEw", "avatar_url": "https://avatars1.githubusercontent.com/u/29819710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabgit", "html_url": "https://github.com/sabgit", "followers_url": "https://api.github.com/users/sabgit/followers", "following_url": "https://api.github.com/users/sabgit/following{/other_user}", "gists_url": "https://api.github.com/users/sabgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabgit/subscriptions", "organizations_url": "https://api.github.com/users/sabgit/orgs", "repos_url": "https://api.github.com/users/sabgit/repos", "events_url": "https://api.github.com/users/sabgit/events{/privacy}", "received_events_url": "https://api.github.com/users/sabgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T14:23:46Z", "updated_at": "2020-02-19T21:32:13Z", "closed_at": "2020-02-19T21:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hitting the following warning with `pycodestyle== 2.5.0`:\r\n```bash\r\n$ pycodestyle -h\r\n  File \"/tmp/pyenv/bin/pycodestyle\", line 3, in <module>\r\n    import os; activate_this=os.path.join(os.path.dirname(os.path.realpath(__file__)), 'activate_this.py'); exec(compile(open(activate_this).read(), activate_this, 'exec'), { '__file__': activate_this}); del os, activate_this\r\n  File \"/tmp/pyenv/lib/python3.7/warnings.py\", line 110, in _showwarnmsg\r\n    msg.file, msg.line)\r\n  File \"/tmp/pyenv/lib/python3.7/sitecustomize.py\", line 9, in show_warning_with_traceback\r\n    traceback.print_stack(file=log)\r\n/tmp/pyenv/bin/pycodestyle:3: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/pyenv/bin/activate_this.py' mode='r' encoding='UTF-8'>\r\n  import os; activate_this=os.path.join(os.path.dirname(os.path.realpath(__file__)), 'activate_this.py'); exec(compile(open(activate_this).read(), activate_this, 'exec'), { '__file__': activate_this}); del os, activate_this\r\n```\r\n\r\nIf I change it to close the file properly as in following, the warning goes away: \r\n\r\n```Python\r\nimport os; activate_this=os.path.join(os.path.dirname(os.path.realpath(__file__)), 'activate_this.py'); s=open(activate_this);exec(compile(s.read(), activate_this, 'exec'), { '__file__': activate_this}); s.close(); del os, activate_this\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/894", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/894/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/894/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/894/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/894", "id": 526459726, "node_id": "MDU6SXNzdWU1MjY0NTk3MjY=", "number": 894, "title": "Add option to not require two blank lines between TypeVar and function", "user": {"login": "GoldsteinE", "id": 12019211, "node_id": "MDQ6VXNlcjEyMDE5MjEx", "avatar_url": "https://avatars2.githubusercontent.com/u/12019211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoldsteinE", "html_url": "https://github.com/GoldsteinE", "followers_url": "https://api.github.com/users/GoldsteinE/followers", "following_url": "https://api.github.com/users/GoldsteinE/following{/other_user}", "gists_url": "https://api.github.com/users/GoldsteinE/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoldsteinE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoldsteinE/subscriptions", "organizations_url": "https://api.github.com/users/GoldsteinE/orgs", "repos_url": "https://api.github.com/users/GoldsteinE/repos", "events_url": "https://api.github.com/users/GoldsteinE/events{/privacy}", "received_events_url": "https://api.github.com/users/GoldsteinE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T09:13:57Z", "updated_at": "2020-02-19T21:31:45Z", "closed_at": "2020-02-19T21:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ugly:\r\n```python\r\nT = TypeVar('T')\r\n\r\n\r\ndef keep_same(x: T) -> T:\r\n    return x\r\n```\r\n\r\nAs in [PEP-484](https://www.python.org/dev/peps/pep-0484/):\r\n```python\r\nT = TypeVar('T')\r\n\r\ndef keep_same(x: T) -> T:\r\n    return x\r\n```\r\n\r\nGood and [also used in PEP-484](https://www.python.org/dev/peps/pep-0484/):\r\n```python\r\nT = TypeVar('T')\r\ndef keep_same(x: T) -> T:\r\n    return x\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/893", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/893/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/893/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/893", "id": 523431057, "node_id": "MDU6SXNzdWU1MjM0MzEwNTc=", "number": 893, "title": "Support PEP 572", "user": {"login": "matthewgdv", "id": 37582022, "node_id": "MDQ6VXNlcjM3NTgyMDIy", "avatar_url": "https://avatars1.githubusercontent.com/u/37582022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewgdv", "html_url": "https://github.com/matthewgdv", "followers_url": "https://api.github.com/users/matthewgdv/followers", "following_url": "https://api.github.com/users/matthewgdv/following{/other_user}", "gists_url": "https://api.github.com/users/matthewgdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewgdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewgdv/subscriptions", "organizations_url": "https://api.github.com/users/matthewgdv/orgs", "repos_url": "https://api.github.com/users/matthewgdv/repos", "events_url": "https://api.github.com/users/matthewgdv/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewgdv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-15T12:00:59Z", "updated_at": "2019-11-15T15:39:38Z", "closed_at": "2019-11-15T15:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the walrus operator (assignment expressions), are not understood correctly by pycodestyle, generating incorrect errors on account of thinking that the colon is signifying scope, and that the whitespace rules around it should be those of a scope-denoting colon.\r\n\r\nBelow is a simple example:\r\n\r\n![pycodestyle](https://user-images.githubusercontent.com/37582022/68942105-89202080-079f-11ea-9f7a-dd4f56e9fa06.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/892", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/892/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/892/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/892", "id": 523035098, "node_id": "MDU6SXNzdWU1MjMwMzUwOTg=", "number": 892, "title": "Many internal line breaks do not trigger E303", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T18:39:20Z", "updated_at": "2020-02-19T21:07:59Z", "closed_at": "2020-02-19T21:07:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For example:\r\n\r\n```python\r\nx = (\r\n    1,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    2,\r\n)\r\n```\r\n\r\nI expect this to trigger E303, however it does not", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/891", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/891/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/891/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/891", "id": 521504851, "node_id": "MDU6SXNzdWU1MjE1MDQ4NTE=", "number": 891, "title": "E231 for trailing comma in list", "user": {"login": "remarkov", "id": 10799770, "node_id": "MDQ6VXNlcjEwNzk5Nzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/10799770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remarkov", "html_url": "https://github.com/remarkov", "followers_url": "https://api.github.com/users/remarkov/followers", "following_url": "https://api.github.com/users/remarkov/following{/other_user}", "gists_url": "https://api.github.com/users/remarkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/remarkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remarkov/subscriptions", "organizations_url": "https://api.github.com/users/remarkov/orgs", "repos_url": "https://api.github.com/users/remarkov/repos", "events_url": "https://api.github.com/users/remarkov/events{/privacy}", "received_events_url": "https://api.github.com/users/remarkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-12T11:53:31Z", "updated_at": "2019-11-14T14:45:42Z", "closed_at": "2019-11-14T14:44:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Black to format the code but I also have checks in PyCharm that highlight the pep8 errors. So I noticed a conflict between the two which disturbs me. For some reason I could not find anything related to this in the issues of pycodestyle nor in the issues of Black. Here is the example that I have (and I doubt this is something unique):\r\n```\r\n> pycodestyle --show-source --show-pep8 settings.py                                                                              Tue Nov 12 12:42:20 2019\r\nsettings.py:11:70: E231 missing whitespace after ','\r\n    \"ALLOWED_HOSTS\", cast=CommaSeparatedStrings, default=[\"127.0.0.1\",],\r\n                                                                     ^\r\n    Each comma, semicolon or colon should be followed by whitespace.\r\n\r\n    Okay: [a, b]\r\n    Okay: (3,)\r\n    Okay: a[1:4]\r\n    Okay: a[:4]\r\n    Okay: a[1:]\r\n    Okay: a[1:4:2]\r\n    E231: ['a','b']\r\n    E231: foo(bar,baz)\r\n    E231: [{'a':'b'}]\r\n```\r\n\r\nEven in the given example there is a similar syntax on line 2 which is okay by pep8 so why pycodestyle treats this as an error?\r\n\r\nThe full part of the code is this:\r\n```\r\nALLOWED_HOSTS = config(\r\n    \"ALLOWED_HOSTS\", cast=CommaSeparatedStrings, default=[\"127.0.0.1\",],\r\n)\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/890", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/890/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/890/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/890", "id": 516353411, "node_id": "MDU6SXNzdWU1MTYzNTM0MTE=", "number": 890, "title": "Support python 3.8 positional-only parameters", "user": {"login": "scottj97", "id": 86350, "node_id": "MDQ6VXNlcjg2MzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/86350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottj97", "html_url": "https://github.com/scottj97", "followers_url": "https://api.github.com/users/scottj97/followers", "following_url": "https://api.github.com/users/scottj97/following{/other_user}", "gists_url": "https://api.github.com/users/scottj97/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottj97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottj97/subscriptions", "organizations_url": "https://api.github.com/users/scottj97/orgs", "repos_url": "https://api.github.com/users/scottj97/repos", "events_url": "https://api.github.com/users/scottj97/events{/privacy}", "received_events_url": "https://api.github.com/users/scottj97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-01T21:21:50Z", "updated_at": "2019-11-01T21:36:57Z", "closed_at": "2019-11-01T21:36:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using tidypy with python 3.8.0 and would like to use the new positional-only parameters. Tidypy 0.11.0 is reporting three issues from pycodestyle 2.5.0:\r\n\r\n```\r\nrun.py (4)\r\n   10:23  missing whitespace around operator (pycodestyle:E225)\r\n   23:5   Method should have \"self\" as first argument (pylint:no-self-argument)\r\n   23:27  missing whitespace around operator (pycodestyle:E225)\r\n   23:30  first argument of a method should be named 'self' (pycodestyle:N805)\r\n```\r\n\r\nInterestingly, when I run pycodestyle directly, it only reports two of those three:\r\n\r\n```\r\nrun.py:10:23: E225 missing whitespace around operator\r\nrun.py:23:27: E225 missing whitespace around operator\r\n```\r\n\r\nPerhaps tidypy uses a different parser that also needs work?\r\n\r\nThe complete run.py:\r\n```\r\n#!python3\r\n\"\"\"Test linting.\r\n\r\nThis is only intended to test tidypy's linters' support for python\r\n3.8's positional-only parameters.\r\n\r\n\"\"\"\r\n\r\n    \r\ndef normal_func(abc, /, xyz=None):\r\n    \"\"\"Do something funcy.\"\"\"\r\n    if abc and xyz:\r\n        print(\"found something\")\r\n\r\n\r\nclass Foobar:\r\n    \"\"\"Class for frobulating the Foobar.\"\"\"\r\n\r\n    def __init__(self, abc):\r\n        \"\"\"Initialize object.\"\"\"\r\n        self.abc = abc\r\n\r\n    def runme(self, qrs, /, xyz=None):\r\n        \"\"\"Do something funcy.\"\"\"\r\n        if self.abc and qrs and xyz:\r\n            print(\"found something else\")\r\n\r\n    def blowup(self):\r\n        \"\"\"Die nasty if not abc.\"\"\"\r\n        if not self.abc:\r\n            raise RuntimeError()\r\n\r\n\r\ndef main():\r\n    \"\"\"Run main command-line program.\"\"\"\r\n    normal_func(True, xyz=True)\r\n    foobar = Foobar(True)\r\n    foobar.runme(True, xyz=True)\r\n    foobar.blowup()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/885", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/885/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/885/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/885", "id": 492144998, "node_id": "MDU6SXNzdWU0OTIxNDQ5OTg=", "number": 885, "title": "Indentation containing tabs raise E117 error (again)", "user": {"login": "juancroldan", "id": 9042837, "node_id": "MDQ6VXNlcjkwNDI4Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9042837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juancroldan", "html_url": "https://github.com/juancroldan", "followers_url": "https://api.github.com/users/juancroldan/followers", "following_url": "https://api.github.com/users/juancroldan/following{/other_user}", "gists_url": "https://api.github.com/users/juancroldan/gists{/gist_id}", "starred_url": "https://api.github.com/users/juancroldan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juancroldan/subscriptions", "organizations_url": "https://api.github.com/users/juancroldan/orgs", "repos_url": "https://api.github.com/users/juancroldan/repos", "events_url": "https://api.github.com/users/juancroldan/events{/privacy}", "received_events_url": "https://api.github.com/users/juancroldan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-09-11T10:15:13Z", "updated_at": "2020-05-11T17:37:38Z", "closed_at": "2020-02-19T21:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This happened to me when using pycodestyle 2.5.0.\r\n\r\nInstruction to reproduce:\r\n1. Create a script test.py with the following contents:\r\n```\r\ndef a(b):\r\n\treturn b  # indented with tab\r\n```\r\n2. Run `pycodestyle --show-source --show-pep8 test.py`\r\n3. Output obtained:\r\n```\r\ntest.py:2:1: W191 indentation contains tabs\r\n\treturn b\r\n^\r\n    On new projects, spaces-only are strongly recommended over tabs.\r\n\r\n    Okay: if True:\\n    return\r\n    W191: if True:\\n\\treturn\r\ntest.py:2:2: E117 over-indented\r\n\treturn b\r\n\t^\r\n    Use 4 spaces per indentation level.\r\n\r\n    For really old code that you don't want to mess up, you can continue\r\n    to use 8-space tabs.\r\n\r\n    Okay: a = 1\r\n    Okay: if a == 0:\\n    a = 1\r\n    E111:   a = 1\r\n    E114:   # a = 1\r\n\r\n    Okay: for item in items:\\n    pass\r\n    E112: for item in items:\\npass\r\n    E115: for item in items:\\n# Hi\\n    pass\r\n\r\n    Okay: a = 1\\nb = 2\r\n    E113: a = 1\\n    b = 2\r\n    E116: a = 1\\n    # b = 2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/884", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/884/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/884/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/884", "id": 490413490, "node_id": "MDU6SXNzdWU0OTA0MTM0OTA=", "number": 884, "title": "E302 force 2 spaces at the start of the file", "user": {"login": "Pycz", "id": 1331077, "node_id": "MDQ6VXNlcjEzMzEwNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1331077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pycz", "html_url": "https://github.com/Pycz", "followers_url": "https://api.github.com/users/Pycz/followers", "following_url": "https://api.github.com/users/Pycz/following{/other_user}", "gists_url": "https://api.github.com/users/Pycz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pycz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pycz/subscriptions", "organizations_url": "https://api.github.com/users/Pycz/orgs", "repos_url": "https://api.github.com/users/Pycz/repos", "events_url": "https://api.github.com/users/Pycz/events{/privacy}", "received_events_url": "https://api.github.com/users/Pycz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-06T16:22:05Z", "updated_at": "2019-09-06T16:39:26Z", "closed_at": "2019-09-06T16:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I meet an issue today. \r\n`pycodestyle` on this code:\r\n\r\n```python\r\ndef test(\r\n    param\r\n):\r\n    print(param)\r\n\r\n```\r\n says \r\n```\r\n$ pycodestyle test.py\r\ntest.py:1:1: E302 expected 2 blank lines, found 0\r\n```\r\nbut this version works fine:\r\n```python\r\ndef test(param):\r\n    print(param)\r\n\r\n```\r\nIs this a bug or intended behaviour?\r\nPycodestyle version - 2.5.0, ubuntu 16.04, python 3.7.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/876", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/876/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/876/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/876", "id": 467547738, "node_id": "MDU6SXNzdWU0Njc1NDc3Mzg=", "number": 876, "title": "E701: multiple statements on one line (false-positive)", "user": {"login": "a-kravch", "id": 52835579, "node_id": "MDQ6VXNlcjUyODM1NTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/52835579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-kravch", "html_url": "https://github.com/a-kravch", "followers_url": "https://api.github.com/users/a-kravch/followers", "following_url": "https://api.github.com/users/a-kravch/following{/other_user}", "gists_url": "https://api.github.com/users/a-kravch/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-kravch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-kravch/subscriptions", "organizations_url": "https://api.github.com/users/a-kravch/orgs", "repos_url": "https://api.github.com/users/a-kravch/repos", "events_url": "https://api.github.com/users/a-kravch/events{/privacy}", "received_events_url": "https://api.github.com/users/a-kravch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-12T18:35:37Z", "updated_at": "2019-07-12T18:41:23Z", "closed_at": "2019-07-12T18:41:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n[compound_statements ](https://github.com/PyCQA/pycodestyle/blob/9726e10004e5615c432f126530ee0540b9903f6e/pycodestyle.py#L1106) produce false-positive on lines like:\r\n```python\r\n# Just variable with type definition\r\nforeigner: str = ''\r\ndefinitions: list = None\r\nclassmates: dict = None\r\n```\r\nSimple test:\r\n```python\r\nfrom pycodestyle import compound_statements\r\nres = tuple(compound_statements(\"foreigner: str = ''\"))\r\nassert not res, res\r\n```\r\nOutput:\r\n```bash\r\n>>> from pycodestyle import compound_statements\r\n>>> res = tuple(compound_statements(\"foreigner: str = ''\"))\r\n>>> assert not res, res\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError: ((9, 'E701 multiple statements on one line (colon)'),)\r\n```\r\nRegex [`STARTSWITH_INDENT_STATEMENT_REGEX`](https://github.com/PyCQA/pycodestyle/blob/9726e10004e5615c432f126530ee0540b9903f6e/pycodestyle.py#L150) match whole words which startswith built-in definitions listed in regex:\r\n```python\r\nSTARTSWITH_INDENT_STATEMENT_REGEX = re.compile(\r\n    r'^\\s*({0})'.format('|'.join(s.replace(' ', r'\\s+') for s in (\r\n        'def', 'async def',\r\n        'for', 'async for',\r\n        'if', 'elif', 'else',\r\n        'try', 'except', 'finally',\r\n        'with', 'async with',\r\n        'class',\r\n        'while',\r\n    )))\r\n)\r\n```\r\n\r\nThis problem could be fixed by improving regex to match ends of the words (`\\b`):\r\n```python\r\nSTARTSWITH_INDENT_STATEMENT_REGEX = re.compile(\r\n    r'^\\s*({0})\\b'.format('|'.join(s.replace(' ', r'\\s+') for s in (\r\n        'def', 'async def',\r\n        'for', 'async for',\r\n        'if', 'elif', 'else',\r\n        'try', 'except', 'finally',\r\n        'with', 'async with',\r\n        'class',\r\n        'while',\r\n    )))\r\n)\r\n```\r\nThanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/874", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/874/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/874/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/874/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/874", "id": 466955420, "node_id": "MDU6SXNzdWU0NjY5NTU0MjA=", "number": 874, "title": "W504 false positive for type annotation `...`", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-11T15:15:40Z", "updated_at": "2019-07-11T20:51:46Z", "closed_at": "2019-07-11T20:51:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\ndef f(\r\n    match: str = ...\r\n):\r\n    ...\r\n```\r\n\r\n```console\r\n$ pycodestyle t.py --select=W504\r\nt.py:2:18: W504 line break after binary operator\r\n$ pycodestyle --version\r\n2.5.0\r\n```\r\n\r\ndiscovered in https://github.com/pytest-dev/pytest/pull/5593/files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/873", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/873/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/873/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/873/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/873", "id": 463140588, "node_id": "MDU6SXNzdWU0NjMxNDA1ODg=", "number": 873, "title": "E701 on type annotation of statement", "user": {"login": "pLOPeGG", "id": 23520944, "node_id": "MDQ6VXNlcjIzNTIwOTQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/23520944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pLOPeGG", "html_url": "https://github.com/pLOPeGG", "followers_url": "https://api.github.com/users/pLOPeGG/followers", "following_url": "https://api.github.com/users/pLOPeGG/following{/other_user}", "gists_url": "https://api.github.com/users/pLOPeGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/pLOPeGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pLOPeGG/subscriptions", "organizations_url": "https://api.github.com/users/pLOPeGG/orgs", "repos_url": "https://api.github.com/users/pLOPeGG/repos", "events_url": "https://api.github.com/users/pLOPeGG/events{/privacy}", "received_events_url": "https://api.github.com/users/pLOPeGG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-02T10:08:48Z", "updated_at": "2019-07-02T12:30:46Z", "closed_at": "2019-07-02T12:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "On python 3.6.8 and 3.7.3, pep8 outputs E701 when using type annotation on statements. I'm using conda on windows to install pep8 and pycodestyle.\r\nThis problem was fixed by #612 but still happens in my code. My variables don't start with keywords.\r\n\r\n```\r\nconda install pep8 pycodestyle\r\n```\r\n\r\nIn VSCode when selecting pep8 as linter the following code is flagged by pep8:\r\n```python\r\nmy_variable: int = 3\r\n```\r\n![image](https://user-images.githubusercontent.com/23520944/60504162-5cbca980-9cc1-11e9-8f1f-eb838c7c44bf.png)\r\n\r\nThis is not happening with flake8.\r\n\r\nversions of libraries:\r\n```\r\npep8: 1.7.1\r\npycodestyle: 2.5.0\r\nflake8: 3.7.7\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/867", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/867/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/867/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/867", "id": 447597709, "node_id": "MDU6SXNzdWU0NDc1OTc3MDk=", "number": 867, "title": "Support PEP 570", "user": {"login": "sproshev", "id": 4990763, "node_id": "MDQ6VXNlcjQ5OTA3NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4990763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sproshev", "html_url": "https://github.com/sproshev", "followers_url": "https://api.github.com/users/sproshev/followers", "following_url": "https://api.github.com/users/sproshev/following{/other_user}", "gists_url": "https://api.github.com/users/sproshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sproshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sproshev/subscriptions", "organizations_url": "https://api.github.com/users/sproshev/orgs", "repos_url": "https://api.github.com/users/sproshev/repos", "events_url": "https://api.github.com/users/sproshev/events{/privacy}", "received_events_url": "https://api.github.com/users/sproshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-23T11:21:50Z", "updated_at": "2020-07-14T16:57:09Z", "closed_at": "2020-03-24T21:44:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.python.org/dev/peps/pep-0570\r\n\r\nE225 should be disabled for `/` in parameters list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/865", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/865/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/865/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/865/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/865", "id": 438406618, "node_id": "MDU6SXNzdWU0Mzg0MDY2MTg=", "number": 865, "title": "Support PEP 572", "user": {"login": "sproshev", "id": 4990763, "node_id": "MDQ6VXNlcjQ5OTA3NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4990763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sproshev", "html_url": "https://github.com/sproshev", "followers_url": "https://api.github.com/users/sproshev/followers", "following_url": "https://api.github.com/users/sproshev/following{/other_user}", "gists_url": "https://api.github.com/users/sproshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/sproshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sproshev/subscriptions", "organizations_url": "https://api.github.com/users/sproshev/orgs", "repos_url": "https://api.github.com/users/sproshev/repos", "events_url": "https://api.github.com/users/sproshev/events{/privacy}", "received_events_url": "https://api.github.com/users/sproshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-04-29T16:41:55Z", "updated_at": "2020-02-17T16:01:54Z", "closed_at": "2019-10-21T17:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.python.org/dev/peps/pep-0572/\r\n\r\nE203 and E231 should be disabled for `:=` in assignment expressions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/863", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/863/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/863/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/863", "id": 428933797, "node_id": "MDU6SXNzdWU0Mjg5MzM3OTc=", "number": 863, "title": "\u2018l\u2019, \u2018O\u2019, or \u2018I\u2019 names not checked in function parameters", "user": {"login": "atzannes", "id": 1581907, "node_id": "MDQ6VXNlcjE1ODE5MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1581907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atzannes", "html_url": "https://github.com/atzannes", "followers_url": "https://api.github.com/users/atzannes/followers", "following_url": "https://api.github.com/users/atzannes/following{/other_user}", "gists_url": "https://api.github.com/users/atzannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/atzannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atzannes/subscriptions", "organizations_url": "https://api.github.com/users/atzannes/orgs", "repos_url": "https://api.github.com/users/atzannes/repos", "events_url": "https://api.github.com/users/atzannes/events{/privacy}", "received_events_url": "https://api.github.com/users/atzannes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T19:22:26Z", "updated_at": "2019-04-03T20:23:15Z", "closed_at": "2019-04-03T20:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code does not raise any warnings:\r\n```\r\ndef f(l):\r\n    return l\r\n```\r\nIt seems that E741, E742, and E743 do not check function parameter names for bad names, but [PEP8 (names to avoid)](https://www.python.org/dev/peps/pep-0008/#names-to-avoid) does not seem to make a special exception for those.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/862", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/862/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/862/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/862/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/862", "id": 428804500, "node_id": "MDU6SXNzdWU0Mjg4MDQ1MDA=", "number": 862, "title": "E127: pycodestyle shows E127 while code seems to be formatted correctly", "user": {"login": "stanislawskwark", "id": 46684704, "node_id": "MDQ6VXNlcjQ2Njg0NzA0", "avatar_url": "https://avatars3.githubusercontent.com/u/46684704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislawskwark", "html_url": "https://github.com/stanislawskwark", "followers_url": "https://api.github.com/users/stanislawskwark/followers", "following_url": "https://api.github.com/users/stanislawskwark/following{/other_user}", "gists_url": "https://api.github.com/users/stanislawskwark/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislawskwark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislawskwark/subscriptions", "organizations_url": "https://api.github.com/users/stanislawskwark/orgs", "repos_url": "https://api.github.com/users/stanislawskwark/repos", "events_url": "https://api.github.com/users/stanislawskwark/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislawskwark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T14:35:17Z", "updated_at": "2020-06-14T16:23:10Z", "closed_at": "2020-06-14T16:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code results with pycodestyle warning \r\n\"E127 continuation line over-indented for visual indent\"\r\n```\r\nfor i in range(5):\r\n    print(\"this_line_causes_the_warning\")\r\n    assert i == \\\r\n           3\r\n```\r\n\r\nwhile for following pieces of code there are no warnings:\r\n```\r\nfor i in range(5):\r\n    assert i == \\\r\n           3\r\n```\r\n\r\n```\r\nprint()\r\nassert 3 == \\\r\n       3, \"some error\"\r\n```\r\npycodestyle version - 2.5.0\r\nPython version - 3.7.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/861", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/861/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/861/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/861", "id": 427234465, "node_id": "MDU6SXNzdWU0MjcyMzQ0NjU=", "number": 861, "title": "2.5.1 release", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-30T03:01:36Z", "updated_at": "2020-02-19T22:17:04Z", "closed_at": "2020-02-19T22:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we get a 2.5.1 release?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/860", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/860/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/860/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/860", "id": 426183886, "node_id": "MDU6SXNzdWU0MjYxODM4ODY=", "number": 860, "title": "E302 expected 2 blank lines, found 0 for single multiline function definition in file", "user": {"login": "tbicr", "id": 416731, "node_id": "MDQ6VXNlcjQxNjczMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/416731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbicr", "html_url": "https://github.com/tbicr", "followers_url": "https://api.github.com/users/tbicr/followers", "following_url": "https://api.github.com/users/tbicr/following{/other_user}", "gists_url": "https://api.github.com/users/tbicr/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbicr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbicr/subscriptions", "organizations_url": "https://api.github.com/users/tbicr/orgs", "repos_url": "https://api.github.com/users/tbicr/repos", "events_url": "https://api.github.com/users/tbicr/events{/privacy}", "received_events_url": "https://api.github.com/users/tbicr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-27T21:07:03Z", "updated_at": "2020-02-19T21:25:43Z", "closed_at": "2020-02-19T21:25:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: 3.7.2\r\npycodestyle: 2.5.0\r\n\r\nE302 expected 2 blank lines, found 0 for single multiline function definition in file, but no issue single line function definition\r\n\r\nhaven file:\r\n\r\n```\r\ndef test(\r\n    param_1234567890_1, param_1234567890_2, param_1234567890_3, param_1234567890_4\r\n):\r\n    pass\r\n```\r\n\r\nrun:\r\n`flake8 file.py`\r\n\r\ngot:\r\n`file.py:1:1: E302 expected 2 blank lines, found 0`\r\n\r\nexpected:\r\nno issue as for file with next content:\r\n```\r\ndef test(param_1234567890_1, param_1234567890_2, param_1234567890_3, param_1234567890_4):\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/858", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/858/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/858/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/858", "id": 425500759, "node_id": "MDU6SXNzdWU0MjU1MDA3NTk=", "number": 858, "title": "Regression, false negative E302", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-26T15:49:47Z", "updated_at": "2019-03-26T17:31:48Z", "closed_at": "2019-03-26T17:31:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### sample code\r\n\r\n```python\r\ndef f():\r\n    pass\r\n\r\n# wat\r\n@hi\r\ndef g():\r\n    pass\r\n```\r\n\r\n### 2.5.0 behaviour\r\n\r\n```console\r\n$ ./venv/bin/pycodestyle --version\r\n2.5.0\r\n$ ./venv/bin/pycodestyle  t.py\r\n$ echo $?\r\n0\r\n```\r\n\r\n### 2.4.0 behaviour\r\n\r\n```console\r\n$ ./venv/bin/pycodestyle --version\r\n2.4.0\r\n$ ./venv/bin/pycodestyle  t.py \r\nt.py:5:1: E302 expected 2 blank lines, found 1\r\n```\r\n\r\n### git bisection\r\n\r\n```console\r\n$ git bisect start\r\n$ git bisect good 2.4.0\r\n$ git bisect bad 2.5.0\r\n$ git bisect run bash -c '! python3 pycodestyle.py ../t.py'\r\n...\r\nrunning bash -c ! python3 pycodestyle.py ../t.py\r\n0138bb106403241564a0c5af67886c05a2f4f690 is the first bad commit\r\ncommit 0138bb106403241564a0c5af67886c05a2f4f690\r\nAuthor: Antony Lee <anntzer.lee@gmail.com>\r\nDate:   Wed Nov 28 00:43:17 2018 +0100\r\n\r\n    Allow omitting blank lines around one-liner definitions.\r\n\r\n:100755 100755 c9e1667150d1a78fd236f8272906f3862425b3d5 27009c648ff090847cf78ec26c83fbd79be11d5a M\tpycodestyle.py\r\n:040000 040000 c138e2e23b06e384dfc052ffdfaaf372d203c480 817cc37bedea6034c3cf06468c42811b0111de27 M\ttestsuite\r\nbisect run success\r\n```\r\n\r\n0138bb106403241564a0c5af67886c05a2f4f690\r\n\r\nCC @anntzer ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/857", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/857/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/857/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/857", "id": 424708084, "node_id": "MDU6SXNzdWU0MjQ3MDgwODQ=", "number": 857, "title": "Add a rule to discourage trailing comma out of any brackets.", "user": {"login": "frostming", "id": 16336606, "node_id": "MDQ6VXNlcjE2MzM2NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/16336606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostming", "html_url": "https://github.com/frostming", "followers_url": "https://api.github.com/users/frostming/followers", "following_url": "https://api.github.com/users/frostming/following{/other_user}", "gists_url": "https://api.github.com/users/frostming/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostming/subscriptions", "organizations_url": "https://api.github.com/users/frostming/orgs", "repos_url": "https://api.github.com/users/frostming/repos", "events_url": "https://api.github.com/users/frostming/events{/privacy}", "received_events_url": "https://api.github.com/users/frostming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-25T03:28:15Z", "updated_at": "2020-02-19T21:24:40Z", "closed_at": "2020-02-19T21:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "As title, warn user against following:\r\n\r\n```python\r\na = 2,\r\n```\r\n\r\nBut passes like this:\r\n```python\r\na = (\r\n    2,\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/855", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/855/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/855/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/855/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/855", "id": 422196595, "node_id": "MDU6SXNzdWU0MjIxOTY1OTU=", "number": 855, "title": "Argument name <arg> doesn't conform to snake_case naming style", "user": {"login": "poreklo", "id": 24385191, "node_id": "MDQ6VXNlcjI0Mzg1MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/24385191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poreklo", "html_url": "https://github.com/poreklo", "followers_url": "https://api.github.com/users/poreklo/followers", "following_url": "https://api.github.com/users/poreklo/following{/other_user}", "gists_url": "https://api.github.com/users/poreklo/gists{/gist_id}", "starred_url": "https://api.github.com/users/poreklo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poreklo/subscriptions", "organizations_url": "https://api.github.com/users/poreklo/orgs", "repos_url": "https://api.github.com/users/poreklo/repos", "events_url": "https://api.github.com/users/poreklo/events{/privacy}", "received_events_url": "https://api.github.com/users/poreklo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-18T12:40:56Z", "updated_at": "2019-03-19T04:58:42Z", "closed_at": "2019-03-18T12:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pep8 1.7.1.\r\n\r\n![mstsc_2019-03-18_17-37-35](https://user-images.githubusercontent.com/24385191/54530427-8c5ed480-49a4-11e9-8f2b-3190d66853b3.png)\r\n\r\nwarning about no snake_case naming style\r\n\r\n![mstsc_2019-03-18_17-38-27](https://user-images.githubusercontent.com/24385191/54530460-a698b280-49a4-11e9-8948-8675d3a42aee.png)\r\n\r\nwhich is a bit strange.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/854", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/854/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/854/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/854", "id": 420543126, "node_id": "MDU6SXNzdWU0MjA1NDMxMjY=", "number": 854, "title": "W605 error while checking docstrings with regex inside it (again) v.2.5.0 ", "user": {"login": "AlexArcPy", "id": 7373268, "node_id": "MDQ6VXNlcjczNzMyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7373268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexArcPy", "html_url": "https://github.com/AlexArcPy", "followers_url": "https://api.github.com/users/AlexArcPy/followers", "following_url": "https://api.github.com/users/AlexArcPy/following{/other_user}", "gists_url": "https://api.github.com/users/AlexArcPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexArcPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexArcPy/subscriptions", "organizations_url": "https://api.github.com/users/AlexArcPy/orgs", "repos_url": "https://api.github.com/users/AlexArcPy/repos", "events_url": "https://api.github.com/users/AlexArcPy/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexArcPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-13T14:50:27Z", "updated_at": "2019-03-13T15:19:42Z", "closed_at": "2019-03-13T15:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the same issue as https://github.com/PyCQA/pycodestyle/issues/822 and https://github.com/PyCQA/pycodestyle/issues/795, it is giving the same error.\r\n\r\n```python\r\nimport re\r\ndef test_regex_function():\r\n    \"\"\"\r\n    Return compiled regex of which allows to process only specific file\r\n    paths or extensions, e.g. r\"^.*\\.svg$\".\r\n    :return:\r\n    \"\"\"\r\n    return re.compile(r\"^.*\\.svg$\")\r\n```\r\n\r\nError:\r\n\r\n`W605 invalid escape sequence '\\.'`\r\n\r\nVersion:\r\n```\r\n$ pycodestyle --version\r\n2.5.0\r\n```\r\n\r\nIt was supposed to be fixed by https://github.com/PyCQA/pycodestyle/pull/818 and merged to the master. However, the error persists. Any workarounds?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/849", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/849/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/849/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/849", "id": 416121786, "node_id": "MDU6SXNzdWU0MTYxMjE3ODY=", "number": 849, "title": "E721 false positive", "user": {"login": "eric-bonfadini", "id": 408262, "node_id": "MDQ6VXNlcjQwODI2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/408262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-bonfadini", "html_url": "https://github.com/eric-bonfadini", "followers_url": "https://api.github.com/users/eric-bonfadini/followers", "following_url": "https://api.github.com/users/eric-bonfadini/following{/other_user}", "gists_url": "https://api.github.com/users/eric-bonfadini/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-bonfadini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-bonfadini/subscriptions", "organizations_url": "https://api.github.com/users/eric-bonfadini/orgs", "repos_url": "https://api.github.com/users/eric-bonfadini/repos", "events_url": "https://api.github.com/users/eric-bonfadini/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-bonfadini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-01T14:15:52Z", "updated_at": "2019-03-01T20:40:32Z", "closed_at": "2019-03-01T20:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the following code I get a false positive for \"E721 do not compare types, use 'isinstance()'\".\r\nFrom my tests, this happens if the function name ends with istype and it has at least two arguments.\r\n\r\n```python\r\ndef func_histype(arg1, arg2, arg3):\r\n    pass\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/846", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/846/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/846/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/846", "id": 412612603, "node_id": "MDU6SXNzdWU0MTI2MTI2MDM=", "number": 846, "title": "\"Hang Closing\" option doesn't work.", "user": {"login": "Asday", "id": 340276, "node_id": "MDQ6VXNlcjM0MDI3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/340276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Asday", "html_url": "https://github.com/Asday", "followers_url": "https://api.github.com/users/Asday/followers", "following_url": "https://api.github.com/users/Asday/following{/other_user}", "gists_url": "https://api.github.com/users/Asday/gists{/gist_id}", "starred_url": "https://api.github.com/users/Asday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Asday/subscriptions", "organizations_url": "https://api.github.com/users/Asday/orgs", "repos_url": "https://api.github.com/users/Asday/repos", "events_url": "https://api.github.com/users/Asday/events{/privacy}", "received_events_url": "https://api.github.com/users/Asday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-20T20:25:28Z", "updated_at": "2019-02-21T12:56:26Z", "closed_at": "2019-02-21T12:55:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I originally posted this to lgeiger/ide-python (issue [#125](https://github.com/lgeiger/ide-python/issues/125#event-2152576921)), but it was closed, and I was told to repost here.  Below is a reproduction of the original issue text.\r\n\r\nI can't seem to get closing brackets to outdent automatically using this package.\r\n\r\n```python\r\na = {\r\n    1: 2,\r\n    3: 4,\r\n    }\r\n```\r\n\r\nWhen I type that, and press Enter after the fourth line, the leading whitespace should be removed when I have the \"Hang Closing\" option checked, but it doesn't.\r\n\r\nAtom version: 1:27.2\r\nide-python version: 1.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/845", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/845/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/845/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/845", "id": 411716889, "node_id": "MDU6SXNzdWU0MTE3MTY4ODk=", "number": 845, "title": "Lambda function in conditional expression not caught", "user": {"login": "thebarbershop", "id": 25029365, "node_id": "MDQ6VXNlcjI1MDI5MzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25029365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebarbershop", "html_url": "https://github.com/thebarbershop", "followers_url": "https://api.github.com/users/thebarbershop/followers", "following_url": "https://api.github.com/users/thebarbershop/following{/other_user}", "gists_url": "https://api.github.com/users/thebarbershop/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebarbershop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebarbershop/subscriptions", "organizations_url": "https://api.github.com/users/thebarbershop/orgs", "repos_url": "https://api.github.com/users/thebarbershop/repos", "events_url": "https://api.github.com/users/thebarbershop/events{/privacy}", "received_events_url": "https://api.github.com/users/thebarbershop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-19T02:31:08Z", "updated_at": "2019-02-20T01:48:14Z", "closed_at": "2019-02-20T01:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Version\r\n\r\n```bash\r\n$ pycodestyle --version\r\n2.5.0\r\n```\r\n\r\n## Problem\r\n\r\nThe following code throws E731 as expected,\r\n\r\n```python\r\nif foo:\r\n    bar = some_function\r\nelse:\r\n    bar = lambda x:x\r\n```\r\n\r\nbut the following doesn't.\r\n\r\n```python\r\nbar = some_function if foo else lambda x:x\r\n```\r\n\r\nIn both cases, if `foo == False`, the lambda function is essentially assigned to `bar`.\r\n\r\n[PEP8](https://www.python.org/dev/peps/pep-0008/#programming-recommendations) says\r\n\r\n> Always use a def statement instead of an assignment statement that binds a lambda expression directly to an identifier.\r\n\r\nIsn't this violated in the situation? Or is this a case a lambda expression isn't *directly* bound to an identifier? (because it is wrapped in a conditional expression?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/844", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/844/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/844/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/844", "id": 411522548, "node_id": "MDU6SXNzdWU0MTE1MjI1NDg=", "number": 844, "title": "E502: false positive.", "user": {"login": "pvinci", "id": 1114543, "node_id": "MDQ6VXNlcjExMTQ1NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1114543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvinci", "html_url": "https://github.com/pvinci", "followers_url": "https://api.github.com/users/pvinci/followers", "following_url": "https://api.github.com/users/pvinci/following{/other_user}", "gists_url": "https://api.github.com/users/pvinci/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvinci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvinci/subscriptions", "organizations_url": "https://api.github.com/users/pvinci/orgs", "repos_url": "https://api.github.com/users/pvinci/repos", "events_url": "https://api.github.com/users/pvinci/events{/privacy}", "received_events_url": "https://api.github.com/users/pvinci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-18T15:12:24Z", "updated_at": "2019-02-18T18:06:02Z", "closed_at": "2019-02-18T18:06:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following valid code triggers E502.\r\n\r\n            raise subprocess.CalledProcessError(\r\n                \"Command {0} failed with return code: {1}.{2}\" \\\r\n                \"Process error output: {2}{3}\" \\\r\n                .format(command, self.process.returncode, os.linesep, err))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/843", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/843/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/843/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/843", "id": 411129521, "node_id": "MDU6SXNzdWU0MTExMjk1MjE=", "number": 843, "title": "Add check for whitespace around logical operators", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-17T00:02:30Z", "updated_at": "2020-02-19T21:23:06Z", "closed_at": "2020-02-19T21:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "[This twitter thread](https://twitter.com/DRMacIver/status/1096080462097846278) contains a few observations, but most relevant is that `pycodestyle` does not emit any warnings or errors on the following file:\r\n\r\n```python\r\n0and 1\r\n0x1or 0\r\n```\r\n\r\nThese are legal statements and the lexer breaks the first part up appropriately, but it would be nice to have `E225 missing whitespace around operator`, or an equivalent error, apply to `and` and `or` as well as the various comparison operators.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/842", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/842/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/842/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/842/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/842", "id": 408679793, "node_id": "MDU6SXNzdWU0MDg2Nzk3OTM=", "number": 842, "title": "Prevent E123 for function definitions", "user": {"login": "antonagestam", "id": 218551, "node_id": "MDQ6VXNlcjIxODU1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/218551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonagestam", "html_url": "https://github.com/antonagestam", "followers_url": "https://api.github.com/users/antonagestam/followers", "following_url": "https://api.github.com/users/antonagestam/following{/other_user}", "gists_url": "https://api.github.com/users/antonagestam/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonagestam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonagestam/subscriptions", "organizations_url": "https://api.github.com/users/antonagestam/orgs", "repos_url": "https://api.github.com/users/antonagestam/repos", "events_url": "https://api.github.com/users/antonagestam/events{/privacy}", "received_events_url": "https://api.github.com/users/antonagestam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-11T08:42:54Z", "updated_at": "2019-02-11T14:25:04Z", "closed_at": "2019-02-11T14:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to prevent E123 for function definitions? The reason is I would like to be able to use the following style below for function definitions.\r\n\r\n```python\r\ndef measure(\r\n        request: HttpRequest,\r\n        plan_id: Optional[int] = None,\r\n        hole_id: Optional[int] = None,\r\n        ) -> HttpResponse:\r\n    hole = get_hole(plan_id, hole_id)\r\n    ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/841", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/841/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/841/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/841", "id": 407585049, "node_id": "MDU6SXNzdWU0MDc1ODUwNDk=", "number": 841, "title": "Giving only a single error to ignore in setup.cfg does not work", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-07T08:21:58Z", "updated_at": "2019-02-07T17:09:58Z", "closed_at": "2019-02-07T13:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\ne.g.\r\nThis does not work:\r\n```\r\n[pycodestyle]\r\nignore = E722   # ignore \"do not use bare except\"\r\n```\r\n\r\nThis does:\r\n```\r\n[pycodestyle]\r\nignore = E722,   # ignore \"do not use bare except\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/838", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/838/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/838/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/838/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/838", "id": 406050576, "node_id": "MDU6SXNzdWU0MDYwNTA1NzY=", "number": 838, "title": "E225 and E713 false positives in fstrings", "user": {"login": "sww1235", "id": 6005003, "node_id": "MDQ6VXNlcjYwMDUwMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6005003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sww1235", "html_url": "https://github.com/sww1235", "followers_url": "https://api.github.com/users/sww1235/followers", "following_url": "https://api.github.com/users/sww1235/following{/other_user}", "gists_url": "https://api.github.com/users/sww1235/gists{/gist_id}", "starred_url": "https://api.github.com/users/sww1235/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sww1235/subscriptions", "organizations_url": "https://api.github.com/users/sww1235/orgs", "repos_url": "https://api.github.com/users/sww1235/repos", "events_url": "https://api.github.com/users/sww1235/events{/privacy}", "received_events_url": "https://api.github.com/users/sww1235/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-03T04:09:11Z", "updated_at": "2019-02-03T05:13:02Z", "closed_at": "2019-02-03T05:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the print statement below, pycodestyle triggers E713 on the word `not` in the string, while it triggers E225 on the `--list-configs`, specifically the `-list` portion is underlined in atom.\r\n\r\nI am betting this is due to overzealous checking in fstring environments, where it really should only be checking for these errors within the `{}` expressions.\r\n\r\n```python\r\nprint(f\"{config} did not exist in the list of configs. Make sure\r\n                  you typed it correctly or use --list-configs to view\r\n                  available configs\"\r\n                  )\r\n```\r\n\r\n```bash\r\n\u03a9:pycodestyle --version\r\n2.4.0\r\n```\r\n\r\nHappy to provide other test cases and logs if it helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/836", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/836/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/836/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/836/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/836", "id": 405306362, "node_id": "MDU6SXNzdWU0MDUzMDYzNjI=", "number": 836, "title": "E117 being reported for files containing tabs", "user": {"login": "sciyoshi", "id": 39950, "node_id": "MDQ6VXNlcjM5OTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/39950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sciyoshi", "html_url": "https://github.com/sciyoshi", "followers_url": "https://api.github.com/users/sciyoshi/followers", "following_url": "https://api.github.com/users/sciyoshi/following{/other_user}", "gists_url": "https://api.github.com/users/sciyoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sciyoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sciyoshi/subscriptions", "organizations_url": "https://api.github.com/users/sciyoshi/orgs", "repos_url": "https://api.github.com/users/sciyoshi/repos", "events_url": "https://api.github.com/users/sciyoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/sciyoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-31T15:43:34Z", "updated_at": "2019-02-01T13:16:27Z", "closed_at": "2019-02-01T13:16:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The change in https://github.com/PyCQA/pycodestyle/pull/705 released in 2.5.0 has started causing these errors for files with tabs. cc @jdufresne @sigmavirus24", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/833", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/833/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/833/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/833/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/833", "id": 404820932, "node_id": "MDU6SXNzdWU0MDQ4MjA5MzI=", "number": 833, "title": "E402: Add \"with\" to `allowed_try_keywords`", "user": {"login": "EricCousineau-TRI", "id": 26719449, "node_id": "MDQ6VXNlcjI2NzE5NDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/26719449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricCousineau-TRI", "html_url": "https://github.com/EricCousineau-TRI", "followers_url": "https://api.github.com/users/EricCousineau-TRI/followers", "following_url": "https://api.github.com/users/EricCousineau-TRI/following{/other_user}", "gists_url": "https://api.github.com/users/EricCousineau-TRI/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricCousineau-TRI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricCousineau-TRI/subscriptions", "organizations_url": "https://api.github.com/users/EricCousineau-TRI/orgs", "repos_url": "https://api.github.com/users/EricCousineau-TRI/repos", "events_url": "https://api.github.com/users/EricCousineau-TRI/events{/privacy}", "received_events_url": "https://api.github.com/users/EricCousineau-TRI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-30T15:20:45Z", "updated_at": "2019-09-25T22:47:27Z", "closed_at": "2019-09-25T22:47:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For certain imports, it would be nice to scope warning filters (e.g. in https://github.com/RobotLocomotion/drake/issues/10527).\r\n\r\nIn my case, I want to do something like:\r\n```py\r\nimport warnings\r\n\r\nwith warnings.catch_warnings():\r\n    warnings.filterwarnings(\r\n        \"ignore\", category=ImportWarning,\r\n        message=\"can't resolve package from __spec__\")\r\n    import meshcat\r\n```\r\n\r\nWithout mods to 2.3.1, it throws a warning about this. If I add \"with\" to the allowed keywords, then it works.\r\n\r\nWould it be possible to add this keyword?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/828", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/828/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/828/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/828", "id": 401857621, "node_id": "MDU6SXNzdWU0MDE4NTc2MjE=", "number": 828, "title": "New release?", "user": {"login": "antoine-gallix", "id": 7696611, "node_id": "MDQ6VXNlcjc2OTY2MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7696611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoine-gallix", "html_url": "https://github.com/antoine-gallix", "followers_url": "https://api.github.com/users/antoine-gallix/followers", "following_url": "https://api.github.com/users/antoine-gallix/following{/other_user}", "gists_url": "https://api.github.com/users/antoine-gallix/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoine-gallix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoine-gallix/subscriptions", "organizations_url": "https://api.github.com/users/antoine-gallix/orgs", "repos_url": "https://api.github.com/users/antoine-gallix/repos", "events_url": "https://api.github.com/users/antoine-gallix/events{/privacy}", "received_events_url": "https://api.github.com/users/antoine-gallix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2019-01-22T16:51:24Z", "updated_at": "2019-01-29T15:00:39Z", "closed_at": "2019-01-29T14:01:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a planned date for a new release of pycodestyle? [This issue](https://github.com/PyCQA/pycodestyle/issues/753) for example has been fixed last april, and yet still present on the main release. For direct use of the linter, one can always use the latest master, but it gets complicated to choose pycodestyle version when using it through flake8. It's even worse when using it through even more layers of code, like for example using [pre-commit](https://github.com/pre-commit/pre-commit-hooks). For example, in our project, we use pre-commit to run black formatter, and then flake8. Black and current flake8-pycodestyle disagree on E252 in function signature with type annotation and we had to silence errors to be able to commit. And as a more general question, what is the release policy of this package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/827", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/827/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/827/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/827/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/827", "id": 398562884, "node_id": "MDU6SXNzdWUzOTg1NjI4ODQ=", "number": 827, "title": "make DOCSTRING_REGEX more appropriate", "user": {"login": "Hanaasagi", "id": 9482395, "node_id": "MDQ6VXNlcjk0ODIzOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9482395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hanaasagi", "html_url": "https://github.com/Hanaasagi", "followers_url": "https://api.github.com/users/Hanaasagi/followers", "following_url": "https://api.github.com/users/Hanaasagi/following{/other_user}", "gists_url": "https://api.github.com/users/Hanaasagi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hanaasagi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hanaasagi/subscriptions", "organizations_url": "https://api.github.com/users/Hanaasagi/orgs", "repos_url": "https://api.github.com/users/Hanaasagi/repos", "events_url": "https://api.github.com/users/Hanaasagi/events{/privacy}", "received_events_url": "https://api.github.com/users/Hanaasagi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-12T15:21:39Z", "updated_at": "2019-01-17T01:47:10Z", "closed_at": "2019-01-17T01:47:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanna use the `pycodestyle` api the check the code, and i found the `DOCSTRING_REGEX`. But it will match normal string.\r\n\r\n```Python\r\nDOCSTRING_REGEX = re.compile(r'u?r?[\"\\']')\r\n```\r\n\r\nAs mentioned in [PEP 257 -- Docstring Conventions](https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring)\r\n\r\n> For consistency, always use \"\"\"triple double quotes\"\"\" around docstrings. Use r\"\"\"raw triple double quotes\"\"\" if you use any backslashes in your docstrings. For Unicode docstrings, use u\"\"\"Unicode triple-quoted strings\"\"\".\r\n\r\nI think \r\n\r\n```Python\r\nDOCSTRING_REGEX = re.compile(r'u?r?[\"\\']{3}')\r\n```\r\n\r\nwill be better.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/826", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/826/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/826/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/826/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/826", "id": 395985659, "node_id": "MDU6SXNzdWUzOTU5ODU2NTk=", "number": 826, "title": "W605 has wrong location when string is inside a another expression", "user": {"login": "PeterJCLaw", "id": 336212, "node_id": "MDQ6VXNlcjMzNjIxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/336212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterJCLaw", "html_url": "https://github.com/PeterJCLaw", "followers_url": "https://api.github.com/users/PeterJCLaw/followers", "following_url": "https://api.github.com/users/PeterJCLaw/following{/other_user}", "gists_url": "https://api.github.com/users/PeterJCLaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterJCLaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterJCLaw/subscriptions", "organizations_url": "https://api.github.com/users/PeterJCLaw/orgs", "repos_url": "https://api.github.com/users/PeterJCLaw/repos", "events_url": "https://api.github.com/users/PeterJCLaw/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterJCLaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T16:27:08Z", "updated_at": "2019-01-04T17:06:43Z", "closed_at": "2019-01-04T17:05:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nThe coordinates for the location of a W605 error are wrong when the string in question appears inside another expression (I saw this with a tuple, though it also appears within a function call).\r\n\r\nI would expect the location of the W605 error to underline the `\\d` portion of the literal, however instead it appears under the first line within the \"outer\". Specifically:\r\n\r\n``` python\r\npatterns = (\r\n    '^the-home-page$',\r\n    #     ^^^^ actual\r\n    '^another-page$',\r\n    '^yet-another-page$',\r\n    '^page/(?P<page_id>\\d+)$',\r\n    #      expected    ^^\r\n)\r\n```\r\n## Context\r\n\r\nMy original code is from a Django urlconf file and looks a bit like this:\r\n``` python\r\nurlpatterns = (\r\n    url('^the-home-page$', view_func,\r\n    #   ^  actual\r\n        name='view'),\r\n\r\n    url('^page/(?P<page_id>\\d+)$', view_func,\r\n    #           expected   ^^\r\n        name='page'),\r\n)\r\n```\r\nHowever this also reproduces with a smaller cut-down without any of the Django stuff.\r\n\r\nI'm using Python 3.5.2 and `pycodestyle` 2.4.0, ~though I've also tried this on `master` and it reproduced there too~.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/825", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/825/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/825/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/825/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/825", "id": 394601020, "node_id": "MDU6SXNzdWUzOTQ2MDEwMjA=", "number": 825, "title": "How to use pycodestyle with standard input?", "user": {"login": "tastyminerals", "id": 7676160, "node_id": "MDQ6VXNlcjc2NzYxNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7676160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tastyminerals", "html_url": "https://github.com/tastyminerals", "followers_url": "https://api.github.com/users/tastyminerals/followers", "following_url": "https://api.github.com/users/tastyminerals/following{/other_user}", "gists_url": "https://api.github.com/users/tastyminerals/gists{/gist_id}", "starred_url": "https://api.github.com/users/tastyminerals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tastyminerals/subscriptions", "organizations_url": "https://api.github.com/users/tastyminerals/orgs", "repos_url": "https://api.github.com/users/tastyminerals/repos", "events_url": "https://api.github.com/users/tastyminerals/events{/privacy}", "received_events_url": "https://api.github.com/users/tastyminerals/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-28T10:14:07Z", "updated_at": "2018-12-28T15:59:03Z", "closed_at": "2018-12-28T15:59:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have just recently noticed that pep8 --> pycodestyle now. I was using pep8 in the editor to highlight pep8 errors via `pep8 -` call which accepted stdin Python code and returned pep8 parse results.\r\nHow can I use pycodestyle with stdin? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/824", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/824/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/824/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/824", "id": 390594590, "node_id": "MDU6SXNzdWUzOTA1OTQ1OTA=", "number": 824, "title": "No complaint about imports,module dunders defined above module docstring", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-13T09:42:23Z", "updated_at": "2018-12-13T14:15:42Z", "closed_at": "2018-12-13T14:15:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is mentioned in [pep8](https://www.python.org/dev/peps/pep-0008/#module-level-dunder-names) that\r\n\r\n> module level \"dunders\" (i.e. names with two leading and two trailing underscores) such as __all__, __author__, __version__, etc. should be placed after the module docstring but before any import statements except from __future__ imports. Python mandates that future-imports must appear in the module before any other code except docstrings:\r\n\r\nAlthough not specified explicitly, imports should be after the module docstring.\r\nThis is also necessary for them to be written in the modules `__doc__`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/822", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/822/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/822/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/822", "id": 384557512, "node_id": "MDU6SXNzdWUzODQ1NTc1MTI=", "number": 822, "title": "W605 error while checking docstrings with regex inside it", "user": {"login": "smartfin", "id": 917717, "node_id": "MDQ6VXNlcjkxNzcxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/917717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smartfin", "html_url": "https://github.com/smartfin", "followers_url": "https://api.github.com/users/smartfin/followers", "following_url": "https://api.github.com/users/smartfin/following{/other_user}", "gists_url": "https://api.github.com/users/smartfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/smartfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smartfin/subscriptions", "organizations_url": "https://api.github.com/users/smartfin/orgs", "repos_url": "https://api.github.com/users/smartfin/repos", "events_url": "https://api.github.com/users/smartfin/events{/privacy}", "received_events_url": "https://api.github.com/users/smartfin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-26T23:40:44Z", "updated_at": "2018-11-27T01:06:44Z", "closed_at": "2018-11-27T01:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The bug is reproduced if you are using regex expression inside docstring with escaping of characters.\r\n\r\nHere is example of code: \r\n\r\n```\r\nimport re\r\n\r\n\r\ndef test_regex_function():\r\n    \"\"\"\r\n    Return compiled regex of which allows to process only specific file\r\n    paths or extensions, e.g. r\"^.*\\.svg$\".\r\n    :return:\r\n    \"\"\"\r\n    return re.compile(r\"^.*\\.svg$\")\r\n```\r\n\r\nAnd result of running pycodestyle 2.4.0: \r\n```\r\npycodestyle 1.py   \r\n                                                                                                                                                \r\n1.py:9:-23: W605 invalid escape sequence '\\.'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/817", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/817/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/817/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/817/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/817", "id": 377208443, "node_id": "MDU6SXNzdWUzNzcyMDg0NDM=", "number": 817, "title": "Don't emit line-too-long warning when word in longer than maximum linewidth.", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-04T23:38:19Z", "updated_at": "2019-08-19T16:47:16Z", "closed_at": "2019-08-18T13:48:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ever since #224 has been fixed, long \"words\" (in practice, URLs) are exempted from the line-too-long warning *if they are the only item on their line*.  However, there are some other cases where it is impractical to split a line before an URL.  In particular, this includes rst hyperlink targets (http://docutils.sourceforge.net/docs/user/rst/quickref.html#hyperlink-targets), which take the form\r\n```\r\nThis is `some text`_.\r\n\r\n.. some text: https://etc.\r\n```\r\nor the anonymous form\r\n```\r\nThis is `some text`__.\r\n\r\n__ https://etc.\r\n```\r\n\r\nObviously, one can't expect pycodestyle to parse rst, but as a partial fix, it would still be nice to not emit the line-too-long warning *if a single word is longer than the maximum linewidth, minus the current indentation* (because most often the current indent is set by the surrounding code/text, so one doesn't have the choice anyways).  (This will fail to suppress the warning if the word in itself is shorter than the linewidth, but the full construct with the leading text is longer; still I'm happy with that limitation.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/816", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/816/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/816/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/816", "id": 376889650, "node_id": "MDU6SXNzdWUzNzY4ODk2NTA=", "number": 816, "title": "Option to inherit default ignore list", "user": {"login": "bdarnell", "id": 160562, "node_id": "MDQ6VXNlcjE2MDU2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/160562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdarnell", "html_url": "https://github.com/bdarnell", "followers_url": "https://api.github.com/users/bdarnell/followers", "following_url": "https://api.github.com/users/bdarnell/following{/other_user}", "gists_url": "https://api.github.com/users/bdarnell/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdarnell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdarnell/subscriptions", "organizations_url": "https://api.github.com/users/bdarnell/orgs", "repos_url": "https://api.github.com/users/bdarnell/repos", "events_url": "https://api.github.com/users/bdarnell/events{/privacy}", "received_events_url": "https://api.github.com/users/bdarnell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-02T16:52:49Z", "updated_at": "2018-11-04T13:32:02Z", "closed_at": "2018-11-04T13:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The most recent release of pycodestyle introduced a new warning, W504. This warning was disabled by default, so it was not disruptive to project using the default configuration. But as soon as a project ignores some warnings, this ignore list is used instead of the default, so these projects are disrupted by the addition of the new warning (tornadoweb/tornado#2526). I would like to be able to inherit the default ignore list so that I don't have to duplicate parts of it in my application's config and pycodestyle can continue to add warnings that are disabled by default without immediately affecting my projects.\r\n\r\n(Yes, I should be pinning a particular version of the tool instead of just pulling the latest in my CI scripts)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/814", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/814/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/814/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/814", "id": 376052667, "node_id": "MDU6SXNzdWUzNzYwNTI2Njc=", "number": 814, "title": "Python 3.6: false positive W605 invalid escape sequence (pycodestyle 2.4.0)", "user": {"login": "kingbuzzman", "id": 329820, "node_id": "MDQ6VXNlcjMyOTgyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/329820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingbuzzman", "html_url": "https://github.com/kingbuzzman", "followers_url": "https://api.github.com/users/kingbuzzman/followers", "following_url": "https://api.github.com/users/kingbuzzman/following{/other_user}", "gists_url": "https://api.github.com/users/kingbuzzman/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingbuzzman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingbuzzman/subscriptions", "organizations_url": "https://api.github.com/users/kingbuzzman/orgs", "repos_url": "https://api.github.com/users/kingbuzzman/repos", "events_url": "https://api.github.com/users/kingbuzzman/events{/privacy}", "received_events_url": "https://api.github.com/users/kingbuzzman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-31T16:31:36Z", "updated_at": "2019-12-03T12:59:07Z", "closed_at": "2018-10-31T17:22:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar issue to https://github.com/PyCQA/pycodestyle/issues/755\r\n\r\n```shell\r\n$ echo \"re.compile('\\{([^\\}]+)\\}')\" | pycodestyle /dev/stdin\r\n/dev/stdin:1:2: W605 invalid escape sequence '\\{'\r\n/dev/stdin:1:7: W605 invalid escape sequence '\\}'\r\n/dev/stdin:1:12: W605 invalid escape sequence '\\}'\r\n```\r\n\r\nWorking proof of concept:\r\n\r\n```shell\r\n$ echo \"{hello} {world}\" | python -c \"import re, sys; r = re.compile('\\{([^\\}]+)\\}'); print(r.findall(sys.stdin.read()))\"\r\n['hello', 'world']\r\n```\r\n\r\n--- update ----\r\n\r\nYes, thank you, I was missing `r'\\{([^\\}]+)\\}'` -- the message was not very clear.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/812", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/812/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/812/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/812/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/812", "id": 374006493, "node_id": "MDU6SXNzdWUzNzQwMDY0OTM=", "number": 812, "title": "Missing in documentation: W605 invalid escape sequence", "user": {"login": "peterjc", "id": 63959, "node_id": "MDQ6VXNlcjYzOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/63959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc", "html_url": "https://github.com/peterjc", "followers_url": "https://api.github.com/users/peterjc/followers", "following_url": "https://api.github.com/users/peterjc/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc/subscriptions", "organizations_url": "https://api.github.com/users/peterjc/orgs", "repos_url": "https://api.github.com/users/peterjc/repos", "events_url": "https://api.github.com/users/peterjc/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-25T15:30:09Z", "updated_at": "2018-10-25T15:36:47Z", "closed_at": "2018-10-25T15:36:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not listed here:\r\n\r\nhttps://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes\r\n\r\nSource:\r\n\r\nhttps://github.com/PyCQA/pycodestyle/blob/master/docs/intro.rst\r\n\r\nAlso, is this ignored by default or not?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/811", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/811/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/811/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/811", "id": 373579862, "node_id": "MDU6SXNzdWUzNzM1Nzk4NjI=", "number": 811, "title": "W606 false warning on consecutive `await`", "user": {"login": "wwwjfy", "id": 126527, "node_id": "MDQ6VXNlcjEyNjUyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/126527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwjfy", "html_url": "https://github.com/wwwjfy", "followers_url": "https://api.github.com/users/wwwjfy/followers", "following_url": "https://api.github.com/users/wwwjfy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwjfy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwjfy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwjfy/subscriptions", "organizations_url": "https://api.github.com/users/wwwjfy/orgs", "repos_url": "https://api.github.com/users/wwwjfy/repos", "events_url": "https://api.github.com/users/wwwjfy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwjfy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T16:54:34Z", "updated_at": "2019-01-23T14:01:02Z", "closed_at": "2019-01-23T14:01:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nimport asyncio\r\n\r\n\r\nasync def a():\r\n    return 1\r\n\r\n\r\nasync def b():\r\n    return a()\r\n\r\n\r\nasync def main():\r\n    await (await b())\r\n\r\n\r\nasyncio.run(main())\r\n```\r\n\r\npycodestyle reports `W606 'async' and 'await' are reserved keywords starting with Python 3.7`, while this is not the case here.\r\n\r\nPython 3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/810", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/810/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/810/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/810/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/810", "id": 373530261, "node_id": "MDU6SXNzdWUzNzM1MzAyNjE=", "number": 810, "title": "--select E,W does not provide useful code style guidance", "user": {"login": "kpinc", "id": 3226082, "node_id": "MDQ6VXNlcjMyMjYwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3226082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpinc", "html_url": "https://github.com/kpinc", "followers_url": "https://api.github.com/users/kpinc/followers", "following_url": "https://api.github.com/users/kpinc/following{/other_user}", "gists_url": "https://api.github.com/users/kpinc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpinc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpinc/subscriptions", "organizations_url": "https://api.github.com/users/kpinc/orgs", "repos_url": "https://api.github.com/users/kpinc/repos", "events_url": "https://api.github.com/users/kpinc/events{/privacy}", "received_events_url": "https://api.github.com/users/kpinc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T15:02:41Z", "updated_at": "2018-10-24T18:49:48Z", "closed_at": "2018-10-24T15:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somewhere between 2.3.1 and 2.4 (probably at 2.4) pycodestyle\r\nintroduced the W504 warning.  With that change when using\r\n--select E,W any line break before or after a binary operator\r\nraises a warning.\r\n\r\nThe problem with this is that the user has no guidance as to the\r\nrecommended way to resolve the warning.  Previously, pycodestyle\r\ncould be relied on to recommend _something_.  Even when PEP8\r\ncontains conflicting suggestions.\r\n\r\nWith the introduction of W504 the user who wants to write code\r\nwhich conforms most strictly to PEP8 is left in the dark as to\r\nhow to resolve the issue.  This would not be a problem if the\r\nonly choice was between W503 and W504.  But the user could decide\r\ninstead to break long lines with the \\ line continuation\r\ncharacter instead of using \\n inside parenthesis, or to allow\r\nover-long lines.  Neither of the latter choices would, I presume,\r\nbe especially good.\r\n\r\nWith the introduction of W504 now some people will choose to\r\nignore W503 who previously would have just gone with ignoring\r\nW504 because pycodestyle recommended, effectively, ignoring W504.\r\nThis reduces overall consistency.\r\n\r\nIn the interest of consistency it would be nice if pycodestyle\r\nrecommended a single way to resolve a conflict between W503 and\r\nW504 (and the various other style choices) when used with\r\n--select E,W.\r\n\r\nI can imagine several approaches to resolve this.  There could be\r\na argument, say --strict, that works like --select E,W but is\r\nguaranteed not to contain conflicting PEP8 recommendations.  At\r\npresent I presume this means that it would work like --select E,W\r\n--ignore W504.  The point of having an option like --strict is\r\nthat the user does not have to know the details of PEP8 and which\r\nrecommendations conflict with which other recommendations.  And\r\neverybody using --strict would write code meeting a consistent\r\nstandard.\r\n\r\nAlternately, backwards compatibility with pycodestyle pre-2.4\r\ncould be retained and --select E,W could automatically exclude\r\nconflicting PEP8 recommendations, _unless_ an argument like\r\n--strict is given.  In this case when --strict is given the user\r\nmust use --ignore themselves to resolve the conflict.  This would\r\nbe the easiest choice for new users.\r\n\r\nI found pycodestyle's checking to be extremely useful when first\r\nstarting to write Python.  I believe the introduction of W504\r\ninto pycodestyle, as currently implemented, makes it\r\nsignificantly harder for beginners to ask pycodestyle whether\r\ntheir code strictly conforms to PEP8.  I urge you to make it as\r\neasy as possible for beginners to write strictly conforming code.\r\n\r\nThanks for listening.\r\n\r\n\r\nSee also: https://gitlab.com/pycqa/flake8/issues/463", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/807", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/807/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/807/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/807", "id": 372261578, "node_id": "MDU6SXNzdWUzNzIyNjE1Nzg=", "number": 807, "title": "Invalid escape sequence points at incorrect line when inside a multi-line call", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-20T23:11:30Z", "updated_at": "2018-10-25T00:19:14Z", "closed_at": "2018-10-25T00:19:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport pytest\r\n\r\n\r\n@pytest.mark.parametrize(  # line 4\r\n    'x'\r\n    ('\\d', '\\_'),  # line 6\r\n)\r\ndef test(x):\r\n    pass\r\n```\r\n\r\n```console\r\n$ ~/workspace/venvflake8/bin/pycodestyle t.py \r\nt.py:4:2: W605 invalid escape sequence '\\_'\r\nt.py:4:2: W605 invalid escape sequence '\\d'\r\n\r\n$ ~/workspace/venvflake8/bin/pycodestyle  --version\r\n2.4.0\r\n```\r\n\r\nThe column offset appears to be incorrect as well \ud83e\udd37\u200d\u2642\ufe0f \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/806", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/806/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/806/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/806", "id": 371987927, "node_id": "MDU6SXNzdWUzNzE5ODc5Mjc=", "number": 806, "title": "E251 false positive with some typings", "user": {"login": "arthurwhite", "id": 9503891, "node_id": "MDQ6VXNlcjk1MDM4OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9503891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurwhite", "html_url": "https://github.com/arthurwhite", "followers_url": "https://api.github.com/users/arthurwhite/followers", "following_url": "https://api.github.com/users/arthurwhite/following{/other_user}", "gists_url": "https://api.github.com/users/arthurwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurwhite/subscriptions", "organizations_url": "https://api.github.com/users/arthurwhite/orgs", "repos_url": "https://api.github.com/users/arthurwhite/repos", "events_url": "https://api.github.com/users/arthurwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurwhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-19T14:42:50Z", "updated_at": "2018-10-19T18:45:17Z", "closed_at": "2018-10-19T17:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Same as old #496.\r\n\r\nI've read that #508 should have fixed this kind of problem but it's not the case for special forms of typings like `Union`:\r\n\r\n```python\r\nfrom typing import Union\r\n\r\n\r\ndef foobar(foo: Union[int, str] = 1):\r\n    pass\r\n```\r\n\r\nReturns `E251:unexpected spaces around keyword / parameter equals`.\r\nAnd `# noqa` won't disable this warning.\r\n\r\nUsing `pep8` version 1.7.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/805", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/805/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/805/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/805/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/805", "id": 371536708, "node_id": "MDU6SXNzdWUzNzE1MzY3MDg=", "number": 805, "title": "not showing error on unknow variable", "user": {"login": "alexislg2", "id": 7933080, "node_id": "MDQ6VXNlcjc5MzMwODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7933080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexislg2", "html_url": "https://github.com/alexislg2", "followers_url": "https://api.github.com/users/alexislg2/followers", "following_url": "https://api.github.com/users/alexislg2/following{/other_user}", "gists_url": "https://api.github.com/users/alexislg2/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexislg2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexislg2/subscriptions", "organizations_url": "https://api.github.com/users/alexislg2/orgs", "repos_url": "https://api.github.com/users/alexislg2/repos", "events_url": "https://api.github.com/users/alexislg2/events{/privacy}", "received_events_url": "https://api.github.com/users/alexislg2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T13:41:54Z", "updated_at": "2018-10-18T14:34:10Z", "closed_at": "2018-10-18T14:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nmy pycodestyle (v 2.4.0) is showing me errors for line-indents, line too long, etc... But does not show me any error about undefined variable.\r\n\r\nFor example consider this python file:\r\n```\r\nprint(a)\r\n```\r\n\r\nI would expect to have an error since `a` is undefined when I run `pycodestyle test.py` but I have nothing\r\n\r\nHow can I debug this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/804", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/804/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/804/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/804", "id": 371244762, "node_id": "MDU6SXNzdWUzNzEyNDQ3NjI=", "number": 804, "title": "Multiple statements on one line bug", "user": {"login": "tehtekjess", "id": 3146533, "node_id": "MDQ6VXNlcjMxNDY1MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3146533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tehtekjess", "html_url": "https://github.com/tehtekjess", "followers_url": "https://api.github.com/users/tehtekjess/followers", "following_url": "https://api.github.com/users/tehtekjess/following{/other_user}", "gists_url": "https://api.github.com/users/tehtekjess/gists{/gist_id}", "starred_url": "https://api.github.com/users/tehtekjess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tehtekjess/subscriptions", "organizations_url": "https://api.github.com/users/tehtekjess/orgs", "repos_url": "https://api.github.com/users/tehtekjess/repos", "events_url": "https://api.github.com/users/tehtekjess/events{/privacy}", "received_events_url": "https://api.github.com/users/tehtekjess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-17T20:03:14Z", "updated_at": "2018-10-21T13:00:51Z", "closed_at": "2018-10-21T13:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Experienced a bug in pycodestyle 2.3.1, have not tested in latest.\r\n\r\nTest Case:\r\n`from typing import NamedTuple\r\n\r\n\r\nclass SomeInfo(NamedTuple):\r\n    internal_information_field: str\r\n    foreign_information_field: str\r\n    data: bytes\r\n\r\n\r\ntest = SomeInfo(\"test1\", \"test2\", b\"test3\")\r\n`\r\nGives an error \"../test.py:12:24: E701 multiple statements on one line (colon)\r\nI think it encounters the letter sequene \"for\" and it thinks it is a statement.\r\nIt was something I encountered on a project where we use pycodestyle, and I apologize for the brevity of my report.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/803", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/803/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/803/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/803", "id": 368617863, "node_id": "MDU6SXNzdWUzNjg2MTc4NjM=", "number": 803, "title": "No missing-whitespace when annotating function return type", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T11:21:44Z", "updated_at": "2018-12-07T23:37:23Z", "closed_at": "2018-12-07T23:37:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running on\r\n```\r\ndef foo(a: int)->int:\r\n    pass\r\n```\r\nI expect there to be a warning on the function defenition, according to [pep8](https://www.python.org/dev/peps/pep-0008/#other-recommendations):\r\n>\r\n\r\n> Function annotations should use the normal rules for colons and always have spaces around the -> arrow if present. (See Function Annotations below for more about function annotations.)\r\n> \r\n> Yes:\r\n> ```\r\n> def munge(input: AnyStr): ...\r\n> def munge() -> AnyStr: ...\r\n> ```\r\n> No:\r\n> ```\r\n> def munge(input:AnyStr): ...\r\n> def munge()->PosInt: ...\r\n> ```\r\nwhen running `pycodestyle` on that file, no warnings are issued", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/802", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/802/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/802/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/802", "id": 367198717, "node_id": "MDU6SXNzdWUzNjcxOTg3MTc=", "number": 802, "title": "AttributeError: 'module' object has no attribute 'curse_set'", "user": {"login": "Doook", "id": 40055111, "node_id": "MDQ6VXNlcjQwMDU1MTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/40055111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Doook", "html_url": "https://github.com/Doook", "followers_url": "https://api.github.com/users/Doook/followers", "following_url": "https://api.github.com/users/Doook/following{/other_user}", "gists_url": "https://api.github.com/users/Doook/gists{/gist_id}", "starred_url": "https://api.github.com/users/Doook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Doook/subscriptions", "organizations_url": "https://api.github.com/users/Doook/orgs", "repos_url": "https://api.github.com/users/Doook/repos", "events_url": "https://api.github.com/users/Doook/events{/privacy}", "received_events_url": "https://api.github.com/users/Doook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-05T12:54:23Z", "updated_at": "2018-10-05T16:33:48Z", "closed_at": "2018-10-05T16:33:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to python and coding I was just trying to make a snake game and I am not to sure what i have done wrong.\r\n[snake.py.zip](https://github.com/PyCQA/pycodestyle/files/2450325/snake.py.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/797", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/797/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/797/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/797/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/797", "id": 360294544, "node_id": "MDU6SXNzdWUzNjAyOTQ1NDQ=", "number": 797, "title": "E122 reporting inconsistency", "user": {"login": "amateja", "id": 9973037, "node_id": "MDQ6VXNlcjk5NzMwMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9973037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amateja", "html_url": "https://github.com/amateja", "followers_url": "https://api.github.com/users/amateja/followers", "following_url": "https://api.github.com/users/amateja/following{/other_user}", "gists_url": "https://api.github.com/users/amateja/gists{/gist_id}", "starred_url": "https://api.github.com/users/amateja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amateja/subscriptions", "organizations_url": "https://api.github.com/users/amateja/orgs", "repos_url": "https://api.github.com/users/amateja/repos", "events_url": "https://api.github.com/users/amateja/events{/privacy}", "received_events_url": "https://api.github.com/users/amateja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T12:58:58Z", "updated_at": "2020-02-19T21:21:42Z", "closed_at": "2020-02-19T21:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think I've stumble upon E122 reporting inconsistency. Please consider following positive cases paying attention to `foo` argument:\r\n```Python3\r\ndict(\r\n    foo='{spam}, {sausage}, {spam}, {spam}, {spam},'\r\n        '{bacon}, {spam}, {tomato} and {spam}',\r\n    bar=[\r\n        'spam',\r\n        'ham',\r\n        'eggs'\r\n    ]\r\n)\r\n```\r\n\r\n```Python3\r\ndict(\r\n    foo='{spam}, {sausage}, {spam}, {spam}, {spam},'\r\n    '{bacon}, {spam}, {tomato} and {spam}',\r\n    bar=[\r\n        'spam',\r\n        'ham',\r\n        'eggs'\r\n    ]\r\n)\r\n```\r\n\r\n```Python3\r\ndict(\r\n    foo='{spam}, {sausage}, {spam}, {spam}, {spam},'\r\n    '{bacon}, {spam}, {tomato} and {spam}'.format(\r\n        spam='spam', sausage='sausage', bacon='bacon', tomato='tomato'),\r\n    bar=[\r\n        'spam',\r\n        'ham',\r\n        'eggs'\r\n    ]\r\n)\r\n```\r\n\r\nbut this causes an E122\r\n```Python3\r\ndict(\r\n    foo='{spam}, {sausage}, {spam}, {spam}, {spam},'\r\n        '{bacon}, {spam}, {tomato} and {spam}'.format(\r\n            spam='spam', sausage='sausage', bacon='bacon', tomato='tomato'),\r\n    bar=[\r\n        'spam',\r\n        'ham',\r\n        'eggs'\r\n    ]  # E122 is reported here\r\n)\r\n```\r\nI'm quite confused. If 4th case is incorrect I believe 1st also should be considered as such. Do I miss something? My current configuration is:\r\n```JSON\r\n{\r\n  \"dependencies\": [\r\n    {\r\n      \"dependency\": \"setuptools\",\r\n      \"version\": \"40.2.0\"\r\n    }\r\n  ],\r\n  \"platform\": {\r\n    \"python_implementation\": \"CPython\",\r\n    \"python_version\": \"3.6.5\",\r\n    \"system\": \"Linux\"\r\n  },\r\n  \"plugins\": [\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"mccabe\",\r\n      \"version\": \"0.6.1\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"pycodestyle\",\r\n      \"version\": \"2.3.1\"\r\n    },\r\n    {\r\n      \"is_local\": false,\r\n      \"plugin\": \"pyflakes\",\r\n      \"version\": \"1.6.0\"\r\n    }\r\n  ],\r\n  \"version\": \"3.5.0\"\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/795", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/795/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/795/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/795", "id": 358844743, "node_id": "MDU6SXNzdWUzNTg4NDQ3NDM=", "number": 795, "title": "Checking for invalid escape sequences in docstrings yields negative column numbers", "user": {"login": "FichteFoll", "id": 931051, "node_id": "MDQ6VXNlcjkzMTA1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/931051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FichteFoll", "html_url": "https://github.com/FichteFoll", "followers_url": "https://api.github.com/users/FichteFoll/followers", "following_url": "https://api.github.com/users/FichteFoll/following{/other_user}", "gists_url": "https://api.github.com/users/FichteFoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/FichteFoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FichteFoll/subscriptions", "organizations_url": "https://api.github.com/users/FichteFoll/orgs", "repos_url": "https://api.github.com/users/FichteFoll/repos", "events_url": "https://api.github.com/users/FichteFoll/events{/privacy}", "received_events_url": "https://api.github.com/users/FichteFoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-09-11T00:42:40Z", "updated_at": "2018-11-22T13:39:32Z", "closed_at": "2018-11-22T13:39:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n/tmp/test \u0394 cat test.py\r\ndef func():\r\n    \"\"\"this is a\r\n    long-ish docstring\r\n    with invalid \\d escapes\r\n    \"\"\"\r\n    pass\r\n\r\n/tmp/test \u039b pycodestyle test.py\r\ntest.py:5:-12: W605 invalid escape sequence '\\d'\r\n ?=1\r\n/tmp/test $ pycodestyle --version\r\n2.4.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/792", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/792/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/792/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/792", "id": 358111719, "node_id": "MDU6SXNzdWUzNTgxMTE3MTk=", "number": 792, "title": "Completely remove W503 and W504", "user": {"login": "Nyrio", "id": 17441062, "node_id": "MDQ6VXNlcjE3NDQxMDYy", "avatar_url": "https://avatars1.githubusercontent.com/u/17441062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nyrio", "html_url": "https://github.com/Nyrio", "followers_url": "https://api.github.com/users/Nyrio/followers", "following_url": "https://api.github.com/users/Nyrio/following{/other_user}", "gists_url": "https://api.github.com/users/Nyrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nyrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nyrio/subscriptions", "organizations_url": "https://api.github.com/users/Nyrio/orgs", "repos_url": "https://api.github.com/users/Nyrio/repos", "events_url": "https://api.github.com/users/Nyrio/events{/privacy}", "received_events_url": "https://api.github.com/users/Nyrio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-07T15:25:40Z", "updated_at": "2018-11-17T11:15:04Z", "closed_at": "2018-09-08T20:54:47Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "For multiple warnings it is said in the docs \"they are not rules unanimously accepted, and PEP 8 does not enforce them\". But in the case of W503 and W504, it is more than that: pep8 says that new code should use the other convention:\r\n\"In Python code, it is permissible to break before or after a binary operator, as long as the convention is consistent locally. For new code Knuth's style is suggested.\"\r\n\r\nI know that these warnings are not supposed to be activated by default, but they are on some editor plugins using `pycodestyle` (like the great Sublime Text plugin Anaconda).\r\n\r\nI suggest that these two warnings be completely removed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/791", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/791/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/791/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/791", "id": 356951958, "node_id": "MDU6SXNzdWUzNTY5NTE5NTg=", "number": 791, "title": "print function does not recognize keyword arguments", "user": {"login": "DrStrangepork", "id": 7307373, "node_id": "MDQ6VXNlcjczMDczNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7307373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrStrangepork", "html_url": "https://github.com/DrStrangepork", "followers_url": "https://api.github.com/users/DrStrangepork/followers", "following_url": "https://api.github.com/users/DrStrangepork/following{/other_user}", "gists_url": "https://api.github.com/users/DrStrangepork/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrStrangepork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrStrangepork/subscriptions", "organizations_url": "https://api.github.com/users/DrStrangepork/orgs", "repos_url": "https://api.github.com/users/DrStrangepork/repos", "events_url": "https://api.github.com/users/DrStrangepork/events{/privacy}", "received_events_url": "https://api.github.com/users/DrStrangepork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-09-04T19:50:31Z", "updated_at": "2018-09-13T15:24:45Z", "closed_at": "2018-09-09T11:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "`print('foo', end='')`\r\n\r\nreports \"E999:SyntaxError: invalid syntax\". It is not invalid syntax: https://docs.python.org/3/library/functions.html#print", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/787", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/787/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/787/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/787/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/787", "id": 350276461, "node_id": "MDU6SXNzdWUzNTAyNzY0NjE=", "number": 787, "title": "false positive not-an-iterable on os.walk(...)", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T04:27:30Z", "updated_at": "2018-08-14T15:35:10Z", "closed_at": "2018-08-14T15:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "pep8 v1.7.1 and pycodestyle 2.4.0 are unable to recognize that the `os.walk()` function returns a generator/iterable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/786", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/786/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/786/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/786", "id": 345503272, "node_id": "MDU6SXNzdWUzNDU1MDMyNzI=", "number": 786, "title": "test case failing when run with Python 3.7", "user": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-29T05:27:32Z", "updated_at": "2018-11-22T13:37:16Z", "closed_at": "2018-11-22T13:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 2.4.0, I see one test case failing when run with Python 3.7. All tests succeed wihen run in 2.7.15 and 3.6.6.\r\n\r\nrunning build_ext\r\ntest_checkers_testsuite (testsuite.test_all.PycodestyleTestCase) ... /home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:13:1: W391:1:1 blank l\r\nine at end of file\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:14:1: error W292:1:5 not found\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:15:1: W391:1:1 blank line at end of file\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:16:1: error W292:1:27 not found\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:17:1: W391:1:1 blank line at end of file\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:18:1: error W292:3:22 not found\r\n/home/packages/tmp/pycodestyle-2.4.0/testsuite/W29.py:21:1: W391:3:1 blank line at end of file\r\nFAIL\r\ntest_doctest (testsuite.test_all.PycodestyleTestCase) ... ok\r\ntest_own_dog_food (testsuite.test_all.PycodestyleTestCase) ... /home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:292:13: W504 line break after \r\nbinary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:350:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:356:21: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:357:21: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:378:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:379:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:380:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:610:30: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:656:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:657:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:664:15: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:741:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:742:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:743:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:745:13: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:747:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1112:14: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1113:14: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1239:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1240:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1272:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1273:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1274:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1308:24: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1739:38: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:1860:45: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:2212:17: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:2275:22: W504 line break after binary operator\r\n/home/packages/tmp/pycodestyle-2.4.0/pycodestyle.py:2304:17: W504 line break after binary operator\r\nok\r\ntest_selftest (testsuite.test_all.PycodestyleTestCase) ... ok\r\ntest_check_nullbytes (testsuite.test_api.APITestCase) ... ok\r\ntest_check_unicode (testsuite.test_api.APITestCase) ... ok\r\ntest_register_ast_check (testsuite.test_api.APITestCase) ... ok\r\ntest_register_invalid_check (testsuite.test_api.APITestCase) ... ok\r\ntest_register_logical_check (testsuite.test_api.APITestCase) ... ok\r\ntest_register_physical_check (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_check_files (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_checks (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_continuation_line_outdented (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_excluded (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_ignore_code (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_init_report (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_options (testsuite.test_api.APITestCase) ... ok\r\ntest_styleguide_unmatched_triple_quotes (testsuite.test_api.APITestCase) ... ok\r\ntest_blank_line_between_decorator (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_blank_line_decorator (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_initial_lines_more_blank (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_initial_lines_one_blank (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_initial_lines_two_blanks (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_initial_no_blank (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_fewer_follow_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_less_blank_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_less_blank_lines_comment (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_more_blank_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_nested_fewer_follow_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_nested_less_class (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_method_nested_ok (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_top_level_fewer_blank_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_top_level_fewer_follow_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_top_level_fewer_follow_lines_comments (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_top_level_good_follow_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_top_level_more_blank_lines (testsuite.test_blank_lines.TestBlankLinesDefault) ... ok\r\ntest_initial_lines_one_blanks (testsuite.test_blank_lines.TestBlankLinesTwisted) ... ok\r\ntest_initial_lines_tree_blanks (testsuite.test_blank_lines.TestBlankLinesTwisted) ... ok\r\ntest_the_right_blanks (testsuite.test_blank_lines.TestBlankLinesTwisted) ... ok\r\ntest_top_level_fewer_blank_lines (testsuite.test_blank_lines.TestBlankLinesTwisted) ... ok\r\ntest_top_level_more_blank_lines (testsuite.test_blank_lines.TestBlankLinesTwisted) ... ok\r\ntest_multiline_ignore_parsing (testsuite.test_parser.ParserTestCase) ... ok\r\ntest_multiline_trailing_comma_ignore_parsing (testsuite.test_parser.ParserTestCase) ... ok\r\ntest_trailing_comma_ignore_parsing (testsuite.test_parser.ParserTestCase) ... ok\r\ntest_vanilla_ignore_parsing (testsuite.test_parser.ParserTestCase) ... ok\r\ntest_check_diff (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_check_noarg (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_check_non_existent (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_check_simple (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_check_stdin (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_print_usage (testsuite.test_shell.ShellTestCase) ... ok\r\ntest_normalize_paths (testsuite.test_util.UtilTestCase) ... ok\r\n\r\n======================================================================\r\nFAIL: test_checkers_testsuite (testsuite.test_all.PycodestyleTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/packages/tmp/pycodestyle-2.4.0/testsuite/test_all.py\", line 39, in test_checkers_testsuite\r\n    msg='%s failure(s)' % report.total_errors)\r\nAssertionError: 7 is not false : 7 failure(s)\r\n\r\n----------------------------------------------------------------------\r\nRan 53 tests in 0.698s\r\n\r\nFAILED (failures=1)\r\nTest failed: <unittest.runner.TextTestResult run=53 errors=0 failures=1>\r\nerror: Test failed: <unittest.runner.TextTestResult run=53 errors=0 failures=1>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/784", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/784/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/784/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/784", "id": 342641090, "node_id": "MDU6SXNzdWUzNDI2NDEwOTA=", "number": 784, "title": "E211 not detected in class definition", "user": {"login": "giavjeko", "id": 7447847, "node_id": "MDQ6VXNlcjc0NDc4NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7447847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giavjeko", "html_url": "https://github.com/giavjeko", "followers_url": "https://api.github.com/users/giavjeko/followers", "following_url": "https://api.github.com/users/giavjeko/following{/other_user}", "gists_url": "https://api.github.com/users/giavjeko/gists{/gist_id}", "starred_url": "https://api.github.com/users/giavjeko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giavjeko/subscriptions", "organizations_url": "https://api.github.com/users/giavjeko/orgs", "repos_url": "https://api.github.com/users/giavjeko/repos", "events_url": "https://api.github.com/users/giavjeko/events{/privacy}", "received_events_url": "https://api.github.com/users/giavjeko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-19T09:04:25Z", "updated_at": "2020-02-19T21:19:10Z", "closed_at": "2020-02-19T21:19:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pycodestyle does not report any errors for this code snippet:\r\n```\r\nclass A   (object):\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/783", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/783/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/783/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/783", "id": 342229148, "node_id": "MDU6SXNzdWUzNDIyMjkxNDg=", "number": 783, "title": "Issues with pycodestyle version?", "user": {"login": "MikkelDK", "id": 5301047, "node_id": "MDQ6VXNlcjUzMDEwNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5301047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikkelDK", "html_url": "https://github.com/MikkelDK", "followers_url": "https://api.github.com/users/MikkelDK/followers", "following_url": "https://api.github.com/users/MikkelDK/following{/other_user}", "gists_url": "https://api.github.com/users/MikkelDK/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikkelDK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikkelDK/subscriptions", "organizations_url": "https://api.github.com/users/MikkelDK/orgs", "repos_url": "https://api.github.com/users/MikkelDK/repos", "events_url": "https://api.github.com/users/MikkelDK/events{/privacy}", "received_events_url": "https://api.github.com/users/MikkelDK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-18T08:36:13Z", "updated_at": "2019-10-10T18:25:34Z", "closed_at": "2018-08-14T18:46:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI have some issues with installation of pycodestyle. where i do this:\r\npip install pycodestyle. and i getting this error/issue:\r\n\r\n`flake8 3.5.0 has requirement pycodestyle<2.4.0,>=2.0.0, but you'll have pycodestyle 2.4.0 which is incompatible. `\r\n\r\nHow can i fix that? ;o", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/782", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/782/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/782/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/782", "id": 341171224, "node_id": "MDU6SXNzdWUzNDExNzEyMjQ=", "number": 782, "title": "Undefined variable emitted when closed over variable created with lambda", "user": {"login": "NeilGirdhar", "id": 730137, "node_id": "MDQ6VXNlcjczMDEzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/730137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeilGirdhar", "html_url": "https://github.com/NeilGirdhar", "followers_url": "https://api.github.com/users/NeilGirdhar/followers", "following_url": "https://api.github.com/users/NeilGirdhar/following{/other_user}", "gists_url": "https://api.github.com/users/NeilGirdhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeilGirdhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeilGirdhar/subscriptions", "organizations_url": "https://api.github.com/users/NeilGirdhar/orgs", "repos_url": "https://api.github.com/users/NeilGirdhar/repos", "events_url": "https://api.github.com/users/NeilGirdhar/events{/privacy}", "received_events_url": "https://api.github.com/users/NeilGirdhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-13T21:57:52Z", "updated_at": "2018-07-14T05:00:16Z", "closed_at": "2018-07-14T05:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Passing the following to pylint:\r\n```\r\na = 5\r\nf = lambda a=a: a\r\nprint(f())\r\n```\r\nemits\r\n```\r\na.py:2:13: E0602: Undefined variable 'a' (undefined-variable)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/781", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/781/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/781/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/781", "id": 341088684, "node_id": "MDU6SXNzdWUzNDEwODg2ODQ=", "number": 781, "title": "Missing whitespace error with types and default with keyword arguments", "user": {"login": "sk-", "id": 911768, "node_id": "MDQ6VXNlcjkxMTc2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/911768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sk-", "html_url": "https://github.com/sk-", "followers_url": "https://api.github.com/users/sk-/followers", "following_url": "https://api.github.com/users/sk-/following{/other_user}", "gists_url": "https://api.github.com/users/sk-/gists{/gist_id}", "starred_url": "https://api.github.com/users/sk-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sk-/subscriptions", "organizations_url": "https://api.github.com/users/sk-/orgs", "repos_url": "https://api.github.com/users/sk-/repos", "events_url": "https://api.github.com/users/sk-/events{/privacy}", "received_events_url": "https://api.github.com/users/sk-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T16:50:00Z", "updated_at": "2018-08-02T15:27:04Z", "closed_at": "2018-08-02T15:27:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the snippet below\r\n\r\n```python\r\ndef test(foo: timedelta = timedelta(hours=6)):\r\n    return foo\r\n\r\n\r\ndef test2(foo=timedelta(hours=6)):\r\n    return foo\r\n```\r\n`pycodestyle` returns the following errors:\r\n\r\n```\r\ntest.py:1:42: E252 missing whitespace around parameter equals\r\ntest.py:1:43: E252 missing whitespace around parameter equals\r\n```\r\n\r\nThis is because how the PEP8 rule: \"When combining an argument annotation with a default value, use spaces around the = sign (but only for those arguments that have both an annotation and a default).\" is treated.\r\n\r\nIn lines https://github.com/PyCQA/pycodestyle/blob/95360fc179c4451321bd4c7947f020c6d701671c/pycodestyle.py#L948-L951\r\n\r\nthe `annotated_func_arg` should be reset after encountering the first equal sign.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/780", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/780/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/780/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/780", "id": 339911807, "node_id": "MDU6SXNzdWUzMzk5MTE4MDc=", "number": 780, "title": "Future Warning on Python 3.7", "user": {"login": "ErikPartridge", "id": 7953455, "node_id": "MDQ6VXNlcjc5NTM0NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7953455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikPartridge", "html_url": "https://github.com/ErikPartridge", "followers_url": "https://api.github.com/users/ErikPartridge/followers", "following_url": "https://api.github.com/users/ErikPartridge/following{/other_user}", "gists_url": "https://api.github.com/users/ErikPartridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikPartridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikPartridge/subscriptions", "organizations_url": "https://api.github.com/users/ErikPartridge/orgs", "repos_url": "https://api.github.com/users/ErikPartridge/repos", "events_url": "https://api.github.com/users/ErikPartridge/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikPartridge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-10T16:11:49Z", "updated_at": "2018-07-10T18:30:35Z", "closed_at": "2018-07-10T18:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running pycodestyle on the latest version of Python 3.7 is giving the following future warning:\r\n\r\n``/usr/local/lib/python3.7/site-packages/pycodestyle.py:113: FutureWarning: Possible nested set at position 1\r\n  EXTRANEOUS_WHITESPACE_REGEX = re.compile(r'[[({] | []}),;:]')\r\n``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/779", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/779/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/779/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/779", "id": 339380230, "node_id": "MDU6SXNzdWUzMzkzODAyMzA=", "number": 779, "title": "Output to JSON", "user": {"login": "jaipradeesh", "id": 4883668, "node_id": "MDQ6VXNlcjQ4ODM2Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4883668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaipradeesh", "html_url": "https://github.com/jaipradeesh", "followers_url": "https://api.github.com/users/jaipradeesh/followers", "following_url": "https://api.github.com/users/jaipradeesh/following{/other_user}", "gists_url": "https://api.github.com/users/jaipradeesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaipradeesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaipradeesh/subscriptions", "organizations_url": "https://api.github.com/users/jaipradeesh/orgs", "repos_url": "https://api.github.com/users/jaipradeesh/repos", "events_url": "https://api.github.com/users/jaipradeesh/events{/privacy}", "received_events_url": "https://api.github.com/users/jaipradeesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-09T09:51:35Z", "updated_at": "2018-07-09T12:17:27Z", "closed_at": "2018-07-09T12:17:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nIs it possible to spit out the results in JSON?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/776", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/776/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/776/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/776", "id": 338987241, "node_id": "MDU6SXNzdWUzMzg5ODcyNDE=", "number": 776, "title": "E721 possible false positive", "user": {"login": "JoseKilo", "id": 4922058, "node_id": "MDQ6VXNlcjQ5MjIwNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4922058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseKilo", "html_url": "https://github.com/JoseKilo", "followers_url": "https://api.github.com/users/JoseKilo/followers", "following_url": "https://api.github.com/users/JoseKilo/following{/other_user}", "gists_url": "https://api.github.com/users/JoseKilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseKilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseKilo/subscriptions", "organizations_url": "https://api.github.com/users/JoseKilo/orgs", "repos_url": "https://api.github.com/users/JoseKilo/repos", "events_url": "https://api.github.com/users/JoseKilo/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseKilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-06T15:47:47Z", "updated_at": "2020-01-10T11:29:42Z", "closed_at": "2018-07-10T18:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code that uses `inspect` to analyse the typing annotations of a function:\r\n\r\n```python\r\nimport inspect\r\nimport typing\r\n\r\n\r\ndef foo(bar: typing.Optional[str]):\r\n    pass\r\n\r\n\r\ndef main():\r\n    signature = inspect.signature(foo)\r\n    for name, parameter in signature.parameters.items():\r\n\r\n        for arg in parameter.annotation.__args__:\r\n            if arg == type(None):\r\n                print(\"It's NoneType\")\r\n```\r\n\r\nIt produces: `E721 do not compare types, use 'isinstance()'` on line 14.\r\n\r\nI don't think it's a valid use case for `isinstance`, since there is no instance, just the type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/774", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/774/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/774/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/774", "id": 337842802, "node_id": "MDU6SXNzdWUzMzc4NDI4MDI=", "number": 774, "title": "mssing variables in f-string have no useful position information", "user": {"login": "AvdN", "id": 1210650, "node_id": "MDQ6VXNlcjEyMTA2NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1210650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AvdN", "html_url": "https://github.com/AvdN", "followers_url": "https://api.github.com/users/AvdN/followers", "following_url": "https://api.github.com/users/AvdN/following{/other_user}", "gists_url": "https://api.github.com/users/AvdN/gists{/gist_id}", "starred_url": "https://api.github.com/users/AvdN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AvdN/subscriptions", "organizations_url": "https://api.github.com/users/AvdN/orgs", "repos_url": "https://api.github.com/users/AvdN/repos", "events_url": "https://api.github.com/users/AvdN/events{/privacy}", "received_events_url": "https://api.github.com/users/AvdN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T10:40:42Z", "updated_at": "2018-07-11T11:32:29Z", "closed_at": "2018-07-11T11:32:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error:\r\n\r\n```\r\n./develop.py:1:2: F821 undefined name 'initpy'\r\n# coding: utf-8\r\n\r\n```\r\n\r\nbecause an f-string in a class method accessed the incorrect (global) variable name:\r\n\r\n```\r\n                print(f'no _package_data in {initpy}?')\r\n```\r\nThis was actually line 695. to have that line displayed instead of the first line of the file.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/773", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/773/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/773/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/773", "id": 336556363, "node_id": "MDU6SXNzdWUzMzY1NTYzNjM=", "number": 773, "title": "Extend command line options with the config file", "user": {"login": "maxnordlund", "id": 664779, "node_id": "MDQ6VXNlcjY2NDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/664779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxnordlund", "html_url": "https://github.com/maxnordlund", "followers_url": "https://api.github.com/users/maxnordlund/followers", "following_url": "https://api.github.com/users/maxnordlund/following{/other_user}", "gists_url": "https://api.github.com/users/maxnordlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxnordlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxnordlund/subscriptions", "organizations_url": "https://api.github.com/users/maxnordlund/orgs", "repos_url": "https://api.github.com/users/maxnordlund/repos", "events_url": "https://api.github.com/users/maxnordlund/events{/privacy}", "received_events_url": "https://api.github.com/users/maxnordlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-28T10:05:20Z", "updated_at": "2018-08-23T11:40:32Z", "closed_at": "2018-06-29T17:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently they are all overridden, but for some, like ignore and exclude, it makes more sense IMHO to append the command line option to the list in the config file.\r\n\r\nWhat do you think?\r\n\r\nhttps://github.com/PyCQA/pycodestyle/blob/85f8f5e3ac349c0746df9544997ea346f9901061/pycodestyle.py#L2515-L2516", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/772", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/772/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/772/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/772", "id": 335458095, "node_id": "MDU6SXNzdWUzMzU0NTgwOTU=", "number": 772, "title": "False positive E701 multiple statements on one line (colon) w/ \"class\" in variable name", "user": {"login": "shapiromatron", "id": 999952, "node_id": "MDQ6VXNlcjk5OTk1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/999952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shapiromatron", "html_url": "https://github.com/shapiromatron", "followers_url": "https://api.github.com/users/shapiromatron/followers", "following_url": "https://api.github.com/users/shapiromatron/following{/other_user}", "gists_url": "https://api.github.com/users/shapiromatron/gists{/gist_id}", "starred_url": "https://api.github.com/users/shapiromatron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shapiromatron/subscriptions", "organizations_url": "https://api.github.com/users/shapiromatron/orgs", "repos_url": "https://api.github.com/users/shapiromatron/repos", "events_url": "https://api.github.com/users/shapiromatron/events{/privacy}", "received_events_url": "https://api.github.com/users/shapiromatron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-25T15:30:36Z", "updated_at": "2018-06-26T14:52:16Z", "closed_at": "2018-06-26T14:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following incorrectly gives a 701 warning:\r\n\r\n```python\r\nclassifiers: int = 2\r\n```\r\nLooks like if the variable name starts with `class` and contains a colon it might trigger the error\r\nhttps://github.com/PyCQA/pycodestyle/blob/master/pycodestyle.py#L1131\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/771", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/771/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/771/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/771", "id": 332169472, "node_id": "MDU6SXNzdWUzMzIxNjk0NzI=", "number": 771, "title": "pycodestyle handles an extra closing parenthesis very poorly", "user": {"login": "thanatos", "id": 90853, "node_id": "MDQ6VXNlcjkwODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanatos", "html_url": "https://github.com/thanatos", "followers_url": "https://api.github.com/users/thanatos/followers", "following_url": "https://api.github.com/users/thanatos/following{/other_user}", "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions", "organizations_url": "https://api.github.com/users/thanatos/orgs", "repos_url": "https://api.github.com/users/thanatos/repos", "events_url": "https://api.github.com/users/thanatos/events{/privacy}", "received_events_url": "https://api.github.com/users/thanatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-13T21:23:46Z", "updated_at": "2020-02-19T21:18:07Z", "closed_at": "2020-02-19T21:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take, for example, this Python:\r\n\r\n```python\r\nasync def main():\r\n    foobar = await asyncio.gather(\r\n        bar, baz, qux,\r\n    ))  # N.b., an extra ) is here, by mistake.\r\n\r\n    core.init(warp)\r\n    http_session = aiohttp.client.ClientSession()\r\n\r\n    async def thunk(messages):\r\n        await process_messages(\r\n            messages,\r\n            warp_core,\r\n        )\r\n\r\n    consumer = \\\r\n        consume_messages(client, warp, core, thunk)\r\n```\r\n\r\n`pycodestyle` will emit the following:\r\n\r\n```\r\n./pycodestyle-weird-error.py:6:5: E122 continuation line missing indentation or outdented\r\n./pycodestyle-weird-error.py:7:5: E122 continuation line missing indentation or outdented\r\n./pycodestyle-weird-error.py:7:17: E251 unexpected spaces around keyword / parameter equals\r\n./pycodestyle-weird-error.py:7:19: E251 unexpected spaces around keyword / parameter equals\r\n./pycodestyle-weird-error.py:9:5: E122 continuation line missing indentation or outdented\r\n./pycodestyle-weird-error.py:11:13: E113 unexpected indentation\r\n./pycodestyle-weird-error.py:13:9: E901 IndentationError: unindent does not match any outer indentation level\r\n```\r\n\r\nI initially started trying to tackle the `IndentationError`, since that seemed the most egregious of the lot, and would prevent the code from running at all, as opposed to a mere stylistic violation. It took me a considerable while to figure out `pycodestyle` had sent me on a wild goose chase.\r\n\r\nThe actual error here is that there is an extra `)`, which attempts to close a `(` that was never opened. As a layman, it seems like that error (a mismatched parenthesis) should be easy to catch, and certainly, the situation would be a _lot_ clearer to me as a user if `pycodestyle` could emit the singular error message\r\n```\r\n\u2026:4:?: E??? unmatched / extra closing parenthesis\r\n```\r\n\r\nor something along those lines.\r\n\r\nThat one character (`)`) is the only actual violation in the example. Removing it causes the file to pass `pycodestyle` without error.\r\n\r\n(Now, my understanding is that some parser algorithms actually make this sort of good error reporting rather hard to do. So, this might all be very non-trivial.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/768", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/768/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/768/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/768", "id": 328239899, "node_id": "MDU6SXNzdWUzMjgyMzk4OTk=", "number": 768, "title": "matmul operator is not checked for missing whitespace", "user": {"login": "jwkvam", "id": 86304, "node_id": "MDQ6VXNlcjg2MzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/86304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwkvam", "html_url": "https://github.com/jwkvam", "followers_url": "https://api.github.com/users/jwkvam/followers", "following_url": "https://api.github.com/users/jwkvam/following{/other_user}", "gists_url": "https://api.github.com/users/jwkvam/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwkvam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwkvam/subscriptions", "organizations_url": "https://api.github.com/users/jwkvam/orgs", "repos_url": "https://api.github.com/users/jwkvam/repos", "events_url": "https://api.github.com/users/jwkvam/events{/privacy}", "received_events_url": "https://api.github.com/users/jwkvam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-31T18:01:46Z", "updated_at": "2020-02-19T21:16:08Z", "closed_at": "2020-02-19T21:16:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n```\r\nx = 3\r\nx*x\r\nx@x\r\n```\r\nPycodestyle output:\r\n```\r\nhello.py:2:2: E226 missing whitespace around arithmetic operator\r\n```\r\nExpected output:\r\n```\r\nhello.py:2:2: E226 missing whitespace around arithmetic operator\r\nhello.py:3:2: E226 missing whitespace around arithmetic operator\r\n```\r\nVersion:\r\n```\r\n2.4.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/767", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/767/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/767/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/767/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/767", "id": 326240867, "node_id": "MDU6SXNzdWUzMjYyNDA4Njc=", "number": 767, "title": "E714 miscategorizes chained 'is not'", "user": {"login": "supposedly", "id": 32081933, "node_id": "MDQ6VXNlcjMyMDgxOTMz", "avatar_url": "https://avatars2.githubusercontent.com/u/32081933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supposedly", "html_url": "https://github.com/supposedly", "followers_url": "https://api.github.com/users/supposedly/followers", "following_url": "https://api.github.com/users/supposedly/following{/other_user}", "gists_url": "https://api.github.com/users/supposedly/gists{/gist_id}", "starred_url": "https://api.github.com/users/supposedly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supposedly/subscriptions", "organizations_url": "https://api.github.com/users/supposedly/orgs", "repos_url": "https://api.github.com/users/supposedly/repos", "events_url": "https://api.github.com/users/supposedly/events{/privacy}", "received_events_url": "https://api.github.com/users/supposedly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T18:33:48Z", "updated_at": "2020-05-08T14:26:06Z", "closed_at": "2020-05-08T14:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6.5, pycodestyle 2.4.0\r\n\r\nMisinterprets the first `is not`'s `not` as part of a `not foo is ...` expression.\r\n\r\ntest.txt:\r\n```py\r\nfoo is not bar is not baz\r\n```\r\noutput:\r\n```\r\ntest:1:8: E714 test for object identity should be 'is not'\r\n```\r\n(not that chained `is not`s would ever appear in real/good code, but still worth noting)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/766", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/766/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/766/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/766", "id": 324576580, "node_id": "MDU6SXNzdWUzMjQ1NzY1ODA=", "number": 766, "title": "Escaped character in regular expression falsely triggers W605 \"invalid escape sequence\"", "user": {"login": "benguyer", "id": 22603255, "node_id": "MDQ6VXNlcjIyNjAzMjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/22603255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benguyer", "html_url": "https://github.com/benguyer", "followers_url": "https://api.github.com/users/benguyer/followers", "following_url": "https://api.github.com/users/benguyer/following{/other_user}", "gists_url": "https://api.github.com/users/benguyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/benguyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benguyer/subscriptions", "organizations_url": "https://api.github.com/users/benguyer/orgs", "repos_url": "https://api.github.com/users/benguyer/repos", "events_url": "https://api.github.com/users/benguyer/events{/privacy}", "received_events_url": "https://api.github.com/users/benguyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-18T23:11:22Z", "updated_at": "2020-04-23T18:50:31Z", "closed_at": "2018-05-22T18:18:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a simple example of a python script that falsely triggers this warning. It matches the literal character \"?\"\r\n\r\n```\r\nimport re\r\n\r\nregex = re.compile(\"\\?\")\r\nnon_matching_string = \"test\"\r\nmatching_string = \"test?\"\r\n\r\nif regex.search(non_matching_string):\r\n    print(\"This won't be printed\")\r\nif regex.search(matching_string):\r\n    print(\"This will be printed\")\r\n```\r\n\r\nI am using:\r\npycodestyle version: 2.4.0\r\npython version: 3.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/765", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/765/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/765/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/765", "id": 320622569, "node_id": "MDU6SXNzdWUzMjA2MjI1Njk=", "number": 765, "title": "Simultaneous E127 & E122 violation", "user": {"login": "supposedly", "id": 32081933, "node_id": "MDQ6VXNlcjMyMDgxOTMz", "avatar_url": "https://avatars2.githubusercontent.com/u/32081933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supposedly", "html_url": "https://github.com/supposedly", "followers_url": "https://api.github.com/users/supposedly/followers", "following_url": "https://api.github.com/users/supposedly/following{/other_user}", "gists_url": "https://api.github.com/users/supposedly/gists{/gist_id}", "starred_url": "https://api.github.com/users/supposedly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supposedly/subscriptions", "organizations_url": "https://api.github.com/users/supposedly/orgs", "repos_url": "https://api.github.com/users/supposedly/repos", "events_url": "https://api.github.com/users/supposedly/events{/privacy}", "received_events_url": "https://api.github.com/users/supposedly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 268681929, "node_id": "MDU6TGFiZWwyNjg2ODE5Mjk=", "url": "https://api.github.com/repos/PyCQA/pycodestyle/labels/incomplete", "name": "incomplete", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-06T19:47:58Z", "updated_at": "2019-04-11T19:23:09Z", "closed_at": "2019-04-11T19:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "_**Python version** 3.6.5, **pycodestyle version** 2.4.0._\r\n\r\n(I *think* this is distinct from the other E127-related issues, like #758.)\r\n\r\nRun pycodestyle on the following snippet, noting the position of the plus symbol in each block:\r\n\r\n```py\r\ndef hmm():\r\n    at_least_one_extra_line_needs_to_be_here: None\r\n    (\r\n      'an expression'\r\n      'chopped up'\r\n      'into lines'\r\n      ) \\\r\n      + 'another expression'\r\n\r\n\r\ndef hm():\r\n    at_least_one_extra_line_needs_to_be_here: None\r\n    (\r\n      'an expression'\r\n      'chopped up'\r\n      'into lines'\r\n      ) \\\r\n    + 'another expression'\r\n\r\n```\r\n\r\nResult:\r\n```\r\n~$ pycodestyle test.py\r\ntest.py:8:7: E127 continuation line over-indented for visual indent\r\ntest.py:18:5: E122 continuation line missing indentation or outdented\r\n~$ \r\n```\r\n\r\nI'd expect at least one of them to pass (because the errors contradict each other), and indeed the E127 on line 8 does not appear under the following conditions:\r\n\r\n```py\r\ndef hmm():\r\n    # no preceding line(s)\r\n    (\r\n      'an expression'\r\n      'chopped up'\r\n      'into lines'\r\n      ) \\\r\n      + 'another expression'\r\n```\r\n```py\r\n# no indentation\r\nat_least_one_extra_line_needs_to_be_here: None\r\n(\r\n  'an expression'\r\n  'chopped up'\r\n  'into lines'\r\n  ) \\\r\n  + 'another expression'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/764", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/764/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/764/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/764", "id": 320091490, "node_id": "MDU6SXNzdWUzMjAwOTE0OTA=", "number": 764, "title": "pycodestyle 2.3.1 py36 egg in PyPI has \"v2.4.0\" code", "user": {"login": "ginoledesma", "id": 879991, "node_id": "MDQ6VXNlcjg3OTk5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/879991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ginoledesma", "html_url": "https://github.com/ginoledesma", "followers_url": "https://api.github.com/users/ginoledesma/followers", "following_url": "https://api.github.com/users/ginoledesma/following{/other_user}", "gists_url": "https://api.github.com/users/ginoledesma/gists{/gist_id}", "starred_url": "https://api.github.com/users/ginoledesma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ginoledesma/subscriptions", "organizations_url": "https://api.github.com/users/ginoledesma/orgs", "repos_url": "https://api.github.com/users/ginoledesma/repos", "events_url": "https://api.github.com/users/ginoledesma/events{/privacy}", "received_events_url": "https://api.github.com/users/ginoledesma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-03T21:46:30Z", "updated_at": "2018-05-04T23:44:18Z", "closed_at": "2018-05-04T23:44:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, All\r\n\r\nI'm not sure who maintains the publishing of the pycodestyle module in PyPI, but I've been running into issues very similar to #741 , where pytest-flake8 was pulling in v2.3.1 of pycodestyle yet failing to run with exactly the same stack trace as issue #741. We were getting inconsistent results depending on the way we were setting up our environment \u2014\u00a0pip vs setuptools.\r\n\r\nIt seems like a build of 2.3.1 at commit 8f3aebdd2bbe08111e7bc76f2722bab965ab571c was published as a py36 egg to PyPI, but this is different from the tagged release at https://github.com/PyCQA/pycodestyle/tree/2.3.1.\r\n\r\n```bash\r\n$ curl -O https://files.pythonhosted.org/packages/9a/4c/40238ba394be5c2d3d794f072695331dd3e2111351e2820e45352eefc9e9/pycodestyle-2.3.1-py2.7.egg\r\n$ curl -O https://files.pythonhosted.org/packages/e4/81/78fe51eb4038d1388b7217dd63770b0f428370207125047312886c923b26/pycodestyle-2.3.1-py2.py3-none-any.whl\r\n$ curl -O https://files.pythonhosted.org/packages/2a/ad/19df03d320cbf2b5e32444bdc9e52f212d2c2a8e9202137c68f780c7e6f4/pycodestyle-2.3.1-py3.6.egg\r\n$ curl -O https://files.pythonhosted.org/packages/e1/88/0e2cbf412bd849ea6f1af1f97882add46a374f4ba1d2aea39353609150ad/pycodestyle-2.3.1.tar.gz\r\n\r\n$ mkdir py27-egg py36-egg wheel tar\r\n\r\n$ unzip pycodestyle-2.3.1-py2.py3-none-any.whl -d wheel/\r\n$ unzip pycodestyle-2.3.1-py2.7.egg -d py27-egg/\r\n$ unzip pycodestyle-2.3.1-py3.6.egg -d py36-egg/\r\n$ tar -C tar/ -zxvf pycodestyle-2.3.1.tar.gz \r\n\r\n$ find . -type f -name pycodestyle.py -exec shasum {} ';'\r\n1ffe96ff7a0e4f3602569c7a8136d035d4c3c52d  ./wheel/pycodestyle.py\r\n59c6e99db5e1f02b95b56b1502f647b724a38700  ./py36-egg/pycodestyle.py\r\n1ffe96ff7a0e4f3602569c7a8136d035d4c3c52d  ./tar/pycodestyle-2.3.1/pycodestyle.py\r\n17c3428ec0c4c240ebca7a72a43d05a8bd71d6ab  ./py27-egg/pycodestyle.py\r\n```\r\n\r\nThe python 2.7 egg seems to be working ok (haven't fully tested), but it's python 3.6 egg that's broken. If for some reason setuptools/pip picks up the egg version of the package (instead of wheel/source), and they happen to be running python 3.6+, then they could run into this problem as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/762", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/762/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/762/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/762", "id": 317731917, "node_id": "MDU6SXNzdWUzMTc3MzE5MTc=", "number": 762, "title": "W606 is not ignored with \"# noqa\"", "user": {"login": "jwkvam", "id": 86304, "node_id": "MDQ6VXNlcjg2MzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/86304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwkvam", "html_url": "https://github.com/jwkvam", "followers_url": "https://api.github.com/users/jwkvam/followers", "following_url": "https://api.github.com/users/jwkvam/following{/other_user}", "gists_url": "https://api.github.com/users/jwkvam/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwkvam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwkvam/subscriptions", "organizations_url": "https://api.github.com/users/jwkvam/orgs", "repos_url": "https://api.github.com/users/jwkvam/repos", "events_url": "https://api.github.com/users/jwkvam/events{/privacy}", "received_events_url": "https://api.github.com/users/jwkvam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-25T17:54:48Z", "updated_at": "2018-04-26T17:11:02Z", "closed_at": "2018-04-26T17:11:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "This isn't a big deal for me, I can just disable this check globally. I'm using a library that has a module called `async` so I can't change that easily myself. I wanted to disable this check when I import that library. Then I can still verify that the rest of my code doesn't use these reserved keywords.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/760", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/760/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/760/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/760/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/760", "id": 316281609, "node_id": "MDU6SXNzdWUzMTYyODE2MDk=", "number": 760, "title": "E252 Mistakenly triggered by typing.", "user": {"login": "fflorens", "id": 6020879, "node_id": "MDQ6VXNlcjYwMjA4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6020879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fflorens", "html_url": "https://github.com/fflorens", "followers_url": "https://api.github.com/users/fflorens/followers", "following_url": "https://api.github.com/users/fflorens/following{/other_user}", "gists_url": "https://api.github.com/users/fflorens/gists{/gist_id}", "starred_url": "https://api.github.com/users/fflorens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fflorens/subscriptions", "organizations_url": "https://api.github.com/users/fflorens/orgs", "repos_url": "https://api.github.com/users/fflorens/repos", "events_url": "https://api.github.com/users/fflorens/events{/privacy}", "received_events_url": "https://api.github.com/users/fflorens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-20T14:05:24Z", "updated_at": "2019-07-08T07:06:05Z", "closed_at": "2018-04-21T03:36:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this code example, mixing default value with type hints triggers E252 while it should not.\r\n\r\n`$> pycodestyle --show-source --show-pep8 foo.py`\r\n```foo.py:1:21: E252 missing whitespace around parameter equals\r\ndef foo(params: dict=None):\r\n                    ^\r\n    Don't use spaces around the '=' sign in function arguments.\r\n\r\n    Don't use spaces around the '=' sign when used to indicate a\r\n    keyword argument or a default parameter value, except when using a type\r\n    annotation.\r\n\r\n    Okay: def complex(real, imag=0.0):\r\n    Okay: return magic(r=real, i=imag)\r\n    Okay: boolean(a == b)\r\n    Okay: boolean(a != b)\r\n    Okay: boolean(a <= b)\r\n    Okay: boolean(a >= b)\r\n    Okay: def foo(arg: int = 42):\r\n    Okay: async def foo(arg: int = 42):\r\n\r\n    E251: def complex(real, imag = 0.0):\r\n    E251: return magic(r = real, i = imag)\r\n    E252: def complex(real, image: float=0.0):```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/758", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/758/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/758/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/758", "id": 315513364, "node_id": "MDU6SXNzdWUzMTU1MTMzNjQ=", "number": 758, "title": "E127: bugs?", "user": {"login": "StanTraykov", "id": 36573153, "node_id": "MDQ6VXNlcjM2NTczMTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/36573153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StanTraykov", "html_url": "https://github.com/StanTraykov", "followers_url": "https://api.github.com/users/StanTraykov/followers", "following_url": "https://api.github.com/users/StanTraykov/following{/other_user}", "gists_url": "https://api.github.com/users/StanTraykov/gists{/gist_id}", "starred_url": "https://api.github.com/users/StanTraykov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StanTraykov/subscriptions", "organizations_url": "https://api.github.com/users/StanTraykov/orgs", "repos_url": "https://api.github.com/users/StanTraykov/repos", "events_url": "https://api.github.com/users/StanTraykov/events{/privacy}", "received_events_url": "https://api.github.com/users/StanTraykov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T14:48:23Z", "updated_at": "2020-06-14T16:28:03Z", "closed_at": "2020-06-14T16:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "New to Python, so sorry if I missed something, but E127 gives me trouble on two (probably related) occasions:\r\n\r\n### continuing a statement after backslash\r\n```\r\nassert self.foobar in ['bar', 'baz', 'befoozle'], \\\r\n        'Invalid foobar: {0}'.format(self.foobar)\r\nif demo:\r\n    normal_indent = 4 * space\r\n```\r\nHere, the continuation of ``assert`` is double-indented, in line with the usual practice of distinguishing indents due to breaks from those that follow program logic (as also discussed in PEP8 with slightly different examples). Is there a good reason ``pycodestyle`` doesn't like this (E127)?\r\n\r\n### aligning operators after backslash\r\n```\r\nself.foozle_timeout = max(self.foozles_left, 1) * foozle_time \\\r\n                      + self.foozle_tolerance\r\n```\r\nI understand that PEP8 recommends using parentheses/brackets/braces when possible, eliminating the need of a backslash. But still, it seems wrong that this is turned down (it follows the same operator alignment as in the PEP8 Knuth discussion, but without parentheses). If ``pycodestyle`` really wants to insist on using parentheses instead of a backslash here, it should do so explicitly, not by issuing E127.\r\n\r\nEDIT: Maybe I don't strictly have a cause to complain in the second issue, as this type of \"visual\" indent is discussed in PEP8 only in the context of aligning with opening delimiters. But I am not certain it should be forbidden, and the first issue seems unaffected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/757", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/757/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/757/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/757", "id": 315469485, "node_id": "MDU6SXNzdWUzMTU0Njk0ODU=", "number": 757, "title": "Ignore #! for E265", "user": {"login": "bje-", "id": 4327840, "node_id": "MDQ6VXNlcjQzMjc4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4327840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bje-", "html_url": "https://github.com/bje-", "followers_url": "https://api.github.com/users/bje-/followers", "following_url": "https://api.github.com/users/bje-/following{/other_user}", "gists_url": "https://api.github.com/users/bje-/gists{/gist_id}", "starred_url": "https://api.github.com/users/bje-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bje-/subscriptions", "organizations_url": "https://api.github.com/users/bje-/orgs", "repos_url": "https://api.github.com/users/bje-/repos", "events_url": "https://api.github.com/users/bje-/events{/privacy}", "received_events_url": "https://api.github.com/users/bje-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T13:01:02Z", "updated_at": "2018-04-18T21:10:12Z", "closed_at": "2018-04-18T21:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This test case produces error E265 and shouldn't:\r\n\r\n```\r\n# -*- coding: utf-8 -*-\r\n#!/usr/bin/env python\r\n```\r\n\r\nIt seems that pycodestyle can handle `#!` on line 1, but not if there are other comments first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/756", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/756/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/756/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/756", "id": 315422216, "node_id": "MDU6SXNzdWUzMTU0MjIyMTY=", "number": 756, "title": "Latest Arch Linux pycodestyle package breaks flake8", "user": {"login": "pdijksta", "id": 22616001, "node_id": "MDQ6VXNlcjIyNjE2MDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/22616001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdijksta", "html_url": "https://github.com/pdijksta", "followers_url": "https://api.github.com/users/pdijksta/followers", "following_url": "https://api.github.com/users/pdijksta/following{/other_user}", "gists_url": "https://api.github.com/users/pdijksta/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdijksta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdijksta/subscriptions", "organizations_url": "https://api.github.com/users/pdijksta/orgs", "repos_url": "https://api.github.com/users/pdijksta/repos", "events_url": "https://api.github.com/users/pdijksta/events{/privacy}", "received_events_url": "https://api.github.com/users/pdijksta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T10:28:28Z", "updated_at": "2018-04-18T13:18:04Z", "closed_at": "2018-04-18T13:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I hope it is correct to report this here instead of the Arch Linux bugtracker or at the flake8 project.\r\n\r\nSince the upgrade from from pycodestyle 2.3.1 to 2.4.0, flake8 version 3.5.0 does not work any more.\r\nDowngrading again solved the issue for me.\r\nNow I am not sure if this is the fault of pycodestyle or flake8. I report this here since the recent upgrade caused it.\r\n\r\nThank you for your time. Please find below the error trace when I call flake8 in the python2 or python3 version.\r\n\r\n [philipp@t400 ~]$ flake8\r\n Traceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2332, in resolve\r\n    return functools.reduce(getattr, self.attrs, module)\r\n AttributeError: module 'pycodestyle' has no attribute 'break_around_binary_operator'\r\n\r\n During handling of the above exception, another exception occurred:\r\n\r\n Traceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 178, in load_plugin\r\n    self._load(verify_requirements)\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 150, in _load\r\n    self._plugin = resolve()\r\n  File \"/usr/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2334, in resolve\r\n    raise ImportError(str(exc))\r\n ImportError: module 'pycodestyle' has no attribute 'break_around_binary_operator'\r\n\r\n During handling of the above exception, another exception occurred:\r\n\r\n Traceback (most recent call last):\r\n  File \"/usr/bin/flake8\", line 11, in <module>\r\n    load_entry_point('flake8==3.5.0', 'console_scripts', 'flake8')()\r\n  File \"/usr/lib/python3.6/site-packages/flake8/main/cli.py\", line 16, in main\r\n    app.run(argv)\r\n  File \"/usr/lib/python3.6/site-packages/flake8/main/application.py\", line 396, in run\r\n    self._run(argv)\r\n  File \"/usr/lib/python3.6/site-packages/flake8/main/application.py\", line 383, in _run\r\n    self.initialize(argv)\r\n  File \"/usr/lib/python3.6/site-packages/flake8/main/application.py\", line 365, in initialize\r\n    self.find_plugins()\r\n  File \"/usr/lib/python3.6/site-packages/flake8/main/application.py\", line 191, in find_plugins\r\n    self.check_plugins.load_plugins()\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 423, in load_plugins\r\n    plugins = list(self.manager.map(load_plugin))\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 311, in map\r\n    yield func(self.plugins[name], *args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 421, in load_plugin\r\n    return plugin.load_plugin()\r\n  File \"/usr/lib/python3.6/site-packages/flake8/plugins/manager.py\", line 186, in load_plugin\r\n    raise failed_to_load\r\n flake8.exceptions.FailedToLoadPlugin: Flake8 failed to load plugin \"pycodestyle.break_around_binary_operator\" due to module  'pycodestyle' has no attribute 'break_around_binary_operator'.\r\n\r\n [philipp@t400 ~]$ flake8-python2 \r\n Traceback (most recent call last):\r\n  File \"/usr/bin/flake8-python2\", line 11, in <module>\r\n    load_entry_point('flake8==3.5.0', 'console_scripts', 'flake8')()\r\n  File \"/usr/lib/python2.7/site-packages/flake8/main/cli.py\", line 16, in main\r\n    app.run(argv)\r\n  File \"/usr/lib/python2.7/site-packages/flake8/main/application.py\", line 396, in run\r\n    self._run(argv)\r\n  File \"/usr/lib/python2.7/site-packages/flake8/main/application.py\", line 383, in _run\r\n    self.initialize(argv)\r\n  File \"/usr/lib/python2.7/site-packages/flake8/main/application.py\", line 365, in initialize\r\n    self.find_plugins()\r\n  File \"/usr/lib/python2.7/site-packages/flake8/main/application.py\", line 191, in find_plugins\r\n    self.check_plugins.load_plugins()\r\n  File \"/usr/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 423, in load_plugins\r\n    plugins = list(self.manager.map(load_plugin))\r\n  File \"/usr/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 311, in map\r\n    yield func(self.plugins[name], *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 421, in load_plugin\r\n    return plugin.load_plugin()\r\n  File \"/usr/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 186, in load_plugin\r\n    raise failed_to_load\r\n flake8.exceptions.FailedToLoadPlugin: Flake8 failed to load plugin \"pycodestyle.break_around_binary_operator\" due to 'module' object ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/755", "repository_url": "https://api.github.com/repos/PyCQA/pycodestyle", "labels_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/755/comments", "events_url": "https://api.github.com/repos/PyCQA/pycodestyle/issues/755/events", "html_url": "https://github.com/PyCQA/pycodestyle/issues/755", "id": 314601617, "node_id": "MDU6SXNzdWUzMTQ2MDE2MTc=", "number": 755, "title": "Python 2.6: false positive W605 invalid escape sequence", "user": {"login": "jwilk", "id": 141546, "node_id": "MDQ6VXNlcjE0MTU0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/141546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwilk", "html_url": "https://github.com/jwilk", "followers_url": "https://api.github.com/users/jwilk/followers", "following_url": "https://api.github.com/users/jwilk/following{/other_user}", "gists_url": "https://api.github.com/users/jwilk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwilk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwilk/subscriptions", "organizations_url": "https://api.github.com/users/jwilk/orgs", "repos_url": "https://api.github.com/users/jwilk/repos", "events_url": "https://api.github.com/users/jwilk/events{/privacy}", "received_events_url": "https://api.github.com/users/jwilk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386682762, "node_id": "MDU6TGFiZWwzODY2ODI3NjI=", "url": "https://api.github.com/repos/PyCQA/pycodestyle/labels/help%20wanted", "name": "help wanted", "color": "1d76db", "default": true, "description": null}, {"id": 5833010, "node_id": "MDU6TGFiZWw1ODMzMDEw", "url": "https://api.github.com/repos/PyCQA/pycodestyle/labels/needs%20patch", "name": "needs patch", "color": "02d7e1", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-04-16T11:02:57Z", "updated_at": "2018-06-03T23:33:03Z", "closed_at": "2018-06-03T23:33:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": "off-topic", "body": "I'm getting this false positive:\n```console\n$ echo 'br\"\\s\"' | python2.6 -m pycodestyle /dev/stdin\n/dev/stdin:1:3: W605 invalid escape sequence '\\s'\n```\nI suspect this is caused by [Python issue #15054](https://bugs.python.org/issue15054).\n\nYou may want to disable W605 for Python 2.6.", "performed_via_github_app": null, "score": 1.0}]}