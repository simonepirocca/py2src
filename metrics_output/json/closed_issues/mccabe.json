{"total_count": 32, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PyCQA/mccabe/issues/80", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/80/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/80/events", "html_url": "https://github.com/PyCQA/mccabe/issues/80", "id": 679107988, "node_id": "MDU6SXNzdWU2NzkxMDc5ODg=", "number": 80, "title": "mccable should allow ranged noqa exceptions", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-14T11:55:52Z", "updated_at": "2020-08-14T20:48:17Z", "closed_at": "2020-08-14T20:48:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Assuming you have some code that for historical reason on not may need an exemption from the desired `max-complexity` value, you should be able to specify an upper limit for the exception.\r\n\r\nWithout an upper limit, there is no way to prevent complexity from increasing because the linter will always be happy.\r\n\r\nPractical example at https://github.com/ansible/ansible-lint/blob/master/.flake8#L54-L55 which adds exception for specific file.\r\n\r\nIf working correctly something like `noqa: C901(12)` should be allowed, one that states that C901 should be ignored unless is bigger than 12 (assume that your overall project has lower limit).\r\n\r\nI am not aware of any workaround for achieving this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/79", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/79/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/79/events", "html_url": "https://github.com/PyCQA/mccabe/issues/79", "id": 679049879, "node_id": "MDU6SXNzdWU2NzkwNDk4Nzk=", "number": 79, "title": "state project maintenance status", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T10:04:15Z", "updated_at": "2020-08-14T11:58:28Z", "closed_at": "2020-08-14T11:58:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As I see that last commit was made more than 6 months ago, that there are open PRs more than two years old and that last release is was about 3 years ago, it makes me feel that the project is not maintained.\r\n\r\nIs that true or is only deeply dormant?\r\n\r\nThe fact that it is not possible to increase complexity limit using `# noqa` seems like something that drives people towards dropping it. Currently there is nothing that can prevent a noqa function from increasing its complexity so, while trying to keep complexity limited you are sometimes forced to add exceptions, once added nothing will prevent them from growing, creating a vicious cycle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/77", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/77/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/77/events", "html_url": "https://github.com/PyCQA/mccabe/issues/77", "id": 573492950, "node_id": "MDU6SXNzdWU1NzM0OTI5NTA=", "number": 77, "title": "\"U\" mode is no longer accepted from Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-01T06:17:02Z", "updated_at": "2020-08-14T22:46:45Z", "closed_at": "2020-08-14T22:46:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/PyCQA/mccabe/blob/e92e9e79799c5796f76f3da821dbb5aa56e41028/mccabe.py#L294\r\n\r\n```\r\nmccabe/mccabe.py\r\n294:    with open(module_path, \"rU\") as mod:\r\n301:        with open(filename, 'rU') as f:\r\n```\r\n\r\nCPython PR : https://github.com/python/cpython/pull/16959", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/72", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/72/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/72/events", "html_url": "https://github.com/PyCQA/mccabe/issues/72", "id": 507154564, "node_id": "MDU6SXNzdWU1MDcxNTQ1NjQ=", "number": 72, "title": "ignore guard clauses", "user": {"login": "wbolster", "id": 748944, "node_id": "MDQ6VXNlcjc0ODk0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/748944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbolster", "html_url": "https://github.com/wbolster", "followers_url": "https://api.github.com/users/wbolster/followers", "following_url": "https://api.github.com/users/wbolster/following{/other_user}", "gists_url": "https://api.github.com/users/wbolster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbolster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbolster/subscriptions", "organizations_url": "https://api.github.com/users/wbolster/orgs", "repos_url": "https://api.github.com/users/wbolster/repos", "events_url": "https://api.github.com/users/wbolster/events{/privacy}", "received_events_url": "https://api.github.com/users/wbolster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T10:29:26Z", "updated_at": "2019-10-15T16:10:33Z", "closed_at": "2019-10-15T12:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi all,\r\n\r\n_guard clauses_ are a neat way to reduce complexity (and indenting) of code, since the \u2018main flow\u2019 is the \u2018happy path\u2019, while the \u2018unhappy paths\u2019\u00a0lead to raising exceptions, returning early, or `break`/`continue` from a loop.\r\n\r\nfor example:\r\n\r\n```python\r\ndef f():\r\n    if error_condition:\r\n        raise ...\r\n    \r\n    a()\r\n    if error_condition:\r\n        raise ...\r\n\r\n    b()\r\n    if error_condition:\r\n        raise ...\r\n```\r\n\r\nsomething similar for early returns:\r\n\r\n```python\r\ndef f():\r\n    if check_something():\r\n        return\r\n\r\n    a()\r\n\r\n    if error:\r\n       return\r\n\r\n    result = ...\r\n    return result\r\n```\r\n\r\nand a loop example:\r\n\r\n```python\r\nfor item in ...:\r\n    if ...:\r\n        break  # or continue\r\n    if ...:\r\n        break  # or continue\r\n\r\n    actual_work_goes_here()\r\n```\r\n\r\nright now, code like below is an easy way to make the complexity go up (and potentially break `flake8` linting, for example):\r\n\r\n```python\r\ndef f():\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n    if False:\r\n        return\r\n```\r\n\r\nwould it be useful to make it possible to _not_ count such constructs for complexity metrics?\r\n\r\nthe generic pattern would be something along those lines:\r\n\r\n* `if` ast node has a single child node\r\n* this should be a `return` / `continue` / `break` statement\r\n\r\ni'm not sure this is even possible or desirable, so i'm just dumping this idea here since others may have useful thoughts to add.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/70", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/70/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/70/events", "html_url": "https://github.com/PyCQA/mccabe/issues/70", "id": 421771591, "node_id": "MDU6SXNzdWU0MjE3NzE1OTE=", "number": 70, "title": "'noqa: C901' does not work as documented", "user": {"login": "raxod502", "id": 6559064, "node_id": "MDQ6VXNlcjY1NTkwNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6559064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raxod502", "html_url": "https://github.com/raxod502", "followers_url": "https://api.github.com/users/raxod502/followers", "following_url": "https://api.github.com/users/raxod502/following{/other_user}", "gists_url": "https://api.github.com/users/raxod502/gists{/gist_id}", "starred_url": "https://api.github.com/users/raxod502/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raxod502/subscriptions", "organizations_url": "https://api.github.com/users/raxod502/orgs", "repos_url": "https://api.github.com/users/raxod502/repos", "events_url": "https://api.github.com/users/raxod502/events{/privacy}", "received_events_url": "https://api.github.com/users/raxod502/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-16T05:17:41Z", "updated_at": "2019-03-18T01:38:00Z", "closed_at": "2019-03-16T12:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code:\r\n\r\n```python\r\n# noqa: C901\r\ndef complex_function():\r\n    if True:\r\n        if True:\r\n            pass\r\n        else:\r\n            pass\r\n    else:\r\n        if True:\r\n            pass\r\n        else:\r\n            pass\r\n```\r\n\r\nI disabled `mccabe` for the function, so I should not be seeing any error. Instead, I get this:\r\n\r\n```\r\n$ flake8 --max-complexity 3 cyclo.py\r\ncyclo.py:2:1: C901 'complex_function' is too complex (4)\r\n```\r\n\r\nHow do I disable `mccabe` for a single function?\r\n\r\n```\r\n$ flake8 --version\r\n3.7.6 (mccabe: 0.6.1, pycodestyle: 2.5.0, pyflakes: 2.1.0) CPython 3.7.2 on Darwin\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/61", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/61/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/61/events", "html_url": "https://github.com/PyCQA/mccabe/issues/61", "id": 327370502, "node_id": "MDU6SXNzdWUzMjczNzA1MDI=", "number": 61, "title": "Python 3.7.0b4 test failures", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-29T15:22:54Z", "updated_at": "2018-06-04T10:59:21Z", "closed_at": "2018-05-31T00:42:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ tox -e py37\r\n...\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.0b4, pytest-3.6.0, py-1.5.3, pluggy-0.6.0\r\nrootdir: .../mccabe, inifile:\r\ncollected 14 items                                                             \r\n\r\ntest_mccabe.py ..F...........                                            [100%]\r\n\r\n=================================== FAILURES ===================================\r\n____________________ McCabeTestCase.test_expr_as_statement _____________________\r\n\r\nself = <test_mccabe.McCabeTestCase testMethod=test_expr_as_statement>\r\n\r\n    def test_expr_as_statement(self):\r\n        complexity = get_complexity_number(expr_as_statement, self.strio)\r\n>       self.assertEqual(complexity, 1)\r\nE       AssertionError: 2 != 1\r\n\r\ntest_mccabe.py:192: AssertionError\r\n===================== 1 failed, 13 passed in 0.06 seconds ======================\r\nERROR: InvocationError: '.../mccabe/.tox/py37/bin/python setup.py test -q'\r\n___________________________________ summary ____________________________________\r\nERROR:   py37: commands failed\r\n```\r\n\r\n * pytest 3.6.0\r\n * six 1.11.0\r\n * py 1.5.3\r\n * pluggy 0.6.0\r\n * more_itertools 4.2.0\r\n * attrs 18.1.0\r\n * atomicwrites 1.1.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/60", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/60/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/60/events", "html_url": "https://github.com/PyCQA/mccabe/issues/60", "id": 324009120, "node_id": "MDU6SXNzdWUzMjQwMDkxMjA=", "number": 60, "title": "A flag to treat inner functions as separate from outer function", "user": {"login": "Kern3l", "id": 430658, "node_id": "MDQ6VXNlcjQzMDY1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/430658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kern3l", "html_url": "https://github.com/Kern3l", "followers_url": "https://api.github.com/users/Kern3l/followers", "following_url": "https://api.github.com/users/Kern3l/following{/other_user}", "gists_url": "https://api.github.com/users/Kern3l/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kern3l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kern3l/subscriptions", "organizations_url": "https://api.github.com/users/Kern3l/orgs", "repos_url": "https://api.github.com/users/Kern3l/repos", "events_url": "https://api.github.com/users/Kern3l/events{/privacy}", "received_events_url": "https://api.github.com/users/Kern3l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-17T12:51:35Z", "updated_at": "2018-05-18T14:44:40Z", "closed_at": "2018-05-18T13:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\r\n\r\nWhen I have a function with several helper functions, I want to group them in a common context for readability. If only the main function is called from outside and all those helper functions are just readability helpers (so this main function isn't huge), this gives me:\r\n\r\n- too many tightly related functions (in total) to not have a common context\r\n- too little code to create a module (especially when there are many modules already)\r\n- no side effects (state)\r\n\r\nThen I create a function with inner functions:\r\n- first inner function: `_run()` that is the highest abstraction level inner function\r\n- then 2-4 simple inner functions\r\n- lastly in the body of the outer function: `return _run()`\r\n\r\nDetails why this is probably the best solution here: https://stackoverflow.com/questions/50253517/how-to-group-functions-without-side-effects\r\n\r\nThe problem is that currently `mccabe` sums up every inner function complexity with outer function complexity and outputs this as only one, huge result. Please consider:\r\n\r\n```python\r\ndef inner_uncalled_functions():\r\n    def _run():\r\n        return 0\r\n\r\n    def _f1():\r\n        return 0\r\n\r\n    def _f2():\r\n        return 0\r\n\r\n    return 0\r\n\r\n\r\ndef inner_uncalled_branched_functions():\r\n    def _run():\r\n        return 0\r\n\r\n    def _f1():\r\n        if True:\r\n            return 0\r\n        else:\r\n            return 1\r\n\r\n    def _f2():\r\n        if True:\r\n            return 0\r\n        else:\r\n            return 1\r\n\r\n    return 0\r\n\r\n\r\ndef inner_connected_functions():\r\n    def _run():\r\n        return _f1()\r\n\r\n    def _f1():\r\n        return _f2()\r\n\r\n    def _f2():\r\n        return 0\r\n\r\n    return _run()\r\n```\r\n\r\n```bash\r\n$ python -m mccabe mccabe_nested_test.py \r\n1:0: 'inner_uncalled_functions' 4\r\n14:0: 'inner_uncalled_branched_functions' 6\r\n33:0: 'inner_connected_functions' 4\r\n```\r\n(sorted for readability)\r\n\r\n**I'd love if there was a flag to treat inner functions as separate from outer function.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/56", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/56/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/56/events", "html_url": "https://github.com/PyCQA/mccabe/issues/56", "id": 265646571, "node_id": "MDU6SXNzdWUyNjU2NDY1NzE=", "number": 56, "title": "The mccabe complexity output in module flake8", "user": {"login": "fuqianz", "id": 8726020, "node_id": "MDQ6VXNlcjg3MjYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8726020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuqianz", "html_url": "https://github.com/fuqianz", "followers_url": "https://api.github.com/users/fuqianz/followers", "following_url": "https://api.github.com/users/fuqianz/following{/other_user}", "gists_url": "https://api.github.com/users/fuqianz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuqianz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuqianz/subscriptions", "organizations_url": "https://api.github.com/users/fuqianz/orgs", "repos_url": "https://api.github.com/users/fuqianz/repos", "events_url": "https://api.github.com/users/fuqianz/events{/privacy}", "received_events_url": "https://api.github.com/users/fuqianz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-16T04:53:07Z", "updated_at": "2018-02-06T14:47:27Z", "closed_at": "2018-02-06T14:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have found that if a function name appears more than one time in a file, the output of McCabe complexity for this function name only appear once. I think it should output all of them. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/54", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/54/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/54/events", "html_url": "https://github.com/PyCQA/mccabe/issues/54", "id": 244296127, "node_id": "MDU6SXNzdWUyNDQyOTYxMjc=", "number": 54, "title": "Installation requires pytest-runner", "user": {"login": "jwiggins", "id": 587491, "node_id": "MDQ6VXNlcjU4NzQ5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/587491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwiggins", "html_url": "https://github.com/jwiggins", "followers_url": "https://api.github.com/users/jwiggins/followers", "following_url": "https://api.github.com/users/jwiggins/following{/other_user}", "gists_url": "https://api.github.com/users/jwiggins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwiggins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwiggins/subscriptions", "organizations_url": "https://api.github.com/users/jwiggins/orgs", "repos_url": "https://api.github.com/users/jwiggins/repos", "events_url": "https://api.github.com/users/jwiggins/events{/privacy}", "received_events_url": "https://api.github.com/users/jwiggins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-20T09:17:43Z", "updated_at": "2017-07-23T00:24:16Z", "closed_at": "2017-07-23T00:24:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if `setup.py` implemented the conditional requirement suggested by pytest-runner: https://github.com/pytest-dev/pytest-runner#conditional-requirement", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/52", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/52/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/52/events", "html_url": "https://github.com/PyCQA/mccabe/issues/52", "id": 235013773, "node_id": "MDU6SXNzdWUyMzUwMTM3NzM=", "number": 52, "title": "ignoring functions via special comments", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-10T16:50:52Z", "updated_at": "2017-06-12T23:56:39Z", "closed_at": "2017-06-12T23:56:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "like `# noqa` for PyFlakes and `# pragma: no cover` for coverage it would be great if mccabe had a way of ignoring certain functions.\r\n\r\nUsage:\r\n1. functions are necessarily greater than the complexity level I want to enforce elsewhere.\r\n2. Starting to use mccabe to improve existing code bases without having to either have mccabe always fail or have to set a `max-complexity` which is way to high to have a real impact.\r\n\r\n(I kind of assumed there would be an existing issue about this but I couldn't see it, sorry if I'm being blind)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/49", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/49/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/49/events", "html_url": "https://github.com/PyCQA/mccabe/issues/49", "id": 205787000, "node_id": "MDU6SXNzdWUyMDU3ODcwMDA=", "number": 49, "title": "Missing git tag for 0.6.1 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-07T04:59:51Z", "updated_at": "2017-02-07T12:31:34Z", "closed_at": "2017-02-07T12:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/46", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/46/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/46/events", "html_url": "https://github.com/PyCQA/mccabe/issues/46", "id": 202402428, "node_id": "MDU6SXNzdWUyMDI0MDI0Mjg=", "number": 46, "title": "Trivial function with docstring reports complexity of 2", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-22T19:09:03Z", "updated_at": "2017-01-22T20:00:17Z", "closed_at": "2017-01-22T20:00:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\ndef f():\r\n    \"\"\"hi\"\"\"\r\n    x = 1\r\n\r\n\r\ndef g():\r\n    \"\"\"hi\"\"\"\r\n```\r\n\r\n```\r\n$ python3.5 mccabe.py test.py\r\n1:0: 'f' 1\r\n6:0: 'g' 2\r\n```\r\n\r\n```\r\n$ git rev-parse HEAD\r\n682145a37fee41fe7b6640244faa0c3f58e3b496\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/43", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/43/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/43/events", "html_url": "https://github.com/PyCQA/mccabe/issues/43", "id": 194413292, "node_id": "MDU6SXNzdWUxOTQ0MTMyOTI=", "number": 43, "title": "Use start of identifier as start position", "user": {"login": "Arcanemagus", "id": 427137, "node_id": "MDQ6VXNlcjQyNzEzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/427137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arcanemagus", "html_url": "https://github.com/Arcanemagus", "followers_url": "https://api.github.com/users/Arcanemagus/followers", "following_url": "https://api.github.com/users/Arcanemagus/following{/other_user}", "gists_url": "https://api.github.com/users/Arcanemagus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arcanemagus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arcanemagus/subscriptions", "organizations_url": "https://api.github.com/users/Arcanemagus/orgs", "repos_url": "https://api.github.com/users/Arcanemagus/repos", "events_url": "https://api.github.com/users/Arcanemagus/events{/privacy}", "received_events_url": "https://api.github.com/users/Arcanemagus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-12-08T18:47:13Z", "updated_at": "2017-01-23T01:48:54Z", "closed_at": "2017-01-23T01:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to have the ranges reported by this tool updated to start at the start of the offending identifier?\r\n\r\nFor example with the following code:\r\n```python\r\nfrom example import (\r\n    f401_unused as unused_module)\r\n\r\n\r\ndef c901_too_complex(x):\r\n    if x > 1:\r\n        if x > 2:\r\n            if x > 3:\r\n                if x > 4:\r\n                    if x > 5:\r\n                        if x > 6:\r\n                            if x > 7:\r\n                                if x > 8:\r\n                                    if x > 9:\r\n                                        if x > 10:\r\n                                            if x > 11:\r\n                                                pass\r\n\r\n\r\nclass Foo:\r\n    def foo_c901_too_complex(x):\r\n        if x > 1:\r\n            if x > 2:\r\n                if x > 3:\r\n                    if x > 4:\r\n                        if x > 5:\r\n                            if x > 6:\r\n                                if x > 7:\r\n                                    if x > 8:\r\n                                        if x > 9:\r\n                                            if x > 10:\r\n                                                if x > 11:\r\n                                                    pass\r\n\r\n\r\ndef indent_unaligned():\r\n    try:\r\n        print('H501 %(self)s' % locals())\r\n    except:  # <- H201\r\n        pass\r\n```\r\n\r\nThis module simply reports the start of the line as the problem location:\r\n```ShellSession\r\n> python -m mccabe --min 10 customRange.py\r\n5:1: 'c901_too_complex' 12\r\n21:1: 'Foo.foo_c901_too_complex' 12\r\n```\r\n\r\nIf the identifier start was reported instead, the positions would be `5:5` and `21:9` respectively. As it stands right now the column number is just plain wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/40", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/40/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/40/events", "html_url": "https://github.com/PyCQA/mccabe/issues/40", "id": 161863954, "node_id": "MDU6SXNzdWUxNjE4NjM5NTQ=", "number": 40, "title": "Module or package specific complexity limits", "user": {"login": "Korijn", "id": 1882046, "node_id": "MDQ6VXNlcjE4ODIwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1882046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Korijn", "html_url": "https://github.com/Korijn", "followers_url": "https://api.github.com/users/Korijn/followers", "following_url": "https://api.github.com/users/Korijn/following{/other_user}", "gists_url": "https://api.github.com/users/Korijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Korijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Korijn/subscriptions", "organizations_url": "https://api.github.com/users/Korijn/orgs", "repos_url": "https://api.github.com/users/Korijn/repos", "events_url": "https://api.github.com/users/Korijn/events{/privacy}", "received_events_url": "https://api.github.com/users/Korijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-23T08:10:16Z", "updated_at": "2016-06-23T11:30:22Z", "closed_at": "2016-06-23T11:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to set a different complexity limit for a specific package or module? We have an application that has a particularly complicated subpackage (rendering engine related) which really needs a much higher limit, than the remainder of the code.\n\nIf not, please point me in the right direction so I can submit a PR that adds the functionality!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/39", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/39/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/39/events", "html_url": "https://github.com/PyCQA/mccabe/issues/39", "id": 152197006, "node_id": "MDU6SXNzdWUxNTIxOTcwMDY=", "number": 39, "title": "\"SyntaxError: invalid character in identifier\" on files with the UTF-8-BOM", "user": {"login": "karyon", "id": 1891915, "node_id": "MDQ6VXNlcjE4OTE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1891915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karyon", "html_url": "https://github.com/karyon", "followers_url": "https://api.github.com/users/karyon/followers", "following_url": "https://api.github.com/users/karyon/following{/other_user}", "gists_url": "https://api.github.com/users/karyon/gists{/gist_id}", "starred_url": "https://api.github.com/users/karyon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karyon/subscriptions", "organizations_url": "https://api.github.com/users/karyon/orgs", "repos_url": "https://api.github.com/users/karyon/repos", "events_url": "https://api.github.com/users/karyon/events{/privacy}", "received_events_url": "https://api.github.com/users/karyon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 29165588, "node_id": "MDU6TGFiZWwyOTE2NTU4OA==", "url": "https://api.github.com/repos/PyCQA/mccabe/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-01T12:30:59Z", "updated_at": "2016-07-03T12:29:18Z", "closed_at": "2016-07-03T12:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "on a file that has the UTF-8-BOM (see this [stackoverflow post](http://stackoverflow.com/questions/2223882/whats-different-between-utf-8-and-utf-8-without-bom)), mccabe throws something like this:\n\n```\nvagrant@localhost:/vagrant$ python -m mccabe --min 5 evap/grades/templatetags/grades_templatetags.py\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/usr/local/lib/python3.4/dist-packages/mccabe.py\", line 310, in <module>\n    main(sys.argv[1:])\n  File \"/usr/local/lib/python3.4/dist-packages/mccabe.py\", line 292, in main\n    tree = compile(code, args[0], \"exec\", ast.PyCF_ONLY_AST)\n  File \"evap/grades/templatetags/grades_templatetags.py\", line 1\n    \ufefffrom django.template import Library\n        ^\nSyntaxError: invalid character in identifier\n```\n\nbefore this error, i didn't even know this BOM thing existed and i needed quite a while to figure it out. while i generally don't think such archaic stuff needs to be supported, i think mccabe could handle this more gracefully, especially since it is allowed per the standard and all other tools don't seem to be bothered by those bytes.\n\nexample file that has the BOM: https://raw.githubusercontent.com/fsr-itse/EvaP/803ac9825aac1024137220bed631e4302d580d18/evap/grades/templatetags/grades_templatetags.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/36", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/36/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/36/events", "html_url": "https://github.com/PyCQA/mccabe/issues/36", "id": 127801908, "node_id": "MDU6SXNzdWUxMjc4MDE5MDg=", "number": 36, "title": "Not working with python 3.5 \"async def ...\"", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-20T22:44:59Z", "updated_at": "2016-01-27T17:43:15Z", "closed_at": "2016-01-25T14:33:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like mccabe is ignoring python 3.5 coroutines defined like\n\n``` python\nasync def foobar(a, b, c):\n    whatever(a, b, c)\n```\n\nI tried it via flake8 version:\n\n```\n2.5.1 (pep8: 1.7.0, pyflakes: 1.0.0, mccabe: 0.3.1) CPython 3.5.0+ on Linux\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/32", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/32/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/32/events", "html_url": "https://github.com/PyCQA/mccabe/issues/32", "id": 68870252, "node_id": "MDU6SXNzdWU2ODg3MDI1Mg==", "number": 32, "title": "max-complexity overwritten with string or bool in pep8.py", "user": {"login": "PyGuy2", "id": 11974189, "node_id": "MDQ6VXNlcjExOTc0MTg5", "avatar_url": "https://avatars2.githubusercontent.com/u/11974189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyGuy2", "html_url": "https://github.com/PyGuy2", "followers_url": "https://api.github.com/users/PyGuy2/followers", "following_url": "https://api.github.com/users/PyGuy2/following{/other_user}", "gists_url": "https://api.github.com/users/PyGuy2/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyGuy2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyGuy2/subscriptions", "organizations_url": "https://api.github.com/users/PyGuy2/orgs", "repos_url": "https://api.github.com/users/PyGuy2/repos", "events_url": "https://api.github.com/users/PyGuy2/events{/privacy}", "received_events_url": "https://api.github.com/users/PyGuy2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/PyCQA/mccabe/milestones/1", "html_url": "https://github.com/PyCQA/mccabe/milestone/1", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/milestones/1/labels", "id": 1163401, "node_id": "MDk6TWlsZXN0b25lMTE2MzQwMQ==", "number": 1, "title": "0.3.1", "description": "", "creator": {"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-06-13T22:47:52Z", "updated_at": "2015-06-14T18:58:17Z", "due_on": null, "closed_at": "2015-06-14T18:58:17Z"}, "comments": 6, "created_at": "2015-04-16T08:16:36Z", "updated_at": "2015-06-15T14:44:37Z", "closed_at": "2015-06-13T23:12:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using flake8, mccabe and setuptools leads to setting wrong max_complexity option.\n\nWhen you set setup.cfg to\n\n``` config\n[flake8]\nmax-complexity = 2\n```\n\nthe command \n\n``` shell\n./setup.py flake8 \n```\n\nwill not produce correct output, while calling\n\n``` shell\nflake8\n```\n\ndoes.\n\nSetting it to max-complexity=1 works, but the type of the option is set to boolean. When set to 2 it's a string instead of the requested int thus leading to always False comparisons at the mccabe code.\n\nThe option is parsed correctly at pep8 but is overwritten at pep8.py in class StyleGuide:1629:\n\n``` python\n       if options_dict:\n            options.__dict__.update(options_dict)\n```\n\nI don't know if the problem lies in the mccabe code, pep8 or flake8, so reporting it here.\n\nVersions used:\n\nPython 2.7.6\n\nargparse (1.2.1)\nautopep8 (0.9.1)\ncoverage (3.7.1)\nflake8 (2.4.0)\nmatplotlib (1.3.1)\nmccabe (0.3)\nnose (1.3.1)\nnumpy (1.8.2)\npandas (0.13.1)\npep8 (1.5.7)\npexpect (3.1)\nPillow (2.3.0)\npip (1.5.4)\nply (3.4)\nPmw (1.3.2)\npyflakes (0.8.1)\nPygments (1.6)\npyinotify (0.9.4)\npyparsing (2.0.1)\npython-dateutil (1.5)\npytz (2012c)\nPyX (0.12.1)\nrequests (2.2.1)\nScientificPython (2.9.4)\nscikit-learn (0.14.1)\nscipy (0.13.3)\nSciTools (0.9.0)\nsetuptools (2.2)\nShapely (1.3.0)\nsimplegeneric (0.8.1)\nsimplejson (3.3.1)\nsix (1.5.2)\nSQLAlchemy (0.8.4)\nssh-import-id (3.21)\nstatsmodels (0.5.0)\nsympy (0.7.4.1)\ntables (3.1.1)\nTwisted-Core (13.2.0)\nUFL (1.5.0)\nurllib3 (1.7.1)\nvirtualenv (1.11.4)\nVTK (5.8.0)\nWerkzeug (0.9.4)\nwheel (0.24.0)\nwsgiref (0.1.2)\nxlrd (0.9.2)\nxlwt (0.7.5)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/31", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/31/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/31/events", "html_url": "https://github.com/PyCQA/mccabe/issues/31", "id": 58671591, "node_id": "MDU6SXNzdWU1ODY3MTU5MQ==", "number": 31, "title": "Pypi release is missing test_mccabe.py", "user": {"login": "tamentis", "id": 471897, "node_id": "MDQ6VXNlcjQ3MTg5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/471897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamentis", "html_url": "https://github.com/tamentis", "followers_url": "https://api.github.com/users/tamentis/followers", "following_url": "https://api.github.com/users/tamentis/following{/other_user}", "gists_url": "https://api.github.com/users/tamentis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamentis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamentis/subscriptions", "organizations_url": "https://api.github.com/users/tamentis/orgs", "repos_url": "https://api.github.com/users/tamentis/repos", "events_url": "https://api.github.com/users/tamentis/events{/privacy}", "received_events_url": "https://api.github.com/users/tamentis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/PyCQA/mccabe/milestones/1", "html_url": "https://github.com/PyCQA/mccabe/milestone/1", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/milestones/1/labels", "id": 1163401, "node_id": "MDk6TWlsZXN0b25lMTE2MzQwMQ==", "number": 1, "title": "0.3.1", "description": "", "creator": {"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-06-13T22:47:52Z", "updated_at": "2015-06-14T18:58:17Z", "due_on": null, "closed_at": "2015-06-14T18:58:17Z"}, "comments": 6, "created_at": "2015-02-24T00:04:16Z", "updated_at": "2015-06-14T18:54:53Z", "closed_at": "2015-06-14T18:54:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was updating a port of mccabe and noticed that `test_mccabe.py` was missing from the Pypi release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/30", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/30/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/30/events", "html_url": "https://github.com/PyCQA/mccabe/issues/30", "id": 52197672, "node_id": "MDU6SXNzdWU1MjE5NzY3Mg==", "number": 30, "title": "Move to PyCQA organization", "user": {"login": "sigmavirus24", "id": 240830, "node_id": "MDQ6VXNlcjI0MDgzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/240830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmavirus24", "html_url": "https://github.com/sigmavirus24", "followers_url": "https://api.github.com/users/sigmavirus24/followers", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-17T03:31:10Z", "updated_at": "2015-12-16T15:12:28Z", "closed_at": "2015-12-16T15:12:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The flint project is no longer maintained. GitHub will redirect anyone from flintwork/mccabe to PyCQA/mccabe. @florentx has an invitation pending to PyCQA and it will make sense to have flake8 and mccabe under the same organization. I can do this arbitrarily but I won't. I really want everyone's input. And if there isn't unanimous agreement, then I won't do it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/29", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/29/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/29/events", "html_url": "https://github.com/PyCQA/mccabe/issues/29", "id": 44334948, "node_id": "MDU6SXNzdWU0NDMzNDk0OA==", "number": 29, "title": "cut 0.2.2", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "florentx", "id": 142113, "node_id": "MDQ6VXNlcjE0MjExMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/142113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florentx", "html_url": "https://github.com/florentx", "followers_url": "https://api.github.com/users/florentx/followers", "following_url": "https://api.github.com/users/florentx/following{/other_user}", "gists_url": "https://api.github.com/users/florentx/gists{/gist_id}", "starred_url": "https://api.github.com/users/florentx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florentx/subscriptions", "organizations_url": "https://api.github.com/users/florentx/orgs", "repos_url": "https://api.github.com/users/florentx/repos", "events_url": "https://api.github.com/users/florentx/events{/privacy}", "received_events_url": "https://api.github.com/users/florentx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "florentx", "id": 142113, "node_id": "MDQ6VXNlcjE0MjExMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/142113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florentx", "html_url": "https://github.com/florentx", "followers_url": "https://api.github.com/users/florentx/followers", "following_url": "https://api.github.com/users/florentx/following{/other_user}", "gists_url": "https://api.github.com/users/florentx/gists{/gist_id}", "starred_url": "https://api.github.com/users/florentx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florentx/subscriptions", "organizations_url": "https://api.github.com/users/florentx/orgs", "repos_url": "https://api.github.com/users/florentx/repos", "events_url": "https://api.github.com/users/florentx/events{/privacy}", "received_events_url": "https://api.github.com/users/florentx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-09-29T18:36:08Z", "updated_at": "2014-12-17T00:14:03Z", "closed_at": "2014-12-17T00:14:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm still seeing the off-by-one-twice issue with flake8 complexity today.\n\nCan we get a release to make it right?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/25", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/25/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/25/events", "html_url": "https://github.com/PyCQA/mccabe/issues/25", "id": 39894130, "node_id": "MDU6SXNzdWUzOTg5NDEzMA==", "number": 25, "title": "`else` blocks of try statements not considered", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-09T21:07:22Z", "updated_at": "2014-08-14T01:22:49Z", "closed_at": "2014-08-14T01:22:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any complexity in an else block of a try statement is not taken into consideration.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/24", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/24/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/24/events", "html_url": "https://github.com/PyCQA/mccabe/issues/24", "id": 39894119, "node_id": "MDU6SXNzdWUzOTg5NDExOQ==", "number": 24, "title": "global try statements are not counted", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-09T21:06:42Z", "updated_at": "2014-08-14T01:01:29Z", "closed_at": "2014-08-14T01:01:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any complexity added by a module-level `try` block is not currently measured by mccabe.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/23", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/23/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/23/events", "html_url": "https://github.com/PyCQA/mccabe/issues/23", "id": 39893994, "node_id": "MDU6SXNzdWUzOTg5Mzk5NA==", "number": 23, "title": "cut 0.3.0", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "florentx", "id": 142113, "node_id": "MDQ6VXNlcjE0MjExMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/142113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florentx", "html_url": "https://github.com/florentx", "followers_url": "https://api.github.com/users/florentx/followers", "following_url": "https://api.github.com/users/florentx/following{/other_user}", "gists_url": "https://api.github.com/users/florentx/gists{/gist_id}", "starred_url": "https://api.github.com/users/florentx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florentx/subscriptions", "organizations_url": "https://api.github.com/users/florentx/orgs", "repos_url": "https://api.github.com/users/florentx/repos", "events_url": "https://api.github.com/users/florentx/events{/privacy}", "received_events_url": "https://api.github.com/users/florentx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "florentx", "id": 142113, "node_id": "MDQ6VXNlcjE0MjExMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/142113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florentx", "html_url": "https://github.com/florentx", "followers_url": "https://api.github.com/users/florentx/followers", "following_url": "https://api.github.com/users/florentx/following{/other_user}", "gists_url": "https://api.github.com/users/florentx/gists{/gist_id}", "starred_url": "https://api.github.com/users/florentx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florentx/subscriptions", "organizations_url": "https://api.github.com/users/florentx/orgs", "repos_url": "https://api.github.com/users/florentx/repos", "events_url": "https://api.github.com/users/florentx/events{/privacy}", "received_events_url": "https://api.github.com/users/florentx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2014-08-09T20:59:43Z", "updated_at": "2014-12-18T16:41:10Z", "closed_at": "2014-12-17T01:24:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There have been some major changes/improvements since 0.2.\nPlease cut a fresh release.\n\n:sparkling_heart:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/21", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/21/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/21/events", "html_url": "https://github.com/PyCQA/mccabe/issues/21", "id": 39770968, "node_id": "MDU6SXNzdWUzOTc3MDk2OA==", "number": 21, "title": "global if after global loop crashes", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-07T21:35:47Z", "updated_at": "2014-08-07T21:45:23Z", "closed_at": "2014-08-07T21:37:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Repro script:\n\n```\nwhile []: pass\nif False: pass\n```\n\nDemo:\n\n```\n$ python -m mccabe demo.py\nTraceback (most recent call last):\n  File \"/Users/buck/prefices/brew/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/Users/buck/prefices/brew/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 306, in <module>\n    main(sys.argv[1:])\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 291, in main\n    visitor.preorder(tree, visitor)\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 45, in preorder\n    self.dispatch(tree, *args)  # XXX *args make sense?\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 39, in dispatch\n    return meth(node, *args)\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 29, in default\n    self.dispatch(child, *args)\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 39, in dispatch\n    return meth(node, *args)\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 181, in visitIf\n    pathnode = self.appendPathNode(name)\n  File \"/Users/buck/trees/mine/mccabe/mccabe.py\", line 146, in appendPathNode\n    self.graph.connect(self.tail, pathnode)\nAttributeError: 'NoneType' object has no attribute 'connect'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/18", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/18/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/18/events", "html_url": "https://github.com/PyCQA/mccabe/issues/18", "id": 33631391, "node_id": "MDU6SXNzdWUzMzYzMTM5MQ==", "number": 18, "title": "def inside def", "user": {"login": "evvers", "id": 4542588, "node_id": "MDQ6VXNlcjQ1NDI1ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4542588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evvers", "html_url": "https://github.com/evvers", "followers_url": "https://api.github.com/users/evvers/followers", "following_url": "https://api.github.com/users/evvers/following{/other_user}", "gists_url": "https://api.github.com/users/evvers/gists{/gist_id}", "starred_url": "https://api.github.com/users/evvers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evvers/subscriptions", "organizations_url": "https://api.github.com/users/evvers/orgs", "repos_url": "https://api.github.com/users/evvers/repos", "events_url": "https://api.github.com/users/evvers/events{/privacy}", "received_events_url": "https://api.github.com/users/evvers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-05-15T22:33:03Z", "updated_at": "2015-11-12T16:31:03Z", "closed_at": "2014-05-17T01:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nWhy def inside def increase complexity of outer function?\ndef inside def looks like method inside class. Maybe, complexity of inner function should be independent from outer function?\n\nFor example, complexity of [test_nested_functions_snippet](https://github.com/flintwork/mccabe/blob/master/test_mccabe.py#L113) equals to 1 instead of 3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/11", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/11/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/11/events", "html_url": "https://github.com/PyCQA/mccabe/issues/11", "id": 32158176, "node_id": "MDU6SXNzdWUzMjE1ODE3Ng==", "number": 11, "title": "Cyclomatic complexity of code with path that will never be executed", "user": {"login": "robrechtdr", "id": 2156349, "node_id": "MDQ6VXNlcjIxNTYzNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2156349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robrechtdr", "html_url": "https://github.com/robrechtdr", "followers_url": "https://api.github.com/users/robrechtdr/followers", "following_url": "https://api.github.com/users/robrechtdr/following{/other_user}", "gists_url": "https://api.github.com/users/robrechtdr/gists{/gist_id}", "starred_url": "https://api.github.com/users/robrechtdr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robrechtdr/subscriptions", "organizations_url": "https://api.github.com/users/robrechtdr/orgs", "repos_url": "https://api.github.com/users/robrechtdr/repos", "events_url": "https://api.github.com/users/robrechtdr/events{/privacy}", "received_events_url": "https://api.github.com/users/robrechtdr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-04-24T15:22:31Z", "updated_at": "2014-04-28T23:33:05Z", "closed_at": "2014-04-27T14:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is cyclomatic complexity supposed to count paths that will never be executed?\n\nObserve the following code:\n\n```\ndef f(n):\n    if n > 4:\n        return \"bigger than four\"\n    elif n > 5:\n        return \"is never executed\"\n    else:\n        return \"smaller than or equal to four\"\n```\n\nThe program outputs a [cyclomatic complexity of 3](https://github.com/RobrechtDR/mccabe/blob/master/test_mccabe.py#L104-L107) even though the `elif` path will never be executed.\n\nRegardless of if [cyclomatic complexity as described in this article](http://en.wikipedia.org/wiki/Cyclomatic_complexity) does (type I) or does not (type II) count code paths that will never be executed I think it is useful to make this distinction more clear than it is now.\n\nDepending on what cyclomatic complexity is supposed to represent you could name their specific types. Some suggestions:\n\nType I cc : 'unminimized cc' or 'unreduced cc' (this is what the mccabe program currently evaluates for)\nType II cc : 'minimized cc' or 'reduced cc'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/10", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/10/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/10/events", "html_url": "https://github.com/PyCQA/mccabe/issues/10", "id": 32152743, "node_id": "MDU6SXNzdWUzMjE1Mjc0Mw==", "number": 10, "title": "Why does adding a for loop increase cyclomatic complexity?", "user": {"login": "robrechtdr", "id": 2156349, "node_id": "MDQ6VXNlcjIxNTYzNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2156349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robrechtdr", "html_url": "https://github.com/robrechtdr", "followers_url": "https://api.github.com/users/robrechtdr/followers", "following_url": "https://api.github.com/users/robrechtdr/following{/other_user}", "gists_url": "https://api.github.com/users/robrechtdr/gists{/gist_id}", "starred_url": "https://api.github.com/users/robrechtdr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robrechtdr/subscriptions", "organizations_url": "https://api.github.com/users/robrechtdr/orgs", "repos_url": "https://api.github.com/users/robrechtdr/repos", "events_url": "https://api.github.com/users/robrechtdr/events{/privacy}", "received_events_url": "https://api.github.com/users/robrechtdr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-04-24T14:23:46Z", "updated_at": "2014-08-09T20:55:03Z", "closed_at": "2014-08-09T20:54:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [this article](http://en.wikipedia.org/wiki/Cyclomatic_complexity) cyclomatic complexity directly measures the number of linearly independent paths through a program's source code.\n\nNow observe the following code:\n\n```\ndef f():\n    for i in range(10):\n        print i\n```\n\nThis code [outputs a complexity of 2](https://github.com/RobrechtDR/mccabe/blob/master/test_mccabe.py#L109-L112) with the program.\n\nHowever, there is only one possible path of execution here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/8", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/8/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/8/events", "html_url": "https://github.com/PyCQA/mccabe/issues/8", "id": 31827170, "node_id": "MDU6SXNzdWUzMTgyNzE3MA==", "number": 8, "title": "all tests are broken", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-18T21:48:48Z", "updated_at": "2014-04-18T23:21:41Z", "closed_at": "2014-04-18T21:49:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The one existing test for mccabe is broken.\n\nPR #6 fixes this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/5", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/5/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/5/events", "html_url": "https://github.com/PyCQA/mccabe/issues/5", "id": 30738031, "node_id": "MDU6SXNzdWUzMDczODAzMQ==", "number": 5, "title": "off by two", "user": {"login": "bukzor", "id": 640328, "node_id": "MDQ6VXNlcjY0MDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/640328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukzor", "html_url": "https://github.com/bukzor", "followers_url": "https://api.github.com/users/bukzor/followers", "following_url": "https://api.github.com/users/bukzor/following{/other_user}", "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions", "organizations_url": "https://api.github.com/users/bukzor/orgs", "repos_url": "https://api.github.com/users/bukzor/repos", "events_url": "https://api.github.com/users/bukzor/events{/privacy}", "received_events_url": "https://api.github.com/users/bukzor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-03T00:34:00Z", "updated_at": "2014-05-08T14:30:31Z", "closed_at": "2014-04-18T21:38:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The minimum complexity on the mccabe scale is one.\nThe simplest function should pass flake8 when max-complexity is 1.\n\nThere's two reasons this doesn't work:\n- \"max complexity\" in fact specifies the minimum complexity which is _not_ acceptable. Please note the difference in adjectives between the field's name and its description.\n- The simplest function has a measured complexity of two. Using a definition from Wikipedia ( `M = \u03c0 \u2212 s + 2` where \u03c0 is the number of decision points in the program, and s is the number of exit points), I count zero decision points and one exit point, resulting in M==1.\n\n``` bash\n$ cat trivial.py \ndef trivial():\n    return None\n\n$ flake8 --max-complexity 1 trivial.py \ntrivial.py:1:1: C901 'trivial' is too complex (2)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/4", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/4/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/4/events", "html_url": "https://github.com/PyCQA/mccabe/issues/4", "id": 25564662, "node_id": "MDU6SXNzdWUyNTU2NDY2Mg==", "number": 4, "title": "naming proposal ...", "user": {"login": "petrrr", "id": 3065632, "node_id": "MDQ6VXNlcjMwNjU2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3065632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrrr", "html_url": "https://github.com/petrrr", "followers_url": "https://api.github.com/users/petrrr/followers", "following_url": "https://api.github.com/users/petrrr/following{/other_user}", "gists_url": "https://api.github.com/users/petrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrrr/subscriptions", "organizations_url": "https://api.github.com/users/petrrr/orgs", "repos_url": "https://api.github.com/users/petrrr/repos", "events_url": "https://api.github.com/users/petrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/petrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-14T10:26:11Z", "updated_at": "2014-04-18T23:20:52Z", "closed_at": "2014-04-18T23:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am just about to package this peace of software for Macports and was inclined to name the port `py-flake8-mccabe` instead of just `py-mccabe`, account for the fact that this is a related plug-in. \n\nBut I think this naming issue is better addressed upstream.\n\nAny thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/3", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/3/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/3/events", "html_url": "https://github.com/PyCQA/mccabe/issues/3", "id": 25563785, "node_id": "MDU6SXNzdWUyNTU2Mzc4NQ==", "number": 3, "title": "clearer naming?", "user": {"login": "petrrr", "id": 3065632, "node_id": "MDQ6VXNlcjMwNjU2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3065632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrrr", "html_url": "https://github.com/petrrr", "followers_url": "https://api.github.com/users/petrrr/followers", "following_url": "https://api.github.com/users/petrrr/following{/other_user}", "gists_url": "https://api.github.com/users/petrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrrr/subscriptions", "organizations_url": "https://api.github.com/users/petrrr/orgs", "repos_url": "https://api.github.com/users/petrrr/repos", "events_url": "https://api.github.com/users/petrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/petrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-14T10:09:19Z", "updated_at": "2014-01-14T10:27:03Z", "closed_at": "2014-01-14T10:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/mccabe/issues/2", "repository_url": "https://api.github.com/repos/PyCQA/mccabe", "labels_url": "https://api.github.com/repos/PyCQA/mccabe/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/mccabe/issues/2/comments", "events_url": "https://api.github.com/repos/PyCQA/mccabe/issues/2/events", "html_url": "https://github.com/PyCQA/mccabe/issues/2", "id": 25512735, "node_id": "MDU6SXNzdWUyNTUxMjczNQ==", "number": 2, "title": "PyPi tarball misses License file", "user": {"login": "petrrr", "id": 3065632, "node_id": "MDQ6VXNlcjMwNjU2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3065632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrrr", "html_url": "https://github.com/petrrr", "followers_url": "https://api.github.com/users/petrrr/followers", "following_url": "https://api.github.com/users/petrrr/following{/other_user}", "gists_url": "https://api.github.com/users/petrrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrrr/subscriptions", "organizations_url": "https://api.github.com/users/petrrr/orgs", "repos_url": "https://api.github.com/users/petrrr/repos", "events_url": "https://api.github.com/users/petrrr/events{/privacy}", "received_events_url": "https://api.github.com/users/petrrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-13T17:20:33Z", "updated_at": "2014-04-18T21:38:16Z", "closed_at": "2014-04-18T21:38:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are two minor issues with this:\n(1) Having different tarballs (different content or different checksum) with the same name around is a bit problematic for packaging the software (here MacPorts);\n(2) I think, having the License file around is required by a MIT like license;\n", "performed_via_github_app": null, "score": 1.0}]}