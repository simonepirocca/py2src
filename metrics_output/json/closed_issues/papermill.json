{"total_count": 180, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nteract/papermill/issues/526", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/526/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/526/events", "html_url": "https://github.com/nteract/papermill/issues/526", "id": 678784253, "node_id": "MDU6SXNzdWU2Nzg3ODQyNTM=", "number": 526, "title": "jupyter_client dependency version overridden in requirements.txt", "user": {"login": "ajbozarth", "id": 13952758, "node_id": "MDQ6VXNlcjEzOTUyNzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/13952758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajbozarth", "html_url": "https://github.com/ajbozarth", "followers_url": "https://api.github.com/users/ajbozarth/followers", "following_url": "https://api.github.com/users/ajbozarth/following{/other_user}", "gists_url": "https://api.github.com/users/ajbozarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajbozarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajbozarth/subscriptions", "organizations_url": "https://api.github.com/users/ajbozarth/orgs", "repos_url": "https://api.github.com/users/ajbozarth/repos", "events_url": "https://api.github.com/users/ajbozarth/events{/privacy}", "received_events_url": "https://api.github.com/users/ajbozarth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T23:06:32Z", "updated_at": "2020-08-17T18:56:19Z", "closed_at": "2020-08-17T15:22:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As previously raised in #486 #492 #500 #522 and #523 if papermill is used in an environment with an older version of `jupyter_client` it will throw an error. This is caused by the dependency `nbclient>=0.2.0` that depends on `jupyter_client>=6.1.0`.\r\n\r\nThis dependency is overridden by papermill by having `jupyter_client` in `requirements.txt` without a version, meaning any version (even an older one) is accepted if already installed. To make sure the expected version of `jupyter_client` is installed we should set `jupyter_client>=6.1.0` to match `nbclient`.\r\n\r\nThough as said in the previous issues this is easy to address for users by having then just upgrade, for downstream projects that rely on papermill it would require them to set a version for `jupyter_client` in their own requirements even though they don't directly use it, which is generally bad practice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/523", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/523/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/523/events", "html_url": "https://github.com/nteract/papermill/issues/523", "id": 663969260, "node_id": "MDU6SXNzdWU2NjM5NjkyNjA=", "number": 523, "title": "AttributeError: 'AsyncKernelManager' object has no attribute 'cleanup_resources'", "user": {"login": "ak-7", "id": 7797993, "node_id": "MDQ6VXNlcjc3OTc5OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7797993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ak-7", "html_url": "https://github.com/ak-7", "followers_url": "https://api.github.com/users/ak-7/followers", "following_url": "https://api.github.com/users/ak-7/following{/other_user}", "gists_url": "https://api.github.com/users/ak-7/gists{/gist_id}", "starred_url": "https://api.github.com/users/ak-7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ak-7/subscriptions", "organizations_url": "https://api.github.com/users/ak-7/orgs", "repos_url": "https://api.github.com/users/ak-7/repos", "events_url": "https://api.github.com/users/ak-7/events{/privacy}", "received_events_url": "https://api.github.com/users/ak-7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-22T18:40:17Z", "updated_at": "2020-08-17T18:57:15Z", "closed_at": "2020-07-22T23:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into the following error. \r\n\r\n`File \"carry_only.py\", line 35, in <module>\r\n    schedule.run_pending()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/schedule/__init__.py\", line 563, in run_pending\r\n    default_scheduler.run_pending()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/schedule/__init__.py\", line 94, in run_pending\r\n    self._run_job(job)\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/schedule/__init__.py\", line 147, in _run_job\r\n    ret = job.run()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/schedule/__init__.py\", line 466, in run\r\n    ret = self.job_func()\r\n  File \"carry_only.py\", line 24, in run_main\r\n    'MUVI carry_out.ipynb'\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/papermill/execute.py\", line 104, in execute_notebook\r\n    **engine_kwargs\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/papermill/engines.py\", line 49, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/papermill/engines.py\", line 343, in execute_notebook\r\n    cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/papermill/engines.py\", line 402, in execute_managed_notebook\r\n    return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/papermill/clientwrap.py\", line 41, in execute\r\n    self.set_widgets_metadata()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/contextlib.py\", line 88, in __exit__\r\n    next(self.gen)\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/nbclient/client.py\", line 443, in setup_kernel\r\n    self._cleanup_kernel()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/nbclient/util.py\", line 74, in wrapped\r\n    return just_run(coro(*args, **kwargs))\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/nbclient/util.py\", line 53, in just_run\r\n    return loop.run_until_complete(coro)\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/asyncio/base_events.py\", line 488, in run_until_complete\r\n    return future.result()\r\n  File \"/tmp/jupyterlab-akanksha_bindal/jupyterlab-runtime/lib/python3.6/site-packages/nbclient/client.py\", line 357, in _async_cleanup_kernel\r\n    await ensure_async(self.km.cleanup_resources())`\r\nAttributeError: 'AsyncKernelManager' object has no attribute 'cleanup_resources'\r\nThis is my code\r\n```\r\nimport papermill as pm\r\nimport schedule\r\nimport time\r\nimport sys\r\n# from send_email import * // this is to assume you write a python send_mail function\r\n\r\n# here e2e.ipynb is my input notebook where i have the parameters tag\r\n# e2e_out.ipynb is the output notebook where intermediate results can be saved and viewed later\r\n# you can also add additionals parameters by adding \r\n# 'parameters = dict(alpha=0.6, ratio=0.1)'\r\n# after the output notebook line\r\n\r\ndef run_main():\r\n    pm.execute_notebook(\r\n       'MUVI carry.ipynb',\r\n       'MUVI carry_out.ipynb'\r\n    )\r\n#     send_email()\r\n\r\n# this allows you to schedule job every day and take an argument of execution time\r\n# to schedule jobs to run every week, or any other frequency, use \r\n# https://schedule.readthedocs.io/en/stable/ for examples\r\n\r\nschedule.every().day.at(sys.argv[1]).do(run_main)\r\n\r\nwhile True:\r\n    schedule.run_pending()\r\n    time.sleep(1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/522", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/522/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/522/events", "html_url": "https://github.com/nteract/papermill/issues/522", "id": 655247215, "node_id": "MDU6SXNzdWU2NTUyNDcyMTU=", "number": 522, "title": "Papermill broken with nbclient 0.4.1", "user": {"login": "johntmyers", "id": 9696606, "node_id": "MDQ6VXNlcjk2OTY2MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9696606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johntmyers", "html_url": "https://github.com/johntmyers", "followers_url": "https://api.github.com/users/johntmyers/followers", "following_url": "https://api.github.com/users/johntmyers/following{/other_user}", "gists_url": "https://api.github.com/users/johntmyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/johntmyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johntmyers/subscriptions", "organizations_url": "https://api.github.com/users/johntmyers/orgs", "repos_url": "https://api.github.com/users/johntmyers/repos", "events_url": "https://api.github.com/users/johntmyers/events{/privacy}", "received_events_url": "https://api.github.com/users/johntmyers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-11T17:25:44Z", "updated_at": "2020-07-11T19:29:12Z", "closed_at": "2020-07-11T17:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the new nbclient came out < 24 hours ago, Papermill is broken:\r\n\r\n```self = <papermill.clientwrap.PapermillNotebookClient object at 0x11c80b9d0>\r\n\r\n    async def _async_cleanup_kernel(self) -> None:\r\n        assert self.km is not None\r\n        now = self.shutdown_kernel == \"immediate\"\r\n        try:\r\n            # Queue the manager to kill the process, and recover gracefully if it's already dead.\r\n            if await ensure_async(self.km.is_alive()):\r\n                await ensure_async(self.km.shutdown_kernel(now=now))\r\n        except RuntimeError as e:\r\n            # The error isn't specialized, so we have to check the message\r\n            if 'No kernel is running!' not in str(e):\r\n                raise\r\n        finally:\r\n            # Remove any state left over even if we failed to stop the kernel\r\n>           await ensure_async(self.km.cleanup_resources())\r\nE           AttributeError: 'AsyncKernelManager' object has no attribute 'cleanup_resources'\r\n\r\nvenv/lib/python3.7/site-packages/nbclient/client.py:357: AttributeError\r\n```\r\n\r\nSuggest pinning explicit versions for `nbclient`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/520", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/520/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/520/events", "html_url": "https://github.com/nteract/papermill/issues/520", "id": 651802544, "node_id": "MDU6SXNzdWU2NTE4MDI1NDQ=", "number": 520, "title": "Custom comment in injected cell", "user": {"login": "edublancas", "id": 989250, "node_id": "MDQ6VXNlcjk4OTI1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/989250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edublancas", "html_url": "https://github.com/edublancas", "followers_url": "https://api.github.com/users/edublancas/followers", "following_url": "https://api.github.com/users/edublancas/following{/other_user}", "gists_url": "https://api.github.com/users/edublancas/gists{/gist_id}", "starred_url": "https://api.github.com/users/edublancas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edublancas/subscriptions", "organizations_url": "https://api.github.com/users/edublancas/orgs", "repos_url": "https://api.github.com/users/edublancas/repos", "events_url": "https://api.github.com/users/edublancas/events{/privacy}", "received_events_url": "https://api.github.com/users/edublancas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T20:35:12Z", "updated_at": "2020-07-06T23:25:13Z", "closed_at": "2020-07-06T23:25:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the injected cell adds \"Parameters\" as a comment in the first line. I'm working on a library that uses papermill and would like to customize this behavior to give more information to notebook readers.\r\n\r\nSupporting this requires adding a new parameter to `Translator.codify`. https://github.com/nteract/papermill/blob/0532d499e13e93d8990211be33e9593f1bffbe6c/papermill/translators.py#L111\r\n\r\nI can put some time to work on this if the proposed change is accepted.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/516", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/516/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/516/events", "html_url": "https://github.com/nteract/papermill/issues/516", "id": 644305944, "node_id": "MDU6SXNzdWU2NDQzMDU5NDQ=", "number": 516, "title": "ValueError: Invalid file object: <zmq.asyncio.Socket object at 0x7f4bb838dfa8>", "user": {"login": "jonatasfreitasv", "id": 8763192, "node_id": "MDQ6VXNlcjg3NjMxOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8763192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonatasfreitasv", "html_url": "https://github.com/jonatasfreitasv", "followers_url": "https://api.github.com/users/jonatasfreitasv/followers", "following_url": "https://api.github.com/users/jonatasfreitasv/following{/other_user}", "gists_url": "https://api.github.com/users/jonatasfreitasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonatasfreitasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonatasfreitasv/subscriptions", "organizations_url": "https://api.github.com/users/jonatasfreitasv/orgs", "repos_url": "https://api.github.com/users/jonatasfreitasv/repos", "events_url": "https://api.github.com/users/jonatasfreitasv/events{/privacy}", "received_events_url": "https://api.github.com/users/jonatasfreitasv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T04:20:19Z", "updated_at": "2020-08-06T18:08:33Z", "closed_at": "2020-08-06T18:08:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Try with a simple single cell notebook for \"Hello wolrd\"...\r\n\r\n**The fail message is:**\r\n`ValueError: Invalid file object: <zmq.asyncio.Socket object at 0x7f4bb838dfa8>`\r\n\r\n**Use this code:**\r\n```\r\npm.execute_notebook(\r\n    './tst.ipynb',\r\n    './4-simulation-out.ipynb',\r\n    parameters = dict(simulation=True, simulation_forecast_week=4),\r\n    kernel_name='python3'    \r\n)\r\n```\r\n\r\nI`m use a Anaconda Enterprise (with conda enviroment) with a Jupyter Lab.\r\n\r\nStack trace (when a try to run in terminal with env activated):\r\n```\r\nGenerating grammar tables from /opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/blib2to3/Grammar.txt\r\nWriting grammar tables to /opt/continuum/.cache/black/19.10b0/Grammar3.6.10.final.0.pickleWriting failed: [Errno 2] No such file or directory: '/opt/continuum/.cache/black/19.10b0/tmpgoh__b0i'Generating grammar tables from /opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/blib2to3/PatternGrammar.txt\r\nWriting grammar tables to /opt/continuum/.cache/black/19.10b0/PatternGrammar3.6.10.final.0.pickleWriting failed: [Errno 2] No such file or directory: '/opt/continuum/.cache/black/19.10b0/tmp2pjndfgf'\r\nInput notebook does not contain a cell with tag 'parameters'Executing:   0%|                                                                                                                          | 0/77 [00:00<?, ?cell/s]Traceback (most recent call last):  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/runpy.py\", line 85, in _run_code    exec(code, run_globals)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/traitlets/config/application.py\", line 664, in launch_instance\r\n    app.start()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/tornado/platform/asyncio.py\", line 149, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/asyncio/base_events.py\", line 429, in run_forever\r\n    raise RuntimeError('This event loop is already running')RuntimeError: This event loop is already running\r\nERROR:tornado.general:Uncaught exception in ZMQStream callbackTraceback (most recent call last):\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 438, in _run_callback    callback(*args, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher    return self.dispatch_shell(stream, msg)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 233, in dispatch_shell    self.pre_handler_hook()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 248, in pre_handler_hook\r\n    self.saved_sigint_handler = signal(SIGINT, default_int_handler)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/signal.py\", line 47, in signal\r\n    handler = _signal.signal(_enum_to_int(signalnum), _enum_to_int(handler))\r\nValueError: signal only works in main thread\r\nERROR:tornado.general:Uncaught exception in zmqstream callback\r\nTraceback (most recent call last):\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 456, in _handle_events\r\n    self._handle_recv()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 486, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py\", line 438, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 233, in dispatch_shell\r\n    self.pre_handler_hook()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/ipykernel/kernelbase.py\", line 248, in pre_handler_hook\r\n    self.saved_sigint_handler = signal(SIGINT, default_int_handler)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/signal.py\", line 47, in signal\r\n    handler = _signal.signal(_enum_to_int(signalnum), _enum_to_int(handler))\r\nValueError: signal only works in main thread\r\n\r\n\r\n\r\n\r\nExecuting:   0%|                                                                                                                          | 0/77 [01:05<?, ?cell/s]\r\nTraceback (most recent call last):\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/bin/papermill\", line 8, in <module>\r\n    sys.exit(papermill())\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/cli.py\", line 238, in papermill\r\n    execution_timeout=execution_timeout,\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/execute.py\", line 106, in execute_notebook\r\n    **engine_kwargs\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/engines.py\", line 49, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/engines.py\", line 343, in execute_notebook\r\n    cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/engines.py\", line 402, in execute_managed_notebook\r\n    return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/papermill/clientwrap.py\", line 36, in execute\r\n    with self.setup_kernel(**kwargs):\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/contextlib.py\", line 81, in __enter__\r\n    return next(self.gen)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/nbclient/client.py\", line 425, in setup_kernel\r\n    self.start_new_kernel_client(**kwargs)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/nbclient/util.py\", line 72, in wrapped\r\n    return just_run(coro(*args, **kwargs))\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/nbclient/util.py\", line 51, in just_run\r\n    return loop.run_until_complete(coro)\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/asyncio/base_events.py\", line 488, in run_until_complete\r\n    return future.result()\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/nbclient/client.py\", line 399, in async_start_new_kernel_client\r\n    await ensure_async(self.kc.wait_for_ready(timeout=self.startup_timeout))\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/nbclient/util.py\", line 83, in ensure_async\r\n    result = await obj\r\n  File \"/opt/continuum/anaconda/envs/anaconda50_py36/lib/python3.6/site-packages/jupyter_client/asynchronous/client.py\", line 143, in wait_for_ready\r\n    raise RuntimeError(\"Kernel didn't respond in %d seconds\" % timeout)\r\nRuntimeError: Kernel didn't respond in 60 seconds\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/515", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/515/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/515/events", "html_url": "https://github.com/nteract/papermill/issues/515", "id": 640676532, "node_id": "MDU6SXNzdWU2NDA2NzY1MzI=", "number": 515, "title": "Not Implemented Error Coming from ZMQ/asyncio", "user": {"login": "crawftv", "id": 16263020, "node_id": "MDQ6VXNlcjE2MjYzMDIw", "avatar_url": "https://avatars3.githubusercontent.com/u/16263020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crawftv", "html_url": "https://github.com/crawftv", "followers_url": "https://api.github.com/users/crawftv/followers", "following_url": "https://api.github.com/users/crawftv/following{/other_user}", "gists_url": "https://api.github.com/users/crawftv/gists{/gist_id}", "starred_url": "https://api.github.com/users/crawftv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crawftv/subscriptions", "organizations_url": "https://api.github.com/users/crawftv/orgs", "repos_url": "https://api.github.com/users/crawftv/repos", "events_url": "https://api.github.com/users/crawftv/events{/privacy}", "received_events_url": "https://api.github.com/users/crawftv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-17T19:09:02Z", "updated_at": "2020-06-29T23:35:53Z", "closed_at": "2020-06-29T23:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting a not implemented error when running execute_notebook.\r\npython 3.8\r\nwindows 10\r\nvirtualenv\r\nA link to my project I am working on is here. https://github.com/crawftv/crawto. \r\nI tried running it without a separate jupyter instance running but that did not help.\r\n\r\n```shell\r\npapermill crawto.ipynb crawto1.ipynb\r\nInput Notebook:  crawto.ipynb\r\nOutput Notebook: crawto1.ipynb\r\nExecuting:   0%|                                                                              | 0/13 [00:00<?, ?cell/s]\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\runpy.py\", line 193, in _run_module_as_main  \r\n    return _run_code(code, main_globals, None,  \r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\runpy.py\", line 86, in _run_code  \r\n    exec(code, run_globals)\r\n  File \"E:\\projects\\crawto\\.test-env\\Scripts\\papermill.exe\\__main__.py\", line 7, in <module>  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\click\\core.py\", line 829, in __call__  \r\n    return self.main(*args, **kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\click\\core.py\", line 782, in main  \r\n    rv = self.invoke(ctx)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\click\\core.py\", line 1066, in invoke  \r\n    return ctx.invoke(self.callback, **ctx.params)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\click\\core.py\", line 610, in invoke  \r\n    return callback(*args, **kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\cli.py\", line 222, in papermill  \r\n    execute_notebook(  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\execute.py\", line 95, in  \r\nexecute_notebook  \r\n    nb = papermill_engines.execute_notebook_with_engine(  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\engines.py\", line 49, in  execute_notebook_with_engine  \r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\engines.py\", line 343, in execute_notebook    \r\n    cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\engines.py\", line 402, in execute_managed_notebook  \r\n    return PapermillNotebookClient(nb_man, **final_kwargs).execute()    \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\papermill\\clientwrap.py\", line 36, in execute  \r\n    with self.setup_kernel(**kwargs):  \r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py\", line 113, in __enter__  \r\n    return next(self.gen)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\nbclient\\client.py\", line 422, in setup_kernel  \r\n    self.start_new_kernel_client(**kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\nbclient\\util.py\", line 37, in wrapped  \r\n    result = loop.run_until_complete(coro(self, *args, **kwargs))  \r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 616, in run_until_comple  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\nbclient\\client.py\", line 396, in async_start_new_kernel_client  \r\n    await ensure_async(self.kc.start_channels())  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\jupyter_client\\client.py\", line 106, in start_channels  \r\n    self.shell_channel.start()  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\jupyter_client\\client.py\", line 151, in shell_channel  \r\n    socket = self.connect_shell(identity=self.session.bsession)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\jupyter_client\\connect.py\", line 561, in connect_shell  \r\n    return self._create_connected_socket('shell', identity=identity)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\jupyter_client\\connect.py\", line 545, in _create_connected_socket  \r\n    sock = self.context.socket(socket_type)   \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\sugar\\context.py\", line 212, in socket  \r\n    s = self._socket_class(self, socket_type, **kwargs)  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\_future.py\", line 144, in __init__\r\n    self._init_io_state()  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\asyncio\\__init__.py\", line 53, in _init_io_state  \r\n    self.io_loop.add_reader(self._fd, lambda : self._handle_events(0, 0))  \r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\events.py\", line 501, in add_reader  \r\n    raise NotImplementedError  \r\nNotImplementedError  \r\nException ignored in: <function Socket.__del__ at 0x000001B167FCD820>  \r\nTraceback (most recent call last):  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\sugar\\socket.py\", line 67, in __del__  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\_future.py\", line 160, in close  \r\n  File \"e:\\projects\\crawto\\.test-env\\lib\\site-packages\\zmq\\asyncio\\__init__.py\", line 60, in  _clear_io_state  \r\n  File \"C:\\Users\\cwcol\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\events.py\", line 504, in remove_reader  \r\nNotImplementedError:```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/513", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/513/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/513/events", "html_url": "https://github.com/nteract/papermill/issues/513", "id": 636387443, "node_id": "MDU6SXNzdWU2MzYzODc0NDM=", "number": 513, "title": "Add support for skipping cells", "user": {"login": "ianhellstrom", "id": 49023008, "node_id": "MDQ6VXNlcjQ5MDIzMDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/49023008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianhellstrom", "html_url": "https://github.com/ianhellstrom", "followers_url": "https://api.github.com/users/ianhellstrom/followers", "following_url": "https://api.github.com/users/ianhellstrom/following{/other_user}", "gists_url": "https://api.github.com/users/ianhellstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianhellstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianhellstrom/subscriptions", "organizations_url": "https://api.github.com/users/ianhellstrom/orgs", "repos_url": "https://api.github.com/users/ianhellstrom/repos", "events_url": "https://api.github.com/users/ianhellstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/ianhellstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T16:27:05Z", "updated_at": "2020-06-11T09:07:57Z", "closed_at": "2020-06-11T09:07:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Notebooks often include cells that are mostly exploratory, e.g. looking at a histogram and then making a decision on how to proceed with the code (e.g. decide on a cut-off value). Re-running the charts may not make sense in a non-interactive way.\r\n\r\nIt would therefore be great if Papermill supported a cell tag (e.g. \"skip\") for cells that are not executed when running with Papermill.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/510", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/510/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/510/events", "html_url": "https://github.com/nteract/papermill/issues/510", "id": 627320761, "node_id": "MDU6SXNzdWU2MjczMjA3NjE=", "number": 510, "title": "cannnot import papermill", "user": {"login": "garland3", "id": 1162675, "node_id": "MDQ6VXNlcjExNjI2NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1162675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garland3", "html_url": "https://github.com/garland3", "followers_url": "https://api.github.com/users/garland3/followers", "following_url": "https://api.github.com/users/garland3/following{/other_user}", "gists_url": "https://api.github.com/users/garland3/gists{/gist_id}", "starred_url": "https://api.github.com/users/garland3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garland3/subscriptions", "organizations_url": "https://api.github.com/users/garland3/orgs", "repos_url": "https://api.github.com/users/garland3/repos", "events_url": "https://api.github.com/users/garland3/events{/privacy}", "received_events_url": "https://api.github.com/users/garland3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-29T14:41:56Z", "updated_at": "2020-05-29T16:51:10Z", "closed_at": "2020-05-29T15:05:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot import papermill after installing it. \r\n```\r\n>>> import papermill as pm\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'papermill'\r\n```\r\n\r\n# How to recreate\r\n```\r\n(fastai2) [agarlan@egs00211 designstudy]$ conda create --name papermilltest python=3.7\r\nCollecting package metadata (current_repodata.json): done\r\nSolving environment: done\r\n\r\n## Package Plan ##\r\n\r\n  environment location: /ascldap/users/agarlan/anaconda3/envs/papermilltest\r\n\r\n  added / updated specs:\r\n    - python=3.7\r\n\r\n\r\nThe following packages will be downloaded:\r\n\r\n    package                    |            build\r\n    ---------------------------|-----------------\r\n    ld_impl_linux-64-2.34      |       h53a641e_4         616 KB  conda-forge\r\n    pip-20.1.1                 |             py_1         1.1 MB  conda-forge\r\n    setuptools-47.1.1          |   py37hc8dfbb8_0         647 KB  conda-forge\r\n    xz-5.2.5                   |       h516909a_0         430 KB  conda-forge\r\n    ------------------------------------------------------------\r\n                                           Total:         2.7 MB\r\n\r\nThe following NEW packages will be INSTALLED:\r\n\r\n  _libgcc_mutex      conda-forge/linux-64::_libgcc_mutex-0.1-conda_forge\r\n  _openmp_mutex      conda-forge/linux-64::_openmp_mutex-4.5-0_gnu\r\n  ca-certificates    conda-forge/linux-64::ca-certificates-2020.4.5.1-hecc5488_0\r\n  certifi            conda-forge/linux-64::certifi-2020.4.5.1-py37hc8dfbb8_0\r\n  ld_impl_linux-64   conda-forge/linux-64::ld_impl_linux-64-2.34-h53a641e_4\r\n  libffi             conda-forge/linux-64::libffi-3.2.1-he1b5a44_1007\r\n  libgcc-ng          conda-forge/linux-64::libgcc-ng-9.2.0-h24d8f2e_2\r\n  libgomp            conda-forge/linux-64::libgomp-9.2.0-h24d8f2e_2\r\n  libstdcxx-ng       conda-forge/linux-64::libstdcxx-ng-9.2.0-hdf63c60_2\r\n  ncurses            conda-forge/linux-64::ncurses-6.1-hf484d3e_1002\r\n  openssl            conda-forge/linux-64::openssl-1.1.1g-h516909a_0\r\n  pip                conda-forge/noarch::pip-20.1.1-py_1\r\n  python             conda-forge/linux-64::python-3.7.6-h8356626_5_cpython\r\n  python_abi         conda-forge/linux-64::python_abi-3.7-1_cp37m\r\n  readline           conda-forge/linux-64::readline-8.0-hf8c457e_0\r\n  setuptools         conda-forge/linux-64::setuptools-47.1.1-py37hc8dfbb8_0\r\n  sqlite             conda-forge/linux-64::sqlite-3.30.1-hcee41ef_0\r\n  tk                 conda-forge/linux-64::tk-8.6.10-hed695b0_0\r\n  wheel              conda-forge/noarch::wheel-0.34.2-py_1\r\n  xz                 conda-forge/linux-64::xz-5.2.5-h516909a_0\r\n  zlib               conda-forge/linux-64::zlib-1.2.11-h516909a_1006\r\n\r\n\r\nProceed ([y]/n)? y\r\n\r\n\r\nDownloading and Extracting Packages\r\nld_impl_linux-64-2.3 | 616 KB    | ##################################################################################################################################### | 100% \r\npip-20.1.1           | 1.1 MB    | ##################################################################################################################################### | 100% \r\nsetuptools-47.1.1    | 647 KB    | ##################################################################################################################################### | 100% \r\nxz-5.2.5             | 430 KB    | ##################################################################################################################################### | 100% \r\nPreparing transaction: done\r\nVerifying transaction: done\r\nExecuting transaction: done\r\n#\r\n# To activate this environment, use\r\n#\r\n#     $ conda activate papermilltest\r\n#\r\n# To deactivate an active environment, use\r\n#\r\n#     $ conda deactivate\r\n\r\n(fastai2) [agarlan@egs00211 designstudy]$ conda activate papermilltest\r\n(papermilltest) [agarlan@egs00211 designstudy]$ conda install papermill\r\nCollecting package metadata (current_repodata.json): done\r\nSolving environment: done\r\n\r\n## Package Plan ##\r\n\r\n  environment location: /ascldap/users/agarlan/anaconda3/envs/papermilltest\r\n\r\n  added / updated specs:\r\n    - papermill\r\n\r\n\r\nThe following packages will be downloaded:\r\n\r\n    package                    |            build\r\n    ---------------------------|-----------------\r\n    async_generator-1.10       |             py_0          18 KB  conda-forge\r\n    brotlipy-0.7.0             |py37h8f50634_1000         346 KB  conda-forge\r\n    click-7.1.2                |     pyh9f0ad1d_0          64 KB  conda-forge\r\n    cryptography-2.9.2         |   py37hb09aad4_0         622 KB  conda-forge\r\n    pyyaml-5.3.1               |   py37h8f50634_0         185 KB  conda-forge\r\n    pyzmq-19.0.1               |   py37hac76be4_0         519 KB  conda-forge\r\n    six-1.15.0                 |     pyh9f0ad1d_0          14 KB  conda-forge\r\n    urllib3-1.25.9             |             py_0          92 KB  conda-forge\r\n    yaml-0.2.4                 |       h516909a_0          82 KB  conda-forge\r\n    ------------------------------------------------------------\r\n                                           Total:         1.9 MB\r\n\r\nThe following NEW packages will be INSTALLED:\r\n\r\n  ansiwrap           conda-forge/noarch::ansiwrap-0.8.4-py_0\r\n  appdirs            conda-forge/noarch::appdirs-1.4.3-py_1\r\n  async_generator    conda-forge/noarch::async_generator-1.10-py_0\r\n  attrs              conda-forge/noarch::attrs-19.3.0-py_0\r\n  black              conda-forge/linux-64::black-19.10b0-py37_0\r\n  brotlipy           conda-forge/linux-64::brotlipy-0.7.0-py37h8f50634_1000\r\n  cffi               conda-forge/linux-64::cffi-1.14.0-py37hd463f26_0\r\n  chardet            conda-forge/linux-64::chardet-3.0.4-py37hc8dfbb8_1006\r\n  click              conda-forge/noarch::click-7.1.2-pyh9f0ad1d_0\r\n  cryptography       conda-forge/linux-64::cryptography-2.9.2-py37hb09aad4_0\r\n  decorator          conda-forge/noarch::decorator-4.4.2-py_0\r\n  entrypoints        conda-forge/linux-64::entrypoints-0.3-py37hc8dfbb8_1001\r\n  idna               conda-forge/noarch::idna-2.9-py_1\r\n  importlib-metadata conda-forge/linux-64::importlib-metadata-1.6.0-py37hc8dfbb8_0\r\n  importlib_metadata conda-forge/noarch::importlib_metadata-1.6.0-0\r\n  ipython_genutils   conda-forge/noarch::ipython_genutils-0.2.0-py_1\r\n  jsonschema         conda-forge/linux-64::jsonschema-3.2.0-py37hc8dfbb8_1\r\n  jupyter_client     conda-forge/noarch::jupyter_client-6.1.3-py_0\r\n  jupyter_core       conda-forge/linux-64::jupyter_core-4.6.3-py37hc8dfbb8_1\r\n  libsodium          conda-forge/linux-64::libsodium-1.0.17-h516909a_0\r\n  mypy_extensions    conda-forge/linux-64::mypy_extensions-0.4.3-py37hc8dfbb8_1\r\n  nbclient           conda-forge/noarch::nbclient-0.3.1-py_0\r\n  nbformat           conda-forge/noarch::nbformat-5.0.6-py_0\r\n  nest-asyncio       conda-forge/noarch::nest-asyncio-1.3.3-py_0\r\n  papermill          conda-forge/linux-64::papermill-2.1.0-py37hc8dfbb8_0\r\n  pathspec           conda-forge/noarch::pathspec-0.8.0-pyh9f0ad1d_0\r\n  pycparser          conda-forge/noarch::pycparser-2.20-py_0\r\n  pyopenssl          conda-forge/noarch::pyopenssl-19.1.0-py_1\r\n  pyrsistent         conda-forge/linux-64::pyrsistent-0.16.0-py37h8f50634_0\r\n  pysocks            conda-forge/linux-64::pysocks-1.7.1-py37hc8dfbb8_1\r\n  python-dateutil    conda-forge/noarch::python-dateutil-2.8.1-py_0\r\n  pyyaml             conda-forge/linux-64::pyyaml-5.3.1-py37h8f50634_0\r\n  pyzmq              conda-forge/linux-64::pyzmq-19.0.1-py37hac76be4_0\r\n  regex              fastai/linux-64::regex-2019.08.19-py37h516909a_0\r\n  requests           conda-forge/noarch::requests-2.23.0-pyh8c360ce_2\r\n  six                conda-forge/noarch::six-1.15.0-pyh9f0ad1d_0\r\n  tenacity           conda-forge/linux-64::tenacity-6.2.0-py37hc8dfbb8_0\r\n  textwrap3          conda-forge/noarch::textwrap3-0.9.2-py_0\r\n  toml               conda-forge/noarch::toml-0.10.1-pyh9f0ad1d_0\r\n  tornado            conda-forge/linux-64::tornado-6.0.4-py37h8f50634_1\r\n  tqdm               conda-forge/noarch::tqdm-4.46.0-pyh9f0ad1d_0\r\n  traitlets          conda-forge/linux-64::traitlets-4.3.3-py37hc8dfbb8_1\r\n  typed-ast          conda-forge/linux-64::typed-ast-1.4.1-py37h516909a_0\r\n  typing_extensions  conda-forge/noarch::typing_extensions-3.7.4.2-py_0\r\n  urllib3            conda-forge/noarch::urllib3-1.25.9-py_0\r\n  yaml               conda-forge/linux-64::yaml-0.2.4-h516909a_0\r\n  zeromq             conda-forge/linux-64::zeromq-4.3.2-he1b5a44_2\r\n  zipp               conda-forge/noarch::zipp-3.1.0-py_0\r\n\r\n\r\nProceed ([y]/n)? y\r\n\r\n\r\nDownloading and Extracting Packages\r\nurllib3-1.25.9       | 92 KB     | ##################################################################################################################################### | 100% \r\nasync_generator-1.10 | 18 KB     | ##################################################################################################################################### | 100% \r\npyyaml-5.3.1         | 185 KB    | ##################################################################################################################################### | 100% \r\nsix-1.15.0           | 14 KB     | ##################################################################################################################################### | 100% \r\npyzmq-19.0.1         | 519 KB    | ##################################################################################################################################### | 100% \r\ncryptography-2.9.2   | 622 KB    | ##################################################################################################################################### | 100% \r\nclick-7.1.2          | 64 KB     | ##################################################################################################################################### | 100% \r\nbrotlipy-0.7.0       | 346 KB    | ##################################################################################################################################### | 100% \r\nyaml-0.2.4           | 82 KB     | ##################################################################################################################################### | 100% \r\nPreparing transaction: done\r\nVerifying transaction: done\r\nExecuting transaction: done\r\n(papermilltest) [agarlan@egs00211 designstudy]$ python\r\nPython 3.7.3 (default, Mar 27 2019, 22:11:17) \r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import papermill as pm\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'papermill'\r\n```    \r\nI'm showing a  test conda environment, but I have the same problem on main environment. \r\n\r\nPerhaps this issues [https://github.com/puckel/docker-airflow/issues/421](url) is similar?\r\n\r\n# Expect behavior\r\nWell, I don't expect an import error. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/509", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/509/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/509/events", "html_url": "https://github.com/nteract/papermill/issues/509", "id": 626616882, "node_id": "MDU6SXNzdWU2MjY2MTY4ODI=", "number": 509, "title": "Update C# translator to support dotnet-interactive, include .net-fsharp and .net-powershell kernels", "user": {"login": "jonsequitur", "id": 547415, "node_id": "MDQ6VXNlcjU0NzQxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/547415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonsequitur", "html_url": "https://github.com/jonsequitur", "followers_url": "https://api.github.com/users/jonsequitur/followers", "following_url": "https://api.github.com/users/jonsequitur/following{/other_user}", "gists_url": "https://api.github.com/users/jonsequitur/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonsequitur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonsequitur/subscriptions", "organizations_url": "https://api.github.com/users/jonsequitur/orgs", "repos_url": "https://api.github.com/users/jonsequitur/repos", "events_url": "https://api.github.com/users/jonsequitur/events{/privacy}", "received_events_url": "https://api.github.com/users/jonsequitur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 641549347, "node_id": "MDU6TGFiZWw2NDE1NDkzNDc=", "url": "https://api.github.com/repos/nteract/papermill/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-28T15:46:53Z", "updated_at": "2020-08-19T14:40:16Z", "closed_at": "2020-08-19T14:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the most recent preview of .NET's support for Jupyter ([.NET Interactive](https://github.com/dotnet/interactive)), we changed the name of the executable from `dotnet-try` to `dotnet-interactive`, which now supports three .NET languages: C#, F#, and PowerShell: https://devblogs.microsoft.com/dotnet/net-interactive-is-here-net-notebooks-preview-2/ \r\n\r\n@lobrien added support for `dotnet-try` in #448, which should be updated to the new tool, and translators added for the additional languages.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/507", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/507/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/507/events", "html_url": "https://github.com/nteract/papermill/issues/507", "id": 625610345, "node_id": "MDU6SXNzdWU2MjU2MTAzNDU=", "number": 507, "title": "AttributeError: module 'papermill' has no attribute 'record'", "user": {"login": "ucasiggcas", "id": 35590066, "node_id": "MDQ6VXNlcjM1NTkwMDY2", "avatar_url": "https://avatars0.githubusercontent.com/u/35590066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ucasiggcas", "html_url": "https://github.com/ucasiggcas", "followers_url": "https://api.github.com/users/ucasiggcas/followers", "following_url": "https://api.github.com/users/ucasiggcas/following{/other_user}", "gists_url": "https://api.github.com/users/ucasiggcas/gists{/gist_id}", "starred_url": "https://api.github.com/users/ucasiggcas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ucasiggcas/subscriptions", "organizations_url": "https://api.github.com/users/ucasiggcas/orgs", "repos_url": "https://api.github.com/users/ucasiggcas/repos", "events_url": "https://api.github.com/users/ucasiggcas/events{/privacy}", "received_events_url": "https://api.github.com/users/ucasiggcas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T11:23:47Z", "updated_at": "2020-05-31T12:54:57Z", "closed_at": "2020-05-31T12:54:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,dear\r\nmet the error\r\ncould you please help me ?\r\nthx\r\n```\r\n>>> import papermill as pm\r\n>>> pm.record()\r\nTraceback (most recent call last):\r\n  File \"<pyshell#33>\", line 1, in <module>\r\n    pm.record()\r\nAttributeError: module 'papermill' has no attribute 'record'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/505", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/505/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/505/events", "html_url": "https://github.com/nteract/papermill/issues/505", "id": 619898232, "node_id": "MDU6SXNzdWU2MTk4OTgyMzI=", "number": 505, "title": "Update testing, linting, tox, check-manifest config files", "user": {"login": "willingc", "id": 2680980, "node_id": "MDQ6VXNlcjI2ODA5ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willingc", "html_url": "https://github.com/willingc", "followers_url": "https://api.github.com/users/willingc/followers", "following_url": "https://api.github.com/users/willingc/following{/other_user}", "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}", "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willingc/subscriptions", "organizations_url": "https://api.github.com/users/willingc/orgs", "repos_url": "https://api.github.com/users/willingc/repos", "events_url": "https://api.github.com/users/willingc/events{/privacy}", "received_events_url": "https://api.github.com/users/willingc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T04:26:30Z", "updated_at": "2020-05-22T18:44:25Z", "closed_at": "2020-05-22T18:44:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now check-manifest is throwing an error. I've noticed that we have some settings in tox and duplicated in other files. It's been a while since we updated this so...it's probably time to do so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/503", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/503/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/503/events", "html_url": "https://github.com/nteract/papermill/issues/503", "id": 619122888, "node_id": "MDU6SXNzdWU2MTkxMjI4ODg=", "number": 503, "title": "Issues while installing papermill on mac Mojave OS", "user": {"login": "mycarta", "id": 7424763, "node_id": "MDQ6VXNlcjc0MjQ3NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7424763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mycarta", "html_url": "https://github.com/mycarta", "followers_url": "https://api.github.com/users/mycarta/followers", "following_url": "https://api.github.com/users/mycarta/following{/other_user}", "gists_url": "https://api.github.com/users/mycarta/gists{/gist_id}", "starred_url": "https://api.github.com/users/mycarta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mycarta/subscriptions", "organizations_url": "https://api.github.com/users/mycarta/orgs", "repos_url": "https://api.github.com/users/mycarta/repos", "events_url": "https://api.github.com/users/mycarta/events{/privacy}", "received_events_url": "https://api.github.com/users/mycarta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T17:15:57Z", "updated_at": "2020-05-16T05:21:32Z", "closed_at": "2020-05-15T17:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not install papermill on mac running Mojave (OS 10.14)\r\n\r\nIt finally worked after I:\r\n1. took care of  gcc with ([from this SO answer](https://stackoverflow.com/a/59161323/1034648)):\r\n\r\n```\r\nsudo rm -rf /Library/Developer/CommandLineTools\r\nxcode-select --install\r\ncd /Library/Developer/CommandLineTools/Packages/\r\nopen macOS_SDK_headers_for_macOS_10.14.pkg\r\n```\r\n\r\n2. updated `regex` with ([from this other SO answer](https://stackoverflow.com/a/59161323/1034648)):\r\n`sudo python3 -m pip install --upgrade regex`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/500", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/500/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/500/events", "html_url": "https://github.com/nteract/papermill/issues/500", "id": 615735407, "node_id": "MDU6SXNzdWU2MTU3MzU0MDc=", "number": 500, "title": "ImportError: cannot import name 'AsyncKernelManager'", "user": {"login": "eljirg", "id": 29477795, "node_id": "MDQ6VXNlcjI5NDc3Nzk1", "avatar_url": "https://avatars2.githubusercontent.com/u/29477795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eljirg", "html_url": "https://github.com/eljirg", "followers_url": "https://api.github.com/users/eljirg/followers", "following_url": "https://api.github.com/users/eljirg/following{/other_user}", "gists_url": "https://api.github.com/users/eljirg/gists{/gist_id}", "starred_url": "https://api.github.com/users/eljirg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eljirg/subscriptions", "organizations_url": "https://api.github.com/users/eljirg/orgs", "repos_url": "https://api.github.com/users/eljirg/repos", "events_url": "https://api.github.com/users/eljirg/events{/privacy}", "received_events_url": "https://api.github.com/users/eljirg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T09:31:49Z", "updated_at": "2020-05-11T23:20:22Z", "closed_at": "2020-05-11T23:20:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encounter the error below while trying to execute_notebook. I just get a new machine and create a new environment. This has never happened before. I tried finding similar error but it seems no one else got it.\r\n\r\nI hope someone help with this.\r\n\r\npapermill 2.1.1\r\njupyter-client 6.1.3\r\njupyter-core 4.6.3\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n/usr/lib/python3/dist-packages/traitlets/traitlets.py in get(self, obj, cls)\r\n    527         try:\r\n--> 528             value = obj._trait_values[self.name]\r\n    529         except KeyError:\r\n\r\nKeyError: 'kernel_manager_class'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-5-d1cd90cf7106> in <module>\r\n     15     pm.execute_notebook(input_path='emulated_simulator_train.ipynb',\r\n     16                             output_path=f\"papermill_output/emulated_simulator_{param['model_type']}_{param['casenumber']}.ipynb\",\r\n---> 17                             parameters = param)\r\n\r\n~/.local/lib/python3.6/site-packages/papermill/execute.py in execute_notebook(input_path, output_path, parameters, engine_name, request_save_on_cell_execute, prepare_only, kernel_name, progress_bar, log_output, stdout_file, stderr_file, start_timeout, report_mode, cwd, **engine_kwargs)\r\n    104                     stdout_file=stdout_file,\r\n    105                     stderr_file=stderr_file,\r\n--> 106                     **engine_kwargs\r\n    107                 )\r\n    108 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs)\r\n     47     def execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs):\r\n     48         \"\"\"Fetch a named engine and execute the nb object against it.\"\"\"\r\n---> 49         return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n     50 \r\n     51 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_notebook(cls, nb, kernel_name, output_path, progress_bar, log_output, autosave_cell_every, **kwargs)\r\n    341         nb_man.notebook_start()\r\n    342         try:\r\n--> 343             cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n    344         finally:\r\n    345             nb_man.cleanup_pbar()\r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_managed_notebook(cls, nb_man, kernel_name, log_output, stdout_file, stderr_file, start_timeout, execution_timeout, **kwargs)\r\n    400             stderr_file=stderr_file,\r\n    401         )\r\n--> 402         return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n    403 \r\n    404 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/clientwrap.py in execute(self, **kwargs)\r\n     34         self.reset_execution_trackers()\r\n     35 \r\n---> 36         with self.setup_kernel(**kwargs):\r\n     37             self.log.info(\"Executing notebook with kernel: %s\" % self.kernel_name)\r\n     38             self.papermill_execute_cells()\r\n\r\n/usr/lib/python3.6/contextlib.py in __enter__(self)\r\n     79     def __enter__(self):\r\n     80         try:\r\n---> 81             return next(self.gen)\r\n     82         except StopIteration:\r\n     83             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in setup_kernel(self, **kwargs)\r\n    399         # Can't use run_until_complete on an asynccontextmanager function :(\r\n    400         if self.km is None:\r\n--> 401             self.start_kernel_manager()\r\n    402 \r\n    403         if not self.km.has_kernel:\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in start_kernel_manager(self)\r\n    326             self.km = self.kernel_manager_class(config=self.config)\r\n    327         else:\r\n--> 328             self.km = self.kernel_manager_class(kernel_name=self.kernel_name, config=self.config)\r\n    329         self.km.client_class = 'jupyter_client.asynchronous.AsyncKernelClient'\r\n    330         return self.km\r\n\r\n/usr/lib/python3/dist-packages/traitlets/traitlets.py in __get__(self, obj, cls)\r\n    554             return self\r\n    555         else:\r\n--> 556             return self.get(obj, cls)\r\n    557 \r\n    558     def set(self, obj, value):\r\n\r\n/usr/lib/python3/dist-packages/traitlets/traitlets.py in get(self, obj, cls)\r\n    533                 raise TraitError(\"No default value found for %s trait of %r\"\r\n    534                                  % (self.name, obj))\r\n--> 535             value = self._validate(obj, dynamic_default())\r\n    536             obj._trait_values[self.name] = value\r\n    537             return value\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in _kernel_manager_class_default(self)\r\n    238     def _kernel_manager_class_default(self):\r\n    239         \"\"\"Use a dynamic default to avoid importing jupyter_client at startup\"\"\"\r\n--> 240         from jupyter_client import AsyncKernelManager\r\n    241 \r\n    242         return AsyncKernelManager\r\n\r\nImportError: cannot import name 'AsyncKernelManager'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/494", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/494/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/494/events", "html_url": "https://github.com/nteract/papermill/issues/494", "id": 601590996, "node_id": "MDU6SXNzdWU2MDE1OTA5OTY=", "number": 494, "title": "Papermill skip cells execution", "user": {"login": "gogasca", "id": 30065079, "node_id": "MDQ6VXNlcjMwMDY1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/30065079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gogasca", "html_url": "https://github.com/gogasca", "followers_url": "https://api.github.com/users/gogasca/followers", "following_url": "https://api.github.com/users/gogasca/following{/other_user}", "gists_url": "https://api.github.com/users/gogasca/gists{/gist_id}", "starred_url": "https://api.github.com/users/gogasca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gogasca/subscriptions", "organizations_url": "https://api.github.com/users/gogasca/orgs", "repos_url": "https://api.github.com/users/gogasca/repos", "events_url": "https://api.github.com/users/gogasca/events{/privacy}", "received_events_url": "https://api.github.com/users/gogasca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T23:31:20Z", "updated_at": "2020-04-17T00:18:57Z", "closed_at": "2020-04-17T00:18:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Does papermill supports skipping cells ?\r\nI would like to have a cell that contains in metadata a tag called \"no_execute\" to skip execution. \r\nMore than happy to submit a PR\r\n```\r\n\"tags\": [\"no_execute\"]\r\n```\r\nThe use case is for example in Cloud we want to skip recreating a Google Cloud Bucket, or authenticate (If we already are).\r\n\r\nCurrently I use:\r\n\r\n```\r\nfrom nbconvert.preprocessors import Preprocessor\r\nclass RemoveCellsWithNoTags(Preprocessor):\r\n    def preprocess(self, notebook, resources):\r\n     executable_cells = []\r\n     for cell in notebook.cells:\r\n            if cell.metadata.get('tags'):\r\n                if 'no_execute' in cell.metadata.get('tags'):\r\n                    continue\r\n            executable_cells.append(cell)\r\n     notebook.cells = executable_cells\r\n        return notebook, resources\r\n```\r\nand nbconvert\r\n```\r\njupyter nbconvert --Exporter.preprocessors=[\\\"preprocess.RemoveCellsWithNoTags\\\"] --ClearOutputPreprocessor.enabled=True --to notebook --output=$NOTEBOOK_NAME_PREPROCESSED $NOTEBOOK_ORIGINAL\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/492", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/492/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/492/events", "html_url": "https://github.com/nteract/papermill/issues/492", "id": 597528590, "node_id": "MDU6SXNzdWU1OTc1Mjg1OTA=", "number": 492, "title": "the output is the same as input", "user": {"login": "ZahraEconomist", "id": 23481545, "node_id": "MDQ6VXNlcjIzNDgxNTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/23481545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZahraEconomist", "html_url": "https://github.com/ZahraEconomist", "followers_url": "https://api.github.com/users/ZahraEconomist/followers", "following_url": "https://api.github.com/users/ZahraEconomist/following{/other_user}", "gists_url": "https://api.github.com/users/ZahraEconomist/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZahraEconomist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZahraEconomist/subscriptions", "organizations_url": "https://api.github.com/users/ZahraEconomist/orgs", "repos_url": "https://api.github.com/users/ZahraEconomist/repos", "events_url": "https://api.github.com/users/ZahraEconomist/events{/privacy}", "received_events_url": "https://api.github.com/users/ZahraEconomist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T20:18:28Z", "updated_at": "2020-08-06T18:20:45Z", "closed_at": "2020-08-06T18:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running a simple test , to print a parameter, but I get this error:\r\n``--------------------------------------------------------------------------`\r\nKeyError                                  Traceback (most recent call last)\r\n/usr/local/lib/python3.6/site-packages/traitlets/traitlets.py in get(self, obj, cls)\r\n    527         try:\r\n--> 528             value = obj._trait_values[self.name]\r\n    529         except KeyError:\r\n\r\nKeyError: 'kernel_manager_class'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-7-8f156b232705> in <module>\r\n      1 import papermill as pm\r\n----> 2 pm.execute_notebook('/home/zwj750/test.ipynb', '/home/zwj750/test_output.ipynb', parameters=dict(a = 10))\r\n\r\n~/.local/lib/python3.6/site-packages/papermill/execute.py in execute_notebook(input_path, output_path, parameters, engine_name, request_save_on_cell_execute, prepare_only, kernel_name, progress_bar, log_output, stdout_file, stderr_file, start_timeout, report_mode, cwd, **engine_kwargs)\r\n    102                     stdout_file=stdout_file,\r\n    103                     stderr_file=stderr_file,\r\n--> 104                     **engine_kwargs\r\n    105                 )\r\n    106 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs)\r\n     47     def execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs):\r\n     48         \"\"\"Fetch a named engine and execute the nb object against it.\"\"\"\r\n---> 49         return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n     50 \r\n     51 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_notebook(cls, nb, kernel_name, output_path, progress_bar, log_output, autosave_cell_every, **kwargs)\r\n    341         nb_man.notebook_start()\r\n    342         try:\r\n--> 343             cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n    344         finally:\r\n    345             nb_man.cleanup_pbar()\r\n\r\n~/.local/lib/python3.6/site-packages/papermill/engines.py in execute_managed_notebook(cls, nb_man, kernel_name, log_output, stdout_file, stderr_file, start_timeout, execution_timeout, **kwargs)\r\n    400             stderr_file=stderr_file,\r\n    401         )\r\n--> 402         return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n    403 \r\n    404 \r\n\r\n~/.local/lib/python3.6/site-packages/papermill/clientwrap.py in execute(self, **kwargs)\r\n     34         self.reset_execution_trackers()\r\n     35 \r\n---> 36         with self.setup_kernel(**kwargs):\r\n     37             self.log.info(\"Executing notebook with kernel: %s\" % self.kernel_name)\r\n     38             self.papermill_execute_cells()\r\n\r\n/usr/local/lib/python3.6/contextlib.py in __enter__(self)\r\n     79     def __enter__(self):\r\n     80         try:\r\n---> 81             return next(self.gen)\r\n     82         except StopIteration:\r\n     83             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in setup_kernel(self, **kwargs)\r\n    399         # Can't use run_until_complete on an asynccontextmanager function :(\r\n    400         if self.km is None:\r\n--> 401             self.start_kernel_manager()\r\n    402 \r\n    403         if not self.km.has_kernel:\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in start_kernel_manager(self)\r\n    326             self.km = self.kernel_manager_class(config=self.config)\r\n    327         else:\r\n--> 328             self.km = self.kernel_manager_class(kernel_name=self.kernel_name, config=self.config)\r\n    329         self.km.client_class = 'jupyter_client.asynchronous.AsyncKernelClient'\r\n    330         return self.km\r\n\r\n/usr/local/lib/python3.6/site-packages/traitlets/traitlets.py in __get__(self, obj, cls)\r\n    554             return self\r\n    555         else:\r\n--> 556             return self.get(obj, cls)\r\n    557 \r\n    558     def set(self, obj, value):\r\n\r\n/usr/local/lib/python3.6/site-packages/traitlets/traitlets.py in get(self, obj, cls)\r\n    533                 raise TraitError(\"No default value found for %s trait of %r\"\r\n    534                                  % (self.name, obj))\r\n--> 535             value = self._validate(obj, dynamic_default())\r\n    536             obj._trait_values[self.name] = value\r\n    537             return value\r\n\r\n~/.local/lib/python3.6/site-packages/nbclient/client.py in _kernel_manager_class_default(self)\r\n    238     def _kernel_manager_class_default(self):\r\n    239         \"\"\"Use a dynamic default to avoid importing jupyter_client at startup\"\"\"\r\n--> 240         from jupyter_client import AsyncKernelManager\r\n    241 \r\n    242         return AsyncKernelManager\r\n\r\nImportError: cannot import name 'AsyncKernelManager'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/490", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/490/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/490/events", "html_url": "https://github.com/nteract/papermill/issues/490", "id": 594340767, "node_id": "MDU6SXNzdWU1OTQzNDA3Njc=", "number": 490, "title": "RuntimeError: You are trying to run nbclient in an environment where an event loop is already running. Please pass `nest_asyncio=True` in `NotebookClient.execute` and such methods.", "user": {"login": "linneuholanda", "id": 19810950, "node_id": "MDQ6VXNlcjE5ODEwOTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/19810950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linneuholanda", "html_url": "https://github.com/linneuholanda", "followers_url": "https://api.github.com/users/linneuholanda/followers", "following_url": "https://api.github.com/users/linneuholanda/following{/other_user}", "gists_url": "https://api.github.com/users/linneuholanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/linneuholanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linneuholanda/subscriptions", "organizations_url": "https://api.github.com/users/linneuholanda/orgs", "repos_url": "https://api.github.com/users/linneuholanda/repos", "events_url": "https://api.github.com/users/linneuholanda/events{/privacy}", "received_events_url": "https://api.github.com/users/linneuholanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-05T08:59:59Z", "updated_at": "2020-06-27T09:17:36Z", "closed_at": "2020-05-28T21:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running papermill in a conda enviroment, I am getting the following traceback:\r\n\r\n```python\r\nRuntimeError                              Traceback (most recent call last)\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/nbclient/util.py in wrapped(self, *args, **kwargs)\r\n     36         try:\r\n---> 37             result = loop.run_until_complete(coro(self, *args, **kwargs))\r\n     38         except RuntimeError as e:\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/asyncio/base_events.py in run_until_complete(self, future)\r\n    562         self._check_closed()\r\n--> 563         self._check_runnung()\r\n    564 \r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/asyncio/base_events.py in _check_runnung(self)\r\n    522         if self.is_running():\r\n--> 523             raise RuntimeError('This event loop is already running')\r\n    524         if events._get_running_loop() is not None:\r\n\r\nRuntimeError: This event loop is already running\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-3-da6a15f1c881> in <module>\r\n      5                     output_file,\r\n      6                     parameters=parameters,\r\n----> 7                     kernel_name=kernel_name)\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/papermill/execute.py in execute_notebook(input_path, output_path, parameters, engine_name, request_save_on_cell_execute, prepare_only, kernel_name, progress_bar, log_output, stdout_file, stderr_file, start_timeout, report_mode, cwd, **engine_kwargs)\r\n    102                     stdout_file=stdout_file,\r\n    103                     stderr_file=stderr_file,\r\n--> 104                     **engine_kwargs\r\n    105                 )\r\n    106 \r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/papermill/engines.py in execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs)\r\n     47     def execute_notebook_with_engine(self, engine_name, nb, kernel_name, **kwargs):\r\n     48         \"\"\"Fetch a named engine and execute the nb object against it.\"\"\"\r\n---> 49         return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n     50 \r\n     51 \r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/papermill/engines.py in execute_notebook(cls, nb, kernel_name, output_path, progress_bar, log_output, autosave_cell_every, **kwargs)\r\n    341         nb_man.notebook_start()\r\n    342         try:\r\n--> 343             cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n    344         finally:\r\n    345             nb_man.cleanup_pbar()\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/papermill/engines.py in execute_managed_notebook(cls, nb_man, kernel_name, log_output, stdout_file, stderr_file, start_timeout, execution_timeout, **kwargs)\r\n    400             stderr_file=stderr_file,\r\n    401         )\r\n--> 402         return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n    403 \r\n    404 \r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/papermill/clientwrap.py in execute(self, **kwargs)\r\n     34         self.reset_execution_trackers()\r\n     35 \r\n---> 36         with self.setup_kernel(**kwargs):\r\n     37             self.log.info(\"Executing notebook with kernel: %s\" % self.kernel_name)\r\n     38             self.papermill_execute_cells()\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/contextlib.py in __enter__(self)\r\n    110         del self.args, self.kwds, self.func\r\n    111         try:\r\n--> 112             return next(self.gen)\r\n    113         except StopIteration:\r\n    114             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/nbclient/client.py in setup_kernel(self, **kwargs)\r\n    402 \r\n    403         if not self.km.has_kernel:\r\n--> 404             self.start_new_kernel_client(**kwargs)\r\n    405         try:\r\n    406             yield\r\n\r\n~/anaconda3/envs/ml_top_phases/lib/python3.7/site-packages/nbclient/util.py in wrapped(self, *args, **kwargs)\r\n     39             if str(e) == 'This event loop is already running':\r\n     40                 raise RuntimeError(\r\n---> 41                     'You are trying to run nbclient in an environment where an '\r\n     42                     'event loop is already running. Please pass `nest_asyncio=True` in '\r\n     43                     '`NotebookClient.execute` and such methods.'\r\n\r\nRuntimeError: You are trying to run nbclient in an environment where an event loop is already running. Please pass `nest_asyncio=True` in `NotebookClient.execute` and such methods.\r\n```\r\nI have no idea where this comes from. Have you run into this before? The code that generates the error is written below.\r\n\r\n```python\r\ntemplate = \"preprocessing_template.ipynb\"\r\nparameters = {\"allowed_windings\":[0,1], \"epsilon\":0.01, \"csv_dir\":\"/home/rio/ssh_csvs/ssh1\"}\r\n#kernel_name = \"ml_top_phases\"\r\nkernel_name = \"ml_top_phases\"\r\nparameters[\"grid_folder\"]=\"/home/linneu/ssh_grids/ssh1/periodic_100_6561\"\r\nparameters[\"csv_name\"]=\"periodic_100_6561.csv\"\r\noutput_file = \"preprocessing_output_ssh1_periodic_100_6561.ipynb\"\r\npm.execute_notebook(template,\r\n                    output_file,\r\n                    parameters=parameters,\r\n                    kernel_name=kernel_name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/486", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/486/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/486/events", "html_url": "https://github.com/nteract/papermill/issues/486", "id": 592648738, "node_id": "MDU6SXNzdWU1OTI2NDg3Mzg=", "number": 486, "title": "Error: ImportError: cannot import name 'AsyncKernelManager' from 'jupyter_client`", "user": {"login": "jonah-juul", "id": 42755776, "node_id": "MDQ6VXNlcjQyNzU1Nzc2", "avatar_url": "https://avatars2.githubusercontent.com/u/42755776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonah-juul", "html_url": "https://github.com/jonah-juul", "followers_url": "https://api.github.com/users/jonah-juul/followers", "following_url": "https://api.github.com/users/jonah-juul/following{/other_user}", "gists_url": "https://api.github.com/users/jonah-juul/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonah-juul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonah-juul/subscriptions", "organizations_url": "https://api.github.com/users/jonah-juul/orgs", "repos_url": "https://api.github.com/users/jonah-juul/repos", "events_url": "https://api.github.com/users/jonah-juul/events{/privacy}", "received_events_url": "https://api.github.com/users/jonah-juul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-02T13:50:52Z", "updated_at": "2020-08-05T08:50:55Z", "closed_at": "2020-04-02T13:56:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error recently appeared past 48 hours. Wondering if anyone has run into this before and knows what root cause could be. Occurs right after `pm.execute_notebook`.\r\n\r\nUsing Docker container `FROM jupyter/scipy-notebook:latest`\r\n\r\n```\r\nExecuting:   0%|                                                                                                                                                         | 0/8 [00:00<?, ?cell/s]\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/traitlets/traitlets.py\", line 528, in get\r\n    value = obj._trait_values[self.name]\r\nKeyError: 'kernel_manager_class'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/opt/conda/lib/python3.7/site-packages/papermill/execute.py\", line 104, in execute_notebook\r\n    **engine_kwargs\r\n  File \"/opt/conda/lib/python3.7/site-packages/papermill/engines.py\", line 49, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/papermill/engines.py\", line 343, in execute_notebook\r\n    cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/papermill/engines.py\", line 402, in execute_managed_notebook\r\n    return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n  File \"/opt/conda/lib/python3.7/site-packages/papermill/clientwrap.py\", line 36, in execute\r\n    with self.setup_kernel(**kwargs):\r\n  File \"/opt/conda/lib/python3.7/contextlib.py\", line 112, in __enter__\r\n    return next(self.gen)\r\n  File \"/opt/conda/lib/python3.7/site-packages/nbclient/client.py\", line 401, in setup_kernel\r\n    self.start_kernel_manager()\r\n  File \"/opt/conda/lib/python3.7/site-packages/nbclient/client.py\", line 328, in start_kernel_manager\r\n    self.km = self.kernel_manager_class(kernel_name=self.kernel_name, config=self.config)\r\n  File \"/opt/conda/lib/python3.7/site-packages/traitlets/traitlets.py\", line 556, in __get__\r\n    return self.get(obj, cls)\r\n  File \"/opt/conda/lib/python3.7/site-packages/traitlets/traitlets.py\", line 535, in get\r\n    value = self._validate(obj, dynamic_default())\r\n  File \"/opt/conda/lib/python3.7/site-packages/nbclient/client.py\", line 240, in _kernel_manager_class_default\r\n    from jupyter_client import AsyncKernelManager\r\nImportError: cannot import name 'AsyncKernelManager' from 'jupyter_client' (/opt/conda/lib/python3.7/site-packages/jupyter_client/__init__.py)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/482", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/482/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/482/events", "html_url": "https://github.com/nteract/papermill/issues/482", "id": 586589973, "node_id": "MDU6SXNzdWU1ODY1ODk5NzM=", "number": 482, "title": "Papermill adding unusual syntax to HTML stored in JSON", "user": {"login": "lwasser", "id": 7649194, "node_id": "MDQ6VXNlcjc2NDkxOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7649194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwasser", "html_url": "https://github.com/lwasser", "followers_url": "https://api.github.com/users/lwasser/followers", "following_url": "https://api.github.com/users/lwasser/following{/other_user}", "gists_url": "https://api.github.com/users/lwasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwasser/subscriptions", "organizations_url": "https://api.github.com/users/lwasser/orgs", "repos_url": "https://api.github.com/users/lwasser/repos", "events_url": "https://api.github.com/users/lwasser/events{/privacy}", "received_events_url": "https://api.github.com/users/lwasser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-23T23:44:20Z", "updated_at": "2020-04-20T16:06:51Z", "closed_at": "2020-04-18T19:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Friends.\r\nI've been using papermill for a while to execute jupyter notebooks in a CI framework. Thank you for your work on it as it's been a fantastic tool.\r\n\r\nI'm running into an odd (i think?) bug. When i run a notebook with an interactive element that will require an iframe - case in point creating a map using leaflet (folium for python), it seems to be adding some code that makes the output render incorrectly.\r\n\r\nI just ran one of my notebooks. Prior to running papermill, the iframe embed looked like this:\r\nThe important piece here is that the `src=data:text/html` part is correctly populated in the json.\r\n\r\n```\r\n\"<div style=\\\"width:100%;\\\"><div style=\\\"position:relative;width:100%;height:0;padding-bottom:60%;\\\"><iframe src=\\\"data:text/html;charset=utf-8;base64,\r\n\r\n```\r\nWhen i run papermill and create a new notebook - for some reason i get the following below: notice that the src now begins with about:blank.\r\n\r\n```\r\n\"<div style=\\\"width:100%;\\\"><div style=\\\"position:relative;width:100%;height:0;padding-bottom:60%;\\\"><iframe src=\\\"about:blank\\\" style=\\\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\\\" data-html=PCFET0NUWVBFIGh0bWw+C\r\n```\r\n\r\ncan anyone shed some light on why this is happening? it's happening with all of the notebooks that i run through papermill that use folium and have an iframe embed. I just udpated to version 2.0 from 1.2 just as a sanity check and it's still doing the same thing. \r\n\r\nHere is an example of a rendered page where you can see the folium map iframes don't render properly. But i have traced this error back to running papermill as the JSON looks fine prior to running it. Any suggestions for fixing this are much appreciated!\r\n\r\nhttps://www.earthdatascience.org/courses/scientists-guide-to-plotting-data-in-python/plot-spatial-data/customize-raster-plots/interactive-maps/ \r\n\r\noh i am running papermill on a MAC  with python as follows (i am adding this just in case i'm missing a parameter here):\r\n`pm.execute_notebook(notebook, out_notebook)`\r\n\r\nbut our CI build is linux and the behavior is the same there. \r\nmany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/479", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/479/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/479/events", "html_url": "https://github.com/nteract/papermill/issues/479", "id": 580553607, "node_id": "MDU6SXNzdWU1ODA1NTM2MDc=", "number": 479, "title": "Close notebook after execution", "user": {"login": "Nikolai-Hlubek", "id": 7396434, "node_id": "MDQ6VXNlcjczOTY0MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7396434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikolai-Hlubek", "html_url": "https://github.com/Nikolai-Hlubek", "followers_url": "https://api.github.com/users/Nikolai-Hlubek/followers", "following_url": "https://api.github.com/users/Nikolai-Hlubek/following{/other_user}", "gists_url": "https://api.github.com/users/Nikolai-Hlubek/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikolai-Hlubek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikolai-Hlubek/subscriptions", "organizations_url": "https://api.github.com/users/Nikolai-Hlubek/orgs", "repos_url": "https://api.github.com/users/Nikolai-Hlubek/repos", "events_url": "https://api.github.com/users/Nikolai-Hlubek/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikolai-Hlubek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-13T11:54:12Z", "updated_at": "2020-04-13T16:27:13Z", "closed_at": "2020-03-19T15:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run `papermill.execute_notebook()` the executed notebook stays in memory and occupies space until I close the parent notebook. \r\n\r\nIs there a way to close the notebook after the execution, while the parent notebook is still running?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/478", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/478/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/478/events", "html_url": "https://github.com/nteract/papermill/issues/478", "id": 575929641, "node_id": "MDU6SXNzdWU1NzU5Mjk2NDE=", "number": 478, "title": "Kernel dies while executing papermill", "user": {"login": "linneuholanda", "id": 19810950, "node_id": "MDQ6VXNlcjE5ODEwOTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/19810950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linneuholanda", "html_url": "https://github.com/linneuholanda", "followers_url": "https://api.github.com/users/linneuholanda/followers", "following_url": "https://api.github.com/users/linneuholanda/following{/other_user}", "gists_url": "https://api.github.com/users/linneuholanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/linneuholanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linneuholanda/subscriptions", "organizations_url": "https://api.github.com/users/linneuholanda/orgs", "repos_url": "https://api.github.com/users/linneuholanda/repos", "events_url": "https://api.github.com/users/linneuholanda/events{/privacy}", "received_events_url": "https://api.github.com/users/linneuholanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-05T01:24:36Z", "updated_at": "2020-04-07T22:05:16Z", "closed_at": "2020-03-31T19:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to automatically generate several notebooks with papermill using the following code:\r\n```python\r\ntemplate = \"preprocessing_template.ipynb\"\r\nparameters = {\"allowed_values\":[0,1], \"epsilon\":0.01, \"to_csv\":True}\r\nkernel_name = \"my_env\"\r\ngrid_folders_csv_names_outputs = [(\"dir_a\", \"a.csv\",\"output_a.ipynb\"),\\\r\n                                  (\"dir_b\", \"b.csv\",\"output_b.ipynb\"),\\\r\n                                  (\"dir_c\", \"c.csv\",\"output_c.ipynb\"),\r\n                                 [\r\n\r\ndef execute_notebook(template,output_file,parameters,kernel_name,grid_folder,csv_name):\r\n\r\n    parameters[\"grid_folder\"]=grid_folder\r\n    parameters[\"csv_name\"]=csv_name\r\n    nb = pm.execute_notebook(template,\r\n                        output_file,\r\n                        parameters=parameters,\r\n                        kernel_name=kernel_name)\r\n    #nbs = []\r\n    #nbs.append(nb)\r\n    return nb\r\n\r\nfor grid_folder, csv_name, output_file in tqdm(grid_folders_csv_names_outputs):\r\n    execute_notebook(template,output_file,parameters,kernel_name,grid_folder,csv_name)\r\n```\r\nNevertheless, I get an error message\r\n```python\r\nDeadKernelError: Kernel died\r\n```\r\nwhich seems to happen because the memory is completely flooded.  As I have checked by monitoring the system while running the code, several ZMQbg processes are started and never killed. What could I do to solve this issue? I am using Ubuntu 18.04 and the code is run in an anaconda 2019.10 environment. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/476", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/476/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/476/events", "html_url": "https://github.com/nteract/papermill/issues/476", "id": 569116039, "node_id": "MDU6SXNzdWU1NjkxMTYwMzk=", "number": 476, "title": "Kernel died while waiting for execute reply.", "user": {"login": "mkoliba", "id": 9571655, "node_id": "MDQ6VXNlcjk1NzE2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9571655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoliba", "html_url": "https://github.com/mkoliba", "followers_url": "https://api.github.com/users/mkoliba/followers", "following_url": "https://api.github.com/users/mkoliba/following{/other_user}", "gists_url": "https://api.github.com/users/mkoliba/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoliba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoliba/subscriptions", "organizations_url": "https://api.github.com/users/mkoliba/orgs", "repos_url": "https://api.github.com/users/mkoliba/repos", "events_url": "https://api.github.com/users/mkoliba/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoliba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-21T18:33:31Z", "updated_at": "2020-08-07T21:44:05Z", "closed_at": "2020-05-03T22:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I was trying to run heavy notebooks with lot of plots on Ubuntu Server in python virtual environment with papermill and I run into following issue:\r\n```\r\npython papermill_exec.py >> log.txt\r\nExecuting:  34%|                                                                                         | 24/71 [01:03<01:04,  1.38s/cell]Kernel died while waiting for execute reply.\r\nExecuting:  35%|                                                                                     | 25/71 [01:08<02:06,  2.75s/cell]\r\nTraceback (most recent call last):\r\n  File \"/home/username/thesis/venv/lib/python3.7/site-packages/nbclient/client.py\", line 414, in _poll_for_reply\r\n    msg = self.kc.shell_channel.get_msg(timeout=timeout)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/jupyter_client/blocking/channels.py\", line 57, in get_msg\r\n    raise Empty\r\n_queue.Empty\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"papermill_exec.py\", line 31, in <module>\r\n    execute_paper_mill(dist_name, optimisation_name, distance, file_name)\r\n  File \"papermill_exec.py\", line 12, in execute_paper_mill\r\n    dist_file_name=dist_file_name)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/execute.py\", line 104, in execute_notebook\r\n    **engine_kwargs\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/engines.py\", line 49, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/engines.py\", line 343, in execute_notebook\r\n    cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/engines.py\", line 402, in execute_managed_notebook\r\n    return PapermillNotebookClient(nb_man, **final_kwargs).execute()\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/clientwrap.py\", line 38, in execute\r\n    self.papermill_execute_cells()\r\n  File \"/home/username/venv/lib/python3.7/site-packages/papermill/clientwrap.py\", line 65, in papermill_execute_cells\r\n    self.execute_cell(cell, index)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/nbclient/client.py\", line 563, in execute_cell\r\n    exec_reply = self._poll_for_reply(parent_msg_id, cell, timeout)\r\n  File \"/home/username/venv/lib/python3.7/site-packages/nbclient/client.py\", line 419, in _poll_for_reply\r\n    self._check_alive()\r\n  File \"/home/username/venv/lib/python3.7/site-packages/nbclient/client.py\", line 446, in _check_alive\r\n    raise DeadKernelError(\"Kernel died\")\r\nnbclient.exceptions.DeadKernelError: Kernel died\r\n```\r\n\r\nUpgrading python to version 3.7 and pip to 20.0.2 did not helped.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/474", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/474/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/474/events", "html_url": "https://github.com/nteract/papermill/issues/474", "id": 566235371, "node_id": "MDU6SXNzdWU1NjYyMzUzNzE=", "number": 474, "title": "Papermill should be able to return different exit codes regarding exception raised", "user": {"login": "axelborja", "id": 14804124, "node_id": "MDQ6VXNlcjE0ODA0MTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/14804124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axelborja", "html_url": "https://github.com/axelborja", "followers_url": "https://api.github.com/users/axelborja/followers", "following_url": "https://api.github.com/users/axelborja/following{/other_user}", "gists_url": "https://api.github.com/users/axelborja/gists{/gist_id}", "starred_url": "https://api.github.com/users/axelborja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axelborja/subscriptions", "organizations_url": "https://api.github.com/users/axelborja/orgs", "repos_url": "https://api.github.com/users/axelborja/repos", "events_url": "https://api.github.com/users/axelborja/events{/privacy}", "received_events_url": "https://api.github.com/users/axelborja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-17T11:25:32Z", "updated_at": "2020-04-03T13:15:46Z", "closed_at": "2020-04-01T22:18:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Papermill seems to exit with code 1 in case of any error.\r\n\r\nHowever, different kinds of errors can occur, and we should be able to distinguish them.\r\n\r\nFor example, in the case of technical errors like OOM (for example: `nbconvert.preprocessors.execute.DeadKernelError: Kernel died`), we could imagine to automatically ask for retrying the papermill execution with more resources.\r\n\r\n2 possible solutions:\r\n 1 - Manage technical errors like OOM and return a different exit code.\r\n 2 - Let the user manage which exit code to return regarding the exception raised.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/467", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/467/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/467/events", "html_url": "https://github.com/nteract/papermill/issues/467", "id": 551143001, "node_id": "MDU6SXNzdWU1NTExNDMwMDE=", "number": 467, "title": "pm.record function", "user": {"login": "florathecat", "id": 7905413, "node_id": "MDQ6VXNlcjc5MDU0MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7905413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florathecat", "html_url": "https://github.com/florathecat", "followers_url": "https://api.github.com/users/florathecat/followers", "following_url": "https://api.github.com/users/florathecat/following{/other_user}", "gists_url": "https://api.github.com/users/florathecat/gists{/gist_id}", "starred_url": "https://api.github.com/users/florathecat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florathecat/subscriptions", "organizations_url": "https://api.github.com/users/florathecat/orgs", "repos_url": "https://api.github.com/users/florathecat/repos", "events_url": "https://api.github.com/users/florathecat/events{/privacy}", "received_events_url": "https://api.github.com/users/florathecat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-17T01:11:01Z", "updated_at": "2020-01-19T18:43:12Z", "closed_at": "2020-01-19T18:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI just updated my papermill package to 1.2.1 and found out that the record function no longer works. It just gave me an error message \"AttributeError: module 'papermill' has no attribute 'record'\".\r\n\r\nIs there a replacement function for record? I need it to run multiple jupyter notebooks and import values from each notebook for final combination.\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/465", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/465/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/465/events", "html_url": "https://github.com/nteract/papermill/issues/465", "id": 546353382, "node_id": "MDU6SXNzdWU1NDYzNTMzODI=", "number": 465, "title": "Papermill doesn't pin dependencies", "user": {"login": "abhin-rk", "id": 39709564, "node_id": "MDQ6VXNlcjM5NzA5NTY0", "avatar_url": "https://avatars1.githubusercontent.com/u/39709564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhin-rk", "html_url": "https://github.com/abhin-rk", "followers_url": "https://api.github.com/users/abhin-rk/followers", "following_url": "https://api.github.com/users/abhin-rk/following{/other_user}", "gists_url": "https://api.github.com/users/abhin-rk/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhin-rk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhin-rk/subscriptions", "organizations_url": "https://api.github.com/users/abhin-rk/orgs", "repos_url": "https://api.github.com/users/abhin-rk/repos", "events_url": "https://api.github.com/users/abhin-rk/events{/privacy}", "received_events_url": "https://api.github.com/users/abhin-rk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T15:40:07Z", "updated_at": "2020-01-08T16:20:08Z", "closed_at": "2020-01-08T16:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday `nbformat` released a new version. Turns out they didn't include all the files in their released package and had to [release again with the fix](https://github.com/jupyter/nbformat/pull/158). It also turns out that the company I work for had a deployment between the original release and the bugfix release of `nbformat`. As a result, our pipeline broke.\r\n\r\nI think one of the underlying issues in this system is that papermill doesn't pin its dependencies. So when an underlying package releases a new version, a previously tested version of papermill becomes entirely untested and susceptible to failure.\r\n\r\nIs version pinning something that the maintainers of papermill interested in? If so, I'd be happy to contribute some time towards making a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/464", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/464/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/464/events", "html_url": "https://github.com/nteract/papermill/issues/464", "id": 546310362, "node_id": "MDU6SXNzdWU1NDYzMTAzNjI=", "number": 464, "title": "Execution stops on exceptions", "user": {"login": "marketneutral", "id": 16124573, "node_id": "MDQ6VXNlcjE2MTI0NTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/16124573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marketneutral", "html_url": "https://github.com/marketneutral", "followers_url": "https://api.github.com/users/marketneutral/followers", "following_url": "https://api.github.com/users/marketneutral/following{/other_user}", "gists_url": "https://api.github.com/users/marketneutral/gists{/gist_id}", "starred_url": "https://api.github.com/users/marketneutral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marketneutral/subscriptions", "organizations_url": "https://api.github.com/users/marketneutral/orgs", "repos_url": "https://api.github.com/users/marketneutral/repos", "events_url": "https://api.github.com/users/marketneutral/events{/privacy}", "received_events_url": "https://api.github.com/users/marketneutral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T14:21:00Z", "updated_at": "2020-01-07T14:27:37Z", "closed_at": "2020-01-07T14:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am confused by the behavior of papermill when an underlying notebook has an exception. [Part 2: Scheduling Notebooks at Netflix](https://medium.com/netflix-techblog/scheduling-notebooks-348e6c14cfd6), notes that a key value proposition of the papermill notebook workflow is that *the notebook output file is the log*. In the section **\"Self Service Debugging\"** the article talks about inspecting the notebook output to see the errors thrown (in that case a `ConnectionError`): \r\n\r\n> Let\u2019s dig into how we would deal with a failure. Say something went wrong in our example notebook from earlier. How might we debug and fix the issue? The first place we\u2019d want to look is the notebook output. It will have a stack trace, and ultimately any output information related to an error.\r\n\r\nHowever, it seems that the default behavior of papermill does not support this. As an example,\r\n\r\n- I make a notebook with a single cell: `1/0`\r\n- I run this with `papermill notebook.ipynb output.ipynb`\r\n\r\nI expect that I will get a notebook, `output.ipynb` with\r\n\r\n![image](https://user-images.githubusercontent.com/16124573/71901429-ec8a5700-312d-11ea-96ff-63ce4fef8ac0.png)\r\n\r\nhowever, instead, papermill stops execution at the CLI and throws\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/bin/papermill\", line 11, in <module>\r\n    sys.exit(papermill())\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/execute.py\", line 101, in execute_notebook\r\n    raise_for_execution_errors(nb, output_path)\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/execute.py\", line 185, in raise_for_execution_errors\r\n    raise error\r\npapermill.exceptions.PapermillExecutionError:\r\n---------------------------------------------------------------------------\r\nException encountered at \"In [4]\":\r\n---------------------------------------------------------------------------\r\nZeroDivisionError                         Traceback (most recent call last)\r\n<ipython-input-4-9e1622b385b6> in <module>\r\n----> 1 1/0\r\n\r\nZeroDivisionError: division by zero\r\n```\r\n\r\n**There is no `output.ipynb` to inspect.** How does one get papermill to operate as described in the Medium post?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/462", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/462/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/462/events", "html_url": "https://github.com/nteract/papermill/issues/462", "id": 543717383, "node_id": "MDU6SXNzdWU1NDM3MTczODM=", "number": 462, "title": "Use new subset of nbconvert (new package)", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 641549347, "node_id": "MDU6TGFiZWw2NDE1NDkzNDc=", "url": "https://api.github.com/repos/nteract/papermill/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/nteract/papermill/milestones/2", "html_url": "https://github.com/nteract/papermill/milestone/2", "labels_url": "https://api.github.com/repos/nteract/papermill/milestones/2/labels", "id": 4962313, "node_id": "MDk6TWlsZXN0b25lNDk2MjMxMw==", "number": 2, "title": "Papermill 2.0", "description": null, "creator": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "open", "created_at": "2019-12-30T01:57:58Z", "updated_at": "2020-02-11T18:46:22Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-12-30T04:01:20Z", "updated_at": "2020-02-11T17:50:39Z", "closed_at": "2020-02-11T17:50:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Following https://github.com/jupyter/nbconvert/issues/821 as a part of https://github.com/jupyter/nbconvert/issues/1045 we want to reduce the dependency graph for papermill and base it solely on nbexecute instead of all of nbconvert. This would be preferable to do before the 2.0 release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/460", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/460/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/460/events", "html_url": "https://github.com/nteract/papermill/issues/460", "id": 543674449, "node_id": "MDU6SXNzdWU1NDM2NzQ0NDk=", "number": 460, "title": "Papermill 2.0 Release", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nteract/papermill/milestones/2", "html_url": "https://github.com/nteract/papermill/milestone/2", "labels_url": "https://api.github.com/repos/nteract/papermill/milestones/2/labels", "id": 4962313, "node_id": "MDk6TWlsZXN0b25lNDk2MjMxMw==", "number": 2, "title": "Papermill 2.0", "description": null, "creator": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "open", "created_at": "2019-12-30T01:57:58Z", "updated_at": "2020-02-11T18:46:22Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2019-12-30T01:59:34Z", "updated_at": "2020-02-11T18:46:23Z", "closed_at": "2020-02-11T18:46:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have a number of minor feature improvements and updates for new libraries that need a release, but the big change is dropping support for python 2. Because this is a larger change and we may need to still submit a bug fix or two for the older development branch in the future, I'm proposing we make a papermill 2.0 release with some larger changes in it, including the cut to python 3 only.\r\n\r\nI'll start attaching issues and PRs to the milestone so we can track progress there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/457", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/457/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/457/events", "html_url": "https://github.com/nteract/papermill/issues/457", "id": 540344138, "node_id": "MDU6SXNzdWU1NDAzNDQxMzg=", "number": 457, "title": "Available to NOT save resulting notebook", "user": {"login": "vikmary", "id": 17520043, "node_id": "MDQ6VXNlcjE3NTIwMDQz", "avatar_url": "https://avatars0.githubusercontent.com/u/17520043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vikmary", "html_url": "https://github.com/vikmary", "followers_url": "https://api.github.com/users/vikmary/followers", "following_url": "https://api.github.com/users/vikmary/following{/other_user}", "gists_url": "https://api.github.com/users/vikmary/gists{/gist_id}", "starred_url": "https://api.github.com/users/vikmary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vikmary/subscriptions", "organizations_url": "https://api.github.com/users/vikmary/orgs", "repos_url": "https://api.github.com/users/vikmary/repos", "events_url": "https://api.github.com/users/vikmary/events{/privacy}", "received_events_url": "https://api.github.com/users/vikmary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T14:22:30Z", "updated_at": "2019-12-30T06:38:42Z", "closed_at": "2019-12-30T06:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nMy case is that I'm using papermill in unittests. I use it to check whether notebook executes without errors:\r\n```python\r\nclass TestNotebook(unittest.TestCase):\r\n    def test_default(self):\r\n        pm.execute_notebook(\r\n           'notebooks/entity_resolution_api.ipynb',\r\n           '/dev/null',\r\n            parameters={}\r\n        )\r\n```\r\n\r\nBut setting `output_path` with `'/dev/null'` raises a warning. It would be nice to have possibility to not save executed notebook.\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/454", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/454/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/454/events", "html_url": "https://github.com/nteract/papermill/issues/454", "id": 536660099, "node_id": "MDU6SXNzdWU1MzY2NjAwOTk=", "number": 454, "title": "Proposal: Save notebook file in the middle of long cell executions", "user": {"login": "leopd", "id": 193183, "node_id": "MDQ6VXNlcjE5MzE4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/193183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leopd", "html_url": "https://github.com/leopd", "followers_url": "https://api.github.com/users/leopd/followers", "following_url": "https://api.github.com/users/leopd/following{/other_user}", "gists_url": "https://api.github.com/users/leopd/gists{/gist_id}", "starred_url": "https://api.github.com/users/leopd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leopd/subscriptions", "organizations_url": "https://api.github.com/users/leopd/orgs", "repos_url": "https://api.github.com/users/leopd/repos", "events_url": "https://api.github.com/users/leopd/events{/privacy}", "received_events_url": "https://api.github.com/users/leopd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-11T22:56:53Z", "updated_at": "2019-12-20T22:12:26Z", "closed_at": "2019-12-20T22:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Apologies if this has come up before - I looked for an issue about it, but didn't find one.)\r\n\r\nSimilar to #433 I also run long machine learning jobs in notebooks, where single cells can take hours or even days to run, so I want to see the cell's intermediate results before that cell is completed.  I know that `--log-output` will print it to the console, but I'd like a feature where the `.ipynb` file gets updated periodically during long executions.\r\n\r\nI think I see a reasonable way to do this in the code.  Proof of concept at https://github.com/nteract/papermill/compare/master...leopd:save-mid-cell\r\nClearly this is incomplete as it should be configurable, and maybe even have some smarts to detect if saving the notebook periodically is taking too long since this is an intrinsically N^2 operation that could slow down over time with large notebooks and cloud storage.  Happy to work on that stuff, but wanted to get some feedback first.\r\n\r\nHas this been considered/rejected before?  Does it seem worthwhile?  Any side-effects or subtleties I should think about?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/450", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/450/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/450/events", "html_url": "https://github.com/nteract/papermill/issues/450", "id": 532163925, "node_id": "MDU6SXNzdWU1MzIxNjM5MjU=", "number": 450, "title": "Recent azure-storage-blob release incompatible with papermill", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549347, "node_id": "MDU6TGFiZWw2NDE1NDkzNDc=", "url": "https://api.github.com/repos/nteract/papermill/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-03T18:01:24Z", "updated_at": "2019-12-30T02:07:45Z", "closed_at": "2019-12-30T02:07:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Something in the import pattern changed and we need to update to be backwards/forwards compatible before the next release.\r\n\r\nChanging to azure-storage-blob ~= 2.1 makes tests pass again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/447", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/447/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/447/events", "html_url": "https://github.com/nteract/papermill/issues/447", "id": 525874480, "node_id": "MDU6SXNzdWU1MjU4NzQ0ODA=", "number": 447, "title": "When saving to Azure blob storage authentication fails if Shared Access Signiture (SAS) contains a + symbol", "user": {"login": "LukeGahan", "id": 3843420, "node_id": "MDQ6VXNlcjM4NDM0MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3843420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeGahan", "html_url": "https://github.com/LukeGahan", "followers_url": "https://api.github.com/users/LukeGahan/followers", "following_url": "https://api.github.com/users/LukeGahan/following{/other_user}", "gists_url": "https://api.github.com/users/LukeGahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeGahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeGahan/subscriptions", "organizations_url": "https://api.github.com/users/LukeGahan/orgs", "repos_url": "https://api.github.com/users/LukeGahan/repos", "events_url": "https://api.github.com/users/LukeGahan/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeGahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T15:26:05Z", "updated_at": "2019-12-30T02:08:18Z", "closed_at": "2019-12-30T02:08:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the file `abs.py` the `_split_url` method should not use the `urllib.parse.unquote_plus() `method to modify the SAS. If the SAS contains a + symbol then Azure responds with the following:\r\n\r\n```\r\nazure.common.AzureHttpError: Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature. ErrorCode: AuthenticationFailed\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><Error><Code>AuthenticationFailed</Code><Message>Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.\r\nRequestId:78faa0e1-701e-0010-0cb4-9fba37000000\r\nTime:2019-11-20T15:11:03.2388976Z</Message><AuthenticationErrorDetail>Signature fields not well formed.</AuthenticationErrorDetail></Error>\r\n```\r\n\r\n\r\nI assume this is because BlockBlobService expects the sas_token parameter to be in encoded form, i.e. unsafe ascii characters replaced with %XX. For example the following results in the error above:\r\n\r\n```python\r\nBlockBlobService(account_name=account_name, sas_token=urllib.parse.unquote_plus('se=2019-11-20T15%3A20%3A45Z&sp=rwl&sv=2018-03-28&sr=c&sig=nRRyKQEUGrIPvFEEc3PyaFWsQkyf0nd2%2BqdaW1sewi4%3D')).list_blobs(container)\r\n```\r\n\r\nWhile the following works correctly:\r\n\r\n\r\n```python\r\nBlockBlobService(account_name=account_name, sas_token='se=2019-11-20T15%3A20%3A45Z&sp=rwl&sv=2018-03-28&sr=c&sig=nRRyKQEUGrIPvFEEc3PyaFWsQkyf0nd2%2BqdaW1sewi4%3D').list_blobs(container)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/445", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/445/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/445/events", "html_url": "https://github.com/nteract/papermill/issues/445", "id": 523632815, "node_id": "MDU6SXNzdWU1MjM2MzI4MTU=", "number": 445, "title": "Problem when setting output_path as GCS address", "user": {"login": "AyatoKamina", "id": 57811021, "node_id": "MDQ6VXNlcjU3ODExMDIx", "avatar_url": "https://avatars1.githubusercontent.com/u/57811021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AyatoKamina", "html_url": "https://github.com/AyatoKamina", "followers_url": "https://api.github.com/users/AyatoKamina/followers", "following_url": "https://api.github.com/users/AyatoKamina/following{/other_user}", "gists_url": "https://api.github.com/users/AyatoKamina/gists{/gist_id}", "starred_url": "https://api.github.com/users/AyatoKamina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AyatoKamina/subscriptions", "organizations_url": "https://api.github.com/users/AyatoKamina/orgs", "repos_url": "https://api.github.com/users/AyatoKamina/repos", "events_url": "https://api.github.com/users/AyatoKamina/events{/privacy}", "received_events_url": "https://api.github.com/users/AyatoKamina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-15T18:54:22Z", "updated_at": "2019-12-30T02:01:40Z", "closed_at": "2019-12-30T02:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to use papermill to read a notebook from GCS as well as use a GCS location as the output_path.\r\n\r\nWhen I set input_path to a notebook in GCS it works just fine as long as I have output_path set to a local directory, however, if I set both input_path and output_path to a GCS location/file then I get this error.\r\n\r\nI am running a papermill function through a DAG within airflow using the PythonOperator.\r\n\r\nMy code to call papermill looks like so - \r\n\r\n>pm.execute_notebook(\r\n>        input_notebook,\r\n>        output_notebook,\r\n>        parameters=statement_parameters\r\n>    )\r\n\r\nand the args I am passing in for use there are - \r\n\r\n>input_notebook': 'gs://ml_notebooks/hello-world.ipynb',\r\n>            'output_notebook': 'gs://ml_notebooks/output/output.ipynb',\r\n>            'statement_parameters': {\r\n>                'msgs': [\"Hello World!\"]\r\n>            }\r\n\r\nWhen I run the DAG through airflow, it prints out the correct parameters like so - \r\n\r\n> [2019-11-15 13:47:21,776] {execute.py:73} INFO - Input Notebook:  gs://ml_notebooks/hello-world.ipynb\r\n> [2019-11-15 13:47:21,776] {execute.py:74} INFO - Output Notebook: gs://ml_notebooks/output/output.ipynb`\r\n\r\nhowever then it hits the following error \r\n\r\n>[2019-11-15 13:47:23,975] {taskinstance.py:1089} INFO - Marking task as FAILED.\r\n>Traceback (most recent call last):\r\n>  File \"/usr/local/bin/airflow\", line 37, in <module>\r\n>    args.func(args)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/utils/cli.py\", line 74, in wrapper\r\n>    return f(*args, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/bin/cli.py\", line 688, in test\r\n>    ti.run(ignore_task_deps=True, ignore_ti_state=True, test_mode=True)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/utils/db.py\", line 74, in wrapper\r\n>    return func(*args, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py\", line 1020, in run\r\n>    session=session)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/utils/db.py\", line 70, in wrapper\r\n>    return func(*args, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py\", line 930, in >_run_raw_task\r\n>    result = task_copy.execute(context=context)\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/operators/python_operator.py\", line 113, in >execute\r\n>    return_value = self.execute_callable()\r\n>  File \"/usr/local/lib/python3.7/site-packages/airflow/operators/python_operator.py\", line 118, in >execute_callable\r\n>    return self.python_callable(*self.op_args, **self.op_kwargs)\r\n>  File \"/Users/wxh1ang/workspace/airflow/dags/executenotebookinairflowtest.py\", line 24, in >execute_python_notebook_task\r\n>    parameters=statement_parameters\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/execute.py\", line 104, in execute_notebook\r\n>    **engine_kwargs\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 49, in >execute_notebook_with_engine\r\n>    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 302, in execute_notebook\r\n>    nb_man.notebook_start()\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 69, in wrapper\r\n>    return func(self, *args, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 170, in notebook_start\r\n>    self.save()\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 69, in wrapper\r\n>    return func(self, *args, **kwargs)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/engines.py\", line 134, in save\r\n>    write_ipynb(self.nb, self.output_path)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/iorw.py\", line 365, in write_ipynb\r\n>    papermill_io.write(nbformat.writes(nb), path)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/iorw.py\", line 121, in write\r\n>    return self.get_handler(path).write(buf, path)\r\n>  File \"/usr/local/lib/python3.7/site-packages/papermill/iorw.py\", line 309, in write\r\n>    multiplier=self.RETRY_MULTIPLIER, min=self.RETRY_DELAY, max=self.RETRY_MAX_DELAY\r\n> TypeError: __init__() got an unexpected keyword argument 'min'`\r\n\r\n\r\nI cannot figure out why this is happening, and it seems that min argument has been there as far back as the 1.0.0 papermill version, so I am pretty confused. Also, like I said, I can read notebooks from GCS but when I put a GCS location as output path I get that error.  But if I name the output_notebook to the same thing just in a local location it works.\r\n\r\nAny help is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/439", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/439/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/439/events", "html_url": "https://github.com/nteract/papermill/issues/439", "id": 510073958, "node_id": "MDU6SXNzdWU1MTAwNzM5NTg=", "number": 439, "title": "Papermill globally modifies behaviour of pyyaml SafeLoader", "user": {"login": "jc-harrison", "id": 8958797, "node_id": "MDQ6VXNlcjg5NTg3OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8958797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jc-harrison", "html_url": "https://github.com/jc-harrison", "followers_url": "https://api.github.com/users/jc-harrison/followers", "following_url": "https://api.github.com/users/jc-harrison/following{/other_user}", "gists_url": "https://api.github.com/users/jc-harrison/gists{/gist_id}", "starred_url": "https://api.github.com/users/jc-harrison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jc-harrison/subscriptions", "organizations_url": "https://api.github.com/users/jc-harrison/orgs", "repos_url": "https://api.github.com/users/jc-harrison/repos", "events_url": "https://api.github.com/users/jc-harrison/events{/privacy}", "received_events_url": "https://api.github.com/users/jc-harrison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-21T15:55:39Z", "updated_at": "2019-10-21T16:28:40Z", "closed_at": "2019-10-21T16:28:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Importing `papermill` globally modifies the behaviour of `pyyaml`'s `SafeLoader` to parse dates as strings.\r\n\r\n**To reproduce:**\r\n```python\r\n>>> import yaml\r\n>>> yaml.safe_load('2019-10-21')\r\ndatetime.date(2019, 10, 21)\r\n>>> import papermill\r\n>>> yaml.safe_load('2019-10-21')\r\n'2019-10-21'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/436", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/436/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/436/events", "html_url": "https://github.com/nteract/papermill/issues/436", "id": 503619099, "node_id": "MDU6SXNzdWU1MDM2MTkwOTk=", "number": 436, "title": "PrettyPrint parameters", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-07T18:34:00Z", "updated_at": "2019-12-29T22:49:29Z", "closed_at": "2019-12-29T22:49:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When we inject parameters they form very large single lines if the parameter is a map or list of arguments. It's be nice for readability if the parameter injection was smart about formatting inputs and ran them through a linter or printed maps / lists in a way that was more legible. This might become language / kernel specific, but would still be a solid improvement to generated notebooks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/435", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/435/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/435/events", "html_url": "https://github.com/nteract/papermill/issues/435", "id": 499060556, "node_id": "MDU6SXNzdWU0OTkwNjA1NTY=", "number": 435, "title": "a good way to early stop the script", "user": {"login": "juancrescente", "id": 2141907, "node_id": "MDQ6VXNlcjIxNDE5MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2141907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juancrescente", "html_url": "https://github.com/juancrescente", "followers_url": "https://api.github.com/users/juancrescente/followers", "following_url": "https://api.github.com/users/juancrescente/following{/other_user}", "gists_url": "https://api.github.com/users/juancrescente/gists{/gist_id}", "starred_url": "https://api.github.com/users/juancrescente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juancrescente/subscriptions", "organizations_url": "https://api.github.com/users/juancrescente/orgs", "repos_url": "https://api.github.com/users/juancrescente/repos", "events_url": "https://api.github.com/users/juancrescente/events{/privacy}", "received_events_url": "https://api.github.com/users/juancrescente/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}, {"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T19:00:07Z", "updated_at": "2019-12-09T18:35:17Z", "closed_at": "2019-12-09T18:35:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nis there a way to \"exit\" the execution properly?\r\nsys.exit() throws an exception", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/431", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/431/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/431/events", "html_url": "https://github.com/nteract/papermill/issues/431", "id": 493554255, "node_id": "MDU6SXNzdWU0OTM1NTQyNTU=", "number": 431, "title": "Cleanup phase before exiting when papermill is interrupted?", "user": {"login": "juhoautio", "id": 4446608, "node_id": "MDQ6VXNlcjQ0NDY2MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4446608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juhoautio", "html_url": "https://github.com/juhoautio", "followers_url": "https://api.github.com/users/juhoautio/followers", "following_url": "https://api.github.com/users/juhoautio/following{/other_user}", "gists_url": "https://api.github.com/users/juhoautio/gists{/gist_id}", "starred_url": "https://api.github.com/users/juhoautio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juhoautio/subscriptions", "organizations_url": "https://api.github.com/users/juhoautio/orgs", "repos_url": "https://api.github.com/users/juhoautio/repos", "events_url": "https://api.github.com/users/juhoautio/events{/privacy}", "received_events_url": "https://api.github.com/users/juhoautio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-13T23:41:34Z", "updated_at": "2019-09-17T20:51:20Z", "closed_at": "2019-09-17T20:51:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is there any common way to handle cases where one would need papermill to execute some cleanup cell(s) before papermill exits?**\r\n\r\nThis should happen regardless of why it's being terminated \u2013\u00a0due to an error, or because the papermill process was killed.\r\n\r\nSo it would be similar to the `finally` block of a `try-finally` clause in Python or Java.\r\n\r\n----\r\n\r\nMy sparkmagic use case:\r\n\r\nI have notebooks that use sparkmagic to launch livy sessions. Each livy session ends up as a running YARN application, reserving some resources from a cluster. The last cell of my notebook tells sparkmagic to terminate the session(s).\r\n\r\nIf I run such notebook successfully with papermill it works as expected: the livy session is terminated before papermill exits. But if I interrupt papermill while it's running, the livy session / YARN application is left running (until it finishes and/or livy session times out).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/427", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/427/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/427/events", "html_url": "https://github.com/nteract/papermill/issues/427", "id": 490667105, "node_id": "MDU6SXNzdWU0OTA2NjcxMDU=", "number": 427, "title": "`-p` arguments right before notebook paths incorrectly uses notebook paths as option arguemnts", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-07T18:38:59Z", "updated_at": "2019-09-21T19:27:51Z", "closed_at": "2019-09-21T19:27:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related to #417 where the more complex option parsing is causing a different issue.\r\n\r\n`papermill -p foo bar papermill/tests/notebooks/simple_execute.ipynb /tmp/out.ipynb` reproduces the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/426", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/426/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/426/events", "html_url": "https://github.com/nteract/papermill/issues/426", "id": 490449464, "node_id": "MDU6SXNzdWU0OTA0NDk0NjQ=", "number": 426, "title": "Timeout waiting for IOPub output", "user": {"login": "gshiba", "id": 5315651, "node_id": "MDQ6VXNlcjUzMTU2NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5315651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gshiba", "html_url": "https://github.com/gshiba", "followers_url": "https://api.github.com/users/gshiba/followers", "following_url": "https://api.github.com/users/gshiba/following{/other_user}", "gists_url": "https://api.github.com/users/gshiba/gists{/gist_id}", "starred_url": "https://api.github.com/users/gshiba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gshiba/subscriptions", "organizations_url": "https://api.github.com/users/gshiba/orgs", "repos_url": "https://api.github.com/users/gshiba/repos", "events_url": "https://api.github.com/users/gshiba/events{/privacy}", "received_events_url": "https://api.github.com/users/gshiba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nteract/papermill/milestones/2", "html_url": "https://github.com/nteract/papermill/milestone/2", "labels_url": "https://api.github.com/repos/nteract/papermill/milestones/2/labels", "id": 4962313, "node_id": "MDk6TWlsZXN0b25lNDk2MjMxMw==", "number": 2, "title": "Papermill 2.0", "description": null, "creator": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "open", "created_at": "2019-12-30T01:57:58Z", "updated_at": "2020-02-11T18:46:22Z", "due_on": null, "closed_at": null}, "comments": 10, "created_at": "2019-09-06T17:53:02Z", "updated_at": "2020-02-11T18:45:55Z", "closed_at": "2020-02-11T18:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nIssue: When a cell ~takes too long to execute~ fills up the IOPub channel ZMQ buffer, papermill (or nbconvert?) (almost) silently trims off the output and carries on to the next cell. I believe it should raise an error and exit with non-zero.\r\n\r\nIt appears this is addressed in https://github.com/jupyter/nbconvert/pull/994, but I can't tell if the fix there will solve this issue.\r\n\r\nThank you!\r\n\r\n---\r\n\r\nTo reproduce: Make a notebook with a single cell (adapted from https://github.com/jupyter/nbconvert/issues/659#issuecomment-484673647):\r\n\r\n```python\r\nimport sys\r\nimport time\r\nstr = '0'\r\nfor x in range(0, 10000):\r\n    sys.stdout.write(str*100)\r\n    sys.stdout.flush()\r\n    time.sleep(0.0001)\r\nprint('hi')\r\n```\r\nThen, execute it. A warning is printed, but exit code is zero, and the `'hi'` is not printed.\r\n\r\n```shell\r\n$ papermill input.ipynb output.ipynb\r\nInput Notebook:  /home/gosuke/tmp/input.ipynb\r\nOutput Notebook: output.ipynb\r\nExecuting:   0%|                                       | 0/2 [00:00<?, ?cell/s]\r\nTimeout waiting for IOPub output\r\nExecuting: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:27<00:00, 14.26s/cell]\r\n$ echo $?\r\n0\r\n$ tail -n 60 output.ipynb\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"import sys\\n\",\r\n    \"import time\\n\",\r\n    \"str = '0'\\n\",\r\n    \"for x in range(0, 10000):\\n\",\r\n    \"    sys.stdout.write(str*100)\\n\",\r\n    \"    sys.stdout.flush()\\n\",\r\n    \"    time.sleep(0.0001)\\n\",\r\n    \"print('hi')\"\r\n   ]\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python [conda env:brick37]\",\r\n   \"language\": \"python\",\r\n   \"name\": \"conda-env-brick37-py\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 3\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython3\",\r\n   \"version\": \"3.7.3\"\r\n  },\r\n  \"papermill\": {\r\n   \"duration\": 16.32673,\r\n   \"end_time\": \"2019-09-06T17:52:44.503019\",\r\n   \"environment_variables\": {},\r\n   \"exception\": null,\r\n   \"input_path\": \"/home/gosuke/tmp/input.ipynb\",\r\n   \"output_path\": \"output.ipynb\",\r\n   \"parameters\": {},\r\n   \"start_time\": \"2019-09-06T17:52:28.176289\",\r\n   \"version\": \"1.1.0\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 2\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/421", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/421/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/421/events", "html_url": "https://github.com/nteract/papermill/issues/421", "id": 489006110, "node_id": "MDU6SXNzdWU0ODkwMDYxMTA=", "number": 421, "title": "Typo in anti-flag for `--report-mode`", "user": {"login": "akx", "id": 58669, "node_id": "MDQ6VXNlcjU4NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/58669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akx", "html_url": "https://github.com/akx", "followers_url": "https://api.github.com/users/akx/followers", "following_url": "https://api.github.com/users/akx/following{/other_user}", "gists_url": "https://api.github.com/users/akx/gists{/gist_id}", "starred_url": "https://api.github.com/users/akx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akx/subscriptions", "organizations_url": "https://api.github.com/users/akx/orgs", "repos_url": "https://api.github.com/users/akx/repos", "events_url": "https://api.github.com/users/akx/events{/privacy}", "received_events_url": "https://api.github.com/users/akx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T08:07:27Z", "updated_at": "2019-09-06T16:35:57Z", "closed_at": "2019-09-06T16:35:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There's a simple typo in the definition of `--report-mode`:\r\n\r\nhttps://github.com/nteract/papermill/blob/01ec212f14c76860f3788f6f92f9be27d5742ea3/papermill/cli.py#L150\r\n\r\nAll other flag values have an \"anti-flag\" of `--no-something`, `--report-mode` has `--not-report-mode` (_not_ vs _no_).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/420", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/420/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/420/events", "html_url": "https://github.com/nteract/papermill/issues/420", "id": 488557675, "node_id": "MDU6SXNzdWU0ODg1NTc2NzU=", "number": 420, "title": "Piping papermill into nbconvert triggers an encoding error on Python 2", "user": {"login": "mwouts", "id": 29915202, "node_id": "MDQ6VXNlcjI5OTE1MjAy", "avatar_url": "https://avatars2.githubusercontent.com/u/29915202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwouts", "html_url": "https://github.com/mwouts", "followers_url": "https://api.github.com/users/mwouts/followers", "following_url": "https://api.github.com/users/mwouts/following{/other_user}", "gists_url": "https://api.github.com/users/mwouts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwouts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwouts/subscriptions", "organizations_url": "https://api.github.com/users/mwouts/orgs", "repos_url": "https://api.github.com/users/mwouts/repos", "events_url": "https://api.github.com/users/mwouts/events{/privacy}", "received_events_url": "https://api.github.com/users/mwouts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-03T11:49:07Z", "updated_at": "2019-09-13T06:52:19Z", "closed_at": "2019-09-13T06:52:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For some notebooks (possibly those with non-ascii characters in the output cells, I will have to confirm), piping papermill into nbconvert triggers an encoding error (stacktrace below).\r\n\r\nMaybe we could replace\r\n\r\nhttps://github.com/nteract/papermill/blob/01ec212f14c76860f3788f6f92f9be27d5742ea3/papermill/iorw.py#L104\r\n\r\nwith\r\n\r\n```python\r\nreturn sys.stdout.write(buf.encode('utf-8'))\r\n```\r\n\r\nThe substitution above fixes my issue locally, but possibly we need to do this conditionally on the type of `buf`.  And maybe a similar fix on the standard input would be appropriate (see also #317). \r\n\r\nI have not been able to extract a MRE yet, but the stacktrace is\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/mwouts/conda/envs/jp2/bin/papermill\", line 10, in <module>\r\n    sys.exit(papermill())\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/papermill/cli.py\", line 254, in papermill\r\n    cwd=cwd,\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/papermill/execute.py\", line 107, in execute_notebook\r\n    write_ipynb(nb, output_path)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/papermill/iorw.py\", line 363, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/home/mwouts/conda/envs/jp2/lib/python2.7/site-packages/papermill/iorw.py\", line 104, in write\r\n    return sys.stdout.write(buf)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/417", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/417/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/417/events", "html_url": "https://github.com/nteract/papermill/issues/417", "id": 484618474, "node_id": "MDU6SXNzdWU0ODQ2MTg0NzQ=", "number": 417, "title": "papermill 1.1.0 attempts to parse second arguments for `-p` and `-r`", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-23T16:41:33Z", "updated_at": "2019-09-21T19:28:17Z", "closed_at": "2019-09-21T19:28:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following command since the release fails:\r\n\r\n`papermill papermill/tests/notebooks/simple_execute.ipynb /tmp/test.ipynb -p 'command_line_args' '-from_date=20190723'`\r\n\r\nas a result of the smarter multi-argument parsing of those options. Fix should be to ignore all click parsing for the second argument to capture at-least-one value for the parameter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/416", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/416/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/416/events", "html_url": "https://github.com/nteract/papermill/issues/416", "id": 484046562, "node_id": "MDU6SXNzdWU0ODQwNDY1NjI=", "number": 416, "title": "Question:  Is there a flag to not preserve the injected-parameters cell in the output Notebook?", "user": {"login": "rwmajor2", "id": 3799165, "node_id": "MDQ6VXNlcjM3OTkxNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3799165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwmajor2", "html_url": "https://github.com/rwmajor2", "followers_url": "https://api.github.com/users/rwmajor2/followers", "following_url": "https://api.github.com/users/rwmajor2/following{/other_user}", "gists_url": "https://api.github.com/users/rwmajor2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwmajor2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwmajor2/subscriptions", "organizations_url": "https://api.github.com/users/rwmajor2/orgs", "repos_url": "https://api.github.com/users/rwmajor2/repos", "events_url": "https://api.github.com/users/rwmajor2/events{/privacy}", "received_events_url": "https://api.github.com/users/rwmajor2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-22T14:59:04Z", "updated_at": "2019-08-22T15:58:13Z", "closed_at": "2019-08-22T15:58:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Passing parameters is extremely useful.  However, if users are passing passwords or sensitive information, this information may not want to be preserved in the output Notebook.  Are there any flags or ideas on how to overcome this?\r\n\r\nMy initial thought is to interrogate the output Notebook (using JSON) and remove the cell with the injected-parameters tag.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/413", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/413/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/413/events", "html_url": "https://github.com/nteract/papermill/issues/413", "id": 480973095, "node_id": "MDU6SXNzdWU0ODA5NzMwOTU=", "number": 413, "title": "using with minio", "user": {"login": "thbeh", "id": 7357830, "node_id": "MDQ6VXNlcjczNTc4MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7357830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thbeh", "html_url": "https://github.com/thbeh", "followers_url": "https://api.github.com/users/thbeh/followers", "following_url": "https://api.github.com/users/thbeh/following{/other_user}", "gists_url": "https://api.github.com/users/thbeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/thbeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thbeh/subscriptions", "organizations_url": "https://api.github.com/users/thbeh/orgs", "repos_url": "https://api.github.com/users/thbeh/repos", "events_url": "https://api.github.com/users/thbeh/events{/privacy}", "received_events_url": "https://api.github.com/users/thbeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-15T03:01:16Z", "updated_at": "2019-08-22T07:53:16Z", "closed_at": "2019-08-19T02:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, how would I use papermill with notebooks in minio? is there a way to pass in endpoint-url?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/410", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/410/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/410/events", "html_url": "https://github.com/nteract/papermill/issues/410", "id": 479192891, "node_id": "MDU6SXNzdWU0NzkxOTI4OTE=", "number": 410, "title": "nbconvert 5.6.0 added an argument to run_cell which breaks papermill<=0.19.1", "user": {"login": "dan-hipschman-od", "id": 48698358, "node_id": "MDQ6VXNlcjQ4Njk4MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/48698358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-hipschman-od", "html_url": "https://github.com/dan-hipschman-od", "followers_url": "https://api.github.com/users/dan-hipschman-od/followers", "following_url": "https://api.github.com/users/dan-hipschman-od/following{/other_user}", "gists_url": "https://api.github.com/users/dan-hipschman-od/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-hipschman-od/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-hipschman-od/subscriptions", "organizations_url": "https://api.github.com/users/dan-hipschman-od/orgs", "repos_url": "https://api.github.com/users/dan-hipschman-od/repos", "events_url": "https://api.github.com/users/dan-hipschman-od/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-hipschman-od/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-09T22:48:42Z", "updated_at": "2019-09-10T16:22:18Z", "closed_at": "2019-09-10T16:22:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nnbconvert 5.6.0 added a `store_history` argument to `run_cell`: https://github.com/jupyter/nbconvert/commit/40989d859da65bb3e3a3c588e5eeb2ff6cfc9cd1#diff-4692660441289779e28a3441f47a8bb0\r\n\r\nIn papermill 0.19.1, [`PapermillExecutePreprocessor.run_cell`](https://github.com/nteract/papermill/blob/0.19.1/papermill/preprocess.py#L98) doesn't have this argument, so when it's called by nbconvert, an exception is raised (this output is from papermill 0.18.2, but it looks like the problem is in 0.19.1 as well):\r\n```\r\nFile \"/opt/miniconda/lib/python3.6/site-packages/papermill/preprocess.py\", line 27, in preprocess\r\nnb, resources = self.papermill_process(nb_man, resources)\r\nFile \"/opt/miniconda/lib/python3.6/site-packages/papermill/preprocess.py\", line 76, in papermill_process\r\nnb.cells[index], resources = self.preprocess_cell(cell, resources, index)\r\nFile \"/opt/miniconda/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py\", line 438, in preprocess_cell\r\nreply, outputs = self.run_cell(cell, cell_index, store_history)\r\nTypeError: run_cell() takes from 2 to 3 positional arguments but 4 were given\r\n```\r\n\r\nIt looks like in papermill 1.0, `PapermillExecutePreprocessor` has changed so this isn't an issue there.\r\n\r\nI solved the problem for myself by pegging the nbconvert version at 5.5.0. Not sure if that's suitable as a general fix for papermill <1.0. It also seems simple to just add `store_history` as a keyword arg to `run_cell`, as that should be backwards compatible with nbconvert 5.5.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/409", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/409/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/409/events", "html_url": "https://github.com/nteract/papermill/issues/409", "id": 478789349, "node_id": "MDU6SXNzdWU0Nzg3ODkzNDk=", "number": 409, "title": "1.1.0 Release", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rgbkrk", "id": 836375, "node_id": "MDQ6VXNlcjgzNjM3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgbkrk", "html_url": "https://github.com/rgbkrk", "followers_url": "https://api.github.com/users/rgbkrk/followers", "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}", "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions", "organizations_url": "https://api.github.com/users/rgbkrk/orgs", "repos_url": "https://api.github.com/users/rgbkrk/repos", "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}", "received_events_url": "https://api.github.com/users/rgbkrk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rgbkrk", "id": 836375, "node_id": "MDQ6VXNlcjgzNjM3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgbkrk", "html_url": "https://github.com/rgbkrk", "followers_url": "https://api.github.com/users/rgbkrk/followers", "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}", "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions", "organizations_url": "https://api.github.com/users/rgbkrk/orgs", "repos_url": "https://api.github.com/users/rgbkrk/repos", "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}", "received_events_url": "https://api.github.com/users/rgbkrk/received_events", "type": "User", "site_admin": false}, {"login": "captainsafia", "id": 1857993, "node_id": "MDQ6VXNlcjE4NTc5OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1857993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/captainsafia", "html_url": "https://github.com/captainsafia", "followers_url": "https://api.github.com/users/captainsafia/followers", "following_url": "https://api.github.com/users/captainsafia/following{/other_user}", "gists_url": "https://api.github.com/users/captainsafia/gists{/gist_id}", "starred_url": "https://api.github.com/users/captainsafia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/captainsafia/subscriptions", "organizations_url": "https://api.github.com/users/captainsafia/orgs", "repos_url": "https://api.github.com/users/captainsafia/repos", "events_url": "https://api.github.com/users/captainsafia/events{/privacy}", "received_events_url": "https://api.github.com/users/captainsafia/received_events", "type": "User", "site_admin": false}, {"login": "willingc", "id": 2680980, "node_id": "MDQ6VXNlcjI2ODA5ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2680980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willingc", "html_url": "https://github.com/willingc", "followers_url": "https://api.github.com/users/willingc/followers", "following_url": "https://api.github.com/users/willingc/following{/other_user}", "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}", "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willingc/subscriptions", "organizations_url": "https://api.github.com/users/willingc/orgs", "repos_url": "https://api.github.com/users/willingc/repos", "events_url": "https://api.github.com/users/willingc/events{/privacy}", "received_events_url": "https://api.github.com/users/willingc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-09T04:23:47Z", "updated_at": "2019-08-16T20:05:32Z", "closed_at": "2019-08-16T20:05:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Going to release 1.1.0 in the next day or two now that nbconvert 5.6.0 is out! If there's any outstanding small items not PR'd / merged that one would like in, please post on the thread. A changelog PR to follow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/408", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/408/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/408/events", "html_url": "https://github.com/nteract/papermill/issues/408", "id": 477951684, "node_id": "MDU6SXNzdWU0Nzc5NTE2ODQ=", "number": 408, "title": "Running papermill inside of virtual environment", "user": {"login": "treuning", "id": 8172408, "node_id": "MDQ6VXNlcjgxNzI0MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8172408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treuning", "html_url": "https://github.com/treuning", "followers_url": "https://api.github.com/users/treuning/followers", "following_url": "https://api.github.com/users/treuning/following{/other_user}", "gists_url": "https://api.github.com/users/treuning/gists{/gist_id}", "starred_url": "https://api.github.com/users/treuning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treuning/subscriptions", "organizations_url": "https://api.github.com/users/treuning/orgs", "repos_url": "https://api.github.com/users/treuning/repos", "events_url": "https://api.github.com/users/treuning/events{/privacy}", "received_events_url": "https://api.github.com/users/treuning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T14:07:07Z", "updated_at": "2019-08-09T13:47:18Z", "closed_at": "2019-08-09T13:47:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run papermill inside of a virtual environment that contains a React webapp and a Python server. I have pip'd papermill into the environment. I am able to run papermill but it errors out on the first import statement importing a custom module:\r\n\r\n```\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-1-ef3f079b4cf7> in <module>()\r\n----> 1 from toolkit import tools\r\n      2 \r\n      3 #STATIC VARIABLES\r\n      4 BASE_URL = \"http://localhost:8080\"\r\n      5 USER_ID = 'admin'\r\n\r\n```\r\nImportError: No module named toolkit\r\n\r\nI saw [Issue 251](https://github.com/nteract/papermill/issues/251) but I am not running conda. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/407", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/407/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/407/events", "html_url": "https://github.com/nteract/papermill/issues/407", "id": 477679997, "node_id": "MDU6SXNzdWU0Nzc2Nzk5OTc=", "number": 407, "title": "papermill CLI executing notebooks exception message return to parent process", "user": {"login": "vinaykumar80", "id": 47435008, "node_id": "MDQ6VXNlcjQ3NDM1MDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/47435008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinaykumar80", "html_url": "https://github.com/vinaykumar80", "followers_url": "https://api.github.com/users/vinaykumar80/followers", "following_url": "https://api.github.com/users/vinaykumar80/following{/other_user}", "gists_url": "https://api.github.com/users/vinaykumar80/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinaykumar80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinaykumar80/subscriptions", "organizations_url": "https://api.github.com/users/vinaykumar80/orgs", "repos_url": "https://api.github.com/users/vinaykumar80/repos", "events_url": "https://api.github.com/users/vinaykumar80/events{/privacy}", "received_events_url": "https://api.github.com/users/vinaykumar80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T02:52:58Z", "updated_at": "2019-08-12T18:46:10Z", "closed_at": "2019-08-12T18:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nWanted to know if papermill CLI can capture exception message on encountering an error within a notebook execution and send this message back to parent process? (Python script using subprocess to call papermill CLI to execute notebook)\r\n\r\nI am currently capturing Zero (Success) or Non-zero (Failure) return code on papermill command execution, but exception message on error would be useful for debugging and to store as Failure reason in execution metadata store.\r\n\r\nPlease let me know if additional details are needed\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/392", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/392/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/392/events", "html_url": "https://github.com/nteract/papermill/issues/392", "id": 462388950, "node_id": "MDU6SXNzdWU0NjIzODg5NTA=", "number": 392, "title": "Option for execute_notebook() to disable expansion of parameters in the input path", "user": {"login": "0anton", "id": 17309924, "node_id": "MDQ6VXNlcjE3MzA5OTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/17309924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0anton", "html_url": "https://github.com/0anton", "followers_url": "https://api.github.com/users/0anton/followers", "following_url": "https://api.github.com/users/0anton/following{/other_user}", "gists_url": "https://api.github.com/users/0anton/gists{/gist_id}", "starred_url": "https://api.github.com/users/0anton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0anton/subscriptions", "organizations_url": "https://api.github.com/users/0anton/orgs", "repos_url": "https://api.github.com/users/0anton/repos", "events_url": "https://api.github.com/users/0anton/events{/privacy}", "received_events_url": "https://api.github.com/users/0anton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-30T10:07:08Z", "updated_at": "2019-07-09T19:29:33Z", "closed_at": "2019-07-09T19:29:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear papermilll maintainers,\r\n\r\nIs it possible to have an option for execute_notebook(), which disables expansion of parameters in the source path?\r\n\r\nI am using parameters in the file name to automatically produce multiple reports stemming from the same source notebook, e.g.:\r\n\r\n```\r\npapermill.execute_notebook('{param}/notebook.ipynb', 'value1/notebook.ipynb',\r\n                                parameters={'param': 'value1'})\r\npapermill.execute_notebook('{param}/notebook.ipynb', 'value2/notebook.ipynb',\r\n                                parameters={'param': 'value2'})\r\n```\r\n                                \r\nI cannot use this pattern with the current version of papermill, because it expands the input notebook name producing:\r\n\r\n```\r\nvalue1/notebook.ipynb -> value1/notebook.ipynb \r\nvalue2/notebook.ipynb -> value2/notebook.ipynb \r\n```\r\n\r\nThis fails because the source notebook does not exists.\r\n\r\nI'd like to have all target reports produced from the single template notebook, which includes parameters in the path:\r\n```\r\n{param}/notebook.ipynb -> value1/notebook.ipynb \r\n{param}/notebook.ipynb -> value2/notebook.ipynb \r\n```\r\n\r\nI cannot do it, because papermill expands parameters in both source and target file.\r\n\r\nMy suggestion is to introduce a bool option _parametrize_input_path_ in _execute_notebook()_, which disables expansion of parameters in the source path, like:\r\n\r\n```\r\npapermill.execute_notebook('{param}/notebook.ipynb', 'value1/notebook.ipynb',\r\n                                parameters={'param': 'value1'}, \r\n                                parametrize_input_path=False)\r\n```\r\n\r\nI include suggested PR to the issue.\r\n\r\nKind regards,\r\nAnton", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/386", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/386/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/386/events", "html_url": "https://github.com/nteract/papermill/issues/386", "id": 460891925, "node_id": "MDU6SXNzdWU0NjA4OTE5MjU=", "number": 386, "title": "Missing instructions for JupyterLab usage", "user": {"login": "duarteocarmo", "id": 26342344, "node_id": "MDQ6VXNlcjI2MzQyMzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/26342344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duarteocarmo", "html_url": "https://github.com/duarteocarmo", "followers_url": "https://api.github.com/users/duarteocarmo/followers", "following_url": "https://api.github.com/users/duarteocarmo/following{/other_user}", "gists_url": "https://api.github.com/users/duarteocarmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/duarteocarmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duarteocarmo/subscriptions", "organizations_url": "https://api.github.com/users/duarteocarmo/orgs", "repos_url": "https://api.github.com/users/duarteocarmo/repos", "events_url": "https://api.github.com/users/duarteocarmo/events{/privacy}", "received_events_url": "https://api.github.com/users/duarteocarmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-26T10:34:33Z", "updated_at": "2019-06-26T20:26:26Z", "closed_at": "2019-06-26T20:03:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think we could add an explanation on how to add tags in JupyterLab. \r\n\r\nThis could be particularly useful for folks now moving to it. \r\n\r\nFor your reference, this is done by editing the metadata section in JupyterLab: \r\n\r\n![image](https://user-images.githubusercontent.com/26342344/60173245-93e91180-980e-11e9-8c0a-82b2c8ab5e53.png)\r\n\r\nI suggest we add a note in the documentation. What do you think? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/382", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/382/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/382/events", "html_url": "https://github.com/nteract/papermill/issues/382", "id": 460070191, "node_id": "MDU6SXNzdWU0NjAwNzAxOTE=", "number": 382, "title": "missing documentation for conda kernels", "user": {"login": "casperdcl", "id": 10780059, "node_id": "MDQ6VXNlcjEwNzgwMDU5", "avatar_url": "https://avatars0.githubusercontent.com/u/10780059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casperdcl", "html_url": "https://github.com/casperdcl", "followers_url": "https://api.github.com/users/casperdcl/followers", "following_url": "https://api.github.com/users/casperdcl/following{/other_user}", "gists_url": "https://api.github.com/users/casperdcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/casperdcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casperdcl/subscriptions", "organizations_url": "https://api.github.com/users/casperdcl/orgs", "repos_url": "https://api.github.com/users/casperdcl/repos", "events_url": "https://api.github.com/users/casperdcl/events{/privacy}", "received_events_url": "https://api.github.com/users/casperdcl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1039443629, "node_id": "MDU6TGFiZWwxMDM5NDQzNjI5", "url": "https://api.github.com/repos/nteract/papermill/labels/docs", "name": "docs", "color": "0a80c9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "casperdcl", "id": 10780059, "node_id": "MDQ6VXNlcjEwNzgwMDU5", "avatar_url": "https://avatars0.githubusercontent.com/u/10780059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casperdcl", "html_url": "https://github.com/casperdcl", "followers_url": "https://api.github.com/users/casperdcl/followers", "following_url": "https://api.github.com/users/casperdcl/following{/other_user}", "gists_url": "https://api.github.com/users/casperdcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/casperdcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casperdcl/subscriptions", "organizations_url": "https://api.github.com/users/casperdcl/orgs", "repos_url": "https://api.github.com/users/casperdcl/repos", "events_url": "https://api.github.com/users/casperdcl/events{/privacy}", "received_events_url": "https://api.github.com/users/casperdcl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "casperdcl", "id": 10780059, "node_id": "MDQ6VXNlcjEwNzgwMDU5", "avatar_url": "https://avatars0.githubusercontent.com/u/10780059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casperdcl", "html_url": "https://github.com/casperdcl", "followers_url": "https://api.github.com/users/casperdcl/followers", "following_url": "https://api.github.com/users/casperdcl/following{/other_user}", "gists_url": "https://api.github.com/users/casperdcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/casperdcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casperdcl/subscriptions", "organizations_url": "https://api.github.com/users/casperdcl/orgs", "repos_url": "https://api.github.com/users/casperdcl/repos", "events_url": "https://api.github.com/users/casperdcl/events{/privacy}", "received_events_url": "https://api.github.com/users/casperdcl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-24T20:02:58Z", "updated_at": "2019-06-27T16:38:03Z", "closed_at": "2019-06-26T17:34:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "related to #251/#366, the documentation (https://papermill.readthedocs.io/en/latest/troubleshooting.html) also needs to reference jupyter/jupyter/issues/245 i.e.\r\n\r\n```bash\r\nsource activate analysis_1\r\npython -m ipykernel install --user --name analysis_1  # <--- this should be in the docs\r\npapermill ... -k analysis_1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/379", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/379/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/379/events", "html_url": "https://github.com/nteract/papermill/issues/379", "id": 455946692, "node_id": "MDU6SXNzdWU0NTU5NDY2OTI=", "number": 379, "title": "ImportError when Running Code off python.exe", "user": {"login": "GXAB", "id": 24641719, "node_id": "MDQ6VXNlcjI0NjQxNzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/24641719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GXAB", "html_url": "https://github.com/GXAB", "followers_url": "https://api.github.com/users/GXAB/followers", "following_url": "https://api.github.com/users/GXAB/following{/other_user}", "gists_url": "https://api.github.com/users/GXAB/gists{/gist_id}", "starred_url": "https://api.github.com/users/GXAB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GXAB/subscriptions", "organizations_url": "https://api.github.com/users/GXAB/orgs", "repos_url": "https://api.github.com/users/GXAB/repos", "events_url": "https://api.github.com/users/GXAB/events{/privacy}", "received_events_url": "https://api.github.com/users/GXAB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T20:50:29Z", "updated_at": "2019-07-05T20:17:35Z", "closed_at": "2019-07-05T20:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen I run the following code it does as intended.\r\n```\r\nimport papermill as pm\r\npm.execute_notebook('test.ipynb',\r\n                    'test.ipynb',\r\n                    parameters=dict())\r\n```\r\nHowever if I run the code off cmd like so:\r\n`C:\\Users\\me> python.exe code_above.py`\r\nI get\r\n```\r\nraise ImportError: 'nbconvert --execute' requires the jupyter_client package: 'pip install jupyter_client'\r\n```\r\nSo went to install the client but it was already installed in my environment. I uninstalled and reinstalled with the same error.\r\nThe reason why I need python.exe to run it is because I am hoping to put it in windows scheduler.\r\n\r\nAny help is appreciated.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/372", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/372/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/372/events", "html_url": "https://github.com/nteract/papermill/issues/372", "id": 449344016, "node_id": "MDU6SXNzdWU0NDkzNDQwMTY=", "number": 372, "title": "Allow accepting notebooks on stdin", "user": {"login": "rgbkrk", "id": 836375, "node_id": "MDQ6VXNlcjgzNjM3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgbkrk", "html_url": "https://github.com/rgbkrk", "followers_url": "https://api.github.com/users/rgbkrk/followers", "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}", "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions", "organizations_url": "https://api.github.com/users/rgbkrk/orgs", "repos_url": "https://api.github.com/users/rgbkrk/repos", "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}", "received_events_url": "https://api.github.com/users/rgbkrk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-28T15:43:32Z", "updated_at": "2019-06-06T16:42:40Z", "closed_at": "2019-06-06T16:42:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As mentioned in #243, it would be nice to be able to pipe a notebook to papermill by allowing input on stdin. Use case:\r\n\r\n```\r\n$ someCommand | papermill - s3://location/\r\n```\r\n\r\nThis is [fairly common in *nix land to use `-` to denote stdin as the input file](https://unix.stackexchange.com/a/16364). \r\n\r\ncc @mwouts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/371", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/371/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/371/events", "html_url": "https://github.com/nteract/papermill/issues/371", "id": 448763153, "node_id": "MDU6SXNzdWU0NDg3NjMxNTM=", "number": 371, "title": "How to parameterise a Python dictionary in papermill?", "user": {"login": "kebab-mai-haddi", "id": 13495855, "node_id": "MDQ6VXNlcjEzNDk1ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13495855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kebab-mai-haddi", "html_url": "https://github.com/kebab-mai-haddi", "followers_url": "https://api.github.com/users/kebab-mai-haddi/followers", "following_url": "https://api.github.com/users/kebab-mai-haddi/following{/other_user}", "gists_url": "https://api.github.com/users/kebab-mai-haddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kebab-mai-haddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kebab-mai-haddi/subscriptions", "organizations_url": "https://api.github.com/users/kebab-mai-haddi/orgs", "repos_url": "https://api.github.com/users/kebab-mai-haddi/repos", "events_url": "https://api.github.com/users/kebab-mai-haddi/events{/privacy}", "received_events_url": "https://api.github.com/users/kebab-mai-haddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-27T09:43:05Z", "updated_at": "2019-06-07T18:56:42Z", "closed_at": "2019-06-07T13:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to pass on all the parameters in one variable. To make this happen, I am passing a dictionary in my Python client for Papermill using:\r\n```\r\nparams = {\"aviral\":\"srivastava\"}\r\npm.execute_notebook( 'path/to/input.ipynb', 'path/to/output.ipynb', parameters = params )\r\n```\r\n\r\nNow, I want to do run the corresponding command from bash. In the [document](https://github.com/nteract/papermill) it states: \r\n```\r\npapermill local/input.ipynb s3://bkt/output.ipynb -p alpha 0.6 -p l1_ratio 0.1\r\n```\r\nBut nowhere is given how to pass on a dictionary.\r\n\r\nI tried many permutations and combinations like:\r\n\r\n```papermill test_params.ipynb params_output.ipynb -p params {\"aviral\":\"srivastava\"}```\r\n\r\n```papermill test_params.ipynb params_output.ipynb -p params '{\"aviral\":\"srivastava\"}'```\r\n\r\nI also read to pass a `dict` in the format: `'{\"aviral\":\"srivastava\"}'` and then json.loads would do the work. But I am not having the liberty for converting the input. It has to be used right away in the script.\r\n\r\nJust a minimal script to actually check the type of the variable passed:\r\n```\r\nparams = {} # I tag this with `parameter`\r\nprint(type(params))\r\nprint(params)\r\n```\r\n\r\nYes, I see the params variable got changed when running with papermill but the value passed is a complete string.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/370", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/370/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/370/events", "html_url": "https://github.com/nteract/papermill/issues/370", "id": 448736284, "node_id": "MDU6SXNzdWU0NDg3MzYyODQ=", "number": 370, "title": "Move the \"ipython\" requirement to requirements-dev.txt", "user": {"login": "tsvikas", "id": 19141733, "node_id": "MDQ6VXNlcjE5MTQxNzMz", "avatar_url": "https://avatars2.githubusercontent.com/u/19141733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsvikas", "html_url": "https://github.com/tsvikas", "followers_url": "https://api.github.com/users/tsvikas/followers", "following_url": "https://api.github.com/users/tsvikas/following{/other_user}", "gists_url": "https://api.github.com/users/tsvikas/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsvikas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsvikas/subscriptions", "organizations_url": "https://api.github.com/users/tsvikas/orgs", "repos_url": "https://api.github.com/users/tsvikas/repos", "events_url": "https://api.github.com/users/tsvikas/events{/privacy}", "received_events_url": "https://api.github.com/users/tsvikas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-27T08:43:23Z", "updated_at": "2019-07-05T20:18:29Z", "closed_at": "2019-07-05T20:18:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe that, to load, change, execute & save jupyter notebooks, the dependency on `ipython` is unnecessary.\r\n\r\nIn my checks, `nbformat`, `nbconvert` & `jupyter_client` are required, but `ipython` is not. Since this package has a bunch of dependencies itself, removing it will allow much leaner dependency tree.\r\n\r\nHowever, some of the notebooks that are used in the tests are importing `IPython`, so they need to run in an environment that contains `ipython`. As far as I know, the best practice to do that is to add `ipython` to `requirement-dev.txt` (alternatively, to create an optional extra dependency `papermill[tests]`, or to remove `IPython` from the test notebooks).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/363", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/363/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/363/events", "html_url": "https://github.com/nteract/papermill/issues/363", "id": 442773994, "node_id": "MDU6SXNzdWU0NDI3NzM5OTQ=", "number": 363, "title": "Provide a list parameter in the command line", "user": {"login": "Ezibenroc", "id": 8900834, "node_id": "MDQ6VXNlcjg5MDA4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8900834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezibenroc", "html_url": "https://github.com/Ezibenroc", "followers_url": "https://api.github.com/users/Ezibenroc/followers", "following_url": "https://api.github.com/users/Ezibenroc/following{/other_user}", "gists_url": "https://api.github.com/users/Ezibenroc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezibenroc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezibenroc/subscriptions", "organizations_url": "https://api.github.com/users/Ezibenroc/orgs", "repos_url": "https://api.github.com/users/Ezibenroc/repos", "events_url": "https://api.github.com/users/Ezibenroc/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezibenroc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T15:25:22Z", "updated_at": "2019-11-06T16:39:26Z", "closed_at": "2019-11-06T16:39:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to pass a list as parameter value.\r\nCurrently, this can be done with a yaml file:\r\n```yaml\r\nmy_list:\r\n    - abc\r\n    - def\r\n    - ghi\r\n```\r\nOr the yaml code can be passed in the command line:\r\n```shell\r\npapermill input.ipynb output.ipynb -y '{my_list:[abc,def,ghi]}'\r\n```\r\nHowever, I would like to achieve such behavior with something like this (a list of values separated by spaces):\r\n```shell\r\npapermill input.ipynb output.ipynb -p my_list abc def ghi\r\n```\r\n\r\n----\r\n\r\nMy use case is that I often have notebooks that load a bunch of CSV files into a large pandas dataframe. I would like to use file globbing like this:\r\n```shell\r\npapermill input.ipynb output.ipynb -p my_files some/path/*.csv another/path/*.csv\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/362", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/362/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/362/events", "html_url": "https://github.com/nteract/papermill/issues/362", "id": 442367723, "node_id": "MDU6SXNzdWU0NDIzNjc3MjM=", "number": 362, "title": "AttributeError: 'PapermillExecutePreprocessor' object has no attribute 'set_widgets_metadata'", "user": {"login": "b0noI", "id": 554101, "node_id": "MDQ6VXNlcjU1NDEwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/554101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b0noI", "html_url": "https://github.com/b0noI", "followers_url": "https://api.github.com/users/b0noI/followers", "following_url": "https://api.github.com/users/b0noI/following{/other_user}", "gists_url": "https://api.github.com/users/b0noI/gists{/gist_id}", "starred_url": "https://api.github.com/users/b0noI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b0noI/subscriptions", "organizations_url": "https://api.github.com/users/b0noI/orgs", "repos_url": "https://api.github.com/users/b0noI/repos", "events_url": "https://api.github.com/users/b0noI/events{/privacy}", "received_events_url": "https://api.github.com/users/b0noI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-09T18:18:41Z", "updated_at": "2019-05-09T22:11:07Z", "closed_at": "2019-05-09T22:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ papermill --version\r\n1.0.0 from /opt/anaconda3/lib/python3.7/site-packages/papermill/cli.py (3.7.3)\r\n\r\nNotebook executing: https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson3-head-pose.ipynb\r\n\r\n```bash\r\n~/tutorials/fastai/course-v3/nbs/dl1$ papermill ./lesson3-head-pose.ipynb ./lesson3-head-pose-out.ipynb\r\nInput Notebook:  ./lesson3-head-pose.ipynb\r\nOutput Notebook: ./lesson3-head-pose-out.ipynb\r\n 69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                   | 20/29 [03:51<02:05, 13.93s/it]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 29/29 [12:06<00:00, 25.06s/it]\r\nTraceback (most recent call last):\r\n  File \"/opt/anaconda3/bin/papermill\", line 10, in <module>\r\n    sys.exit(papermill())\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/execute.py\", line 93, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/engines.py\", line 57, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/engines.py\", line 309, in execute_notebook\r\n    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/engines.py\", line 365, in execute_managed_notebook\r\n    preprocessor.preprocess(nb_man, kwargs)\r\n  File \"/opt/anaconda3/lib/python3.7/site-packages/papermill/preprocess.py\", line 24, in preprocess\r\n    self.set_widgets_metadata()\r\nAttributeError: 'PapermillExecutePreprocessor' object has no attribute 'set_widgets_metadata'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/361", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/361/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/361/events", "html_url": "https://github.com/nteract/papermill/issues/361", "id": 441763550, "node_id": "MDU6SXNzdWU0NDE3NjM1NTA=", "number": 361, "title": "How to connect papermill to a remote server?", "user": {"login": "kebab-mai-haddi", "id": 13495855, "node_id": "MDQ6VXNlcjEzNDk1ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13495855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kebab-mai-haddi", "html_url": "https://github.com/kebab-mai-haddi", "followers_url": "https://api.github.com/users/kebab-mai-haddi/followers", "following_url": "https://api.github.com/users/kebab-mai-haddi/following{/other_user}", "gists_url": "https://api.github.com/users/kebab-mai-haddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kebab-mai-haddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kebab-mai-haddi/subscriptions", "organizations_url": "https://api.github.com/users/kebab-mai-haddi/orgs", "repos_url": "https://api.github.com/users/kebab-mai-haddi/repos", "events_url": "https://api.github.com/users/kebab-mai-haddi/events{/privacy}", "received_events_url": "https://api.github.com/users/kebab-mai-haddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-08T14:25:29Z", "updated_at": "2019-06-07T20:36:44Z", "closed_at": "2019-06-07T13:34:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to run a `.ipynb` script via papermill on a remote server where I have installed certain dependencies. It should be noted that these dependencies are installed in an environment and that I have to provide as a kernel to my Python(Papermill) call for executing the script.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/359", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/359/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/359/events", "html_url": "https://github.com/nteract/papermill/issues/359", "id": 441634522, "node_id": "MDU6SXNzdWU0NDE2MzQ1MjI=", "number": 359, "title": "Unable to install \"all\" dependencies of papermill", "user": {"login": "kebab-mai-haddi", "id": 13495855, "node_id": "MDQ6VXNlcjEzNDk1ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13495855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kebab-mai-haddi", "html_url": "https://github.com/kebab-mai-haddi", "followers_url": "https://api.github.com/users/kebab-mai-haddi/followers", "following_url": "https://api.github.com/users/kebab-mai-haddi/following{/other_user}", "gists_url": "https://api.github.com/users/kebab-mai-haddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kebab-mai-haddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kebab-mai-haddi/subscriptions", "organizations_url": "https://api.github.com/users/kebab-mai-haddi/orgs", "repos_url": "https://api.github.com/users/kebab-mai-haddi/repos", "events_url": "https://api.github.com/users/kebab-mai-haddi/events{/privacy}", "received_events_url": "https://api.github.com/users/kebab-mai-haddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-08T09:19:25Z", "updated_at": "2019-05-08T14:18:57Z", "closed_at": "2019-05-08T14:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a command: \r\n```\r\npip install papermill[all]\r\n```\r\nand here's the traceback:\r\n```\r\nzsh: no matches found: papermill[all]\r\n```\r\nAlthough, I am able to install papermill.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/358", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/358/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/358/events", "html_url": "https://github.com/nteract/papermill/issues/358", "id": 441249724, "node_id": "MDU6SXNzdWU0NDEyNDk3MjQ=", "number": 358, "title": "Getting KeyError: 'kernelspec' when running from Airflow using S3 as input and output paths", "user": {"login": "kebab-mai-haddi", "id": 13495855, "node_id": "MDQ6VXNlcjEzNDk1ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13495855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kebab-mai-haddi", "html_url": "https://github.com/kebab-mai-haddi", "followers_url": "https://api.github.com/users/kebab-mai-haddi/followers", "following_url": "https://api.github.com/users/kebab-mai-haddi/following{/other_user}", "gists_url": "https://api.github.com/users/kebab-mai-haddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kebab-mai-haddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kebab-mai-haddi/subscriptions", "organizations_url": "https://api.github.com/users/kebab-mai-haddi/orgs", "repos_url": "https://api.github.com/users/kebab-mai-haddi/repos", "events_url": "https://api.github.com/users/kebab-mai-haddi/events{/privacy}", "received_events_url": "https://api.github.com/users/kebab-mai-haddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T14:00:07Z", "updated_at": "2019-05-27T09:40:11Z", "closed_at": "2019-05-27T09:40:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "While running the python client command from Airflow and using the S3 paths as input and output, Kerncel spec error raises which is not understandable.\r\n\r\nReference: https://stackoverflow.com/questions/56024237/how-to-avoid-keyerror-named-kernelspec-in-papermill", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/348", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/348/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/348/events", "html_url": "https://github.com/nteract/papermill/issues/348", "id": 437973548, "node_id": "MDU6SXNzdWU0Mzc5NzM1NDg=", "number": 348, "title": "mybinder.org build broken because of setup.py and pyproject.toml presence", "user": {"login": "betatim", "id": 1448859, "node_id": "MDQ6VXNlcjE0NDg4NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1448859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/betatim", "html_url": "https://github.com/betatim", "followers_url": "https://api.github.com/users/betatim/followers", "following_url": "https://api.github.com/users/betatim/following{/other_user}", "gists_url": "https://api.github.com/users/betatim/gists{/gist_id}", "starred_url": "https://api.github.com/users/betatim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/betatim/subscriptions", "organizations_url": "https://api.github.com/users/betatim/orgs", "repos_url": "https://api.github.com/users/betatim/repos", "events_url": "https://api.github.com/users/betatim/events{/privacy}", "received_events_url": "https://api.github.com/users/betatim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-27T18:56:56Z", "updated_at": "2019-04-27T22:30:51Z", "closed_at": "2019-04-27T22:30:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The build on mybinder.org (via repo2docker) is broken :-(\r\n\r\nThe error I see is:\r\n\r\n> ERROR: Error installing 'file:///home/jovyan (from -r binder/requirements.txt (line 1))': editable mode is not supported for pyproject.toml-style projects. pip is processing this project as pyproject.toml-style because it has a pyproject.toml file. Since the project has a setup.py and the pyproject.toml has no \"build-backend\" key for the \"build_system\" value, you may pass --no-use-pep517 to opt out of pyproject.toml-style processing. See PEP 517 for details on pyproject.toml-style projects.\r\n\r\nI think this broke when we upgraded repo2docker to use a modern version of pip (v19.0.3 or some such), before it was v18.\r\n\r\nMaybe now there is a 1.0.0 release we can install from PyPI instead of from the repo? Or figure out what additional arguments need passing to `pip` to sort out the competition between `setup.py` and `pyproject.toml`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/346", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/346/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/346/events", "html_url": "https://github.com/nteract/papermill/issues/346", "id": 436262202, "node_id": "MDU6SXNzdWU0MzYyNjIyMDI=", "number": 346, "title": "How to change which jupyter executed installed?", "user": {"login": "halilduygulu", "id": 4080005, "node_id": "MDQ6VXNlcjQwODAwMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4080005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halilduygulu", "html_url": "https://github.com/halilduygulu", "followers_url": "https://api.github.com/users/halilduygulu/followers", "following_url": "https://api.github.com/users/halilduygulu/following{/other_user}", "gists_url": "https://api.github.com/users/halilduygulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/halilduygulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halilduygulu/subscriptions", "organizations_url": "https://api.github.com/users/halilduygulu/orgs", "repos_url": "https://api.github.com/users/halilduygulu/repos", "events_url": "https://api.github.com/users/halilduygulu/events{/privacy}", "received_events_url": "https://api.github.com/users/halilduygulu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T15:48:41Z", "updated_at": "2019-04-24T07:59:29Z", "closed_at": "2019-04-24T07:59:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for this great project. \r\nI have a question that I could not figure out by reading the code. Basically I am trying to run papermill in the AWS Sagemaker instance and it only runs the default kernel because jupyter executable sees that location. Then I got sklearn not found errors even if I specifiy --kernel for papermill correctly. \r\n\r\nDo you know if I can force papermill to use a jupyter in a specific path if there are multiple jupyters installed?\r\n\r\n>sh-4.2$ which jupyter\r\n/home/ec2-user/anaconda3/envs/JupyterSystemEnv/bin/jupyter \r\nsh-4.2$ find . -name jupyter\r\n./.cache/yarn/v2/npm-@jupyterlab/theming-0.9.0-7c165542d60ee3d2e266cc596e5aae1a100387b3/style/icons/jupyter\r\nfind: ./SageMaker/lost+found': Permission denied\r\n./.local/share/jupyter\r\n./anaconda2/share/jupyter\r\n./anaconda2/bin/jupyter\r\n./anaconda2/etc/jupyter\r\n./anaconda2/pkgs/widgetsnbextension-3.2.1-py27_0/share/jupyter\r\n./anaconda2/pkgs/widgetsnbextension-3.2.1-py27_0/etc/jupyter\r\n./anaconda2/pkgs/ipykernel-4.8.2-py27_0/share/jupyter\r\n./anaconda2/pkgs/_ipyw_jlab_nb_ext_conf-0.1.0-py27h08a7f0c_0/etc/jupyter\r\n./anaconda2/pkgs/jupyter_core-4.4.0-py27h345911c_0/bin/jupyter\r\n./anaconda2/pkgs/jupyterlab-0.32.1-py27_0/share/jupyter\r\n./anaconda2/pkgs/jupyterlab-0.32.1-py27_0/etc/jupyter\r\n./anaconda3/share/jupyter\r\n./anaconda3/bin/jupyter\r\n./anaconda3/envs/pytorch_p27/share/jupyter\r\n./anaconda3/envs/pytorch_p27/bin/jupyter\r\n./anaconda3/envs/pytorch_p27/etc/jupyter\r\n./anaconda3/envs/pytorch_p36/share/jupyter\r\n./anaconda3/envs/pytorch_p36/bin/jupyter\r\n./anaconda3/envs/pytorch_p36/etc/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p27/share/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p27/bin/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p27/etc/jupyter\r\n./anaconda3/envs/mxnet_p27/share/jupyter\r\n./anaconda3/envs/mxnet_p27/bin/jupyter\r\n./anaconda3/envs/mxnet_p27/etc/jupyter\r\n./anaconda3/envs/tensorflow_p27/share/jupyter\r\n./anaconda3/envs/tensorflow_p27/bin/jupyter\r\n./anaconda3/envs/tensorflow_p27/etc/jupyter\r\n./anaconda3/envs/JupyterSystemEnv/share/jupyter\r\n./anaconda3/envs/JupyterSystemEnv/share/jupyter/lab/staging/node_modules/@jupyterlab/theming/style/icons/jupyter\r\n./anaconda3/envs/JupyterSystemEnv/bin/jupyter\r\n./anaconda3/envs/JupyterSystemEnv/etc/jupyter\r\n./anaconda3/envs/chainer_p27/share/jupyter\r\n./anaconda3/envs/chainer_p27/bin/jupyter\r\n./anaconda3/envs/chainer_p27/etc/jupyter\r\n./anaconda3/envs/tensorflow_p36/share/jupyter\r\n./anaconda3/envs/tensorflow_p36/bin/jupyter\r\n./anaconda3/envs/tensorflow_p36/etc/jupyter\r\n./anaconda3/envs/python3/share/jupyter\r\n./anaconda3/envs/python3/bin/jupyter\r\n./anaconda3/envs/python3/etc/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p36/share/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p36/bin/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p36/etc/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p36/share/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p36/bin/jupyter\r\n./anaconda3/envs/amazonei_mxnet_p36/etc/jupyter\r\n./anaconda3/envs/chainer_p36/share/jupyter\r\n./anaconda3/envs/chainer_p36/bin/jupyter\r\n./anaconda3/envs/chainer_p36/etc/jupyter\r\n./anaconda3/envs/python2/share/jupyter\r\n./anaconda3/envs/python2/bin/jupyter\r\n./anaconda3/envs/python2/etc/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p27/share/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p27/bin/jupyter\r\n./anaconda3/envs/amazonei_tensorflow_p27/etc/jupyter\r\n./anaconda3/envs/mxnet_p36/share/jupyter\r\n./anaconda3/envs/mxnet_p36/bin/jupyter\r\n./anaconda3/envs/mxnet_p36/etc/jupyter\r\n./anaconda3/etc/jupyter\r\n./anaconda3/pkgs/jupyter_core-4.4.0-py36h7c827e3_0/bin/jupyter\r\n./anaconda3/pkgs/jupyter_core-4.4.0-py36_0/bin/jupyter\r\n./anaconda3/pkgs/nb_conda-2.2.1-py35_0/share/jupyter\r\n./anaconda3/pkgs/nb_conda-2.2.1-py27_2/share/jupyter\r\n./anaconda3/pkgs/widgetsnbextension-3.4.2-py36_0/share/jupyter\r\n./anaconda3/pkgs/widgetsnbextension-3.4.2-py36_0/etc/jupyter\r\n./anaconda3/pkgs/jupyterlab-0.32.1-py36_0/share/jupyter\r\n./anaconda3/pkgs/jupyterlab-0.32.1-py36_0/etc/jupyter\r\n./anaconda3/pkgs/nb_conda-2.2.1-py36_2/share/jupyter\r\n./anaconda3/pkgs/ipykernel-5.1.0-pyh24bf2e0_0/share/jupyter\r\n./anaconda3/pkgs/ipykernel-4.8.2-py36_0/share/jupyter\r\n./anaconda3/pkgs/plotly-3.7.1-py_0/share/jupyter\r\n./anaconda3/pkgs/plotly-3.7.1-py_0/etc/jupyter\r\n./anaconda3/pkgs/_ipyw_jlab_nb_ext_conf-0.1.0-py36he11e457_0/etc/jupyter\r\n./anaconda3/pkgs/ipykernel-5.1.0-py36h39e3cac_0/share/jupyter\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/345", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/345/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/345/events", "html_url": "https://github.com/nteract/papermill/issues/345", "id": 435899947, "node_id": "MDU6SXNzdWU0MzU4OTk5NDc=", "number": 345, "title": "Passing dates through YAML", "user": {"login": "stevenmanton", "id": 3666725, "node_id": "MDQ6VXNlcjM2NjY3MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3666725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenmanton", "html_url": "https://github.com/stevenmanton", "followers_url": "https://api.github.com/users/stevenmanton/followers", "following_url": "https://api.github.com/users/stevenmanton/following{/other_user}", "gists_url": "https://api.github.com/users/stevenmanton/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenmanton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenmanton/subscriptions", "organizations_url": "https://api.github.com/users/stevenmanton/orgs", "repos_url": "https://api.github.com/users/stevenmanton/repos", "events_url": "https://api.github.com/users/stevenmanton/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenmanton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T21:27:48Z", "updated_at": "2019-05-06T17:24:23Z", "closed_at": "2019-05-06T17:24:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into a bug when passing dates as a parameter into a notebook through the YAML configuration. \r\n\r\nAs a simple example, suppose I have the following parameter in a notebook:\r\n![image](https://user-images.githubusercontent.com/3666725/56532013-e1dd5280-6509-11e9-97e6-9819781978bc.png)\r\n\r\nThis method of executing the notebook works fine:\r\n```\r\n$ papermill papermill-date.ipynb blah.ipynb -p a_date \"2019-01-01\"\r\nInput Notebook:  /tmp/papermill-date.ipynb\r\nOutput Notebook: blah.ipynb\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:02<00:00,  1.24s/it]\r\n```\r\n\r\nHowever, passing the parameterization through YAML leads to the following exception:\r\n```\r\n$ papermill papermill-date.ipynb blah.ipynb -y \"a_date: 2019-01-01\"\r\n/Users/santon/tools/python/lib/python3.7/site-packages/papermill/cli.py:148: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n  parameters_final.update(yaml.load(params))\r\nInput Notebook:  papermill-date.ipynb\r\nOutput Notebook: blah.ipynb\r\nInput notebook does not contain a cell with tag 'parameters'\r\n  0%|                                                      | 0/2 [00:00<?, ?it/s]Traceback (most recent call last):\r\n  File \"/Users/santon/tools/python/bin/papermill\", line 10, in <module>\r\n    sys.exit(papermill())\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/execute.py\", line 96, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 56, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 294, in execute_notebook\r\n    nb_man.notebook_start()\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 174, in notebook_start\r\n    self.save()\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/papermill/iorw.py\", line 337, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/nbformat/__init__.py\", line 111, in writes\r\n    return versions[version].writes_json(nb, **kwargs)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/nbformat/v4/nbjson.py\", line 58, in writes\r\n    return py3compat.cast_unicode_py2(json.dumps(nb, **kwargs), 'utf-8')\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 201, in encode\r\n    chunks = list(chunks)\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 431, in _iterencode\r\n    yield from _iterencode_dict(o, _current_indent_level)\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  [Previous line repeated 1 more time]\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 438, in _iterencode\r\n    o = _default(o)\r\n  File \"/Users/santon/tools/python/lib/python3.7/site-packages/nbformat/v4/nbjson.py\", line 22, in default\r\n    return json.JSONEncoder.default(self, obj)\r\n  File \"/Users/santon/tools/python/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type date is not JSON serializable\r\n```\r\n\r\nQuoting the YAML seems to work as well:\r\n```\r\n$ papermill papermill-date.ipynb blah.ipynb -y \"a_date: '2019-01-01'\"\r\n/Users/santon/tools/python/lib/python3.7/site-packages/papermill/cli.py:148: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n  parameters_final.update(yaml.load(params))\r\nInput Notebook:  papermill-date.ipynb\r\nOutput Notebook: blah.ipynb\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:03<00:00,  1.72s/it]\r\n```\r\n\r\nAny thoughts on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/344", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/344/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/344/events", "html_url": "https://github.com/nteract/papermill/issues/344", "id": 433620801, "node_id": "MDU6SXNzdWU0MzM2MjA4MDE=", "number": 344, "title": "How do you handle notebook errors when executing it with Papermill ?", "user": {"login": "fx86", "id": 1297203, "node_id": "MDQ6VXNlcjEyOTcyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1297203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fx86", "html_url": "https://github.com/fx86", "followers_url": "https://api.github.com/users/fx86/followers", "following_url": "https://api.github.com/users/fx86/following{/other_user}", "gists_url": "https://api.github.com/users/fx86/gists{/gist_id}", "starred_url": "https://api.github.com/users/fx86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fx86/subscriptions", "organizations_url": "https://api.github.com/users/fx86/orgs", "repos_url": "https://api.github.com/users/fx86/repos", "events_url": "https://api.github.com/users/fx86/events{/privacy}", "received_events_url": "https://api.github.com/users/fx86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T07:17:40Z", "updated_at": "2019-04-23T13:19:13Z", "closed_at": "2019-04-23T13:19:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do you handle errors in notebooks that Papermill executes ? \r\n\r\nFor example, I added an `assert False` statement in a notebook and executed it with Papermill. I was hoping to see an error flag with a graceful shutdown as an output from the `Papermill.execute` call but instead I got an error trace. \r\n\r\n![image](https://user-images.githubusercontent.com/1297203/56189072-b4ddfb00-6044-11e9-83ae-a202f45e412b.png)\r\n\r\nIt would be great to get access to the exception object (or the exception content at least) raised, with which I could alter the post-error behaviour of the papermill job. Is there a way to do this  currently ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/342", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/342/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/342/events", "html_url": "https://github.com/nteract/papermill/issues/342", "id": 431000246, "node_id": "MDU6SXNzdWU0MzEwMDAyNDY=", "number": 342, "title": "Set minimum gcsfs version", "user": {"login": "jacobtomlinson", "id": 1610850, "node_id": "MDQ6VXNlcjE2MTA4NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1610850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobtomlinson", "html_url": "https://github.com/jacobtomlinson", "followers_url": "https://api.github.com/users/jacobtomlinson/followers", "following_url": "https://api.github.com/users/jacobtomlinson/following{/other_user}", "gists_url": "https://api.github.com/users/jacobtomlinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobtomlinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobtomlinson/subscriptions", "organizations_url": "https://api.github.com/users/jacobtomlinson/orgs", "repos_url": "https://api.github.com/users/jacobtomlinson/repos", "events_url": "https://api.github.com/users/jacobtomlinson/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobtomlinson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-09T14:29:25Z", "updated_at": "2019-04-27T18:13:29Z", "closed_at": "2019-04-27T18:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like there is a problem with using papermill 0.19.1 with gcsfs 0.1.1. Due to unpinned versions it is possible to end up in this state.\r\n\r\nIt would be good to update the dependencies to require `gcsfs>=0.2.1`.\r\n\r\n## Minimum reproducable example\r\n\r\n```\r\n$ conda create -n papermill python=3.6 dask==1.1.5 papermill==0.19.1 gcsfs==0.1.1 -y\r\n\r\n$ conda activate papermill\r\n\r\n(papermill) $ python -c 'import papermill'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/papermill/__init__.py\", line 5, in <module>\r\n    from .api import display, record, read_notebook, read_notebooks\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/papermill/api.py\", line 17, in <module>\r\n    from .iorw import load_notebook_node, list_notebook_files\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 47, in <module>\r\n    from gcsfs import GCSFileSystem\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/gcsfs/__init__.py\", line 4, in <module>\r\n    from .dask_link import register as register_dask\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/gcsfs/dask_link.py\", line 56, in <module>\r\n    register()\r\n  File \"/home/jovyan/.local/share/conda/envs/papermill/lib/python3.6/site-packages/gcsfs/dask_link.py\", line 16, in register\r\n    class DaskGCSFileSystem(GCSFileSystem, dask.bytes.core.FileSystem):\r\nAttributeError: module 'dask.bytes.core' has no attribute 'FileSystem'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/337", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/337/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/337/events", "html_url": "https://github.com/nteract/papermill/issues/337", "id": 426695060, "node_id": "MDU6SXNzdWU0MjY2OTUwNjA=", "number": 337, "title": "Return code of executing notebooks in papermill", "user": {"login": "vinaykumar80", "id": 47435008, "node_id": "MDQ6VXNlcjQ3NDM1MDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/47435008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinaykumar80", "html_url": "https://github.com/vinaykumar80", "followers_url": "https://api.github.com/users/vinaykumar80/followers", "following_url": "https://api.github.com/users/vinaykumar80/following{/other_user}", "gists_url": "https://api.github.com/users/vinaykumar80/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinaykumar80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinaykumar80/subscriptions", "organizations_url": "https://api.github.com/users/vinaykumar80/orgs", "repos_url": "https://api.github.com/users/vinaykumar80/repos", "events_url": "https://api.github.com/users/vinaykumar80/events{/privacy}", "received_events_url": "https://api.github.com/users/vinaykumar80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-28T20:34:17Z", "updated_at": "2020-01-16T18:33:59Z", "closed_at": "2019-04-08T16:24:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nIs there a way to capture return code of executing notebooks in papermill API library or CLI methods? When any notebook cell execution encounters an error, it should return an error return code AND when all notebook cells execute successfully it should return a success return code. \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/335", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/335/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/335/events", "html_url": "https://github.com/nteract/papermill/issues/335", "id": 425050465, "node_id": "MDU6SXNzdWU0MjUwNTA0NjU=", "number": 335, "title": "Writing to /dev/null from CLI results in warnings", "user": {"login": "zachwill", "id": 172692, "node_id": "MDQ6VXNlcjE3MjY5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/172692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachwill", "html_url": "https://github.com/zachwill", "followers_url": "https://api.github.com/users/zachwill/followers", "following_url": "https://api.github.com/users/zachwill/following{/other_user}", "gists_url": "https://api.github.com/users/zachwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachwill/subscriptions", "organizations_url": "https://api.github.com/users/zachwill/orgs", "repos_url": "https://api.github.com/users/zachwill/repos", "events_url": "https://api.github.com/users/zachwill/events{/privacy}", "received_events_url": "https://api.github.com/users/zachwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-25T18:22:56Z", "updated_at": "2019-03-27T04:41:13Z", "closed_at": "2019-03-27T04:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Big fan of papermill!\r\n\r\nI'm currently using it to run Jupyter notebooks from the command line. Here's a quick example:\r\n\r\n`papermill --log-output test.ipynb /dev/null`\r\n\r\nThis results in warnings on a missing file extension. Code in question here: https://github.com/nteract/papermill/blob/59641ed4dc45a883ff21692fd2781d8d628ce1dd/papermill/iorw.py#L99-L109\r\n\r\nI'm wondering if there should just be a `/dev/null` check before raising the warning? (Kind of a tangential issue to #107 that allows the user to deal with the execution result.)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/334", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/334/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/334/events", "html_url": "https://github.com/nteract/papermill/issues/334", "id": 424210264, "node_id": "MDU6SXNzdWU0MjQyMTAyNjQ=", "number": 334, "title": "Recommendation on unit testing papermill run jupyter notebooks", "user": {"login": "mbrio", "id": 13557, "node_id": "MDQ6VXNlcjEzNTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/13557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrio", "html_url": "https://github.com/mbrio", "followers_url": "https://api.github.com/users/mbrio/followers", "following_url": "https://api.github.com/users/mbrio/following{/other_user}", "gists_url": "https://api.github.com/users/mbrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrio/subscriptions", "organizations_url": "https://api.github.com/users/mbrio/orgs", "repos_url": "https://api.github.com/users/mbrio/repos", "events_url": "https://api.github.com/users/mbrio/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-22T13:31:00Z", "updated_at": "2019-03-29T03:34:09Z", "closed_at": "2019-03-29T03:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have any guidelines for unit testing papermill run jupyter notebooks?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/332", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/332/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/332/events", "html_url": "https://github.com/nteract/papermill/issues/332", "id": 422820894, "node_id": "MDU6SXNzdWU0MjI4MjA4OTQ=", "number": 332, "title": "Conda package", "user": {"login": "RoyalTS", "id": 702580, "node_id": "MDQ6VXNlcjcwMjU4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/702580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoyalTS", "html_url": "https://github.com/RoyalTS", "followers_url": "https://api.github.com/users/RoyalTS/followers", "following_url": "https://api.github.com/users/RoyalTS/following{/other_user}", "gists_url": "https://api.github.com/users/RoyalTS/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoyalTS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoyalTS/subscriptions", "organizations_url": "https://api.github.com/users/RoyalTS/orgs", "repos_url": "https://api.github.com/users/RoyalTS/repos", "events_url": "https://api.github.com/users/RoyalTS/events{/privacy}", "received_events_url": "https://api.github.com/users/RoyalTS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549347, "node_id": "MDU6TGFiZWw2NDE1NDkzNDc=", "url": "https://api.github.com/repos/nteract/papermill/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-19T16:08:23Z", "updated_at": "2019-04-09T05:21:36Z", "closed_at": "2019-04-08T23:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to provide an up-to-date papermill conda package? Unfortunately [the one that's currently on conda-forge](https://anaconda.org/conda-forge/papermill) is severely outdated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/331", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/331/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/331/events", "html_url": "https://github.com/nteract/papermill/issues/331", "id": 421939087, "node_id": "MDU6SXNzdWU0MjE5MzkwODc=", "number": 331, "title": "Question: Current notebook name", "user": {"login": "erolosty", "id": 436451, "node_id": "MDQ6VXNlcjQzNjQ1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/436451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erolosty", "html_url": "https://github.com/erolosty", "followers_url": "https://api.github.com/users/erolosty/followers", "following_url": "https://api.github.com/users/erolosty/following{/other_user}", "gists_url": "https://api.github.com/users/erolosty/gists{/gist_id}", "starred_url": "https://api.github.com/users/erolosty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erolosty/subscriptions", "organizations_url": "https://api.github.com/users/erolosty/orgs", "repos_url": "https://api.github.com/users/erolosty/repos", "events_url": "https://api.github.com/users/erolosty/events{/privacy}", "received_events_url": "https://api.github.com/users/erolosty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-17T15:46:04Z", "updated_at": "2019-03-23T17:17:28Z", "closed_at": "2019-03-23T17:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to embed links to other services in the output notebook that automatically reflect the path of the input notebook\r\n\r\nCan I get the path/name anywhere?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/330", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/330/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/330/events", "html_url": "https://github.com/nteract/papermill/issues/330", "id": 420533946, "node_id": "MDU6SXNzdWU0MjA1MzM5NDY=", "number": 330, "title": "pm.execute_notebook not raising error when a cell has failed.", "user": {"login": "mbrio", "id": 13557, "node_id": "MDQ6VXNlcjEzNTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/13557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrio", "html_url": "https://github.com/mbrio", "followers_url": "https://api.github.com/users/mbrio/followers", "following_url": "https://api.github.com/users/mbrio/following{/other_user}", "gists_url": "https://api.github.com/users/mbrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrio/subscriptions", "organizations_url": "https://api.github.com/users/mbrio/orgs", "repos_url": "https://api.github.com/users/mbrio/repos", "events_url": "https://api.github.com/users/mbrio/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-13T14:34:06Z", "updated_at": "2019-03-19T12:50:13Z", "closed_at": "2019-03-19T12:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been working with Papermill, Airflow, and SparkMagic and have found that when a cell fails, even after the entire notebook has completed running, it does not raise an error. Usually an Airflow DAG will error out if a python script run from PythonOperator raises an error. This never happens in my DAGs that use Papermill because Papermill is not raising an error. I looked at the output of the notebook and I am seeing red boxes saying an error has occurred, but unfortunately the metadata is showing a success on Papermill. I am using a standard Python function that calls:\r\n\r\n```python\r\npm.execute_notebook(\r\n        notebook_path,\r\n        out_path,\r\n        parameters=statement_parameters\r\n    )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/329", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/329/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/329/events", "html_url": "https://github.com/nteract/papermill/issues/329", "id": 420507256, "node_id": "MDU6SXNzdWU0MjA1MDcyNTY=", "number": 329, "title": "issue creating notebooks with multiprocessing after using multiprocessing in notebook: RuntimeError: Kernel didn't respond in 60 seconds", "user": {"login": "gailweiss", "id": 14946677, "node_id": "MDQ6VXNlcjE0OTQ2Njc3", "avatar_url": "https://avatars2.githubusercontent.com/u/14946677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gailweiss", "html_url": "https://github.com/gailweiss", "followers_url": "https://api.github.com/users/gailweiss/followers", "following_url": "https://api.github.com/users/gailweiss/following{/other_user}", "gists_url": "https://api.github.com/users/gailweiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/gailweiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gailweiss/subscriptions", "organizations_url": "https://api.github.com/users/gailweiss/orgs", "repos_url": "https://api.github.com/users/gailweiss/repos", "events_url": "https://api.github.com/users/gailweiss/events{/privacy}", "received_events_url": "https://api.github.com/users/gailweiss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1294678031, "node_id": "MDU6TGFiZWwxMjk0Njc4MDMx", "url": "https://api.github.com/repos/nteract/papermill/labels/reference", "name": "reference", "color": "FFCC00", "default": false, "description": "tips and information"}, {"id": 1294679211, "node_id": "MDU6TGFiZWwxMjk0Njc5MjEx", "url": "https://api.github.com/repos/nteract/papermill/labels/upstream", "name": "upstream", "color": "FFCC00", "default": false, "description": "projects that are not maintained by nteract"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-13T13:44:15Z", "updated_at": "2020-05-06T16:52:00Z", "closed_at": "2019-08-16T20:07:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running several notebooks in parallel (using pathos.multiprocessing and papermill from the command line) to get data and then processing that data in a final notebook, which I call using papermill and which uses pathos.multiprocessing to crunch numbers itself. This in itself works fine, but if I try to repeat the process (say in a loop) then the second attempt to call the notebooks in parallel fails, with the notebooks not responding and eventually raising `RuntimeError: Kernel didn't respond in 60 seconds`. I am using python 3.6.3.\r\n\r\nI have managed to narrow down the problem to a minimal working example: calling (through papermill) a notebook which uses multiprocessing, and after that trying to process several papermill notebooks in parallel, raises the error. In particular, this is the minimum required to consistently recreate the problem:\r\n\r\n2 notebooks as follows:\r\nthe first, heck.ipynb, with one cell containing:\r\n```\r\nprint(\"heck\")\r\n```\r\nthe second, heck_parallel.ipynb, with one cell containing:\r\n```\r\nimport pathos.multiprocessing as mp\r\nwith mp.Pool() as p:\r\n   print(p.map(lambda x:x**2,list(range(5))))\r\n```\r\n\r\nNext you'll want to open python from the console and define/import the following 3 functions:\r\n```\r\nimport pathos.multiprocessing as mp\r\nimport papermill as pm\r\n\r\ndef run_heck(i):\r\n\tpm.execute_notebook(\"heck.ipynb\",\"heck_\"+str(i)+\".ipynb\",parameters={})\r\n\r\ndef run_heck_parallel(i):\r\n\tpm.execute_notebook(\"heck_parallel.ipynb\",\"heck_parallel_\"+str(i)+\".ipynb\",parameters={})\r\n\r\ndef run_parallel_hecks(x):\r\n\twith mp.Pool() as p:\r\n\t\tp.map(run_heck,list(range(x)))\r\n```\r\n\r\nand now run the following from the console:\r\n`run_heck_parallel(1)`\r\n`run_parallel_hecks(1)`\r\n\r\nthe first will succeed, but not the second, which will eventually raise `RuntimeError: Kernel didn't respond in 60 seconds`. \r\n\r\nNote that all other combinations seem to be fine, i.e. it's specifically `run_parallel_hecks(1)` (running several parallel notebooks) after `run_heck_parallel(1)` (running a notebook with multiprocessing in it) that seems to break things. for instance the series of commands:\r\n`run_parallel_hecks(1)`\r\n`run_parallel_hecks(1)`\r\n`run_heck_parallel(1)`\r\n`run_heck_parallel(1)`\r\n`run_heck(1)`\r\nwill be processed just fine (and so will using pathos.multiprocessing to run other things in parallel, so long as those things aren't executing notebook).\r\n\r\n\r\nThe following issue seems to be related: https://github.com/nteract/papermill/issues/239 , though it is in python 2.7 and the context seems different, so I am opening a separate issue just in case.\r\n\r\nIt looks like something with the mix between papermill and multiprocessing is not getting cleaned up  properly (closing and reopening python allows me to start again). I hope there is a fix :)\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/327", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/327/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/327/events", "html_url": "https://github.com/nteract/papermill/issues/327", "id": 417671040, "node_id": "MDU6SXNzdWU0MTc2NzEwNDA=", "number": 327, "title": "Plugin 'jupyterlab-celltags' failed to activate.", "user": {"login": "rekham23", "id": 35002729, "node_id": "MDQ6VXNlcjM1MDAyNzI5", "avatar_url": "https://avatars3.githubusercontent.com/u/35002729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rekham23", "html_url": "https://github.com/rekham23", "followers_url": "https://api.github.com/users/rekham23/followers", "following_url": "https://api.github.com/users/rekham23/following{/other_user}", "gists_url": "https://api.github.com/users/rekham23/gists{/gist_id}", "starred_url": "https://api.github.com/users/rekham23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rekham23/subscriptions", "organizations_url": "https://api.github.com/users/rekham23/orgs", "repos_url": "https://api.github.com/users/rekham23/repos", "events_url": "https://api.github.com/users/rekham23/events{/privacy}", "received_events_url": "https://api.github.com/users/rekham23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-06T08:02:59Z", "updated_at": "2019-03-26T17:34:48Z", "closed_at": "2019-03-23T17:17:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed JupyterLab v1.0.0a1\r\nInstalled Jupyterlab celltag extension , celltags v0.1.4 \r\n\r\nI am getting error Plugin 'jupyterlab-celltags' failed to activate.\r\nI couldn't see the 'Add Tag' in Tools.\r\n\r\njupyterlab-celltags extension is not compatible with latest JupyterLab v1.0.0a1\r\n\r\nPlease look into the issue.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/321", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/321/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/321/events", "html_url": "https://github.com/nteract/papermill/issues/321", "id": 413295609, "node_id": "MDU6SXNzdWU0MTMyOTU2MDk=", "number": 321, "title": "Execute notebook to HTML", "user": {"login": "omar-masmoudi", "id": 6168661, "node_id": "MDQ6VXNlcjYxNjg2NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6168661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omar-masmoudi", "html_url": "https://github.com/omar-masmoudi", "followers_url": "https://api.github.com/users/omar-masmoudi/followers", "following_url": "https://api.github.com/users/omar-masmoudi/following{/other_user}", "gists_url": "https://api.github.com/users/omar-masmoudi/gists{/gist_id}", "starred_url": "https://api.github.com/users/omar-masmoudi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omar-masmoudi/subscriptions", "organizations_url": "https://api.github.com/users/omar-masmoudi/orgs", "repos_url": "https://api.github.com/users/omar-masmoudi/repos", "events_url": "https://api.github.com/users/omar-masmoudi/events{/privacy}", "received_events_url": "https://api.github.com/users/omar-masmoudi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-22T08:33:49Z", "updated_at": "2020-03-04T07:35:20Z", "closed_at": "2019-03-02T07:07:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Correct me if I'm wrong, but it's currently not possible to execute a notebook with papermill to get an HTML output.\r\n\r\nI find this feature very handy in jupyter nbconvert:\r\n```\r\n--to=<Unicode> (NbConvertApp.export_format)\r\n    Default: 'html'\r\n    The export format to be used, either one of the built-in formats, or a\r\n    dotted object name that represents the import path for an `Exporter` class\r\n```\r\n\r\nWhat do you think ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/318", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/318/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/318/events", "html_url": "https://github.com/nteract/papermill/issues/318", "id": 412738497, "node_id": "MDU6SXNzdWU0MTI3Mzg0OTc=", "number": 318, "title": "How to Run Julia Notebook", "user": {"login": "usmcamp0811", "id": 17965629, "node_id": "MDQ6VXNlcjE3OTY1NjI5", "avatar_url": "https://avatars0.githubusercontent.com/u/17965629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmcamp0811", "html_url": "https://github.com/usmcamp0811", "followers_url": "https://api.github.com/users/usmcamp0811/followers", "following_url": "https://api.github.com/users/usmcamp0811/following{/other_user}", "gists_url": "https://api.github.com/users/usmcamp0811/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmcamp0811/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmcamp0811/subscriptions", "organizations_url": "https://api.github.com/users/usmcamp0811/orgs", "repos_url": "https://api.github.com/users/usmcamp0811/repos", "events_url": "https://api.github.com/users/usmcamp0811/events{/privacy}", "received_events_url": "https://api.github.com/users/usmcamp0811/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-21T04:00:37Z", "updated_at": "2019-03-02T07:06:18Z", "closed_at": "2019-03-02T07:06:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find any examples on how to run a Notebook in another language, such as Julia. I saw there are some language translator plugins for Julia but I don't full understand how to use it. Can anyone help with an example? Thanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/317", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/317/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/317/events", "html_url": "https://github.com/nteract/papermill/issues/317", "id": 412658804, "node_id": "MDU6SXNzdWU0MTI2NTg4MDQ=", "number": 317, "title": "Using Python 3.5 causes error in papermill 0.18.1", "user": {"login": "gogasca", "id": 30065079, "node_id": "MDQ6VXNlcjMwMDY1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/30065079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gogasca", "html_url": "https://github.com/gogasca", "followers_url": "https://api.github.com/users/gogasca/followers", "following_url": "https://api.github.com/users/gogasca/following{/other_user}", "gists_url": "https://api.github.com/users/gogasca/gists{/gist_id}", "starred_url": "https://api.github.com/users/gogasca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gogasca/subscriptions", "organizations_url": "https://api.github.com/users/gogasca/orgs", "repos_url": "https://api.github.com/users/gogasca/repos", "events_url": "https://api.github.com/users/gogasca/events{/privacy}", "received_events_url": "https://api.github.com/users/gogasca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-20T22:27:50Z", "updated_at": "2019-02-22T04:38:47Z", "closed_at": "2019-02-22T04:38:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "May be related to https://github.com/jupyterlab/jupyterlab-toc/issues/26\r\n\r\n```\r\npapermill gs://cloud-samples-data/papermill/samples/test.ipynb out.ipynb\r\n\r\nInput Notebook:  gs://cloud-samples-data/papermill/samples/test.ipynb\r\nOutput Notebook: out.ipynb\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/papermill\", line 11, in <module>\r\n    sys.exit(papermill())\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/usr/local/lib/python3.5/dist-packages/papermill/execute.py\", line 68, in execute_notebook\r\n    nb = load_notebook_node(input_path)\r\n  File \"/usr/local/lib/python3.5/dist-packages/papermill/iorw.py\", line 309, in load_notebook_node\r\n    nb = nbformat.reads(papermill_io.read(notebook_path), as_version=4)\r\n  File \"/usr/local/lib/python3.5/dist-packages/nbformat/__init__.py\", line 74, in reads\r\n    nb = reader.reads(s, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/nbformat/reader.py\", line 58, in reads\r\n    nb_dict = parse_json(s, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/nbformat/reader.py\", line 14, in parse_json\r\n    nb_dict = json.loads(s, **kwargs)\r\n  File \"/usr/lib/python3.5/json/__init__.py\", line 312, in loads\r\n    s.__class__.__name__))\r\nTypeError: the JSON object must be str, not 'bytes'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/316", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/316/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/316/events", "html_url": "https://github.com/nteract/papermill/issues/316", "id": 411242806, "node_id": "MDU6SXNzdWU0MTEyNDI4MDY=", "number": 316, "title": "What's the right way to handle relative paths in a notebook?", "user": {"login": "choldgraf", "id": 1839645, "node_id": "MDQ6VXNlcjE4Mzk2NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1839645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choldgraf", "html_url": "https://github.com/choldgraf", "followers_url": "https://api.github.com/users/choldgraf/followers", "following_url": "https://api.github.com/users/choldgraf/following{/other_user}", "gists_url": "https://api.github.com/users/choldgraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/choldgraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choldgraf/subscriptions", "organizations_url": "https://api.github.com/users/choldgraf/orgs", "repos_url": "https://api.github.com/users/choldgraf/repos", "events_url": "https://api.github.com/users/choldgraf/events{/privacy}", "received_events_url": "https://api.github.com/users/choldgraf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-17T22:21:11Z", "updated_at": "2019-02-18T03:02:17Z", "closed_at": "2019-02-18T03:02:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got a set of folders like so:\r\n\r\n```\r\n./\r\n\u251c\u2500\u2500 data\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 daily.csv\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 teams.csv\r\n\u251c\u2500\u2500 notebooks\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 viz_data.ipynb\r\n\u2514\u2500\u2500 run_papermill.py\r\n```\r\n\r\nMy template notebooks are in `notebooks/` and there's a script to run papermill on the notebook in `notebooks/` w/ a bunch of input parameters.\r\n\r\nUsually I write this by prototyping the `viz_data.ipynb` notebook on a single parameter, then running the python script.\r\n\r\nHowever, I noticed that if the template notebook uses a relative path as a part of its running, it will error because my working directory is now in `.` instead of `./notebooks`.\r\n\r\nI could make sure that I change my working directory to `notebooks/` before running papermill, but I wonder if there's a more recommended way to handle relative paths in papermill. Has anybody experienced this before?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/314", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/314/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/314/events", "html_url": "https://github.com/nteract/papermill/issues/314", "id": 411111843, "node_id": "MDU6SXNzdWU0MTExMTE4NDM=", "number": 314, "title": "Use pm.record from another notebook", "user": {"login": "adace123", "id": 18275490, "node_id": "MDQ6VXNlcjE4Mjc1NDkw", "avatar_url": "https://avatars1.githubusercontent.com/u/18275490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adace123", "html_url": "https://github.com/adace123", "followers_url": "https://api.github.com/users/adace123/followers", "following_url": "https://api.github.com/users/adace123/following{/other_user}", "gists_url": "https://api.github.com/users/adace123/gists{/gist_id}", "starred_url": "https://api.github.com/users/adace123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adace123/subscriptions", "organizations_url": "https://api.github.com/users/adace123/orgs", "repos_url": "https://api.github.com/users/adace123/repos", "events_url": "https://api.github.com/users/adace123/events{/privacy}", "received_events_url": "https://api.github.com/users/adace123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-16T20:45:20Z", "updated_at": "2019-03-02T07:07:08Z", "closed_at": "2019-03-02T07:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a case where a function that accepts a key/value pair is being shared across multiple other notebooks. \r\nNot sure if this is possible, but it would be helpful to be able to record the key/value pair to whatever notebook I specify from within the function. \r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/312", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/312/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/312/events", "html_url": "https://github.com/nteract/papermill/issues/312", "id": 410460744, "node_id": "MDU6SXNzdWU0MTA0NjA3NDQ=", "number": 312, "title": "Unable to write into GCS bucket with papermill[gcs]", "user": {"login": "gogasca", "id": 30065079, "node_id": "MDQ6VXNlcjMwMDY1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/30065079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gogasca", "html_url": "https://github.com/gogasca", "followers_url": "https://api.github.com/users/gogasca/followers", "following_url": "https://api.github.com/users/gogasca/following{/other_user}", "gists_url": "https://api.github.com/users/gogasca/gists{/gist_id}", "starred_url": "https://api.github.com/users/gogasca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gogasca/subscriptions", "organizations_url": "https://api.github.com/users/gogasca/orgs", "repos_url": "https://api.github.com/users/gogasca/repos", "events_url": "https://api.github.com/users/gogasca/events{/privacy}", "received_events_url": "https://api.github.com/users/gogasca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2019-02-14T19:42:29Z", "updated_at": "2020-03-31T18:12:21Z", "closed_at": "2019-09-30T00:19:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running GCFS application via `papermill[gcs]`\r\n\r\n    papermill gs://my-bucket/test.ipynb gs://my-bucket/output/test.ipynb\r\n\r\nI'm getting Error: HTTP 429 Rate exceeds.\r\n\r\nWorks if output notebook is written locally:\r\n\r\n    papermill gs://my-bucket/test.ipynb /tmp/test.ipynb\r\n\r\nLocal file size is: 57K\r\n\r\n```\r\nls -alh /tmp/test.ipynb \r\n-rw-r--r--  1 gogasca  wheel    57K Feb 14 10:37 /tmp/test.ipynb\r\n```\r\n\r\nGCSFS reference https://github.com/dask/gcsfs/issues/130\r\n\r\nHow to reproduce?\r\n\r\n```\r\npip install papermill[gcs]\r\npapermill gs://cloud-samples-data/papermill/samples/test.ipynb gs://<your bucket>/test.ipynb\r\n```\r\n\r\nLogs:\r\n\r\n```\r\n10\r\nEnding Cell 6------------------------------------------\r\nException gcsfs.utils.HtmlError: HtmlError(u'The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.',) in <bound method GCSFile.__del__ of <GCSFile d\r\npe-sandbox/test.ipynb>> ignored\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/papermill\", line 11, in <module>\r\n    sys.exit(papermill())\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/execute.py\", line 90, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 56, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 296, in execute_notebook\r\n    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 352, in execute_managed_notebook\r\n    preprocessor.preprocess(nb_man, kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/preprocess.py\", line 27, in preprocess\r\n    nb, resources = self.papermill_process(nb_man, resources)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/preprocess.py\", line 81, in papermill_process\r\n    nb_man.cell_complete(nb.cells[index])\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 219, in cell_complete\r\n    self.save()\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-150>\", line 2, in close\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1548, in close\r\n    self.flush(force=True)\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-145>\", line 2, in flush\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1367, in flush\r\n    self._simple_upload()\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-148>\", line 2, in _simple_upload\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1465, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 162, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n+ err 'Processing notebook failed'\r\n++ date +%Y-%m-%dT%H:%M:%S%z\r\n+ echo '[2019-02-14T18:32:58+0000]: Processing notebook failed'\r\n[2019-02-14T18:32:58+0000]: Processing notebook failed\r\n+ exit 1\r\n\r\n```\r\nI already defined:\r\n\r\n    export GOOGLE_APPLICATION_CREDENTIALS=/keys/my-project.json\r\n    gcloud config set account XXXXXXX-compute@developer.gserviceaccount.com\r\n    gcloud auth activate-service-account --key-file=/keys/my-project.json\r\n\r\nin MacOS environment I get similar errors: (Added debugging)\r\n\r\n```\r\npapermill gs://cloud-samples-data/papermill/samples/test.ipynb gs://dpe-sandbox/test.ipynb\r\nInput Notebook:  gs://cloud-samples-data/papermill/samples/test.ipynb\r\nOutput Notebook: gs://dpe-sandbox/test.ipynb\r\n('dpe-cloud-mle', 'full_control', None, None, 'none', None)\r\n  0%|                                                                                                   | 0/28 [00:00<?, ?it/s]uploading\r\n11317\r\nuploading\r\n11342\r\nuploading\r\n11372\r\n  4%|\u2588\u2588\u2588\u258e                                                                                       | 1/28 [00:01<00:50,  1.88s/it]uploading\r\n11397\r\nuploading\r\n11427\r\n  7%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                                                    | 2/28 [00:02<00:41,  1.59s/it]uploading\r\n11452\r\nuploading\r\n11482\r\n 11%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                                                 | 3/28 [00:03<00:33,  1.32s/it]uploading\r\n11507\r\nuploading\r\n11537\r\n 14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                                              | 4/28 [00:04<00:26,  1.10s/it]uploading\r\n11562\r\n429\r\n\r\n429\r\nTraceback (most recent call last):\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 296, in execute_notebook\r\n    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 352, in execute_managed_notebook\r\n    preprocessor.preprocess(nb_man, kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/preprocess.py\", line 27, in preprocess\r\n    nb, resources = self.papermill_process(nb_man, resources)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/preprocess.py\", line 81, in papermill_process\r\n    nb_man.cell_complete(nb.cells[index])\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 219, in cell_complete\r\n    self.save()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/bin/papermill\", line 10, in <module>\r\n    sys.exit(papermill())\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/execute.py\", line 90, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 56, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 302, in execute_notebook\r\n    nb_man.notebook_complete()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 249, in notebook_complete\r\n    self.save()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n429\r\n429\r\nException ignored in: <bound method GCSFile.__del__ of <GCSFile dpe-sandbox/test.ipynb>>\r\nTraceback (most recent call last):\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-153>\", line 2, in __del__\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1575, in __del__\r\n    self.close()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n429\r\n429\r\nException ignored in: <bound method GCSFile.__del__ of <GCSFile dpe-sandbox/test.ipynb>>\r\nTraceback (most recent call last):\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-153>\", line 2, in __del__\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1575, in __del__\r\n    self.close()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/311", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/311/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/311/events", "html_url": "https://github.com/nteract/papermill/issues/311", "id": 409920943, "node_id": "MDU6SXNzdWU0MDk5MjA5NDM=", "number": 311, "title": "Example of notebook outbook name from parameters", "user": {"login": "thomasworville", "id": 40640108, "node_id": "MDQ6VXNlcjQwNjQwMTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/40640108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasworville", "html_url": "https://github.com/thomasworville", "followers_url": "https://api.github.com/users/thomasworville/followers", "following_url": "https://api.github.com/users/thomasworville/following{/other_user}", "gists_url": "https://api.github.com/users/thomasworville/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasworville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasworville/subscriptions", "organizations_url": "https://api.github.com/users/thomasworville/orgs", "repos_url": "https://api.github.com/users/thomasworville/repos", "events_url": "https://api.github.com/users/thomasworville/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasworville/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-13T17:35:52Z", "updated_at": "2019-03-02T07:06:50Z", "closed_at": "2019-03-02T07:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to set my notebook output path based on the parameters in my source notebook. \r\n\r\nFor example, with the following parameters:\r\n - company_name\r\n - year\r\n\r\nI'd like to construct the output path as:\r\nnotebooks/outputs/{company_name}_{year}.ipynb\r\n\r\nIs this possible? I consulted the CLI documentation (https://papermill.readthedocs.io/en/latest/usage-cli.html) and saw the `--inject-output-path` flag, but I'm unsure on how it's used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/310", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/310/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/310/events", "html_url": "https://github.com/nteract/papermill/issues/310", "id": 409487918, "node_id": "MDU6SXNzdWU0MDk0ODc5MTg=", "number": 310, "title": "compiling output without recording?", "user": {"login": "ironv", "id": 4298134, "node_id": "MDQ6VXNlcjQyOTgxMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4298134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ironv", "html_url": "https://github.com/ironv", "followers_url": "https://api.github.com/users/ironv/followers", "following_url": "https://api.github.com/users/ironv/following{/other_user}", "gists_url": "https://api.github.com/users/ironv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ironv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ironv/subscriptions", "organizations_url": "https://api.github.com/users/ironv/orgs", "repos_url": "https://api.github.com/users/ironv/repos", "events_url": "https://api.github.com/users/ironv/events{/privacy}", "received_events_url": "https://api.github.com/users/ironv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-12T20:33:52Z", "updated_at": "2019-03-02T07:06:33Z", "closed_at": "2019-03-02T07:06:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using papermill to create several datasets based on different input parameters.  Working great.  My setup is nb1 calling nb2 several times using pm.  I would like to capture the output of cell 7 in nb2 and report it all in nb1.  Cell 7 has several filters with print statements which shows counts after the filter is applied.  A painful way to do that may be to use a list to capture all these statements, `pm.record` it and then reproduce it in nb1.  I was hoping there was an easier way to do the same.  Is there?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/308", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/308/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/308/events", "html_url": "https://github.com/nteract/papermill/issues/308", "id": 408741849, "node_id": "MDU6SXNzdWU0MDg3NDE4NDk=", "number": 308, "title": "Notebook.parameters is empty dict", "user": {"login": "tlinhart", "id": 12714153, "node_id": "MDQ6VXNlcjEyNzE0MTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/12714153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlinhart", "html_url": "https://github.com/tlinhart", "followers_url": "https://api.github.com/users/tlinhart/followers", "following_url": "https://api.github.com/users/tlinhart/following{/other_user}", "gists_url": "https://api.github.com/users/tlinhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlinhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlinhart/subscriptions", "organizations_url": "https://api.github.com/users/tlinhart/orgs", "repos_url": "https://api.github.com/users/tlinhart/repos", "events_url": "https://api.github.com/users/tlinhart/events{/privacy}", "received_events_url": "https://api.github.com/users/tlinhart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549349, "node_id": "MDU6TGFiZWw2NDE1NDkzNDk=", "url": "https://api.github.com/repos/nteract/papermill/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-11T11:38:50Z", "updated_at": "2019-02-13T18:05:13Z", "closed_at": "2019-02-13T18:05:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm building a UI for scheduling notebook runs. My idea is to let users pick a notebook, specify when (and optionally how often) to run it, and also provide a form with parameters defined in the notebook that they would adjust. I thought I would just call `papermill.api.read_notebook` and grab parameters from `parameters` of returned `Notebook` object, but it returns an empty dictionary. From the code it seems it reads the parameters from `papermill` metadata attribute, which is present only after processing (in the output notebook).\r\n\r\nIs this a feature? Or is there other way how to read parameters from the input notebook?\r\n\r\n**EDIT:**\r\nAs my primary goal is to get the names of parameters from the notebook (to be able to build the form), I use this for notebooks with Python kernel:\r\n\r\n```python\r\nimport ast\r\n\r\nfrom papermill.iorw import load_notebook_node\r\nfrom papermill.execute import _find_first_tagged_cell_index\r\n\r\n\r\nnb = load_notebook_node('dummy.ipynb')\r\nparam_cell_index = _find_first_tagged_cell_index(nb, 'parameters')\r\nparam_cell = nb.cells[param_cell_index]\r\n\r\nparameters = set()\r\n\r\nroot = ast.parse(param_cell.source)\r\nfor node in root.body:\r\n    if isinstance(node, ast.Assign):\r\n        parameters.update(target.id for target in node.targets)\r\n```\r\n\r\nIf needed, one could walk the AST and get the values as well, but that's not necessary in my case. I know it's not generic and abuses papermill API, but you might find it useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/306", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/306/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/306/events", "html_url": "https://github.com/nteract/papermill/issues/306", "id": 408348411, "node_id": "MDU6SXNzdWU0MDgzNDg0MTE=", "number": 306, "title": "On Windows only, papermill can't be imported unless the env variable APPDATA is set", "user": {"login": "mgasner", "id": 427016, "node_id": "MDQ6VXNlcjQyNzAxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/427016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgasner", "html_url": "https://github.com/mgasner", "followers_url": "https://api.github.com/users/mgasner/followers", "following_url": "https://api.github.com/users/mgasner/following{/other_user}", "gists_url": "https://api.github.com/users/mgasner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgasner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgasner/subscriptions", "organizations_url": "https://api.github.com/users/mgasner/orgs", "repos_url": "https://api.github.com/users/mgasner/repos", "events_url": "https://api.github.com/users/mgasner/events{/privacy}", "received_events_url": "https://api.github.com/users/mgasner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-08T22:27:30Z", "updated_at": "2019-02-09T21:04:23Z", "closed_at": "2019-02-09T21:04:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is because papermill.iorw, by default, imports the Azure Datalake facilities:\r\n\r\n```\r\n...\r\n    import papermill as pm\r\n...\\lib\\site-packages\\papermill\\__init__.py:8: in <module>\r\n    from .api import display, record, read_notebook, read_notebooks\r\n...\\lib\\site-packages\\papermill\\api.py:17: in <module>\r\n    from .iorw import load_notebook_node, list_notebook_files\r\n...\\lib\\site-packages\\papermill\\iorw.py:20: in <module>\r\n    from .adl import ADL\r\n...\\lib\\site-packages\\papermill\\adl.py:2: in <module>\r\n    from azure.datalake.store import core, lib\r\n...\\lib\\site-packages\\azure\\datalake\\store\\__init__.py:11: in <module>\r\n    from .core import AzureDLFileSystem\r\n...\\lib\\site-packages\\azure\\datalake\\store\\core.py:29: in <module>\r\n    from .utils import ensure_writable, read_block\r\n...\\lib\\site-packages\\azure\\datalake\\store\\utils.py:21: in <module>\r\n    datadir = os.path.join(os.environ['APPDATA'], 'azure-datalake-store')\r\n...\\lib\\os.py:425: in __getitem__\r\n    return self.data[key.upper()]\r\nE   KeyError: 'APPDATA'\r\n```\r\n\r\nThe issue is this switch in https://github.com/Azure/azure-data-lake-store-python/blob/master/azure/datalake/store/utils.py#L20.\r\n\r\nHappy to open a pull request which wraps the ADL import in a try/except.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/305", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/305/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/305/events", "html_url": "https://github.com/nteract/papermill/issues/305", "id": 407945409, "node_id": "MDU6SXNzdWU0MDc5NDU0MDk=", "number": 305, "title": "Display warnings generated in executed notebook", "user": {"login": "clzarecki", "id": 6787495, "node_id": "MDQ6VXNlcjY3ODc0OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6787495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clzarecki", "html_url": "https://github.com/clzarecki", "followers_url": "https://api.github.com/users/clzarecki/followers", "following_url": "https://api.github.com/users/clzarecki/following{/other_user}", "gists_url": "https://api.github.com/users/clzarecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/clzarecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clzarecki/subscriptions", "organizations_url": "https://api.github.com/users/clzarecki/orgs", "repos_url": "https://api.github.com/users/clzarecki/repos", "events_url": "https://api.github.com/users/clzarecki/events{/privacy}", "received_events_url": "https://api.github.com/users/clzarecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-07T23:34:31Z", "updated_at": "2019-02-11T18:39:35Z", "closed_at": "2019-02-11T18:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a warning is generated in an executed notebook, the main notebook never receives the warning, so it would potentially be hidden unless the executed notebook is opened manually.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/304", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/304/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/304/events", "html_url": "https://github.com/nteract/papermill/issues/304", "id": 406842675, "node_id": "MDU6SXNzdWU0MDY4NDI2NzU=", "number": 304, "title": "Papermill import breaks fastparquet writer", "user": {"login": "bartaelterman", "id": 2742677, "node_id": "MDQ6VXNlcjI3NDI2Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2742677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartaelterman", "html_url": "https://github.com/bartaelterman", "followers_url": "https://api.github.com/users/bartaelterman/followers", "following_url": "https://api.github.com/users/bartaelterman/following{/other_user}", "gists_url": "https://api.github.com/users/bartaelterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartaelterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartaelterman/subscriptions", "organizations_url": "https://api.github.com/users/bartaelterman/orgs", "repos_url": "https://api.github.com/users/bartaelterman/repos", "events_url": "https://api.github.com/users/bartaelterman/events{/privacy}", "received_events_url": "https://api.github.com/users/bartaelterman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-05T15:41:06Z", "updated_at": "2019-03-02T17:01:07Z", "closed_at": "2019-03-02T17:01:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am experiencing issues with writing data to parquet (with dask and fastparquet) when I import papermill in my notebook. The issue is the result of the combination of a couple of packages so I'll be cross posting this issue on the different repositories.\r\n- [fastparquet](https://github.com/dask/fastparquet/issues/398)\r\n- papermill\r\n- [dask-adlfs](https://github.com/eriklangenborg-rs/dask-adlfs) (unfortunately this repo has no issues)\r\n\r\nHere is a code sample to reproduce the issue:\r\n\r\n```\r\nfrom random import randint\r\nimport papermill as pm\r\nimport pandas as pd\r\nimport dask.dataframe as dd\r\n\r\n# a function to generate a sizeable dataframe\r\ndef get_large_df(cols, rows):\r\n    data = {}\r\n    for c in range(cols):\r\n        data['rand{}'.format(c)] = [randint(0, 1000000) for x in range(rows)]\r\n    return pd.DataFrame(data=data)\r\n\r\n# Write the data frame to Azure Data Lake\r\ndf = get_large_df(10, 1_000)\r\nddf = dd.from_pandas(df, npartitions=4)\r\nddf.reset_index()\r\nddf.to_parquet('adl://my_container/test_parquet', engine='fastparquet', storage_options=STORAGE_OPTIONS)\r\n\r\n# Read the data frame\r\ndd.read_parquet('adl://prodstate/mh-webops/mh-webops/test/btan03/test_parquet', engine='fastparquet', storage_options=STORAGE_OPTIONS)\r\n```\r\n\r\nReading the dataframe fails with the following exception:\r\n\r\n```\r\nException FileNotFoundError('test_parquet/_metadata/_metadata',)\r\n```\r\n\r\nIt is unclear to me why dask looks for a `_metadata/_metadata` file because that does not exist. Now here is the funny thing:\r\n\r\n- Simply removing the `import papermill as pm` resolves the issue,\r\n- Writing to a local file instead of one on Azure works as expected,\r\n- Writing and reading with `pyarrow` works (although I have to set `partition_on` when writing, which I didn't expect)\r\n\r\nIt is unclear to me which one of the packages is not playing nice. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/300", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/300/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/300/events", "html_url": "https://github.com/nteract/papermill/issues/300", "id": 406493591, "node_id": "MDU6SXNzdWU0MDY0OTM1OTE=", "number": 300, "title": "Add path interpolation using parameters and special keys", "user": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549346, "node_id": "MDU6TGFiZWw2NDE1NDkzNDY=", "url": "https://api.github.com/repos/nteract/papermill/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 893262723, "node_id": "MDU6TGFiZWw4OTMyNjI3MjM=", "url": "https://api.github.com/repos/nteract/papermill/labels/new-contributor-friendly", "name": "new-contributor-friendly", "color": "970dc1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-04T19:57:23Z", "updated_at": "2019-04-17T05:10:04Z", "closed_at": "2019-04-17T05:10:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "papermill highlight_dates.ipynb ./highlight_dates_run_cli_{start_date}_{stop_date}_{%guid}.ipynb -p start_date 2011-01-01 -p stop_date 2014-02-02\r\n\r\nUse string / int parameters and a few built-in keywords to generating notebook paths,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/296", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/296/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/296/events", "html_url": "https://github.com/nteract/papermill/issues/296", "id": 403713922, "node_id": "MDU6SXNzdWU0MDM3MTM5MjI=", "number": 296, "title": "ipyleaflet map is not rendered when ruhning in papermill", "user": {"login": "spektom", "id": 158011, "node_id": "MDQ6VXNlcjE1ODAxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/158011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spektom", "html_url": "https://github.com/spektom", "followers_url": "https://api.github.com/users/spektom/followers", "following_url": "https://api.github.com/users/spektom/following{/other_user}", "gists_url": "https://api.github.com/users/spektom/gists{/gist_id}", "starred_url": "https://api.github.com/users/spektom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spektom/subscriptions", "organizations_url": "https://api.github.com/users/spektom/orgs", "repos_url": "https://api.github.com/users/spektom/repos", "events_url": "https://api.github.com/users/spektom/events{/privacy}", "received_events_url": "https://api.github.com/users/spektom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-01-28T09:14:49Z", "updated_at": "2019-04-27T17:57:05Z", "closed_at": "2019-04-27T17:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following cell:\r\n\r\n```\r\nfrom IPython.display import display\r\nfrom ipyleaflet import Map, Polyline\r\n\r\nm = Map(center=(32.2, 34.8), zoom=12)\r\nfor r in df.itertuples():\r\n    line = Polyline(\r\n        locations=[[[r.start_latitude, r.start_longitude], [r.end_latitude, r.end_longitude]]],\r\n        weight=15\r\n    )\r\n    m.add_layer(line)\r\n\r\ndisplay(m)\r\n```\r\n\r\nThe map is displayed correctly, when running interactively. However, when running the same notebook using papermill it renders just this:\r\n\r\n```\r\nMap(basemap={'url': 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', 'max_zoom': 19, 'attribution': 'Map \u2026\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/291", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/291/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/291/events", "html_url": "https://github.com/nteract/papermill/issues/291", "id": 402083870, "node_id": "MDU6SXNzdWU0MDIwODM4NzA=", "number": 291, "title": "On MacOs: ModuleNotFoundError: No module named 'azure.datalake' ", "user": {"login": "danielsc", "id": 8079390, "node_id": "MDQ6VXNlcjgwNzkzOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8079390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielsc", "html_url": "https://github.com/danielsc", "followers_url": "https://api.github.com/users/danielsc/followers", "following_url": "https://api.github.com/users/danielsc/following{/other_user}", "gists_url": "https://api.github.com/users/danielsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielsc/subscriptions", "organizations_url": "https://api.github.com/users/danielsc/orgs", "repos_url": "https://api.github.com/users/danielsc/repos", "events_url": "https://api.github.com/users/danielsc/events{/privacy}", "received_events_url": "https://api.github.com/users/danielsc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-23T05:59:18Z", "updated_at": "2019-01-26T20:56:46Z", "closed_at": "2019-01-23T21:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might have missed something very obvious here, but somehow, papermill does not seem to work for me on MacOs.\r\n\r\n$ python -c 'import papermill'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/danielsc/.azureml/envs/gcloud/lib/python3.6/site-packages/papermill/__init__.py\", line 8, in <module>\r\n    from .api import display, record, read_notebook, read_notebooks\r\n  File \"/Users/danielsc/.azureml/envs/gcloud/lib/python3.6/site-packages/papermill/api.py\", line 17, in <module>\r\n    from .iorw import load_notebook_node, list_notebook_files\r\n  File \"/Users/danielsc/.azureml/envs/gcloud/lib/python3.6/site-packages/papermill/iorw.py\", line 20, in <module>\r\n    from .adl import ADL\r\n  File \"/Users/danielsc/.azureml/envs/gcloud/lib/python3.6/site-packages/papermill/adl.py\", line 2, in <module>\r\n    from azure.datalake.store import core, lib\r\nModuleNotFoundError: No module named 'azure.datalake'\r\n\r\n$ sw_vers\r\nProductName:\tMac OS X\r\nProductVersion:\t10.14.2\r\nBuildVersion:\t18C54\r\n\r\n$ pip freeze\r\nabsl-py==0.6.1\r\nadal==1.0.2\r\nansiwrap==0.8.3\r\napplicationinsights==0.11.6\r\nappnope==0.1.0\r\nargcomplete==1.9.4\r\nasn1crypto==0.24.0\r\nastor==0.7.1\r\nazure-cli-command-modules-nspkg==2.0.2\r\nazure-cli-core==2.0.43\r\nazure-cli-nspkg==3.0.3\r\nazure-cli-profile==2.1.1\r\nazure-common==1.1.14\r\nazure-datalake-store==0.0.40\r\nazure-graphrbac==0.40.0\r\nazure-mgmt-authorization==0.50.0\r\nazure-mgmt-containerregistry==2.1.0\r\nazure-mgmt-keyvault==1.1.0\r\nazure-mgmt-nspkg==2.0.0\r\nazure-mgmt-resource==2.0.0\r\nazure-mgmt-storage==2.0.0\r\nazure-nspkg==2.0.0\r\nazure-storage-blob==1.3.1\r\nazure-storage-common==1.3.0\r\nazure-storage-nspkg==3.0.0\r\nbackcall==0.1.0\r\nbackports.tempfile==1.0\r\nbackports.weakref==1.0.post1\r\nbcrypt==3.1.4\r\nbleach==3.1.0\r\nboto3==1.9.83\r\nbotocore==1.12.83\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\nClick==7.0\r\ncloudpickle==0.6.1\r\ncolorama==0.3.9\r\ncontextlib2==0.5.5\r\ncryptography==2.3\r\ncycler==0.10.0\r\ndask==1.0.0\r\ndecorator==4.3.0\r\ndefusedxml==0.5.0\r\ndocker==3.5.0\r\ndocker-pycreds==0.3.0\r\ndocutils==0.14\r\nentrypoints==0.3\r\nFlask==1.0.2\r\nfuture==0.17.1\r\ngast==0.2.0\r\ngrpcio==1.17.0\r\nh5py==2.8.0\r\nhumanfriendly==4.16.1\r\nidna==2.7\r\nipython==7.2.0\r\nipython-genutils==0.2.0\r\nisodate==0.6.0\r\nitsdangerous==1.1.0\r\njedi==0.13.2\r\nJinja2==2.10\r\njmespath==0.9.3\r\njoblib==0.13.1\r\njsonpickle==0.9.6\r\njsonschema==2.6.0\r\njupyter-client==5.2.4\r\njupyter-core==4.4.0\r\nKeras==2.1.5\r\nKeras-Applications==1.0.6\r\nKeras-Preprocessing==1.0.5\r\nkiwisolver==1.0.1\r\nknack==0.4.1\r\nMarkdown==3.0.1\r\nMarkupSafe==1.1.0\r\nmistune==0.8.4\r\nmkl-fft==1.0.10\r\nmkl-random==1.0.2\r\nmsrest==0.5.4\r\nmsrestazure==0.5.0\r\nnbconvert==5.4.0\r\nnbformat==4.4.0\r\nndg-httpsclient==0.5.1\r\nnetworkx==2.2\r\nnumpy==1.15.4\r\noauthlib==2.1.0\r\npandas==0.23.4\r\npandocfilters==1.4.2\r\npapermill==0.17.1\r\nparamiko==2.4.1\r\nparso==0.3.1\r\npathspec==0.5.6\r\npexpect==4.6.0\r\npickleshare==0.7.5\r\nPillow==5.3.0\r\nprompt-toolkit==2.0.7\r\nprotobuf==3.6.1\r\nptyprocess==0.6.0\r\npyasn1==0.4.4\r\npycparser==2.18\r\nPygments==2.2.0\r\nPyJWT==1.6.4\r\nPyNaCl==1.2.1\r\npyOpenSSL==18.0.0\r\npyparsing==2.3.0\r\npython-dateutil==2.7.3\r\npytz==2018.5\r\nPyWavelets==1.0.1\r\nPyYAML==3.13\r\npyzmq==17.1.2\r\nrequests==2.21.0\r\nrequests-oauthlib==1.0.0\r\nruamel.yaml==0.15.51\r\ns3transfer==0.1.13\r\nscikit-image==0.14.1\r\nscikit-learn==0.20.2\r\nscipy==1.1.0\r\nSecretStorage==2.3.1\r\nsix==1.11.0\r\ntabulate==0.8.2\r\ntensorboard==1.10.0\r\ntensorboardX==1.4\r\ntensorflow==1.10.0\r\ntermcolor==1.1.0\r\ntestpath==0.4.2\r\ntextwrap3==0.9.1\r\ntoolz==0.9.0\r\ntornado==5.1.1\r\ntqdm==4.29.1\r\ntraitlets==4.3.2\r\nurllib3==1.24.1\r\nwcwidth==0.1.7\r\nwebencodings==0.5.1\r\nwebsocket-client==0.48.0\r\nWerkzeug==0.14.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/289", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/289/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/289/events", "html_url": "https://github.com/nteract/papermill/issues/289", "id": 401387076, "node_id": "MDU6SXNzdWU0MDEzODcwNzY=", "number": 289, "title": "AttributeError: 'PapermillExecutePreprocessor' object has no attribute 'setup_preprocessor'", "user": {"login": "JarnoRFB", "id": 8550270, "node_id": "MDQ6VXNlcjg1NTAyNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8550270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarnoRFB", "html_url": "https://github.com/JarnoRFB", "followers_url": "https://api.github.com/users/JarnoRFB/followers", "following_url": "https://api.github.com/users/JarnoRFB/following{/other_user}", "gists_url": "https://api.github.com/users/JarnoRFB/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarnoRFB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarnoRFB/subscriptions", "organizations_url": "https://api.github.com/users/JarnoRFB/orgs", "repos_url": "https://api.github.com/users/JarnoRFB/repos", "events_url": "https://api.github.com/users/JarnoRFB/events{/privacy}", "received_events_url": "https://api.github.com/users/JarnoRFB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-21T14:52:01Z", "updated_at": "2019-01-22T23:20:52Z", "closed_at": "2019-01-22T23:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I just tried to run papermill for the first time on an empty notebook, just inserting a single parameter like\r\n\r\n    $ papermill papermill_try_out.ipynb out.ipynb -p alpha 0.6\r\n\r\nWhile the notebook out is created and the parameter inserted the execution of the notebook stops with the error\r\n\r\n    AttributeError: 'PapermillExecutePreprocessor' object has no attribute 'setup_preprocessor'\r\n\r\nI tried on both Linux and Windows with JupyterLab.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/287", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/287/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/287/events", "html_url": "https://github.com/nteract/papermill/issues/287", "id": 401108107, "node_id": "MDU6SXNzdWU0MDExMDgxMDc=", "number": 287, "title": "tqdm.auto doesn't exist in all versions of tqdm", "user": {"login": "ctb", "id": 51016, "node_id": "MDQ6VXNlcjUxMDE2", "avatar_url": "https://avatars2.githubusercontent.com/u/51016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctb", "html_url": "https://github.com/ctb", "followers_url": "https://api.github.com/users/ctb/followers", "following_url": "https://api.github.com/users/ctb/following{/other_user}", "gists_url": "https://api.github.com/users/ctb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctb/subscriptions", "organizations_url": "https://api.github.com/users/ctb/orgs", "repos_url": "https://api.github.com/users/ctb/repos", "events_url": "https://api.github.com/users/ctb/events{/privacy}", "received_events_url": "https://api.github.com/users/ctb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-20T15:23:39Z", "updated_at": "2019-07-29T15:04:36Z", "closed_at": "2019-01-20T22:20:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had to upgrade from tqdm 4.19.4 to tqdm 4.29.1 to use papermill -- maybe add a minimum version string in requirements?\r\n\r\n```\r\n% papermill try_params.ipynb out.ipynb -p a 2 -p b 6\r\nTraceback (most recent call last):\r\n  File \"/Users/t/dev/py36/bin/papermill\", line 7, in <module>\r\n    from papermill.cli import papermill\r\n  File \"/Users/t/dev/py36/lib/python3.6/site-packages/papermill/__init__.py\", line 10, in <module>\r\n    from .execute import execute_notebook\r\n  File \"/Users/t/dev/py36/lib/python3.6/site-packages/papermill/execute.py\", line 13, in <module>\r\n    from .engines import papermill_engines\r\n  File \"/Users/t/dev/py36/lib/python3.6/site-packages/papermill/engines.py\", line 16, in <module>\r\n    from tqdm.auto import tqdm\r\nModuleNotFoundError: No module named 'tqdm.auto'\r\n% pip install tqdm\r\nRequirement already satisfied: tqdm in /Users/t/dev/py36/lib/python3.6/site-packages (4.19.4)\r\n% pip install -U tqdm\r\nCollecting tqdm\r\n  Downloading https://files.pythonhosted.org/packages/ed/d6/3458d39cf4978f4ece846295e83daf5ece710ab0a4106774f7f7b3a68697/tqdm-4.29.1-py2.py3-none-any.whl (46kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 51kB 1.0MB/s \r\nInstalling collected packages: tqdm\r\n  Found existing installation: tqdm 4.19.4\r\n    Uninstalling tqdm-4.19.4:\r\n      Successfully uninstalled tqdm-4.19.4\r\nSuccessfully installed tqdm-4.29.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/286", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/286/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/286/events", "html_url": "https://github.com/nteract/papermill/issues/286", "id": 399336823, "node_id": "MDU6SXNzdWUzOTkzMzY4MjM=", "number": 286, "title": "Detect notebook is run in papermill", "user": {"login": "JannesKlaas", "id": 16643917, "node_id": "MDQ6VXNlcjE2NjQzOTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/16643917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JannesKlaas", "html_url": "https://github.com/JannesKlaas", "followers_url": "https://api.github.com/users/JannesKlaas/followers", "following_url": "https://api.github.com/users/JannesKlaas/following{/other_user}", "gists_url": "https://api.github.com/users/JannesKlaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/JannesKlaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JannesKlaas/subscriptions", "organizations_url": "https://api.github.com/users/JannesKlaas/orgs", "repos_url": "https://api.github.com/users/JannesKlaas/repos", "events_url": "https://api.github.com/users/JannesKlaas/events{/privacy}", "received_events_url": "https://api.github.com/users/JannesKlaas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-15T13:06:36Z", "updated_at": "2019-01-15T15:50:48Z", "closed_at": "2019-01-15T15:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear community,\r\nI am looking to make some code in my notebooks dependent on the fact that the notebook is run through papermill. \r\nThis would greatly simplify my workflow as I could use the same notebook I use in development straight in papermill. One solution would be to use papermill to set a parameter indicating the notebook is run in papermill. But maybe there is a more elegant method? Is there any difference in the runtime environment that I could detect? My search has not yielded any results so far.\r\n\r\nThanks a million, any help would be greatly appreciated,\r\nJannes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/282", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/282/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/282/events", "html_url": "https://github.com/nteract/papermill/issues/282", "id": 398683233, "node_id": "MDU6SXNzdWUzOTg2ODMyMzM=", "number": 282, "title": "--report-mode key error", "user": {"login": "wrathagom", "id": 1779894, "node_id": "MDQ6VXNlcjE3Nzk4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1779894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrathagom", "html_url": "https://github.com/wrathagom", "followers_url": "https://api.github.com/users/wrathagom/followers", "following_url": "https://api.github.com/users/wrathagom/following{/other_user}", "gists_url": "https://api.github.com/users/wrathagom/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrathagom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrathagom/subscriptions", "organizations_url": "https://api.github.com/users/wrathagom/orgs", "repos_url": "https://api.github.com/users/wrathagom/repos", "events_url": "https://api.github.com/users/wrathagom/events{/privacy}", "received_events_url": "https://api.github.com/users/wrathagom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-01-13T18:05:59Z", "updated_at": "2019-01-18T01:29:32Z", "closed_at": "2019-01-18T01:29:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run paper mill with the `--report-mode` option, but I am getting the below error. This is using Papermill 0.16.2.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/bin/papermill\", line 11, in <module>\r\n    sys.exit(papermill())\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/opt/conda/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/cli.py\", line 155, in papermill\r\n    report_mode=report_mode,\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/execute.py\", line 52, in execute_notebook\r\n    nb = parameterize_notebook(nb, kernel_name, parameters, report_mode)\r\n  File \"/opt/conda/lib/python3.6/site-packages/papermill/execute.py\", line 116, in parameterize_notebook\r\n    newcell.metadata['jupyter']['source_hidden'] = True\r\nKeyError: 'jupyter'\r\n```\r\n\r\nHere is the command I am trying to execute:\r\n\r\n```\r\npapermill --report-mode s3://my-bucket/home/SQL\\ Viz.ipynb s3://my-bucket/home/SQL\\ Viz\\ Test.ipynb -p username username -p password password\r\n```\r\n\r\nI'm happy to provide anything else that could prove valuable in helping me discover the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/278", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/278/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/278/events", "html_url": "https://github.com/nteract/papermill/issues/278", "id": 396080482, "node_id": "MDU6SXNzdWUzOTYwODA0ODI=", "number": 278, "title": "generated images as output do not render in a generated notebook", "user": {"login": "stillmatic", "id": 4743676, "node_id": "MDQ6VXNlcjQ3NDM2NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4743676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stillmatic", "html_url": "https://github.com/stillmatic", "followers_url": "https://api.github.com/users/stillmatic/followers", "following_url": "https://api.github.com/users/stillmatic/following{/other_user}", "gists_url": "https://api.github.com/users/stillmatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/stillmatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stillmatic/subscriptions", "organizations_url": "https://api.github.com/users/stillmatic/orgs", "repos_url": "https://api.github.com/users/stillmatic/repos", "events_url": "https://api.github.com/users/stillmatic/events{/privacy}", "received_events_url": "https://api.github.com/users/stillmatic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-04T21:54:01Z", "updated_at": "2019-01-07T00:36:05Z", "closed_at": "2019-01-07T00:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to run some notebooks using `pm.execute_notebook(s3_path, s3_path2, params)` and am able to generate a notebook, which I can view via nbviewer, and everything is correct except for there are no images rendered.\r\n\r\nI am making several matplotlib calls, e.g. \r\n\r\n```\r\nimport matplotlib.pyplot as plt\r\nfig, ax1 = plt.subplots()\r\n[...do some stuff...]\r\nplt.show()\r\n```\r\n\r\nfor what it's worth i am doing these in a loop, in the same cell. \r\n\r\nis this intended behavior? do i need to do some device switching or something, to make \"headless execution\" work correctly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/273", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/273/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/273/events", "html_url": "https://github.com/nteract/papermill/issues/273", "id": 392292710, "node_id": "MDU6SXNzdWUzOTIyOTI3MTA=", "number": 273, "title": "test_chdir fails on OS X: AssertionError: assert '/private/tmp' == '/tmp'", "user": {"login": "pburka", "id": 3958987, "node_id": "MDQ6VXNlcjM5NTg5ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3958987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pburka", "html_url": "https://github.com/pburka", "followers_url": "https://api.github.com/users/pburka/followers", "following_url": "https://api.github.com/users/pburka/following{/other_user}", "gists_url": "https://api.github.com/users/pburka/gists{/gist_id}", "starred_url": "https://api.github.com/users/pburka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pburka/subscriptions", "organizations_url": "https://api.github.com/users/pburka/orgs", "repos_url": "https://api.github.com/users/pburka/repos", "events_url": "https://api.github.com/users/pburka/events{/privacy}", "received_events_url": "https://api.github.com/users/pburka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-12-18T19:04:49Z", "updated_at": "2019-01-18T01:29:42Z", "closed_at": "2019-01-18T01:29:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On a standard OS X install, `/tmp` is a link to `/private/tmp`.\r\nThe test_chdir test fails with the following output:\r\n```\r\n______________________________________________ test_chdir _______________________________________________\r\n\r\n    def test_chdir():\r\n        old_cwd = os.getcwd()\r\n    \r\n        with chdir('/tmp'):\r\n            assert os.getcwd() != old_cwd\r\n>           assert os.getcwd() == '/tmp'\r\nE           AssertionError: assert '/private/tmp' == '/tmp'\r\nE             - /private/tmp\r\nE             + /tmp\r\n\r\npapermill/tests/test_utils.py:27: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/271", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/271/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/271/events", "html_url": "https://github.com/nteract/papermill/issues/271", "id": 391372208, "node_id": "MDU6SXNzdWUzOTEzNzIyMDg=", "number": 271, "title": "Handling secrets", "user": {"login": "mindsbackyard", "id": 22625591, "node_id": "MDQ6VXNlcjIyNjI1NTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/22625591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindsbackyard", "html_url": "https://github.com/mindsbackyard", "followers_url": "https://api.github.com/users/mindsbackyard/followers", "following_url": "https://api.github.com/users/mindsbackyard/following{/other_user}", "gists_url": "https://api.github.com/users/mindsbackyard/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindsbackyard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindsbackyard/subscriptions", "organizations_url": "https://api.github.com/users/mindsbackyard/orgs", "repos_url": "https://api.github.com/users/mindsbackyard/repos", "events_url": "https://api.github.com/users/mindsbackyard/events{/privacy}", "received_events_url": "https://api.github.com/users/mindsbackyard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1014073565, "node_id": "MDU6TGFiZWwxMDE0MDczNTY1", "url": "https://api.github.com/repos/nteract/papermill/labels/idea", "name": "idea", "color": "a80631", "default": false, "description": "An idea which is open to discussion rather than a particular issue or bug"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-15T12:02:44Z", "updated_at": "2020-05-27T11:35:20Z", "closed_at": "2019-01-07T08:06:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently all passed parameters are stored in the output notebook for later inspection. Sometimes though, one would like to pass information which should not be disclosed in the output notebook, e.g., authentication tokens, cryptographic keys, passwords, etc. Even when run in report-mode papermill, injected parameters are only hidden.\r\n\r\nAs a workaround secrets can be passed by usin environment variables. Though, if the notebook is executed on a remote engine, e.g., as in #229; exposing an environment variable might not be possible.\r\n\r\nA possible solution could be to introduce new `secrets` cells in the notebook, similar to the existing `parameters` cells. Secrets would be injected using `--secrets`, `--secrets-raw`, etc., options on the command line. Injected secret cells would be sent to the executing engine, but wouldn't be saved in the output notebook. Alternatively, injected secrets could be stored in an encrypted format for later inspection. The encryption key could either be explicitly specified or generated on the fly and returned in the invoking client.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/270", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/270/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/270/events", "html_url": "https://github.com/nteract/papermill/issues/270", "id": 391245474, "node_id": "MDU6SXNzdWUzOTEyNDU0NzQ=", "number": 270, "title": "Progress bar fails if `seaborn` is imported", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-14T19:57:54Z", "updated_at": "2019-01-14T00:52:03Z", "closed_at": "2019-01-14T00:52:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to #165:  on `papermill==0.16.2`, `seaborn==0.9.0`:\r\n```\r\n> python -c \"import seaborn as sns; import papermill as pm; pm.execute_notebook(input_path='report_mode_test.ipynb', output_path='/tmp/out.ipynb')\"\r\n\r\nHBox(children=(IntProgress(value=0, max=3), HTML(value='')))\r\n```\r\n\r\nLooks like the notebook environment check is not right here? It looks like `tqdm.autonotebook` does handle this case properly so maybe it would make more sense to just use that instead.\r\n\r\n```\r\npython -c 'import seaborn as sns; from tqdm.autonotebook import tqdm; [i for i in tqdm(range(5))]'\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00<00:00, 23250.02it/s]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/269", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/269/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/269/events", "html_url": "https://github.com/nteract/papermill/issues/269", "id": 389865565, "node_id": "MDU6SXNzdWUzODk4NjU1NjU=", "number": 269, "title": "Support `allow_errors` flag from `nbconvert`", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-11T17:10:38Z", "updated_at": "2020-06-10T16:24:47Z", "closed_at": "2018-12-14T19:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like the `nbconvert` execute preprocessor supports an `allow_errors` flag that lets a notebook continue running whenever errors are encountered and instead just logs them: https://github.com/jupyter/nbconvert/blob/02c5cd1424b65da018f244e0f033a3dde55f76ca/nbconvert/preprocessors/execute.py#L121-L132\r\n\r\nI certainly don't think this should be the default behavior but it would be nice for some long-running reports that might fail at various stages. Is there anything that would be required to support this besides adding that flag to `pm.execute_notebook` and propagating it through to `nbconvert`?\r\n\r\nI'm not sure I fully understand the notion of engines but if this is engine-specific behavior then perhaps it needs to be specified differently?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/268", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/268/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/268/events", "html_url": "https://github.com/nteract/papermill/issues/268", "id": 389757148, "node_id": "MDU6SXNzdWUzODk3NTcxNDg=", "number": 268, "title": "Unexpected output notebook location when using `--cwd`", "user": {"login": "betatim", "id": 1448859, "node_id": "MDQ6VXNlcjE0NDg4NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1448859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/betatim", "html_url": "https://github.com/betatim", "followers_url": "https://api.github.com/users/betatim/followers", "following_url": "https://api.github.com/users/betatim/following{/other_user}", "gists_url": "https://api.github.com/users/betatim/gists{/gist_id}", "starred_url": "https://api.github.com/users/betatim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/betatim/subscriptions", "organizations_url": "https://api.github.com/users/betatim/orgs", "repos_url": "https://api.github.com/users/betatim/repos", "events_url": "https://api.github.com/users/betatim/events{/privacy}", "received_events_url": "https://api.github.com/users/betatim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-12-11T13:10:49Z", "updated_at": "2019-01-18T01:29:52Z", "closed_at": "2019-01-18T01:29:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current working dir support added in #261 is a bit unintuitive to use.\r\n\r\nAs a user I'd expect the following to take the notebook in `somedir/` run it with working dir `otherdir/` and place the output in `somedir/output.ipynb`\r\n```\r\n$ papermill --cwd otherdir somedir/notebook.ipynb somedir/output.ipynb\r\n```\r\n\r\nHowever what `papermill` tries to do is create `otherdir/somedir/output.ipynb` as output.\r\n\r\nRe-reading the code it makes complete sense that it does that (because it saves during the execution) but it is at best \"unexpected\" :-/\r\n\r\nNot quite sure yet how to fix this but I think we should fix it so that the expected behaviour is what happens.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/266", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/266/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/266/events", "html_url": "https://github.com/nteract/papermill/issues/266", "id": 389230859, "node_id": "MDU6SXNzdWUzODkyMzA4NTk=", "number": 266, "title": "Documenting entry points.", "user": {"login": "janfreyberg", "id": 4092425, "node_id": "MDQ6VXNlcjQwOTI0MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4092425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janfreyberg", "html_url": "https://github.com/janfreyberg", "followers_url": "https://api.github.com/users/janfreyberg/followers", "following_url": "https://api.github.com/users/janfreyberg/following{/other_user}", "gists_url": "https://api.github.com/users/janfreyberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/janfreyberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janfreyberg/subscriptions", "organizations_url": "https://api.github.com/users/janfreyberg/orgs", "repos_url": "https://api.github.com/users/janfreyberg/repos", "events_url": "https://api.github.com/users/janfreyberg/events{/privacy}", "received_events_url": "https://api.github.com/users/janfreyberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1039443629, "node_id": "MDU6TGFiZWwxMDM5NDQzNjI5", "url": "https://api.github.com/repos/nteract/papermill/labels/docs", "name": "docs", "color": "0a80c9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-10T10:19:19Z", "updated_at": "2019-04-27T18:14:24Z", "closed_at": "2019-04-27T18:14:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since entry points are in the [latest release](https://github.com/nteract/papermill/commit/29ccb408d5865f950f019b5aa3f5a2640ca23aeb) it would be nice to document how to develop new entry points so third-party developers can do so.\r\n\r\nI will take a stab at this, but I wanted to open an issue to discuss the format. At the moment, there are two main sections in the docs: *Installation* and *Usage*. My proposal would be to add a third section titled e.g. *Developing papermill* that has general development advice for the library overall, and specific sub-sections for developing an engine and an IO handler.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/264", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/264/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/264/events", "html_url": "https://github.com/nteract/papermill/issues/264", "id": 388247192, "node_id": "MDU6SXNzdWUzODgyNDcxOTI=", "number": 264, "title": "Specifying YAML file as parameter input generates warning", "user": {"login": "nickynicolson", "id": 3758694, "node_id": "MDQ6VXNlcjM3NTg2OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3758694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickynicolson", "html_url": "https://github.com/nickynicolson", "followers_url": "https://api.github.com/users/nickynicolson/followers", "following_url": "https://api.github.com/users/nickynicolson/following{/other_user}", "gists_url": "https://api.github.com/users/nickynicolson/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickynicolson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickynicolson/subscriptions", "organizations_url": "https://api.github.com/users/nickynicolson/orgs", "repos_url": "https://api.github.com/users/nickynicolson/repos", "events_url": "https://api.github.com/users/nickynicolson/events{/privacy}", "received_events_url": "https://api.github.com/users/nickynicolson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MSeal", "id": 1863892, "node_id": "MDQ6VXNlcjE4NjM4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSeal", "html_url": "https://github.com/MSeal", "followers_url": "https://api.github.com/users/MSeal/followers", "following_url": "https://api.github.com/users/MSeal/following{/other_user}", "gists_url": "https://api.github.com/users/MSeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSeal/subscriptions", "organizations_url": "https://api.github.com/users/MSeal/orgs", "repos_url": "https://api.github.com/users/MSeal/repos", "events_url": "https://api.github.com/users/MSeal/events{/privacy}", "received_events_url": "https://api.github.com/users/MSeal/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-12-06T14:50:11Z", "updated_at": "2018-12-10T21:22:31Z", "closed_at": "2018-12-10T21:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs specify that parameters may be specified in a YAML file:\r\n\r\n    Options:\r\n     (snip)\r\n      -f, --parameters_file TEXT      Path to YAML file containing parameters.\r\n\r\nSpecification of a .yaml parameters file on the command line generates the following warning:\r\n\r\n    The specified input file (example.yaml) does not end in '.ipynb' or '.json'\r\n\r\nThe execution proceeds and parameters are read, but the warning is misleading.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nteract/papermill/issues/263", "repository_url": "https://api.github.com/repos/nteract/papermill", "labels_url": "https://api.github.com/repos/nteract/papermill/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/nteract/papermill/issues/263/comments", "events_url": "https://api.github.com/repos/nteract/papermill/issues/263/events", "html_url": "https://github.com/nteract/papermill/issues/263", "id": 387933241, "node_id": "MDU6SXNzdWUzODc5MzMyNDE=", "number": 263, "title": "papermill --prepare-only fails if the notebook has a saved error", "user": {"login": "pburka", "id": 3958987, "node_id": "MDQ6VXNlcjM5NTg5ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3958987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pburka", "html_url": "https://github.com/pburka", "followers_url": "https://api.github.com/users/pburka/followers", "following_url": "https://api.github.com/users/pburka/following{/other_user}", "gists_url": "https://api.github.com/users/pburka/gists{/gist_id}", "starred_url": "https://api.github.com/users/pburka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pburka/subscriptions", "organizations_url": "https://api.github.com/users/pburka/orgs", "repos_url": "https://api.github.com/users/pburka/repos", "events_url": "https://api.github.com/users/pburka/events{/privacy}", "received_events_url": "https://api.github.com/users/pburka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641549344, "node_id": "MDU6TGFiZWw2NDE1NDkzNDQ=", "url": "https://api.github.com/repos/nteract/papermill/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-05T20:32:15Z", "updated_at": "2018-12-18T21:14:53Z", "closed_at": "2018-12-18T21:14:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If papermill is invoked with --prepare-only on a notebook with a saved KeyboradInterrupt error (or possibly other errors), it fails as if the error occurred while running papermill.\r\n\r\n**Expected behavior:** papermill should not report an error and should exit 0 (success).\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a new, empty jupyter notebook with a single cell like this:\r\n```\r\nimport time\r\ntime.sleep(1000)\r\n```\r\n2. Evaluate the cell, then interrupt the kernel while it's running (e.g. press the 'stop' button in jupyter).\r\n```\r\n---------------------------------------------------------------------------\r\nKeyboardInterrupt                         Traceback (most recent call last)\r\n<ipython-input-10-31b17fe32cbc> in <module>()\r\n      1 import time\r\n----> 2 time.sleep(1000)\r\n\r\nKeyboardInterrupt: \r\n```\r\n\r\n3. Save the notebook.\r\n\r\n4. Run papermill on the saved notebook:\r\n```\r\n$ papermill --prepare-only --parameters_yaml \"{foo: bar}\" -- ./.ipython/notebooks/papermill-test.ipynb  foo.ipynb\r\nInput Notebook:  ./.ipython/notebooks/papermill-test.ipynb\r\nOutput Notebook: foo.ipynb\r\nTraceback (most recent call last):\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/bin/papermill\", line 11, in <module>\r\n    load_entry_point('papermill===0.16.1', 'console_scripts', 'papermill')()\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/papermill/cli.py\", line 124, in papermill\r\n    report_mode=report_mode,\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/papermill/execute.py\", line 70, in execute_notebook\r\n    raise_for_execution_errors(nb, output_path)\r\n  File \"/nas/dft/ire/pburka/.conda/envs/papermill/lib/python3.6/site-packages/papermill/execute.py\", line 182, in raise_for_execution_errors\r\n    raise error\r\npapermill.exceptions.PapermillExecutionError: \r\n---------------------------------------------------------------------------\r\nException encountered at \"In [10]\":\r\n---------------------------------------------------------------------------\r\nKeyboardInterrupt                         Traceback (most recent call last)\r\n<ipython-input-10-31b17fe32cbc> in <module>()\r\n      1 import time\r\n----> 2 time.sleep(1000)\r\n\r\nKeyboardInterrupt: \r\n\r\n$ echo $?\r\n1\r\n```", "performed_via_github_app": null, "score": 1.0}]}