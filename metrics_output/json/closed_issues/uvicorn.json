{"total_count": 305, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/encode/uvicorn/issues/753", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/753/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/753/events", "html_url": "https://github.com/encode/uvicorn/issues/753", "id": 679551022, "node_id": "MDU6SXNzdWU2Nzk1NTEwMjI=", "number": 753, "title": "Lifespan scope is missing asgi dict", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-15T11:45:43Z", "updated_at": "2020-08-15T14:57:28Z", "closed_at": "2020-08-15T14:57:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the lifespan scope (https://asgi.readthedocs.io/en/latest/specs/lifespan.html#scope) is missing the asgi dict\r\n\r\nprompted by\r\n\r\n_Originally posted by @florimondmanca in https://github.com/encode/uvicorn/pull/751_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/749", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/749/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/749/events", "html_url": "https://github.com/encode/uvicorn/issues/749", "id": 676409873, "node_id": "MDU6SXNzdWU2NzY0MDk4NzM=", "number": 749, "title": "Safety Check Reports 2 Vulnerabilities: CVE-2020-7694 and CVE-2020-7695", "user": {"login": "societymartingale", "id": 22607854, "node_id": "MDQ6VXNlcjIyNjA3ODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/22607854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/societymartingale", "html_url": "https://github.com/societymartingale", "followers_url": "https://api.github.com/users/societymartingale/followers", "following_url": "https://api.github.com/users/societymartingale/following{/other_user}", "gists_url": "https://api.github.com/users/societymartingale/gists{/gist_id}", "starred_url": "https://api.github.com/users/societymartingale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/societymartingale/subscriptions", "organizations_url": "https://api.github.com/users/societymartingale/orgs", "repos_url": "https://api.github.com/users/societymartingale/repos", "events_url": "https://api.github.com/users/societymartingale/events{/privacy}", "received_events_url": "https://api.github.com/users/societymartingale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-10T20:53:34Z", "updated_at": "2020-08-10T21:46:44Z", "closed_at": "2020-08-10T21:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nSafety check reports the following 2 vulnerabilities:\r\n\r\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7694\r\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7695\r\n\r\n\r\n### To reproduce\r\n```\r\ntmp> python3.8 -m venv uvi\r\ntmp> source uvi/bin/activate\r\n(uvi) tmp> pip install uvicorn\r\n(uvi) tmp> pip install safety\r\n(uvi) tmp> pip list\r\nPackage    Version\r\n---------- ---------\r\ncertifi    2020.6.20\r\nchardet    3.0.4\r\nclick      7.1.2\r\ndparse     0.5.1\r\nh11        0.9.0\r\nhttptools  0.1.1\r\nidna       2.10\r\npackaging  20.4\r\npip        19.2.3\r\npyparsing  2.4.7\r\nPyYAML     5.3.1\r\nrequests   2.24.0\r\nsafety     1.9.0\r\nsetuptools 41.2.0\r\nsix        1.15.0\r\ntoml       0.10.1\r\nurllib3    1.25.10\r\nuvicorn    0.11.8\r\nuvloop     0.14.0\r\nwebsockets 8.1\r\n(uvi) tmp> safety check --full-report\r\n+==============================================================================+\r\n| REPORT                                                                       |\r\n| checked 20 packages, using default DB                                        |\r\n+============================+===========+==========================+==========+\r\n| package                    | installed | affected                 | ID       |\r\n+============================+===========+==========================+==========+\r\n| uvicorn                    | 0.11.8    | >=0                      | 38624    |\r\n+==============================================================================+\r\n| This affects all versions of package uvicorn. The request logger provided by |\r\n| the package is vulnerable to ASNI escape sequence injection. Whenever any    |\r\n| HTTP request is received, the default behaviour of uvicorn is to log its     |\r\n| details to either the console or a log file. When attackers request crafted  |\r\n| URLs with percent-encoded escape sequences, the logging component will log   |\r\n| the URL after it's been processed with urllib.parse.unquote, therefore       |\r\n| converting any percent-encoded characters into their single-character        |\r\n| equivalent, which can have special meaning in terminal emulators. By         |\r\n| requesting URLs with crafted paths, attackers can: * Pollute uvicorn's       |\r\n| access logs, therefore jeopardising the integrity of such files. * Use ANSI  |\r\n| sequence codes to attempt to interact with the terminal emulator that's      |\r\n| displaying the logs (either in real time or from a file). See:               |\r\n| CVE-2020-7694.                                                               |\r\n+==============================================================================+\r\n| uvicorn                    | 0.11.8    | >=0                      | 38625    |\r\n+==============================================================================+\r\n| This affects all versions of package uvicorn. Uvicorn's implementation of    |\r\n| the HTTP protocol for the httptools parser is vulnerable to HTTP response    |\r\n| splitting. CRLF sequences are not escaped in the value of HTTP headers.      |\r\n| Attackers can exploit this to add arbitrary headers to HTTP responses, or    |\r\n| even return an arbitrary response body, whenever crafted input is used to    |\r\n| construct HTTP headers. See: CVE-2020-7695.                                  |\r\n+==============================================================================+\r\n```\r\n\r\n### Expected behavior\r\n\r\nExpect no issues to be found\r\n\r\n### Actual behavior\r\n\r\n2 issues found\r\n\r\n<!-- A clear and concise description of what actually happens. -->\r\n\r\n### Environment\r\n\r\n(uvi) tmp> uvicorn --version\r\nRunning uvicorn 0.11.8 with CPython 3.8.2 on Darwin\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/747", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/747/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/747/events", "html_url": "https://github.com/encode/uvicorn/issues/747", "id": 675529527, "node_id": "MDU6SXNzdWU2NzU1Mjk1Mjc=", "number": 747, "title": "Unable to use uvicorn with cython modules", "user": {"login": "elben10", "id": 23096679, "node_id": "MDQ6VXNlcjIzMDk2Njc5", "avatar_url": "https://avatars1.githubusercontent.com/u/23096679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elben10", "html_url": "https://github.com/elben10", "followers_url": "https://api.github.com/users/elben10/followers", "following_url": "https://api.github.com/users/elben10/following{/other_user}", "gists_url": "https://api.github.com/users/elben10/gists{/gist_id}", "starred_url": "https://api.github.com/users/elben10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elben10/subscriptions", "organizations_url": "https://api.github.com/users/elben10/orgs", "repos_url": "https://api.github.com/users/elben10/repos", "events_url": "https://api.github.com/users/elben10/events{/privacy}", "received_events_url": "https://api.github.com/users/elben10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T13:57:58Z", "updated_at": "2020-08-08T16:38:09Z", "closed_at": "2020-08-08T16:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Checklist\r\n\r\n<!-- Please make sure you check all these items before submitting your bug report. -->\r\n\r\n- [x] The bug is reproducible against the latest release and/or `master`.\r\n- [x] There are no similar issues or pull requests to fix it yet.\r\n\r\n### Describe the bug\r\n\r\nI am not able to import cython modules when I use uvicorn, but if I use gunicorn with the `UvicornH11Worker` class everything works as expected\r\n\r\n### To reproduce\r\n\r\nIs described in the following [repo](https://github.com/elben10/fastapi_cython_bug)\r\n### Expected behavior\r\n\r\nBe able to import the cython module\r\n\r\n### Actual behavior\r\n\r\nUvicorn crashes\r\n\r\n![](https://github.com/elben10/fastapi_cython_bug/raw/master/images/screenshot.png)\r\n\r\n### Debugging material\r\n\r\nRunning uvicorn 0.11.8 with CPython 3.8.2 on Darwin\r\n\r\n<details>\r\n  <summary>Click to expand tracelog</summary>\r\n  \r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/bin/uvicorn\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/jakobjulelben/Library/Python/3.8/lib/python/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/jakobjulelben/Library/Python/3.8/lib/python/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/jakobjulelben/Library/Python/3.8/lib/python/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/jakobjulelben/Library/Python/3.8/lib/python/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/main.py\", line 345, in main\r\n    run(**kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/main.py\", line 369, in run\r\n    server.run()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/main.py\", line 397, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/main.py\", line 404, in serve\r\n    config.load()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/config.py\", line 278, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/importer.py\", line 23, in import_from_string\r\n    raise exc from None\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/uvicorn/importer.py\", line 20, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"./main.py\", line 3, in <module>\r\n    from fastapi_cython_bug import module\r\nImportError: dlopen(./fastapi_cython_bug/module.cpython-38-darwin.so, 2): no suitable image found.  Did find:\r\n        file system relative paths not allowed in hardened programs\r\n```\r\n</details>\r\n\r\n\r\n<!-- Any tracebacks, screenshots, etc. that can help understanding the problem.\r\n\r\nNOTE:\r\n- Please list tracebacks in full (don't truncate them).\r\n- If relevant, consider turning on DEBUG or TRACE logs for additional details (see the Logging section on https://www.uvicorn.org/settings/ specifically the `log-level` flag).\r\n- Consider using `<details>` to make tracebacks/logs collapsible if they're very large (see https://gist.github.com/ericclemmons/b146fe5da72ca1f706b2ef72a20ac39d).\r\n-->\r\n\r\n### Environment\r\n\r\n- OS / Python / Uvicorn version: just run `uvicorn --version`\r\n- uvicorn main:app\r\n\r\n### Additional context\r\n\r\nNo additional context.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/745", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/745/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/745/events", "html_url": "https://github.com/encode/uvicorn/issues/745", "id": 673053443, "node_id": "MDU6SXNzdWU2NzMwNTM0NDM=", "number": 745, "title": "Add client certificate to request scope", "user": {"login": "mdgilene", "id": 22504060, "node_id": "MDQ6VXNlcjIyNTA0MDYw", "avatar_url": "https://avatars1.githubusercontent.com/u/22504060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdgilene", "html_url": "https://github.com/mdgilene", "followers_url": "https://api.github.com/users/mdgilene/followers", "following_url": "https://api.github.com/users/mdgilene/following{/other_user}", "gists_url": "https://api.github.com/users/mdgilene/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdgilene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdgilene/subscriptions", "organizations_url": "https://api.github.com/users/mdgilene/orgs", "repos_url": "https://api.github.com/users/mdgilene/repos", "events_url": "https://api.github.com/users/mdgilene/events{/privacy}", "received_events_url": "https://api.github.com/users/mdgilene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-04T20:14:05Z", "updated_at": "2020-08-07T14:48:25Z", "closed_at": "2020-08-07T14:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Checklist\r\n\r\n<!-- Please make sure you check all these items before submitting your feature request. -->\r\n\r\n- [x] There are no similar issues or pull requests for this yet.\r\n- [x] I discussed this idea on the [community chat](https://gitter.im/encode/community) and feedback is positive.\r\n\r\n### Is your feature related to a problem? Please describe.\r\n\r\nCurrently there is no way to access the client certificate sent with a request from application without setting up some kind of proxy in front of the server that adds the information to the request headers.\r\n\r\n<!-- A clear and concise description of what you are trying to achieve.\r\n\r\nEg \"I want to be able to [...] but I can't because [...]\". -->\r\n\r\n## Describe the solution you would like.\r\n\r\nThe client certificate information should be added to the request scope.\r\n\r\nI have already tested a solution to this and would be ready to submit a PR for this feature. You can view the potential implementation here https://github.com/mdgilene/uvicorn/commit/9407f0b9bf01edad5f17c56c442f8c47128f368f\r\n\r\n<!-- A clear and concise description of what you would want to happen.\r\n\r\nFor API changes, try to provide a code snippet of what you would like the API to look like.\r\n-->\r\n\r\n## Describe alternatives you considered\r\n\r\nSetup a proxy server in front of Uvicorn to add the required information to the request headers.\r\n\r\n<!-- Please describe any alternative solutions or features you've considered to solve\r\nyour problem and why they wouldn't solve it. -->\r\n\r\n## Additional context\r\n\r\nThis ability is available in server implementations in other languages. Why should the python world be different?\r\n<!-- Provide any additional context, screenshots, tracebacks, etc. about the feature here. -->", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/742", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/742/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/742/events", "html_url": "https://github.com/encode/uvicorn/issues/742", "id": 672357977, "node_id": "MDU6SXNzdWU2NzIzNTc5Nzc=", "number": 742, "title": "Uvicorn cannot be shutdown programmatically", "user": {"login": "andrew-bot", "id": 19860489, "node_id": "MDQ6VXNlcjE5ODYwNDg5", "avatar_url": "https://avatars3.githubusercontent.com/u/19860489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-bot", "html_url": "https://github.com/andrew-bot", "followers_url": "https://api.github.com/users/andrew-bot/followers", "following_url": "https://api.github.com/users/andrew-bot/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-bot/subscriptions", "organizations_url": "https://api.github.com/users/andrew-bot/orgs", "repos_url": "https://api.github.com/users/andrew-bot/repos", "events_url": "https://api.github.com/users/andrew-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-bot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 616811009, "node_id": "MDU6TGFiZWw2MTY4MTEwMDk=", "url": "https://api.github.com/repos/encode/uvicorn/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T21:36:45Z", "updated_at": "2020-08-15T15:29:43Z", "closed_at": "2020-08-15T15:29:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### There is no documented way to shutdown uvicorn in python:\r\n\r\nex:\r\n\r\n```\r\ninstance = uvicorn.run(\"example:app\", host=\"127.0.0.1\", port=5000, log_level=\"info\")\r\ninstance.shutdown()\r\n```\r\n\r\nHow do we shutdown uvicorn?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/741", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/741/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/741/events", "html_url": "https://github.com/encode/uvicorn/issues/741", "id": 672050293, "node_id": "MDU6SXNzdWU2NzIwNTAyOTM=", "number": 741, "title": "uvicorn flagged as vulnerable (all version) on pyup.io", "user": {"login": "MarioElstner", "id": 68585659, "node_id": "MDQ6VXNlcjY4NTg1NjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/68585659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarioElstner", "html_url": "https://github.com/MarioElstner", "followers_url": "https://api.github.com/users/MarioElstner/followers", "following_url": "https://api.github.com/users/MarioElstner/following{/other_user}", "gists_url": "https://api.github.com/users/MarioElstner/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarioElstner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarioElstner/subscriptions", "organizations_url": "https://api.github.com/users/MarioElstner/orgs", "repos_url": "https://api.github.com/users/MarioElstner/repos", "events_url": "https://api.github.com/users/MarioElstner/events{/privacy}", "received_events_url": "https://api.github.com/users/MarioElstner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T12:44:38Z", "updated_at": "2020-08-03T13:10:07Z", "closed_at": "2020-08-03T13:10:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the latest update to the pyup DB (Aug 2nd), all existing versions of uvicorn have been flagged as vulnerable. https://pyup.io/changelogs/uvicorn/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/738", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/738/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/738/events", "html_url": "https://github.com/encode/uvicorn/issues/738", "id": 670926459, "node_id": "MDU6SXNzdWU2NzA5MjY0NTk=", "number": 738, "title": "Safety alert", "user": {"login": "Kulikovpavel", "id": 1457767, "node_id": "MDQ6VXNlcjE0NTc3Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1457767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kulikovpavel", "html_url": "https://github.com/Kulikovpavel", "followers_url": "https://api.github.com/users/Kulikovpavel/followers", "following_url": "https://api.github.com/users/Kulikovpavel/following{/other_user}", "gists_url": "https://api.github.com/users/Kulikovpavel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kulikovpavel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kulikovpavel/subscriptions", "organizations_url": "https://api.github.com/users/Kulikovpavel/orgs", "repos_url": "https://api.github.com/users/Kulikovpavel/repos", "events_url": "https://api.github.com/users/Kulikovpavel/events{/privacy}", "received_events_url": "https://api.github.com/users/Kulikovpavel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-01T14:40:30Z", "updated_at": "2020-08-02T10:08:57Z", "closed_at": "2020-08-01T15:22:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Uvicorn is in SafetyDB now\r\n\r\nhttps://pyupio.github.io/safety-db/\r\n\r\n\r\nThis causes my CI build to fail. Can it be fixed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/736", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/736/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/736/events", "html_url": "https://github.com/encode/uvicorn/issues/736", "id": 670679566, "node_id": "MDU6SXNzdWU2NzA2Nzk1NjY=", "number": 736, "title": "Uvicorn laucnhed in Docker container - connection interrupted", "user": {"login": "Minstel", "id": 6154708, "node_id": "MDQ6VXNlcjYxNTQ3MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6154708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Minstel", "html_url": "https://github.com/Minstel", "followers_url": "https://api.github.com/users/Minstel/followers", "following_url": "https://api.github.com/users/Minstel/following{/other_user}", "gists_url": "https://api.github.com/users/Minstel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Minstel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Minstel/subscriptions", "organizations_url": "https://api.github.com/users/Minstel/orgs", "repos_url": "https://api.github.com/users/Minstel/repos", "events_url": "https://api.github.com/users/Minstel/events{/privacy}", "received_events_url": "https://api.github.com/users/Minstel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-01T08:59:00Z", "updated_at": "2020-08-01T09:42:10Z", "closed_at": "2020-08-01T09:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I experience a strange issue. Probably I do smth wrong.\r\n\r\nI use uvicorn server with FastAPI framework.\r\n\r\nWhen project is laucnhed without docker, server is running fine and I can access site at provided entry point `http://127.0.0.1:8000`.\r\n\r\nBut when it is launched in docker, using `docker-compose`, and when I navigate to `http://127.0.0.1:8000`, browser shows it's native error page with message `Connection interrupted` (not `Not found`, so it can actually reach server).\r\n\r\nServer output after docker launch:\r\n```\r\nUvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nStarted reloader process [1] using statreload\r\nStarted server process [12]\r\nWaiting for application startup.\r\nApplication startup complete.\r\n```\r\n\r\nWhen application code is changed, server is automatically restarted, as it should be.\r\n\r\n---\r\n\r\nRelated project fies:\r\n\r\n`docker-compose.yml`:\r\n\r\n```\r\nversion: '3.3'\r\n\r\nservices:\r\n  python:\r\n    build:\r\n      context: .\r\n    command: bash -c \"pip install -r requirements_dev.txt && python main.py\"\r\n    ports:\r\n      - 8000:8000\r\n    volumes:\r\n      - ./wfs/:/app/\r\n    depends_on:\r\n      - db\r\n      - redis\r\n    restart: on-failure\r\n    environment:\r\n      REDIS_LOCATION: \"redis://redis:6379/1\"\r\n      DEBUG: \"True\"\r\n\r\n  db:\r\n    image: mongo\r\n    ports:\r\n      - 27017:27017\r\n    volumes:\r\n      - mongo_data:/var/lib/mongodb/data\r\n    restart: on-failure\r\n\r\n  redis:\r\n    image: redis:5.0-alpine\r\n    restart: on-failure\r\n    command: redis-server\r\n    volumes:\r\n      - redis_data:/data\r\n\r\nvolumes:\r\n  mongo_data:\r\n  redis_data:\r\n```\r\n\r\nDockerfile:\r\n\r\n```\r\nFROM python3.8\r\nARG DEBUG\r\n\r\nENV PYTHONUNBUFFERED 1\r\n\r\nWORKDIR /app/\r\n\r\nCOPY wfs/requirements.txt .\r\nCOPY wfs/requirements_dev.txt .\r\n\r\nRUN pip install -r requirements.txt\r\nRUN if [ \"x$DEBUG\" = \"x\" ] ; then echo \"Production build, no dev dependencies\" ; else pip install -r requirements_dev.txt ; fi\r\n\r\nCOPY wfs .\r\n```\r\n\r\n`main.py`:\r\n\r\n```\r\nimport uvicorn\r\n\r\nfrom app import app\r\n\r\n\"\"\"Project entry point.\r\n\r\nInit app, routes and launch server.\r\n\"\"\"\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run('main:app', host=\"127.0.0.1\", port=8000, reload=True, debug=True)\r\n```\r\n\r\n`app` code is smth like :\r\n\r\n```\r\nfrom fastapi import FastAPI, APIRouter\r\n\r\napp = FastAPI(debug=True)\r\nrouter = APIRouter()\r\n\r\napp.include_router(router)\r\n\r\n@router.get('/')\r\nasync def root():\r\n    return {'test': 'rest'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/733", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/733/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/733/events", "html_url": "https://github.com/encode/uvicorn/issues/733", "id": 668789895, "node_id": "MDU6SXNzdWU2Njg3ODk4OTU=", "number": 733, "title": "protocols.utils.get_local_addr ValueError with socket", "user": {"login": "bukowa", "id": 38087302, "node_id": "MDQ6VXNlcjM4MDg3MzAy", "avatar_url": "https://avatars1.githubusercontent.com/u/38087302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bukowa", "html_url": "https://github.com/bukowa", "followers_url": "https://api.github.com/users/bukowa/followers", "following_url": "https://api.github.com/users/bukowa/following{/other_user}", "gists_url": "https://api.github.com/users/bukowa/gists{/gist_id}", "starred_url": "https://api.github.com/users/bukowa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bukowa/subscriptions", "organizations_url": "https://api.github.com/users/bukowa/orgs", "repos_url": "https://api.github.com/users/bukowa/repos", "events_url": "https://api.github.com/users/bukowa/events{/privacy}", "received_events_url": "https://api.github.com/users/bukowa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T14:24:46Z", "updated_at": "2020-07-31T09:58:01Z", "closed_at": "2020-07-31T09:58:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**version**: 0.11.7\r\n\r\n\r\nthis line causes trouble https://github.com/encode/uvicorn/blob/master/uvicorn/protocols/utils.py#L39\r\n\r\nvalue of `info` variable: `/socket/socket.sock`\r\n\r\ncommand:\r\n````\r\nuvicorn --uds /socket/socket.sock --interface=asgi3 --lifespan=off --log-level=trace --use-colors --proxy-headers dim_django.asgi:application\r\n````\r\n\r\ntrace line is different due to added logging\r\n````python\r\ndjango_1  | INFO:     Started server process [10]\r\ndjango_1  | INFO:uvicorn.error:Started server process [10]\r\ndjango_1  | INFO:     Uvicorn running on unix socket /socket/socket.sock (Press CTRL+C to quit)\r\ndjango_1  | INFO:uvicorn.error:Uvicorn running on unix socket /socket/socket.sock (Press CTRL+C to quit)\r\ndjango_1  | INFO:root:/socket/socket.sock\r\ndjango_1  | ERROR:asyncio:Exception in callback UVTransport._call_connection_made\r\ndjango_1  | handle: <Handle UVTransport._call_connection_made>\r\ndjango_1  | Traceback (most recent call last):\r\ndjango_1  |   File \"uvloop/cbhandles.pyx\", line 73, in uvloop.loop.Handle._run\r\ndjango_1  |   File \"uvloop/handles/basetransport.pyx\", line 134, in uvloop.loop.UVBaseTransport._call_connection_made\r\ndjango_1  |   File \"uvloop/handles/basetransport.pyx\", line 131, in uvloop.loop.UVBaseTransport._call_connection_made\r\ndjango_1  |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 132, in connection_made\r\ndjango_1  |     self.server = get_local_addr(transport)\r\ndjango_1  |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/protocols/utils.py\", line 45, in get_local_addr\r\ndjango_1  |     return (str(info[0]), int(info[1]))\r\ndjango_1  | ValueError: invalid literal for int() with base 10: 's'\r\n\r\n````\r\nhttps://github.com/encode/uvicorn/issues/600\r\n\r\nnginx config:\r\n````\r\nupstream django {\r\n  server unix:/socket/socket.sock;\r\n}\r\nserver {\r\n\r\n  listen 9000;\r\n  server_name localhost;\r\n\r\n  location /static/ {\r\n    autoindex off;\r\n    alias /static/;\r\n  }\r\n\r\n  location / {\r\n    proxy_pass http://django/;\r\n  }\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/728", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/728/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/728/events", "html_url": "https://github.com/encode/uvicorn/issues/728", "id": 667847300, "node_id": "MDU6SXNzdWU2Njc4NDczMDA=", "number": 728, "title": "Security Notice & Bug Bounty - HTTP Response Splitting - huntr.dev", "user": {"login": "huntr-helper", "id": 61279246, "node_id": "MDQ6VXNlcjYxMjc5MjQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/61279246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huntr-helper", "html_url": "https://github.com/huntr-helper", "followers_url": "https://api.github.com/users/huntr-helper/followers", "following_url": "https://api.github.com/users/huntr-helper/following{/other_user}", "gists_url": "https://api.github.com/users/huntr-helper/gists{/gist_id}", "starred_url": "https://api.github.com/users/huntr-helper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huntr-helper/subscriptions", "organizations_url": "https://api.github.com/users/huntr-helper/orgs", "repos_url": "https://api.github.com/users/huntr-helper/repos", "events_url": "https://api.github.com/users/huntr-helper/events{/privacy}", "received_events_url": "https://api.github.com/users/huntr-helper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T13:30:39Z", "updated_at": "2020-07-29T14:52:53Z", "closed_at": "2020-07-29T14:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "\n# Overview\n\nuvicorn is a lightning-fast ASGI server.\n\nThis package is vulnerable to HTTP Response Splitting. Uvicorn's implementation of the HTTP protocol for the httptools parser is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers.\n\n# Proof of Concept\n\n```\nasync def app(scope, receive, send):\nassert scope['type'] == 'http'\nawait send({\n'type': 'http.response.start',\n'status': 200,\n'headers': [\n[b'Content-Type', b'text/plain'],\n[b'Referer', scope['path'].encode()],\n]\n})\n await send({\n'type': 'http.response.body',\n'body': b'Hello, world!',\n})\n```\n\n```\nuvicorn poc-3:app --port 9999 --http httptools\n```\n\nTo exploit this vulnerability, make a GET request with a crafted URL path like so:\n\n```\ncurl -v 'http://localhost:9999/foo%0d%0ahuntr:%20dev'\n```\n\nUvicorn will return an additional HTTP header \"huntr\" with the value \"dev\":\n\n```\n- Trying 127.0.0.1...\n- Connected to localhost (127.0.0.1) port 9999 (#0)\n  > GET /foo%0d%0ahuntr:%20dev HTTP/1.1\n  > Host: localhost:9999\n  > User-Agent: curl/7.58.0\n  > Accept: _/_\n\n< HTTP/1.1 200 OK\n< server: uvicorn\n< content-type: text/plain\n< referer: /huntr\n< dev: dev\n< transfer-encoding: chunked\n<\n```\n\n\n# Bug Bounty\n\nWe have opened up a bounty for this issue on our bug bounty platform. Want to solve this vulnerability and get rewarded \ud83d\udcb0? Go to https://huntr.dev/\n\nWe will submit a pull request directly to your repository with the fix as soon as possible. Want to learn more? Go to https://github.com/418sec/huntr \ud83d\udcda\n\n_Automatically generated by @huntr-helper..._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/727", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/727/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/727/events", "html_url": "https://github.com/encode/uvicorn/issues/727", "id": 667411669, "node_id": "MDU6SXNzdWU2Njc0MTE2Njk=", "number": 727, "title": "ValueError in version 0.11.7", "user": {"login": "felipe3dfx", "id": 4070833, "node_id": "MDQ6VXNlcjQwNzA4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4070833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipe3dfx", "html_url": "https://github.com/felipe3dfx", "followers_url": "https://api.github.com/users/felipe3dfx/followers", "following_url": "https://api.github.com/users/felipe3dfx/following{/other_user}", "gists_url": "https://api.github.com/users/felipe3dfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipe3dfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipe3dfx/subscriptions", "organizations_url": "https://api.github.com/users/felipe3dfx/orgs", "repos_url": "https://api.github.com/users/felipe3dfx/repos", "events_url": "https://api.github.com/users/felipe3dfx/events{/privacy}", "received_events_url": "https://api.github.com/users/felipe3dfx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-28T22:04:29Z", "updated_at": "2020-07-31T10:57:35Z", "closed_at": "2020-07-31T10:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "there are a bug in the last version.\r\n\r\n![image](https://user-images.githubusercontent.com/4070833/88726744-e7095400-d0f3-11ea-8c7e-bbe8f5bfa115.png)\r\n\r\nPackages:\r\n\r\nacme | 1.1.0\r\n-- | --\r\naioredis | 1.3.1\r\nasgiref | 3.2.10\r\nasync-timeout | 3.0.1\r\nattrs | 19.3.0\r\nautobahn | 20.7.1\r\nautomat | 20.2.0\r\nax3-mercadopago | 0.2.6\r\nax3-model-extras | 1.2.5\r\nax3-redactor | 1.0.11\r\nbackcall | 0.2.0\r\nblinker | 1.4\r\ncachetools | 4.1.1\r\ncertbot | 0.40.0\r\ncertifi | 2020.6.20\r\ncffi | 1.14.1\r\nchannels | 2.4.0\r\nchannels-redis | 3.0.1\r\nchardet | 3.0.4\r\nclick | 7.1.2\r\ncolorama | 0.4.3\r\ncommand-not-found | 0.3\r\nconfigargparse | 0.13.0\r\nconfigobj | 5.0.6\r\nconstantly | 15.1.0\r\ncryptography | 3.0\r\ncssselect | 1.1.0\r\ncssutils | 1.0.2\r\ndaphne | 2.5.0\r\ndbus-python | 1.2.16\r\ndecorator | 4.4.2\r\ndefusedxml | 0.6.0\r\ndistro | 1.4.0\r\ndistro-info | 0.23ubuntu1\r\ndjango | 3.0.8\r\ndjango-admin-sortable | 2.2.3\r\ndjango-appconf | 1.0.4\r\ndjango-axes | 5.4.1\r\ndjango-compressor | 2.4\r\ndjango-extensions | 3.0.3\r\ndjango-hashid-field | 3.1.3\r\ndjango-ipware | 3.0.0\r\ndjango-redis | 4.12.1\r\ndjango-widget-tweaks | 1.4.8\r\nentrypoints | 0.3\r\nfail2ban | 0.11.1\r\nfuture | 0.18.2\r\ngdal | 3.0.4\r\ngunicorn | 20.0.4\r\nh11 | 0.9.0\r\nhashids | 1.3.1\r\nhiredis | 1.1.0\r\nhttplib2 | 0.14.0\r\nhttptools | 0.1.1\r\nhuey | 2.2.0\r\nhyperlink | 19.0.0\r\nidna | 2.10\r\nincremental | 17.5.0\r\niotop | 0.6\r\nipython | 7.16.1\r\nipython-genutils | 0.2.0\r\njedi | 0.17.2\r\njosepy | 1.2.0\r\nkeyring | 18.0.1\r\nlanguage-selector | 0.1\r\nlaunchpadlib | 1.10.13\r\nlazr.restfulclient | 0.14.2\r\nlazr.uri | 1.0.3\r\nlinecache2 | 1.0.0\r\nlxml | 4.5.2\r\nmock | 3.0.5\r\nmsgpack | 1.0.0\r\nnetifaces | 0.10.4\r\nnumpy | 1.17.4\r\noauthlib | 3.1.0\r\nparsedatetime | 2.4\r\nparso | 0.7.1\r\npbr | 5.4.5\r\npexpect | 4.8.0\r\npickleshare | 0.7.5\r\npillow | 7.2.0\r\npip | 20.1.1\r\npip-tools | 5.2.1\r\npremailer | 3.7.0\r\nprompt-toolkit | 3.0.5\r\npsycopg2 | 2.8.4\r\npsycopg2-binary | 2.8.5\r\nptyprocess | 0.6.0\r\npyasn1 | 0.4.8\r\npyasn1-modules | 0.2.8\r\npycparser | 2.20\r\npygments | 2.6.1\r\npygobject | 3.36.0\r\npyhamcrest | 2.0.2\r\npyicu | 2.4.2\r\npyinotify | 0.9.6\r\npyjwt | 1.7.1\r\npymacaroons | 0.13.0\r\npymercadopago | 0.3.0\r\npynacl | 1.3.0\r\npyopenssl | 19.1.0\r\npyrfc3339 | 1.1\r\npython-apt | 2.0.0+ubuntu0.20.4.1\r\npython-dateutil | 2.8.1\r\npython-debian | 0.1.36ubuntu1\r\npython-magic | 0.4.18\r\npython-resize-image | 1.1.19\r\npython3-openid | 3.2.0\r\npytz | 2020.1\r\npyyaml | 5.3.1\r\nrcssmin | 1.0.6\r\nredis | 3.5.3\r\nrequests | 2.24.0\r\nrequests-oauthlib | 1.3.0\r\nrequests-toolbelt | 0.8.0\r\nrequests-unixsocket | 0.2.0\r\nrjsmin | 1.1.0\r\nsecretstorage | 2.3.1\r\nsentry-sdk | 0.16.2\r\nservice-identity | 18.1.0\r\nsetuptools | 45.2.0\r\nsimplejson | 3.16.0\r\nsix | 1.15.0\r\nsocial-auth-app-django | 4.0.0\r\nsocial-auth-core | 3.3.3\r\nsqlparse | 0.3.1\r\nssh-import-id | 5.10\r\nsystemd-python | 234\r\ntestresources | 2.0.0\r\ntraceback2 | 1.4.0\r\ntraitlets | 4.3.3\r\ntwisted | 20.3.0\r\ntxaio | 20.4.1\r\nubuntu-advantage-tools | 20.3\r\nufw | 0.36\r\nunattended-upgrades | 0.1\r\nunittest2 | 1.1.0\r\nurllib3 | 1.25.10\r\nuvicorn | 0.11.7\r\nuvloop | 0.14.0\r\nwadllib | 1.3.3\r\nwcwidth | 0.2.5\r\nwebsockets | 8.1\r\nwheel | 0.34.2\r\nzope.component | 4.3.0\r\nzope.event | 4.4\r\nzope.hookable | 5.0.0\r\nzope.interface | 5.1.0\r\n\r\nAny ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/723", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/723/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/723/events", "html_url": "https://github.com/encode/uvicorn/issues/723", "id": 666631796, "node_id": "MDU6SXNzdWU2NjY2MzE3OTY=", "number": 723, "title": "CVE-2020-7694 ANSI escape sequence injection", "user": {"login": "l0b0", "id": 168301, "node_id": "MDQ6VXNlcjE2ODMwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/168301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0b0", "html_url": "https://github.com/l0b0", "followers_url": "https://api.github.com/users/l0b0/followers", "following_url": "https://api.github.com/users/l0b0/following{/other_user}", "gists_url": "https://api.github.com/users/l0b0/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0b0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0b0/subscriptions", "organizations_url": "https://api.github.com/users/l0b0/orgs", "repos_url": "https://api.github.com/users/l0b0/repos", "events_url": "https://api.github.com/users/l0b0/events{/privacy}", "received_events_url": "https://api.github.com/users/l0b0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T22:49:04Z", "updated_at": "2020-07-28T13:08:28Z", "closed_at": "2020-07-28T13:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like there is a [critical](https://vuldb.com/?id.159010) [security issue in \"all versions\" of uvicorn](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7694).\r\n\r\nI presume there is a typo in the original CVE description, so \"ASNI\" should be \"ANSI\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/719", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/719/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/719/events", "html_url": "https://github.com/encode/uvicorn/issues/719", "id": 664304583, "node_id": "MDU6SXNzdWU2NjQzMDQ1ODM=", "number": 719, "title": "HTTP response splitting vulnerability", "user": {"login": "kevindixon", "id": 180193, "node_id": "MDQ6VXNlcjE4MDE5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/180193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevindixon", "html_url": "https://github.com/kevindixon", "followers_url": "https://api.github.com/users/kevindixon/followers", "following_url": "https://api.github.com/users/kevindixon/following{/other_user}", "gists_url": "https://api.github.com/users/kevindixon/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevindixon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevindixon/subscriptions", "organizations_url": "https://api.github.com/users/kevindixon/orgs", "repos_url": "https://api.github.com/users/kevindixon/repos", "events_url": "https://api.github.com/users/kevindixon/events{/privacy}", "received_events_url": "https://api.github.com/users/kevindixon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-23T08:50:33Z", "updated_at": "2020-07-28T13:08:18Z", "closed_at": "2020-07-28T13:08:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://app.snyk.io/vuln/SNYK-PYTHON-UVICORN-570471\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/717", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/717/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/717/events", "html_url": "https://github.com/encode/uvicorn/issues/717", "id": 659733271, "node_id": "MDU6SXNzdWU2NTk3MzMyNzE=", "number": 717, "title": "Version 0.11.6 causes my connection to MongoDB Atlas failed", "user": {"login": "muslax", "id": 117561, "node_id": "MDQ6VXNlcjExNzU2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/117561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muslax", "html_url": "https://github.com/muslax", "followers_url": "https://api.github.com/users/muslax/followers", "following_url": "https://api.github.com/users/muslax/following{/other_user}", "gists_url": "https://api.github.com/users/muslax/gists{/gist_id}", "starred_url": "https://api.github.com/users/muslax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muslax/subscriptions", "organizations_url": "https://api.github.com/users/muslax/orgs", "repos_url": "https://api.github.com/users/muslax/repos", "events_url": "https://api.github.com/users/muslax/events{/privacy}", "received_events_url": "https://api.github.com/users/muslax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-17T23:29:30Z", "updated_at": "2020-07-23T17:31:27Z", "closed_at": "2020-07-22T06:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my FastAPI project (fresh install version 0.59.0) connecting to MongoDB Atlas always fails. The log is as follow:\r\n\r\n`INFO:     Waiting for application startup.`\r\n`INFO:     Application startup complete.`\r\n`INFO:uvicorn.error:Application startup complete.`\r\n\r\nAfter uninstalling Uvicorn 0.11.6 and install 0.11.5 everything is fine again with following logs:\r\n\r\n`INFO:     Waiting for application startup.`\r\n`INFO:     Connecting to MongoDB Atlas`\r\n`INFO:     Connected to MongoDB Atlas`\r\n`INFO:     Application startup complete.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/716", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/716/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/716/events", "html_url": "https://github.com/encode/uvicorn/issues/716", "id": 657037221, "node_id": "MDU6SXNzdWU2NTcwMzcyMjE=", "number": 716, "title": "Request timing out in 60 seconds regardless of timeout-keep-alive value", "user": {"login": "mojimi", "id": 10172340, "node_id": "MDQ6VXNlcjEwMTcyMzQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10172340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojimi", "html_url": "https://github.com/mojimi", "followers_url": "https://api.github.com/users/mojimi/followers", "following_url": "https://api.github.com/users/mojimi/following{/other_user}", "gists_url": "https://api.github.com/users/mojimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojimi/subscriptions", "organizations_url": "https://api.github.com/users/mojimi/orgs", "repos_url": "https://api.github.com/users/mojimi/repos", "events_url": "https://api.github.com/users/mojimi/events{/privacy}", "received_events_url": "https://api.github.com/users/mojimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-15T03:44:31Z", "updated_at": "2020-07-20T13:36:15Z", "closed_at": "2020-07-20T12:57:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm running uvicorn server with Quart, and when I try to upload a large file or one through a slow shared folder connection, the request always times out at 60 seconds.\r\n\r\nI'm not running any other server like NGINX, the response is coming from Uvicorn itself\r\n\r\nThis is how I'm running it :\r\n\r\n```python\r\nuvicorn.run('app:application', host=\"0.0.0.0\", port=500, loop=\"asyncio\", reload=True, workers=2, timeout_keep_alive=3600, log_level='debug')\r\n```\r\nIt returns me 408 Request Timeout after 60s in the server logs.\r\n\r\nFunny thing is the browser is not notified immediately, only after it finished \"uploading\" the whole file he's aware of the timeout, not sure that's just normal\r\n\r\nUsing uvicorn 0.11.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/715", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/715/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/715/events", "html_url": "https://github.com/encode/uvicorn/issues/715", "id": 656207696, "node_id": "MDU6SXNzdWU2NTYyMDc2OTY=", "number": 715, "title": "Uvicorn redirects to HTTP on socket", "user": {"login": "shsouza", "id": 12308720, "node_id": "MDQ6VXNlcjEyMzA4NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12308720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shsouza", "html_url": "https://github.com/shsouza", "followers_url": "https://api.github.com/users/shsouza/followers", "following_url": "https://api.github.com/users/shsouza/following{/other_user}", "gists_url": "https://api.github.com/users/shsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/shsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shsouza/subscriptions", "organizations_url": "https://api.github.com/users/shsouza/orgs", "repos_url": "https://api.github.com/users/shsouza/repos", "events_url": "https://api.github.com/users/shsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/shsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-13T23:09:15Z", "updated_at": "2020-07-22T04:21:34Z", "closed_at": "2020-07-22T04:21:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Uvicorn is responding with the status \"307 Temporary Redirect\" when NGINX is configured to redirect HTTPS requests, running Uvicorn with the \"--uds\" setting.\r\n\r\nRunning Uvicorn with the \"--port\" setting is working as expected.\r\n\r\nNGINX conf:\r\n\r\n```\r\nserver {\r\n\r\n\troot /var/www/example.com/ui;\r\n\tindex index.html;\r\n\r\n\tserver_name example.com www.example.com;\r\n\r\n\tlocation / {\r\n\t\ttry_files $uri $uri/ /index.html;\r\n\t}\r\n\r\n\tlocation /api {\r\n            proxy_set_header Host $http_host;\r\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n            proxy_set_header X-Forwarded-Proto $scheme;\r\n            proxy_redirect off;\r\n            proxy_buffering off;\r\n            proxy_pass http://uvicorn;\r\n\t}\r\n\r\n    listen [::]:443 ssl ipv6only=on; # managed by Certbot\r\n    listen 443 ssl; # managed by Certbot\r\n    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot\r\n    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot\r\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\r\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\r\n}\r\n\r\nserver {\r\n    if ($host = www.example.com) {\r\n        return 301 https://$host$request_uri;\r\n    } # managed by Certbot\r\n\r\n\r\n    if ($host = example.com) {\r\n        return 301 https://$host$request_uri;\r\n    } # managed by Certbot\r\n\r\n\tlisten 80;\r\n\tlisten [::]:80;\r\n\r\n\tserver_name example.com www.example.com;\r\n\treturn 404; # managed by Certbot\r\n}\r\n\r\nupstream uvicorn {\r\n\tserver unix:/var/www/example.com/ui/example.sock;\r\n}\r\n```\r\n\r\nNGINX access log:\r\n\r\n```\r\n186.220.197.210 - - [12/Jul/2020:23:20:04 +0000] \"POST /api/usuario HTTP/1.1\" 307 5 \"https://example.com/signup\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\"\r\n186.220.197.210 - - [12/Jul/2020:23:20:11 +0000] \"GET /js/chunk-vendors.3814bb64.js HTTP/1.1\" 200 877412 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\"\r\n186.220.197.210 - - [12/Jul/2020:23:20:15 +0000] \"POST /api/usuario HTTP/1.1\" 307 5 \"https://example.com/signup\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\"\r\n46.72.184.102 - - [12/Jul/2020:23:22:19 +0000] \"GET / HTTP/1.1\" 404 178 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7\"\r\n186.220.197.210 - - [12/Jul/2020:23:26:18 +0000] \"POST /api/usuario HTTP/1.1\" 307 5 \"https://example.com/signup\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0\"\r\n\r\n```\r\n\r\nUVICORN commandline:\r\n\r\n`/usr/local/bin/uvicorn main:app --uds /var/www/example.com/ui/example.sock`\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/714", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/714/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/714/events", "html_url": "https://github.com/encode/uvicorn/issues/714", "id": 655718858, "node_id": "MDU6SXNzdWU2NTU3MTg4NTg=", "number": 714, "title": "Example of gunicorn.conf.file for uvicorn", "user": {"login": "ArcLightSlavik", "id": 31127044, "node_id": "MDQ6VXNlcjMxMTI3MDQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/31127044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArcLightSlavik", "html_url": "https://github.com/ArcLightSlavik", "followers_url": "https://api.github.com/users/ArcLightSlavik/followers", "following_url": "https://api.github.com/users/ArcLightSlavik/following{/other_user}", "gists_url": "https://api.github.com/users/ArcLightSlavik/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArcLightSlavik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArcLightSlavik/subscriptions", "organizations_url": "https://api.github.com/users/ArcLightSlavik/orgs", "repos_url": "https://api.github.com/users/ArcLightSlavik/repos", "events_url": "https://api.github.com/users/ArcLightSlavik/events{/privacy}", "received_events_url": "https://api.github.com/users/ArcLightSlavik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T09:58:20Z", "updated_at": "2020-07-14T08:41:50Z", "closed_at": "2020-07-14T08:41:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm switching from gunicorn to uvicorn\r\n\r\nWhen i start up the server i do\r\n`CMD [\"gunicorn\", \"-c\", \"gunicorn.conf.py\", \"fake_file_location\"]`\r\n\r\nThe gunicorn.conf.py file sets up workers and threads\r\n```\r\nimport multiprocessing\r\n\r\nworker_class = 'gthread'\r\n\r\ncores = multiprocessing.cpu_count()\r\n\r\nworkers = 2 * cores + 1\r\nthreads = 4 * cores + 1\r\nerrorlog = '-'\r\nmax_requests = 3000\r\nmax_requests_jitter = 100\r\n\r\n\r\nif workers < 1:\r\n    workers = 1\r\n```\r\n\r\nI'm trying to find the same for uvicorn but i can't find an example of this file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/712", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/712/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/712/events", "html_url": "https://github.com/encode/uvicorn/issues/712", "id": 654650838, "node_id": "MDU6SXNzdWU2NTQ2NTA4Mzg=", "number": 712, "title": "kill -15 (SIGTERM) doesn't restart the uvicorn server?", "user": {"login": "est", "id": 23570, "node_id": "MDQ6VXNlcjIzNTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/23570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est", "html_url": "https://github.com/est", "followers_url": "https://api.github.com/users/est/followers", "following_url": "https://api.github.com/users/est/following{/other_user}", "gists_url": "https://api.github.com/users/est/gists{/gist_id}", "starred_url": "https://api.github.com/users/est/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est/subscriptions", "organizations_url": "https://api.github.com/users/est/orgs", "repos_url": "https://api.github.com/users/est/repos", "events_url": "https://api.github.com/users/est/events{/privacy}", "received_events_url": "https://api.github.com/users/est/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-10T09:32:37Z", "updated_at": "2020-07-20T14:23:03Z", "closed_at": "2020-07-20T13:20:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am running `uvicorn --host 0.0.0.0 --port 9000 --access-log main:app --workers 2` and want to restart the server manually with `kill -15 $pid` but it just made the server stop without restart. \r\n\r\n\r\nThe `restart()` method https://github.com/encode/uvicorn/blob/7e55554a9f32a127ea3511fa2f55d1b47b66029d/uvicorn/supervisors/basereload.py#L63  works internally. how can I manually trigger a restart?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/711", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/711/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/711/events", "html_url": "https://github.com/encode/uvicorn/issues/711", "id": 653085477, "node_id": "MDU6SXNzdWU2NTMwODU0Nzc=", "number": 711, "title": "[Question] How to start a service with long loading time?", "user": {"login": "FrontMage", "id": 17007026, "node_id": "MDQ6VXNlcjE3MDA3MDI2", "avatar_url": "https://avatars2.githubusercontent.com/u/17007026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrontMage", "html_url": "https://github.com/FrontMage", "followers_url": "https://api.github.com/users/FrontMage/followers", "following_url": "https://api.github.com/users/FrontMage/following{/other_user}", "gists_url": "https://api.github.com/users/FrontMage/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrontMage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrontMage/subscriptions", "organizations_url": "https://api.github.com/users/FrontMage/orgs", "repos_url": "https://api.github.com/users/FrontMage/repos", "events_url": "https://api.github.com/users/FrontMage/events{/privacy}", "received_events_url": "https://api.github.com/users/FrontMage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-08T08:08:45Z", "updated_at": "2020-07-25T09:04:26Z", "closed_at": "2020-07-20T13:34:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use fastapi to serve my TensorFlow model, the thing is that on a crapy machine the model took about a minute to load, uvicorn just kills the process after 30s loading time, I can't find any options to bypass this limit.\r\n\r\nIs there a way to do this?\r\n\r\nThanks for the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/710", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/710/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/710/events", "html_url": "https://github.com/encode/uvicorn/issues/710", "id": 650157101, "node_id": "MDU6SXNzdWU2NTAxNTcxMDE=", "number": 710, "title": "weird console formatting (Arrows and Numbers)", "user": {"login": "nilslindemann", "id": 6892179, "node_id": "MDQ6VXNlcjY4OTIxNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6892179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nilslindemann", "html_url": "https://github.com/nilslindemann", "followers_url": "https://api.github.com/users/nilslindemann/followers", "following_url": "https://api.github.com/users/nilslindemann/following{/other_user}", "gists_url": "https://api.github.com/users/nilslindemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nilslindemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nilslindemann/subscriptions", "organizations_url": "https://api.github.com/users/nilslindemann/orgs", "repos_url": "https://api.github.com/users/nilslindemann/repos", "events_url": "https://api.github.com/users/nilslindemann/events{/privacy}", "received_events_url": "https://api.github.com/users/nilslindemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T19:27:36Z", "updated_at": "2020-07-02T20:08:39Z", "closed_at": "2020-07-02T19:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for uvicorn\r\n\r\nI get a weird console formatting, what could this be?\r\n\r\n```\r\nMicrosoft Windows [Version 6.1.7601]\r\nCopyright (c) 2009 Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\nC:\\code\\learn-fastapi>uvicorn main:app --reload\r\n\u2190[32mINFO\u2190[0m:     Uvicorn running on \u2190[1mhttp://127.0.0.1:8000\u2190[0m (Press CTRL+C to quit)\r\n\u2190[32mINFO\u2190[0m:     Started reloader process [\u2190[36m\u2190[1m5616\u2190[0m] using \u2190[36m\u2190[1mstatreload\u2190[0m\r\n\u2190[32mINFO\u2190[0m:     Started server process [\u2190[36m2300\u2190[0m]\r\n\u2190[32mINFO\u2190[0m:     Waiting for application startup.\r\n\u2190[32mINFO\u2190[0m:     Application startup complete.\r\n```\r\nPython 3.8.3, uvicorn 0.11.5\r\n\r\ngreetings, Nils", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/707", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/707/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/707/events", "html_url": "https://github.com/encode/uvicorn/issues/707", "id": 644327404, "node_id": "MDU6SXNzdWU2NDQzMjc0MDQ=", "number": 707, "title": "Some important code quality issues found", "user": {"login": "pnijhara", "id": 40136154, "node_id": "MDQ6VXNlcjQwMTM2MTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/40136154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnijhara", "html_url": "https://github.com/pnijhara", "followers_url": "https://api.github.com/users/pnijhara/followers", "following_url": "https://api.github.com/users/pnijhara/following{/other_user}", "gists_url": "https://api.github.com/users/pnijhara/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnijhara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnijhara/subscriptions", "organizations_url": "https://api.github.com/users/pnijhara/orgs", "repos_url": "https://api.github.com/users/pnijhara/repos", "events_url": "https://api.github.com/users/pnijhara/events{/privacy}", "received_events_url": "https://api.github.com/users/pnijhara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-24T05:23:49Z", "updated_at": "2020-06-24T10:04:10Z", "closed_at": "2020-06-24T10:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have forked this repo and ran [DeepSource](https://deepsource.io) analysis on it. DeepSource found around 85 issues out of which many can be auto fixed on a single click. Issue report can be found [here](https://deepsource.io/gh/pnijhara/uvicorn/)\r\n\r\nIssues were categorized as:\r\n- **Antipatterns:** 63 (22 can be autofixed)\r\n- **Bug-risks:** 5 (1 can be autofixed)\r\n- **Performance issues:** 7 (4 can be autofixed)\r\n- **Security issues:** 10 (all of them can be autofixed)\r\n\r\nDo let me know how many of you think are false positives and how many of them do you consider an as high priority to improve the code quality of the project. I can send a PR with some fixes if you want.\r\n\r\nI have also added a configuration file (`.deepsource.toml`) in my forked repo to run DeepSource analysis on the project which can be found [here](https://github.com/pnijhara/uvicorn/blob/pnijhara-patch-1/.deepsource.toml)\r\n\r\nDisclaimer: I work for DeepSource", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/706", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/706/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/706/events", "html_url": "https://github.com/encode/uvicorn/issues/706", "id": 643678251, "node_id": "MDU6SXNzdWU2NDM2NzgyNTE=", "number": 706, "title": "How to get uvicorn event loop?", "user": {"login": "vitaliy-diachkov", "id": 67041405, "node_id": "MDQ6VXNlcjY3MDQxNDA1", "avatar_url": "https://avatars2.githubusercontent.com/u/67041405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitaliy-diachkov", "html_url": "https://github.com/vitaliy-diachkov", "followers_url": "https://api.github.com/users/vitaliy-diachkov/followers", "following_url": "https://api.github.com/users/vitaliy-diachkov/following{/other_user}", "gists_url": "https://api.github.com/users/vitaliy-diachkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitaliy-diachkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitaliy-diachkov/subscriptions", "organizations_url": "https://api.github.com/users/vitaliy-diachkov/orgs", "repos_url": "https://api.github.com/users/vitaliy-diachkov/repos", "events_url": "https://api.github.com/users/vitaliy-diachkov/events{/privacy}", "received_events_url": "https://api.github.com/users/vitaliy-diachkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-23T09:24:45Z", "updated_at": "2020-07-01T12:20:03Z", "closed_at": "2020-07-01T09:14:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run uvicorn server programmatically:\r\n```\r\nif __name__ == '__main__':\r\n    uvicorn.run(\r\n        'app:app',\r\n        host='127.0.0.1',\r\n        port=8000,\r\n        log_level='info',\r\n        loop='asyncio'\r\n    )\r\n```\r\n\r\nHow can I get the created asyncio loop to reuse it for aiogram bot?\r\n\r\nI have `bot.py` file for telegram bot and `app.py` file for starlette application running on uvicorn. When I'm trying to call `asyncio.get_running_loop()` in `bot.py` I gets the error that says that there is no running event loops at this time.\r\n\r\nIs it even able to create asyncio loop manually and pass it to `uvicorn.run` function?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/702", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/702/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/702/events", "html_url": "https://github.com/encode/uvicorn/issues/702", "id": 640495510, "node_id": "MDU6SXNzdWU2NDA0OTU1MTA=", "number": 702, "title": "Possibility to install without uvloop", "user": {"login": "mojimi", "id": 10172340, "node_id": "MDQ6VXNlcjEwMTcyMzQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10172340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojimi", "html_url": "https://github.com/mojimi", "followers_url": "https://api.github.com/users/mojimi/followers", "following_url": "https://api.github.com/users/mojimi/following{/other_user}", "gists_url": "https://api.github.com/users/mojimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojimi/subscriptions", "organizations_url": "https://api.github.com/users/mojimi/orgs", "repos_url": "https://api.github.com/users/mojimi/repos", "events_url": "https://api.github.com/users/mojimi/events{/privacy}", "received_events_url": "https://api.github.com/users/mojimi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T14:36:48Z", "updated_at": "2020-07-20T13:37:53Z", "closed_at": "2020-07-20T13:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, uvicorn automatically installs uvloop as a dep, but you can run without it.\r\n\r\nCan we have a version/fork without uvloop? In Docker, Uvloop takes the majority of the build time, its really slow to build, so being able to skip it would really streamline it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/699", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/699/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/699/events", "html_url": "https://github.com/encode/uvicorn/issues/699", "id": 637884863, "node_id": "MDU6SXNzdWU2Mzc4ODQ4NjM=", "number": 699, "title": "Question: Running on different port with UvicornWorker", "user": {"login": "joshy", "id": 170219, "node_id": "MDQ6VXNlcjE3MDIxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshy", "html_url": "https://github.com/joshy", "followers_url": "https://api.github.com/users/joshy/followers", "following_url": "https://api.github.com/users/joshy/following{/other_user}", "gists_url": "https://api.github.com/users/joshy/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshy/subscriptions", "organizations_url": "https://api.github.com/users/joshy/orgs", "repos_url": "https://api.github.com/users/joshy/repos", "events_url": "https://api.github.com/users/joshy/events{/privacy}", "received_events_url": "https://api.github.com/users/joshy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T16:51:26Z", "updated_at": "2020-06-12T17:08:24Z", "closed_at": "2020-06-12T17:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nsorry if this is a dump question but I couldn't figure out to change default port: I am running starlette with with gunicorn and UvicornWorker like this:\r\n ```\r\n/var/www/chronos/venv/bin/python /var/www/chronos/venv/bin/gunicorn -w 1 -t 600 web:app -k uvicorn.workers.UvicornWorker\r\n```\r\n\r\nbut default port `:8000` is already used. How can I change the port?\r\n\r\nThanks a lot for your help,\r\nJoshy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/698", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/698/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/698/events", "html_url": "https://github.com/encode/uvicorn/issues/698", "id": 637606559, "node_id": "MDU6SXNzdWU2Mzc2MDY1NTk=", "number": 698, "title": "Is it okay to use sqlalchemy in async mode without using databases?", "user": {"login": "balukrishnans", "id": 34550740, "node_id": "MDQ6VXNlcjM0NTUwNzQw", "avatar_url": "https://avatars1.githubusercontent.com/u/34550740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balukrishnans", "html_url": "https://github.com/balukrishnans", "followers_url": "https://api.github.com/users/balukrishnans/followers", "following_url": "https://api.github.com/users/balukrishnans/following{/other_user}", "gists_url": "https://api.github.com/users/balukrishnans/gists{/gist_id}", "starred_url": "https://api.github.com/users/balukrishnans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balukrishnans/subscriptions", "organizations_url": "https://api.github.com/users/balukrishnans/orgs", "repos_url": "https://api.github.com/users/balukrishnans/repos", "events_url": "https://api.github.com/users/balukrishnans/events{/privacy}", "received_events_url": "https://api.github.com/users/balukrishnans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-12T09:10:39Z", "updated_at": "2020-06-12T11:47:07Z", "closed_at": "2020-06-12T11:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hai frnds,\r\nIs it okay to use sqlalchemy in async mode without using databases?\r\n(need async level operation)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/691", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/691/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/691/events", "html_url": "https://github.com/encode/uvicorn/issues/691", "id": 633635805, "node_id": "MDU6SXNzdWU2MzM2MzU4MDU=", "number": 691, "title": "[question] how uvicorn deal with logging", "user": {"login": "flapili", "id": 29481952, "node_id": "MDQ6VXNlcjI5NDgxOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/29481952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flapili", "html_url": "https://github.com/flapili", "followers_url": "https://api.github.com/users/flapili/followers", "following_url": "https://api.github.com/users/flapili/following{/other_user}", "gists_url": "https://api.github.com/users/flapili/gists{/gist_id}", "starred_url": "https://api.github.com/users/flapili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flapili/subscriptions", "organizations_url": "https://api.github.com/users/flapili/orgs", "repos_url": "https://api.github.com/users/flapili/repos", "events_url": "https://api.github.com/users/flapili/events{/privacy}", "received_events_url": "https://api.github.com/users/flapili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-07T18:16:24Z", "updated_at": "2020-06-08T12:46:56Z", "closed_at": "2020-06-08T12:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI come from Tornado world and I don't know a lot about the  uvicorn/Guvicorn ecosystem.\r\n\r\nI have some questions about logging, how deal with blocking loggings handlers in uvicorn and also how workers work in gunicorn (spawn new process ? thread ?), this question is probably XY so I'll expose my current solution with Tornado:\r\n\r\nI need to write logs in files and I currently use [start(0)](https://www.tornadoweb.org/en/stable/tcpserver.html#tornado.tcpserver.TCPServer.start) in Tornado, that fork the process, so I can't write to the file directly even if fd are shared  via the fork.\r\nI have to send all logs to an another process [Sending and receiving logging events across a network\r\n](https://docs.python.org/3/howto/logging-cookbook.html#sending-and-receiving-logging-events-across-a-network) with a queue in each Tornado process and also a queue in the logger process.\r\n\r\nNow I had exposed my current context I would need some advice on some point.\r\n\r\n- does uvicorn handle logging in a thread ? or rather does blocking handlers still block the event loop (I want to use SMTPhandler) ? if it does I still have to use a queue + queueHandler + queueListener\r\n\r\n- the [settings ](https://www.uvicorn.org/settings/) page say about log config \r\n> --log-config <path> - Logging configuration file.\r\nbut does uvicorn can work with dict or yaml config file or only [that](https://docs.python.org/3/library/logging.config.html#configuration-file-format)?\r\n\r\n> Run gunicorn -k uvicorn.workers.UvicornWorker for production.\r\nDoes that spawn multiple process to bypass the GIL or only create a threadpool ?\r\n\r\n- this question is not really related to uvicorn but do you know how I can join the log queue if I have to use config file ? \r\n\r\n\r\nPS: sorry for my english", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/690", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/690/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/690/events", "html_url": "https://github.com/encode/uvicorn/issues/690", "id": 633201663, "node_id": "MDU6SXNzdWU2MzMyMDE2NjM=", "number": 690, "title": "How to install this on ubuntu 18.04?", "user": {"login": "dagnelies", "id": 5452653, "node_id": "MDQ6VXNlcjU0NTI2NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5452653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dagnelies", "html_url": "https://github.com/dagnelies", "followers_url": "https://api.github.com/users/dagnelies/followers", "following_url": "https://api.github.com/users/dagnelies/following{/other_user}", "gists_url": "https://api.github.com/users/dagnelies/gists{/gist_id}", "starred_url": "https://api.github.com/users/dagnelies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dagnelies/subscriptions", "organizations_url": "https://api.github.com/users/dagnelies/orgs", "repos_url": "https://api.github.com/users/dagnelies/repos", "events_url": "https://api.github.com/users/dagnelies/events{/privacy}", "received_events_url": "https://api.github.com/users/dagnelies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T08:43:01Z", "updated_at": "2020-06-07T19:19:49Z", "closed_at": "2020-06-07T19:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI tried the obvious:\r\n\r\n```\r\napt update\r\napt install python3-pip\r\napt install python3-setuptools\r\npip3 install uvicorn\r\n```\r\n\r\nbut it failed to install. Afterwards, googling the errors, I added `apt install build-essential` then `apt install python3-uvloop` since that's where it failed.\r\n\r\nNow, `uvloop` seems properly installed with `Requirement already satisfied: uvloop in /usr/lib/python3/dist-packages`\r\n\r\nHowever, running `pip3 install uvicorn` still tries to install it:\r\n\r\n```\r\nBuilding wheels for collected packages: uvloop\r\n  Running setup.py bdist_wheel for uvloop ... error\r\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-tnvsoj6a/uvloop/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/tmp3wzbqj6xpip-wheel- --python-tag cp36:\r\n  usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\n     or: -c --help [cmd1 cmd2 ...]\r\n     or: -c --help-commands\r\n     or: -c cmd --help\r\n\r\n  error: invalid command 'bdist_wheel'\r\n\r\n  ----------------------------------------\r\n  Failed building wheel for uvloop\r\n  Running setup.py clean for uvloop\r\n```\r\nand fails afterwards with another error when it tries to compile it fro scratch. Why does it not recognize the dependency is already installed?\r\n\r\nAm I missing something or is it really difficult to install it on a plain ubuntu 18.04? Are there any instructions somewhere?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/689", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/689/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/689/events", "html_url": "https://github.com/encode/uvicorn/issues/689", "id": 629608751, "node_id": "MDU6SXNzdWU2Mjk2MDg3NTE=", "number": 689, "title": "Server Sent Events (SSE) and send buffer flushing", "user": {"login": "bowmanjd", "id": 86415, "node_id": "MDQ6VXNlcjg2NDE1", "avatar_url": "https://avatars3.githubusercontent.com/u/86415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowmanjd", "html_url": "https://github.com/bowmanjd", "followers_url": "https://api.github.com/users/bowmanjd/followers", "following_url": "https://api.github.com/users/bowmanjd/following{/other_user}", "gists_url": "https://api.github.com/users/bowmanjd/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowmanjd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowmanjd/subscriptions", "organizations_url": "https://api.github.com/users/bowmanjd/orgs", "repos_url": "https://api.github.com/users/bowmanjd/repos", "events_url": "https://api.github.com/users/bowmanjd/events{/privacy}", "received_events_url": "https://api.github.com/users/bowmanjd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-03T00:46:48Z", "updated_at": "2020-06-10T10:27:19Z", "closed_at": "2020-06-09T09:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple ASGI app, seen below. The server appears to be sending the data at the expected intervals, and the headers look right, but the browser does not receive the data until the connection is closed. Is this a buffering issue? How might one flush the buffer so it goes straight to the browser?\r\n\r\nHere is the application code:\r\n\r\n```python\r\nimport asyncio\r\nimport datetime\r\n\r\n\r\nasync def app(scope, receive, send):\r\n    headers = [(b\"content-type\", b\"text/html\")]\r\n    if scope[\"path\"] == \"/\":\r\n        body = (\r\n            \"<html>\"\r\n            \"<body>\"\r\n            \"</body>\"\r\n            \"<script>\"\r\n            \"  let eventSource = new EventSource('/sse');\"\r\n            \"  eventSource.addEventListener('message', (e) => {\"\r\n            \"    document.body.innerHTML += e.data + '<br>';\"\r\n            \"  });\"\r\n            \"</script>\"\r\n            \"</html>\"\r\n        ).encode()\r\n\r\n        await send({\"type\": \"http.response.start\", \"status\": 200, \"headers\": headers})\r\n        await send({\"type\": \"http.response.body\", \"body\": body})\r\n    elif scope[\"path\"] == \"/sse\":\r\n        headers = [\r\n            (b\"content-type\", b\"text/event-stream\"),\r\n            (b\"cache-control\", b\"no-cache\"),\r\n            (b\"connection\", b\"keep-alive\"),\r\n        ]\r\n\r\n        async def body():\r\n            ongoing = True\r\n            while ongoing:\r\n                try:\r\n                    payload = datetime.datetime.now()\r\n                    yield f\"data: {payload}\\n\\n\".encode()\r\n                    await asyncio.sleep(10)\r\n                except asyncio.CancelledError:\r\n                    ongoing = False\r\n\r\n        await send({\"type\": \"http.response.start\", \"status\": 200, \"headers\": headers})\r\n        async for chunk in body():\r\n            await send({\"type\": \"http.response.body\", \"body\": chunk, \"more_body\": True})\r\n        await send({\"type\": \"http.response.body\", \"body\": b\"\"})\r\n    else:\r\n        await send({\"type\": \"http.response.start\", \"status\": 404, \"headers\": headers})\r\n        await send({\"type\": \"http.response.body\", \"body\": b\"\"})\r\n\r\n```\r\n\r\nThis can be run by naming the file above to `asgi_sse.py`, then using something like\r\n```bash\r\nuvicorn asgi_sse:app\r\n```\r\n\r\nThe headers:\r\n```bash\r\n$ curl -I http://localhost:8000/sse\r\nHTTP/1.1 200 OK\r\ndate: Mon, 01 Jun 2020 09:51:41 GMT\r\nserver: uvicorn\r\ncontent-type: text/event-stream\r\ncache-control: no-cache\r\nconnection: keep-alive\r\n```\r\n\r\nAnd the response:\r\n```bash\r\n$ curl http://localhost:8000/sse\r\ndata: 2020-06-01 05:52:40.735403\r\n\r\ndata: 2020-06-01 05:52:50.736378\r\n\r\ndata: 2020-06-01 05:53:00.736812\r\n```\r\n\r\nWeird that curl gets the data immediately...\r\n\r\nIs there documentation needed on how to get SSE to work with uvicorn? Or (more likely) am I doing something wrong?\r\n\r\nI put the [code above on repl.it][1] To try it out, please fork and run it. Strangely, it works as intended on repl.it.\r\n\r\n  [1]: https://repl.it/@jonathanbowman/asgi-sse", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/688", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/688/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/688/events", "html_url": "https://github.com/encode/uvicorn/issues/688", "id": 627002565, "node_id": "MDU6SXNzdWU2MjcwMDI1NjU=", "number": 688, "title": "Disable Server Header", "user": {"login": "tc8", "id": 5410633, "node_id": "MDQ6VXNlcjU0MTA2MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5410633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tc8", "html_url": "https://github.com/tc8", "followers_url": "https://api.github.com/users/tc8/followers", "following_url": "https://api.github.com/users/tc8/following{/other_user}", "gists_url": "https://api.github.com/users/tc8/gists{/gist_id}", "starred_url": "https://api.github.com/users/tc8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tc8/subscriptions", "organizations_url": "https://api.github.com/users/tc8/orgs", "repos_url": "https://api.github.com/users/tc8/repos", "events_url": "https://api.github.com/users/tc8/events{/privacy}", "received_events_url": "https://api.github.com/users/tc8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-29T05:09:44Z", "updated_at": "2020-05-29T09:46:05Z", "closed_at": "2020-05-29T09:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm looking for a  way to prevent the `server:uvicorn` header from being returned in every response. \r\nI found https://github.com/encode/uvicorn/issues/243 which is similar but the solution doesn't address this particular problem. \r\n\r\n@davidism [asked this question](https://github.com/encode/uvicorn/pull/321#issuecomment-471183072) but @Jitsusama's suggestion of using \"middleware to remove it at the last possible second\" doesn't work because the default header is added after all the middlewares & routers have run. \r\n\r\n@antirais's [suggestion](https://github.com/encode/uvicorn/issues/243#issuecomment-470603894) of monkey-patching does work but it's very hacky and I'm looking for a cleaner solution.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/687", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/687/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/687/events", "html_url": "https://github.com/encode/uvicorn/issues/687", "id": 626857963, "node_id": "MDU6SXNzdWU2MjY4NTc5NjM=", "number": 687, "title": "Uvicorn can not start FastAPI APP", "user": {"login": "cgi1", "id": 18695252, "node_id": "MDQ6VXNlcjE4Njk1MjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/18695252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgi1", "html_url": "https://github.com/cgi1", "followers_url": "https://api.github.com/users/cgi1/followers", "following_url": "https://api.github.com/users/cgi1/following{/other_user}", "gists_url": "https://api.github.com/users/cgi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgi1/subscriptions", "organizations_url": "https://api.github.com/users/cgi1/orgs", "repos_url": "https://api.github.com/users/cgi1/repos", "events_url": "https://api.github.com/users/cgi1/events{/privacy}", "received_events_url": "https://api.github.com/users/cgi1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-28T22:32:29Z", "updated_at": "2020-06-13T20:51:01Z", "closed_at": "2020-05-29T09:18:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\napp = FastAPI(title='MADS API')\r\nuvicorn.run(app, host='0.0.0.0', port=8127, workers=2)\r\nWARNING:  You must pass the application as an import string to enable 'reload' or 'workers'.\r\n```\r\n(Than it quits with System Code 1)\r\n\r\nVersions:\r\n```\r\n$ pip3 list |grep \"uvicorn\\|fastapi\"\r\nfastapi                          0.55.1       \r\nuvicorn                          0.11.5 \r\n```\r\nUbuntu 20.04; python 3.8.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/681", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/681/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/681/events", "html_url": "https://github.com/encode/uvicorn/issues/681", "id": 624261190, "node_id": "MDU6SXNzdWU2MjQyNjExOTA=", "number": 681, "title": "timeout in uvicorn 0.11.4 vs 0.11.5", "user": {"login": "anlaksh88", "id": 21246824, "node_id": "MDQ6VXNlcjIxMjQ2ODI0", "avatar_url": "https://avatars1.githubusercontent.com/u/21246824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anlaksh88", "html_url": "https://github.com/anlaksh88", "followers_url": "https://api.github.com/users/anlaksh88/followers", "following_url": "https://api.github.com/users/anlaksh88/following{/other_user}", "gists_url": "https://api.github.com/users/anlaksh88/gists{/gist_id}", "starred_url": "https://api.github.com/users/anlaksh88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anlaksh88/subscriptions", "organizations_url": "https://api.github.com/users/anlaksh88/orgs", "repos_url": "https://api.github.com/users/anlaksh88/repos", "events_url": "https://api.github.com/users/anlaksh88/events{/privacy}", "received_events_url": "https://api.github.com/users/anlaksh88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T12:11:51Z", "updated_at": "2020-05-25T14:44:46Z", "closed_at": "2020-05-25T14:44:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been testing uvicorn with gunicorn. When I use version 0.11.4, I get a lot of \"critical worker timeout\" errors. I think all the workers are timing out based on the timeout configuration. I do not see this happening with 0.11.5. Was there a bug in 0.11.4 that was fixed in 0.11.5?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/678", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/678/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/678/events", "html_url": "https://github.com/encode/uvicorn/issues/678", "id": 620863152, "node_id": "MDU6SXNzdWU2MjA4NjMxNTI=", "number": 678, "title": "Running uvicorn as systemd service", "user": {"login": "Kinzowa", "id": 16160143, "node_id": "MDQ6VXNlcjE2MTYwMTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/16160143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kinzowa", "html_url": "https://github.com/Kinzowa", "followers_url": "https://api.github.com/users/Kinzowa/followers", "following_url": "https://api.github.com/users/Kinzowa/following{/other_user}", "gists_url": "https://api.github.com/users/Kinzowa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kinzowa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kinzowa/subscriptions", "organizations_url": "https://api.github.com/users/Kinzowa/orgs", "repos_url": "https://api.github.com/users/Kinzowa/repos", "events_url": "https://api.github.com/users/Kinzowa/events{/privacy}", "received_events_url": "https://api.github.com/users/Kinzowa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T10:29:04Z", "updated_at": "2020-06-08T12:47:55Z", "closed_at": "2020-06-08T12:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI would like to start `uvicorn` at startup with `systemd` services but for some reason the process exits with an error `status=1/FAILURE`. This is how my service file looks like:\r\n\r\n```\r\nDescription=Uvicorn systemd service.\r\nAfter=network.target\r\nStartLimitIntervalSec=0\r\n\r\n[Service]\r\nType=notify\r\nExecStart=/home/username/env/bin/uvicorn myproject.asgi:application --port 8000 --host 11.202.96.136\r\nUser=username\r\nGroup=username\r\nRuntimeDirectory=/var/run/uvicorn\r\nWorkingDirectory=/var/www/myproject\r\nExecReload=/bin/kill -s HUP $MAINPID\r\nKillMode=mixed\r\nTimeoutStopSec=5\r\nPrivateTmp=true\r\nRestartSec=1\r\nRestart=always\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\nand the status:\r\n\r\n```\r\nroot@ubuntu-2cpu-4gb-de-fra1:/lib/systemd/system# systemctl status uvicorn.service\r\n\u25cf uvicorn.service - Uvicorn systemd service.\r\n   Loaded: loaded (/lib/systemd/system/uvicorn.service; enabled; vendor preset: enabled)\r\n   Active: activating (auto-restart) (Result: exit-code) since Tue 2020-05-19 10:18:25 UTC; 326ms ago\r\n  Process: 847 ExecStart=/home/username/env/bin/uvicorn myproject.asgi:application --port 8000 --host 11.202.96.136 (code=exited, status=1/FAILURE)\r\n Main PID: 847 (code=exited, status=1/FAILURE)\r\n\r\nMay 19 10:18:25 ubuntu-2cpu-4gb-de-fra1 systemd[1]: Failed to start Uvicorn systemd service..\r\n\r\n```\r\n\r\nWhat could be the reason behind this error? do you think using `supervisor` is a better option?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/677", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/677/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/677/events", "html_url": "https://github.com/encode/uvicorn/issues/677", "id": 620833558, "node_id": "MDU6SXNzdWU2MjA4MzM1NTg=", "number": 677, "title": "Add `reload_pre_restart` & `reload_post_restart` hooks for reacting to server reload", "user": {"login": "hanneskuettner", "id": 4376726, "node_id": "MDQ6VXNlcjQzNzY3MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4376726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanneskuettner", "html_url": "https://github.com/hanneskuettner", "followers_url": "https://api.github.com/users/hanneskuettner/followers", "following_url": "https://api.github.com/users/hanneskuettner/following{/other_user}", "gists_url": "https://api.github.com/users/hanneskuettner/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanneskuettner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanneskuettner/subscriptions", "organizations_url": "https://api.github.com/users/hanneskuettner/orgs", "repos_url": "https://api.github.com/users/hanneskuettner/repos", "events_url": "https://api.github.com/users/hanneskuettner/events{/privacy}", "received_events_url": "https://api.github.com/users/hanneskuettner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T09:43:02Z", "updated_at": "2020-06-08T13:22:36Z", "closed_at": "2020-06-08T13:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would love to have an option to programmatically react to a server reload to trigger additional actions (like for example triggering a livereload.com command through a different application).\r\n\r\nI think having a pre and a post restart hook would be a nice option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/673", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/673/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/673/events", "html_url": "https://github.com/encode/uvicorn/issues/673", "id": 615278779, "node_id": "MDU6SXNzdWU2MTUyNzg3Nzk=", "number": 673, "title": "how to deploy a django project using systemd daemon?", "user": {"login": "flakesrc", "id": 42384773, "node_id": "MDQ6VXNlcjQyMzg0Nzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/42384773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flakesrc", "html_url": "https://github.com/flakesrc", "followers_url": "https://api.github.com/users/flakesrc/followers", "following_url": "https://api.github.com/users/flakesrc/following{/other_user}", "gists_url": "https://api.github.com/users/flakesrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/flakesrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flakesrc/subscriptions", "organizations_url": "https://api.github.com/users/flakesrc/orgs", "repos_url": "https://api.github.com/users/flakesrc/repos", "events_url": "https://api.github.com/users/flakesrc/events{/privacy}", "received_events_url": "https://api.github.com/users/flakesrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T23:19:06Z", "updated_at": "2020-05-11T08:19:09Z", "closed_at": "2020-05-11T08:19:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "the documentation looks very poor for a beginner.\r\n\r\nSo, before I had something like this for the gunicorn:\r\n\r\n    [Unit]\r\n    Description=gunicorn daemon\r\n    After=network.target\r\n    \r\n    [Service]\r\n    User=ubuntu\r\n    Group=www-data\r\n    WorkingDirectory=/home/ubuntu/geeknoon_server\r\n    ExecStart=/home/ubuntu/venv/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/geeknoon_server/geeknoon_server.sock config.wsgi:application\r\n    \r\n    [Install]\r\n    WantedBy=multi-user.target\r\n\r\nBut now I don't know how to do the same for uvicorn, there are no examples using systemd daemon, and I also don't know which parameter to put the values on, since the properties are different.\r\n\r\n    [Unit]\r\n    Description=uvicorn daemon\r\n    After=network.target\r\n    \r\n    [Service]\r\n    User=ubuntu\r\n    Group=www-data\r\n    WorkingDirectory=/home/ubuntu/geeknoon_server\r\n    ExecStart=/home/ubuntu/venv/bin/uvicorn --workers 3 --bind unix:/tmp/uvicorn.sock config.asgi:application\r\n    \r\n    [Install]\r\n    WantedBy=multi-user.target", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/667", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/667/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/667/events", "html_url": "https://github.com/encode/uvicorn/issues/667", "id": 614472203, "node_id": "MDU6SXNzdWU2MTQ0NzIyMDM=", "number": 667, "title": "Support Websocket Denial Response", "user": {"login": "abersheeran", "id": 25364828, "node_id": "MDQ6VXNlcjI1MzY0ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/25364828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abersheeran", "html_url": "https://github.com/abersheeran", "followers_url": "https://api.github.com/users/abersheeran/followers", "following_url": "https://api.github.com/users/abersheeran/following{/other_user}", "gists_url": "https://api.github.com/users/abersheeran/gists{/gist_id}", "starred_url": "https://api.github.com/users/abersheeran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abersheeran/subscriptions", "organizations_url": "https://api.github.com/users/abersheeran/orgs", "repos_url": "https://api.github.com/users/abersheeran/repos", "events_url": "https://api.github.com/users/abersheeran/events{/privacy}", "received_events_url": "https://api.github.com/users/abersheeran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T03:11:14Z", "updated_at": "2020-05-11T10:18:37Z", "closed_at": "2020-05-11T10:11:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://asgi.readthedocs.io/en/latest/extensions.html#websocket-denial-response\r\n\r\nAny support about this? This is helpful in providing clearer tips for websocket errors. For example, return 401, 403, 404.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/664", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/664/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/664/events", "html_url": "https://github.com/encode/uvicorn/issues/664", "id": 610587033, "node_id": "MDU6SXNzdWU2MTA1ODcwMzM=", "number": 664, "title": "Better host name check for consistency and more idiomatic exc", "user": {"login": "hzlmn", "id": 8246283, "node_id": "MDQ6VXNlcjgyNDYyODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8246283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzlmn", "html_url": "https://github.com/hzlmn", "followers_url": "https://api.github.com/users/hzlmn/followers", "following_url": "https://api.github.com/users/hzlmn/following{/other_user}", "gists_url": "https://api.github.com/users/hzlmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzlmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzlmn/subscriptions", "organizations_url": "https://api.github.com/users/hzlmn/orgs", "repos_url": "https://api.github.com/users/hzlmn/repos", "events_url": "https://api.github.com/users/hzlmn/events{/privacy}", "received_events_url": "https://api.github.com/users/hzlmn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T06:11:58Z", "updated_at": "2020-05-01T08:15:54Z", "closed_at": "2020-05-01T08:08:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, first i would like to thanks for making this library. It is really  \ud83c\udf70.\r\n\r\nI have a case where using `FastAPI` i want to run `uvicorn` with auto-reload in debug mode from python code. The following snippet will work\r\n```python\r\n>> main.py\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\n\r\nfrom .config import Config\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\nasync def handler():\r\n    return \"Hello\"\r\n\r\nif __name__ == \"__main__\":\r\n    config = Config()\r\n    uvicorn.run(\r\n        \"main:app\",\r\n        host=config.HOST,\r\n        port=config.PORT,\r\n        reload=config.DEBUG,\r\n        debug=config.DEBUG,\r\n    )\r\n\r\n```  \r\nBut when for some reason config.HOST is None i will get\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/oleg/.pyenv/versions/3.6.5/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/Users/oleg/.pyenv/versions/3.6.5/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/oleg/Projects/leapi-python/api_internal/main.py\", line 115, in <module>\r\n    uvicorn.run(\"api_internal.main:app\", host=config.HOST, reload=True,port=config.PORT, debug=True)\r\n  File \"/Users/oleg/.local/share/virtualenvs/leapi-python--jMs55TN/lib/python3.6/site-packages/uvicorn/main.py\", line 346, in run\r\n    sock = config.bind_socket()\r\n  File \"/Users/oleg/.local/share/virtualenvs/leapi-python--jMs55TN/lib/python3.6/site-packages/uvicorn/config.py\", line 329, in bind_socket\r\n    sock.bind((self.host, self.port))\r\n```\r\nBecause there is not check in bind_socket for falsy values.\r\n```python\r\n def bind_socket(self):\r\n        sock = socket.socket()\r\n        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n        try:\r\n            sock.bind((self.host, self.port))\r\n        except OSError as exc:\r\n            logger.error(exc)\r\n            sys.exit(1)\r\n        sock.set_inheritable(True)\r\n        ...\r\n```\r\nBut in regular mode without debug in reload it will run and will be as expected (use default \"127.0.0.1\")\r\n\r\nWould be nice to make similar behavior in both modes for consistency.\r\n\r\nIf it is a case i can create small PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/663", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/663/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/663/events", "html_url": "https://github.com/encode/uvicorn/issues/663", "id": 610229214, "node_id": "MDU6SXNzdWU2MTAyMjkyMTQ=", "number": 663, "title": "Uvicorn not processing some requests randamly", "user": {"login": "hrishikesh-hirlikar", "id": 30823121, "node_id": "MDQ6VXNlcjMwODIzMTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/30823121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hrishikesh-hirlikar", "html_url": "https://github.com/hrishikesh-hirlikar", "followers_url": "https://api.github.com/users/hrishikesh-hirlikar/followers", "following_url": "https://api.github.com/users/hrishikesh-hirlikar/following{/other_user}", "gists_url": "https://api.github.com/users/hrishikesh-hirlikar/gists{/gist_id}", "starred_url": "https://api.github.com/users/hrishikesh-hirlikar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hrishikesh-hirlikar/subscriptions", "organizations_url": "https://api.github.com/users/hrishikesh-hirlikar/orgs", "repos_url": "https://api.github.com/users/hrishikesh-hirlikar/repos", "events_url": "https://api.github.com/users/hrishikesh-hirlikar/events{/privacy}", "received_events_url": "https://api.github.com/users/hrishikesh-hirlikar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T16:43:17Z", "updated_at": "2020-05-01T08:18:45Z", "closed_at": "2020-05-01T08:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are running a Fastapi + Uvicorn web application using gunicorn as a process manager and Nginx as the reverse proxy server. The application is running in async mode for most of the i/o operations (DB call, Rest apis). The whole setup is running inside a Docker container on Ubuntu 16.04.\r\n\r\nThe setup works most of the times but sometimes it does not process a request at all & it gets timed out at Nginx end. We also tried taking Nginx out of the setup and observed that few requests get processed after really long time (like after 15 mins). This is very random but usually happens 2-3 times in an hour.\r\n\r\nBelow is the gunicorn config that we are using \u2013\r\n\r\n`host = os.getenv(\"HOST\", \"0.0.0.0\")`\r\n`port = os.getenv(\"PORT\", \"80\")`\r\n\r\n`workers = web_concurrency`\r\n`bind = f\"{host}:{port}\"`\r\n`keepalive = 2`\r\n\r\n`timeout = 60  `\r\n`graceful_timeout = 30`\r\n`threads = 2`\r\n`worker_tmp_dir = \"/dev/shm\"`\r\n\r\n`capture_output = True`\r\n`loglevel = os.getenv(\"LOG_LEVEL\", \"debug\")`\r\n\r\nAnd gunicorn is invoked with command `exec gunicorn -k uvicorn.workers.UvicornWorker -c \"$GUNICORN_CONF\" \"$APP_MODULE\"`\r\n\r\nWe have tried several config changes like \u2013\r\n\r\n1. Changing the number of workers, worker timeout\r\n2. Changing the process manager from gunicorn to supervisord\r\n3. Offloading the CPU intensive task to Celery instead of threading\r\n4. Binding uvicorn app to unix socket instead of proxy server\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/656", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/656/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/656/events", "html_url": "https://github.com/encode/uvicorn/issues/656", "id": 608498136, "node_id": "MDU6SXNzdWU2MDg0OTgxMzY=", "number": 656, "title": "Reload Behavior: Documentation != Code, Unnecessary Reloads", "user": {"login": "kalzoo", "id": 22137047, "node_id": "MDQ6VXNlcjIyMTM3MDQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/22137047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalzoo", "html_url": "https://github.com/kalzoo", "followers_url": "https://api.github.com/users/kalzoo/followers", "following_url": "https://api.github.com/users/kalzoo/following{/other_user}", "gists_url": "https://api.github.com/users/kalzoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalzoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalzoo/subscriptions", "organizations_url": "https://api.github.com/users/kalzoo/orgs", "repos_url": "https://api.github.com/users/kalzoo/repos", "events_url": "https://api.github.com/users/kalzoo/events{/privacy}", "received_events_url": "https://api.github.com/users/kalzoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T17:44:05Z", "updated_at": "2020-04-29T10:44:56Z", "closed_at": "2020-04-29T10:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! I upgraded to 0.11.4 shortly after release today, and it has a couple of quirks.\r\n\r\n1. The documentation [here](https://github.com/encode/uvicorn/compare/0.11.3...0.11.4#diff-1819b1daaccb3d358620ade9c67e9118R22) says \"python file changes\" but the code says [\"all non-dotfile changes\"](https://github.com/encode/uvicorn/compare/0.11.3...0.11.4#diff-b0da863c7164698a2ef0fa805e4a9197R40).\r\n2. That behavior, while from the test cases seems to be intended to roll up things like `.graphql` files, also unfortunately rolls up `.pyc` files, meaning every restart is a double restart:\r\n\r\n```\r\nWARNING:  Detected file change in 'app/main.py'. Reloading...\r\nINFO:     Shutting down\r\nINFO:     Waiting for application shutdown.\r\nINFO:     Application shutdown complete.\r\nINFO:     Finished server process [87024]\r\nINFO:     Started server process [87080]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nWARNING:  Detected file change in 'app/__pycache__/main.cpython-37.pyc'. Reloading...\r\nINFO:     Shutting down\r\nINFO:     Waiting for application shutdown.\r\nINFO:     Application shutdown complete.\r\nINFO:     Finished server process [87080]\r\nINFO:     Started server process [87093]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\n```\r\n\r\nIt might be better to use [Path.glob](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob) so users can specify file extensions and paths more explicitly than with `os.walk`, but it's published already so maybe as another flag?\r\n\r\n3. A minor point, but worth noting in the docs: `--reload_dir` on the CLI becomes `reload_dirs=['my_dir']` in code: `uvicorn.run('app.main:app', host=\"0.0.0.0\", port=8000, reload=True, reload_dirs=['app'])`\r\n\r\nThanks for making this great library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/651", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/651/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/651/events", "html_url": "https://github.com/encode/uvicorn/issues/651", "id": 608209903, "node_id": "MDU6SXNzdWU2MDgyMDk5MDM=", "number": 651, "title": "Error at https://www.uvicorn.org/#the-asgi-interface", "user": {"login": "greentornado", "id": 280004, "node_id": "MDQ6VXNlcjI4MDAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/280004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greentornado", "html_url": "https://github.com/greentornado", "followers_url": "https://api.github.com/users/greentornado/followers", "following_url": "https://api.github.com/users/greentornado/following{/other_user}", "gists_url": "https://api.github.com/users/greentornado/gists{/gist_id}", "starred_url": "https://api.github.com/users/greentornado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greentornado/subscriptions", "organizations_url": "https://api.github.com/users/greentornado/orgs", "repos_url": "https://api.github.com/users/greentornado/repos", "events_url": "https://api.github.com/users/greentornado/events{/privacy}", "received_events_url": "https://api.github.com/users/greentornado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T10:35:18Z", "updated_at": "2020-04-28T13:01:52Z", "closed_at": "2020-04-28T13:01:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the 'HTTP Messages' block, there is an error at sample:\r\n\r\nIt says: \r\n\r\n`await send({\r\n    'type': 'http.request.start',\r\n    'status': 200,\r\n    'headers': [\r\n        [b'content-type', b'text/plain'],\r\n    ]\r\n})`\r\n\r\nbut it should be:\r\n\r\n`await send({\r\n    'type': 'http.response.start',\r\n    'status': 200,\r\n    'headers': [\r\n        [b'content-type', b'text/plain'],\r\n    ]\r\n})`\r\n\r\nUntil then, it cause an error: RuntimeError: Expected ASGI message 'http.response.start', but got 'http.request.start'.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/644", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/644/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/644/events", "html_url": "https://github.com/encode/uvicorn/issues/644", "id": 602982391, "node_id": "MDU6SXNzdWU2MDI5ODIzOTE=", "number": 644, "title": "several logging issues", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-20T06:37:33Z", "updated_at": "2020-04-21T07:20:39Z", "closed_at": "2020-04-21T07:20:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. first issue is minor and undetected currently because the default formatter don't output the logger's name, but on  h11 implementation the uvicorn.access logger output comes from the uvicorn.error logger.\r\n\r\nso if your formatter has a `%(name)s` in it you'll see uvicorn.error instead of uvicorn.access in all your access logs, \r\n\r\nsee below:\r\n\r\nhttps://github.com/encode/uvicorn/blob/a839da2564e5168c6e99c3b22819950f26f7d178/uvicorn/protocols/http/h11_impl.py#L362\r\n\r\n2. the colorized formatter operates and modifies the logging records (https://github.com/encode/uvicorn/blob/e55bd89184bb3f47d7024c3dd6538ecd68ebe114/uvicorn/logging.py#L45-L54), which has non-desirable side-effect since other handlers may use it down the line\r\n\r\nfor instance I can output this:\r\n\r\n```\r\nTRACE:    root - 33 - [SFJAPI]- ASGI [1] Started scope={'type': 'lifespan'}\r\nTRACE:    root - 33 - [SFJAPI]- ASGI [1] Receive {'type': 'lifespan.startup'}\r\nINFO:     core.events - 16 - [SFJAPI]- Creating pool\r\nDEBUG:    core.events - 17 - [SFJAPI]- postgresql://postgres:postgres@localhost:5439/postgres\r\nINFO:     core.events - 19 - [SFJAPI]- Pool created\r\n```\r\nby just adding \r\n\r\n```\r\n  app_format_colored:\r\n    \"()\": \"core.logging.AppColourizedFormatter\"\r\n    format: \"%(levelprefix)s %(name)s - %(lineno)d - [SFJAPI]- %(message)s\"\r\n    use_colors: True\r\n```\r\n\r\nit shows clearly that the default uvicorn.error logger gets polluted by my formatter since it receives the `SFJAPI` string that is set on my custom format.\r\n\r\n\r\n3. the `uvicorn.asgi` logger wrongly uses the root logger as shown in [here](https://github.com/encode/uvicorn/blob/608866d3b6dea49f4f8ff28ed19398b0ae47faad/uvicorn/middleware/message_logger.py#L33) `logging.log(TRACE_LOG_LEVEL, message, *args, **kwargs)` , you can see it in the log output above, `root 33` is the logger's name and the line in python standard library logging, this is a simple fix and root logger shouldn't be touched.\r\n\r\nPR incoming\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/642", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/642/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/642/events", "html_url": "https://github.com/encode/uvicorn/issues/642", "id": 602705101, "node_id": "MDU6SXNzdWU2MDI3MDUxMDE=", "number": 642, "title": "reloader name not printed when using colored logs", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T12:39:47Z", "updated_at": "2020-04-21T10:41:25Z", "closed_at": "2020-04-21T10:41:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "title says it all", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/640", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/640/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/640/events", "html_url": "https://github.com/encode/uvicorn/issues/640", "id": 601005678, "node_id": "MDU6SXNzdWU2MDEwMDU2Nzg=", "number": 640, "title": "--log-level ignored for additional loggers?", "user": {"login": "sderuiter", "id": 30111, "node_id": "MDQ6VXNlcjMwMTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/30111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sderuiter", "html_url": "https://github.com/sderuiter", "followers_url": "https://api.github.com/users/sderuiter/followers", "following_url": "https://api.github.com/users/sderuiter/following{/other_user}", "gists_url": "https://api.github.com/users/sderuiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/sderuiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sderuiter/subscriptions", "organizations_url": "https://api.github.com/users/sderuiter/orgs", "repos_url": "https://api.github.com/users/sderuiter/repos", "events_url": "https://api.github.com/users/sderuiter/events{/privacy}", "received_events_url": "https://api.github.com/users/sderuiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T12:24:15Z", "updated_at": "2020-07-22T09:01:13Z", "closed_at": "2020-07-22T09:01:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Possibly due to me not understanding the logger, but I run `uvicorn app:app --log-level warning`. My app, however, adds it's own loggers like `logger = logging.getLogger(\"tc.app.join_game\")` and I log messages to this (going to a file), mostly .info, some .warning. \r\n\r\nMy expectation: running uvicorn with --log-level warning would also silence the .info logs from my app and have them only be visible in the log file (where they are visible, as expected). \r\n\r\nObserved behaviour: I see colorful INFO log messages from my app appear (next to the log file)...\r\n\r\nHave I misunderstood the working of log-level?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/639", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/639/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/639/events", "html_url": "https://github.com/encode/uvicorn/issues/639", "id": 600408148, "node_id": "MDU6SXNzdWU2MDA0MDgxNDg=", "number": 639, "title": "Manifest", "user": {"login": "tonybenoy", "id": 8504669, "node_id": "MDQ6VXNlcjg1MDQ2Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8504669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonybenoy", "html_url": "https://github.com/tonybenoy", "followers_url": "https://api.github.com/users/tonybenoy/followers", "following_url": "https://api.github.com/users/tonybenoy/following{/other_user}", "gists_url": "https://api.github.com/users/tonybenoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonybenoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonybenoy/subscriptions", "organizations_url": "https://api.github.com/users/tonybenoy/orgs", "repos_url": "https://api.github.com/users/tonybenoy/repos", "events_url": "https://api.github.com/users/tonybenoy/events{/privacy}", "received_events_url": "https://api.github.com/users/tonybenoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-15T15:57:39Z", "updated_at": "2020-04-30T07:34:59Z", "closed_at": "2020-04-30T07:34:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@tomchristie can you make a minor release for this as well?  #627 so that [this](https://github.com/acxz/pkgbuilds/issues/22) can be closed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/638", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/638/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/638/events", "html_url": "https://github.com/encode/uvicorn/issues/638", "id": 600282337, "node_id": "MDU6SXNzdWU2MDAyODIzMzc=", "number": 638, "title": "Question : patching uvicorn.access logger format", "user": {"login": "0xAcid", "id": 14802540, "node_id": "MDQ6VXNlcjE0ODAyNTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/14802540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xAcid", "html_url": "https://github.com/0xAcid", "followers_url": "https://api.github.com/users/0xAcid/followers", "following_url": "https://api.github.com/users/0xAcid/following{/other_user}", "gists_url": "https://api.github.com/users/0xAcid/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xAcid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xAcid/subscriptions", "organizations_url": "https://api.github.com/users/0xAcid/orgs", "repos_url": "https://api.github.com/users/0xAcid/repos", "events_url": "https://api.github.com/users/0xAcid/events{/privacy}", "received_events_url": "https://api.github.com/users/0xAcid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T13:05:04Z", "updated_at": "2020-04-23T12:17:10Z", "closed_at": "2020-04-23T12:17:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, not sure if this is supposed to be doable easily, but I tried multiple things, and could not manage to do it properly.\r\nCurrently when a route is accessed through uvicorn, i have a log of it :\r\n```\r\nINFO:     127.0.0.115380 - \"GET / HTTP/1.1\" 200 OK\r\n```\r\n\r\nI would like to add the timestamp of the access to the log, but despite many tries patching the uvicorn.access logger, i could not manage to get it working. (i'm pretty sure the answer is out somewhere, but I've been trying stuff without success..)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/634", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/634/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/634/events", "html_url": "https://github.com/encode/uvicorn/issues/634", "id": 599256912, "node_id": "MDU6SXNzdWU1OTkyNTY5MTI=", "number": 634, "title": "--proxy-headers with supervisor get client ip failed", "user": {"login": "m0nksy", "id": 45096977, "node_id": "MDQ6VXNlcjQ1MDk2OTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/45096977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m0nksy", "html_url": "https://github.com/m0nksy", "followers_url": "https://api.github.com/users/m0nksy/followers", "following_url": "https://api.github.com/users/m0nksy/following{/other_user}", "gists_url": "https://api.github.com/users/m0nksy/gists{/gist_id}", "starred_url": "https://api.github.com/users/m0nksy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m0nksy/subscriptions", "organizations_url": "https://api.github.com/users/m0nksy/orgs", "repos_url": "https://api.github.com/users/m0nksy/repos", "events_url": "https://api.github.com/users/m0nksy/events{/privacy}", "received_events_url": "https://api.github.com/users/m0nksy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T02:46:49Z", "updated_at": "2020-07-28T13:10:14Z", "closed_at": "2020-07-28T13:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### uvicorn version\r\n`Running uvicorn 0.11.3 with CPython 3.8.2 on Linux` \r\n#### supervisor config\r\n```\r\n[fcgi-program:uvicorn]\r\nsocket=tcp://0.0.0.0:5000    \r\ndirectory=/var/www/webapp/    \r\ncommand=/usr/local/python3/bin/uvicorn --fd 0 --proxy-headers main:app    \r\nnumprocs=2    \r\nprocess_name=uvicorn-%(process_num)d    \r\nstdout_logfile_maxbytes=0    \r\nstdout_logfile=/var/log/uvicorn.log    \r\n```\r\n\r\n### fastapi \r\nversion 0.52.0\r\n\r\n```\r\n# cat /var/www/webapp/main.py\r\n\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nfrom fastapi import FastAPI, Request\r\n\r\napp = FastAPI(redoc_url=None)\r\n\r\n\r\n@app.get('/')\r\ndef index(request: Request):\r\n    return 'hello {}!'.format(request.client.host)\r\n\r\n```\r\n\r\n### run on supervisor\r\nsupervisord version 4.1.0\r\n```\r\nsupervisord -n\r\ncurl  http://127.0.0.1:5000\r\n\r\n```\r\nwhy client.host is None?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/630", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/630/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/630/events", "html_url": "https://github.com/encode/uvicorn/issues/630", "id": 598479753, "node_id": "MDU6SXNzdWU1OTg0Nzk3NTM=", "number": 630, "title": "Uvicorn adds a logging handler to the root logger", "user": {"login": "Ronserruya", "id": 21235163, "node_id": "MDQ6VXNlcjIxMjM1MTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/21235163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ronserruya", "html_url": "https://github.com/Ronserruya", "followers_url": "https://api.github.com/users/Ronserruya/followers", "following_url": "https://api.github.com/users/Ronserruya/following{/other_user}", "gists_url": "https://api.github.com/users/Ronserruya/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ronserruya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ronserruya/subscriptions", "organizations_url": "https://api.github.com/users/Ronserruya/orgs", "repos_url": "https://api.github.com/users/Ronserruya/repos", "events_url": "https://api.github.com/users/Ronserruya/events{/privacy}", "received_events_url": "https://api.github.com/users/Ronserruya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-12T13:03:25Z", "updated_at": "2020-07-22T08:58:59Z", "closed_at": "2020-07-22T08:58:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the default config, unicorn adds an handler to the root logger:\r\nhttps://github.com/encode/uvicorn/blob/master/uvicorn/config.py#L86\r\n\r\nSince all loggers in python are propagated back to the root logger, this means that all logs from all loggers will reach the handler Uvloop adds\r\n\r\nWhen I create a custom logger in my app all my log messages are printed twice, once from my handlers, and then from the uvicorn handler on the root logger.\r\n\r\nSince uvicorn always use \"uvicorn.*\" loggers, I was able to create a new \"unicorn\" logger and move the handler to it on app startup\r\n\r\n```python\r\ndef disable_uvicorn_root_logger():\r\n    \"\"\" Uvicorn adds a default handler to the root logger, so all logs messages are duplicated\"\"\"\r\n    uvicorn_logger = logging.getLogger('uvicorn')\r\n    uvicorn_logger.addHandler(logging.root.handlers[0])\r\n    logging.root.handlers = []\r\n```\r\n\r\nI'm not sure if its the intended functionality, it was kinda unexpected for me.\r\n\r\nIf you wish to fix it, It can be easily fixed by changing \"\" to \"uvicorn\" in \r\nhttps://github.com/encode/uvicorn/blob/master/uvicorn/config.py#L86\r\n\r\nBut doing so will break the existing functionality for users that currently just use logging without any config and it works for them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/614", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/614/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/614/events", "html_url": "https://github.com/encode/uvicorn/issues/614", "id": 596274086, "node_id": "MDU6SXNzdWU1OTYyNzQwODY=", "number": 614, "title": "Duplicate logs when using root logger with 'gunicorn -k uvicorn.workers.UvicornWorker ...'", "user": {"login": "tlc", "id": 19436, "node_id": "MDQ6VXNlcjE5NDM2", "avatar_url": "https://avatars3.githubusercontent.com/u/19436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlc", "html_url": "https://github.com/tlc", "followers_url": "https://api.github.com/users/tlc/followers", "following_url": "https://api.github.com/users/tlc/following{/other_user}", "gists_url": "https://api.github.com/users/tlc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlc/subscriptions", "organizations_url": "https://api.github.com/users/tlc/orgs", "repos_url": "https://api.github.com/users/tlc/repos", "events_url": "https://api.github.com/users/tlc/events{/privacy}", "received_events_url": "https://api.github.com/users/tlc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 616811004, "node_id": "MDU6TGFiZWw2MTY4MTEwMDQ=", "url": "https://api.github.com/repos/encode/uvicorn/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-08T02:59:49Z", "updated_at": "2020-04-10T19:08:50Z", "closed_at": "2020-04-10T19:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a small test file with minimal gunicorn and uvicorn apps.  But my real interest is the log statements at the top of the file.\r\n\r\n```\r\nimport logging\r\n\r\nlogging.error('TEST 1 -- LOGGING ERROR')\r\nlogging.getLogger().error('TEST 2 -- ROOT LOGGER ERROR')\r\nlogging.getLogger('foo').error('TEST 3 -- FOO LOGGER ERROR')\r\n\r\n\r\n# minimal gunicorn app\r\ndef appG(environ, start_response):\r\n    data = b'Hello, World!\\n'\r\n    status = '200 OK'\r\n    response_headers = [\r\n        ('Content-type', 'text/plain'),\r\n        ('Content-Length', str(len(data)))\r\n    ]\r\n    start_response(status, response_headers)\r\n    return iter([data])\r\n\r\n\r\n# minimal uvicorn app\r\nasync def appU(scope, receive, send):\r\n    assert scope['type'] == 'http'\r\n    await send({\r\n        'type': 'http.response.start',\r\n        'status': 200,\r\n        'headers': [\r\n            [b'content-type', b'text/plain'],\r\n        ]\r\n    })\r\n    await send({\r\n        'type': 'http.response.body',\r\n        'body': b'Hello, world!',\r\n    })\r\n```\r\n\r\nThe logs \"work\" when the file is run by gunicorn or uvicorn individually.\r\n\r\nBut when I use gunicorn and uvicorn **together**, I get doubled uvicorn logs.\r\n\r\n```\r\n$ gunicorn -k uvicorn.workers.UvicornWorker test3:appU\r\n[2020-04-07 22:47:53 -0400] [16015] [INFO] Starting gunicorn 20.0.4\r\n[2020-04-07 22:47:53 -0400] [16015] [INFO] Listening at: http://127.0.0.1:8000 (16015)\r\n[2020-04-07 22:47:53 -0400] [16015] [INFO] Using worker: uvicorn.workers.UvicornWorker\r\n[2020-04-07 22:47:53 -0400] [16018] [INFO] Booting worker with pid: 16018\r\nERROR:root:TEST 1 -- LOGGING ERROR\r\nERROR:root:TEST 2 -- ROOT LOGGER ERROR\r\nERROR:foo:TEST 3 -- FOO LOGGER ERROR\r\n[2020-04-07 22:47:53 -0400] [16018] [INFO] Started server process [16018]\r\nINFO:uvicorn.error:Started server process [16018]\r\n[2020-04-07 22:47:53 -0400] [16018] [INFO] Waiting for application startup.\r\nINFO:uvicorn.error:Waiting for application startup.\r\n[2020-04-07 22:47:53 -0400] [16018] [INFO] ASGI 'lifespan' protocol appears unsupported.\r\nINFO:uvicorn.error:ASGI 'lifespan' protocol appears unsupported.\r\n[2020-04-07 22:47:53 -0400] [16018] [INFO] Application startup complete.\r\nINFO:uvicorn.error:Application startup complete.\r\n```\r\nNote the last several lines are double logged with different formats.  (Two handlers?)\r\n\r\nFYI,\r\n```\r\n$ pip freeze |grep corn\r\ngunicorn==20.0.4\r\nuvicorn==0.11.3\r\n```\r\n\r\nI'd love a work around for **both** `gunicorn -k uvicorn.workers.UvicornWorker ...` and `uvicorn ...` that has an inheritable root logger.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/613", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/613/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/613/events", "html_url": "https://github.com/encode/uvicorn/issues/613", "id": 595709204, "node_id": "MDU6SXNzdWU1OTU3MDkyMDQ=", "number": 613, "title": "If I use pypy,will uvicorn be faster?", "user": {"login": "Chise1", "id": 47511274, "node_id": "MDQ6VXNlcjQ3NTExMjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/47511274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chise1", "html_url": "https://github.com/Chise1", "followers_url": "https://api.github.com/users/Chise1/followers", "following_url": "https://api.github.com/users/Chise1/following{/other_user}", "gists_url": "https://api.github.com/users/Chise1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chise1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chise1/subscriptions", "organizations_url": "https://api.github.com/users/Chise1/orgs", "repos_url": "https://api.github.com/users/Chise1/repos", "events_url": "https://api.github.com/users/Chise1/events{/privacy}", "received_events_url": "https://api.github.com/users/Chise1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T09:00:56Z", "updated_at": "2020-04-07T09:36:02Z", "closed_at": "2020-04-07T09:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find that pypy can use uvicorn,but I don't know if uvicorn can be fast by jit.?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/607", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/607/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/607/events", "html_url": "https://github.com/encode/uvicorn/issues/607", "id": 592811763, "node_id": "MDU6SXNzdWU1OTI4MTE3NjM=", "number": 607, "title": "TypeError: __call__() missing 1 required positional argument: 'send'", "user": {"login": "alairock", "id": 1480236, "node_id": "MDQ6VXNlcjE0ODAyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1480236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alairock", "html_url": "https://github.com/alairock", "followers_url": "https://api.github.com/users/alairock/followers", "following_url": "https://api.github.com/users/alairock/following{/other_user}", "gists_url": "https://api.github.com/users/alairock/gists{/gist_id}", "starred_url": "https://api.github.com/users/alairock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alairock/subscriptions", "organizations_url": "https://api.github.com/users/alairock/orgs", "repos_url": "https://api.github.com/users/alairock/repos", "events_url": "https://api.github.com/users/alairock/events{/privacy}", "received_events_url": "https://api.github.com/users/alairock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T17:39:56Z", "updated_at": "2020-04-10T15:06:28Z", "closed_at": "2020-04-10T15:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when using the latest uvicorn and starlette in Python 3.8.2\r\n\r\n`TypeError: __call__() missing 1 required positional argument: 'send'`\r\n\r\nSteps to recreate: \r\n- clone repo https://github.com/alairock/broke-starlette-uvicorn\r\n- poetry install (make sure you are using Python 3.8)\r\n- `$ poetry run uvicorn src.core:init`\r\n- go to http://localhost:8000/\r\n\r\n\r\n\r\nI can fix it by manually by updating uvicorn>middleware>asgi2.py:L7\r\n\r\n```diff\r\n- await instance(receive, send)\r\n+ await instance(scope, receive, send)\r\n```\r\n\r\nOR \r\n\r\nI don't know if this is the proper solution, or if there is something else going on, which is why I am reporting an issue and not a merge request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/606", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/606/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/606/events", "html_url": "https://github.com/encode/uvicorn/issues/606", "id": 592360277, "node_id": "MDU6SXNzdWU1OTIzNjAyNzc=", "number": 606, "title": "How to log time of response to access log?", "user": {"login": "tonal", "id": 316216, "node_id": "MDQ6VXNlcjMxNjIxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/316216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonal", "html_url": "https://github.com/tonal", "followers_url": "https://api.github.com/users/tonal/followers", "following_url": "https://api.github.com/users/tonal/following{/other_user}", "gists_url": "https://api.github.com/users/tonal/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonal/subscriptions", "organizations_url": "https://api.github.com/users/tonal/orgs", "repos_url": "https://api.github.com/users/tonal/repos", "events_url": "https://api.github.com/users/tonal/events{/privacy}", "received_events_url": "https://api.github.com/users/tonal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T05:04:49Z", "updated_at": "2020-04-02T07:43:10Z", "closed_at": "2020-04-02T07:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to log time of response to access log?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/605", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/605/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/605/events", "html_url": "https://github.com/encode/uvicorn/issues/605", "id": 591347116, "node_id": "MDU6SXNzdWU1OTEzNDcxMTY=", "number": 605, "title": "Feature Request: Allow for multiple file types to trigger reload", "user": {"login": "seanaye", "id": 24496822, "node_id": "MDQ6VXNlcjI0NDk2ODIy", "avatar_url": "https://avatars3.githubusercontent.com/u/24496822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanaye", "html_url": "https://github.com/seanaye", "followers_url": "https://api.github.com/users/seanaye/followers", "following_url": "https://api.github.com/users/seanaye/following{/other_user}", "gists_url": "https://api.github.com/users/seanaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanaye/subscriptions", "organizations_url": "https://api.github.com/users/seanaye/orgs", "repos_url": "https://api.github.com/users/seanaye/repos", "events_url": "https://api.github.com/users/seanaye/events{/privacy}", "received_events_url": "https://api.github.com/users/seanaye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T19:00:47Z", "updated_at": "2020-04-10T10:58:32Z", "closed_at": "2020-04-10T10:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im using uvicorn as a server in a graphql application and it would be nice if you could pass uvicorn multiple file types to watch instead of only .py files\r\n\r\nIn my case this would be .py and .graphql files.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/604", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/604/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/604/events", "html_url": "https://github.com/encode/uvicorn/issues/604", "id": 591243106, "node_id": "MDU6SXNzdWU1OTEyNDMxMDY=", "number": 604, "title": "How to stop httptools from logging access logs with gunicorn?", "user": {"login": "sevaho", "id": 10941956, "node_id": "MDQ6VXNlcjEwOTQxOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/10941956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sevaho", "html_url": "https://github.com/sevaho", "followers_url": "https://api.github.com/users/sevaho/followers", "following_url": "https://api.github.com/users/sevaho/following{/other_user}", "gists_url": "https://api.github.com/users/sevaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/sevaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sevaho/subscriptions", "organizations_url": "https://api.github.com/users/sevaho/orgs", "repos_url": "https://api.github.com/users/sevaho/repos", "events_url": "https://api.github.com/users/sevaho/events{/privacy}", "received_events_url": "https://api.github.com/users/sevaho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T16:22:55Z", "updated_at": "2020-03-31T18:12:50Z", "closed_at": "2020-03-31T18:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there\r\n\r\nI am wondering how you could disable logs like this:\r\n\r\n```\r\n2020-03-31 18:15:23 INFO     (httptools_impl-send:447) >> 10.44.6.1:54978 - \"GET /healthz HTTP/1.1\" 200\r\n```\r\n\r\nI am using docker with entrypoint:\r\n\r\n```\r\nENTRYPOINT [\"gunicorn\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"app.app:app\", \"--workers=1\", \"--log-level\", \"warning\", \"--log-config\", \"logger.conf\", \"-b\", \":5000\", \"-t\", \"120\"]\r\n```\r\n\r\nand logger.conf:\r\n\r\n```\r\n[loggers]\r\nkeys=root, uvicorn.root, uvicorn.access, uvicorn.error\r\n\r\n[handlers]\r\nkeys=console, access_console, error_console\r\n\r\n[formatters]\r\nkeys=generic, access\r\n\r\n[logger_root]\r\nlevel=INFO\r\nhandlers=console\r\n\r\n[logger_uvicorn.root]\r\nlevel=INFO\r\nhandlers=error_console\r\npropagate=1\r\nqualname=uvicorn.error\r\n\r\n[logger_uvicorn.error]\r\nlevel=INFO\r\nhandlers=error_console\r\npropagate=1\r\nqualname=uvicorn.error\r\n\r\n[logger_uvicorn.access]\r\nlevel=INFO\r\nhandlers=access_console\r\npropagate=1\r\nqualname=uvicorn.access\r\n\r\n\r\n[handler_console]\r\nclass=StreamHandler\r\nformatter=generic\r\nargs=(sys.stdout, )\r\n\r\n[handler_error_console]\r\nclass=StreamHandler\r\nformatter=generic\r\nargs=(sys.stderr, )\r\n\r\n[handler_access_console]\r\nclass=StreamHandler\r\nformatter=access\r\nargs=(sys.stdout, )\r\n\r\n\r\n[formatter_generic]\r\nformat=%(asctime)s %(log_color)s%(levelname)-8s%(reset)s %(cyan)s(%(module)s-%(funcName)s:%(lineno)d) %(bold_white)s>>%(reset)s %(message)s\r\ndatefmt=%Y-%m-%d %H:%M:%S\r\nclass=colorlog.ColoredFormatter\r\n\r\n[formatter_access]\r\nformat=%(asctime)s %(green)sREQUEST%(reset)s -(%(name)s)[%(levelname)s][%(host)s]:%(bold_green)s%(request)s%(reset)s %(message)s %(status)d %(byte)d\r\nclass=colorlog.ColoredFormatter\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/602", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/602/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/602/events", "html_url": "https://github.com/encode/uvicorn/issues/602", "id": 590436467, "node_id": "MDU6SXNzdWU1OTA0MzY0Njc=", "number": 602, "title": "Python 3.8 support", "user": {"login": "timkofu", "id": 509078, "node_id": "MDQ6VXNlcjUwOTA3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/509078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timkofu", "html_url": "https://github.com/timkofu", "followers_url": "https://api.github.com/users/timkofu/followers", "following_url": "https://api.github.com/users/timkofu/following{/other_user}", "gists_url": "https://api.github.com/users/timkofu/gists{/gist_id}", "starred_url": "https://api.github.com/users/timkofu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timkofu/subscriptions", "organizations_url": "https://api.github.com/users/timkofu/orgs", "repos_url": "https://api.github.com/users/timkofu/repos", "events_url": "https://api.github.com/users/timkofu/events{/privacy}", "received_events_url": "https://api.github.com/users/timkofu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T16:45:08Z", "updated_at": "2020-03-31T11:14:01Z", "closed_at": "2020-03-31T11:14:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi; what's the ETA on Python 3.8 support? (the Quickstart -> Requirements section in docs doesn't include it)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/601", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/601/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/601/events", "html_url": "https://github.com/encode/uvicorn/issues/601", "id": 588094587, "node_id": "MDU6SXNzdWU1ODgwOTQ1ODc=", "number": 601, "title": "Should Uvicorn terminate the application instance on exception?", "user": {"login": "ackerleytng", "id": 2399902, "node_id": "MDQ6VXNlcjIzOTk5MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2399902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ackerleytng", "html_url": "https://github.com/ackerleytng", "followers_url": "https://api.github.com/users/ackerleytng/followers", "following_url": "https://api.github.com/users/ackerleytng/following{/other_user}", "gists_url": "https://api.github.com/users/ackerleytng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ackerleytng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ackerleytng/subscriptions", "organizations_url": "https://api.github.com/users/ackerleytng/orgs", "repos_url": "https://api.github.com/users/ackerleytng/repos", "events_url": "https://api.github.com/users/ackerleytng/events{/privacy}", "received_events_url": "https://api.github.com/users/ackerleytng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T01:43:09Z", "updated_at": "2020-03-26T14:42:16Z", "closed_at": "2020-03-26T14:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `/usr/local/lib/python3.7/site-packages/uvicorn/protocols/http/httptools_impl.py:387`, uvicorn catches the exception from the client, prints it out, and does not terminate the offending application.\r\n\r\nThe [ASGI spec](https://asgi.readthedocs.io/en/latest/specs/main.html#error-handling) seem to suggest that  servers \"must terminate the application instance and its associated connection if this happens.\"\r\n\r\nShould we terminate the application?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/594", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/594/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/594/events", "html_url": "https://github.com/encode/uvicorn/issues/594", "id": 584255605, "node_id": "MDU6SXNzdWU1ODQyNTU2MDU=", "number": 594, "title": "Typo in protocol logging.", "user": {"login": "MaciejJaromin", "id": 1729954, "node_id": "MDQ6VXNlcjE3Mjk5NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1729954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaciejJaromin", "html_url": "https://github.com/MaciejJaromin", "followers_url": "https://api.github.com/users/MaciejJaromin/followers", "following_url": "https://api.github.com/users/MaciejJaromin/following{/other_user}", "gists_url": "https://api.github.com/users/MaciejJaromin/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaciejJaromin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaciejJaromin/subscriptions", "organizations_url": "https://api.github.com/users/MaciejJaromin/orgs", "repos_url": "https://api.github.com/users/MaciejJaromin/repos", "events_url": "https://api.github.com/users/MaciejJaromin/events{/privacy}", "received_events_url": "https://api.github.com/users/MaciejJaromin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T08:51:10Z", "updated_at": "2020-03-19T20:58:29Z", "closed_at": "2020-03-19T20:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line 137 of /protocols/http/h11_impl.py has a typo:\r\n`self.logger.log(TRACE_LOG_LEVEL, \"%Connection lost\", prefix)` should be `self.logger.log(TRACE_LOG_LEVEL, \"%sConnection lost\", prefix)`. This causes an exception to be thrown when logging at trace level.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/593", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/593/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/593/events", "html_url": "https://github.com/encode/uvicorn/issues/593", "id": 584249483, "node_id": "MDU6SXNzdWU1ODQyNDk0ODM=", "number": 593, "title": "Is there missing close code\uff1f", "user": {"login": "MisLink", "id": 8280169, "node_id": "MDQ6VXNlcjgyODAxNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8280169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MisLink", "html_url": "https://github.com/MisLink", "followers_url": "https://api.github.com/users/MisLink/followers", "following_url": "https://api.github.com/users/MisLink/following{/other_user}", "gists_url": "https://api.github.com/users/MisLink/gists{/gist_id}", "starred_url": "https://api.github.com/users/MisLink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MisLink/subscriptions", "organizations_url": "https://api.github.com/users/MisLink/orgs", "repos_url": "https://api.github.com/users/MisLink/repos", "events_url": "https://api.github.com/users/MisLink/events{/privacy}", "received_events_url": "https://api.github.com/users/MisLink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-19T08:39:10Z", "updated_at": "2020-03-20T08:41:28Z", "closed_at": "2020-03-19T16:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line: https://github.com/encode/uvicorn/blob/9d9f8820a8155e36dcb5e4d4023f470e51aa4e03/uvicorn/protocols/websockets/wsproto_impl.py#L66\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/589", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/589/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/589/events", "html_url": "https://github.com/encode/uvicorn/issues/589", "id": 582345702, "node_id": "MDU6SXNzdWU1ODIzNDU3MDI=", "number": 589, "title": "Uvicorn via gunicorn worker doesn't respect `--forwarded-allow-ips`", "user": {"login": "b0g3r", "id": 19777948, "node_id": "MDQ6VXNlcjE5Nzc3OTQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/19777948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b0g3r", "html_url": "https://github.com/b0g3r", "followers_url": "https://api.github.com/users/b0g3r/followers", "following_url": "https://api.github.com/users/b0g3r/following{/other_user}", "gists_url": "https://api.github.com/users/b0g3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/b0g3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b0g3r/subscriptions", "organizations_url": "https://api.github.com/users/b0g3r/orgs", "repos_url": "https://api.github.com/users/b0g3r/repos", "events_url": "https://api.github.com/users/b0g3r/events{/privacy}", "received_events_url": "https://api.github.com/users/b0g3r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 616811006, "node_id": "MDU6TGFiZWw2MTY4MTEwMDY=", "url": "https://api.github.com/repos/encode/uvicorn/labels/enhancement", "name": "enhancement", "color": "fbca04", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T14:32:57Z", "updated_at": "2020-04-10T19:16:27Z", "closed_at": "2020-04-10T19:16:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use uvicorn in docker as uvicorn-worker for gunicorn for my fastapi app. My application needs to know the real client IP of each request, so I use proxy-server with the `X-Forwarded-For` header.\r\n\r\nGunicorn has a special option to change proxy-ip to real-ip, so I running gunicorn like this:\r\n```\r\ngunicorn \\\r\n  ppm_telegram_bot.api:app \\\r\n  --forwarded-allow-ips=\"*\" \r\n  --worker-class=uvicorn.workers.UvicornWorker \\\r\n  --bind=0.0.0.0:$PORT\r\n```\r\n\r\nBecause I'm in a container, my WSGI/ASGI server receives requests not from the localhost, but from the docker network.\r\n\r\nBut uvicorn-worker doesn't respect gunicorn's `forwarded-allow-ips`, so in `ProxyHeadersMiddleware.trusted_hosts` I receive default `127.0.0.1` and proxy-ip instead of real-ip.\r\nhttps://github.com/encode/uvicorn/blob/9d9f8820a8155e36dcb5e4d4023f470e51aa4e03/uvicorn/middleware/proxy_headers.py#L14-L17\r\n\r\nIt looks like uvicorn-worker can forward this information to config via `config_kwargs`: https://github.com/encode/uvicorn/blob/9d9f8820a8155e36dcb5e4d4023f470e51aa4e03/uvicorn/workers.py#L28-L35\r\n\r\nI could do PR with this change, if required \ud83d\ude4c ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/588", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/588/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/588/events", "html_url": "https://github.com/encode/uvicorn/issues/588", "id": 581580909, "node_id": "MDU6SXNzdWU1ODE1ODA5MDk=", "number": 588, "title": "need help :uvicorn can't reload when user fastapi and apscheduler", "user": {"login": "fenghaoyu", "id": 32116328, "node_id": "MDQ6VXNlcjMyMTE2MzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/32116328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenghaoyu", "html_url": "https://github.com/fenghaoyu", "followers_url": "https://api.github.com/users/fenghaoyu/followers", "following_url": "https://api.github.com/users/fenghaoyu/following{/other_user}", "gists_url": "https://api.github.com/users/fenghaoyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenghaoyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenghaoyu/subscriptions", "organizations_url": "https://api.github.com/users/fenghaoyu/orgs", "repos_url": "https://api.github.com/users/fenghaoyu/repos", "events_url": "https://api.github.com/users/fenghaoyu/events{/privacy}", "received_events_url": "https://api.github.com/users/fenghaoyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-15T08:28:20Z", "updated_at": "2020-03-16T10:59:49Z", "closed_at": "2020-03-16T10:59:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i user fastapi and apscheduler, uvicorn cant reload on linux centos.\r\nbut it can work on windows.\r\nhere is the code:\r\nfile: main.py\r\n```\r\ndef apscheduler():\r\n    scheduler = AsyncIOScheduler()\r\n    scheduler.add_job(my_jobs.tick, 'cron', hour=2, minute=0)\r\n    deadline = datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(seconds=5)\r\n    scheduler.add_job(my_jobs.tick, 'date', run_date=deadline)\r\n\r\n    try:\r\n        scheduler.start()\r\n    except Exception as e:\r\n        scheduler.shutdown()\r\n\r\n    return scheduler\r\n\r\napscheduler()\r\napp = get_app()\r\n```\r\n\r\nscript:\r\n ```uvicorn main:app --reload```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/586", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/586/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/586/events", "html_url": "https://github.com/encode/uvicorn/issues/586", "id": 577972952, "node_id": "MDU6SXNzdWU1Nzc5NzI5NTI=", "number": 586, "title": "Uvicorn ignores --uds for --reload", "user": {"login": "Roang-zero1", "id": 12152679, "node_id": "MDQ6VXNlcjEyMTUyNjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/12152679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Roang-zero1", "html_url": "https://github.com/Roang-zero1", "followers_url": "https://api.github.com/users/Roang-zero1/followers", "following_url": "https://api.github.com/users/Roang-zero1/following{/other_user}", "gists_url": "https://api.github.com/users/Roang-zero1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Roang-zero1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Roang-zero1/subscriptions", "organizations_url": "https://api.github.com/users/Roang-zero1/orgs", "repos_url": "https://api.github.com/users/Roang-zero1/repos", "events_url": "https://api.github.com/users/Roang-zero1/events{/privacy}", "received_events_url": "https://api.github.com/users/Roang-zero1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T15:01:49Z", "updated_at": "2020-03-09T15:26:00Z", "closed_at": "2020-03-09T15:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "As talked about in #368 the `--reload` setting ignores the `--uds` setting, thereby reload binds itself to the default localhost:8000.\r\n\r\nIn our dev deployment we try to stay as close to production as possible. Due to this issue we have to workaround our nginx config to fall back to a https socket in dev,\r\n\r\nI would like to request this feature to be added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/585", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/585/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/585/events", "html_url": "https://github.com/encode/uvicorn/issues/585", "id": 577209194, "node_id": "MDU6SXNzdWU1NzcyMDkxOTQ=", "number": 585, "title": "AttributeError: module 'uvicorn' has no attribute 'run'", "user": {"login": "keepsimple1", "id": 7699244, "node_id": "MDQ6VXNlcjc2OTkyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7699244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keepsimple1", "html_url": "https://github.com/keepsimple1", "followers_url": "https://api.github.com/users/keepsimple1/followers", "following_url": "https://api.github.com/users/keepsimple1/following{/other_user}", "gists_url": "https://api.github.com/users/keepsimple1/gists{/gist_id}", "starred_url": "https://api.github.com/users/keepsimple1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keepsimple1/subscriptions", "organizations_url": "https://api.github.com/users/keepsimple1/orgs", "repos_url": "https://api.github.com/users/keepsimple1/repos", "events_url": "https://api.github.com/users/keepsimple1/events{/privacy}", "received_events_url": "https://api.github.com/users/keepsimple1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T22:28:23Z", "updated_at": "2020-03-09T10:28:29Z", "closed_at": "2020-03-09T10:25:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does the example code from uvicorn website correct?  \r\n\r\nI'm following this example: https://www.uvicorn.org/#running-programmatically\r\n\r\nbut got the following error:\r\n```\r\n$ python example.py\r\nTraceback (most recent call last):\r\n  File \"example.py\", line 7, in <module>\r\n    uvicorn.run(\"example:app\", host=\"127.0.0.1\", port=5000, log_level=\"info\")\r\nAttributeError: module 'uvicorn' has no attribute 'run'\r\n```\r\n\r\nI'm using python 3.7.5, uvicorn 0.11.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/584", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/584/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/584/events", "html_url": "https://github.com/encode/uvicorn/issues/584", "id": 576553344, "node_id": "MDU6SXNzdWU1NzY1NTMzNDQ=", "number": 584, "title": "Subprocess launched in Uvicorn worker always returns zero exit code", "user": {"login": "julioasotodv", "id": 20630819, "node_id": "MDQ6VXNlcjIwNjMwODE5", "avatar_url": "https://avatars2.githubusercontent.com/u/20630819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julioasotodv", "html_url": "https://github.com/julioasotodv", "followers_url": "https://api.github.com/users/julioasotodv/followers", "following_url": "https://api.github.com/users/julioasotodv/following{/other_user}", "gists_url": "https://api.github.com/users/julioasotodv/gists{/gist_id}", "starred_url": "https://api.github.com/users/julioasotodv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julioasotodv/subscriptions", "organizations_url": "https://api.github.com/users/julioasotodv/orgs", "repos_url": "https://api.github.com/users/julioasotodv/repos", "events_url": "https://api.github.com/users/julioasotodv/events{/privacy}", "received_events_url": "https://api.github.com/users/julioasotodv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-05T21:52:02Z", "updated_at": "2020-08-15T20:53:38Z", "closed_at": "2020-03-08T23:35:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, I am facing one of those little bugs that almost seem impossible to happen (at least IMHO):\r\n\r\nImagine that I have the following \"ASGI server app\" (`server.py`), in which I want to make a call to a bash command using `subprocess.Popen` (I know, there is no ASGI app, but this is just an example):\r\n\r\n```python\r\nimport subprocess\r\n\r\n# The command mkdir without any other\r\n# arguments would normally return nonzero \r\n# exit code (it returns 1):\r\nproc = subprocess.Popen([\"mkdir\"], stdout=subprocess.PIPE,\r\n                         stderr=subprocess.PIPE)\r\n\r\noutput, error = (str(s.decode()).strip() for s in proc.communicate())\r\n\r\nprint(\"Output: \", output)\r\nprint(\"Error: \", error)\r\n\r\n# However, inside a Uvicorn worker, it returns 0 exit code:\r\nprint(\"Exit code: \", proc.returncode)\r\n```\r\n\r\nAnd we run our \"app\" with:\r\n\r\n```\r\ngunicorn -k uvicorn.workers.UvicornWorker server.py\r\n```\r\n\r\nThe exit code result of `subprocess.Popen` is always 0, even though it shouldn't. The output is:\r\n\r\n```\r\nOutput:\r\nError: mkdir: missing operand\r\nTry 'mkdir --help' for more information.\r\nExit code: 0\r\n```\r\nHowever, if I just use Gunicorn's default `sync` workers:\r\n\r\n```\r\ngunicorn server.py\r\n```\r\n\r\nThe return code is the right one:\r\n\r\n```\r\nOutput:\r\nError: mkdir: missing operand\r\nTry 'mkdir --help' for more information.\r\nExit code: 1\r\n```\r\n\r\nIs there any reason why Uvicorn's Gunicorn worker always return zero exit code from `subprocess.Popen`?\r\n\r\nI know it is a weird thing to do, but I actually need a bash call inside the Uvicorn workers.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/583", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/583/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/583/events", "html_url": "https://github.com/encode/uvicorn/issues/583", "id": 575136168, "node_id": "MDU6SXNzdWU1NzUxMzYxNjg=", "number": 583, "title": "[Question] How do I save logs presented in console from uvicron logger?", "user": {"login": "jsrimr", "id": 16870927, "node_id": "MDQ6VXNlcjE2ODcwOTI3", "avatar_url": "https://avatars1.githubusercontent.com/u/16870927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsrimr", "html_url": "https://github.com/jsrimr", "followers_url": "https://api.github.com/users/jsrimr/followers", "following_url": "https://api.github.com/users/jsrimr/following{/other_user}", "gists_url": "https://api.github.com/users/jsrimr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsrimr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsrimr/subscriptions", "organizations_url": "https://api.github.com/users/jsrimr/orgs", "repos_url": "https://api.github.com/users/jsrimr/repos", "events_url": "https://api.github.com/users/jsrimr/events{/privacy}", "received_events_url": "https://api.github.com/users/jsrimr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T04:52:51Z", "updated_at": "2020-03-04T10:00:52Z", "closed_at": "2020-03-04T10:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have trouble in integrating uvicron logger into my uvicorn app!\r\n\r\nI made this custom logger to save logs presented in the console, \r\n```\r\nimport os\r\nimport logging , datetime\r\nimport logging.handlers\r\nfrom time import sleep\r\n\r\nlog = logging.getLogger('uvicorn')\r\nlog.setLevel(logging.DEBUG)\r\nlog.propagate = True\r\nformatter = logging.Formatter(\"%(asctime)s;[%(levelname)s];%(message)s\",\r\n                              \"%Y-%m-%d %H:%M:%S\")\r\nstreamHandler = logging.StreamHandler()\r\nlog_max_size = 100000\r\nlog_file_count = 5\r\nif not os.path.exists('logs'):\r\n    os.makedirs('logs')\r\nfileHandler = logging.handlers.RotatingFileHandler(filename='logs/connect_logs', \r\n                                                   maxBytes=log_max_size,\r\n                                                   backupCount=log_file_count,\r\n                                                   mode = \"w\", \r\n                                                  )\r\nfileHandler.setLevel(logging.DEBUG)\r\nstreamHandler.setLevel(logging.INFO)\r\n\r\nfileHandler.setFormatter(formatter)\r\nstreamHandler.setFormatter(formatter)\r\nlog.addHandler(fileHandler)\r\nlog.addHandler(streamHandler) \r\n```\r\nbut the log saved in file is different from the console.\r\nWhile logs in the file only presents switch on/off of the app,\r\n```\r\n2020-03-04 13:14:01;[INFO];Started server process [50484]\r\n2020-03-04 13:14:01;[INFO];Waiting for application startup.\r\n2020-03-04 13:14:01;[INFO];Application startup complete.\r\n2020-03-04 13:14:01;[INFO];Uvicorn running on http://0.0.0.0:5000 (Press CTRL+C to quit)\r\n2020-03-04 13:40:14;[INFO];Shutting down\r\n```\r\nthe log from console also shows client address and what client requested.\r\n```\r\n2020-03-04 13:40:26;[INFO];Started server process [53638]\r\nINFO:     Started server process [53638]\r\n2020-03-04 13:40:26;[INFO];Waiting for application startup.\r\nINFO:     Waiting for application startup.\r\n2020-03-04 13:40:26;[INFO];Application startup complete.\r\nINFO:     Application startup complete.\r\n2020-03-04 13:40:26;[INFO];Uvicorn running on http://0.0.0.0:5000 (Press CTRL+C to quit)\r\nINFO:     Uvicorn running on http://0.0.0.0:5000 (Press CTRL+C to quit)\r\nINFO:     127.0.0.1:57325 - \"GET / HTTP/1.1\" 200 OK\r\n```\r\nHow can I save client trace into the file not only on the console?\r\n\r\nI tried to find something in here(https://www.uvicorn.org/settings/#logging), but in vain. \r\n\r\nThanks for reading!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/582", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/582/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/582/events", "html_url": "https://github.com/encode/uvicorn/issues/582", "id": 571431644, "node_id": "MDU6SXNzdWU1NzE0MzE2NDQ=", "number": 582, "title": "reloader does not watching sys.path", "user": {"login": "voidpp", "id": 6121328, "node_id": "MDQ6VXNlcjYxMjEzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6121328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidpp", "html_url": "https://github.com/voidpp", "followers_url": "https://api.github.com/users/voidpp/followers", "following_url": "https://api.github.com/users/voidpp/following{/other_user}", "gists_url": "https://api.github.com/users/voidpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidpp/subscriptions", "organizations_url": "https://api.github.com/users/voidpp/orgs", "repos_url": "https://api.github.com/users/voidpp/repos", "events_url": "https://api.github.com/users/voidpp/events{/privacy}", "received_events_url": "https://api.github.com/users/voidpp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1002214279, "node_id": "MDU6TGFiZWwxMDAyMjE0Mjc5", "url": "https://api.github.com/repos/encode/uvicorn/labels/docs", "name": "docs", "color": "0052cc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T14:41:10Z", "updated_at": "2020-04-11T07:47:56Z", "closed_at": "2020-04-11T07:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the documentation: https://www.uvicorn.org/settings/ \r\n\r\n> `--reload-dir <path>` - Specify which directories to watch for python file changes. May be used multiple times. If unused, then by default all directories in `sys.path` will be watched.\r\n\r\nSo if I don't use the `--reload-dir` option the reloader should watch all the dirs in the `sys.path`, but actually it isn't.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/581", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/581/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/581/events", "html_url": "https://github.com/encode/uvicorn/issues/581", "id": 570001977, "node_id": "MDU6SXNzdWU1NzAwMDE5Nzc=", "number": 581, "title": "Load certificates with custom function", "user": {"login": "maxmealy", "id": 11277856, "node_id": "MDQ6VXNlcjExMjc3ODU2", "avatar_url": "https://avatars2.githubusercontent.com/u/11277856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxmealy", "html_url": "https://github.com/maxmealy", "followers_url": "https://api.github.com/users/maxmealy/followers", "following_url": "https://api.github.com/users/maxmealy/following{/other_user}", "gists_url": "https://api.github.com/users/maxmealy/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxmealy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxmealy/subscriptions", "organizations_url": "https://api.github.com/users/maxmealy/orgs", "repos_url": "https://api.github.com/users/maxmealy/repos", "events_url": "https://api.github.com/users/maxmealy/events{/privacy}", "received_events_url": "https://api.github.com/users/maxmealy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T17:19:43Z", "updated_at": "2020-02-25T09:10:07Z", "closed_at": "2020-02-25T09:10:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to point Uvicorn to a custom function to load an SSL certificate and keyfile, rather than passing in the filepaths? Or alternatively, point to a function to pass into the password argument when SSLContext.load_cert_chain is called? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/579", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/579/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/579/events", "html_url": "https://github.com/encode/uvicorn/issues/579", "id": 568286135, "node_id": "MDU6SXNzdWU1NjgyODYxMzU=", "number": 579, "title": "Log autorestarts caused by max_requests", "user": {"login": "Stigjb", "id": 418181, "node_id": "MDQ6VXNlcjQxODE4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/418181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stigjb", "html_url": "https://github.com/Stigjb", "followers_url": "https://api.github.com/users/Stigjb/followers", "following_url": "https://api.github.com/users/Stigjb/following{/other_user}", "gists_url": "https://api.github.com/users/Stigjb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stigjb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stigjb/subscriptions", "organizations_url": "https://api.github.com/users/Stigjb/orgs", "repos_url": "https://api.github.com/users/Stigjb/repos", "events_url": "https://api.github.com/users/Stigjb/events{/privacy}", "received_events_url": "https://api.github.com/users/Stigjb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T13:05:02Z", "updated_at": "2020-02-24T09:19:25Z", "closed_at": "2020-02-24T09:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "UvicornWorker supports the max_requests option in Gunicorn, but restarts due to max_requests are not distinguishable in the server logs from restarts due to other reasons.\r\n\r\nThe AsyncWorker class in Gunicorn has a log statement covering this:\r\n\r\nhttps://github.com/benoitc/gunicorn/blob/master/gunicorn/workers/base_async.py#L98-L101\r\n\r\nIs it possible to have this logged in UvicornWorker?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/578", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/578/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/578/events", "html_url": "https://github.com/encode/uvicorn/issues/578", "id": 567993871, "node_id": "MDU6SXNzdWU1Njc5OTM4NzE=", "number": 578, "title": "HTTP Scope missing fields", "user": {"login": "nwalsh1995", "id": 1879632, "node_id": "MDQ6VXNlcjE4Nzk2MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwalsh1995", "html_url": "https://github.com/nwalsh1995", "followers_url": "https://api.github.com/users/nwalsh1995/followers", "following_url": "https://api.github.com/users/nwalsh1995/following{/other_user}", "gists_url": "https://api.github.com/users/nwalsh1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwalsh1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwalsh1995/subscriptions", "organizations_url": "https://api.github.com/users/nwalsh1995/orgs", "repos_url": "https://api.github.com/users/nwalsh1995/repos", "events_url": "https://api.github.com/users/nwalsh1995/events{/privacy}", "received_events_url": "https://api.github.com/users/nwalsh1995/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 616811006, "node_id": "MDU6TGFiZWw2MTY4MTEwMDY=", "url": "https://api.github.com/repos/encode/uvicorn/labels/enhancement", "name": "enhancement", "color": "fbca04", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T01:33:08Z", "updated_at": "2020-05-04T17:46:42Z", "closed_at": "2020-05-04T17:46:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://asgi.readthedocs.io/en/latest/specs/www.html#connection-scope\r\n\r\n>The connection scope contains:\r\n    ...\r\n    asgi[\"version\"] (Unicode string) \u2013 Version of the ASGI spec.\r\n    asgi[\"spec_version\"] (Unicode string) \u2013 Version of the ASGI HTTP spec this server understands; one of \"2.0\" or \"2.1\". Optional; if missing assume 2.0.\r\n\r\nI sent a request through uvicorn and noticed these fields are missing. Additionally searching the code for \"spec_version\" does not return any hits so I think these fields are not being handled. Potentially these were added in a later ASGI version that is not supported or I may be misunderstanding what the ASGI docs mean.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/576", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/576/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/576/events", "html_url": "https://github.com/encode/uvicorn/issues/576", "id": 566431257, "node_id": "MDU6SXNzdWU1NjY0MzEyNTc=", "number": 576, "title": "Incorrect MIME type for templated javascript module imports", "user": {"login": "jbsetton", "id": 40573975, "node_id": "MDQ6VXNlcjQwNTczOTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/40573975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbsetton", "html_url": "https://github.com/jbsetton", "followers_url": "https://api.github.com/users/jbsetton/followers", "following_url": "https://api.github.com/users/jbsetton/following{/other_user}", "gists_url": "https://api.github.com/users/jbsetton/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbsetton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbsetton/subscriptions", "organizations_url": "https://api.github.com/users/jbsetton/orgs", "repos_url": "https://api.github.com/users/jbsetton/repos", "events_url": "https://api.github.com/users/jbsetton/events{/privacy}", "received_events_url": "https://api.github.com/users/jbsetton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T17:17:50Z", "updated_at": "2020-02-19T09:24:47Z", "closed_at": "2020-02-19T09:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings all,\r\nI cannot seem to find where one explicitly defines mime types for imports. My browser is blocking all javascript module imports due to the server serving them as (\u201ctext/plain\u201d). I realize this is a simple configuration issue, but I cannot seem to find where to set it. Any assistance provided is greatly appreciated. The console error shown below with my python 'app'.\r\nI am running Win10 x64, Firefox 73.0 (64-bit), Python 3.7, uvicorn 0.11.2, and starlette 0.13.1. \r\n\r\n![image](https://user-images.githubusercontent.com/40573975/74674149-9ca7a280-5165-11ea-96d7-0b56c76fffe7.png)\r\n\r\n```python \r\nfrom starlette.applications import Starlette\r\nfrom starlette.staticfiles import StaticFiles\r\nfrom starlette.responses import HTMLResponse\r\nfrom starlette.templating import Jinja2Templates\r\nimport uvicorn\r\nfrom random import randint\r\n\r\nport = randint(49152,65535)\r\n\r\ntemplates = Jinja2Templates(directory='templates')\r\n\r\napp = Starlette(debug=True)\r\napp.mount('/static', StaticFiles(directory='statics'), name='static')\r\n\r\n\r\n@app.route('/')\r\nasync def homepage(request):\r\n    template = \"index.html\"\r\n    context = {\"request\": request}\r\n    return templates.TemplateResponse(template, context)\r\n\r\n\r\n@app.route('/error')\r\nasync def error(request):\r\n    \"\"\"\r\n    An example error. Switch the `debug` setting to see either tracebacks or 500 pages.\r\n    \"\"\"\r\n    raise RuntimeError(\"Oh no\")\r\n\r\n\r\n@app.exception_handler(404)\r\nasync def not_found(request, exc):\r\n    \"\"\"\r\n    Return an HTTP 404 page.\r\n    \"\"\"\r\n    template = \"404.html\"\r\n    context = {\"request\": request}\r\n    return templates.TemplateResponse(template, context, status_code=404)\r\n\r\n\r\n@app.exception_handler(500)\r\nasync def server_error(request, exc):\r\n    \"\"\"\r\n    Return an HTTP 500 page.\r\n    \"\"\"\r\n    template = \"500.html\"\r\n    context = {\"request\": request}\r\n    return templates.TemplateResponse(template, context, status_code=500)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(\"app-567:app\", host='0.0.0.0', port=port, access_log=True, http='h11', loop='asyncio', reload=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/574", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/574/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/574/events", "html_url": "https://github.com/encode/uvicorn/issues/574", "id": 566366659, "node_id": "MDU6SXNzdWU1NjYzNjY2NTk=", "number": 574, "title": "plsease introduce --limit-max-requests-jitter", "user": {"login": "kudlatyamroth", "id": 2165237, "node_id": "MDQ6VXNlcjIxNjUyMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2165237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kudlatyamroth", "html_url": "https://github.com/kudlatyamroth", "followers_url": "https://api.github.com/users/kudlatyamroth/followers", "following_url": "https://api.github.com/users/kudlatyamroth/following{/other_user}", "gists_url": "https://api.github.com/users/kudlatyamroth/gists{/gist_id}", "starred_url": "https://api.github.com/users/kudlatyamroth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kudlatyamroth/subscriptions", "organizations_url": "https://api.github.com/users/kudlatyamroth/orgs", "repos_url": "https://api.github.com/users/kudlatyamroth/repos", "events_url": "https://api.github.com/users/kudlatyamroth/events{/privacy}", "received_events_url": "https://api.github.com/users/kudlatyamroth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T15:20:06Z", "updated_at": "2020-02-20T13:04:42Z", "closed_at": "2020-02-17T15:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of now, we can define limit_max_requests but if we have 2~4 workes it can quickly go with all workers restarting at the same time.\r\nGunicorn have something like max request jitter which vary limit per each worker ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/571", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/571/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/571/events", "html_url": "https://github.com/encode/uvicorn/issues/571", "id": 562757081, "node_id": "MDU6SXNzdWU1NjI3NTcwODE=", "number": 571, "title": "Support Binding to Multiple Ports", "user": {"login": "bartboy011", "id": 20690809, "node_id": "MDQ6VXNlcjIwNjkwODA5", "avatar_url": "https://avatars1.githubusercontent.com/u/20690809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartboy011", "html_url": "https://github.com/bartboy011", "followers_url": "https://api.github.com/users/bartboy011/followers", "following_url": "https://api.github.com/users/bartboy011/following{/other_user}", "gists_url": "https://api.github.com/users/bartboy011/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartboy011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartboy011/subscriptions", "organizations_url": "https://api.github.com/users/bartboy011/orgs", "repos_url": "https://api.github.com/users/bartboy011/repos", "events_url": "https://api.github.com/users/bartboy011/events{/privacy}", "received_events_url": "https://api.github.com/users/bartboy011/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-10T18:49:30Z", "updated_at": "2020-02-10T19:53:13Z", "closed_at": "2020-02-10T19:53:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there! I'd like to use Uvicorn for an application I'm working on, however, my use-case requires the ability to bind the application to multiple ports. Looking through the source code, this doesn't seem possible, but I'm curious if a workaround has been discussed before, and/or if this is on the roadmap?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/568", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/568/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/568/events", "html_url": "https://github.com/encode/uvicorn/issues/568", "id": 562065418, "node_id": "MDU6SXNzdWU1NjIwNjU0MTg=", "number": 568, "title": "WebSocketProtocol logged as error", "user": {"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 616811005, "node_id": "MDU6TGFiZWw2MTY4MTEwMDU=", "url": "https://api.github.com/repos/encode/uvicorn/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-08T19:19:56Z", "updated_at": "2020-04-11T07:49:12Z", "closed_at": "2020-02-10T16:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Context**\r\nI will link a [previous issue](https://github.com/Supervisor/supervisor/issues/1325) containing many informations about the current problem. I thought the problem came from the process manager for redirecting errors but after reading the code of **uvicorn** I found the problem. \r\n\r\n**Behavior**\r\nWhen a **WebSocket request** is received (and accepted), the log is redirected in the **stderr.log** file...\r\n```\r\nINFO:     None - \"WebSocket /ws/\" [accepted]\r\n```\r\n\r\nAfter the response the supervisor team, I have search the logger used for `websocket` communication...\r\n\r\n**uvicorn/protocols/websockets/websockets_impl.py**\r\n```python\r\nclass WebSocketProtocol(websockets.WebSocketServerProtocol):\r\n    def __init__(self, config, server_state, _loop=None):\r\n        ...\r\n        self.logger = logging.getLogger(\"uvicorn.error\")\r\n```\r\n\r\n**Problem**\r\nDid you have a reason to use `(\"uvicorn.error\")` for WebSocket requests?  \r\nWhy we can't use the logger for success requests like HTTP? Because it's seem unicorn correctly understand the communication and accept it, as specified in the log `[accepted]`. So is behavior completely break the logging system to manage errors...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/567", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/567/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/567/events", "html_url": "https://github.com/encode/uvicorn/issues/567", "id": 561466028, "node_id": "MDU6SXNzdWU1NjE0NjYwMjg=", "number": 567, "title": "incompatible httptools 0.1.0", "user": {"login": "alfredo-ardito", "id": 6663326, "node_id": "MDQ6VXNlcjY2NjMzMjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredo-ardito", "html_url": "https://github.com/alfredo-ardito", "followers_url": "https://api.github.com/users/alfredo-ardito/followers", "following_url": "https://api.github.com/users/alfredo-ardito/following{/other_user}", "gists_url": "https://api.github.com/users/alfredo-ardito/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredo-ardito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredo-ardito/subscriptions", "organizations_url": "https://api.github.com/users/alfredo-ardito/orgs", "repos_url": "https://api.github.com/users/alfredo-ardito/repos", "events_url": "https://api.github.com/users/alfredo-ardito/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredo-ardito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-07T07:23:54Z", "updated_at": "2020-02-10T15:30:46Z", "closed_at": "2020-02-10T15:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERROR: uvicorn 0.11.2 has requirement httptools==0.0.13; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"pypy\", but you'll have httptools 0.1.0 which is incompatible.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/565", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/565/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/565/events", "html_url": "https://github.com/encode/uvicorn/issues/565", "id": 560030242, "node_id": "MDU6SXNzdWU1NjAwMzAyNDI=", "number": 565, "title": "Exception on controlled worker shutdown", "user": {"login": "wagoodman", "id": 590471, "node_id": "MDQ6VXNlcjU5MDQ3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/590471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagoodman", "html_url": "https://github.com/wagoodman", "followers_url": "https://api.github.com/users/wagoodman/followers", "following_url": "https://api.github.com/users/wagoodman/following{/other_user}", "gists_url": "https://api.github.com/users/wagoodman/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagoodman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagoodman/subscriptions", "organizations_url": "https://api.github.com/users/wagoodman/orgs", "repos_url": "https://api.github.com/users/wagoodman/repos", "events_url": "https://api.github.com/users/wagoodman/events{/privacy}", "received_events_url": "https://api.github.com/users/wagoodman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T22:59:36Z", "updated_at": "2020-02-24T10:03:22Z", "closed_at": "2020-02-24T10:03:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when running gunicorn + uvicorn ([a suggested production deployment pattern](https://www.uvicorn.org/deployment/)), I get a exception on shutdown (on SIGTERM):\r\n\r\n```\r\n[2020-02-04 17:40:31 -0500] [37823] [ERROR] Exception in worker process\r\nTraceback (most recent call last):\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\r\n    worker.init_process()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 57, in init_process\r\n    super(UvicornWorker, self).init_process()\r\n          \u2502              \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n          \u2514 <class 'uvicorn.workers.UvicornWorker'>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 134, in init_process\r\n    self.run()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 66, in run\r\n    loop.run_until_complete(server.serve(sockets=self.sockets))\r\n    \u2502                       \u2502                    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n    \u2502                       \u2514 <uvicorn.main.Server object at 0x10bc80d90>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n           \u2514 <Task finished coro=<Server.serve() done, defined at /Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-pack...\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 403, in serve\r\n    await self.shutdown(sockets=sockets)\r\n          \u2502                     \u2514 [<gunicorn.sock.TCPSocket object at 0x10bc77890>]\r\n          \u2514 <uvicorn.main.Server object at 0x10bc80d90>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 533, in shutdown\r\n    server.close()\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 306, in close\r\n    self._loop._stop_serving(sock)\r\n    \u2502                        \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/selector_events.py\", line 562, in _stop_serving\r\n    self._remove_reader(sock.fileno())\r\n    \u2502                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/sock.py\", line 38, in __getattr__\r\n    return getattr(self.sock, name)\r\n                   \u2502          \u2514 'fileno'\r\n                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\nAttributeError: 'NoneType' object has no attribute 'fileno'\r\n```\r\nThis appears to be because [sockets created by servers are explicitly closed before closing servers](https://github.com/encode/uvicorn/blob/0.11.2/uvicorn/main.py#L530-L533), however, a server close may [also attempt to operate on the socket](https://github.com/python/cpython/blob/97d2a9832494e4c85da124ceab18802eed9a4ab1/Lib/asyncio/selector_events.py#L572-L573). \r\n\r\nCommand being run: \r\n```\r\ngunicorn <...myapp...> --workers 2 --bind 0.0.0.0:4201 --worker-class uvicorn.workers.UvicornWorker --timeout 15 --graceful-timeout 10 --log-level debug\r\n```\r\n\r\nFull Debug log output:\r\n```\r\n[2020-02-04 17:40:27 -0500] [37792] [DEBUG] Current configuration:\r\n  config: None\r\n  bind: ['0.0.0.0:4201']\r\n  backlog: 2048\r\n  workers: 2\r\n  worker_class: uvicorn.workers.UvicornWorker\r\n  threads: 1\r\n  worker_connections: 1000\r\n  max_requests: 0\r\n  max_requests_jitter: 0\r\n  timeout: 15\r\n  graceful_timeout: 10\r\n  keepalive: 2\r\n  limit_request_line: 4094\r\n  limit_request_fields: 100\r\n  limit_request_field_size: 8190\r\n  reload: False\r\n  reload_engine: auto\r\n  reload_extra_files: []\r\n  spew: False\r\n  check_config: False\r\n  preload_app: False\r\n  sendfile: None\r\n  reuse_port: False\r\n  chdir: <...snip...>\r\n  daemon: False\r\n  raw_env: []\r\n  pidfile: None\r\n  worker_tmp_dir: None\r\n  user: 501\r\n  group: 20\r\n  umask: 0\r\n  initgroups: False\r\n  tmp_upload_dir: None\r\n  secure_scheme_headers: {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}\r\n  forwarded_allow_ips: ['127.0.0.1']\r\n  accesslog: None\r\n  disable_redirect_access_to_syslog: False\r\n  access_log_format: %(h)s %(l)s %(u)s %(t)s \"%(r)s\" %(s)s %(b)s \"%(f)s\" \"%(a)s\"\r\n  errorlog: -\r\n  loglevel: debug\r\n  capture_output: False\r\n  logger_class: gunicorn.glogging.Logger\r\n  logconfig: None\r\n  logconfig_dict: {}\r\n  syslog_addr: unix:///var/run/syslog\r\n  syslog: False\r\n  syslog_prefix: None\r\n  syslog_facility: user\r\n  enable_stdio_inheritance: False\r\n  statsd_host: None\r\n  statsd_prefix:\r\n  proc_name: None\r\n  default_proc_name: <...snip...>\r\n  pythonpath: None\r\n  paste: None\r\n  on_starting: <function OnStarting.on_starting at 0x10b9a2b00>\r\n  on_reload: <function OnReload.on_reload at 0x10b9a2c20>\r\n  when_ready: <function WhenReady.when_ready at 0x10b9a2d40>\r\n  pre_fork: <function Prefork.pre_fork at 0x10b9a2e60>\r\n  post_fork: <function Postfork.post_fork at 0x10b9a2f80>\r\n  post_worker_init: <function PostWorkerInit.post_worker_init at 0x10b9b70e0>\r\n  worker_int: <function WorkerInt.worker_int at 0x10b9b7200>\r\n  worker_abort: <function WorkerAbort.worker_abort at 0x10b9b7320>\r\n  pre_exec: <function PreExec.pre_exec at 0x10b9b7440>\r\n  pre_request: <function PreRequest.pre_request at 0x10b9b7560>\r\n  post_request: <function PostRequest.post_request at 0x10b9b75f0>\r\n  child_exit: <function ChildExit.child_exit at 0x10b9b7710>\r\n  worker_exit: <function WorkerExit.worker_exit at 0x10b9b7830>\r\n  nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x10b9b7950>\r\n  on_exit: <function OnExit.on_exit at 0x10b9b7a70>\r\n  proxy_protocol: False\r\n  proxy_allow_ips: ['127.0.0.1']\r\n  keyfile: None\r\n  certfile: None\r\n  ssl_version: 2\r\n  cert_reqs: 0\r\n  ca_certs: None\r\n  suppress_ragged_eofs: True\r\n  do_handshake_on_connect: False\r\n  ciphers: TLSv1\r\n  raw_paste_global_conf: []\r\n[2020-02-04 17:40:27 -0500] [37792] [INFO] Starting gunicorn 19.9.0\r\n[2020-02-04 17:40:27 -0500] [37792] [DEBUG] Arbiter booted\r\n[2020-02-04 17:40:27 -0500] [37792] [INFO] Listening at: http://0.0.0.0:4201 (37792)\r\n[2020-02-04 17:40:27 -0500] [37792] [INFO] Using worker: uvicorn.workers.UvicornWorker\r\n[2020-02-04 17:40:27 -0500] [37822] [INFO] Booting worker with pid: 37822\r\n[2020-02-04 17:40:27 -0500] [37823] [INFO] Booting worker with pid: 37823\r\n[2020-02-04 17:40:27 -0500] [37792] [DEBUG] 2 workers\r\n[2020-02-04 17:40:29 -0500] [37822] [INFO] Started server process [37822]\r\n[2020-02-04 17:40:29 -0500] [37823] [INFO] Started server process [37823]\r\n[2020-02-04 17:40:29 -0500] [37822] [INFO] Waiting for application startup.\r\n[2020-02-04 17:40:29 -0500] [37823] [INFO] Waiting for application startup.\r\n[2020-02-04 17:40:29 -0500] [37823] [INFO] Application startup complete.\r\n[2020-02-04 17:40:29 -0500] [37822] [INFO] Application startup complete.\r\n[2020-02-04 17:40:31 -0500] [37792] [INFO] Handling signal: term\r\n[2020-02-04 17:40:31 -0500] [37823] [INFO] Shutting down\r\n[2020-02-04 17:40:31 -0500] [37822] [INFO] Shutting down\r\n[2020-02-04 17:40:31 -0500] [37822] [ERROR] Exception in worker process\r\nTraceback (most recent call last):\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\r\n    worker.init_process()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10babc950>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 57, in init_process\r\n    super(UvicornWorker, self).init_process()\r\n          \u2502              \u2514 <uvicorn.workers.UvicornWorker object at 0x10babc950>\r\n          \u2514 <class 'uvicorn.workers.UvicornWorker'>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 134, in init_process\r\n    self.run()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10babc950>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 66, in run\r\n    loop.run_until_complete(server.serve(sockets=self.sockets))\r\n    \u2502                       \u2502                    \u2514 <uvicorn.workers.UvicornWorker object at 0x10babc950>\r\n    \u2502                       \u2514 <uvicorn.main.Server object at 0x10bc03b90>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n           \u2514 <Task finished coro=<Server.serve() done, defined at /Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-pack...\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 403, in serve\r\n    await self.shutdown(sockets=sockets)\r\n          \u2502                     \u2514 [<gunicorn.sock.TCPSocket object at 0x10bc77890>]\r\n          \u2514 <uvicorn.main.Server object at 0x10bc03b90>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 533, in shutdown\r\n    server.close()\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 306, in close\r\n    self._loop._stop_serving(sock)\r\n    \u2502                        \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/selector_events.py\", line 562, in _stop_serving\r\n    self._remove_reader(sock.fileno())\r\n    \u2502                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/sock.py\", line 38, in __getattr__\r\n    return getattr(self.sock, name)\r\n                   \u2502          \u2514 'fileno'\r\n                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\nAttributeError: 'NoneType' object has no attribute 'fileno'\r\n\r\n[2020-02-04 17:40:31 -0500] [37823] [ERROR] Exception in worker process\r\nTraceback (most recent call last):\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\r\n    worker.init_process()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 57, in init_process\r\n    super(UvicornWorker, self).init_process()\r\n          \u2502              \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n          \u2514 <class 'uvicorn.workers.UvicornWorker'>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 134, in init_process\r\n    self.run()\r\n    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/workers.py\", line 66, in run\r\n    loop.run_until_complete(server.serve(sockets=self.sockets))\r\n    \u2502                       \u2502                    \u2514 <uvicorn.workers.UvicornWorker object at 0x10b9f9110>\r\n    \u2502                       \u2514 <uvicorn.main.Server object at 0x10bc80d90>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n           \u2514 <Task finished coro=<Server.serve() done, defined at /Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-pack...\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 403, in serve\r\n    await self.shutdown(sockets=sockets)\r\n          \u2502                     \u2514 [<gunicorn.sock.TCPSocket object at 0x10bc77890>]\r\n          \u2514 <uvicorn.main.Server object at 0x10bc80d90>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/uvicorn/main.py\", line 533, in shutdown\r\n    server.close()\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/base_events.py\", line 306, in close\r\n    self._loop._stop_serving(sock)\r\n    \u2502                        \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <Server sockets=[]>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/lib/python3.7/asyncio/selector_events.py\", line 562, in _stop_serving\r\n    self._remove_reader(sock.fileno())\r\n    \u2502                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\n    \u2514 <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  File \"/Users/wagoodman/.pyenv/versions/3.7.4/envs/venv374/lib/python3.7/site-packages/gunicorn/sock.py\", line 38, in __getattr__\r\n    return getattr(self.sock, name)\r\n                   \u2502          \u2514 'fileno'\r\n                   \u2514 <gunicorn.sock.TCPSocket object at 0x10bc77890>\r\nAttributeError: 'NoneType' object has no attribute 'fileno'\r\n\r\n[2020-02-04 17:40:31 -0500] [37822] [INFO] Worker exiting (pid: 37822)\r\n[2020-02-04 17:40:31 -0500] [37823] [INFO] Worker exiting (pid: 37823)\r\n[2020-02-04 17:40:31 -0500] [37792] [INFO] Shutting down: Master\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/564", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/564/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/564/events", "html_url": "https://github.com/encode/uvicorn/issues/564", "id": 558708557, "node_id": "MDU6SXNzdWU1NTg3MDg1NTc=", "number": 564, "title": "How to redirect from http to https?", "user": {"login": "dulex123", "id": 2333381, "node_id": "MDQ6VXNlcjIzMzMzODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2333381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dulex123", "html_url": "https://github.com/dulex123", "followers_url": "https://api.github.com/users/dulex123/followers", "following_url": "https://api.github.com/users/dulex123/following{/other_user}", "gists_url": "https://api.github.com/users/dulex123/gists{/gist_id}", "starred_url": "https://api.github.com/users/dulex123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dulex123/subscriptions", "organizations_url": "https://api.github.com/users/dulex123/orgs", "repos_url": "https://api.github.com/users/dulex123/repos", "events_url": "https://api.github.com/users/dulex123/events{/privacy}", "received_events_url": "https://api.github.com/users/dulex123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-02T15:00:50Z", "updated_at": "2020-02-02T20:48:51Z", "closed_at": "2020-02-02T20:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a production server which is running on 443 (using starlette framework) and have enabled HTTPSRedirectMiddleware but when i go to http://website.com it doesnt get redirected to https://website.com I guess this is because the server is running on 443 and not 80, so when the request comes in to 80 there is nobody there to handle it. \r\n\r\nIs this possible to do without running two servers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/563", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/563/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/563/events", "html_url": "https://github.com/encode/uvicorn/issues/563", "id": 557599403, "node_id": "MDU6SXNzdWU1NTc1OTk0MDM=", "number": 563, "title": "bad practice in logger", "user": {"login": "dmig-alarstudios", "id": 50368846, "node_id": "MDQ6VXNlcjUwMzY4ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/50368846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmig-alarstudios", "html_url": "https://github.com/dmig-alarstudios", "followers_url": "https://api.github.com/users/dmig-alarstudios/followers", "following_url": "https://api.github.com/users/dmig-alarstudios/following{/other_user}", "gists_url": "https://api.github.com/users/dmig-alarstudios/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmig-alarstudios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmig-alarstudios/subscriptions", "organizations_url": "https://api.github.com/users/dmig-alarstudios/orgs", "repos_url": "https://api.github.com/users/dmig-alarstudios/repos", "events_url": "https://api.github.com/users/dmig-alarstudios/events{/privacy}", "received_events_url": "https://api.github.com/users/dmig-alarstudios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1977050863, "node_id": "MDU6TGFiZWwxOTc3MDUwODYz", "url": "https://api.github.com/repos/encode/uvicorn/labels/refactor", "name": "refactor", "color": "fcc1bd", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-30T16:14:16Z", "updated_at": "2020-05-24T11:03:30Z", "closed_at": "2020-05-24T11:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is bad: https://github.com/encode/uvicorn/blob/be50ca698b0852320a9b48480c60b34320bcdcf0/uvicorn/logging.py#L47-L53\r\n\r\nBetter implement it like this:\r\n```python\r\n        if self.use_colors:\r\n            levelname = self.color_level_name(levelname, record.levelno)\r\n            if \"color_message\" in record.__dict__:\r\n                record.msg = record.__dict__[\"color_message\"]\r\n                record.__dict__[\"message\"] = record.getMessage()\r\n            record.__dict__[\"colorlevelname\"] = levelname  #this might be very useful\r\n        record.__dict__[\"levelprefix\"] = levelname + \":\"\r\n```\r\nand use formatters config:\r\n```python\r\n    \"formatters\": {\r\n        \"default\": {\r\n            \"()\": \"uvicorn.logging.DefaultFormatter\",\r\n            \"fmt\": \"%(levelprefix)-9s %(message)s\",\r\n            \"use_colors\": None,\r\n        },\r\n        \"access\": {\r\n            \"()\": \"uvicorn.logging.AccessFormatter\",\r\n            \"fmt\": '%(levelprefix)-9s %(client_addr)s - \"%(request_line)s\" %(status_code)s',\r\n        },\r\n    },\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/560", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/560/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/560/events", "html_url": "https://github.com/encode/uvicorn/issues/560", "id": 555032145, "node_id": "MDU6SXNzdWU1NTUwMzIxNDU=", "number": 560, "title": "Fix simple typo: seperated -> separated", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-25T02:35:58Z", "updated_at": "2020-01-25T09:14:00Z", "closed_at": "2020-01-25T09:14:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in docs/index.md.\nShould read `separated` rather than `seperated`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/559", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/559/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/559/events", "html_url": "https://github.com/encode/uvicorn/issues/559", "id": 554339385, "node_id": "MDU6SXNzdWU1NTQzMzkzODU=", "number": 559, "title": "uvloop version issue", "user": {"login": "rodneykeeling", "id": 452042, "node_id": "MDQ6VXNlcjQ1MjA0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/452042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodneykeeling", "html_url": "https://github.com/rodneykeeling", "followers_url": "https://api.github.com/users/rodneykeeling/followers", "following_url": "https://api.github.com/users/rodneykeeling/following{/other_user}", "gists_url": "https://api.github.com/users/rodneykeeling/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodneykeeling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodneykeeling/subscriptions", "organizations_url": "https://api.github.com/users/rodneykeeling/orgs", "repos_url": "https://api.github.com/users/rodneykeeling/repos", "events_url": "https://api.github.com/users/rodneykeeling/events{/privacy}", "received_events_url": "https://api.github.com/users/rodneykeeling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T18:51:00Z", "updated_at": "2020-01-23T18:56:55Z", "closed_at": "2020-01-23T18:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter running `pip install uvicorn==0.11.2`, I see that it installs `uvloop==0.14.0` as a dependency. However, when running `uvicorn`, I get this error:\r\n\r\n```\r\n> uvicorn api:app --reload      \r\nTraceback (most recent call last):\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 574, in _build_master\r\n    ws.require(__requires__)\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 892, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 783, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (uvloop 0.14.0 (/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages), Requirement.parse('uvloop==0.12.*'), {'uvicorn'})\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/bin/uvicorn\", line 6, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3088, in <module>\r\n    @_call_aside\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3072, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3101, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 576, in _build_master\r\n    return cls._build_from_requirements(__requires__)\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 589, in _build_from_requirements\r\n    dists = ws.resolve(reqs, Environment())\r\n  File \"/home/rodney/.pyenv/versions/3.7.0/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 778, in resolve\r\n    raise DistributionNotFound(req, requirers)\r\npkg_resources.DistributionNotFound: The 'uvloop==0.12.*' distribution was not found and is required by uvicorn\r\n```\r\n\r\nIt looks like there's still something depending on `uvloop==0.12`?\r\n\r\nHowever, if I `pip uninstall uvloop` and `pip install uvloop==0.12`, I get a dependency error:\r\n```\r\nERROR: uvicorn 0.11.2 has requirement uvloop>=0.14.0; sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"pypy\", but you'll have uvloop 0.12.0 which is incompatible.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/558", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/558/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/558/events", "html_url": "https://github.com/encode/uvicorn/issues/558", "id": 554137793, "node_id": "MDU6SXNzdWU1NTQxMzc3OTM=", "number": 558, "title": "platform_python_implementation in env markers uses lowercase PyPy", "user": {"login": "coderfromhere", "id": 59691490, "node_id": "MDQ6VXNlcjU5NjkxNDkw", "avatar_url": "https://avatars0.githubusercontent.com/u/59691490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coderfromhere", "html_url": "https://github.com/coderfromhere", "followers_url": "https://api.github.com/users/coderfromhere/followers", "following_url": "https://api.github.com/users/coderfromhere/following{/other_user}", "gists_url": "https://api.github.com/users/coderfromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/coderfromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coderfromhere/subscriptions", "organizations_url": "https://api.github.com/users/coderfromhere/orgs", "repos_url": "https://api.github.com/users/coderfromhere/repos", "events_url": "https://api.github.com/users/coderfromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/coderfromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T12:51:07Z", "updated_at": "2020-01-23T17:15:19Z", "closed_at": "2020-01-23T17:15:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nhttps://github.com/encode/uvicorn/blob/13094d9c98510237d8db2cf490130a08873ca491/setup.py#L40\r\n\r\nAFAIK, examples in https://www.python.org/dev/peps/pep-0508/ suggest that the `platform_python_implementation` marker is not case-insensitive and the current `pypy` marker should actually be `PyPy`.\r\n\r\nThis was discovered while resolving https://github.com/nix-community/poetry2nix/issues/43", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/557", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/557/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/557/events", "html_url": "https://github.com/encode/uvicorn/issues/557", "id": 554135079, "node_id": "MDU6SXNzdWU1NTQxMzUwNzk=", "number": 557, "title": "High number of local connections on port 8000", "user": {"login": "uoxiu", "id": 4772240, "node_id": "MDQ6VXNlcjQ3NzIyNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4772240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uoxiu", "html_url": "https://github.com/uoxiu", "followers_url": "https://api.github.com/users/uoxiu/followers", "following_url": "https://api.github.com/users/uoxiu/following{/other_user}", "gists_url": "https://api.github.com/users/uoxiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/uoxiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uoxiu/subscriptions", "organizations_url": "https://api.github.com/users/uoxiu/orgs", "repos_url": "https://api.github.com/users/uoxiu/repos", "events_url": "https://api.github.com/users/uoxiu/events{/privacy}", "received_events_url": "https://api.github.com/users/uoxiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T12:45:32Z", "updated_at": "2020-01-24T09:41:45Z", "closed_at": "2020-01-24T09:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have some memory leak issues in my Django channels project and start to investigate and I saw connection on 127.0.0.1:8000\r\n\r\n![image](https://user-images.githubusercontent.com/4772240/72985566-e7e0c680-3dee-11ea-8be7-1ba8d94f3452.png)\r\n\r\nto my host was connected ~500 users, but locally I have ~900, it's ok? it was a communication between workers or something else? I use socket file to proxy request to uvicorn, I don't expect to see default port of uvicorn open and communication on it. Maybe I set the production server wrong?\r\n\r\nrun command:\r\n```\r\nuvicorn --uds /home/chatservice/run/ws.sock --workers 4 --log-level error config.asgi:application --ws wsproto\r\n```\r\nand a nginx upstream to this socker file\r\n\r\npackage versions: https://gist.github.com/uoxiu/1f358d3792a0369b8eabe062c8f77008\r\n\r\nThank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/554", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/554/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/554/events", "html_url": "https://github.com/encode/uvicorn/issues/554", "id": 552179738, "node_id": "MDU6SXNzdWU1NTIxNzk3Mzg=", "number": 554, "title": "Automatic pushes to conda-forge", "user": {"login": "hingston", "id": 26564456, "node_id": "MDQ6VXNlcjI2NTY0NDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/26564456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hingston", "html_url": "https://github.com/hingston", "followers_url": "https://api.github.com/users/hingston/followers", "following_url": "https://api.github.com/users/hingston/following{/other_user}", "gists_url": "https://api.github.com/users/hingston/gists{/gist_id}", "starred_url": "https://api.github.com/users/hingston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hingston/subscriptions", "organizations_url": "https://api.github.com/users/hingston/orgs", "repos_url": "https://api.github.com/users/hingston/repos", "events_url": "https://api.github.com/users/hingston/events{/privacy}", "received_events_url": "https://api.github.com/users/hingston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-20T09:36:41Z", "updated_at": "2020-01-20T09:50:07Z", "closed_at": "2020-01-20T09:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to set up automatic pushes to conda-forge when new versions of uvicorn are released?\r\n\r\nhttps://conda-forge.org/docs/maintainer/updating_pkgs.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/552", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/552/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/552/events", "html_url": "https://github.com/encode/uvicorn/issues/552", "id": 548976903, "node_id": "MDU6SXNzdWU1NDg5NzY5MDM=", "number": 552, "title": "TypeError: __call__() missing 1 required positional argument: 'start_response'", "user": {"login": "terentjew-alexey", "id": 13602601, "node_id": "MDQ6VXNlcjEzNjAyNjAx", "avatar_url": "https://avatars2.githubusercontent.com/u/13602601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terentjew-alexey", "html_url": "https://github.com/terentjew-alexey", "followers_url": "https://api.github.com/users/terentjew-alexey/followers", "following_url": "https://api.github.com/users/terentjew-alexey/following{/other_user}", "gists_url": "https://api.github.com/users/terentjew-alexey/gists{/gist_id}", "starred_url": "https://api.github.com/users/terentjew-alexey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terentjew-alexey/subscriptions", "organizations_url": "https://api.github.com/users/terentjew-alexey/orgs", "repos_url": "https://api.github.com/users/terentjew-alexey/repos", "events_url": "https://api.github.com/users/terentjew-alexey/events{/privacy}", "received_events_url": "https://api.github.com/users/terentjew-alexey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T14:44:58Z", "updated_at": "2020-05-12T06:15:14Z", "closed_at": "2020-05-12T06:15:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I have a similar problem like [here](https://github.com/encode/uvicorn/issues/483).\r\n\r\nMy development environment is working fine.\r\nPython 3.8, Win 10\r\nDjango 3.0.2, Gunicorn Version 20.0.4, Uvicorn Version: 0.11.1:\r\n`uvicorn config.asgi:application`\r\n\r\nBut on production environment I use docker.\r\nDocker image: python:3.8-alpine\r\nDjango 3.0.2, Gunicorn Version 20.0.4, Uvicorn Version: 0.11.1\r\n`CMD [\"gunicorn\", \"-b\", \"0.0.0.0:8010\", \"--workers\", \"5\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"config.asgi:application\"]`\r\nThe application starts, but when you request any page, the server gives 500:\r\n\r\n> gate      | [2020-01-13 13:47:51 +0000] [9] [ERROR] Exception in ASGI application\r\n> gate      | Traceback (most recent call last):\r\n> gate      |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 385, in run_asgi\r\n> gate      |     result = await app(self.scope, self.receive, self.send)\r\n> gate      |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n> gate      |     return await self.app(scope, receive, send)\r\n> gate      |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/middleware/asgi2.py\", line 6, in __call__\r\n> gate      |     instance = self.app(scope)\r\n> gate      | TypeError: __call__() missing 1 required positional argument: 'start_response'\r\n\r\nI tried to dig deeper, but it's hard for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/549", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/549/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/549/events", "html_url": "https://github.com/encode/uvicorn/issues/549", "id": 548010059, "node_id": "MDU6SXNzdWU1NDgwMTAwNTk=", "number": 549, "title": "[QUESTION]How to specify application path when running uvicorn outside of the application directory.", "user": {"login": "yezyilomo", "id": 20328561, "node_id": "MDQ6VXNlcjIwMzI4NTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/20328561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yezyilomo", "html_url": "https://github.com/yezyilomo", "followers_url": "https://api.github.com/users/yezyilomo/followers", "following_url": "https://api.github.com/users/yezyilomo/following{/other_user}", "gists_url": "https://api.github.com/users/yezyilomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/yezyilomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yezyilomo/subscriptions", "organizations_url": "https://api.github.com/users/yezyilomo/orgs", "repos_url": "https://api.github.com/users/yezyilomo/repos", "events_url": "https://api.github.com/users/yezyilomo/events{/privacy}", "received_events_url": "https://api.github.com/users/yezyilomo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-10T10:53:25Z", "updated_at": "2020-06-09T10:36:34Z", "closed_at": "2020-06-09T10:36:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I thought there would be an option like `--chdir` in Gunicorn but I didn't find one on the documentation, at first I thought that's what `--root-path` option is used for, turns out I was wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/548", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/548/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/548/events", "html_url": "https://github.com/encode/uvicorn/issues/548", "id": 547864826, "node_id": "MDU6SXNzdWU1NDc4NjQ4MjY=", "number": 548, "title": "[QUESTION] interplay with multiprocessing", "user": {"login": "ananis25", "id": 16446513, "node_id": "MDQ6VXNlcjE2NDQ2NTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/16446513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ananis25", "html_url": "https://github.com/ananis25", "followers_url": "https://api.github.com/users/ananis25/followers", "following_url": "https://api.github.com/users/ananis25/following{/other_user}", "gists_url": "https://api.github.com/users/ananis25/gists{/gist_id}", "starred_url": "https://api.github.com/users/ananis25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ananis25/subscriptions", "organizations_url": "https://api.github.com/users/ananis25/orgs", "repos_url": "https://api.github.com/users/ananis25/repos", "events_url": "https://api.github.com/users/ananis25/events{/privacy}", "received_events_url": "https://api.github.com/users/ananis25/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-10T04:53:03Z", "updated_at": "2020-02-17T10:11:33Z", "closed_at": "2020-02-17T10:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI'm trying to run parallel tasks with a timeout per task (using multiprocessing) inside an API method. On trying to terminate the child processes post the time limit, the server process shuts down and disconnects.\r\n\r\n### To Reproduce\r\n\r\n1. Create a file: `repro.py`\r\n\r\n```Python\r\nimport os\r\nimport time\r\nimport uvicorn\r\nfrom concurrent.futures import ProcessPoolExecutor\r\n\r\n\r\ndef simple_routine(sleep_for):\r\n    print(f\"PID {os.getpid()} has sleep time: {sleep_for}\")\r\n    time.sleep(sleep_for)\r\n    return \"done\"\r\n\r\n\r\ndef test_endpoint():\r\n    print(f\"main process: {os.getpid()}\")\r\n\r\n    START_TIME = time.time()\r\n    with ProcessPoolExecutor(max_workers=2) as pool:\r\n        futures = [\r\n            pool.submit(simple_routine, 1), \r\n            pool.submit(simple_routine, 10), \r\n        ]\r\n\r\n        results = []\r\n        for fut in futures:\r\n            try:\r\n                results.append(fut.result(timeout=2))\r\n            except:\r\n                results.append(\"not done\")\r\n\r\n       # terminate the processes which are still running\r\n        for pid, proc in pool._processes.items():\r\n            print(\"terminating pid \", pid)\r\n            proc.terminate()\r\n    \r\n    print(\"exiting at: \", int(time.time() - START_TIME))\r\n    return True\r\n\r\n\r\nasync def app(scope, receive, send):\r\n    await send({\r\n        'type': 'http.response.start',\r\n        'status': 200,\r\n        'headers': [\r\n            [b'content-type', b'text/plain'],\r\n        ]\r\n    })\r\n    \r\n    test_endpoint()\r\n    \r\n    await send({\r\n        'type': 'http.response.body',\r\n        'body': b'Hello, world!',\r\n    })\r\n\r\n\r\nif __name__==\"__main__\":\r\n    uvicorn.run(app, host=\"0.0.0.0\", port=5000)\r\n```\r\n\r\n2. Run it as `python repro.py`.\r\n3. Open another python interpreter and make this web request.\r\n```Python\r\nimport requests\r\nfor _ in range(20):\r\n    print(requests.get(\"http://localhost:5000/\").text)\r\n```\r\n4. The server process shuts down after the first request.\r\n\r\n### Expected behavior\r\nWe start 2 processes one of which exceeds the time limit after which we try terminate it. The server shouldn't shut down and continue serving requests. Interestingly, the server doesn't actually exit until the long running process is complete.\r\n\r\n```Python\r\nINFO:     Started server process [7041]\r\nINFO:     Uvicorn running on http://0.0.0.0:5000 (Press CTRL+C to quit)\r\nINFO:     Waiting for application startup.\r\nINFO:     ASGI 'lifespan' protocol appears unsupported.\r\nINFO:     Application startup complete.\r\nINFO:     127.0.0.1:44954 - \"GET / HTTP/1.1\" 200 OK\r\nmain process: 7041\r\nPID 7060 has sleep time: 1\r\nPID 7061 has sleep time: 10\r\nterminating pid  7060\r\nterminating pid  7061\r\nexiting at:  10\r\nINFO:     Shutting down\r\nINFO:     Finished server process [7041]\r\n```\r\n\r\nWith Flask, the behavior of an identical app is as expected.\r\n```Python\r\nmain process: 1015\r\nPID 1035 has run time: 1\r\nPID 1039 has run time: 1\r\nPID 1038 has run time: 10\r\nterminating pid  1035\r\nterminating pid  1038\r\nterminating pid  1039\r\nexiting at:  2\r\n\r\n127.0.0.1 - - [09/Jan/2020 08:51:37] \"POST /test-endpoint HTTP/1.1\" 200 -\r\n```\r\n\r\n### Environment\r\n- OS: [Ubuntu 18.04.1 LTS]\r\n- Uvicorn Version: 0.11.1\r\n- Python version: 3.6.8\r\n\r\n### Additional context\r\nThis came up while trying to port a WSGI application to FastAPI - [link](https://github.com/tiangolo/fastapi/issues/841). On suggestion of @dmontagu, I tried to reproduce it with starlette and just uvicorn and saw that the error persists.\r\n\r\nHypercorn shows similar behavior in that the application shuts down after serving the first request. So, the issue likely has something to do with how async servers manage processes? Could you please point to where I might look to solve this?\r\n\r\nThank you for looking.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/547", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/547/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/547/events", "html_url": "https://github.com/encode/uvicorn/issues/547", "id": 546417993, "node_id": "MDU6SXNzdWU1NDY0MTc5OTM=", "number": 547, "title": "Cryptic Traceback printed every few minutes", "user": {"login": "2m", "id": 422086, "node_id": "MDQ6VXNlcjQyMjA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/422086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2m", "html_url": "https://github.com/2m", "followers_url": "https://api.github.com/users/2m/followers", "following_url": "https://api.github.com/users/2m/following{/other_user}", "gists_url": "https://api.github.com/users/2m/gists{/gist_id}", "starred_url": "https://api.github.com/users/2m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2m/subscriptions", "organizations_url": "https://api.github.com/users/2m/orgs", "repos_url": "https://api.github.com/users/2m/repos", "events_url": "https://api.github.com/users/2m/events{/privacy}", "received_events_url": "https://api.github.com/users/2m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T17:42:19Z", "updated_at": "2020-02-13T21:50:08Z", "closed_at": "2020-02-13T21:50:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are seeing this traceback every five minutes.\r\n```\r\nTraceback (most recent call last): File \"/usr/local/bin/uvicorn\", line 8, in <module> sys.exit(main()) File \"/usr/local/lib/python3.8/site-packages/click/core.py\", line 764, in __call__ return self.main(*args, **kwargs) File \"/usr/local/lib/python3.8/site-packages/click/core.py\", line 717, in main rv = self.invoke(ctx) File \"/usr/local/lib/python3.8/site-packages/click/core.py\", line 956, in invoke return ctx.invoke(self.callback, **ctx.params) File \"/usr/local/lib/python3.8/site-packages/click/core.py\", line 555, in invoke return callback(*args, **kwargs) File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 323, in main run(**kwargs) File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 346, in run server.run() File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 374, in run loop.run_until_complete(self.serve(sockets=sockets)) File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 381, in serve\r\n```\r\n\r\nHowever the process is not being restarted.\r\n\r\nThe message is a bit cryptic, as I can not see what is the exception that is being thrown.\r\n\r\nWe are running the latest uvicorn `0.11.1` to serve Django `3.0.2` app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/544", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/544/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/544/events", "html_url": "https://github.com/encode/uvicorn/issues/544", "id": 545276186, "node_id": "MDU6SXNzdWU1NDUyNzYxODY=", "number": 544, "title": "UvicornWorker ignores backlog configuration of Gunicorn", "user": {"login": "aviramha", "id": 41201924, "node_id": "MDQ6VXNlcjQxMjAxOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/41201924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviramha", "html_url": "https://github.com/aviramha", "followers_url": "https://api.github.com/users/aviramha/followers", "following_url": "https://api.github.com/users/aviramha/following{/other_user}", "gists_url": "https://api.github.com/users/aviramha/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviramha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviramha/subscriptions", "organizations_url": "https://api.github.com/users/aviramha/orgs", "repos_url": "https://api.github.com/users/aviramha/repos", "events_url": "https://api.github.com/users/aviramha/events{/privacy}", "received_events_url": "https://api.github.com/users/aviramha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-04T11:52:39Z", "updated_at": "2020-01-06T14:30:38Z", "closed_at": "2020-01-06T14:30:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When stress testing my application I found out that UvicornWorker ignores the backlog configuration of Gunicorn.\r\nMy guess it happens on create_server (where it should pass the backlog argument, but doesn't)\r\nTo reproduce:\r\n`gunicorn app:app -k uvicorn.workers.UvicornWorker --backlog 100000 --log-level=debug`\r\n\r\nThen run `ss -a | grep gunicorn`\r\nSend-Q value will be 100 (default backlog value) instead of the given.\r\nI'll submit a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/541", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/541/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/541/events", "html_url": "https://github.com/encode/uvicorn/issues/541", "id": 542729947, "node_id": "MDU6SXNzdWU1NDI3Mjk5NDc=", "number": 541, "title": "How do I run multiple servers gracefully in my code", "user": {"login": "whg517", "id": 21030747, "node_id": "MDQ6VXNlcjIxMDMwNzQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/21030747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whg517", "html_url": "https://github.com/whg517", "followers_url": "https://api.github.com/users/whg517/followers", "following_url": "https://api.github.com/users/whg517/following{/other_user}", "gists_url": "https://api.github.com/users/whg517/gists{/gist_id}", "starred_url": "https://api.github.com/users/whg517/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whg517/subscriptions", "organizations_url": "https://api.github.com/users/whg517/orgs", "repos_url": "https://api.github.com/users/whg517/repos", "events_url": "https://api.github.com/users/whg517/events{/privacy}", "received_events_url": "https://api.github.com/users/whg517/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-27T03:31:50Z", "updated_at": "2020-03-20T08:45:40Z", "closed_at": "2020-03-20T08:45:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When my program was not developed as a web project, the web functionality was a submodule of the project. When multiple servers may need to be started in a project, such as server 1 using port 8080 for the rest API and server 2 using port 9090 for other things. Then my program controls the start of the loop.\r\n\r\nHowever, I found that my code would not be executed after running `uvicorn.run` , and I could not arrange my tasks to the loop well.\r\n\r\nIs there any elegant way to do it? I tried the following operations, but none of them could be solved well.\r\n\r\n**1**\r\n\r\n```\r\nimport uvicorn\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\n\r\nasync def app(scope, receive, send):\r\n    ...\r\n\r\n\r\ndef s1():\r\n    uvicorn.run(\"ttt:app\", host=\"127.0.0.1\", port=5005, log_level=\"info\", loop='auto')\r\n\r\n\r\ndef s2():\r\n    uvicorn.run(\"ttt:app\", host=\"127.0.0.1\", port=5006, log_level=\"info\", loop='auto')\r\n\r\n\r\nasync def main():\r\n    loop.call_soon(s1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop.create_task(main())\r\n    loop.run_forever()\r\n```\r\nIt causes the following exception\r\n\r\n```\r\n/home/kevin/.virtualenvs/fastapi-7yP_jChR/bin/python /home/kevin/workspaces/develop/git/fastapi/ttt.py\r\nERROR:    Exception in callback s1() at /home/kevin/workspaces/develop/git/fastapi/ttt.py:12\r\nhandle: <Handle s1() at /home/kevin/workspaces/develop/git/fastapi/ttt.py:12>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n    self._callback(*self._args)\r\n  File \"/home/kevin/workspaces/develop/git/fastapi/ttt.py\", line 13, in s1\r\n    uvicorn.run(\"ttt:app\", host=\"127.0.0.1\", port=5005, log_level=\"info\", loop='auto')\r\n  File \"/home/kevin/.virtualenvs/fastapi-7yP_jChR/lib/python3.6/site-packages/uvicorn/main.py\", line 346, in run\r\n    server.run()\r\n  File \"/home/kevin/.virtualenvs/fastapi-7yP_jChR/lib/python3.6/site-packages/uvicorn/main.py\", line 374, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 471, in run_until_complete\r\n    self.run_forever()\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 425, in run_forever\r\n    raise RuntimeError('This event loop is already running')\r\nRuntimeError: This event loop is already running\r\nINFO:     Started server process [19452]\r\nINFO:     Uvicorn running on http://127.0.0.1:5005 (Press CTRL+C to quit)\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Shutting down\r\nINFO:     Waiting for application shutdown.\r\nINFO:     Application shutdown complete.\r\nINFO:     Finished server process [19452]\r\n```\r\n\r\n**2**\r\n\r\n```\r\nimport asyncio\r\n\r\nimport uvicorn\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\n\r\nasync def app(scope, receive, send):\r\n    ...\r\n\r\n\r\ndef s1():\r\n    uvicorn.run(\"ttt:app\", host=\"127.0.0.1\", port=5005, log_level=\"info\", loop='auto')\r\n\r\n\r\nasync def main():\r\n    loop.run_in_executor(None, s1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    loop.create_task(main())\r\n    loop.run_forever()\r\n```\r\n\r\nWhen I tried to run in a process, I found that I could not pass in the current loop because of the initialization loop in [`Config`](https://github.com/encode/uvicorn/blob/13094d9c98510237d8db2cf490130a08873ca491/uvicorn/config.py#L319).\r\n\r\nAnd, output:\r\n\r\n```\r\n/home/kevin/.virtualenvs/fastapi-7yP_jChR/bin/python /home/kevin/workspaces/develop/git/fastapi/ttt.py\r\nERROR:    Future exception was never retrieved\r\nfuture: <Future finished exception=RuntimeError(\"There is no current event loop in thread 'ThreadPoolExecutor-0_0'.\",)>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/home/kevin/workspaces/develop/git/fastapi/ttt.py\", line 13, in s1\r\n    uvicorn.run(\"ttt:app\", host=\"127.0.0.1\", port=5005, log_level=\"info\", loop='auto')\r\n  File \"/home/kevin/.virtualenvs/fastapi-7yP_jChR/lib/python3.6/site-packages/uvicorn/main.py\", line 346, in run\r\n    server.run()\r\n  File \"/home/kevin/.virtualenvs/fastapi-7yP_jChR/lib/python3.6/site-packages/uvicorn/main.py\", line 373, in run\r\n    loop = asyncio.get_event_loop()\r\n  File \"/usr/local/lib/python3.6/asyncio/events.py\", line 694, in get_event_loop\r\n    return get_event_loop_policy().get_event_loop()\r\n  File \"/usr/local/lib/python3.6/asyncio/events.py\", line 602, in get_event_loop\r\n    % threading.current_thread().name)\r\nRuntimeError: There is no current event loop in thread 'ThreadPoolExecutor-0_0'.\r\nTraceback (most recent call last):\r\n  File \"/home/kevin/workspaces/develop/git/fastapi/ttt.py\", line 22, in <module>\r\n    loop.run_forever()\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 438, in run_forever\r\n    self._run_once()\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 1415, in _run_once\r\n    event_list = self._selector.select(timeout)\r\n  File \"/usr/local/lib/python3.6/selectors.py\", line 445, in select\r\n    fd_event_list = self._epoll.poll(timeout, max_ev)\r\nKeyboardInterrupt\r\n```\r\n\r\n---\r\n\r\nMy idea is that you can create multiple servers using twisted.\r\n\r\nIs there any good operation or writing method? thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/530", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/530/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/530/events", "html_url": "https://github.com/encode/uvicorn/issues/530", "id": 540207302, "node_id": "MDU6SXNzdWU1NDAyMDczMDI=", "number": 530, "title": "Correctly output selected port if port=0", "user": {"login": "simonw", "id": 9599, "node_id": "MDQ6VXNlcjk1OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonw", "html_url": "https://github.com/simonw", "followers_url": "https://api.github.com/users/simonw/followers", "following_url": "https://api.github.com/users/simonw/following{/other_user}", "gists_url": "https://api.github.com/users/simonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonw/subscriptions", "organizations_url": "https://api.github.com/users/simonw/orgs", "repos_url": "https://api.github.com/users/simonw/repos", "events_url": "https://api.github.com/users/simonw/events{/privacy}", "received_events_url": "https://api.github.com/users/simonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-19T10:02:34Z", "updated_at": "2019-12-19T15:33:03Z", "closed_at": "2019-12-19T15:33:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you run Uvicorn with `port=0`, it selects an unused port (as [it should](https://www.lifewire.com/port-0-in-tcp-and-udp-818145)). But... it logs the incorrect URL:\r\n\r\n```\r\n$ datasette --memory -p 0\r\nServe! files=() (immutables=()) on port 0\r\nINFO:     Started server process [28673]\r\nINFO:     Uvicorn running on http://127.0.0.1:0 (Press CTRL+C to quit)\r\n```\r\n\r\nIt should output the selected port in that message instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/529", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/529/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/529/events", "html_url": "https://github.com/encode/uvicorn/issues/529", "id": 539607085, "node_id": "MDU6SXNzdWU1Mzk2MDcwODU=", "number": 529, "title": "uvicorn reload fails on Windows and Python 3.8", "user": {"login": "f0ff886f", "id": 528239, "node_id": "MDQ6VXNlcjUyODIzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/528239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0ff886f", "html_url": "https://github.com/f0ff886f", "followers_url": "https://api.github.com/users/f0ff886f/followers", "following_url": "https://api.github.com/users/f0ff886f/following{/other_user}", "gists_url": "https://api.github.com/users/f0ff886f/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0ff886f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0ff886f/subscriptions", "organizations_url": "https://api.github.com/users/f0ff886f/orgs", "repos_url": "https://api.github.com/users/f0ff886f/repos", "events_url": "https://api.github.com/users/f0ff886f/events{/privacy}", "received_events_url": "https://api.github.com/users/f0ff886f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-18T10:56:15Z", "updated_at": "2019-12-20T11:11:16Z", "closed_at": "2019-12-20T11:11:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know this was referred to in #477 and #509 but it still isn't solved (making a new issue as I hijacked a closed one before).\r\n\r\nUsing uvicorn checked out 996aa2d, running with or without `--loop asyncio` changes nothing (that code was removed):\r\n\r\n```\r\nERROR:    Accept failed on a socket\r\nsocket: <asyncio.TransportSocket fd=764, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 8000)>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\f\\scoop\\apps\\python\\current\\lib\\asyncio\\proactor_events.py\", line 817, in loop\r\n    f = self._proactor.accept(sock)\r\n  File \"C:\\Users\\f\\scoop\\apps\\python\\current\\lib\\asyncio\\windows_events.py\", line 545, in accept\r\n    self._register_with_iocp(listener)\r\n  File \"C:\\Users\\f\\scoop\\apps\\python\\current\\lib\\asyncio\\windows_events.py\", line 714, in _register_with_iocp\r\n    _overlapped.CreateIoCompletionPort(obj.fileno(), self._iocp, 0, 0)\r\nOSError: [WinError 87] The parameter is incorrect\r\n```\r\n\r\n```\r\nPython 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)] on win32\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/528", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/528/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/528/events", "html_url": "https://github.com/encode/uvicorn/issues/528", "id": 539376247, "node_id": "MDU6SXNzdWU1MzkzNzYyNDc=", "number": 528, "title": "Add support for --reload to monitor additional file types.", "user": {"login": "sprousewd", "id": 20233735, "node_id": "MDQ6VXNlcjIwMjMzNzM1", "avatar_url": "https://avatars0.githubusercontent.com/u/20233735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprousewd", "html_url": "https://github.com/sprousewd", "followers_url": "https://api.github.com/users/sprousewd/followers", "following_url": "https://api.github.com/users/sprousewd/following{/other_user}", "gists_url": "https://api.github.com/users/sprousewd/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprousewd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprousewd/subscriptions", "organizations_url": "https://api.github.com/users/sprousewd/orgs", "repos_url": "https://api.github.com/users/sprousewd/repos", "events_url": "https://api.github.com/users/sprousewd/events{/privacy}", "received_events_url": "https://api.github.com/users/sprousewd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T00:03:19Z", "updated_at": "2020-05-29T06:46:58Z", "closed_at": "2020-04-22T09:23:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"reload\" process currently only monitors \".py\" files in various directories. I have a changes that will pass in a list of additional \"reload_suffixes\" that the process will monitor. This allows the service to monitor data files in addition to code files.\r\n\r\nAny feedback on whether this is useful to others?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/524", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/524/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/524/events", "html_url": "https://github.com/encode/uvicorn/issues/524", "id": 537358921, "node_id": "MDU6SXNzdWU1MzczNTg5MjE=", "number": 524, "title": "Serving static files like nginx", "user": {"login": "rexzhang", "id": 238707, "node_id": "MDQ6VXNlcjIzODcwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/238707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rexzhang", "html_url": "https://github.com/rexzhang", "followers_url": "https://api.github.com/users/rexzhang/followers", "following_url": "https://api.github.com/users/rexzhang/following{/other_user}", "gists_url": "https://api.github.com/users/rexzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rexzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rexzhang/subscriptions", "organizations_url": "https://api.github.com/users/rexzhang/orgs", "repos_url": "https://api.github.com/users/rexzhang/repos", "events_url": "https://api.github.com/users/rexzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/rexzhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-13T05:39:39Z", "updated_at": "2019-12-13T11:00:44Z", "closed_at": "2019-12-13T11:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "some scene, like in the heroku or docker container; nginx is not option or not necesay. maybe ASGI implement direct serving static file is better solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/523", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/523/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/523/events", "html_url": "https://github.com/encode/uvicorn/issues/523", "id": 537331467, "node_id": "MDU6SXNzdWU1MzczMzE0Njc=", "number": 523, "title": "access log show nothing when using file config", "user": {"login": "flavone", "id": 5829619, "node_id": "MDQ6VXNlcjU4Mjk2MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5829619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flavone", "html_url": "https://github.com/flavone", "followers_url": "https://api.github.com/users/flavone/followers", "following_url": "https://api.github.com/users/flavone/following{/other_user}", "gists_url": "https://api.github.com/users/flavone/gists{/gist_id}", "starred_url": "https://api.github.com/users/flavone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flavone/subscriptions", "organizations_url": "https://api.github.com/users/flavone/orgs", "repos_url": "https://api.github.com/users/flavone/repos", "events_url": "https://api.github.com/users/flavone/events{/privacy}", "received_events_url": "https://api.github.com/users/flavone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T03:39:30Z", "updated_at": "2020-05-04T15:37:13Z", "closed_at": "2020-05-04T15:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "h11_impl.py line 361 self.access_logger = logger should be  self.access_logger = access_logger", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/516", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/516/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/516/events", "html_url": "https://github.com/encode/uvicorn/issues/516", "id": 535388982, "node_id": "MDU6SXNzdWU1MzUzODg5ODI=", "number": 516, "title": "Uvicorn runs app from system interpreter rather than virtual environment", "user": {"login": "intrepidOlivia", "id": 3474569, "node_id": "MDQ6VXNlcjM0NzQ1Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3474569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intrepidOlivia", "html_url": "https://github.com/intrepidOlivia", "followers_url": "https://api.github.com/users/intrepidOlivia/followers", "following_url": "https://api.github.com/users/intrepidOlivia/following{/other_user}", "gists_url": "https://api.github.com/users/intrepidOlivia/gists{/gist_id}", "starred_url": "https://api.github.com/users/intrepidOlivia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intrepidOlivia/subscriptions", "organizations_url": "https://api.github.com/users/intrepidOlivia/orgs", "repos_url": "https://api.github.com/users/intrepidOlivia/repos", "events_url": "https://api.github.com/users/intrepidOlivia/events{/privacy}", "received_events_url": "https://api.github.com/users/intrepidOlivia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-09T23:00:31Z", "updated_at": "2019-12-11T16:27:47Z", "closed_at": "2019-12-10T11:44:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows 10: I have found that when I run an app that starts the uvicorn.run process, the new process executes from my system's Python install rather than the virtual environment I set up and ran the script from initially. Is this expected behavior? I've reproduced it on two Windows machines, and it seems to be the cause of some import issues I've been having.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/511", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/511/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/511/events", "html_url": "https://github.com/encode/uvicorn/issues/511", "id": 532914770, "node_id": "MDU6SXNzdWU1MzI5MTQ3NzA=", "number": 511, "title": "[BUG] Using --log-config disables uvicorn loggers", "user": {"login": "petermorrow", "id": 9690235, "node_id": "MDQ6VXNlcjk2OTAyMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9690235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petermorrow", "html_url": "https://github.com/petermorrow", "followers_url": "https://api.github.com/users/petermorrow/followers", "following_url": "https://api.github.com/users/petermorrow/following{/other_user}", "gists_url": "https://api.github.com/users/petermorrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/petermorrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petermorrow/subscriptions", "organizations_url": "https://api.github.com/users/petermorrow/orgs", "repos_url": "https://api.github.com/users/petermorrow/repos", "events_url": "https://api.github.com/users/petermorrow/events{/privacy}", "received_events_url": "https://api.github.com/users/petermorrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-12-04T20:25:11Z", "updated_at": "2020-08-17T15:01:10Z", "closed_at": "2020-08-11T16:40:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Summary\r\n\r\nUvicorn logs are disabled when starting a uvicorn server process with a custom `--log-config` file.\r\n\r\n### Steps to Reproduce\r\n\r\n**`logging_config.ini`**\r\n```\r\n[loggers]\r\nkeys=root\r\n\r\n[handlers]\r\nkeys=h\r\n\r\n[formatters]\r\nkeys=f\r\n\r\n[logger_root]\r\nlevel=INFO\r\nhandlers=h\r\n\r\n[handler_h]\r\nclass=StreamHandler\r\nlevel=INFO\r\nformatter=f\r\nargs=(sys.stderr,)\r\n\r\n[formatter_f]\r\nformat=%(asctime)s %(name)s %(levelname)-4s %(message)s\r\n```\r\n\r\n**`scratch_fastapi.py`**\r\n```\r\nimport logging\r\nfrom fastapi import FastAPI\r\n\r\nlogger = logging.getLogger(__name__)\r\napp = FastAPI()\r\n\r\n@app.on_event(\"startup\")\r\nasync def startup():\r\n    logger.warning('Raising an exception on startup')\r\n    raise Exception(\"Nope!\")\r\n```\r\n\r\n#### Run without `--log-config`\r\n\r\n```\r\nuvicorn scratch_fastapi:app\r\n```\r\n```\r\nINFO:     Started server process [7448]\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nINFO:     Waiting for application startup.\r\nWARNING:  Raising an exception on startup\r\nERROR:    Traceback (most recent call last):\r\n  File \"/Users/peter/.virtualenvs/JR/lib/python3.7/site-packages/starlette/routing.py\", line 473, in __call__\r\n    await self.startup()\r\n  File \"/Users/peter/.virtualenvs/JR/lib/python3.7/site-packages/starlette/routing.py\", line 457, in startup\r\n    await handler()\r\n  File \"./scratch_fastapi.py\", line 10, in startup\r\n    raise Exception(\"Nope!\")\r\nException: Nope!\r\n\r\nERROR:    Application startup failed. Exiting.\r\n```\r\n\r\n#### Run with `--log-config`\r\n```\r\nuvicorn scratch_fastapi:app --log-config=logging_config.ini\r\n```\r\n```\r\n2019-12-04 11:56:43,681 scratch_fastapi WARNING Raising an exception on startup\r\n```\r\n\r\nNotice that all the logs from uvicorn are gone.\r\n\r\n### Expected Behavior\r\n\r\nThe existing uvicorn logger is not disabled.\r\n\r\n### System Information\r\n\r\nOS: MacOS Mojave\r\nPython: 3.7.5\r\nUvicorn version: uvicorn==0.10.8\r\n\r\nPip freeze output for full dependencies list:\r\n```\r\nClick==7.0\r\ndnspython==1.16.0\r\nemail-validator==1.0.5\r\nfastapi==0.44.0\r\nh11==0.8.1\r\nhttptools==0.0.13\r\nidna==2.8\r\npydantic==1.2\r\nstarlette==0.12.9\r\nuvicorn==0.10.8\r\nuvloop==0.14.0\r\nwebsockets==8.1\r\n```\r\n\r\n### Fix\r\n\r\nI have a simple fix [here](https://github.com/petermorrow/uvicorn/tree/bug/fixes-log-config-disables-logger) that I'll follow up with a PR for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/509", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/509/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/509/events", "html_url": "https://github.com/encode/uvicorn/issues/509", "id": 532200185, "node_id": "MDU6SXNzdWU1MzIyMDAxODU=", "number": 509, "title": "--reload not working on Windows but --loop asyncio is", "user": {"login": "BramVanroy", "id": 2779410, "node_id": "MDQ6VXNlcjI3Nzk0MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2779410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BramVanroy", "html_url": "https://github.com/BramVanroy", "followers_url": "https://api.github.com/users/BramVanroy/followers", "following_url": "https://api.github.com/users/BramVanroy/following{/other_user}", "gists_url": "https://api.github.com/users/BramVanroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/BramVanroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BramVanroy/subscriptions", "organizations_url": "https://api.github.com/users/BramVanroy/orgs", "repos_url": "https://api.github.com/users/BramVanroy/repos", "events_url": "https://api.github.com/users/BramVanroy/events{/privacy}", "received_events_url": "https://api.github.com/users/BramVanroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T19:07:06Z", "updated_at": "2019-12-17T15:36:21Z", "closed_at": "2019-12-09T12:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Duplicate of https://github.com/encode/uvicorn/issues/477 but per request a new topic to track the issue. Especially useful since `--loop asyncio` does seem to work just fine.\r\n\r\n@tomchristie suggests to default to asyncio on all platforms. I can make a PR for that. Do you still want to keep the optional uvloop dependency? (It's incompatible with Windows in any case, so perhaps it should be removed from the requirements file at least.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/506", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/506/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/506/events", "html_url": "https://github.com/encode/uvicorn/issues/506", "id": 531569615, "node_id": "MDU6SXNzdWU1MzE1Njk2MTU=", "number": 506, "title": "Running uvicorn on a separate thread", "user": {"login": "Pedrozena", "id": 17067010, "node_id": "MDQ6VXNlcjE3MDY3MDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/17067010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pedrozena", "html_url": "https://github.com/Pedrozena", "followers_url": "https://api.github.com/users/Pedrozena/followers", "following_url": "https://api.github.com/users/Pedrozena/following{/other_user}", "gists_url": "https://api.github.com/users/Pedrozena/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pedrozena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pedrozena/subscriptions", "organizations_url": "https://api.github.com/users/Pedrozena/orgs", "repos_url": "https://api.github.com/users/Pedrozena/repos", "events_url": "https://api.github.com/users/Pedrozena/events{/privacy}", "received_events_url": "https://api.github.com/users/Pedrozena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-02T22:06:16Z", "updated_at": "2020-03-18T08:05:14Z", "closed_at": "2019-12-03T09:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nI'm building a microservice that needs to handle both http-API and message-like (amqp) connection.\r\nFor this reason, I need, at least, two thread running simultaneously: One for the messaging loop and the second for the api.\r\nI tried all the loops available from the `loop `interface without success:\r\n-asyncio ends in the following exception: `RuntimeError('set_wakeup_fd only works in main thread')`\r\n-uvloop with `RuntimeError(\"There is no current event loop in thread 'Thread-6'.\")`\r\nI then tried to manually create a new event loop in the thread calling uvicorn.run, but I get the same results.\r\nWould it be possible to manually set the event loop object used by uvicorn?\r\n\r\n```\r\nfrom fastapi import FastAPI\r\nimport uvicorn\r\nimport sys\r\nimport threading\r\nimport logging\r\nimport uvloop\r\nimport asyncio\r\n\r\ncust_logger = logging.getLogger(\"ms\")\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/{method}/{param}\")\r\nasync def f(method):\r\n    return {\"method\": method}\r\n\r\n\r\nclass HttpRest:\r\n    def __init__(self, comp, settings):\r\n        self.comp = comp\r\n        self.host = settings['host']\r\n        self.port = settings['port']\r\n        self.lifespan = 'on'\r\n\r\n    def StartLoop(self, blocking=False):\r\n        def fn(loop):\r\n            asyncio.set_event_loop(loop)\r\n            module_name = vars(sys.modules[__name__])['__package__']\r\n            try:\r\n                uvicorn.run(module_name+\":app\", host=self.host, port=self.port, access_log=False, log_level='critical', \r\n                    loop='uvloop', lifespan=self.lifespan)\r\n            except RuntimeError as s:\r\n                cust_logger.error(\"HttpApi server shut down\")\r\n        if not blocking:\r\n            loop = uvloop.new_event_loop()\r\n            self.threadedServer = threading.Thread(target=fn, args=(loop,))\r\n            self.threadedServer.start()\r\n        else:\r\n            fn()\r\n    \r\n    def StopLoop(self):\r\n        self.lifespan = 'off'\r\n\t\t\r\n-----\t\t\r\n\t\t\r\nms = HttpRest(settings)\r\nms.StartLoop()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/505", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/505/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/505/events", "html_url": "https://github.com/encode/uvicorn/issues/505", "id": 530788717, "node_id": "MDU6SXNzdWU1MzA3ODg3MTc=", "number": 505, "title": "FORWARDED_ALLOW_IPS cannot be loaded from ENV", "user": {"login": "tomasbedrich", "id": 4974343, "node_id": "MDQ6VXNlcjQ5NzQzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4974343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbedrich", "html_url": "https://github.com/tomasbedrich", "followers_url": "https://api.github.com/users/tomasbedrich/followers", "following_url": "https://api.github.com/users/tomasbedrich/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbedrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbedrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbedrich/subscriptions", "organizations_url": "https://api.github.com/users/tomasbedrich/orgs", "repos_url": "https://api.github.com/users/tomasbedrich/repos", "events_url": "https://api.github.com/users/tomasbedrich/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbedrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T20:18:34Z", "updated_at": "2019-12-09T12:26:24Z", "closed_at": "2019-12-09T12:26:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following two lines together makes impossible to read `FORWARDED_ALLOW_IPS` from env variable.\r\n\r\nhttps://github.com/encode/uvicorn/blob/4da64be4335ba50e43d7ac8c3b5535460a9c1594/uvicorn/config.py#L160\r\nhttps://github.com/encode/uvicorn/blob/4da64be4335ba50e43d7ac8c3b5535460a9c1594/uvicorn/config.py#L193", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/501", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/501/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/501/events", "html_url": "https://github.com/encode/uvicorn/issues/501", "id": 528211939, "node_id": "MDU6SXNzdWU1MjgyMTE5Mzk=", "number": 501, "title": "Closed connections don't cancel tasks", "user": {"login": "Xowap", "id": 182992, "node_id": "MDQ6VXNlcjE4Mjk5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/182992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xowap", "html_url": "https://github.com/Xowap", "followers_url": "https://api.github.com/users/Xowap/followers", "following_url": "https://api.github.com/users/Xowap/following{/other_user}", "gists_url": "https://api.github.com/users/Xowap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xowap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xowap/subscriptions", "organizations_url": "https://api.github.com/users/Xowap/orgs", "repos_url": "https://api.github.com/users/Xowap/repos", "events_url": "https://api.github.com/users/Xowap/events{/privacy}", "received_events_url": "https://api.github.com/users/Xowap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-25T16:53:05Z", "updated_at": "2020-01-20T20:05:14Z", "closed_at": "2020-01-14T18:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nUsing `uvicorn==0.10.8`, I'm coding something that sends huuuuuge files. It's based on Django Channels.\r\n\r\nHere is my router:\r\n\r\n```python\r\napplication = ProtocolTypeRouter(\r\n    {\r\n        \"http\": AuthMiddlewareStack(\r\n            URLRouter(\r\n                [\r\n                    url(r\"^ah/(?P<file_size>\\d+)\\.ah$\", AhConsumer),\r\n                    url(r\"\", AsgiHandler),\r\n                ]\r\n            )\r\n        )\r\n    }\r\n)\r\n```\r\n\r\nAnd here is my consumer:\r\n\r\n```python\r\nclass AhConsumer(AsyncHttpConsumer):\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        self._running = True\r\n\r\n    async def disconnect(self):\r\n        print(\"RECEIVED DISCONNECT\")\r\n        self._running = False\r\n\r\n    async def handle(self, body: AnyStr) -> None:\r\n        try:\r\n            size = int(self.scope[\"url_route\"][\"kwargs\"][\"file_size\"])\r\n            print(size)\r\n\r\n            await self.send_headers(\r\n                status=200,\r\n                headers=[\r\n                    (b\"Content-Length\", f\"{size}\".encode(\"utf-8\")),\r\n                    (b\"Content-Type\", b\"application/octet-stream\"),\r\n                    (b\"Content-Disposition\", b\"attachment; file.ah\"),\r\n                ],\r\n            )\r\n\r\n            bf = BigFile(size)\r\n\r\n            for i in range(0, bf.size, 0xffff):\r\n                if not self._running:\r\n                    break\r\n\r\n                await self.send_body(await bf.read(0xffff), more_body=True)\r\n\r\n            await self.send_body(b'')\r\n        except Exception:\r\n            print_exc()\r\n            raise\r\n```\r\n\r\nFor reference, `disconnect()` method is called when a `http.disconnect` message is received.\r\n\r\nTurns out that `http.disconnect` doesn't seem to be sent because `disconnect()` never gets called.\r\n\r\nAlso for reference, here is the `BigFile` implementation:\r\n\r\n```python\r\nclass BigFile(DataStream):\r\n    def __init__(self, size: int):\r\n        self.size = size\r\n        self.read_bytes = 0\r\n\r\n    async def read(self, length: int) -> bytes:\r\n        remain = max(0, self.size - self.read_bytes)\r\n        to_read = min(remain, length)\r\n        self.read_bytes += to_read\r\n\r\n        return b\"a\" * to_read\r\n```\r\n\r\nWould anyone know if the `http.disconnect` is supposed to be sent? If I'm doing something wrong?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/500", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/500/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/500/events", "html_url": "https://github.com/encode/uvicorn/issues/500", "id": 528084510, "node_id": "MDU6SXNzdWU1MjgwODQ1MTA=", "number": 500, "title": "Environment variable-based configuration", "user": {"login": "Stigjb", "id": 418181, "node_id": "MDQ6VXNlcjQxODE4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/418181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stigjb", "html_url": "https://github.com/Stigjb", "followers_url": "https://api.github.com/users/Stigjb/followers", "following_url": "https://api.github.com/users/Stigjb/following{/other_user}", "gists_url": "https://api.github.com/users/Stigjb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stigjb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stigjb/subscriptions", "organizations_url": "https://api.github.com/users/Stigjb/orgs", "repos_url": "https://api.github.com/users/Stigjb/repos", "events_url": "https://api.github.com/users/Stigjb/events{/privacy}", "received_events_url": "https://api.github.com/users/Stigjb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T13:24:02Z", "updated_at": "2019-12-09T13:02:06Z", "closed_at": "2019-12-09T13:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Feature request\r\n\r\nI would appreciate the ability to set options for the `uvicorn` script using environment variables, similar to what [Flask enables](https://flask.palletsprojects.com/en/1.1.x/config/#configuring-from-environment-variables).\r\n\r\nThis would allow setting options using `.env`-files, which are automatically sourced by tools such as Pipenv. The options can easily be overridden on the command line.\r\n\r\nExample:\r\n\r\n```bash\r\n$ UVICORN_PORT=8080 UVICORN_RELOAD=true uvicorn run app:app\r\n```\r\n\r\n`click` could enable large part of the functionality using the `auto_envvar_prefix` option, as described in the [click docs](https://click.palletsprojects.com/en/7.x/options/?highlight=environment%20variables#values-from-environment-variables).\r\n\r\nThis issue could be tied to the discussion in #322 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/499", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/499/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/499/events", "html_url": "https://github.com/encode/uvicorn/issues/499", "id": 527572442, "node_id": "MDU6SXNzdWU1Mjc1NzI0NDI=", "number": 499, "title": "Uvicorn processes connections before startup.complete", "user": {"login": "zhammer", "id": 6956487, "node_id": "MDQ6VXNlcjY5NTY0ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6956487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhammer", "html_url": "https://github.com/zhammer", "followers_url": "https://api.github.com/users/zhammer/followers", "following_url": "https://api.github.com/users/zhammer/following{/other_user}", "gists_url": "https://api.github.com/users/zhammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhammer/subscriptions", "organizations_url": "https://api.github.com/users/zhammer/orgs", "repos_url": "https://api.github.com/users/zhammer/repos", "events_url": "https://api.github.com/users/zhammer/events{/privacy}", "received_events_url": "https://api.github.com/users/zhammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-23T15:43:05Z", "updated_at": "2020-01-20T16:15:06Z", "closed_at": "2020-01-20T16:15:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# summary\r\n\r\nthe asgi ref says in the [event startup complete docs](https://github.com/django/asgiref/blob/master/specs/lifespan.rst#startup-complete):\r\n> Sent by the application when it has completed its startup. A server must wait for this message before it starts processing connections.\r\n\r\nit seems to me that uvicorn *will* handle requests before lifespan startup is complete (outlined here: https://github.com/encode/starlette/issues/733)\r\n\r\n*by L419 uvicorn is accepting connections, startup doesn't begin until 439*\r\nhttps://github.com/encode/uvicorn/blob/4da64be4335ba50e43d7ac8c3b5535460a9c1594/uvicorn/main.py#L416-L443\r\n\r\n# potential fix\r\n\r\none potential fix is to not call `loop.create_server` until after `self.lifespan.startup()` is called in `Server.startup`.  (https://github.com/encode/uvicorn/pull/498)\r\n\r\nif asgiref means that the server literally should not accept incoming connections until startup is complete (i.e., we don't open any sockets until startup is complete) this'd make sense", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/497", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/497/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/497/events", "html_url": "https://github.com/encode/uvicorn/issues/497", "id": 527557608, "node_id": "MDU6SXNzdWU1Mjc1NTc2MDg=", "number": 497, "title": "should_use_colors inside debugger", "user": {"login": "euri10", "id": 1104190, "node_id": "MDQ6VXNlcjExMDQxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euri10", "html_url": "https://github.com/euri10", "followers_url": "https://api.github.com/users/euri10/followers", "following_url": "https://api.github.com/users/euri10/following{/other_user}", "gists_url": "https://api.github.com/users/euri10/gists{/gist_id}", "starred_url": "https://api.github.com/users/euri10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euri10/subscriptions", "organizations_url": "https://api.github.com/users/euri10/orgs", "repos_url": "https://api.github.com/users/euri10/repos", "events_url": "https://api.github.com/users/euri10/events{/privacy}", "received_events_url": "https://api.github.com/users/euri10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-23T13:30:06Z", "updated_at": "2019-12-09T12:22:30Z", "closed_at": "2019-12-09T12:22:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the colorized formatter in pycharm debugger doesnt work (it displays everything in black) because for the `AccessFormatter` we have\r\n```\r\n    def should_use_colors(self):\r\n        return sys.stdout.isatty()\r\n```\r\nthat returns False and same for the `DefaultFormatter`, where\r\n```\r\n    def should_use_colors(self):\r\n        return sys.stderr.isatty()\r\n``` \r\nthat returns the same False\r\n\r\nIn that particular case, the process is ran with [pydevd](https://github.com/fabioz/PyDev.Debugger).\r\nI'm not familar with its internals, but a quick look makes me think it redirects stderr/stdout \r\nhttps://github.com/fabioz/PyDev.Debugger/search?q=isatty&type=Code \r\n\r\ndo you think the `should_use_colors` test could be improved or that I should raise an issue there ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/encode/uvicorn/issues/496", "repository_url": "https://api.github.com/repos/encode/uvicorn", "labels_url": "https://api.github.com/repos/encode/uvicorn/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/encode/uvicorn/issues/496/comments", "events_url": "https://api.github.com/repos/encode/uvicorn/issues/496/events", "html_url": "https://github.com/encode/uvicorn/issues/496", "id": 527552363, "node_id": "MDU6SXNzdWU1Mjc1NTIzNjM=", "number": 496, "title": "\"bad interpreter: No such file or directory\" error if virtual env is in a folder with whitespaces", "user": {"login": "ulf1", "id": 8018044, "node_id": "MDQ6VXNlcjgwMTgwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8018044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulf1", "html_url": "https://github.com/ulf1", "followers_url": "https://api.github.com/users/ulf1/followers", "following_url": "https://api.github.com/users/ulf1/following{/other_user}", "gists_url": "https://api.github.com/users/ulf1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulf1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulf1/subscriptions", "organizations_url": "https://api.github.com/users/ulf1/orgs", "repos_url": "https://api.github.com/users/ulf1/repos", "events_url": "https://api.github.com/users/ulf1/events{/privacy}", "received_events_url": "https://api.github.com/users/ulf1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-23T12:36:41Z", "updated_at": "2019-11-28T09:38:52Z", "closed_at": "2019-11-25T09:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "# replicate the error\r\n(1) install a virtual env in a folder with whitespaces\r\n\r\n```\r\nmkdir -p \"${HOME}/folder with whitespaces/\"\r\ncd \"${HOME}/folder with whitespaces/\"\r\n\r\npython3 -m venv .venv\r\nsource .venv/bin/activate\r\npip install uvicorn fastapi\r\n```\r\n(2) main.py\r\n\r\n```\r\nfrom fastapi import FastAPI\r\napp = FastAPI()\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n(3) Try to start server\r\n\r\n```\r\nuvicorn main:app --reload\r\n```\r\n\r\nError message\r\n\r\n```\r\n-bash: /Users/uh/folder with whitespaces/.venv/bin/uvicorn: \"/Users/uh/folder: bad interpreter: No such file or directory\r\n```\r\n\r\n# my guess\r\nI guess you are using something like \r\n\r\n```\r\nfilepath=${filepath}\r\n```\r\n\r\ninstead of\r\n\r\n```\r\nfilepath=\"${filepath}\"\r\n```\r\n\r\nsomewhere\r\n", "performed_via_github_app": null, "score": 1.0}]}